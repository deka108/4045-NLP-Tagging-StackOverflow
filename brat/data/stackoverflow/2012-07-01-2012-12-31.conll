O	0	8	Question
O	8	9	-
O	9	17	13102045

O	18	19	I
O	20	22	am
O	23	28	using
B-api_mention	29	36	Scanner
O	37	44	methods
B-api_mention	45	52	nextInt
I-api_mention	52	53	(
I-api_mention	53	57	args
I-api_mention	57	58	)
O	59	62	and
B-api_mention	63	71	nextLine
I-api_mention	71	72	(
I-api_mention	72	76	args
I-api_mention	76	77	)
O	78	81	for
O	82	89	reading
O	90	95	input
O	95	96	.

O	97	106	Basically
O	106	107	,
O	108	110	it
O	111	116	looks
O	117	121	like
O	122	126	this
O	126	127	:
O	128	129	#
O	129	132	pre
O	133	136	The
O	137	144	problem
O	145	147	is
O	148	152	that
O	153	158	after
O	159	167	entering
O	168	171	the
O	172	181	numerical
O	182	187	value
O	187	188	,
O	189	192	the
O	193	198	first
O	199	204	input
O	204	205	.
B-api_mention	205	213	nextLine
I-api_mention	213	214	(
I-api_mention	214	218	args
I-api_mention	218	219	)
O	220	222	is
O	223	230	skipped
O	231	234	and
O	235	238	the
O	239	245	second
O	246	251	input
O	251	252	.
B-api_mention	252	260	nextLine
I-api_mention	260	261	(
I-api_mention	261	265	args
I-api_mention	265	266	)
O	267	269	is
O	270	278	executed
O	278	279	,
O	280	282	so
O	283	287	that
O	288	290	my
O	291	297	output
O	298	303	looks
O	304	308	like
O	309	313	this
O	313	314	:
O	315	316	#
O	316	319	pre
O	320	321	I
O	322	328	tested
O	329	331	my
O	332	343	application
O	344	347	and
O	348	350	it
O	351	356	looks
O	357	361	like
O	362	365	the
O	366	373	problem
O	374	378	lies
O	379	381	in
O	382	387	using
O	388	393	input
O	393	394	.
B-api_mention	394	401	nextInt
I-api_mention	401	402	(
I-api_mention	402	406	args
I-api_mention	406	407	)
O	408	409	.

O	410	412	If
O	413	414	I
O	415	421	delete
O	422	424	it
O	424	425	,
O	426	430	then
O	431	435	both
O	436	443	string1
O	444	445	=
O	446	451	input
O	451	452	.
B-api_mention	452	460	nextLine
I-api_mention	460	461	(
I-api_mention	461	465	args
I-api_mention	465	466	)
O	467	470	and
O	471	478	string2
O	479	480	=
O	481	486	input
O	486	487	.
B-api_mention	487	495	nextLine
I-api_mention	495	496	(
I-api_mention	496	500	args
I-api_mention	500	501	)
O	502	505	are
O	506	514	executed
O	515	517	as
O	518	519	I
O	520	524	want
O	525	529	them
O	530	532	to
O	533	535	be
O	535	536	.

O	538	546	Question
O	546	547	-
O	547	555	11359187

O	556	559	For
O	560	563	the
O	564	569	first
O	570	574	time
O	575	577	in
O	578	580	my
O	581	585	life
O	586	587	I
O	588	592	find
O	593	599	myself
O	600	602	in
O	603	604	a
O	605	613	position
O	614	619	where
O	620	621	I
O	621	622	'
O	622	623	m
O	624	631	writing
O	632	633	a
O	634	638	Java
O	639	642	API
O	643	647	that
O	648	652	will
O	653	655	be
O	656	660	open
O	661	668	sourced
O	668	669	.

O	670	679	Hopefully
O	680	682	to
O	683	685	be
O	686	694	included
O	695	697	in
O	698	702	many
O	703	708	other
O	709	717	projects
O	717	718	.

O	719	722	For
O	723	730	logging
O	731	732	I
O	733	734	(
O	734	737	and
O	738	744	indeed
O	745	748	the
O	749	755	people
O	756	757	I
O	758	762	work
O	763	767	with
O	767	768	)
O	769	773	have
O	774	780	always
O	781	785	used
O	786	789	JUL
O	790	791	(
O	791	795	java
O	795	796	.
O	796	800	util
O	800	801	.
O	801	808	logging
O	808	809	)
O	810	813	and
O	814	819	never
O	820	823	had
O	824	827	any
O	828	834	issues
O	835	839	with
O	840	842	it
O	842	843	.

O	844	851	However
O	852	855	now
O	856	857	I
O	858	862	need
O	863	865	to
O	866	876	understand
O	877	879	in
O	880	884	more
O	885	891	detail
O	892	896	what
O	897	898	I
O	899	905	should
O	906	908	do
O	909	912	for
O	913	915	my
O	916	919	API
O	920	931	development
O	931	932	.

O	933	934	I
O	934	935	'
O	935	937	ve
O	938	942	done
O	943	947	some
O	948	956	research
O	957	959	on
O	960	964	this
O	965	968	and
O	969	973	with
O	974	977	the
O	978	989	information
O	990	991	I
O	991	992	'
O	992	994	ve
O	995	998	got
O	999	1000	I
O	1001	1005	just
O	1006	1009	get
O	1010	1014	more
O	1015	1023	confused
O	1023	1024	.

O	1025	1030	Hence
O	1031	1035	this
O	1036	1040	post
O	1040	1041	.

O	1042	1047	Since
O	1048	1049	I
O	1050	1054	come
O	1055	1059	from
O	1060	1063	JUL
O	1064	1065	I
O	1065	1066	'
O	1066	1067	m
O	1068	1074	biased
O	1075	1077	on
O	1078	1082	that
O	1082	1083	.

O	1084	1086	My
O	1087	1096	knowledge
O	1097	1099	of
O	1100	1103	the
O	1104	1108	rest
O	1109	1111	is
O	1112	1115	not
O	1116	1120	that
O	1121	1124	big
O	1124	1125	.

O	1126	1130	From
O	1131	1134	the
O	1135	1143	research
O	1144	1145	I
O	1145	1146	'
O	1146	1148	ve
O	1149	1153	done
O	1154	1155	I
O	1155	1156	'
O	1156	1158	ve
O	1159	1163	come
O	1164	1166	up
O	1167	1171	with
O	1172	1177	these
O	1178	1185	reasons
O	1186	1189	why
O	1190	1196	people
O	1197	1199	do
O	1200	1203	not
O	1204	1208	like
O	1209	1212	JUL
O	1212	1213	:
O	1214	1215	#
O	1215	1217	li
O	1218	1219	"
O	1219	1220	I
O	1221	1228	started
O	1229	1239	developing
O	1240	1242	in
O	1243	1247	Java
O	1248	1252	long
O	1253	1259	before
O	1260	1263	Sun
O	1264	1272	released
O	1273	1276	JUL
O	1277	1280	and
O	1281	1283	it
O	1284	1287	was
O	1288	1292	just
O	1293	1299	easier
O	1300	1303	for
O	1304	1306	me
O	1307	1309	to
O	1310	1318	continue
O	1319	1323	with
O	1324	1331	logging
O	1331	1332	-
O	1332	1341	framework
O	1341	1342	-
O	1342	1343	X
O	1344	1350	rather
O	1351	1355	than
O	1356	1358	to
O	1359	1364	learn
O	1365	1374	something
O	1375	1378	new
O	1378	1379	"
O	1380	1381	.

O	1382	1385	Hmm
O	1385	1386	.

O	1387	1388	I
O	1388	1389	'
O	1389	1390	m
O	1391	1394	not
O	1395	1402	kidding
O	1402	1403	,
O	1404	1408	this
O	1409	1411	is
O	1412	1420	actually
O	1421	1425	what
O	1426	1432	people
O	1433	1436	say
O	1436	1437	.

O	1438	1442	With
O	1443	1447	this
O	1448	1456	argument
O	1457	1459	we
O	1460	1465	could
O	1466	1469	all
O	1470	1472	be
O	1473	1478	doing
O	1479	1484	COBOL
O	1484	1485	.

O	1486	1487	(
O	1487	1494	however
O	1495	1496	I
O	1497	1500	can
O	1501	1510	certainly
O	1511	1517	relate
O	1518	1520	to
O	1521	1525	this
O	1526	1531	being
O	1532	1533	a
O	1534	1538	lazy
O	1539	1543	dude
O	1544	1550	myself
O	1550	1551	)
O	1552	1553	#
O	1553	1555	li
O	1556	1557	"
O	1557	1558	I
O	1559	1562	don
O	1562	1563	'
O	1563	1564	t
O	1565	1569	like
O	1570	1573	the
O	1574	1579	names
O	1580	1582	of
O	1583	1586	the
O	1587	1594	logging
O	1595	1601	levels
O	1602	1604	in
O	1605	1608	JUL
O	1608	1609	"
O	1610	1611	.

O	1612	1614	Ok
O	1614	1615	,
O	1616	1625	seriously
O	1625	1626	,
O	1627	1631	this
O	1632	1634	is
O	1635	1639	just
O	1640	1643	not
O	1644	1650	enough
O	1651	1653	of
O	1654	1655	a
O	1656	1662	reason
O	1663	1665	to
O	1666	1675	introduce
O	1676	1677	a
O	1678	1681	new
O	1682	1692	dependency
O	1692	1693	.

O	1694	1695	#
O	1695	1697	li
O	1698	1699	"
O	1699	1700	I
O	1701	1704	don
O	1704	1705	'
O	1705	1706	t
O	1707	1711	like
O	1712	1715	the
O	1716	1724	standard
O	1725	1731	format
O	1732	1734	of
O	1735	1738	the
O	1739	1745	output
O	1746	1750	from
O	1751	1754	JUL
O	1754	1755	"
O	1756	1757	.

O	1758	1761	Hmm
O	1761	1762	.

O	1763	1767	This
O	1768	1770	is
O	1771	1775	just
O	1776	1789	configuration
O	1789	1790	.

O	1791	1794	You
O	1795	1797	do
O	1798	1801	not
O	1802	1806	even
O	1807	1811	have
O	1812	1814	to
O	1815	1817	do
O	1818	1826	anything
O	1827	1831	code
O	1831	1832	-
O	1832	1836	wise
O	1836	1837	.

O	1838	1839	(
O	1839	1843	true
O	1843	1844	,
O	1845	1849	back
O	1850	1852	in
O	1853	1856	old
O	1857	1861	days
O	1862	1865	you
O	1866	1869	may
O	1870	1874	have
O	1875	1878	had
O	1879	1881	to
O	1882	1888	create
O	1889	1893	your
O	1894	1897	own
O	1898	1907	Formatter
O	1908	1913	class
O	1914	1916	to
O	1917	1920	get
O	1921	1923	it
O	1924	1929	right
O	1929	1930	)
O	1930	1931	.

O	1932	1933	#
O	1933	1935	li
O	1936	1937	"
O	1937	1938	I
O	1939	1942	use
O	1943	1948	other
O	1949	1958	libraries
O	1959	1963	that
O	1964	1968	also
O	1969	1972	use
O	1973	1980	logging
O	1980	1981	-
O	1981	1990	framework
O	1990	1991	-
O	1991	1992	X
O	1993	1995	so
O	1996	1997	I
O	1998	2005	thought
O	2006	2008	it
O	2009	2015	easier
O	2016	2020	just
O	2021	2023	to
O	2024	2027	use
O	2028	2032	that
O	2033	2036	one
O	2036	2037	"
O	2038	2039	.

O	2040	2044	This
O	2045	2047	is
O	2048	2049	a
O	2050	2056	cyclic
O	2057	2065	argument
O	2065	2066	,
O	2067	2070	isn
O	2070	2071	'
O	2071	2072	t
O	2073	2074	?

O	2075	2078	Why
O	2079	2083	does
O	2084	2085	'
O	2085	2094	everybody
O	2094	2095	'
O	2096	2099	use
O	2100	2107	logging
O	2107	2108	-
O	2108	2117	framework
O	2117	2118	-
O	2118	2119	X
O	2120	2123	and
O	2124	2127	not
O	2128	2131	JUL
O	2131	2132	?

O	2133	2134	#
O	2134	2136	li
O	2137	2138	"
O	2138	2147	Everybody
O	2148	2152	else
O	2153	2155	is
O	2156	2161	using
O	2162	2169	logging
O	2169	2170	-
O	2170	2179	framework
O	2179	2180	-
O	2180	2181	X
O	2181	2182	"
O	2183	2184	.

O	2185	2189	This
O	2190	2192	to
O	2193	2195	me
O	2196	2198	is
O	2199	2203	just
O	2204	2205	a
O	2206	2213	special
O	2214	2218	case
O	2219	2221	of
O	2222	2225	the
O	2226	2231	above
O	2231	2232	.

O	2233	2241	Majority
O	2242	2244	is
O	2245	2248	not
O	2249	2255	always
O	2256	2261	right
O	2261	2262	.

O	2263	2265	So
O	2266	2269	the
O	2270	2274	real
O	2275	2278	big
O	2279	2287	question
O	2288	2290	is
O	2291	2294	why
O	2295	2298	not
O	2299	2302	JUL
O	2302	2303	?

O	2304	2305	.
O	2306	2310	What
O	2311	2313	is
O	2314	2316	it
O	2317	2318	I
O	2319	2323	have
O	2324	2330	missed
O	2331	2332	?

O	2333	2336	The
O	2337	2343	raison
O	2344	2345	d
O	2345	2346	'
O	2346	2347	Ã
O	2347	2348	ª
O	2348	2351	tre
O	2352	2355	for
O	2356	2363	logging
O	2364	2371	facades
O	2372	2373	(
O	2373	2378	SLF4J
O	2378	2379	,
O	2380	2383	JCL
O	2383	2384	)
O	2385	2387	is
O	2388	2392	that
O	2393	2401	multiple
O	2402	2409	logging
O	2410	2425	implementations
O	2426	2430	have
O	2431	2438	existed
O	2439	2451	historically
O	2452	2455	and
O	2456	2459	the
O	2460	2466	reason
O	2467	2470	for
O	2471	2475	that
O	2476	2482	really
O	2483	2487	goes
O	2488	2492	back
O	2493	2495	to
O	2496	2499	the
O	2500	2503	era
O	2504	2510	before
O	2511	2514	JUL
O	2515	2517	as
O	2518	2519	I
O	2520	2523	see
O	2524	2526	it
O	2526	2527	.

O	2528	2530	If
O	2531	2534	JUL
O	2535	2538	was
O	2539	2546	perfect
O	2547	2551	then
O	2552	2559	logging
O	2560	2567	facades
O	2568	2574	wouldn
O	2574	2575	'
O	2575	2576	t
O	2577	2582	exist
O	2582	2583	,
O	2584	2586	or
O	2587	2591	what
O	2591	2592	?

O	2593	2599	Rather
O	2600	2604	than
O	2605	2614	embracing
O	2615	2619	them
O	2620	2627	shouldn
O	2627	2628	'
O	2628	2629	t
O	2630	2632	we
O	2633	2641	question
O	2642	2645	why
O	2646	2650	they
O	2651	2655	were
O	2656	2665	necessary
O	2666	2668	in
O	2669	2672	the
O	2673	2678	first
O	2679	2684	place
O	2684	2685	?

O	2686	2687	(
O	2687	2690	and
O	2691	2694	see
O	2695	2697	if
O	2698	2703	those
O	2704	2711	reasons
O	2712	2717	still
O	2718	2723	exist
O	2723	2724	)
O	2725	2727	Ok
O	2727	2728	,
O	2729	2731	my
O	2732	2740	research
O	2741	2743	so
O	2744	2747	far
O	2748	2751	has
O	2752	2755	led
O	2756	2758	to
O	2759	2760	a
O	2761	2767	couple
O	2768	2770	of
O	2771	2777	things
O	2778	2782	that
O	2783	2784	I
O	2785	2788	can
O	2789	2792	see
O	2793	2796	may
O	2797	2799	be
O	2800	2804	real
O	2805	2811	issues
O	2812	2816	with
O	2817	2820	JUL
O	2820	2821	:
O	2822	2823	#
O	2823	2825	li
O	2826	2837	Performance
O	2838	2839	.

O	2840	2844	Some
O	2845	2848	say
O	2849	2853	that
O	2854	2865	performance
O	2866	2868	in
O	2869	2874	SLF4J
O	2875	2877	is
O	2878	2886	superior
O	2887	2889	to
O	2890	2893	the
O	2894	2898	rest
O	2898	2899	.

O	2900	2904	This
O	2905	2910	seems
O	2911	2913	to
O	2914	2916	me
O	2917	2919	to
O	2920	2922	be
O	2923	2924	a
O	2925	2929	case
O	2930	2932	of
O	2933	2942	premature
O	2943	2955	optimization
O	2955	2956	.

O	2957	2959	If
O	2960	2963	you
O	2964	2968	need
O	2969	2971	to
O	2972	2975	log
O	2976	2984	hundreds
O	2985	2987	of
O	2988	2997	megabytes
O	2998	3001	per
O	3002	3008	second
O	3009	3013	then
O	3014	3015	I
O	3015	3016	'
O	3016	3017	m
O	3018	3021	not
O	3022	3026	sure
O	3027	3030	you
O	3031	3034	are
O	3035	3037	on
O	3038	3041	the
O	3042	3047	right
O	3048	3052	path
O	3053	3059	anyway
O	3059	3060	.

O	3061	3064	JUL
O	3065	3068	has
O	3069	3073	also
O	3074	3081	evolved
O	3082	3085	and
O	3086	3089	the
O	3090	3095	tests
O	3096	3099	you
O	3100	3103	did
O	3104	3106	on
O	3107	3111	Java
O	3112	3113	1
O	3113	3114	.
O	3114	3115	4
O	3116	3119	may
O	3120	3122	no
O	3123	3129	longer
O	3130	3132	be
O	3133	3137	true
O	3137	3138	.

O	3139	3142	You
O	3143	3146	can
O	3147	3151	read
O	3152	3157	about
O	3158	3160	it
O	3161	3165	here
O	3166	3169	and
O	3170	3174	this
O	3175	3178	fix
O	3179	3182	has
O	3183	3187	made
O	3188	3190	it
O	3191	3195	into
O	3196	3200	Java
O	3201	3202	7
O	3202	3203	.

O	3204	3208	Many
O	3209	3213	also
O	3214	3218	talk
O	3219	3224	about
O	3225	3228	the
O	3229	3237	overhead
O	3238	3240	of
O	3241	3247	string
O	3248	3261	concatenation
O	3262	3264	in
O	3265	3272	logging
O	3273	3280	methods
O	3280	3281	.

O	3282	3289	However
O	3290	3298	template
O	3299	3304	based
O	3305	3312	logging
O	3313	3319	avoids
O	3320	3324	this
O	3325	3329	cost
O	3330	3333	and
O	3334	3336	it
O	3337	3342	exist
O	3343	3347	also
O	3348	3350	in
O	3351	3354	JUL
O	3354	3355	.

O	3356	3366	Personally
O	3367	3368	I
O	3369	3374	never
O	3375	3381	really
O	3382	3387	write
O	3388	3396	template
O	3397	3402	based
O	3403	3410	logging
O	3410	3411	.

O	3412	3415	Too
O	3416	3420	lazy
O	3421	3424	for
O	3425	3429	that
O	3429	3430	.

O	3431	3434	For
O	3435	3442	example
O	3443	3445	if
O	3446	3447	I
O	3448	3450	do
O	3451	3455	this
O	3456	3460	with
O	3461	3464	JUL
O	3464	3465	:
O	3466	3469	log
O	3469	3470	.
O	3470	3476	finest
O	3476	3477	(
O	3477	3481	args
O	3481	3482	)
O	3482	3483	)
O	3483	3484	;
O	3485	3487	my
O	3488	3491	IDE
O	3492	3496	will
O	3497	3501	warn
O	3502	3504	me
O	3505	3508	and
O	3509	3512	ask
O	3513	3523	permission
O	3524	3528	that
O	3529	3531	it
O	3532	3538	should
O	3539	3545	change
O	3546	3548	it
O	3549	3551	to
O	3551	3552	:
O	3553	3556	log
O	3556	3557	.
O	3557	3560	log
O	3560	3561	(
O	3561	3565	args
O	3565	3566	)
O	3566	3567	;
O	3568	3569	.
O	3569	3570	.
O	3571	3576	which
O	3577	3578	I
O	3579	3583	will
O	3584	3586	of
O	3587	3593	course
O	3594	3600	accept
O	3600	3601	.

O	3602	3612	Permission
O	3613	3620	granted
O	3621	3622	!

O	3623	3628	Thank
O	3629	3632	you
O	3633	3636	for
O	3637	3641	your
O	3642	3646	help
O	3646	3647	.

O	3648	3650	So
O	3651	3652	I
O	3653	3656	don
O	3656	3657	'
O	3657	3658	t
O	3659	3667	actually
O	3668	3673	write
O	3674	3678	such
O	3679	3689	statements
O	3690	3696	myself
O	3696	3697	,
O	3698	3702	that
O	3703	3705	is
O	3706	3710	done
O	3711	3713	by
O	3714	3717	the
O	3718	3721	IDE
O	3721	3722	.

O	3723	3725	In
O	3726	3736	conclusion
O	3737	3739	on
O	3740	3743	the
O	3744	3749	issue
O	3750	3752	of
O	3753	3764	performance
O	3765	3766	I
O	3767	3772	haven
O	3772	3773	'
O	3773	3774	t
O	3775	3780	found
O	3781	3789	anything
O	3790	3794	that
O	3795	3800	would
O	3801	3808	suggest
O	3809	3813	that
O	3814	3817	JUL
O	3817	3818	'
O	3818	3819	s
O	3820	3831	performance
O	3832	3834	is
O	3835	3838	not
O	3839	3841	ok
O	3842	3850	compared
O	3851	3853	to
O	3854	3857	the
O	3858	3869	competition
O	3869	3870	.

O	3871	3872	#
O	3872	3874	li
O	3875	3888	Configuration
O	3889	3893	from
O	3894	3903	classpath
O	3904	3905	.

O	3906	3909	Out
O	3909	3910	-
O	3910	3912	of
O	3912	3913	-
O	3913	3916	the
O	3916	3917	-
O	3917	3920	box
O	3921	3924	JUL
O	3925	3931	cannot
O	3932	3936	load
O	3937	3938	a
O	3939	3952	configuration
O	3953	3957	file
O	3958	3962	from
O	3963	3966	the
O	3967	3976	classpath
O	3976	3977	.

O	3978	3980	It
O	3981	3983	is
O	3984	3985	a
O	3986	3989	few
O	3990	3995	lines
O	3996	3998	of
O	3999	4003	code
O	4004	4006	to
O	4007	4011	make
O	4012	4014	it
O	4015	4017	do
O	4018	4020	so
O	4020	4021	.

O	4022	4023	I
O	4024	4027	can
O	4028	4031	see
O	4032	4035	why
O	4036	4040	this
O	4041	4044	may
O	4045	4047	be
O	4048	4056	annoying
O	4057	4060	but
O	4061	4064	the
O	4065	4073	solution
O	4074	4076	is
O	4077	4082	short
O	4083	4086	and
O	4087	4093	simple
O	4093	4094	.

O	4095	4096	#
O	4096	4098	li
O	4099	4111	Availability
O	4112	4114	of
O	4115	4121	output
O	4122	4130	handlers
O	4131	4132	.

O	4133	4136	JUL
O	4137	4142	comes
O	4143	4147	with
O	4148	4149	5
O	4150	4156	output
O	4157	4165	handlers
O	4166	4169	out
O	4169	4170	-
O	4170	4172	of
O	4172	4173	-
O	4173	4176	the
O	4176	4177	-
O	4177	4180	box
O	4180	4181	:
O	4182	4189	console
O	4189	4190	,
O	4191	4195	file
O	4196	4202	stream
O	4202	4203	,
O	4204	4210	socket
O	4211	4214	and
O	4215	4221	memory
O	4221	4222	.

O	4223	4228	These
O	4229	4232	can
O	4233	4235	be
O	4236	4244	extended
O	4245	4247	or
O	4248	4251	new
O	4252	4256	ones
O	4257	4260	can
O	4261	4263	be
O	4264	4271	written
O	4271	4272	.

O	4273	4277	This
O	4278	4281	may
O	4282	4285	for
O	4286	4293	example
O	4294	4296	be
O	4297	4304	writing
O	4305	4307	to
O	4308	4312	UNIX
O	4312	4313	/
O	4313	4318	Linux
O	4319	4325	Syslog
O	4326	4329	and
O	4330	4337	Windows
O	4338	4343	Event
O	4344	4347	Log
O	4347	4348	.

O	4349	4350	I
O	4351	4355	have
O	4356	4366	personally
O	4367	4372	never
O	4373	4376	had
O	4377	4381	this
O	4382	4393	requirement
O	4394	4397	nor
O	4398	4402	have
O	4403	4404	I
O	4405	4409	seen
O	4410	4412	it
O	4413	4417	used
O	4418	4421	but
O	4422	4423	I
O	4424	4427	can
O	4428	4437	certainly
O	4438	4444	relate
O	4445	4447	to
O	4448	4451	why
O	4452	4454	it
O	4455	4458	may
O	4459	4461	be
O	4462	4463	a
O	4464	4470	useful
O	4471	4478	feature
O	4478	4479	.

O	4480	4487	Logback
O	4488	4493	comes
O	4494	4498	with
O	4499	4501	an
O	4502	4510	appender
O	4511	4514	for
O	4515	4521	Syslog
O	4522	4525	for
O	4526	4533	example
O	4533	4534	.

O	4535	4540	Still
O	4541	4542	I
O	4543	4548	would
O	4549	4554	argue
O	4555	4559	that
O	4560	4561	#
O	4561	4563	li
O	4564	4566	99
O	4566	4567	.
O	4567	4568	5
O	4568	4569	%
O	4570	4572	of
O	4573	4576	the
O	4577	4582	needs
O	4583	4586	for
O	4587	4593	output
O	4594	4606	destinations
O	4607	4610	are
O	4611	4618	covered
O	4619	4621	by
O	4622	4626	what
O	4627	4629	is
O	4630	4632	in
O	4633	4636	JUL
O	4637	4640	out
O	4640	4641	-
O	4641	4643	of
O	4643	4644	-
O	4644	4647	the
O	4647	4648	-
O	4648	4651	box
O	4651	4652	.

O	4653	4654	#
O	4654	4656	li
O	4657	4664	Special
O	4665	4670	needs
O	4671	4676	could
O	4677	4679	be
O	4680	4687	catered
O	4688	4691	for
O	4692	4694	by
O	4695	4701	custom
O	4702	4710	handlers
O	4711	4713	on
O	4714	4717	top
O	4718	4720	of
O	4721	4724	JUL
O	4725	4731	rather
O	4732	4736	than
O	4737	4739	on
O	4740	4743	top
O	4744	4746	of
O	4747	4756	something
O	4757	4761	else
O	4761	4762	.

O	4763	4768	There
O	4768	4769	'
O	4769	4770	s
O	4771	4778	nothing
O	4779	4781	to
O	4782	4784	me
O	4785	4789	that
O	4790	4798	suggests
O	4799	4803	that
O	4804	4806	it
O	4807	4812	takes
O	4813	4817	more
O	4818	4822	time
O	4823	4825	to
O	4826	4831	write
O	4832	4833	a
O	4834	4840	Syslog
O	4841	4847	output
O	4848	4855	handler
O	4856	4859	for
O	4860	4863	JUL
O	4864	4868	than
O	4869	4871	it
O	4872	4876	does
O	4877	4880	for
O	4881	4888	another
O	4889	4896	logging
O	4897	4906	framework
O	4906	4907	.

O	4908	4909	I
O	4909	4910	'
O	4910	4911	m
O	4912	4918	really
O	4919	4928	concerned
O	4929	4933	that
O	4934	4939	there
O	4939	4940	'
O	4940	4941	s
O	4942	4951	something
O	4952	4953	I
O	4953	4954	'
O	4954	4956	ve
O	4957	4967	overlooked
O	4967	4968	.

O	4969	4972	The
O	4973	4976	use
O	4977	4979	of
O	4980	4987	logging
O	4988	4995	facades
O	4996	4999	and
O	5000	5007	logging
O	5008	5023	implementations
O	5024	5029	other
O	5030	5034	than
O	5035	5038	JUL
O	5039	5041	is
O	5042	5044	so
O	5045	5055	widespread
O	5056	5060	that
O	5061	5062	I
O	5063	5067	have
O	5068	5070	to
O	5071	5075	come
O	5076	5078	to
O	5079	5082	the
O	5083	5093	conclusion
O	5094	5098	that
O	5099	5101	it
O	5101	5102	'
O	5102	5103	s
O	5104	5106	me
O	5107	5110	who
O	5111	5115	just
O	5116	5121	doesn
O	5121	5122	'
O	5122	5123	t
O	5124	5134	understand
O	5134	5135	.

O	5136	5140	That
O	5141	5147	wouldn
O	5147	5148	'
O	5148	5149	t
O	5150	5152	be
O	5153	5156	the
O	5157	5162	first
O	5163	5167	time
O	5167	5168	,
O	5169	5170	I
O	5170	5171	'
O	5171	5172	m
O	5173	5179	afraid
O	5179	5180	.

O	5181	5182	:
O	5182	5183	-
O	5183	5184	)
O	5185	5187	So
O	5188	5192	what
O	5193	5199	should
O	5200	5201	I
O	5202	5204	do
O	5205	5209	with
O	5210	5212	my
O	5213	5216	API
O	5216	5217	?

O	5218	5219	I
O	5220	5224	want
O	5225	5227	it
O	5228	5230	to
O	5231	5237	become
O	5238	5248	successful
O	5248	5249	.

O	5250	5251	I
O	5252	5255	can
O	5256	5258	of
O	5259	5265	course
O	5266	5270	just
O	5271	5272	"
O	5272	5274	go
O	5275	5279	with
O	5280	5283	the
O	5284	5288	flow
O	5288	5289	"
O	5290	5293	and
O	5294	5303	implement
O	5304	5309	SLF4J
O	5310	5311	(
O	5311	5316	which
O	5317	5322	seems
O	5323	5326	the
O	5327	5331	most
O	5332	5339	popular
O	5340	5345	these
O	5346	5350	days
O	5350	5351	)
O	5352	5355	but
O	5356	5359	for
O	5360	5362	my
O	5363	5366	own
O	5367	5371	sake
O	5372	5373	I
O	5374	5379	still
O	5380	5384	need
O	5385	5387	to
O	5388	5398	understand
O	5399	5406	exactly
O	5407	5411	what
O	5412	5414	is
O	5415	5420	wrong
O	5421	5425	with
O	5426	5429	the
O	5430	5433	JUL
O	5434	5436	of
O	5437	5442	today
O	5443	5447	that
O	5448	5456	warrants
O	5457	5460	all
O	5461	5464	the
O	5465	5469	fuzz
O	5469	5470	?

O	5471	5475	Will
O	5476	5477	I
O	5478	5486	sabotage
O	5487	5493	myself
O	5494	5496	by
O	5497	5505	choosing
O	5506	5509	JUL
O	5510	5513	for
O	5514	5516	my
O	5517	5524	library
O	5525	5526	?

O	5527	5534	Testing
O	5535	5546	performance
O	5547	5548	(
O	5548	5555	section
O	5556	5561	added
O	5562	5564	by
O	5565	5573	nolan600
O	5574	5576	on
O	5577	5579	07
O	5579	5580	-
O	5580	5583	JUL
O	5583	5584	-
O	5584	5588	2012
O	5588	5589	)
O	5590	5595	There
O	5595	5596	'
O	5596	5597	s
O	5598	5599	a
O	5600	5609	reference
O	5610	5615	below
O	5616	5620	from
O	5621	5625	Ceki
O	5626	5631	about
O	5632	5637	SLF4J
O	5637	5638	'
O	5638	5639	s
O	5640	5655	parametrization
O	5656	5661	being
O	5662	5664	10
O	5665	5670	times
O	5671	5673	or
O	5674	5678	more
O	5679	5685	faster
O	5686	5690	than
O	5691	5694	JUL
O	5694	5695	'
O	5695	5696	s
O	5696	5697	.

O	5698	5700	So
O	5701	5702	I
O	5702	5703	'
O	5703	5705	ve
O	5706	5713	started
O	5714	5719	doing
O	5720	5724	some
O	5725	5731	simple
O	5732	5737	tests
O	5737	5738	.

O	5739	5741	At
O	5742	5747	first
O	5748	5754	glance
O	5755	5758	the
O	5759	5764	claim
O	5765	5767	is
O	5768	5777	certainly
O	5778	5785	correct
O	5785	5786	.

O	5787	5791	Here
O	5792	5795	are
O	5796	5799	the
O	5800	5811	preliminary
O	5812	5819	results
O	5820	5821	(
O	5821	5824	but
O	5825	5829	read
O	5830	5832	on
O	5832	5833	!
O	5833	5834	)
O	5834	5835	:
O	5836	5837	#
O	5837	5839	li
O	5840	5849	Execution
O	5850	5854	time
O	5855	5860	SLF4J
O	5860	5861	,
O	5862	5869	backend
O	5870	5877	Logback
O	5877	5878	:
O	5879	5883	1515
O	5884	5885	#
O	5885	5887	li
O	5888	5897	Execution
O	5898	5902	time
O	5903	5908	SLF4J
O	5908	5909	,
O	5910	5917	backend
O	5918	5921	JUL
O	5921	5922	:
O	5923	5928	12938
O	5929	5930	#
O	5930	5932	li
O	5933	5942	Execution
O	5943	5947	time
O	5948	5951	JUL
O	5951	5952	:
O	5953	5958	16911
O	5959	5962	The
O	5963	5970	numbers
O	5971	5976	above
O	5977	5980	are
O	5981	5986	msecs
O	5987	5989	so
O	5990	5994	less
O	5995	5997	is
O	5998	6004	better
O	6004	6005	.

O	6006	6008	So
O	6009	6011	10
O	6012	6017	times
O	6018	6029	performance
O	6030	6040	difference
O	6041	6043	is
O	6044	6046	by
O	6047	6052	first
O	6053	6061	actually
O	6062	6068	pretty
O	6069	6074	close
O	6074	6075	.

O	6076	6078	My
O	6079	6086	initial
O	6087	6095	reaction
O	6095	6096	:
O	6097	6101	That
O	6102	6104	is
O	6105	6106	a
O	6107	6110	lot
O	6111	6112	!

O	6113	6117	Here
O	6118	6120	is
O	6121	6124	the
O	6125	6129	core
O	6130	6132	of
O	6133	6136	the
O	6137	6141	test
O	6141	6142	.

O	6143	6145	As
O	6146	6149	can
O	6150	6152	be
O	6153	6157	seen
O	6158	6160	an
O	6161	6168	integer
O	6169	6172	and
O	6173	6174	a
O	6175	6181	string
O	6182	6184	is
O	6185	6195	construted
O	6196	6198	in
O	6199	6200	a
O	6201	6205	loop
O	6206	6211	which
O	6212	6214	is
O	6215	6219	then
O	6220	6224	used
O	6225	6227	in
O	6228	6231	the
O	6232	6235	log
O	6236	6245	statement
O	6245	6246	:
O	6247	6248	#
O	6248	6251	pre
O	6252	6253	(
O	6253	6254	I
O	6255	6261	wanted
O	6262	6265	the
O	6266	6269	log
O	6270	6279	statement
O	6280	6282	to
O	6283	6287	have
O	6288	6292	both
O	6293	6294	a
O	6295	6304	primitive
O	6305	6309	data
O	6310	6314	type
O	6315	6316	(
O	6316	6318	in
O	6319	6323	this
O	6324	6328	case
O	6329	6331	an
O	6332	6335	int
O	6335	6336	)
O	6337	6340	and
O	6341	6342	a
O	6343	6347	more
O	6348	6355	complex
O	6356	6360	data
O	6361	6365	type
O	6366	6367	(
O	6367	6369	in
O	6370	6374	this
O	6375	6379	case
O	6380	6381	a
O	6382	6388	String
O	6388	6389	)
O	6389	6390	.
O	6391	6394	Not
O	6395	6399	sure
O	6400	6402	it
O	6403	6410	matters
O	6411	6414	but
O	6415	6420	there
O	6421	6424	you
O	6425	6429	have
O	6430	6432	it
O	6432	6433	.
O	6433	6434	)
O	6435	6438	The
O	6439	6442	log
O	6443	6452	statement
O	6453	6456	for
O	6457	6462	SLF4J
O	6462	6463	:
O	6464	6470	logger
O	6470	6471	.
O	6471	6475	info
O	6475	6476	(
O	6476	6480	args
O	6480	6481	)
O	6481	6482	;
O	6483	6486	The
O	6487	6490	log
O	6491	6500	statement
O	6501	6504	for
O	6505	6508	JUL
O	6508	6509	:
O	6510	6516	logger
O	6516	6517	.
O	6517	6520	log
O	6520	6521	(
O	6521	6525	args
O	6525	6526	)
O	6526	6527	;
O	6528	6531	The
O	6532	6535	JVM
O	6536	6539	was
O	6540	6541	'
O	6541	6547	warmed
O	6548	6550	up
O	6550	6551	'
O	6552	6556	with
O	6557	6560	the
O	6561	6565	same
O	6566	6570	test
O	6571	6579	executed
O	6580	6584	once
O	6585	6591	before
O	6592	6595	the
O	6596	6602	actual
O	6603	6614	measurement
O	6615	6618	was
O	6619	6623	done
O	6623	6624	.

O	6625	6629	Java
O	6630	6631	1
O	6631	6632	.
O	6632	6633	7
O	6633	6634	.
O	6634	6636	03
O	6637	6640	was
O	6641	6645	used
O	6646	6648	on
O	6649	6656	Windows
O	6657	6658	7
O	6658	6659	.

O	6660	6666	Latest
O	6667	6675	versions
O	6676	6678	of
O	6679	6684	SLF4J
O	6685	6686	(
O	6686	6688	v1
O	6688	6689	.
O	6689	6690	6
O	6690	6691	.
O	6691	6692	6
O	6692	6693	)
O	6694	6697	and
O	6698	6705	Logback
O	6706	6707	(
O	6707	6709	v1
O	6709	6710	.
O	6710	6711	0
O	6711	6712	.
O	6712	6713	6
O	6713	6714	)
O	6715	6718	was
O	6719	6723	used
O	6723	6724	.

O	6725	6731	Stdout
O	6732	6735	and
O	6736	6742	stderr
O	6743	6746	was
O	6747	6757	redirected
O	6758	6760	to
O	6761	6765	null
O	6766	6772	device
O	6772	6773	.

O	6774	6781	However
O	6781	6782	,
O	6783	6790	careful
O	6791	6794	now
O	6794	6795	,
O	6796	6798	it
O	6799	6804	turns
O	6805	6808	out
O	6809	6812	JUL
O	6813	6815	is
O	6816	6824	spending
O	6825	6829	most
O	6830	6832	of
O	6833	6836	its
O	6837	6841	time
O	6842	6844	in
B-api_mention	6845	6863	getSourceClassName
I-api_mention	6863	6864	(
I-api_mention	6864	6868	args
O	6868	6869	)
O	6870	6877	because
O	6878	6881	JUL
O	6882	6884	by
O	6885	6892	default
O	6893	6899	prints
O	6900	6903	the
O	6904	6910	source
O	6911	6916	class
O	6917	6921	name
O	6922	6924	in
O	6925	6928	the
O	6929	6935	output
O	6935	6936	,
O	6937	6942	while
O	6943	6950	Logback
O	6951	6956	doesn
O	6956	6957	'
O	6957	6958	t
O	6958	6959	.

O	6960	6962	So
O	6963	6965	we
O	6966	6969	are
O	6970	6979	comparing
O	6980	6986	apples
O	6987	6990	and
O	6991	6998	oranges
O	6998	6999	.

O	7000	7001	I
O	7002	7006	have
O	7007	7009	to
O	7010	7012	do
O	7013	7016	the
O	7017	7021	test
O	7022	7027	again
O	7028	7031	and
O	7032	7041	configure
O	7042	7045	the
O	7046	7053	logging
O	7054	7069	implementations
O	7070	7072	in
O	7073	7074	a
O	7075	7082	similar
O	7083	7089	manner
O	7090	7092	so
O	7093	7097	that
O	7098	7102	they
O	7103	7111	actually
O	7112	7118	output
O	7119	7122	the
O	7123	7127	same
O	7128	7133	stuff
O	7133	7134	.

O	7135	7136	I
O	7137	7139	do
O	7140	7147	however
O	7148	7155	suspect
O	7156	7160	that
O	7161	7166	SLF4J
O	7166	7167	+
O	7167	7174	Logback
O	7175	7179	will
O	7180	7185	still
O	7186	7190	come
O	7191	7194	out
O	7195	7197	on
O	7198	7201	top
O	7202	7205	but
O	7206	7209	far
O	7210	7214	from
O	7215	7218	the
O	7219	7226	initial
O	7227	7234	numbers
O	7235	7237	as
O	7238	7243	given
O	7244	7249	above
O	7249	7250	.

O	7251	7255	Stay
O	7256	7261	tuned
O	7261	7262	.

O	7263	7266	Btw
O	7266	7267	:
O	7268	7271	The
O	7272	7276	test
O	7277	7280	was
O	7281	7286	first
O	7287	7291	time
O	7292	7293	I
O	7293	7294	'
O	7294	7296	ve
O	7297	7305	actually
O	7306	7312	worked
O	7313	7317	with
O	7318	7323	SLF4J
O	7324	7326	or
O	7327	7334	Logback
O	7334	7335	.

O	7336	7337	A
O	7338	7346	pleasant
O	7347	7357	experience
O	7357	7358	.

O	7359	7362	JUL
O	7363	7365	is
O	7366	7375	certainly
O	7376	7377	a
O	7378	7381	lot
O	7382	7386	less
O	7387	7396	welcoming
O	7397	7401	when
O	7402	7405	you
O	7406	7409	are
O	7410	7418	starting
O	7419	7422	out
O	7422	7423	.

O	7424	7431	Testing
O	7432	7443	performance
O	7444	7445	(
O	7445	7449	part
O	7450	7451	2
O	7451	7452	)
O	7453	7454	(
O	7454	7461	section
O	7462	7467	added
O	7468	7470	by
O	7471	7479	nolan600
O	7480	7482	on
O	7483	7485	08
O	7485	7486	-
O	7486	7489	JUL
O	7489	7490	-
O	7490	7494	2012
O	7494	7495	)
O	7496	7498	As
O	7499	7501	it
O	7502	7507	turns
O	7508	7511	out
O	7512	7514	it
O	7515	7520	doesn
O	7520	7521	'
O	7521	7522	t
O	7523	7529	really
O	7530	7536	matter
O	7537	7540	for
O	7541	7552	performance
O	7553	7556	how
O	7557	7560	you
O	7561	7570	configure
O	7571	7575	your
O	7576	7583	pattern
O	7584	7586	in
O	7587	7590	JUL
O	7590	7591	,
O	7592	7593	i
O	7593	7594	.
O	7594	7595	e
O	7595	7596	.
O	7597	7604	whether
O	7605	7607	or
O	7608	7611	not
O	7612	7614	it
O	7615	7623	includes
O	7624	7627	the
O	7628	7634	source
O	7635	7639	name
O	7640	7642	or
O	7643	7646	not
O	7646	7647	.

O	7648	7649	I
O	7650	7655	tried
O	7656	7660	with
O	7661	7662	a
O	7663	7667	very
O	7668	7674	simple
O	7675	7682	pattern
O	7682	7683	:
O	7684	7688	java
O	7688	7689	.
O	7689	7693	util
O	7693	7694	.
O	7694	7701	logging
O	7701	7702	.
O	7702	7717	SimpleFormatter
O	7717	7718	.
O	7718	7724	format
O	7724	7725	=
O	7725	7738	StringLiteral
O	7739	7742	and
O	7743	7747	that
O	7748	7751	did
O	7752	7755	not
O	7756	7762	change
O	7763	7766	the
O	7767	7772	above
O	7773	7780	timings
O	7781	7783	at
O	7784	7787	all
O	7787	7788	.

O	7789	7791	My
O	7792	7800	profiler
O	7801	7809	revealed
O	7810	7814	that
O	7815	7818	the
O	7819	7825	logger
O	7826	7831	still
O	7832	7837	spent
O	7838	7839	a
O	7840	7843	lot
O	7844	7846	of
O	7847	7851	time
O	7852	7854	in
O	7855	7860	calls
O	7861	7863	to
B-api_mention	7864	7882	getSourceClassName
I-api_mention	7882	7883	(
I-api_mention	7883	7887	args
O	7887	7888	)
O	7889	7893	even
O	7894	7896	if
O	7897	7901	this
O	7902	7905	was
O	7906	7909	not
O	7910	7914	part
O	7915	7917	of
O	7918	7920	my
O	7921	7928	pattern
O	7928	7929	.

O	7930	7933	The
O	7934	7941	pattern
O	7942	7947	doesn
O	7947	7948	'
O	7948	7949	t
O	7950	7956	matter
O	7956	7957	.

O	7958	7959	I
O	7959	7960	'
O	7960	7961	m
O	7962	7971	therefore
O	7972	7982	concluding
O	7983	7985	on
O	7986	7989	the
O	7990	7995	issue
O	7996	7998	of
O	7999	8010	performance
O	8011	8015	that
O	8016	8018	at
O	8019	8024	least
O	8025	8028	for
O	8029	8032	the
O	8033	8039	tested
O	8040	8048	template
O	8049	8054	based
O	8055	8058	log
O	8059	8068	statement
O	8069	8074	there
O	8075	8080	seems
O	8081	8083	to
O	8084	8086	be
O	8087	8094	roughly
O	8095	8096	a
O	8097	8103	factor
O	8104	8106	of
O	8107	8109	10
O	8110	8112	in
O	8113	8117	real
O	8118	8129	performance
O	8130	8140	difference
O	8141	8148	between
O	8149	8152	JUL
O	8153	8154	(
O	8154	8158	slow
O	8158	8159	)
O	8160	8163	and
O	8164	8169	SLF4J
O	8169	8170	+
O	8170	8177	Logback
O	8178	8179	(
O	8179	8184	quick
O	8184	8185	)
O	8185	8186	.

O	8187	8191	Just
O	8192	8196	like
O	8197	8201	Ceki
O	8202	8206	said
O	8206	8207	.

O	8208	8209	I
O	8210	8213	can
O	8214	8218	also
O	8219	8222	see
O	8223	8230	another
O	8231	8236	thing
O	8237	8243	namely
O	8244	8248	that
B-api_mention	8249	8254	SLF4J
O	8254	8255	'
O	8255	8256	s
B-api_mention	8257	8266	getLogger
I-api_mention	8266	8267	(
I-api_mention	8267	8271	args
O	8271	8272	)
O	8273	8277	call
O	8278	8280	is
O	8281	8282	a
O	8283	8286	lot
O	8287	8291	more
O	8292	8301	expensive
O	8302	8306	than
O	8307	8310	JUL
O	8310	8311	'
O	8311	8312	s
O	8313	8318	ditto
O	8318	8319	.

O	8320	8321	(
O	8321	8323	95
O	8324	8326	ms
O	8327	8329	vs
O	8330	8331	0
O	8331	8332	.
O	8332	8333	3
O	8334	8336	ms
O	8337	8339	if
O	8340	8342	my
O	8343	8351	profiler
O	8352	8354	is
O	8355	8363	accurate
O	8363	8364	)
O	8364	8365	.

O	8366	8370	This
O	8371	8376	makes
O	8377	8382	sense
O	8382	8383	.

B-api_mention	8384	8389	SLF4J
O	8390	8393	has
O	8394	8396	to
O	8397	8399	do
O	8400	8404	some
O	8405	8409	time
O	8410	8412	on
O	8413	8416	the
O	8417	8424	binding
O	8425	8427	of
O	8428	8431	the
O	8432	8442	underlying
O	8443	8450	logging
O	8451	8465	implementation
O	8465	8466	.

O	8467	8471	This
O	8472	8477	doesn
O	8477	8478	'
O	8478	8479	t
O	8480	8485	scare
O	8486	8488	me
O	8488	8489	.

O	8490	8495	These
O	8496	8501	calls
O	8502	8508	should
O	8509	8511	be
O	8512	8520	somewhat
O	8521	8525	rare
O	8526	8528	in
O	8529	8532	the
O	8533	8541	lifetime
O	8542	8544	of
O	8545	8547	an
O	8548	8559	application
O	8559	8560	.

O	8561	8564	The
O	8565	8573	fastness
O	8574	8580	should
O	8581	8583	be
O	8584	8586	in
O	8587	8590	the
O	8591	8597	actual
O	8598	8601	log
O	8602	8607	calls
O	8607	8608	.

O	8609	8614	Final
O	8615	8625	conclusion
O	8626	8627	(
O	8627	8634	section
O	8635	8640	added
O	8641	8643	by
O	8644	8652	nolan600
O	8653	8655	on
O	8656	8658	08
O	8658	8659	-
O	8659	8662	JUL
O	8662	8663	-
O	8663	8667	2012
O	8667	8668	)
O	8669	8674	Thank
O	8675	8678	you
O	8679	8682	for
O	8683	8686	all
O	8687	8691	your
O	8692	8699	answers
O	8699	8700	.

O	8701	8709	Contrary
O	8710	8712	to
O	8713	8717	what
O	8718	8719	I
O	8720	8729	initially
O	8730	8737	thought
O	8738	8739	I
O	8739	8740	'
O	8740	8742	ve
O	8743	8748	ended
O	8749	8751	up
O	8752	8760	deciding
O	8761	8763	to
O	8764	8767	use
B-api_mention	8768	8773	SLF4J
O	8774	8777	for
O	8778	8780	my
O	8781	8784	API
O	8784	8785	.

O	8786	8790	This
O	8791	8793	is
O	8794	8799	based
O	8800	8802	on
O	8803	8804	a
O	8805	8811	number
O	8812	8814	of
O	8815	8821	things
O	8822	8825	and
O	8826	8830	your
O	8831	8836	input
O	8836	8837	:
O	8838	8839	#
O	8839	8841	li
O	8842	8844	It
O	8845	8850	gives
O	8851	8862	flexibility
O	8863	8865	to
O	8866	8872	choose
O	8873	8876	log
O	8877	8891	implementation
O	8892	8894	at
O	8895	8905	deployment
O	8906	8910	time
O	8910	8911	.

O	8912	8913	#
O	8913	8915	li
O	8916	8922	Issues
O	8923	8927	with
O	8928	8932	lack
O	8933	8935	of
O	8936	8947	flexibility
O	8948	8950	of
O	8951	8954	JUL
O	8954	8955	'
O	8955	8956	s
O	8957	8970	configuration
O	8971	8975	when
O	8976	8979	run
O	8980	8986	inside
O	8987	8989	an
O	8990	9001	application
O	9002	9008	server
O	9008	9009	.

O	9010	9011	#
O	9011	9013	li
O	9014	9019	SLF4J
O	9020	9022	is
O	9023	9032	certainly
O	9033	9034	a
O	9035	9038	lot
O	9039	9045	faster
O	9046	9048	as
O	9049	9057	detailed
O	9058	9063	above
O	9064	9066	in
O	9067	9077	particular
O	9078	9080	if
O	9081	9084	you
O	9085	9091	couple
O	9092	9094	it
O	9095	9099	with
O	9100	9107	Logback
O	9107	9108	.

O	9109	9113	Even
O	9114	9116	if
O	9117	9121	this
O	9122	9125	was
O	9126	9130	just
O	9131	9132	a
O	9133	9138	rough
O	9139	9143	test
O	9144	9145	I
O	9146	9150	have
O	9151	9157	reason
O	9158	9160	to
O	9161	9168	believe
O	9169	9173	that
O	9174	9175	a
O	9176	9179	lot
O	9180	9184	more
O	9185	9191	effort
O	9192	9195	has
O	9196	9200	gone
O	9201	9205	into
O	9206	9218	optimization
O	9219	9221	on
O	9222	9227	SLF4J
O	9227	9228	+
O	9228	9235	Logback
O	9236	9240	than
O	9241	9243	on
O	9244	9247	JUL
O	9247	9248	.

O	9249	9250	#
O	9250	9252	li
O	9253	9266	Documentation
O	9266	9267	.

O	9268	9271	The
O	9272	9285	documentation
O	9286	9289	for
O	9290	9295	SLF4J
O	9296	9298	is
O	9299	9305	simply
O	9306	9307	a
O	9308	9311	lot
O	9312	9316	more
O	9317	9330	comprehensive
O	9331	9334	and
O	9335	9342	precise
O	9342	9343	.

O	9344	9345	#
O	9345	9347	li
O	9348	9355	Pattern
O	9356	9367	flexibility
O	9367	9368	.

O	9369	9371	As
O	9372	9373	I
O	9374	9377	did
O	9378	9381	the
O	9382	9387	tests
O	9388	9389	I
O	9390	9393	set
O	9394	9397	out
O	9398	9400	to
O	9401	9405	have
O	9406	9409	JUL
O	9410	9415	mimic
O	9416	9419	the
O	9420	9427	default
O	9428	9435	pattern
O	9436	9440	from
O	9441	9448	Logback
O	9448	9449	.

O	9450	9454	This
O	9455	9462	pattern
O	9463	9471	includes
O	9472	9475	the
O	9476	9480	name
O	9481	9483	of
O	9484	9487	the
O	9488	9494	thread
O	9494	9495	.

O	9496	9498	It
O	9499	9504	turns
O	9505	9508	out
O	9509	9512	JUL
O	9513	9519	cannot
O	9520	9522	do
O	9523	9527	this
O	9528	9531	out
O	9532	9534	of
O	9535	9538	the
O	9539	9542	box
O	9542	9543	.

O	9544	9546	Ok
O	9546	9547	,
O	9548	9549	I
O	9550	9555	haven
O	9555	9556	'
O	9556	9557	t
O	9558	9564	missed
O	9565	9567	it
O	9568	9573	until
O	9574	9577	now
O	9577	9578	,
O	9579	9582	but
O	9583	9584	I
O	9585	9588	don
O	9588	9589	'
O	9589	9590	t
O	9591	9596	think
O	9597	9599	it
O	9600	9602	is
O	9603	9604	a
O	9605	9610	thing
O	9611	9615	that
O	9616	9622	should
O	9623	9625	be
O	9626	9633	missing
O	9634	9638	from
O	9639	9640	a
O	9641	9644	log
O	9645	9654	framework
O	9654	9655	.

O	9656	9662	Period
O	9662	9663	!

O	9664	9665	#
O	9665	9667	li
O	9668	9672	Most
O	9673	9674	(
O	9674	9676	or
O	9677	9681	many
O	9681	9682	)
O	9683	9687	Java
O	9688	9696	projects
O	9697	9702	today
O	9703	9706	use
O	9707	9712	Maven
O	9713	9715	so
O	9716	9722	adding
O	9723	9724	a
O	9725	9735	dependency
O	9736	9738	is
O	9739	9742	not
O	9743	9747	that
O	9748	9751	big
O	9752	9753	a
O	9754	9759	thing
O	9760	9770	especially
O	9771	9773	if
O	9774	9778	that
O	9779	9789	dependency
O	9790	9792	is
O	9793	9799	rather
O	9800	9806	stable
O	9806	9807	,
O	9808	9809	i
O	9809	9810	.
O	9810	9811	e
O	9811	9812	.
O	9813	9818	doesn
O	9818	9819	'
O	9819	9820	t
O	9821	9831	constantly
O	9832	9838	change
O	9839	9842	its
O	9843	9846	API
O	9846	9847	.

O	9848	9852	This
O	9853	9858	seems
O	9859	9861	to
O	9862	9864	be
O	9865	9869	true
O	9870	9873	for
O	9874	9879	SLF4J
O	9879	9880	.

O	9881	9885	Also
O	9886	9889	the
O	9890	9895	SLF4J
O	9896	9899	jar
O	9900	9903	and
O	9904	9911	friends
O	9912	9915	are
O	9916	9921	small
O	9922	9924	in
O	9925	9929	size
O	9929	9930	.

O	9931	9933	So
O	9934	9937	the
O	9938	9945	strange
O	9946	9951	thing
O	9952	9956	that
O	9957	9965	happened
O	9966	9969	was
O	9970	9974	that
O	9975	9976	I
O	9977	9985	actually
O	9986	9989	got
O	9990	9995	quite
O	9996	10001	upset
O	10002	10006	with
O	10007	10010	JUL
O	10011	10016	after
O	10017	10023	having
O	10024	10030	worked
O	10031	10032	a
O	10033	10036	bit
O	10037	10041	with
O	10042	10047	SLF4J
O	10047	10048	.

O	10049	10050	I
O	10051	10056	still
O	10057	10063	regret
O	10064	10068	that
O	10069	10071	it
O	10072	10075	has
O	10076	10078	to
O	10079	10081	be
O	10082	10086	this
O	10087	10090	way
O	10091	10095	with
O	10096	10099	JUL
O	10099	10100	.

O	10101	10104	JUL
O	10105	10107	is
O	10108	10111	far
O	10112	10116	from
O	10117	10124	perfect
O	10125	10128	but
O	10129	10133	kind
O	10134	10136	of
O	10137	10141	does
O	10142	10145	the
O	10146	10149	job
O	10149	10150	.

O	10151	10155	Just
O	10156	10159	not
O	10160	10165	quite
O	10166	10170	well
O	10171	10177	enough
O	10177	10178	.

O	10179	10182	The
O	10183	10187	same
O	10188	10191	can
O	10192	10194	be
O	10195	10199	said
O	10200	10205	about
O	10206	10216	Properties
O	10217	10219	as
O	10220	10222	an
O	10223	10230	example
O	10231	10234	but
O	10235	10237	we
O	10238	10240	do
O	10241	10244	not
O	10245	10250	think
O	10251	10256	about
O	10257	10268	abstracting
O	10269	10273	that
O	10274	10276	so
O	10277	10283	people
O	10284	10287	can
O	10288	10292	plug
O	10293	10295	in
O	10296	10301	their
O	10302	10305	own
O	10306	10319	configuration
O	10320	10327	library
O	10328	10331	and
O	10332	10336	what
O	10337	10341	have
O	10342	10345	you
O	10345	10346	.

O	10347	10348	I
O	10349	10354	think
O	10355	10358	the
O	10359	10365	reason
O	10366	10368	is
O	10369	10373	that
O	10374	10384	Properties
O	10385	10390	comes
O	10391	10393	in
O	10394	10398	just
O	10399	10404	above
O	10405	10408	the
O	10409	10412	bar
O	10413	10418	while
O	10419	10422	the
O	10423	10431	opposite
O	10432	10434	is
O	10435	10439	true
O	10440	10443	for
O	10444	10447	JUL
O	10448	10450	of
O	10451	10456	today
O	10457	10458	.
O	10458	10459	.
O	10459	10460	.
O	10461	10464	and
O	10465	10467	in
O	10468	10471	the
O	10472	10476	past
O	10477	10479	it
O	10480	10484	came
O	10485	10487	in
O	10488	10490	at
O	10491	10495	zero
O	10496	10503	because
O	10504	10506	it
O	10507	10511	didn
O	10511	10512	'
O	10512	10513	t
O	10514	10519	exist
O	10519	10520	.

O	10522	10530	Question
O	10530	10531	-
O	10531	10539	12317668

O	10540	10549	According
O	10550	10552	to
O	10553	10556	the
O	10557	10560	JLS
O	10560	10561	,
O	10562	10564	an
O	10565	10568	int
O	10569	10574	array
O	10575	10581	should
O	10582	10584	be
O	10585	10591	filled
O	10592	10594	by
O	10595	10600	zeros
O	10601	10605	just
O	10606	10611	after
O	10612	10626	initialization
O	10626	10627	.

O	10628	10635	However
O	10635	10636	,
O	10637	10638	I
O	10639	10641	am
O	10642	10647	faced
O	10648	10652	with
O	10653	10654	a
O	10655	10664	situation
O	10665	10670	where
O	10671	10673	it
O	10674	10676	is
O	10677	10680	not
O	10680	10681	.

O	10682	10686	Such
O	10687	10688	a
O	10689	10697	behavior
O	10698	10704	occurs
O	10705	10710	first
O	10711	10713	in
O	10714	10717	JDK
O	10718	10721	7u4
O	10722	10725	and
O	10726	10730	also
O	10731	10737	occurs
O	10738	10740	in
O	10741	10744	all
O	10745	10750	later
O	10751	10758	updates
O	10759	10760	(
O	10760	10761	I
O	10762	10765	use
O	10766	10768	64
O	10768	10769	-
O	10769	10772	bit
O	10773	10787	implementation
O	10787	10788	)
O	10788	10789	.

O	10790	10793	The
O	10794	10803	following
O	10804	10808	code
O	10809	10815	throws
O	10816	10825	exception
O	10825	10826	:
O	10827	10828	#
O	10828	10831	pre
O	10832	10835	The
O	10836	10845	exception
O	10846	10852	occurs
O	10853	10858	after
O	10859	10862	the
O	10863	10866	JVM
O	10867	10875	performs
O	10876	10887	compilation
O	10888	10890	of
O	10891	10894	the
O	10895	10899	code
O	10900	10905	block
O	10906	10909	and
O	10910	10914	does
O	10915	10918	not
O	10919	10924	arise
O	10925	10929	with
O	10930	10931	-
O	10931	10935	Xint
O	10936	10940	flag
O	10940	10941	.

O	10942	10954	Additionally
O	10954	10955	,
O	10956	10959	the
B-api_mention	10960	10966	Arrays
I-api_mention	10966	10967	.
I-api_mention	10967	10971	fill
I-api_mention	10971	10972	(
I-api_mention	10972	10976	args
O	10976	10977	)
O	10978	10987	statement
O	10988	10989	(
O	10989	10991	as
O	10992	10995	all
O	10996	11001	other
O	11002	11012	statements
O	11013	11015	in
O	11016	11020	this
O	11021	11025	code
O	11025	11026	)
O	11027	11029	is
O	11030	11039	necessary
O	11039	11040	,
O	11041	11044	and
O	11045	11048	the
O	11049	11058	exception
O	11059	11063	does
O	11064	11067	not
O	11068	11074	occurs
O	11075	11077	if
O	11078	11080	it
O	11081	11083	is
O	11084	11090	absent
O	11090	11091	.

O	11092	11094	It
O	11095	11097	is
O	11098	11103	clear
O	11104	11108	that
O	11109	11113	this
O	11114	11122	possible
O	11123	11126	bug
O	11127	11129	is
O	11130	11137	bounded
O	11138	11142	with
O	11143	11147	some
O	11148	11151	JVM
O	11152	11164	optimization
O	11164	11165	.

O	11166	11169	Any
O	11170	11175	ideas
O	11176	11179	for
O	11180	11183	the
O	11184	11190	reason
O	11191	11193	of
O	11194	11198	such
O	11199	11200	a
O	11201	11209	behavior
O	11209	11210	?

O	11211	11217	Update
O	11217	11218	:
O	11219	11220	I
O	11221	11224	see
O	11225	11229	this
O	11230	11238	behavior
O	11239	11241	on
O	11242	11249	HotSpot
O	11250	11252	64
O	11252	11253	-
O	11253	11256	bit
O	11257	11263	server
O	11264	11266	VM
O	11266	11267	,
O	11268	11272	Java
O	11273	11280	version
O	11281	11285	from
O	11286	11287	1
O	11287	11288	.
O	11288	11289	7
O	11289	11290	.
O	11290	11291	0
O	11291	11292	_
O	11292	11294	04
O	11295	11297	to
O	11298	11299	1
O	11299	11300	.
O	11300	11301	7
O	11301	11302	.
O	11302	11303	0
O	11303	11304	_
O	11304	11306	10
O	11307	11309	on
O	11310	11316	Gentoo
O	11317	11322	Linux
O	11322	11323	,
O	11324	11330	Debian
O	11331	11336	Linux
O	11337	11338	(
O	11338	11342	both
O	11343	11349	kernel
O	11350	11351	3
O	11351	11352	.
O	11352	11353	0
O	11354	11361	version
O	11361	11362	)
O	11363	11366	and
O	11367	11372	MacOS
O	11373	11377	Lion
O	11377	11378	.

O	11379	11383	This
O	11384	11389	error
O	11390	11393	can
O	11394	11400	always
O	11401	11403	be
O	11404	11414	reproduced
O	11415	11419	with
O	11420	11423	the
O	11424	11428	code
O	11429	11434	above
O	11434	11435	.

O	11436	11437	I
O	11438	11441	did
O	11442	11445	not
O	11446	11450	test
O	11451	11455	this
O	11456	11463	problem
O	11464	11468	with
O	11469	11470	a
O	11471	11473	32
O	11473	11474	-
O	11474	11477	bit
O	11478	11481	JDK
O	11482	11484	or
O	11485	11487	on
O	11488	11495	Windows
O	11495	11496	.

O	11497	11498	I
O	11499	11506	already
O	11507	11511	sent
O	11512	11513	a
O	11514	11517	bug
O	11518	11524	report
O	11525	11527	to
O	11528	11531	the
O	11532	11538	Oracle
O	11539	11540	(
O	11540	11543	bug
O	11544	11546	id
O	11547	11554	7196857
O	11554	11555	)
O	11556	11559	and
O	11560	11562	it
O	11563	11567	will
O	11568	11574	appear
O	11575	11577	in
O	11578	11584	public
O	11585	11591	Oracle
O	11592	11595	bug
O	11596	11604	database
O	11605	11607	in
O	11608	11611	few
O	11612	11616	days
O	11616	11617	.

O	11618	11624	Update
O	11624	11625	:
O	11626	11632	Oracle
O	11633	11642	published
O	11643	11647	this
O	11648	11651	bug
O	11652	11654	at
O	11655	11660	their
O	11661	11667	public
O	11668	11671	bug
O	11672	11680	database
O	11680	11681	:
O	11682	11683	#
O	11683	11684	a

O	11686	11694	Question
O	11694	11695	-
O	11695	11703	12146298

O	11704	11705	I
O	11706	11711	would
O	11712	11716	like
O	11717	11719	to
O	11720	11724	know
O	11725	11729	what
O	11730	11732	is
O	11733	11736	the
O	11737	11745	cleanest
O	11746	11749	and
O	11750	11754	best
O	11755	11758	way
O	11759	11761	to
O	11762	11769	perform
O	11770	11774	form
O	11775	11785	validation
O	11786	11788	of
O	11789	11793	user
O	11794	11800	inputs
O	11800	11801	.

O	11802	11803	I
O	11804	11808	have
O	11809	11813	seen
O	11814	11818	some
O	11819	11829	developers
O	11830	11839	implement
B-api_mention	11840	11843	org
I-api_mention	11843	11844	.
I-api_mention	11844	11859	springframework
I-api_mention	11859	11860	.
I-api_mention	11860	11870	validation
I-api_mention	11870	11871	.
I-api_mention	11871	11880	Validator
O	11881	11882	.

O	11883	11884	A
O	11885	11893	question
O	11894	11899	about
O	11900	11904	that
O	11904	11905	:
O	11906	11907	I
O	11908	11911	saw
O	11912	11914	it
O	11915	11924	validates
O	11925	11926	a
O	11927	11932	class
O	11932	11933	.

O	11934	11938	Does
O	11939	11942	the
O	11943	11948	class
O	11949	11953	have
O	11954	11956	to
O	11957	11959	be
O	11960	11966	filled
O	11967	11975	manually
O	11976	11980	with
O	11981	11984	the
O	11985	11991	values
O	11992	11996	from
O	11997	12000	the
O	12001	12005	user
O	12006	12011	input
O	12011	12012	,
O	12013	12016	and
O	12017	12021	then
O	12022	12028	passed
O	12029	12031	to
O	12032	12035	the
O	12036	12045	validator
O	12045	12046	?

O	12047	12048	I
O	12049	12051	am
O	12052	12060	confused
O	12061	12066	about
O	12067	12070	the
O	12071	12079	cleanest
O	12080	12083	and
O	12084	12088	best
O	12089	12092	way
O	12093	12095	to
O	12096	12104	validate
O	12105	12108	the
O	12109	12113	user
O	12114	12119	input
O	12119	12120	.

O	12121	12122	I
O	12123	12127	know
O	12128	12133	about
O	12134	12137	the
O	12138	12149	traditional
O	12150	12156	method
O	12157	12159	of
O	12160	12165	using
B-api_mention	12166	12173	request
I-api_mention	12173	12174	.
I-api_mention	12174	12186	getParameter
I-api_mention	12186	12187	(
I-api_mention	12187	12191	args
O	12191	12192	)
O	12193	12196	and
O	12197	12201	then
O	12202	12210	manually
O	12211	12219	checking
O	12220	12223	for
O	12224	12229	nulls
O	12230	12231	,
O	12232	12235	but
O	12236	12237	I
O	12238	12241	don
O	12241	12242	'
O	12242	12243	t
O	12244	12248	want
O	12249	12251	to
O	12252	12254	do
O	12255	12258	all
O	12259	12262	the
O	12263	12273	validation
O	12274	12276	in
O	12277	12279	my
O	12280	12290	Controller
O	12291	12292	.

O	12293	12297	Some
O	12298	12302	good
O	12303	12309	advice
O	12310	12312	on
O	12313	12317	this
O	12318	12322	area
O	12323	12327	will
O	12328	12330	be
O	12331	12338	greatly
O	12339	12350	appreciated
O	12350	12351	.

O	12352	12353	I
O	12354	12356	am
O	12357	12360	not
O	12361	12366	using
O	12367	12376	Hibernate
O	12377	12379	in
O	12380	12384	this
O	12385	12396	application
O	12396	12397	.

O	12399	12407	Question
O	12407	12408	-
O	12408	12416	12539365

O	12417	12418	I
O	12419	12424	write
O	12425	12430	jUnit
O	12431	12435	test
O	12436	12441	cases
O	12442	12445	for
O	12446	12447	3
O	12448	12456	purposes
O	12456	12457	:
O	12458	12459	#
O	12459	12461	li
O	12462	12464	To
O	12465	12471	ensure
O	12472	12476	that
O	12477	12479	my
O	12480	12484	code
O	12485	12494	satisfies
O	12495	12498	all
O	12499	12501	of
O	12502	12505	the
O	12506	12514	required
O	12515	12528	functionality
O	12528	12529	,
O	12530	12535	under
O	12536	12539	all
O	12540	12541	(
O	12541	12543	or
O	12544	12548	most
O	12549	12551	of
O	12551	12552	)
O	12553	12556	the
O	12557	12562	input
O	12563	12575	combinations
O	12575	12576	/
O	12576	12582	values
O	12582	12583	.

O	12584	12585	#
O	12585	12587	li
O	12588	12590	To
O	12591	12597	ensure
O	12598	12602	that
O	12603	12604	I
O	12605	12608	can
O	12609	12615	change
O	12616	12619	the
O	12620	12634	implementation
O	12634	12635	,
O	12636	12639	and
O	12640	12644	rely
O	12645	12647	on
O	12648	12653	JUnit
O	12654	12658	test
O	12659	12664	cases
O	12665	12667	to
O	12668	12672	tell
O	12673	12675	me
O	12676	12680	that
O	12681	12684	all
O	12685	12687	my
O	12688	12701	functionality
O	12702	12704	is
O	12705	12710	still
O	12711	12720	satisfied
O	12720	12721	.

O	12722	12723	#
O	12723	12725	li
O	12726	12728	As
O	12729	12730	a
O	12731	12744	documentation
O	12745	12747	of
O	12748	12751	all
O	12752	12755	the
O	12756	12759	use
O	12760	12765	cases
O	12766	12768	my
O	12769	12773	code
O	12774	12781	handles
O	12781	12782	,
O	12783	12786	and
O	12787	12790	act
O	12791	12793	as
O	12794	12795	a
O	12796	12800	spec
O	12801	12804	for
O	12805	12816	refactoring
O	12817	12818	-
O	12819	12825	should
O	12826	12829	the
O	12830	12834	code
O	12835	12839	ever
O	12840	12844	need
O	12845	12847	to
O	12848	12850	be
O	12851	12860	rewritten
O	12860	12861	.

O	12862	12863	(
O	12863	12871	Refactor
O	12872	12875	the
O	12876	12880	code
O	12880	12881	,
O	12882	12885	and
O	12886	12888	if
O	12889	12891	my
O	12892	12897	jUnit
O	12898	12903	tests
O	12904	12908	fail
O	12909	12910	-
O	12911	12914	you
O	12915	12923	probably
O	12924	12930	missed
O	12931	12935	some
O	12936	12939	use
O	12940	12944	case
O	12944	12945	)
O	12945	12946	.

O	12947	12948	I
O	12949	12951	do
O	12952	12955	not
O	12956	12966	understand
O	12967	12970	why
O	12971	12973	or
O	12974	12978	when
B-api_mention	12979	12986	Mockito
I-api_mention	12986	12987	.
I-api_mention	12987	12993	verify
I-api_mention	12993	12994	(
I-api_mention	12994	12998	args
O	12998	12999	)
O	13000	13006	should
O	13007	13009	be
O	13010	13014	used
O	13014	13015	.

O	13016	13020	When
O	13021	13022	I
O	13023	13026	see
B-api_mention	13027	13033	verify
I-api_mention	13033	13034	(
I-api_mention	13034	13038	args
O	13038	13039	)
O	13040	13045	being
O	13046	13052	called
O	13052	13053	,
O	13054	13056	it
O	13057	13059	is
O	13060	13067	telling
O	13068	13070	me
O	13071	13075	that
O	13076	13078	my
O	13079	13084	jUnit
O	13085	13087	is
O	13088	13096	becoming
O	13097	13102	aware
O	13103	13105	of
O	13106	13109	the
O	13110	13124	implementation
O	13124	13125	.

O	13126	13127	(
O	13127	13131	Thus
O	13132	13140	changing
O	13141	13143	my
O	13144	13158	implementation
O	13159	13164	would
O	13165	13170	break
O	13171	13173	my
O	13174	13180	jUnits
O	13180	13181	,
O	13182	13186	even
O	13187	13193	though
O	13194	13196	my
O	13197	13210	functionality
O	13211	13214	was
O	13215	13225	unaffected
O	13225	13226	)
O	13226	13227	.

O	13228	13229	I
O	13229	13230	'
O	13230	13231	m
O	13232	13239	looking
O	13240	13243	for
O	13243	13244	:
O	13245	13246	#
O	13246	13248	li
O	13249	13253	What
O	13254	13260	should
O	13261	13263	be
O	13264	13267	the
O	13268	13278	guidelines
O	13279	13282	for
O	13283	13294	appropriate
O	13295	13300	usage
O	13301	13303	of
B-api_mention	13304	13311	Mockito
I-api_mention	13311	13312	.
I-api_mention	13312	13318	verify
I-api_mention	13318	13319	(
I-api_mention	13319	13323	args
O	13323	13324	)
O	13325	13326	?

O	13327	13328	#
O	13328	13330	li
O	13331	13333	Is
O	13334	13336	it
O	13337	13350	fundamentally
O	13351	13358	correct
O	13359	13362	for
O	13363	13369	jUnits
O	13370	13372	to
O	13373	13375	be
O	13376	13381	aware
O	13382	13384	of
O	13384	13385	,
O	13386	13388	or
O	13389	13396	tightly
O	13397	13404	coupled
O	13405	13407	to
O	13407	13408	,
O	13409	13412	the
O	13413	13427	implementation
O	13428	13430	of
O	13431	13434	the
O	13435	13440	class
O	13441	13446	under
O	13447	13451	test
O	13451	13452	?

O	13454	13462	Question
O	13462	13463	-
O	13463	13471	12552863

O	13472	13475	The
O	13476	13480	Java
O	13481	13482	7
O	13483	13486	try
O	13486	13487	-
O	13487	13491	with
O	13491	13492	-
O	13492	13501	resources
O	13502	13508	syntax
O	13509	13510	(
O	13510	13514	also
O	13515	13520	known
O	13521	13523	as
O	13524	13527	ARM
O	13528	13533	block
O	13534	13535	(
O	13536	13545	Automatic
O	13546	13554	Resource
O	13555	13565	Management
O	13566	13567	)
O	13567	13568	)
O	13569	13571	is
O	13572	13576	nice
O	13576	13577	,
O	13578	13583	short
O	13584	13587	and
O	13588	13603	straightforward
O	13604	13608	when
O	13609	13614	using
O	13615	13619	only
O	13620	13623	one
B-api_mention	13624	13637	AutoCloseable
O	13638	13646	resource
O	13646	13647	.

O	13648	13655	However
O	13655	13656	,
O	13657	13658	I
O	13659	13661	am
O	13662	13665	not
O	13666	13670	sure
O	13671	13675	what
O	13676	13678	is
O	13679	13682	the
O	13683	13690	correct
O	13691	13696	idiom
O	13697	13701	when
O	13702	13703	I
O	13704	13708	need
O	13709	13711	to
O	13712	13719	declare
O	13720	13728	multiple
O	13729	13738	resources
O	13739	13743	that
O	13744	13747	are
O	13748	13757	dependent
O	13758	13760	on
O	13761	13765	each
O	13766	13771	other
O	13771	13772	,
O	13773	13776	for
O	13777	13784	example
O	13785	13786	a
B-api_mention	13787	13797	FileWriter
O	13798	13801	and
O	13802	13803	a
B-api_mention	13804	13818	BufferedWriter
O	13819	13823	that
O	13824	13829	wraps
O	13830	13832	it
O	13832	13833	.

O	13834	13836	Of
O	13837	13843	course
O	13843	13844	,
O	13845	13849	this
O	13850	13858	question
O	13859	13867	concerns
O	13868	13871	any
O	13872	13876	case
O	13877	13881	when
O	13882	13886	some
B-api_mention	13887	13900	AutoCloseable
O	13901	13910	resources
O	13911	13914	are
O	13915	13922	wrapped
O	13922	13923	,
O	13924	13927	not
O	13928	13932	only
O	13933	13938	these
O	13939	13942	two
O	13943	13951	specific
O	13952	13959	classes
O	13959	13960	.

O	13961	13962	I
O	13963	13967	came
O	13968	13970	up
O	13971	13975	with
O	13976	13979	the
O	13980	13985	three
O	13986	13995	following
O	13996	14008	alternatives
O	14008	14009	:
O	14010	14011	1
O	14011	14012	)
O	14013	14016	The
O	14017	14022	naive
O	14023	14028	idiom
O	14029	14030	I
O	14031	14035	have
O	14036	14040	seen
O	14041	14043	is
O	14044	14046	to
O	14047	14054	declare
O	14055	14059	only
O	14060	14063	the
O	14064	14067	top
O	14067	14068	-
O	14068	14073	level
O	14074	14081	wrapper
O	14082	14084	in
O	14085	14088	the
O	14089	14092	ARM
O	14092	14093	-
O	14093	14100	managed
O	14101	14109	variable
O	14109	14110	:
O	14111	14112	#
O	14112	14115	pre
O	14116	14120	This
O	14121	14123	is
O	14124	14128	nice
O	14129	14132	and
O	14133	14138	short
O	14138	14139	,
O	14140	14143	but
O	14144	14146	it
O	14147	14149	is
O	14150	14156	broken
O	14156	14157	.

O	14158	14165	Because
O	14166	14169	the
O	14170	14180	underlying
B-api_mention	14181	14191	FileWriter
O	14192	14194	is
O	14195	14198	not
O	14199	14207	declared
O	14208	14210	in
O	14211	14212	a
O	14213	14221	variable
O	14221	14222	,
O	14223	14225	it
O	14226	14230	will
O	14231	14236	never
O	14237	14239	be
O	14240	14246	closed
O	14247	14255	directly
O	14256	14258	in
O	14259	14262	the
O	14263	14272	generated
O	14273	14280	finally
O	14281	14286	block
O	14286	14287	.

O	14288	14290	It
O	14291	14295	will
O	14296	14298	be
O	14299	14305	closed
O	14306	14310	only
O	14311	14318	through
O	14319	14322	the
O	14323	14328	close
O	14329	14335	method
O	14336	14338	of
O	14339	14342	the
O	14343	14351	wrapping
B-api_mention	14352	14366	BufferedWriter
O	14367	14368	.

O	14369	14372	The
O	14373	14380	problem
O	14381	14383	is
O	14383	14384	,
O	14385	14389	that
O	14390	14392	if
O	14393	14395	an
O	14396	14405	exception
O	14406	14408	is
O	14409	14415	thrown
O	14416	14420	from
O	14421	14424	the
O	14425	14427	bw
O	14428	14429	'
O	14429	14430	s
O	14431	14442	constructor
O	14442	14443	,
O	14444	14446	it
O	14446	14447	'
O	14447	14448	s
B-api_mention	14449	14454	close
O	14455	14459	will
O	14460	14463	not
O	14464	14466	be
O	14467	14473	called
O	14474	14477	and
O	14478	14487	therefore
O	14488	14491	the
O	14492	14502	underlying
B-api_mention	14503	14513	FileWriter
O	14514	14518	will
O	14519	14522	not
O	14523	14525	be
O	14526	14532	closed
O	14533	14534	.

O	14535	14536	2
O	14536	14537	)
O	14538	14539	#
O	14539	14542	pre
O	14543	14547	Here
O	14547	14548	,
O	14549	14553	both
O	14554	14557	the
O	14558	14568	underlying
O	14569	14572	and
O	14573	14576	the
O	14577	14585	wrapping
O	14586	14594	resource
O	14595	14598	are
O	14599	14607	declared
O	14608	14610	in
O	14611	14614	the
O	14615	14618	ARM
O	14618	14619	-
O	14619	14626	managed
O	14627	14636	variables
O	14636	14637	,
O	14638	14640	so
O	14641	14645	both
O	14646	14648	of
O	14649	14653	them
O	14654	14658	will
O	14659	14661	be
O	14662	14671	certainly
O	14672	14678	closed
O	14678	14679	,
O	14680	14682	so
O	14683	14692	certainly
O	14693	14697	that
O	14698	14701	the
O	14702	14712	underlying
O	14713	14715	fw
B-api_mention	14715	14716	.
I-api_mention	14716	14721	close
I-api_mention	14721	14722	(
I-api_mention	14722	14726	args
O	14726	14727	)
O	14728	14732	will
O	14733	14735	be
O	14736	14742	called
O	14743	14748	twice
O	14749	14750	,
O	14751	14756	first
O	14757	14765	directly
O	14766	14769	and
O	14770	14773	for
O	14774	14777	the
O	14778	14784	second
O	14785	14789	time
O	14790	14797	through
O	14798	14801	the
O	14802	14810	wrapping
O	14811	14813	bw
B-api_mention	14813	14814	.
I-api_mention	14814	14819	close
I-api_mention	14819	14820	(
I-api_mention	14820	14824	args
O	14824	14825	)
O	14826	14827	.

O	14828	14832	This
O	14833	14839	should
O	14840	14843	not
O	14844	14846	be
O	14847	14848	a
O	14849	14856	problem
O	14857	14860	for
O	14861	14866	these
O	14867	14870	two
O	14871	14879	specific
O	14880	14887	classes
O	14888	14892	that
O	14893	14897	both
O	14898	14907	implement
B-api_mention	14908	14917	Closeable
O	14918	14919	(
O	14919	14924	which
O	14925	14927	is
O	14928	14929	a
O	14930	14937	subtype
O	14938	14940	of
B-api_mention	14941	14954	AutoCloseable
O	14955	14956	)
O	14956	14957	,
O	14958	14963	whose
O	14964	14972	contract
O	14973	14979	states
O	14980	14984	that
O	14985	14993	multiple
O	14994	14999	calls
O	15000	15002	to
O	15003	15008	close
O	15009	15012	are
O	15013	15022	permitted
O	15022	15023	:
O	15024	15025	#
O	15025	15035	blockquote
O	15036	15043	However
O	15043	15044	,
O	15045	15047	in
O	15048	15049	a
O	15050	15057	general
O	15058	15062	case
O	15062	15063	,
O	15064	15065	I
O	15066	15069	can
O	15070	15074	have
O	15075	15084	resources
O	15085	15089	that
O	15090	15092	do
O	15093	15102	implement
O	15103	15107	only
B-api_mention	15108	15121	AutoCloseable
O	15122	15123	(
O	15123	15126	and
O	15127	15130	not
B-api_mention	15131	15140	Closeable
O	15141	15142	)
O	15142	15143	,
O	15144	15149	which
O	15150	15155	doesn
O	15155	15156	'
O	15156	15157	t
O	15158	15167	guarantee
O	15168	15172	that
O	15173	15176	the
B-api_mention	15177	15182	close
O	15183	15186	can
O	15187	15189	be
O	15190	15196	called
O	15197	15205	multiple
O	15206	15211	times
O	15211	15212	:
O	15213	15214	#
O	15214	15224	blockquote
O	15225	15226	3
O	15226	15227	)
O	15228	15229	#
O	15229	15232	pre
O	15233	15237	This
O	15238	15245	version
O	15246	15252	should
O	15253	15255	be
O	15256	15269	theoretically
O	15270	15277	correct
O	15277	15278	,
O	15279	15286	because
O	15287	15291	only
O	15292	15295	the
O	15296	15298	fw
O	15299	15309	represents
O	15310	15311	a
O	15312	15316	real
O	15317	15325	resource
O	15326	15330	that
O	15331	15336	needs
O	15337	15339	to
O	15340	15342	be
O	15343	15350	cleaned
O	15351	15353	up
O	15353	15354	.

O	15355	15358	The
O	15359	15361	bw
O	15362	15366	does
O	15366	15367	'
O	15367	15368	t
O	15369	15375	itself
O	15376	15380	hold
O	15381	15384	any
O	15385	15393	resource
O	15393	15394	,
O	15395	15397	it
O	15398	15402	only
O	15403	15412	delegates
O	15413	15415	to
O	15416	15419	the
O	15420	15422	fw
O	15423	15424	,
O	15425	15427	so
O	15428	15430	it
O	15431	15437	should
O	15438	15440	be
O	15441	15451	sufficient
O	15452	15454	to
O	15455	15459	only
O	15460	15465	close
O	15466	15469	the
O	15470	15480	underlying
O	15481	15483	fw
O	15484	15485	.

O	15486	15488	On
O	15489	15492	the
O	15493	15498	other
O	15499	15503	hand
O	15503	15504	,
O	15505	15508	the
O	15509	15515	syntax
O	15516	15518	is
O	15519	15520	a
O	15521	15524	bit
O	15525	15534	irregular
O	15535	15538	and
O	15539	15543	also
O	15543	15544	,
O	15545	15552	Eclipse
O	15553	15559	issues
O	15560	15561	a
O	15562	15569	warning
O	15569	15570	,
O	15571	15576	which
O	15577	15578	I
O	15579	15586	believe
O	15587	15589	is
O	15590	15591	a
O	15592	15597	false
O	15598	15603	alarm
O	15603	15604	,
O	15605	15608	but
O	15609	15611	it
O	15612	15614	is
O	15615	15620	still
O	15621	15622	a
O	15623	15630	warning
O	15631	15635	that
O	15636	15639	one
O	15640	15643	has
O	15644	15646	to
O	15647	15651	deal
O	15652	15656	with
O	15656	15657	:
O	15658	15659	#
O	15659	15669	blockquote
O	15670	15672	So
O	15672	15673	,
O	15674	15679	which
O	15680	15688	approach
O	15689	15691	to
O	15692	15694	go
O	15695	15698	for
O	15698	15699	?

O	15700	15702	Or
O	15703	15707	have
O	15708	15709	I
O	15710	15716	missed
O	15717	15721	some
O	15722	15727	other
O	15728	15733	idiom
O	15734	15738	that
O	15739	15741	is
O	15742	15745	the
O	15746	15753	correct
O	15754	15757	one
O	15757	15758	?

O	15760	15768	Question
O	15768	15769	-
O	15769	15777	13195797

O	15778	15779	I
O	15780	15784	want
O	15785	15787	to
O	15788	15794	delete
O	15795	15798	all
O	15799	15804	files
O	15805	15811	inside
O	15812	15815	ABC
O	15816	15825	directory
O	15825	15826	.

O	15827	15831	When
O	15832	15833	I
O	15834	15839	tried
O	15840	15844	with
B-api_mention	15845	15854	FileUtils
I-api_mention	15854	15855	.
I-api_mention	15855	15870	deleteDirectory
I-api_mention	15870	15871	(
I-api_mention	15871	15875	args
O	15875	15876	)
O	15876	15877	;
O	15878	15880	it
O	15881	15885	also
O	15886	15893	deletes
O	15894	15900	folder
O	15901	15904	ABC
O	15904	15905	.

O	15906	15908	Is
O	15909	15914	there
O	15915	15916	a
O	15917	15920	one
O	15921	15926	liner
O	15927	15935	solution
O	15936	15941	where
O	15942	15943	I
O	15944	15947	can
O	15948	15954	delete
O	15955	15960	files
O	15961	15967	inside
O	15968	15977	directory
O	15978	15981	but
O	15982	15985	not
O	15986	15995	directory
O	15995	15996	?

O	15998	16006	Question
O	16006	16007	-
O	16007	16015	12544479

O	16016	16017	I
O	16018	16020	am
O	16021	16028	looking
O	16029	16032	for
O	16033	16036	the
O	16037	16044	easiest
O	16045	16048	and
O	16049	16057	simplest
O	16058	16061	way
O	16062	16064	to
O	16065	16069	bind
O	16070	16073	and
O	16074	16081	convert
O	16082	16086	data
O	16087	16089	in
O	16090	16096	Spring
O	16097	16100	MVC
O	16100	16101	.

O	16102	16104	If
O	16105	16113	possible
O	16113	16114	,
O	16115	16122	without
O	16123	16128	doing
O	16129	16132	any
O	16133	16136	xml
O	16137	16150	configuration
O	16150	16151	.

O	16152	16154	So
O	16155	16158	far
O	16159	16160	I
O	16160	16161	'
O	16161	16163	ve
O	16164	16168	been
O	16169	16174	using
B-api_mention	16175	16190	PropertyEditors
O	16191	16195	like
O	16196	16198	so
O	16199	16200	:
O	16201	16202	#
O	16202	16205	pre
O	16206	16209	and
O	16210	16211	#
O	16211	16214	pre
O	16215	16217	It
O	16218	16220	is
O	16221	16227	simple
O	16228	16229	:
O	16230	16234	both
O	16235	16245	conversion
O	16246	16249	are
O	16250	16257	defined
O	16258	16260	in
O	16261	16264	the
O	16265	16269	same
O	16270	16275	class
O	16275	16276	,
O	16277	16280	and
O	16281	16284	the
O	16285	16292	binding
O	16293	16295	is
O	16296	16311	straightforward
O	16311	16312	.

O	16313	16315	If
O	16316	16317	I
O	16318	16324	wanted
O	16325	16327	to
O	16328	16330	do
O	16331	16332	a
O	16333	16340	general
O	16341	16348	binding
O	16349	16355	across
O	16356	16359	all
O	16360	16362	my
O	16363	16374	controllers
O	16374	16375	,
O	16376	16377	I
O	16378	16383	could
O	16384	16389	still
O	16390	16393	add
O	16394	16395	3
O	16396	16401	lines
O	16402	16404	in
O	16405	16407	my
O	16408	16411	xml
O	16412	16418	config
O	16419	16420	.

O	16421	16424	But
O	16425	16431	Spring
O	16432	16433	3
O	16433	16434	.
O	16434	16435	x
O	16436	16446	introduced
O	16447	16448	a
O	16449	16452	new
O	16453	16456	way
O	16457	16459	to
O	16460	16462	do
O	16463	16465	it
O	16465	16466	,
O	16467	16472	using
B-api_mention	16473	16483	Converters
O	16484	16485	:
O	16486	16487	#
O	16487	16497	blockquote
O	16498	16500	So
O	16501	16504	let
O	16504	16505	'
O	16505	16506	s
O	16507	16510	say
O	16511	16512	I
O	16513	16517	want
O	16518	16520	to
O	16521	16524	use
B-api_mention	16525	16535	Converters
O	16536	16543	because
O	16544	16546	it
O	16547	16549	is
O	16550	16551	"
O	16551	16554	the
O	16555	16561	latest
O	16562	16573	alternative
O	16573	16574	"
O	16574	16575	.

O	16576	16577	I
O	16578	16583	would
O	16584	16588	have
O	16589	16591	to
O	16592	16598	create
O	16599	16602	two
O	16603	16613	converters
O	16614	16615	:
O	16616	16617	#
O	16617	16620	pre
O	16621	16626	First
O	16627	16635	drawback
O	16636	16637	:
O	16638	16639	I
O	16640	16644	have
O	16645	16647	to
O	16648	16652	make
O	16653	16656	two
O	16657	16664	classes
O	16664	16665	.

O	16666	16673	Benefit
O	16674	16675	:
O	16676	16678	no
O	16679	16683	need
O	16684	16686	to
O	16687	16691	cast
O	16692	16698	thanks
O	16699	16701	to
O	16702	16712	genericity
O	16712	16713	.

O	16714	16718	Then
O	16718	16719	,
O	16720	16723	how
O	16724	16726	do
O	16727	16728	I
O	16729	16735	simply
O	16736	16740	data
O	16741	16745	bind
O	16746	16749	the
B-api_mention	16750	16760	converters
O	16761	16762	?

O	16763	16769	Second
O	16770	16778	drawback
O	16779	16780	:
O	16781	16782	I
O	16783	16788	haven
O	16788	16789	'
O	16789	16790	t
O	16791	16796	found
O	16797	16800	any
O	16801	16807	simple
O	16808	16811	way
O	16812	16813	(
O	16813	16824	annotations
O	16825	16827	or
O	16828	16833	other
O	16834	16846	programmatic
O	16847	16857	facilities
O	16857	16858	)
O	16859	16861	to
O	16862	16864	do
O	16865	16867	it
O	16868	16870	in
O	16871	16872	a
O	16873	16883	controller
O	16884	16885	:
O	16886	16893	nothing
O	16894	16898	like
O	16899	16915	someSpringObject
O	16915	16916	.
O	16916	16939	registerCustomConverter
O	16939	16940	(
O	16940	16944	args
O	16944	16945	)
O	16945	16946	;
O	16947	16948	.

O	16949	16952	The
O	16953	16957	only
O	16958	16962	ways
O	16963	16964	I
O	16964	16965	'
O	16965	16967	ve
O	16968	16973	found
O	16974	16979	would
O	16980	16982	be
O	16983	16990	tedious
O	16990	16991	,
O	16992	16995	not
O	16996	17002	simple
O	17002	17003	,
O	17004	17007	and
O	17008	17012	only
O	17013	17018	about
O	17019	17026	general
O	17027	17032	cross
O	17032	17033	-
O	17033	17043	controller
O	17044	17051	binding
O	17052	17053	:
O	17054	17055	#
O	17055	17057	li
O	17058	17061	XML
O	17062	17068	config
O	17069	17070	:
O	17071	17072	#
O	17072	17075	pre
O	17076	17077	#
O	17077	17079	li
O	17080	17084	Java
O	17085	17091	config
O	17092	17093	(
O	17094	17098	only
O	17099	17101	in
O	17102	17108	Spring
O	17109	17110	3
O	17110	17111	.
O	17111	17112	1
O	17112	17113	+
O	17114	17115	)
O	17116	17117	:
O	17118	17119	#
O	17119	17122	pre
O	17123	17127	With
O	17128	17131	all
O	17132	17137	these
O	17138	17147	drawbacks
O	17147	17148	,
O	17149	17152	why
O	17153	17158	using
B-api_mention	17159	17169	Converters
O	17170	17171	?

O	17172	17174	Am
O	17175	17176	I
O	17177	17184	missing
O	17185	17194	something
O	17195	17196	?

O	17197	17200	Are
O	17201	17206	there
O	17207	17212	other
O	17213	17219	tricks
O	17220	17224	that
O	17225	17226	I
O	17227	17229	am
O	17230	17233	not
O	17234	17239	aware
O	17240	17242	of
O	17243	17244	?

O	17245	17246	I
O	17247	17249	am
O	17250	17257	tempted
O	17258	17260	to
O	17261	17263	go
O	17264	17266	on
O	17267	17272	using
B-api_mention	17273	17288	PropertyEditors
O	17288	17289	.
O	17289	17290	.
O	17290	17291	.

O	17292	17299	Binding
O	17300	17302	is
O	17303	17307	much
O	17308	17314	easier
O	17315	17318	and
O	17319	17326	quicker
O	17326	17327	.

O	17329	17337	Question
O	17337	17338	-
O	17338	17346	13291076

O	17347	17349	If
O	17350	17353	you
O	17354	17358	look
O	17359	17361	in
O	17362	17365	the
O	17366	17370	enum
O	17371	17374	api
O	17375	17377	at
O	17378	17381	the
O	17382	17388	method
B-api_mention	17389	17393	name
I-api_mention	17393	17394	(
I-api_mention	17394	17398	args
O	17398	17399	)
O	17400	17402	it
O	17403	17407	says
O	17408	17412	that
O	17412	17413	:
O	17414	17415	#
O	17415	17425	blockquote
O	17426	17429	Why
O	17430	17432	is
O	17433	17439	better
O	17440	17442	to
O	17443	17446	use
B-api_mention	17447	17455	toString
I-api_mention	17455	17456	(
I-api_mention	17456	17460	args
O	17460	17461	)
O	17462	17463	?

O	17464	17465	I
O	17466	17470	mean
B-api_mention	17471	17479	toString
O	17480	17483	may
O	17484	17486	be
O	17487	17497	overridden
O	17498	17502	when
B-api_mention	17503	17507	name
I-api_mention	17507	17508	(
O	17508	17509	)
O	17510	17512	is
O	17513	17520	already
O	17521	17526	final
O	17526	17527	.

O	17528	17530	So
O	17531	17533	if
O	17534	17537	you
O	17538	17541	use
B-api_mention	17542	17550	toString
O	17551	17554	and
O	17555	17562	someone
O	17563	17572	overrides
O	17573	17575	it
O	17576	17578	to
O	17579	17585	return
O	17586	17587	a
O	17588	17592	hard
O	17592	17593	-
O	17593	17598	coded
O	17599	17604	value
O	17605	17609	your
O	17610	17615	whole
O	17616	17627	application
O	17628	17630	is
O	17631	17635	down
O	17635	17636	.
O	17636	17637	.
O	17637	17638	.

O	17639	17643	Also
O	17644	17646	if
O	17647	17650	you
O	17651	17655	look
O	17656	17658	in
O	17659	17662	the
O	17663	17670	sources
O	17671	17674	the
B-api_mention	17675	17683	toString
I-api_mention	17683	17684	(
O	17684	17685	)
O	17686	17692	method
O	17693	17700	returns
O	17701	17708	exactly
O	17709	17712	and
O	17713	17717	just
O	17718	17721	the
O	17722	17726	name
O	17726	17727	.

O	17728	17730	It
O	17730	17731	'
O	17731	17732	s
O	17733	17736	the
O	17737	17741	same
O	17742	17747	thing
O	17747	17748	.

O	17750	17758	Question
O	17758	17759	-
O	17759	17767	13744450

O	17768	17771	The
O	17772	17783	interviewer
O	17784	17789	asked
O	17790	17792	me
O	17792	17793	:
O	17794	17795	#
O	17795	17805	blockquote
O	17806	17807	I
O	17808	17812	wasn
O	17812	17813	'
O	17813	17814	t
O	17815	17820	aware
O	17821	17823	of
O	17824	17829	these
O	17830	17835	terms
O	17835	17836	.

O	17837	17839	So
O	17839	17840	,
O	17841	17845	when
O	17846	17847	I
O	17848	17852	came
O	17853	17857	back
O	17858	17860	to
O	17861	17865	home
O	17865	17866	,
O	17867	17871	then
O	17872	17873	I
O	17874	17881	started
O	17882	17889	looking
O	17890	17894	into
O	17895	17901	Google
O	17902	17907	about
B-api_mention	17908	17916	Observer
O	17917	17920	and
B-api_mention	17921	17931	Observable
O	17932	17935	and
O	17936	17941	found
O	17942	17946	some
O	17947	17952	point
O	17953	17957	from
O	17958	17967	different
O	17968	17977	resources
O	17978	17979	:
O	17980	17981	#
O	17981	17991	blockquote
O	17992	17993	I
O	17994	17999	found
O	18000	18004	this
O	18005	18012	example
O	18012	18013	:
O	18014	18015	#
O	18015	18018	pre
O	18019	18022	But
O	18023	18024	I
O	18024	18025	'
O	18025	18026	m
O	18027	18032	still
O	18033	18039	unable
O	18040	18042	to
O	18043	18049	figure
O	18050	18053	out
O	18054	18057	why
O	18058	18060	do
O	18061	18063	we
O	18064	18068	need
B-api_mention	18069	18077	Observer
O	18078	18081	and
B-api_mention	18082	18092	Observable
O	18093	18094	?

O	18095	18099	What
O	18100	18103	are
O	18104	18107	the
B-api_mention	18108	18118	setChanged
I-api_mention	18118	18119	(
I-api_mention	18119	18123	args
O	18123	18124	)
O	18125	18128	and
B-api_mention	18129	18144	notifyObservers
I-api_mention	18144	18145	(
I-api_mention	18145	18149	args
O	18149	18150	)
O	18151	18158	methods
O	18159	18162	for
O	18162	18163	?

O	18165	18173	Question
O	18173	18174	-
O	18174	18182	12732422

O	18183	18184	I
O	18184	18185	'
O	18185	18186	m
O	18187	18193	trying
O	18194	18196	to
O	18197	18200	add
O	18201	18207	header
O	18208	18211	for
O	18212	18214	my
O	18215	18222	request
O	18223	18228	using
B-api_mention	18229	18246	HttpUrlConnection
O	18247	18250	but
O	18251	18254	the
O	18255	18261	method
B-api_mention	18262	18280	setRequestProperty
I-api_mention	18280	18281	(
I-api_mention	18281	18285	args
O	18285	18286	)
O	18287	18292	doesn
O	18292	18293	'
O	18293	18294	t
O	18295	18299	seem
O	18300	18307	working
O	18307	18308	.

O	18309	18312	The
O	18313	18319	server
O	18320	18324	side
O	18325	18330	doesn
O	18330	18331	'
O	18331	18332	t
O	18333	18340	receive
O	18341	18344	any
O	18345	18352	request
O	18353	18357	with
O	18358	18360	my
O	18361	18367	header
O	18367	18368	.

O	18369	18372	Can
O	18373	18379	anyone
O	18380	18384	help
O	18385	18387	me
O	18387	18388	?

O	18389	18395	Thanks
O	18396	18398	in
O	18399	18406	advance
O	18406	18407	.

O	18408	18409	#
O	18409	18412	pre

O	18414	18422	Question
O	18422	18423	-
O	18423	18431	11821801

O	18432	18433	I
O	18433	18434	'
O	18434	18435	m
O	18436	18442	trying
O	18443	18445	to
O	18446	18456	understand
O	18457	18461	what
O	18462	18467	makes
O	18468	18471	the
O	18472	18476	lock
O	18477	18479	in
O	18480	18491	concurrency
O	18492	18494	so
O	18495	18504	important
O	18505	18507	if
O	18508	18511	one
O	18512	18515	can
O	18516	18519	use
B-api_mention	18520	18532	synchronized
I-api_mention	18532	18533	(
I-api_mention	18533	18537	args
O	18537	18538	)
O	18539	18540	.

O	18541	18543	In
O	18544	18547	the
O	18548	18553	dummy
O	18554	18558	code
O	18559	18564	below
O	18564	18565	,
O	18566	18567	I
O	18568	18571	can
O	18572	18574	do
O	18575	18581	either
O	18581	18582	:
O	18583	18584	#
O	18584	18586	li
O	18587	18599	synchronized
O	18600	18603	the
O	18604	18610	entire
O	18611	18617	method
O	18618	18620	or
O	18621	18632	synchronize
O	18633	18636	the
O	18637	18647	vulnerable
O	18648	18652	area
B-api_mention	18653	18654	(
I-api_mention	18654	18666	synchronized
I-api_mention	18666	18667	(
I-api_mention	18667	18671	this
O	18671	18672	)
O	18672	18673	{
O	18673	18674	.
O	18674	18675	.
O	18675	18676	.
O	18676	18677	}
O	18677	18678	)
O	18679	18680	#
O	18680	18682	li
O	18683	18685	OR
O	18686	18690	lock
O	18691	18694	the
O	18695	18705	vulnerable
O	18706	18710	code
O	18711	18715	area
O	18716	18720	with
O	18721	18722	a
B-api_mention	18723	18736	ReentrantLock
O	18737	18738	.

O	18739	18743	Code
O	18743	18744	:
O	18745	18746	#
O	18746	18749	pre

O	18751	18759	Question
O	18759	18760	-
O	18760	18768	13659217

O	18769	18770	I
O	18771	18778	declare
O	18779	18781	an
O	18782	18786	enum
O	18787	18789	as
O	18790	18791	:
O	18792	18796	enum
O	18797	18800	Sex
O	18801	18802	{
O	18802	18806	MALE
O	18806	18807	,
O	18807	18813	FEMALE
O	18813	18814	}
O	18814	18815	;
O	18816	18819	And
O	18820	18824	then
O	18824	18825	,
O	18826	18833	iterate
O	18834	18838	enum
O	18839	18841	as
O	18842	18847	shown
O	18848	18853	below
O	18854	18855	:
O	18856	18857	#
O	18857	18860	pre
O	18861	18862	I
O	18863	18870	checked
O	18871	18874	the
O	18875	18879	Java
O	18880	18883	API
O	18884	18887	but
O	18888	18891	can
O	18891	18892	'
O	18892	18893	t
O	18894	18898	find
O	18899	18902	the
B-api_mention	18903	18909	values
I-api_mention	18909	18910	(
O	18910	18911	)
O	18912	18918	method
O	18918	18919	?

O	18920	18921	I
O	18921	18922	'
O	18922	18923	m
O	18924	18931	curious
O	18932	18934	as
O	18935	18937	to
O	18938	18943	where
O	18944	18948	this
O	18949	18955	method
O	18956	18961	comes
O	18962	18966	from
O	18966	18967	?

O	18968	18971	API
O	18972	18976	link
O	18977	18978	:
O	18979	18980	#
O	18980	18981	a

O	18983	18991	Question
O	18991	18992	-
O	18992	19000	14014086
O	19000	19001	,
O	19002	19008	answer
O	19008	19009	-
O	19009	19017	20784007

O	19018	19021	Ken
O	19021	19022	'
O	19022	19023	s
O	19024	19030	answer
O	19031	19033	is
O	19034	19043	basically
O	19044	19049	right
O	19050	19053	but
O	19054	19055	I
O	19055	19056	'
O	19056	19057	d
O	19058	19062	like
O	19063	19065	to
O	19066	19071	chime
O	19072	19074	in
O	19075	19077	on
O	19078	19081	the
O	19082	19083	"
O	19083	19086	why
O	19087	19092	would
O	19093	19096	you
O	19097	19101	want
O	19102	19104	to
O	19105	19108	use
O	19109	19112	one
O	19113	19117	over
O	19118	19121	the
O	19122	19127	other
O	19127	19128	?
O	19128	19129	"
O	19130	19134	part
O	19135	19137	of
O	19138	19142	your
O	19143	19151	question
O	19151	19152	.

O	19153	19159	Basics
O	19160	19163	The
O	19164	19168	base
O	19169	19178	interface
O	19179	19182	you
O	19183	19189	choose
O	19190	19193	for
O	19194	19198	your
O	19199	19209	repository
O	19210	19213	has
O	19214	19217	two
O	19218	19222	main
O	19223	19231	purposes
O	19231	19232	.

O	19233	19238	First
O	19238	19239	,
O	19240	19243	you
O	19244	19249	allow
O	19250	19253	the
O	19254	19260	Spring
O	19261	19265	Data
O	19266	19276	repository
O	19277	19291	infrastructure
O	19292	19294	to
O	19295	19299	find
O	19300	19304	your
O	19305	19314	interface
O	19315	19318	and
O	19319	19326	trigger
O	19327	19330	the
O	19331	19336	proxy
O	19337	19345	creation
O	19346	19348	so
O	19349	19353	that
O	19354	19357	you
O	19358	19364	inject
O	19365	19374	instances
O	19375	19377	of
O	19378	19381	the
O	19382	19391	interface
O	19392	19396	into
O	19397	19404	clients
O	19404	19405	.

O	19406	19409	The
O	19410	19416	second
O	19417	19424	purpose
O	19425	19427	is
O	19428	19430	to
O	19431	19435	pull
O	19436	19438	in
O	19439	19441	as
O	19442	19446	much
O	19447	19460	functionality
O	19461	19463	as
O	19464	19470	needed
O	19471	19475	into
O	19476	19479	the
O	19480	19489	interface
O	19490	19497	without
O	19498	19504	having
O	19505	19507	to
O	19508	19515	declare
O	19516	19521	extra
O	19522	19529	methods
O	19529	19530	.

O	19531	19534	The
O	19535	19541	common
O	19542	19552	interfaces
O	19553	19556	The
O	19557	19563	Spring
O	19564	19568	Data
O	19569	19573	core
O	19574	19581	library
O	19582	19587	ships
O	19588	19592	with
O	19593	19596	two
O	19597	19601	base
O	19602	19612	interfaces
O	19613	19617	that
O	19618	19624	expose
O	19625	19626	a
O	19627	19636	dedicated
O	19637	19640	set
O	19641	19643	of
O	19644	19659	functionalities
O	19659	19660	:
O	19661	19662	#
O	19662	19664	li
B-api_mention	19665	19679	CrudRepository
O	19680	19681	-
O	19682	19686	CRUD
O	19687	19694	methods
O	19695	19696	#
O	19696	19698	li
B-api_mention	19699	19725	PagingAndSortingRepository
O	19726	19727	-
O	19728	19735	methods
O	19736	19739	for
O	19740	19750	pagination
O	19751	19754	and
O	19755	19762	sorting
O	19763	19764	(
O	19764	19771	extends
B-api_mention	19772	19786	CrudRepository
O	19787	19788	)
O	19789	19794	Store
O	19794	19795	-
O	19795	19803	specific
O	19804	19814	interfaces
O	19815	19818	The
O	19819	19829	individual
O	19830	19835	store
O	19836	19843	modules
O	19844	19845	(
O	19845	19846	e
O	19846	19847	.
O	19847	19848	g
O	19848	19849	.
O	19850	19853	for
O	19854	19857	JPA
O	19858	19860	or
O	19861	19868	MongoDB
O	19868	19869	)
O	19870	19876	expose
O	19877	19882	store
O	19882	19883	-
O	19883	19891	specific
O	19892	19902	extensions
O	19903	19905	of
O	19906	19911	these
O	19912	19916	base
O	19917	19927	interfaces
O	19928	19930	to
O	19931	19936	allow
O	19937	19943	access
O	19944	19946	to
O	19947	19952	store
O	19952	19953	-
O	19953	19961	specific
O	19962	19975	functionality
O	19976	19980	like
O	19981	19989	flushing
O	19990	19992	or
O	19993	20002	dedicated
O	20003	20011	batching
O	20012	20016	that
O	20017	20021	take
O	20022	20026	some
O	20027	20032	store
O	20033	20042	specifics
O	20043	20047	into
O	20048	20055	account
O	20055	20056	.

O	20057	20059	An
O	20060	20067	example
O	20068	20071	for
O	20072	20076	this
O	20077	20079	is
B-api_mention	20080	20093	deleteInBatch
I-api_mention	20093	20094	(
I-api_mention	20094	20098	args
O	20098	20099	)
O	20100	20102	of
B-api_mention	20103	20116	JpaRepository
O	20117	20122	which
O	20123	20125	is
O	20126	20135	different
O	20136	20140	from
B-api_mention	20141	20147	delete
I-api_mention	20147	20148	(
I-api_mention	20148	20152	args
O	20152	20153	)
O	20154	20156	as
O	20157	20159	it
O	20160	20164	uses
O	20165	20166	a
O	20167	20172	query
O	20173	20175	to
O	20176	20182	delete
O	20183	20186	the
O	20187	20192	given
O	20193	20201	entities
O	20202	20207	which
O	20208	20210	is
O	20211	20215	more
O	20216	20226	performant
O	20227	20230	but
O	20231	20236	comes
O	20237	20241	with
O	20242	20245	the
O	20246	20250	side
O	20251	20257	effect
O	20258	20260	of
O	20261	20264	not
O	20265	20275	triggering
O	20276	20279	the
O	20280	20283	JPA
O	20283	20284	-
O	20284	20291	defined
O	20292	20300	cascades
O	20301	20302	(
O	20302	20304	as
O	20305	20308	the
O	20309	20313	spec
O	20314	20321	defines
O	20322	20324	it
O	20324	20325	)
O	20325	20326	.

O	20327	20329	We
O	20330	20339	generally
O	20340	20349	recommend
O	20350	20353	not
O	20354	20356	to
O	20357	20360	use
O	20361	20366	these
O	20367	20371	base
O	20372	20382	interfaces
O	20383	20385	as
O	20386	20390	they
O	20391	20397	expose
O	20398	20401	the
O	20402	20412	underlying
O	20413	20424	persistence
O	20425	20435	technology
O	20436	20438	to
O	20439	20442	the
O	20443	20450	clients
O	20451	20454	and
O	20455	20459	thus
O	20460	20467	tighten
O	20468	20471	the
O	20472	20480	coupling
O	20481	20488	between
O	20489	20493	them
O	20494	20497	and
O	20498	20501	the
O	20502	20512	repository
O	20512	20513	.

O	20514	20518	Plus
O	20518	20519	,
O	20520	20523	you
O	20524	20527	get
O	20528	20529	a
O	20530	20533	bit
O	20534	20538	away
O	20539	20543	from
O	20544	20547	the
O	20548	20556	original
O	20557	20567	definition
O	20568	20570	of
O	20571	20572	a
O	20573	20583	repository
O	20584	20589	which
O	20590	20592	is
O	20593	20602	basically
O	20603	20604	"
O	20604	20605	a
O	20606	20616	collection
O	20617	20619	of
O	20620	20628	entities
O	20628	20629	"
O	20629	20630	.

O	20631	20633	So
O	20634	20636	if
O	20637	20640	you
O	20641	20644	can
O	20644	20645	,
O	20646	20650	stay
O	20651	20655	with
B-api_mention	20656	20682	PagingAndSortingRepository
O	20683	20684	.

O	20685	20691	Custom
O	20692	20702	repository
O	20703	20707	base
O	20708	20718	interfaces
O	20719	20722	The
O	20723	20731	downside
O	20732	20734	of
O	20735	20743	directly
O	20744	20753	depending
O	20754	20756	on
O	20757	20760	one
O	20761	20763	of
O	20764	20767	the
O	20768	20776	provided
O	20777	20781	base
O	20782	20792	interfaces
O	20793	20795	is
O	20796	20799	two
O	20799	20800	-
O	20800	20804	fold
O	20804	20805	.

O	20806	20810	Both
O	20811	20813	of
O	20814	20818	them
O	20819	20824	might
O	20825	20827	be
O	20828	20838	considered
O	20839	20841	as
O	20842	20853	theoretical
O	20854	20857	but
O	20858	20859	I
O	20860	20865	think
O	20866	20870	they
O	20870	20871	'
O	20871	20873	re
O	20874	20883	important
O	20884	20886	to
O	20887	20889	be
O	20890	20895	aware
O	20896	20898	of
O	20898	20899	:
O	20900	20901	#
O	20901	20903	li
O	20904	20913	Depending
O	20914	20916	on
O	20917	20918	a
O	20919	20920	a
O	20921	20927	Spring
O	20928	20932	Data
O	20933	20943	repository
O	20944	20953	interface
O	20954	20961	couples
O	20962	20966	your
O	20967	20977	repository
O	20978	20987	interface
O	20988	20990	to
O	20991	20994	the
O	20995	21002	library
O	21002	21003	.

O	21004	21005	I
O	21006	21009	don
O	21009	21010	'
O	21010	21011	t
O	21012	21017	think
O	21018	21022	this
O	21023	21025	is
O	21026	21027	a
O	21028	21038	particular
O	21039	21044	issue
O	21045	21047	as
O	21048	21051	you
O	21051	21052	'
O	21052	21054	ll
O	21055	21063	probably
O	21064	21067	use
O	21068	21080	abstractions
O	21081	21085	like
B-api_mention	21086	21090	Page
O	21091	21093	or
B-api_mention	21094	21102	Pageable
O	21103	21105	in
O	21106	21110	your
O	21111	21115	code
O	21116	21122	anyway
O	21122	21123	.

O	21124	21130	Spring
O	21131	21135	Data
O	21136	21138	is
O	21139	21142	not
O	21143	21146	any
O	21147	21156	different
O	21157	21161	from
O	21162	21165	any
O	21166	21171	other
O	21172	21179	general
O	21180	21187	purpose
O	21188	21195	library
O	21196	21200	like
O	21201	21208	commons
O	21208	21209	-
O	21209	21213	lang
O	21214	21216	or
O	21217	21222	Guava
O	21222	21223	.

O	21224	21226	As
O	21227	21231	long
O	21232	21234	as
O	21235	21237	it
O	21238	21246	provides
O	21247	21257	reasonable
O	21258	21265	benefit
O	21265	21266	,
O	21267	21269	it
O	21269	21270	'
O	21270	21271	s
O	21272	21276	just
O	21277	21281	fine
O	21281	21282	.

O	21283	21284	#
O	21284	21286	li
O	21287	21289	By
O	21290	21299	extending
O	21300	21301	e
O	21301	21302	.
O	21302	21303	g
O	21303	21304	.
B-api_mention	21305	21319	CrudRepository
O	21320	21321	,
O	21322	21325	you
O	21326	21332	expose
O	21333	21334	a
O	21335	21343	complete
O	21344	21347	set
O	21348	21350	of
O	21351	21362	persistence
O	21363	21369	method
O	21370	21372	at
O	21373	21377	once
O	21377	21378	.

O	21379	21383	This
O	21384	21386	is
O	21387	21395	probably
O	21396	21400	fine
O	21401	21403	in
O	21404	21408	most
O	21409	21422	circumstances
O	21423	21425	as
O	21426	21430	well
O	21431	21434	but
O	21435	21438	you
O	21439	21444	might
O	21445	21448	run
O	21449	21453	into
O	21454	21464	situations
O	21465	21470	where
O	21471	21474	you
O	21474	21475	'
O	21475	21476	d
O	21477	21481	like
O	21482	21484	to
O	21485	21489	gain
O	21490	21494	more
O	21495	21499	fine
O	21499	21500	-
O	21500	21507	grained
O	21508	21515	control
O	21516	21520	over
O	21521	21524	the
O	21525	21532	methods
O	21533	21539	expose
O	21539	21540	,
O	21541	21542	e
O	21542	21543	.
O	21543	21544	g
O	21544	21545	.
O	21546	21548	to
O	21549	21555	create
O	21556	21557	a
B-api_mention	21558	21576	ReadOnlyRepository
O	21577	21581	that
O	21582	21587	doesn
O	21587	21588	'
O	21588	21589	t
O	21590	21597	include
O	21598	21601	the
B-api_mention	21602	21606	save
I-api_mention	21606	21607	(
I-api_mention	21607	21611	args
O	21611	21612	)
O	21613	21616	and
B-api_mention	21617	21623	delete
I-api_mention	21623	21624	(
I-api_mention	21624	21628	args
O	21628	21629	)
O	21630	21637	methods
O	21638	21640	of
B-api_mention	21641	21655	CrudRepository
O	21656	21657	.

O	21658	21661	The
O	21662	21670	solution
O	21671	21673	to
O	21674	21678	both
O	21679	21681	of
O	21682	21687	these
O	21688	21697	downsides
O	21698	21700	is
O	21701	21703	to
O	21704	21709	craft
O	21710	21714	your
O	21715	21718	own
O	21719	21723	base
O	21724	21734	repository
O	21735	21744	interface
O	21745	21747	or
O	21748	21752	even
O	21753	21754	a
O	21755	21758	set
O	21759	21761	of
O	21762	21766	them
O	21766	21767	.

O	21768	21770	In
O	21771	21772	a
O	21773	21776	lot
O	21777	21779	of
O	21780	21792	applications
O	21793	21795	we
O	21795	21796	'
O	21796	21798	ve
O	21799	21803	seen
O	21804	21813	something
O	21814	21818	like
O	21819	21823	this
O	21823	21824	:
O	21825	21826	#
O	21826	21829	pre
O	21830	21833	The
O	21834	21839	first
O	21840	21850	repository
O	21851	21860	interface
O	21861	21863	is
O	21864	21868	some
O	21869	21876	general
O	21877	21884	purpose
O	21885	21889	base
O	21890	21899	interface
O	21900	21904	that
O	21905	21913	actually
O	21914	21918	only
O	21919	21924	fixes
O	21925	21930	point
O	21931	21932	1
O	21933	21936	but
O	21937	21941	also
O	21942	21946	ties
O	21947	21950	the
O	21951	21953	ID
O	21954	21958	type
O	21959	21961	to
O	21962	21964	be
O	21965	21969	Long
O	21970	21973	for
O	21974	21985	consistency
O	21985	21986	.

O	21987	21990	The
O	21991	21997	second
O	21998	22007	interface
O	22008	22015	usually
O	22016	22019	has
O	22020	22023	all
O	22024	22027	the
B-api_mention	22028	22032	find
I-api_mention	22032	22033	â
I-api_mention	22033	22034	
I-api_mention	22034	22035	¦
O	22035	22036	(
O	22036	22037	â
O	22037	22038	
O	22038	22039	¦
O	22039	22040	)
O	22041	22048	methods
O	22049	22055	copied
B-api_mention	22056	22060	from
I-api_mention	22061	22075	CrudRepository
I-api_mention	22076	22079	and
I-api_mention	22080	22106	PagingAndSortingRepository
O	22107	22110	but
O	22111	22115	does
O	22116	22119	not
O	22120	22126	expose
O	22127	22130	the
O	22131	22143	manipulating
O	22144	22148	ones
O	22148	22149	.

O	22150	22154	Read
O	22155	22159	more
O	22160	22162	on
O	22163	22167	that
O	22168	22176	approach
O	22177	22179	in
O	22180	22183	the
O	22184	22193	reference
O	22194	22207	documentation
O	22208	22209	.

O	22210	22217	Summary
O	22218	22219	-
O	22220	22222	tl
O	22222	22223	;
O	22223	22225	dr
O	22226	22229	The
O	22230	22240	repository
O	22241	22252	abstraction
O	22253	22259	allows
O	22260	22263	you
O	22264	22266	to
O	22267	22272	pickt
O	22273	22276	the
O	22277	22281	base
O	22282	22292	repository
O	22293	22300	totally
O	22301	22307	driven
O	22308	22310	by
O	22311	22314	you
O	22315	22328	architectural
O	22329	22332	and
O	22333	22343	functional
O	22344	22349	needs
O	22349	22350	.

O	22351	22354	Use
O	22355	22358	the
O	22359	22363	ones
O	22364	22372	provided
O	22373	22376	out
O	22377	22379	of
O	22380	22383	the
O	22384	22387	box
O	22388	22390	if
O	22391	22395	they
O	22396	22400	suit
O	22400	22401	,
O	22402	22407	craft
O	22408	22412	your
O	22413	22416	own
O	22417	22427	repository
O	22428	22432	base
O	22433	22443	interfaces
O	22444	22446	if
O	22447	22456	necessary
O	22456	22457	.

O	22458	22462	Stay
O	22463	22467	away
O	22468	22472	from
O	22473	22476	the
O	22477	22482	store
O	22483	22491	specific
O	22492	22502	repository
O	22503	22513	interfaces
O	22514	22520	unless
O	22521	22532	unavoidable
O	22532	22533	.

O	22535	22543	Question
O	22543	22544	-
O	22544	22552	12317668
O	22552	22553	,
O	22554	22560	answer
O	22560	22561	-
O	22561	22569	12375312

O	22570	22574	Here
O	22575	22577	we
O	22578	22581	are
O	22582	22587	faced
O	22588	22592	with
O	22593	22594	a
O	22595	22598	bug
O	22599	22601	in
O	22602	22605	the
O	22606	22609	JIT
O	22609	22610	-
O	22610	22618	compiler
O	22618	22619	.

O	22620	22628	Compiler
O	22629	22639	determines
O	22640	22644	that
O	22645	22648	the
O	22649	22658	allocated
O	22659	22664	array
O	22665	22667	is
O	22668	22674	filled
O	22675	22680	after
B-api_mention	22681	22691	allocation
I-api_mention	22692	22694	in
I-api_mention	22695	22701	Arrays
I-api_mention	22701	22702	.
I-api_mention	22702	22706	fill
I-api_mention	22706	22707	(
O	22707	22711	args
O	22711	22712	)
O	22713	22714	,
O	22715	22718	but
O	22719	22722	the
O	22723	22728	check
O	22729	22732	for
O	22733	22737	uses
O	22738	22745	between
O	22746	22749	the
O	22750	22760	allocation
O	22761	22764	and
O	22765	22768	the
O	22769	22773	fill
O	22774	22776	is
O	22777	22783	faulty
O	22783	22784	.

O	22785	22787	So
O	22787	22788	,
O	22789	22797	compiler
O	22798	22806	performs
O	22807	22809	an
O	22810	22817	illegal
O	22818	22830	optimization
O	22831	22832	-
O	22833	22835	it
O	22836	22841	skips
O	22842	22849	zeroing
O	22850	22852	of
O	22853	22862	allocated
O	22863	22868	array
O	22868	22869	.

O	22870	22874	This
O	22875	22878	bug
O	22879	22881	is
O	22882	22888	placed
O	22889	22891	in
O	22892	22898	Oracle
O	22899	22902	bug
O	22903	22910	tracker
O	22911	22912	(
O	22913	22916	bug
O	22917	22919	id
O	22920	22927	7196857
O	22928	22929	)
O	22929	22930	.

O	22931	22944	Unfortunately
O	22944	22945	,
O	22946	22947	I
O	22948	22951	did
O	22952	22955	not
O	22956	22960	wait
O	22961	22964	for
O	22965	22968	any
O	22969	22983	clarifications
O	22984	22988	from
O	22989	22995	Oracle
O	22996	23001	about
O	23002	23005	the
O	23006	23015	following
O	23016	23022	points
O	23022	23023	.

O	23024	23026	As
O	23027	23028	I
O	23029	23032	see
O	23032	23033	,
O	23034	23038	this
O	23039	23042	bug
O	23043	23045	is
O	23046	23048	OS
O	23048	23049	-
O	23049	23057	specific
O	23057	23058	:
O	23059	23061	it
O	23062	23072	absolutely
O	23073	23085	reproducible
O	23086	23088	on
O	23089	23091	64
O	23091	23092	-
O	23092	23095	bit
O	23096	23101	Linux
O	23102	23105	and
O	23106	23109	Mac
O	23109	23110	,
O	23111	23114	but
O	23114	23115	,
O	23116	23118	as
O	23119	23120	I
O	23121	23124	see
O	23125	23129	from
O	23130	23138	comments
O	23138	23139	,
O	23140	23142	it
O	23143	23153	reproduces
O	23154	23157	not
O	23158	23167	regularly
O	23168	23170	on
O	23171	23178	Windows
O	23179	23180	(
O	23180	23183	for
O	23184	23191	similar
O	23192	23200	versions
O	23201	23203	of
O	23204	23207	JDK
O	23207	23208	)
O	23208	23209	.

O	23210	23222	Additionally
O	23223	23225	it
O	23226	23231	would
O	23232	23234	be
O	23235	23239	nice
O	23240	23242	to
O	23243	23247	know
O	23248	23252	when
O	23253	23257	this
O	23258	23261	bug
O	23262	23266	will
O	23267	23269	be
O	23270	23275	fixed
O	23275	23276	.

O	23277	23282	There
O	23283	23285	is
O	23286	23290	only
O	23291	23297	advice
O	23298	23300	at
O	23301	23304	the
O	23305	23311	moment
O	23311	23312	:
O	23313	23315	do
O	23316	23319	not
O	23320	23323	use
O	23324	23328	JDK1
O	23328	23329	.
O	23329	23330	7
O	23330	23331	.
O	23331	23332	0
O	23332	23333	_
O	23333	23335	04
O	23336	23338	or
O	23339	23344	later
O	23345	23347	if
O	23348	23351	you
O	23352	23358	depend
O	23359	23361	on
O	23362	23365	JLS
O	23366	23369	for
O	23370	23375	newly
O	23376	23384	declared
O	23385	23391	arrays
O	23391	23392	.

O	23393	23399	Update
O	23400	23402	at
O	23403	23410	October
O	23411	23412	5
O	23412	23413	:
O	23414	23416	In
O	23417	23420	the
O	23421	23424	new
O	23425	23430	Build
O	23431	23433	10
O	23434	23436	of
O	23437	23440	the
O	23441	23444	JDK
O	23445	23449	7u10
O	23450	23451	(
O	23451	23456	early
O	23457	23463	access
O	23463	23464	)
O	23465	23473	released
O	23474	23476	at
O	23477	23484	October
O	23485	23487	04
O	23487	23488	,
O	23489	23493	2012
O	23493	23494	,
O	23495	23499	this
O	23500	23503	bug
O	23504	23507	was
O	23508	23513	fixed
O	23514	23516	at
O	23517	23522	least
O	23523	23526	for
O	23527	23532	Linux
O	23533	23535	OS
O	23536	23537	(
O	23537	23538	I
O	23539	23542	did
O	23543	23546	not
O	23547	23551	test
O	23552	23555	for
O	23556	23561	other
O	23561	23562	)
O	23562	23563	.

O	23564	23570	Thanks
O	23571	23573	to
O	23574	23575	@
O	23575	23581	Makoto
O	23581	23582	,
O	23583	23586	who
O	23587	23592	found
O	23593	23597	that
O	23598	23602	this
O	23603	23606	bug
O	23607	23609	is
O	23610	23612	no
O	23613	23619	longer
O	23620	23629	available
O	23630	23633	for
O	23634	23640	public
O	23641	23647	access
O	23648	23650	in
O	23651	23657	Oracle
O	23658	23661	bug
O	23662	23670	database
O	23670	23671	.

O	23672	23685	Unfortunately
O	23685	23686	,
O	23687	23688	I
O	23689	23691	do
O	23692	23695	not
O	23696	23700	know
O	23701	23704	for
O	23705	23708	the
O	23709	23716	reasons
O	23717	23723	Oracle
O	23724	23731	removed
O	23732	23734	it
O	23735	23739	from
O	23740	23746	public
O	23747	23753	access
O	23753	23754	,
O	23755	23758	but
O	23759	23761	it
O	23762	23764	is
O	23765	23774	available
O	23775	23777	in
O	23778	23784	Google
O	23785	23790	cache
O	23791	23792	.

O	23793	23797	Also
O	23797	23798	,
O	23799	23803	this
O	23804	23807	bug
O	23808	23811	has
O	23812	23818	caught
O	23819	23822	the
O	23823	23832	attention
O	23833	23835	of
O	23836	23842	Redhat
O	23842	23843	:
O	23844	23847	the
O	23848	23851	CVE
O	23852	23863	identifiers
O	23864	23867	CVE
O	23867	23868	-
O	23868	23872	2012
O	23872	23873	-
O	23873	23877	4420
O	23878	23879	(
O	23880	23888	bugzilla
O	23889	23890	)
O	23891	23894	and
O	23895	23898	CVE
O	23898	23899	-
O	23899	23903	2012
O	23903	23904	-
O	23904	23908	4416
O	23909	23910	(
O	23911	23919	bugzilla
O	23920	23921	)
O	23922	23926	were
O	23927	23935	assigned
O	23936	23938	to
O	23939	23943	this
O	23944	23948	flaw
O	23948	23949	.

O	23951	23959	Question
O	23959	23960	-
O	23960	23968	13604703
O	23968	23969	,
O	23970	23976	answer
O	23976	23977	-
O	23977	23985	13604748

O	23986	23993	Lambdas
O	23994	23997	are
O	23998	24004	purely
O	24005	24006	a
O	24007	24011	call
O	24011	24012	-
O	24012	24016	site
O	24017	24026	construct
O	24026	24027	:
O	24028	24031	the
O	24032	24041	recipient
O	24042	24044	of
O	24045	24048	the
O	24049	24055	lambda
O	24056	24060	does
O	24061	24064	not
O	24065	24069	need
O	24070	24072	to
O	24073	24077	know
O	24078	24082	that
O	24083	24084	a
O	24085	24091	Lambda
O	24092	24094	is
O	24095	24103	involved
O	24103	24104	,
O	24105	24112	instead
O	24113	24115	it
O	24116	24123	accepts
O	24124	24126	an
O	24127	24136	Interface
O	24137	24141	with
O	24142	24145	the
O	24146	24157	appropriate
O	24158	24164	method
O	24164	24165	.

O	24166	24168	In
O	24169	24174	other
O	24175	24180	words
O	24180	24181	,
O	24182	24185	you
O	24186	24192	define
O	24193	24195	or
O	24196	24199	use
O	24200	24201	a
O	24202	24212	functional
O	24213	24222	interface
O	24223	24224	(
O	24224	24225	i
O	24225	24226	.
O	24226	24227	e
O	24227	24228	.
O	24229	24231	an
O	24232	24241	interface
O	24242	24246	with
O	24247	24248	a
O	24249	24255	single
O	24256	24262	method
O	24262	24263	)
O	24264	24268	that
O	24269	24276	accepts
O	24277	24280	and
O	24281	24288	returns
O	24289	24296	exactly
O	24297	24301	what
O	24302	24305	you
O	24306	24310	want
O	24310	24311	.

O	24312	24315	For
O	24316	24320	this
O	24321	24325	Java
O	24326	24327	8
O	24328	24333	comes
O	24334	24338	with
O	24339	24340	a
O	24341	24344	set
O	24345	24347	of
O	24348	24356	commonly
O	24356	24357	-
O	24357	24361	used
O	24362	24371	interface
B-api_mention	24372	24377	types
I-api_mention	24378	24380	in
I-api_mention	24381	24385	java
I-api_mention	24385	24386	.
I-api_mention	24386	24390	util
I-api_mention	24390	24391	.
I-api_mention	24391	24399	function
O	24400	24401	(
O	24401	24407	thanks
O	24408	24410	to
O	24411	24418	Maurice
O	24419	24427	Naftalin
O	24428	24431	for
O	24432	24435	the
O	24436	24440	hint
O	24441	24446	about
O	24447	24450	the
O	24451	24458	JavaDoc
O	24458	24459	)
O	24459	24460	.

O	24461	24464	For
O	24465	24469	this
O	24470	24478	specific
O	24479	24482	use
O	24483	24487	case
B-api_mention	24488	24493	there
I-api_mention	24493	24494	'
I-api_mention	24494	24495	s
I-api_mention	24496	24500	java
I-api_mention	24500	24501	.
I-api_mention	24501	24505	util
I-api_mention	24505	24506	.
I-api_mention	24506	24514	function
I-api_mention	24514	24515	.
I-api_mention	24515	24532	IntBinaryOperator
O	24533	24537	with
O	24538	24539	a
O	24540	24546	single
B-api_mention	24547	24550	int
I-api_mention	24551	24561	applyAsInt
I-api_mention	24561	24562	(
I-api_mention	24562	24565	int
I-api_mention	24566	24570	left
I-api_mention	24570	24571	,
I-api_mention	24572	24575	int
I-api_mention	24576	24581	right
O	24581	24582	)
O	24583	24589	method
O	24590	24591	,
O	24592	24594	so
O	24595	24598	you
O	24599	24604	could
O	24605	24610	write
O	24611	24615	your
O	24616	24622	method
O	24623	24627	like
O	24628	24632	this
O	24632	24633	:
O	24634	24635	#
O	24635	24638	pre
O	24639	24642	But
O	24643	24646	you
O	24647	24650	can
O	24651	24655	just
O	24656	24658	as
O	24659	24663	well
O	24664	24670	define
O	24671	24675	your
O	24676	24679	own
O	24680	24689	interface
O	24690	24693	and
O	24694	24697	use
O	24698	24700	it
O	24701	24705	like
O	24706	24710	this
O	24710	24711	:
O	24712	24713	#
O	24713	24716	pre
O	24717	24722	Using
O	24723	24727	your
O	24728	24731	own
O	24732	24741	interface
O	24742	24745	has
O	24746	24749	the
O	24750	24759	advantage
O	24760	24764	that
O	24765	24768	you
O	24769	24772	can
O	24773	24777	have
O	24778	24783	names
O	24784	24788	that
O	24789	24793	more
O	24794	24801	clearly
O	24802	24810	indicate
O	24811	24814	the
O	24815	24821	intent
O	24821	24822	.

O	24824	24832	Question
O	24832	24833	-
O	24833	24841	13744450
O	24841	24842	,
O	24843	24849	answer
O	24849	24850	-
O	24850	24858	13744816

O	24859	24861	In
O	24862	24866	very
O	24867	24873	simple
O	24874	24879	terms
O	24880	24881	(
O	24881	24888	because
O	24889	24892	the
O	24893	24898	other
O	24899	24906	answers
O	24907	24910	are
O	24911	24920	referring
O	24921	24924	you
O	24925	24927	to
O	24928	24931	all
O	24932	24935	the
O	24936	24944	official
O	24945	24951	design
O	24952	24960	patterns
O	24961	24967	anyway
O	24967	24968	,
O	24969	24971	so
O	24972	24976	look
O	24977	24979	at
O	24980	24984	them
O	24985	24988	for
O	24989	24996	further
O	24997	25004	details
O	25004	25005	)
O	25005	25006	:
O	25007	25009	If
O	25010	25013	you
O	25014	25018	want
O	25019	25021	to
O	25022	25026	have
O	25027	25028	a
O	25029	25034	class
O	25035	25040	which
O	25041	25043	is
O	25044	25053	monitored
O	25054	25056	by
O	25057	25062	other
O	25063	25070	classes
O	25071	25073	in
O	25074	25077	the
O	25078	25087	ecosystem
O	25088	25090	of
O	25091	25095	your
O	25096	25103	program
O	25104	25107	you
O	25108	25111	say
O	25112	25116	that
O	25117	25120	you
O	25121	25125	want
O	25126	25129	the
O	25130	25135	class
O	25136	25138	to
O	25139	25141	be
O	25142	25152	observable
O	25152	25153	.

O	25154	25155	I
O	25155	25156	.
O	25156	25157	e
O	25157	25158	.
O	25159	25164	there
O	25165	25170	might
O	25171	25173	be
O	25174	25178	some
O	25179	25186	changes
O	25187	25189	in
O	25190	25193	its
O	25194	25199	state
O	25200	25205	which
O	25206	25209	you
O	25210	25215	would
O	25216	25220	want
O	25221	25223	to
O	25224	25233	broadcast
O	25234	25236	to
O	25237	25240	the
O	25241	25245	rest
O	25246	25248	of
O	25249	25252	the
O	25253	25260	program
O	25260	25261	.

O	25262	25265	Now
O	25265	25266	,
O	25267	25269	to
O	25270	25272	do
O	25273	25277	this
O	25278	25280	we
O	25281	25285	have
O	25286	25288	to
O	25289	25293	call
O	25294	25298	some
O	25299	25303	kind
O	25304	25306	of
O	25307	25313	method
O	25313	25314	.

O	25315	25317	We
O	25318	25321	don
O	25321	25322	'
O	25322	25323	t
O	25324	25328	want
O	25329	25332	the
O	25333	25343	Observable
O	25344	25349	class
O	25350	25352	to
O	25353	25355	be
O	25356	25363	tightly
O	25364	25371	coupled
O	25372	25376	with
O	25377	25380	the
O	25381	25388	classes
O	25389	25393	that
O	25394	25397	are
O	25398	25408	interested
O	25409	25411	in
O	25412	25421	observing
O	25422	25424	it
O	25424	25425	.

O	25426	25428	It
O	25429	25434	doesn
O	25434	25435	'
O	25435	25436	t
O	25437	25441	care
O	25442	25445	who
O	25446	25448	it
O	25449	25451	is
O	25452	25454	as
O	25455	25459	long
O	25460	25462	as
O	25463	25465	it
O	25466	25473	fulfils
O	25474	25481	certain
O	25482	25490	criteria
O	25490	25491	.

O	25492	25493	(
O	25493	25500	Imagine
O	25501	25503	it
O	25504	25506	is
O	25507	25508	a
O	25509	25514	radio
O	25515	25522	station
O	25522	25523	,
O	25524	25526	it
O	25527	25532	doesn
O	25532	25533	'
O	25533	25534	t
O	25535	25539	care
O	25540	25543	who
O	25544	25546	is
O	25547	25556	listening
O	25557	25559	as
O	25560	25564	long
O	25565	25567	as
O	25568	25572	they
O	25573	25577	have
O	25578	25580	an
O	25581	25583	FM
O	25584	25589	radio
O	25590	25595	tuned
O	25596	25598	on
O	25599	25604	their
O	25605	25614	frequency
O	25614	25615	)
O	25615	25616	.

O	25617	25619	To
O	25620	25627	achieve
O	25628	25632	that
O	25633	25635	we
O	25636	25639	use
O	25640	25642	an
O	25643	25652	interface
O	25652	25653	,
O	25654	25662	referred
O	25663	25665	to
O	25666	25668	as
O	25669	25672	the
O	25673	25681	Observer
O	25681	25682	.

O	25683	25692	Therefore
O	25692	25693	,
O	25694	25697	the
O	25698	25708	Observable
O	25709	25714	class
O	25715	25719	will
O	25720	25724	have
O	25725	25726	a
O	25727	25731	list
O	25732	25734	of
O	25735	25744	Observers
O	25745	25746	(
O	25746	25747	i
O	25747	25748	.
O	25748	25749	e
O	25749	25750	.
O	25751	25760	instances
O	25761	25773	implementing
O	25774	25777	the
O	25778	25786	Observer
O	25787	25796	interface
O	25797	25804	methods
O	25805	25808	you
O	25809	25814	might
O	25815	25819	have
O	25819	25820	)
O	25820	25821	.

O	25822	25830	Whenever
O	25831	25833	it
O	25834	25839	wants
O	25840	25842	to
O	25843	25852	broadcast
O	25853	25862	something
O	25862	25863	,
O	25864	25866	it
O	25867	25871	just
O	25872	25877	calls
O	25878	25881	the
O	25882	25888	method
O	25889	25891	on
O	25892	25895	all
O	25896	25899	the
O	25900	25909	observers
O	25909	25910	,
O	25911	25914	one
O	25915	25920	after
O	25921	25924	the
O	25925	25930	other
O	25930	25931	.

O	25932	25935	The
O	25936	25940	last
O	25941	25946	thing
O	25947	25949	to
O	25950	25955	close
O	25956	25959	the
O	25960	25966	puzzle
O	25967	25969	is
O	25970	25973	how
O	25974	25978	will
O	25979	25982	the
O	25983	25993	Observable
O	25994	25999	class
O	26000	26004	know
O	26005	26008	who
O	26009	26011	is
O	26012	26022	interested
O	26022	26023	?

O	26024	26026	So
O	26027	26030	the
O	26031	26041	Observable
O	26042	26047	class
O	26048	26052	must
O	26053	26058	offer
O	26059	26063	some
O	26064	26073	mechanism
O	26074	26076	to
O	26077	26082	allow
O	26083	26092	Observers
O	26093	26095	to
O	26096	26104	register
O	26105	26110	their
O	26111	26119	interest
O	26119	26120	.

O	26121	26122	A
O	26123	26129	method
B-api_mention	26130	26134	such
I-api_mention	26135	26137	as
I-api_mention	26138	26149	addObserver
I-api_mention	26149	26150	(
O	26150	26154	args
O	26154	26155	)
O	26156	26166	internally
O	26167	26171	adds
O	26172	26175	the
O	26176	26184	Observer
O	26185	26187	to
O	26188	26191	the
O	26192	26196	list
O	26197	26199	of
O	26200	26209	observers
O	26209	26210	,
O	26211	26213	so
O	26214	26218	that
O	26219	26223	when
O	26224	26233	something
O	26234	26243	important
O	26244	26251	happens
O	26251	26252	,
O	26253	26255	it
O	26256	26261	loops
O	26262	26269	through
O	26270	26273	the
O	26274	26278	list
O	26279	26282	and
O	26283	26288	calls
O	26289	26292	the
O	26293	26303	respective
O	26304	26316	notification
O	26317	26323	method
O	26324	26326	of
O	26327	26330	the
O	26331	26339	Observer
O	26340	26349	interface
O	26350	26352	of
O	26353	26357	each
O	26358	26366	instance
O	26367	26369	in
O	26370	26373	the
O	26374	26378	list
O	26378	26379	.

O	26380	26382	It
O	26383	26388	might
O	26389	26391	be
O	26392	26396	that
O	26397	26399	in
O	26400	26403	the
O	26404	26413	interview
O	26414	26418	they
O	26419	26422	did
O	26423	26426	not
O	26427	26430	ask
O	26431	26434	you
O	26435	26445	explicitly
O	26446	26451	about
B-api_mention	26452	26455	the
I-api_mention	26456	26460	java
I-api_mention	26460	26461	.
I-api_mention	26461	26465	util
I-api_mention	26465	26466	.
I-api_mention	26466	26474	Observer
I-api_mention	26475	26478	and
I-api_mention	26479	26483	java
I-api_mention	26483	26484	.
I-api_mention	26484	26488	util
I-api_mention	26488	26489	.
I-api_mention	26489	26499	Observable
O	26500	26503	but
O	26504	26509	about
O	26510	26513	the
O	26514	26521	generic
O	26522	26529	concept
O	26529	26530	.

O	26531	26534	The
O	26535	26542	concept
O	26543	26545	is
O	26546	26547	a
O	26548	26554	design
O	26555	26562	pattern
O	26562	26563	,
O	26564	26569	which
O	26570	26574	Java
O	26575	26582	happens
O	26583	26585	to
O	26586	26593	provide
O	26594	26601	support
O	26602	26605	for
O	26606	26614	directly
O	26615	26618	out
O	26619	26621	of
O	26622	26625	the
O	26626	26629	box
O	26630	26632	to
O	26633	26637	help
O	26638	26641	you
O	26642	26651	implement
O	26652	26654	it
O	26655	26662	quickly
O	26663	26667	when
O	26668	26671	you
O	26672	26676	need
O	26677	26679	it
O	26679	26680	.

O	26681	26683	So
O	26684	26685	I
O	26686	26691	would
O	26692	26699	suggest
O	26700	26704	that
O	26705	26708	you
O	26709	26719	understand
O	26720	26723	the
O	26724	26731	concept
O	26732	26738	rather
O	26739	26743	than
O	26744	26747	the
O	26748	26754	actual
O	26755	26762	methods
O	26762	26763	/
O	26763	26770	classes
O	26771	26772	(
O	26772	26777	which
O	26778	26781	you
O	26782	26785	can
O	26786	26790	look
O	26791	26793	up
O	26794	26798	when
O	26799	26802	you
O	26803	26807	need
O	26808	26812	them
O	26812	26813	)
O	26813	26814	.

O	26815	26821	UPDATE
O	26822	26824	In
O	26825	26833	response
O	26834	26836	to
O	26837	26841	your
O	26842	26849	comment
O	26849	26850	,
O	26851	26854	the
B-api_mention	26855	26861	actual
I-api_mention	26862	26866	java
I-api_mention	26866	26867	.
I-api_mention	26867	26871	util
I-api_mention	26871	26872	.
I-api_mention	26872	26882	Observable
O	26883	26888	class
O	26889	26895	offers
O	26896	26899	the
O	26900	26909	following
O	26910	26920	facilities
O	26920	26921	:
O	26922	26923	#
O	26923	26925	li
O	26926	26937	Maintaining
O	26938	26939	a
B-api_mention	26940	26944	list
I-api_mention	26945	26947	of
I-api_mention	26948	26952	java
I-api_mention	26952	26953	.
I-api_mention	26953	26957	util
I-api_mention	26957	26958	.
I-api_mention	26958	26966	Observer
O	26967	26976	instances
O	26976	26977	.

O	26978	26981	New
O	26982	26991	instances
O	26992	27002	interested
O	27003	27005	in
O	27006	27011	being
O	27012	27020	notified
O	27021	27024	can
O	27025	27027	be
O	27028	27033	added
B-api_mention	27034	27041	through
I-api_mention	27042	27053	addObserver
I-api_mention	27053	27054	(
O	27054	27058	args
O	27058	27059	)
O	27060	27061	,
O	27062	27065	and
O	27066	27073	removed
B-api_mention	27074	27081	through
I-api_mention	27082	27096	deleteObserver
I-api_mention	27096	27097	(
O	27097	27101	args
O	27101	27102	)
O	27103	27104	.

O	27105	27106	#
O	27106	27108	li
O	27109	27120	Maintaining
O	27121	27123	an
O	27124	27132	internal
O	27133	27138	state
O	27138	27139	,
O	27140	27150	specifying
O	27151	27158	whether
O	27159	27162	the
O	27163	27169	object
O	27170	27173	has
O	27174	27181	changed
O	27182	27187	since
O	27188	27191	the
O	27192	27196	last
O	27197	27209	notification
O	27210	27212	to
O	27213	27216	the
O	27217	27226	observers
O	27226	27227	.

O	27228	27232	This
O	27233	27235	is
O	27236	27242	useful
O	27243	27250	because
O	27251	27253	it
O	27254	27263	separates
O	27264	27267	the
O	27268	27272	part
O	27273	27278	where
O	27279	27282	you
O	27283	27286	say
O	27287	27291	that
B-api_mention	27292	27295	the
I-api_mention	27296	27306	Observable
O	27307	27310	has
O	27311	27318	changed
O	27318	27319	,
O	27320	27324	from
O	27325	27328	the
O	27329	27333	part
O	27334	27339	where
O	27340	27343	you
O	27344	27350	notify
O	27351	27354	the
O	27355	27362	changes
O	27362	27363	.

O	27364	27365	(
O	27365	27366	E
O	27366	27367	.
O	27367	27368	g
O	27368	27369	.
O	27370	27373	Its
O	27374	27380	useful
O	27381	27383	if
O	27384	27387	you
O	27388	27392	have
O	27393	27401	multiple
O	27402	27409	changes
O	27410	27419	happening
O	27420	27423	and
O	27424	27427	you
O	27428	27432	only
O	27433	27437	want
O	27438	27440	to
O	27441	27447	notify
O	27448	27450	at
O	27451	27454	the
O	27455	27458	end
O	27459	27461	of
O	27462	27465	the
O	27466	27473	process
O	27474	27480	rather
O	27481	27485	than
O	27486	27488	at
O	27489	27493	each
O	27494	27499	small
O	27500	27504	step
O	27504	27505	)
O	27505	27506	.

O	27507	27511	This
O	27512	27514	is
O	27515	27519	done
B-api_mention	27520	27527	through
I-api_mention	27528	27538	setChanged
I-api_mention	27538	27539	(
O	27539	27543	args
O	27543	27544	)
O	27545	27546	.

O	27547	27549	So
O	27550	27553	you
O	27554	27558	just
O	27559	27563	call
O	27564	27566	it
O	27567	27571	when
O	27572	27575	you
O	27576	27583	changed
O	27584	27593	something
O	27594	27596	to
B-api_mention	27597	27600	the
I-api_mention	27601	27611	Observable
O	27612	27615	and
O	27616	27619	you
O	27620	27624	want
O	27625	27628	the
O	27629	27633	rest
O	27634	27636	of
B-api_mention	27637	27640	the
I-api_mention	27641	27650	Observers
O	27651	27653	to
O	27654	27664	eventually
O	27665	27669	know
O	27670	27675	about
O	27676	27678	it
O	27678	27679	.

O	27680	27681	#
O	27681	27683	li
O	27684	27693	Notifying
O	27694	27697	all
O	27698	27707	observers
O	27708	27712	that
O	27713	27716	the
B-api_mention	27717	27725	specific
I-api_mention	27726	27736	Observable
O	27737	27740	has
O	27741	27748	changed
O	27749	27754	state
O	27754	27755	.

O	27756	27760	This
O	27761	27763	is
O	27764	27768	done
B-api_mention	27769	27776	through
I-api_mention	27777	27792	notifyObservers
I-api_mention	27792	27793	(
O	27793	27797	args
O	27797	27798	)
O	27799	27800	.

O	27801	27805	This
O	27806	27812	checks
O	27813	27815	if
O	27816	27819	the
O	27820	27826	object
O	27827	27830	has
O	27831	27839	actually
O	27840	27847	changed
O	27848	27849	(
O	27849	27850	i
O	27850	27851	.
O	27851	27852	e
O	27852	27853	.
O	27854	27855	a
B-api_mention	27856	27860	call
I-api_mention	27861	27863	to
I-api_mention	27864	27874	setChanged
I-api_mention	27874	27875	(
O	27875	27879	args
O	27879	27880	)
O	27881	27884	was
O	27885	27889	made
O	27889	27890	)
O	27891	27897	before
O	27898	27908	proceeding
O	27909	27913	with
O	27914	27917	the
O	27918	27930	notification
O	27930	27931	.

O	27932	27937	There
O	27938	27941	are
O	27942	27943	2
O	27944	27952	versions
O	27952	27953	,
O	27954	27957	one
O	27958	27962	with
O	27963	27965	no
O	27966	27975	arguments
O	27976	27979	and
O	27980	27983	one
B-api_mention	27984	27988	with
I-api_mention	27989	27991	an
I-api_mention	27992	27998	Object
O	27999	28007	argument
O	28007	28008	,
O	28009	28011	in
O	28012	28016	case
O	28017	28020	you
O	28021	28025	want
O	28026	28028	to
O	28029	28033	pass
O	28034	28038	some
O	28039	28044	extra
O	28045	28056	information
O	28057	28061	with
O	28062	28065	the
O	28066	28078	notification
O	28078	28079	.

O	28080	28090	Internally
O	28091	28095	what
O	28096	28103	happens
O	28104	28106	is
O	28107	28111	that
O	28112	28114	it
O	28115	28119	just
O	28120	28128	iterates
O	28129	28136	through
O	28137	28140	the
B-api_mention	28141	28145	list
I-api_mention	28146	28148	of
I-api_mention	28149	28157	Observer
O	28158	28167	instances
O	28168	28171	and
O	28172	28177	calls
B-api_mention	28178	28181	the
I-api_mention	28182	28188	update
I-api_mention	28188	28189	(
I-api_mention	28189	28199	Observable
I-api_mention	28200	28201	o
I-api_mention	28201	28202	,
I-api_mention	28203	28209	Object
O	28210	28213	arg
O	28213	28214	)
O	28215	28221	method
O	28222	28225	for
O	28226	28230	each
O	28231	28233	of
O	28234	28238	them
O	28238	28239	.

O	28240	28244	This
O	28245	28250	tells
B-api_mention	28251	28254	the
I-api_mention	28255	28263	Observer
O	28264	28269	which
O	28270	28273	was
B-api_mention	28274	28277	the
I-api_mention	28278	28288	Observable
O	28289	28295	object
O	28296	28300	that
O	28301	28308	changed
O	28309	28310	(
O	28310	28313	you
O	28314	28319	could
O	28320	28322	be
O	28323	28332	observing
O	28333	28337	more
O	28338	28342	than
O	28343	28346	one
O	28346	28347	)
O	28347	28348	,
O	28349	28352	and
O	28353	28356	the
B-api_mention	28357	28362	extra
I-api_mention	28363	28369	Object
O	28370	28373	arg
O	28374	28376	to
O	28377	28388	potentially
O	28389	28394	carry
O	28395	28399	some
O	28400	28405	extra
O	28406	28417	information
O	28418	28419	(
O	28419	28425	passed
O	28426	28433	through
O	28434	28449	notifyObservers
O	28449	28450	(
O	28450	28454	args
O	28454	28455	)
O	28456	28457	.

O	28459	28467	Question
O	28467	28468	-
O	28468	28476	11408427
O	28476	28477	,
O	28478	28484	answer
O	28484	28485	-
O	28485	28493	11408477

O	28494	28497	The
O	28498	28499	+
O	28500	28508	operator
O	28509	28511	is
O	28512	28519	usually
O	28520	28528	replaced
B-api_mention	28529	28531	by
I-api_mention	28532	28533	a
I-api_mention	28534	28547	StringBuilder
O	28548	28550	at
O	28551	28558	compile
O	28559	28563	time
O	28563	28564	.

O	28565	28570	Check
O	28571	28575	this
O	28576	28582	answer
O	28583	28586	for
O	28587	28591	more
O	28592	28599	details
O	28600	28602	on
O	28603	28607	that
O	28608	28614	matter
O	28614	28615	.

O	28617	28625	Question
O	28625	28626	-
O	28626	28634	11408427
O	28634	28635	,
O	28636	28642	answer
O	28642	28643	-
O	28643	28651	11408482

O	28652	28655	The
O	28656	28660	Java
O	28661	28669	language
O	28670	28678	provides
O	28679	28686	special
O	28687	28694	support
O	28695	28698	for
O	28699	28702	the
O	28703	28709	string
O	28710	28723	concatenation
O	28724	28732	operator
O	28733	28734	(
O	28734	28735	+
O	28735	28736	)
O	28737	28740	and
O	28741	28744	for
O	28745	28755	conversion
O	28756	28758	of
O	28759	28764	other
O	28765	28772	objects
O	28773	28775	to
O	28776	28783	strings
O	28783	28784	.

O	28785	28791	String
O	28792	28805	concatenation
O	28806	28808	is
O	28809	28820	implemented
O	28821	28828	through
B-api_mention	28829	28832	the
I-api_mention	28833	28846	StringBuilder
I-api_mention	28847	28848	(
I-api_mention	28848	28850	or
I-api_mention	28851	28863	StringBuffer
O	28864	28865	)
O	28866	28871	class
O	28872	28875	and
O	28876	28879	its
O	28880	28886	append
O	28887	28893	method
O	28893	28894	.

O	28896	28904	Question
O	28904	28905	-
O	28905	28913	11408427
O	28913	28914	,
O	28915	28921	answer
O	28921	28922	-
O	28922	28930	11408526

O	28931	28934	Let
O	28934	28935	'
O	28935	28936	s
O	28937	28941	look
O	28942	28944	at
O	28945	28948	the
O	28949	28958	following
O	28959	28965	simple
O	28966	28977	expressions
O	28978	28980	in
O	28981	28985	Java
O	28986	28987	#
O	28987	28990	pre
O	28991	28994	The
O	28995	29003	compiler
O	29004	29012	converts
O	29013	29026	StringLiteral
O	29026	29027	+
O	29027	29028	x
O	29028	29029	;
B-api_mention	29030	29034	into
I-api_mention	29035	29036	a
I-api_mention	29037	29050	StringBuilder
O	29051	29061	internally
O	29062	29065	and
B-api_mention	29066	29070	uses
I-api_mention	29071	29072	.
I-api_mention	29072	29078	append
I-api_mention	29078	29079	(
O	29079	29083	args
O	29083	29084	)
O	29085	29087	to
O	29088	29089	"
O	29089	29092	add
O	29092	29093	"
O	29094	29097	the
O	29098	29105	integer
O	29106	29108	to
O	29109	29112	the
O	29113	29119	string
O	29119	29120	.

O	29121	29122	5
O	29122	29123	.
O	29123	29124	1
O	29124	29125	.
O	29125	29127	11
O	29127	29128	.

O	29129	29135	String
O	29136	29146	Conversion
O	29147	29148	#
O	29148	29158	blockquote
O	29159	29161	15
O	29161	29162	.
O	29162	29164	18
O	29164	29165	.
O	29165	29166	1
O	29166	29167	.

O	29168	29169	#
O	29169	29179	blockquote
O	29180	29183	The
O	29184	29193	optimized
O	29194	29201	version
O	29202	29206	will
O	29207	29210	not
O	29211	29219	actually
O	29220	29222	do
O	29223	29224	a
O	29225	29229	full
O	29230	29237	wrapped
O	29238	29244	String
O	29245	29255	conversion
O	29256	29261	first
O	29261	29262	.

O	29263	29267	This
O	29268	29270	is
O	29271	29272	a
O	29273	29277	good
O	29278	29290	illustration
O	29291	29293	of
O	29294	29296	an
O	29297	29306	optimized
O	29307	29314	version
O	29315	29319	used
O	29320	29322	by
O	29323	29326	the
O	29327	29335	compiler
O	29335	29336	,
O	29337	29343	albeit
O	29344	29351	without
O	29352	29355	the
O	29356	29366	conversion
O	29367	29369	of
O	29370	29371	a
O	29372	29381	primitive
O	29381	29382	,
O	29383	29388	where
O	29389	29392	you
O	29393	29396	can
O	29397	29400	see
O	29401	29404	the
O	29405	29413	compiler
O	29414	29422	changing
O	29423	29429	things
O	29430	29434	into
O	29435	29436	a
O	29437	29450	StringBuilder
O	29451	29453	in
O	29454	29457	the
O	29458	29468	background
O	29468	29469	:
O	29470	29471	#
O	29471	29472	a
O	29473	29477	This
O	29478	29482	java
O	29483	29487	code
O	29487	29488	:
O	29489	29490	#
O	29490	29493	pre
O	29494	29503	Generates
O	29504	29508	this
O	29509	29510	-
O	29511	29514	see
O	29515	29518	how
O	29519	29522	the
O	29523	29526	two
O	29527	29540	concatenation
O	29541	29547	styles
O	29548	29552	lead
O	29553	29555	to
O	29556	29559	the
O	29560	29564	very
O	29565	29569	same
O	29570	29578	bytecode
O	29578	29579	:
O	29580	29581	#
O	29581	29584	pre
O	29585	29592	Looking
O	29593	29595	at
O	29596	29599	the
O	29600	29607	example
O	29608	29613	above
O	29614	29617	and
O	29618	29621	how
O	29622	29625	the
O	29626	29630	byte
O	29631	29635	code
O	29636	29641	based
O	29642	29644	on
O	29645	29648	the
O	29649	29655	source
O	29656	29660	code
O	29661	29663	in
O	29664	29667	the
O	29668	29673	given
O	29674	29681	example
O	29682	29684	is
O	29685	29694	generated
O	29694	29695	,
O	29696	29699	you
O	29700	29704	will
O	29705	29707	be
O	29708	29712	able
O	29713	29715	to
O	29716	29722	notice
O	29723	29727	that
O	29728	29731	the
O	29732	29740	compiler
O	29741	29744	has
O	29745	29755	internally
O	29756	29767	transformed
O	29768	29771	the
O	29772	29781	following
O	29782	29791	statement
O	29792	29795	cip
O	29795	29796	+
O	29796	29800	ciop
O	29800	29801	;
O	29802	29806	into
B-api_mention	29807	29810	new
I-api_mention	29811	29824	StringBuilder
I-api_mention	29824	29825	(
I-api_mention	29825	29829	args
I-api_mention	29829	29830	)
I-api_mention	29830	29831	.
I-api_mention	29831	29837	append
I-api_mention	29837	29838	(
I-api_mention	29838	29842	args
I-api_mention	29842	29843	)
I-api_mention	29843	29844	.
I-api_mention	29844	29852	toString
I-api_mention	29852	29853	(
O	29853	29857	args
O	29857	29858	)
O	29858	29859	;
O	29860	29862	In
O	29863	29868	other
O	29869	29874	words
O	29874	29875	,
O	29876	29879	the
O	29880	29888	operator
O	29889	29890	+
O	29891	29893	in
O	29894	29900	string
O	29901	29914	concatenation
O	29915	29917	is
O	29918	29929	effectively
O	29930	29931	a
O	29932	29941	shorthand
O	29942	29945	for
O	29946	29949	the
O	29950	29954	more
B-api_mention	29955	29962	verbose
I-api_mention	29963	29976	StringBuilder
O	29977	29982	idiom
O	29982	29983	.

O	29985	29993	Question
O	29993	29994	-
O	29994	30002	13950338
O	30002	30003	,
O	30004	30010	answer
O	30010	30011	-
O	30011	30019	17066803

O	30020	30025	Grant
O	30026	30035	Vibration
O	30036	30046	Permission
O	30047	30053	Before
O	30054	30057	you
O	30058	30063	start
O	30064	30076	implementing
O	30077	30080	any
O	30081	30090	vibration
O	30091	30095	code
O	30095	30096	,
O	30097	30100	you
O	30101	30105	have
O	30106	30108	to
O	30109	30113	give
O	30114	30118	your
O	30119	30130	application
O	30131	30134	the
O	30135	30145	permission
O	30146	30148	to
O	30149	30156	vibrate
O	30156	30157	:
O	30158	30159	<
O	30159	30163	uses
O	30163	30164	-
O	30164	30174	permission
O	30175	30182	android
O	30182	30183	:
O	30183	30187	name
O	30187	30188	=
O	30188	30201	StringLiteral
O	30201	30202	/
O	30202	30203	>
O	30204	30208	Make
O	30209	30213	sure
O	30214	30216	to
O	30217	30224	include
O	30225	30229	this
O	30230	30234	line
O	30235	30237	in
O	30238	30242	your
O	30243	30258	AndroidManifest
O	30258	30259	.
O	30259	30262	xml
O	30263	30267	file
O	30267	30268	.

O	30269	30275	Import
O	30276	30279	the
O	30280	30289	Vibration
O	30290	30297	Library
O	30298	30302	Most
O	30303	30307	IDEs
O	30308	30312	will
O	30313	30315	do
O	30316	30320	this
O	30321	30324	for
O	30325	30328	you
O	30328	30329	,
O	30330	30333	but
O	30334	30338	here
O	30339	30341	is
O	30342	30345	the
O	30346	30352	import
O	30353	30362	statement
O	30363	30365	if
O	30366	30371	yours
B-api_mention	30372	30377	doesn
I-api_mention	30377	30378	'
I-api_mention	30378	30379	t
I-api_mention	30379	30380	:
I-api_mention	30381	30387	import
I-api_mention	30388	30395	android
I-api_mention	30395	30396	.
I-api_mention	30396	30398	os
I-api_mention	30398	30399	.
I-api_mention	30399	30407	Vibrator
O	30407	30408	;
O	30409	30413	Make
O	30414	30418	sure
O	30419	30423	this
O	30424	30426	in
O	30427	30430	the
O	30431	30439	activity
O	30440	30445	where
O	30446	30449	you
O	30450	30454	want
O	30455	30458	the
O	30459	30468	vibration
O	30469	30471	to
O	30472	30477	occur
O	30477	30478	.

B-api_mention	30479	30482	How
I-api_mention	30483	30485	to
I-api_mention	30486	30493	Vibrate
O	30494	30497	for
O	30498	30499	a
O	30500	30505	Given
O	30506	30510	Time
O	30511	30513	In
O	30514	30518	most
O	30519	30532	circumstances
O	30532	30533	,
O	30534	30537	you
O	30537	30538	'
O	30538	30540	ll
O	30541	30543	be
O	30544	30551	wanting
O	30552	30554	to
O	30555	30562	vibrate
O	30563	30566	the
O	30567	30573	device
O	30574	30577	for
O	30578	30579	a
O	30580	30585	short
O	30585	30586	,
O	30587	30600	predetermined
O	30601	30607	amount
O	30608	30610	of
O	30611	30615	time
O	30615	30616	.

O	30617	30620	You
O	30621	30624	can
O	30625	30632	achieve
O	30633	30637	this
O	30638	30640	by
O	30641	30646	using
B-api_mention	30647	30650	the
I-api_mention	30651	30658	vibrate
I-api_mention	30658	30659	(
O	30659	30663	args
O	30663	30664	)
O	30665	30671	method
O	30671	30672	.

O	30673	30677	Here
O	30678	30680	is
O	30681	30682	a
O	30683	30688	quick
O	30689	30696	example
O	30696	30697	:
O	30698	30699	#
O	30699	30702	pre
O	30703	30707	That
O	30707	30708	'
O	30708	30709	s
O	30710	30712	it
O	30712	30713	,
O	30714	30720	simple
O	30720	30721	!

O	30722	30725	How
O	30726	30728	to
O	30729	30736	Vibrate
O	30737	30749	Indefinitely
O	30750	30752	It
O	30753	30756	may
O	30757	30759	be
O	30760	30763	the
O	30764	30768	case
O	30769	30773	that
O	30774	30777	you
O	30778	30782	want
O	30783	30786	the
O	30787	30793	device
O	30794	30796	to
O	30797	30805	continue
O	30806	30815	vibrating
O	30816	30828	indefinitely
O	30828	30829	.

O	30830	30833	For
O	30834	30838	this
O	30838	30839	,
O	30840	30842	we
O	30843	30846	use
B-api_mention	30847	30850	the
I-api_mention	30851	30858	vibrate
I-api_mention	30858	30859	(
O	30859	30863	args
O	30863	30864	)
O	30865	30871	method
O	30871	30872	:
O	30873	30874	#
O	30874	30877	pre
O	30878	30882	When
O	30883	30886	you
O	30886	30887	'
O	30887	30889	re
O	30890	30895	ready
O	30896	30898	to
O	30899	30903	stop
O	30904	30907	the
O	30908	30917	vibration
O	30917	30918	,
O	30919	30923	just
O	30924	30928	call
B-api_mention	30929	30932	the
I-api_mention	30933	30939	cancel
I-api_mention	30939	30940	(
O	30940	30944	args
O	30944	30945	)
O	30946	30952	method
O	30952	30953	:
O	30954	30955	v
O	30955	30956	.
O	30956	30962	cancel
O	30962	30963	(
O	30963	30967	args
O	30967	30968	)
O	30968	30969	;
O	30970	30973	How
O	30974	30976	to
O	30977	30980	use
O	30981	30990	Vibration
O	30991	30999	Patterns
O	31000	31002	If
O	31003	31006	you
O	31007	31011	want
O	31012	31013	a
O	31014	31018	more
O	31019	31026	bespoke
O	31027	31036	vibration
O	31036	31037	,
O	31038	31041	you
O	31042	31045	can
O	31046	31053	attempt
O	31054	31056	to
O	31057	31063	create
O	31064	31068	your
O	31069	31072	own
O	31073	31082	vibration
O	31083	31091	patterns
O	31091	31092	:
O	31093	31094	#
O	31094	31097	pre
O	31098	31102	More
O	31103	31110	Complex
O	31111	31121	Vibrations
O	31122	31127	There
O	31128	31131	are
O	31132	31140	multiple
O	31141	31145	SDKs
O	31146	31150	that
O	31151	31156	offer
O	31157	31158	a
O	31159	31163	more
O	31164	31177	comprehensive
O	31178	31183	range
O	31184	31186	of
O	31187	31193	haptic
O	31194	31202	feedback
O	31202	31203	.

O	31204	31207	One
O	31208	31212	that
O	31213	31214	I
O	31215	31218	use
O	31219	31222	for
O	31223	31230	special
O	31231	31238	effects
O	31239	31241	is
O	31242	31251	Immersion
O	31251	31252	'
O	31252	31253	s
O	31254	31260	Haptic
O	31261	31272	Development
O	31273	31281	Platform
O	31282	31285	for
O	31286	31293	Android
O	31294	31295	.

O	31296	31311	Troubleshooting
O	31312	31314	If
O	31315	31319	your
O	31320	31326	device
O	31327	31330	won
O	31330	31331	'
O	31331	31332	t
O	31333	31340	vibrate
O	31340	31341	,
O	31342	31347	first
O	31348	31352	make
O	31353	31357	sure
O	31358	31362	that
O	31363	31365	it
O	31366	31369	can
O	31370	31377	vibrate
O	31377	31378	:
O	31379	31380	#
O	31380	31383	pre
O	31384	31392	Secondly
O	31392	31393	,
O	31394	31400	please
O	31401	31407	ensure
O	31408	31412	that
O	31413	31416	you
O	31416	31417	'
O	31417	31419	ve
O	31420	31425	given
O	31426	31430	your
O	31431	31442	application
O	31443	31446	the
O	31447	31457	permission
O	31458	31460	to
O	31461	31468	vibrate
O	31468	31469	!

O	31470	31475	Refer
O	31476	31480	back
O	31481	31483	to
O	31484	31487	the
O	31488	31493	first
O	31494	31499	point
O	31499	31500	.

O	31502	31510	Question
O	31510	31511	-
O	31511	31519	13291076
O	31519	31520	,
O	31521	31527	answer
O	31527	31528	-
O	31528	31536	13291108

B-api_mention	31537	31540	Use
I-api_mention	31541	31545	name
I-api_mention	31545	31546	(
O	31546	31550	args
O	31550	31551	)
O	31552	31556	when
O	31557	31560	you
O	31561	31565	want
O	31566	31568	to
O	31569	31573	make
O	31574	31575	a
O	31576	31586	comparison
O	31587	31589	or
O	31590	31593	use
O	31594	31597	the
O	31598	31607	hardcoded
O	31608	31613	value
O	31614	31617	for
O	31618	31622	some
O	31623	31631	internal
O	31632	31635	use
O	31636	31638	in
O	31639	31643	your
O	31644	31648	code
O	31648	31649	.

B-api_mention	31650	31653	Use
I-api_mention	31654	31662	toString
I-api_mention	31662	31663	(
O	31663	31667	args
O	31667	31668	)
O	31669	31673	when
O	31674	31677	you
O	31678	31682	want
O	31683	31685	to
O	31686	31693	present
O	31694	31705	information
O	31706	31708	to
O	31709	31710	a
O	31711	31715	user
O	31716	31717	(
O	31717	31726	including
O	31727	31728	a
O	31729	31739	developper
O	31740	31747	looking
O	31748	31750	at
O	31751	31752	a
O	31753	31756	log
O	31756	31757	)
O	31757	31758	.

O	31759	31764	Never
O	31765	31769	rely
O	31770	31772	in
O	31773	31777	your
B-api_mention	31778	31782	code
I-api_mention	31783	31785	on
I-api_mention	31786	31794	toString
I-api_mention	31794	31795	(
O	31795	31799	args
O	31799	31800	)
O	31801	31807	giving
O	31808	31809	a
O	31810	31818	specific
O	31819	31824	value
O	31824	31825	.

O	31826	31831	Never
O	31832	31836	test
O	31837	31839	it
O	31840	31847	against
O	31848	31849	a
O	31850	31858	specific
O	31859	31865	string
O	31865	31866	.

O	31867	31869	If
O	31870	31874	your
O	31875	31879	code
O	31880	31886	breaks
O	31887	31891	when
O	31892	31899	someone
O	31900	31909	correctly
O	31910	31917	changes
B-api_mention	31918	31921	the
I-api_mention	31922	31930	toString
I-api_mention	31930	31931	(
O	31931	31935	args
O	31935	31936	)
O	31937	31943	return
O	31943	31944	,
O	31945	31949	then
O	31950	31952	it
O	31953	31956	was
O	31957	31964	already
O	31965	31971	broken
O	31971	31972	.

O	31973	31977	From
O	31978	31981	the
O	31982	31989	javadoc
O	31990	31991	(
O	31991	31999	emphasis
O	32000	32004	mine
O	32004	32005	)
O	32006	32007	:
O	32008	32009	#
O	32009	32019	blockquote

O	32021	32029	Question
O	32029	32030	-
O	32030	32038	13291076
O	32038	32039	,
O	32040	32046	answer
O	32046	32047	-
O	32047	32055	13291109

O	32056	32058	It
O	32059	32065	really
O	32066	32073	depends
O	32074	32076	on
O	32077	32081	what
O	32082	32085	you
O	32086	32090	want
O	32091	32093	to
O	32094	32096	do
O	32097	32101	with
O	32102	32105	the
O	32106	32114	returned
O	32115	32120	value
O	32120	32121	:
O	32122	32123	#
O	32123	32125	li
O	32126	32128	If
O	32129	32132	you
O	32133	32137	need
O	32138	32140	to
O	32141	32144	get
O	32145	32148	the
O	32149	32154	exact
O	32155	32159	name
O	32160	32164	used
O	32165	32167	to
O	32168	32175	declare
O	32176	32179	the
O	32180	32184	enum
O	32185	32193	constant
O	32193	32194	,
O	32195	32198	you
O	32199	32205	should
B-api_mention	32206	32209	use
I-api_mention	32210	32214	name
I-api_mention	32214	32215	(
O	32215	32219	args
B-api_mention	32219	32220	)
I-api_mention	32221	32223	as
I-api_mention	32224	32232	toString
O	32233	32236	may
O	32237	32241	have
O	32242	32246	been
O	32247	32256	overriden
O	32257	32258	#
O	32258	32260	li
O	32261	32263	If
O	32264	32267	you
O	32268	32272	want
O	32273	32275	to
O	32276	32281	print
O	32282	32285	the
O	32286	32290	enum
O	32291	32299	constant
O	32300	32302	in
O	32303	32304	a
O	32305	32309	user
O	32310	32318	friendly
O	32319	32322	way
O	32322	32323	,
O	32324	32327	you
O	32328	32334	should
B-api_mention	32335	32338	use
I-api_mention	32339	32347	toString
O	32348	32353	which
O	32354	32357	may
O	32358	32362	have
O	32363	32367	been
O	32368	32377	overriden
O	32378	32379	(
O	32379	32381	or
O	32382	32385	not
O	32385	32386	!
O	32386	32387	)
O	32387	32388	.

O	32389	32393	When
O	32394	32395	I
O	32396	32400	feel
O	32401	32405	that
O	32406	32408	it
O	32409	32414	might
O	32415	32417	be
O	32418	32427	confusing
O	32427	32428	,
O	32429	32430	I
O	32431	32438	provide
O	32439	32440	a
O	32441	32445	more
O	32446	32454	specific
O	32455	32461	getXXX
O	32462	32468	method
O	32468	32469	,
O	32470	32473	for
O	32474	32481	example
O	32481	32482	:
O	32483	32484	#
O	32484	32487	pre

O	32489	32497	Question
O	32497	32498	-
O	32498	32506	13291076
O	32506	32507	,
O	32508	32514	answer
O	32514	32515	-
B-api_mention	32515	32523	13291166

B-api_mention	32524	32528	name
I-api_mention	32528	32529	(
O	32529	32533	args
O	32533	32534	)
O	32535	32537	is
O	32538	32539	a
O	32540	32541	"
O	32541	32546	built
O	32546	32547	-
O	32547	32549	in
O	32549	32550	"
B-api_mention	32551	32557	method
I-api_mention	32558	32560	of
O	32561	32565	enum
O	32566	32567	.

O	32568	32570	It
O	32571	32573	is
O	32574	32579	final
O	32580	32583	and
O	32584	32587	you
O	32588	32594	cannot
O	32595	32601	change
O	32602	32605	its
O	32606	32620	implementation
O	32620	32621	.

O	32622	32624	It
O	32625	32632	returns
O	32633	32636	the
B-api_mention	32637	32641	name
I-api_mention	32642	32644	of
O	32645	32649	enum
O	32650	32658	constant
O	32659	32661	as
O	32662	32664	it
O	32665	32667	is
O	32668	32675	written
O	32675	32676	,
O	32677	32678	e
O	32678	32679	.
O	32679	32680	g
O	32680	32681	.
O	32682	32684	in
O	32685	32690	upper
O	32691	32695	case
O	32695	32696	,
O	32697	32704	without
O	32705	32711	spaces
O	32712	32715	etc
O	32715	32716	.

O	32717	32724	Compare
O	32725	32731	MOBILE
O	32731	32732	_
O	32732	32737	PHONE
O	32737	32738	_
O	32738	32744	NUMBER
O	32745	32748	and
O	32749	32755	Mobile
O	32756	32761	phone
O	32762	32768	number
O	32769	32770	.

O	32771	32776	Which
O	32777	32784	version
O	32785	32787	is
O	32788	32792	more
O	32793	32801	readable
O	32801	32802	?

O	32803	32804	I
O	32805	32812	believe
O	32813	32816	the
O	32817	32823	second
O	32824	32827	one
O	32827	32828	.

O	32829	32833	This
O	32834	32836	is
O	32837	32840	the
B-api_mention	32841	32851	difference
I-api_mention	32851	32852	:
I-api_mention	32853	32857	name
O	32857	32858	(
O	32858	32862	args
O	32862	32863	)
O	32864	32870	always
O	32871	32878	returns
O	32879	32885	MOBILE
O	32885	32886	_
O	32886	32891	PHONE
O	32891	32892	_
B-api_mention	32892	32898	NUMBER
I-api_mention	32899	32900	,
I-api_mention	32901	32909	toString
I-api_mention	32909	32910	(
O	32910	32914	args
O	32914	32915	)
O	32916	32919	may
O	32920	32922	be
O	32923	32932	overriden
O	32933	32935	to
O	32936	32942	return
O	32943	32949	Mobile
O	32950	32955	phone
O	32956	32962	number
O	32963	32964	.

O	32966	32974	Question
O	32974	32975	-
O	32975	32983	13291076
O	32983	32984	,
O	32985	32991	answer
O	32991	32992	-
B-api_mention	32992	33000	31886637

B-api_mention	33001	33005	name
O	33005	33006	(
O	33006	33007	)
O	33008	33010	is
O	33011	33020	literally
O	33021	33024	the
O	33025	33032	textual
O	33033	33037	name
O	33038	33040	in
O	33041	33044	the
O	33045	33049	java
O	33050	33054	code
O	33055	33057	of
O	33058	33061	the
O	33062	33066	enum
O	33066	33067	.

O	33068	33072	That
O	33073	33078	means
O	33079	33081	it
O	33082	33084	is
O	33085	33092	limited
O	33093	33095	to
O	33096	33103	strings
O	33104	33108	that
O	33109	33112	can
O	33113	33121	actually
O	33122	33128	appear
O	33129	33131	in
O	33132	33136	your
O	33137	33141	java
O	33142	33146	code
O	33146	33147	,
O	33148	33151	but
O	33152	33155	not
O	33156	33159	all
O	33160	33169	desirable
O	33170	33177	strings
O	33178	33181	are
O	33182	33193	expressible
O	33194	33196	in
O	33197	33201	code
O	33201	33202	.

O	33203	33206	For
O	33207	33214	example
O	33214	33215	,
O	33216	33219	you
O	33220	33223	may
O	33224	33228	need
O	33229	33230	a
O	33231	33237	string
O	33238	33242	that
O	33243	33249	begins
O	33250	33254	with
O	33255	33256	a
B-api_mention	33257	33263	number
I-api_mention	33263	33264	.

B-api_mention	33265	33269	name
O	33269	33270	(
O	33270	33271	)
O	33272	33276	will
O	33277	33282	never
O	33283	33285	be
O	33286	33290	able
O	33291	33293	to
O	33294	33300	obtain
O	33301	33305	that
O	33306	33312	string
O	33313	33316	for
O	33317	33320	you
O	33320	33321	.

O	33323	33331	Question
O	33331	33332	-
O	33332	33340	12576156
O	33340	33341	,
O	33342	33348	answer
O	33348	33349	-
O	33349	33357	12576308

O	33358	33362	Have
O	33363	33366	you
O	33367	33377	considered
O	33378	33379	@
O	33379	33388	Autowired
O	33389	33392	ing
O	33393	33396	the
O	33397	33408	constructor
O	33409	33411	or
O	33412	33413	a
O	33414	33420	setter
B-api_mention	33421	33424	and
I-api_mention	33425	33431	String
I-api_mention	33431	33432	.
I-api_mention	33432	33437	split
I-api_mention	33437	33438	(
O	33438	33442	args
O	33442	33443	)
O	33444	33447	ing
O	33448	33450	in
O	33451	33454	the
O	33455	33459	body
O	33459	33460	?

O	33461	33462	#
O	33462	33465	pre
O	33466	33467	I
O	33468	33472	tend
O	33473	33475	to
O	33476	33482	prefer
O	33483	33488	doing
O	33489	33491	my
O	33492	33502	autowiring
O	33503	33505	in
O	33506	33509	one
O	33510	33512	of
O	33513	33518	these
O	33519	33523	ways
O	33524	33526	to
O	33527	33534	enhance
O	33535	33538	the
O	33539	33550	testability
O	33551	33553	of
O	33554	33556	my
O	33557	33561	code
O	33561	33562	.

O	33564	33572	Question
O	33572	33573	-
O	33573	33581	12576156
O	33581	33582	,
O	33583	33589	answer
O	33589	33590	-
O	33590	33598	12576394

O	33599	33601	By
O	33602	33612	specifying
O	33613	33616	the
O	33617	33620	the
O	33621	33623	my
O	33623	33624	.
O	33624	33628	list
O	33628	33629	.
O	33629	33631	of
O	33631	33632	.
O	33632	33639	strings
O	33639	33640	=
O	33640	33643	ABC
O	33643	33644	,
O	33644	33647	CDE
O	33647	33648	,
O	33648	33651	EFG
O	33652	33654	in
O	33655	33656	.
O	33656	33666	properties
O	33667	33671	file
O	33672	33675	and
O	33676	33681	using
O	33682	33683	@
O	33683	33688	Value
O	33688	33689	(
O	33689	33693	args
O	33693	33694	)
O	33695	33702	private
O	33703	33709	String
O	33709	33710	[
O	33710	33711	]
O	33712	33720	myString
O	33720	33721	;
O	33722	33725	You
O	33726	33729	can
O	33730	33733	get
O	33734	33737	the
O	33738	33744	arrays
O	33745	33747	of
O	33748	33755	strings
O	33755	33756	.

O	33757	33760	And
B-api_mention	33761	33766	using
I-api_mention	33767	33782	CollectionUtils
I-api_mention	33782	33783	.
I-api_mention	33783	33789	addAll
I-api_mention	33789	33790	(
O	33790	33794	args
O	33794	33795	)
O	33796	33797	,
O	33798	33801	you
O	33802	33805	can
O	33806	33809	get
O	33810	33813	the
O	33814	33818	list
O	33819	33821	of
O	33822	33829	strings
O	33829	33830	.

O	33832	33840	Question
O	33840	33841	-
O	33841	33849	12539365
O	33849	33850	,
O	33851	33857	answer
O	33857	33858	-
O	33858	33866	12562433

O	33867	33871	This
O	33872	33874	is
O	33875	33880	great
O	33881	33889	question
O	33889	33890	!

O	33891	33892	I
O	33893	33898	think
O	33899	33902	the
O	33903	33907	root
O	33908	33913	cause
O	33914	33916	of
O	33917	33919	it
O	33920	33922	is
O	33923	33926	the
O	33927	33936	following
O	33936	33937	,
O	33938	33940	we
O	33941	33944	are
O	33945	33950	using
O	33951	33956	JUnit
O	33957	33960	not
O	33961	33965	only
O	33966	33969	for
O	33970	33974	unit
O	33975	33982	testing
O	33982	33983	.

O	33984	33986	So
O	33987	33990	the
O	33991	33999	question
O	34000	34006	should
O	34007	34009	be
O	34010	34017	splited
O	34018	34020	up
O	34020	34021	:
O	34022	34023	#
O	34023	34025	li
O	34026	34032	Should
O	34033	34034	I
B-api_mention	34035	34038	use
I-api_mention	34039	34046	Mockito
I-api_mention	34046	34047	.
I-api_mention	34047	34053	verify
O	34053	34054	(
O	34054	34055	)
O	34056	34058	in
O	34059	34061	my
O	34062	34073	integration
O	34074	34075	(
O	34075	34077	or
O	34078	34081	any
O	34082	34087	other
O	34088	34094	higher
O	34094	34095	-
O	34095	34099	than
O	34099	34100	-
O	34100	34104	unit
O	34105	34112	testing
O	34112	34113	)
O	34114	34121	testing
O	34121	34122	?

O	34123	34124	#
O	34124	34126	li
O	34127	34133	Should
O	34134	34135	I
B-api_mention	34136	34139	use
I-api_mention	34140	34147	Mockito
I-api_mention	34147	34148	.
I-api_mention	34148	34154	verify
O	34154	34155	(
O	34155	34156	)
O	34157	34159	in
O	34160	34162	my
O	34163	34168	black
O	34168	34169	-
O	34169	34172	box
O	34173	34177	unit
O	34177	34178	-
O	34178	34185	testing
O	34185	34186	?

O	34187	34188	#
O	34188	34190	li
O	34191	34197	Should
O	34198	34199	I
B-api_mention	34200	34203	use
I-api_mention	34204	34211	Mockito
I-api_mention	34211	34212	.
I-api_mention	34212	34218	verify
O	34218	34219	(
O	34219	34220	)
O	34221	34223	in
O	34224	34226	my
O	34227	34232	white
O	34232	34233	-
O	34233	34236	box
O	34237	34241	unit
O	34241	34242	-
O	34242	34249	testing
O	34249	34250	?

O	34251	34253	so
O	34254	34256	if
O	34257	34259	we
O	34260	34264	will
O	34265	34271	ignore
O	34272	34278	higher
O	34278	34279	-
O	34279	34283	than
O	34283	34284	-
O	34284	34288	unit
O	34289	34296	testing
O	34296	34297	,
O	34298	34301	the
O	34302	34310	question
O	34311	34314	can
O	34315	34317	be
O	34318	34327	rephrased
O	34328	34329	"
O	34330	34335	Using
O	34336	34341	white
O	34341	34342	-
O	34342	34345	box
O	34346	34350	unit
O	34350	34351	-
O	34351	34358	testing
B-api_mention	34359	34363	with
I-api_mention	34364	34371	Mockito
I-api_mention	34371	34372	.
I-api_mention	34372	34378	verify
O	34378	34379	(
O	34379	34380	)
O	34381	34388	creates
O	34389	34394	great
O	34395	34401	couple
O	34402	34409	between
O	34410	34414	unit
O	34415	34419	test
O	34420	34423	and
O	34424	34426	my
O	34427	34432	could
O	34433	34447	implementation
O	34447	34448	,
O	34449	34452	can
O	34453	34454	I
O	34455	34459	make
O	34460	34464	some
O	34465	34466	"
O	34466	34470	grey
O	34470	34471	-
O	34471	34474	box
O	34474	34475	"
O	34476	34480	unit
O	34480	34481	-
O	34481	34488	testing
O	34489	34492	and
O	34493	34497	what
O	34498	34503	rules
O	34504	34506	of
O	34507	34512	thumb
O	34513	34514	I
O	34515	34521	should
O	34522	34525	use
O	34526	34529	for
O	34530	34534	this
O	34535	34536	"
O	34536	34537	.

O	34538	34541	Now
O	34541	34542	,
O	34543	34546	let
O	34546	34547	'
O	34547	34548	s
O	34549	34551	go
O	34552	34559	through
O	34560	34563	all
O	34564	34566	of
O	34567	34571	this
O	34572	34576	step
O	34576	34577	-
O	34577	34579	by
O	34579	34580	-
O	34580	34584	step
O	34584	34585	.

O	34586	34587	*
O	34587	34588	-
O	34589	34595	Should
O	34596	34597	I
B-api_mention	34598	34601	use
I-api_mention	34602	34609	Mockito
I-api_mention	34609	34610	.
I-api_mention	34610	34616	verify
O	34616	34617	(
O	34617	34618	)
O	34619	34621	in
O	34622	34624	my
O	34625	34636	integration
O	34637	34638	(
O	34638	34640	or
O	34641	34644	any
O	34645	34650	other
O	34651	34657	higher
O	34657	34658	-
O	34658	34662	than
O	34662	34663	-
O	34663	34667	unit
O	34668	34675	testing
O	34675	34676	)
O	34677	34684	testing
O	34684	34685	?
O	34685	34686	*
O	34687	34688	I
O	34689	34694	think
O	34695	34698	the
O	34699	34705	answer
O	34706	34708	is
O	34709	34716	clearly
O	34717	34719	no
O	34719	34720	,
O	34721	34729	moreover
O	34730	34733	you
O	34734	34741	shouldn
O	34741	34742	'
O	34742	34743	t
O	34744	34747	use
O	34748	34753	mocks
O	34754	34757	for
O	34758	34762	this
O	34762	34763	.

O	34764	34768	Your
O	34769	34773	test
O	34774	34780	should
O	34781	34783	be
O	34784	34786	as
O	34787	34792	close
O	34793	34795	to
O	34796	34800	real
O	34801	34812	application
O	34813	34815	as
O	34816	34824	possible
O	34824	34825	.

O	34826	34829	You
O	34830	34833	are
O	34834	34841	testing
O	34842	34850	complete
O	34851	34854	use
O	34855	34859	case
O	34859	34860	,
O	34861	34864	not
O	34865	34873	isolated
O	34874	34878	part
O	34879	34881	of
O	34882	34885	the
O	34886	34897	application
O	34897	34898	.

O	34899	34900	*
O	34901	34906	black
O	34906	34907	-
O	34907	34910	box
O	34911	34913	vs
O	34914	34919	white
O	34919	34920	-
O	34920	34923	box
O	34924	34928	unit
O	34928	34929	-
O	34929	34936	testing
O	34937	34942	black
O	34942	34943	-
O	34943	34946	box
O	34947	34952	state
O	34953	34955	If
O	34956	34959	you
O	34960	34963	are
O	34964	34969	using
O	34970	34975	white
O	34975	34976	-
O	34976	34979	box
O	34980	34988	approach
O	34989	34993	what
O	34994	34996	is
O	34997	35000	you
O	35001	35007	really
O	35008	35013	doing
O	35013	35014	,
O	35015	35018	you
O	35018	35019	'
O	35019	35021	re
O	35022	35029	testing
O	35030	35033	the
O	35034	35043	behaviour
O	35044	35046	of
O	35047	35051	your
O	35052	35056	unit
O	35056	35057	.

O	35058	35060	In
O	35061	35065	this
O	35066	35074	approach
B-api_mention	35075	35082	calling
I-api_mention	35083	35085	to
I-api_mention	35086	35093	Mockito
I-api_mention	35093	35094	.
I-api_mention	35094	35100	verify
O	35100	35101	(
O	35101	35102	)
O	35103	35105	is
O	35106	35115	essential
O	35115	35116	,
O	35117	35120	you
O	35121	35127	should
O	35128	35134	verify
O	35135	35139	that
O	35140	35144	your
O	35145	35149	unit
O	35150	35157	behaves
O	35158	35160	as
O	35161	35164	you
O	35164	35165	'
O	35165	35167	re
O	35168	35177	expecting
O	35178	35180	to
O	35180	35181	.
O	35182	35187	rules
O	35188	35190	of
O	35191	35197	thumbs
O	35198	35201	for
O	35202	35206	grey
O	35206	35207	-
O	35207	35210	box
O	35210	35211	-
O	35211	35218	testing
O	35219	35222	The
O	35223	35230	problem
O	35231	35235	with
O	35236	35241	white
O	35241	35242	-
O	35242	35245	box
O	35246	35253	testing
O	35254	35256	is
O	35257	35259	it
O	35260	35267	creates
O	35268	35269	a
O	35270	35274	high
O	35275	35283	coupling
O	35283	35284	.

O	35285	35288	One
O	35289	35297	possible
O	35298	35306	solution
O	35307	35309	is
O	35310	35312	to
O	35313	35315	do
O	35316	35320	grey
O	35320	35321	-
O	35321	35324	box
O	35324	35325	-
O	35325	35332	testing
O	35332	35333	,
O	35334	35337	not
O	35338	35343	white
O	35343	35344	-
O	35344	35347	box
O	35347	35348	-
O	35348	35355	testing
O	35355	35356	.

O	35357	35361	This
O	35362	35364	is
O	35365	35369	sort
O	35370	35372	of
O	35373	35384	combination
O	35385	35387	of
O	35388	35393	black
O	35393	35394	&
O	35394	35399	white
O	35400	35403	box
O	35404	35411	testing
O	35411	35412	.

O	35413	35416	You
O	35417	35420	are
O	35421	35427	really
O	35428	35435	testing
O	35436	35439	the
O	35440	35449	behaviour
O	35450	35452	of
O	35453	35457	your
O	35458	35462	unit
O	35463	35467	like
O	35468	35470	in
O	35471	35476	white
O	35476	35477	-
O	35477	35480	box
O	35481	35488	testing
O	35488	35489	,
O	35490	35493	but
O	35494	35496	in
O	35497	35504	general
O	35505	35508	you
O	35509	35513	make
O	35514	35516	it
O	35517	35531	implementation
O	35531	35532	-
O	35532	35540	agnostic
O	35541	35545	when
O	35546	35554	possible
O	35555	35556	.

O	35557	35561	When
O	35562	35564	it
O	35565	35567	is
O	35568	35576	possible
O	35576	35577	,
O	35578	35581	you
O	35582	35586	will
O	35587	35591	just
O	35592	35596	make
O	35597	35598	a
O	35599	35604	check
O	35605	35609	like
O	35610	35612	in
O	35613	35618	black
O	35618	35619	-
O	35619	35622	box
O	35623	35627	case
O	35627	35628	,
O	35629	35633	just
O	35634	35641	asserts
O	35642	35646	that
O	35647	35653	output
O	35654	35656	is
O	35657	35661	what
O	35662	35664	is
O	35665	35669	your
O	35670	35678	expected
O	35679	35681	to
O	35682	35684	be
O	35684	35685	.

O	35686	35688	So
O	35688	35689	,
O	35690	35693	the
O	35694	35701	essence
O	35702	35704	of
O	35705	35709	your
O	35710	35718	question
O	35719	35721	is
O	35722	35726	when
O	35727	35729	it
O	35730	35732	is
O	35733	35741	possible
O	35741	35742	.

O	35743	35747	This
O	35748	35750	is
O	35751	35757	really
O	35758	35762	hard
O	35762	35763	.

O	35764	35765	I
O	35766	35769	don
O	35769	35770	'
O	35770	35771	t
O	35772	35776	have
O	35777	35778	a
O	35779	35783	good
O	35784	35791	example
O	35791	35792	,
O	35793	35796	but
O	35797	35798	I
O	35799	35802	can
O	35803	35807	give
O	35808	35811	you
O	35812	35814	to
O	35815	35823	examples
O	35823	35824	.

O	35825	35827	In
O	35828	35831	the
O	35832	35836	case
O	35837	35841	that
O	35842	35845	was
O	35846	35855	mentioned
O	35856	35861	above
B-api_mention	35862	35866	with
I-api_mention	35867	35873	equals
O	35873	35874	(
B-api_mention	35874	35875	)
I-api_mention	35876	35878	vs
I-api_mention	35879	35895	equalsIgnoreCase
O	35895	35896	(
O	35896	35897	)
O	35898	35901	you
O	35902	35909	shouldn
O	35909	35910	'
O	35910	35911	t
B-api_mention	35912	35916	call
I-api_mention	35917	35924	Mockito
I-api_mention	35924	35925	.
I-api_mention	35925	35931	verify
O	35931	35932	(
O	35932	35933	)
O	35933	35934	,
O	35935	35939	just
O	35940	35946	assert
O	35947	35950	the
O	35951	35957	output
O	35957	35958	.

O	35959	35961	If
O	35962	35965	you
O	35966	35972	couldn
O	35972	35973	'
O	35973	35974	t
O	35975	35977	do
O	35978	35980	it
O	35980	35981	,
O	35982	35987	break
O	35988	35992	down
O	35993	35997	your
O	35998	36002	code
O	36003	36005	to
O	36006	36009	the
O	36010	36017	smaller
O	36018	36022	unit
O	36022	36023	,
O	36024	36029	until
O	36030	36033	you
O	36034	36037	can
O	36038	36040	do
O	36041	36043	it
O	36043	36044	.

O	36045	36047	On
O	36048	36051	the
O	36052	36057	other
O	36058	36062	hand
O	36062	36063	,
O	36064	36071	suppose
O	36072	36075	you
O	36076	36080	have
O	36081	36085	some
O	36086	36087	@
O	36087	36094	Service
O	36095	36098	and
O	36099	36102	you
O	36103	36106	are
O	36107	36115	writting
O	36116	36117	@
O	36117	36120	Web
O	36120	36121	-
O	36121	36128	Service
O	36129	36133	that
O	36134	36136	is
O	36137	36148	essentially
O	36149	36156	wrapper
O	36157	36161	upon
O	36162	36166	your
O	36167	36168	@
O	36168	36175	Service
O	36176	36177	-
O	36178	36180	it
O	36181	36190	delegates
O	36191	36194	all
O	36195	36200	calls
O	36201	36203	to
O	36204	36207	the
O	36208	36209	@
O	36209	36216	Service
O	36217	36218	(
O	36218	36221	and
O	36222	36228	making
O	36229	36233	some
O	36234	36239	extra
O	36240	36245	error
O	36246	36254	handling
O	36254	36255	)
O	36255	36256	.

O	36257	36259	In
O	36260	36264	this
O	36265	36269	case
B-api_mention	36270	36277	calling
I-api_mention	36278	36280	to
I-api_mention	36281	36288	Mockito
I-api_mention	36288	36289	.
I-api_mention	36289	36295	verify
O	36295	36296	(
O	36296	36297	)
O	36298	36300	is
O	36301	36310	essential
O	36310	36311	,
O	36312	36315	you
O	36316	36323	shouldn
O	36323	36324	'
O	36324	36325	t
O	36326	36335	duplicate
O	36336	36339	all
O	36340	36342	of
O	36343	36347	your
O	36348	36354	checks
O	36355	36359	that
O	36360	36363	you
O	36364	36367	did
O	36368	36371	for
O	36372	36375	the
O	36376	36377	@
O	36377	36383	Serive
O	36383	36384	,
O	36385	36394	verifying
O	36395	36399	that
O	36400	36403	you
O	36403	36404	'
O	36404	36406	re
O	36407	36414	calling
O	36415	36417	to
O	36418	36419	@
O	36419	36426	Service
O	36427	36431	with
O	36432	36439	correct
O	36440	36450	parammeter
O	36451	36455	list
O	36456	36458	is
O	36459	36469	sufficient
O	36469	36470	.

O	36472	36480	Question
O	36480	36481	-
O	36481	36489	12539365
O	36489	36490	,
O	36491	36497	answer
O	36497	36498	-
O	36498	36506	29349910

O	36507	36508	I
O	36509	36513	must
O	36514	36517	say
O	36517	36518	,
O	36519	36523	that
O	36524	36527	you
O	36528	36531	are
O	36532	36542	absolutely
O	36543	36548	right
O	36549	36553	from
O	36554	36555	a
O	36556	36565	classical
O	36566	36574	approach
O	36574	36575	'
O	36575	36576	s
O	36577	36582	point
O	36583	36585	of
O	36586	36590	view
O	36590	36591	:
O	36592	36593	#
O	36593	36595	li
O	36596	36598	If
O	36599	36602	you
O	36603	36608	first
O	36609	36615	create
O	36616	36617	(
O	36617	36619	or
O	36620	36626	change
O	36626	36627	)
O	36628	36636	business
O	36637	36642	logic
O	36643	36645	of
O	36646	36650	your
O	36651	36662	application
O	36663	36666	and
O	36667	36671	then
O	36672	36677	cover
O	36678	36680	it
O	36681	36685	with
O	36686	36687	(
O	36687	36692	adopt
O	36692	36693	)
O	36694	36699	tests
O	36700	36701	(
O	36702	36706	Test
O	36706	36707	-
O	36707	36711	Last
O	36712	36720	approach
O	36721	36722	)
O	36722	36723	,
O	36724	36728	then
O	36729	36731	it
O	36732	36736	will
O	36737	36739	be
O	36740	36744	very
O	36745	36752	painful
O	36753	36756	and
O	36757	36766	dangerous
O	36767	36769	to
O	36770	36773	let
O	36774	36779	tests
O	36780	36784	know
O	36785	36793	anything
O	36794	36799	about
O	36800	36803	how
O	36804	36808	your
O	36809	36817	software
O	36818	36823	works
O	36823	36824	,
O	36825	36830	other
O	36831	36835	than
O	36836	36844	checking
O	36845	36851	inputs
O	36852	36855	and
O	36856	36863	outputs
O	36863	36864	.

O	36865	36866	#
O	36866	36868	li
O	36869	36871	If
O	36872	36875	you
O	36876	36879	are
O	36880	36890	practicing
O	36891	36892	a
O	36893	36897	Test
O	36897	36898	-
O	36898	36904	Driven
O	36905	36913	approach
O	36914	36915	,
O	36916	36920	then
O	36921	36925	your
O	36926	36931	tests
O	36932	36935	are
O	36936	36939	the
O	36940	36945	first
O	36946	36948	to
O	36949	36951	be
O	36952	36959	written
O	36959	36960	,
O	36961	36963	to
O	36964	36966	be
O	36967	36974	changed
O	36975	36978	and
O	36979	36981	to
O	36982	36989	reflect
O	36990	36993	the
O	36994	36997	use
O	36998	37003	cases
O	37004	37006	of
O	37007	37011	your
O	37012	37020	software
O	37020	37021	'
O	37021	37022	s
O	37023	37036	functionality
O	37036	37037	.

O	37038	37041	The
O	37042	37056	implementation
O	37057	37064	depends
O	37065	37067	on
O	37068	37073	tests
O	37073	37074	.

O	37075	37079	That
O	37080	37089	sometimes
O	37090	37094	mean
O	37094	37095	,
O	37096	37100	that
O	37101	37104	you
O	37105	37109	want
O	37110	37114	your
O	37115	37123	software
O	37124	37126	to
O	37127	37129	be
O	37130	37141	implemented
O	37142	37144	in
O	37145	37149	some
O	37150	37160	particular
O	37161	37164	way
O	37164	37165	,
O	37166	37167	e
O	37167	37168	.
O	37168	37169	g
O	37169	37170	.
O	37171	37175	rely
O	37176	37178	on
O	37179	37183	some
O	37184	37189	other
O	37190	37199	component
O	37199	37200	'
O	37200	37201	s
O	37202	37208	method
O	37209	37211	or
O	37212	37216	even
O	37217	37221	call
O	37222	37224	it
O	37225	37226	a
O	37227	37237	particular
O	37238	37244	amount
O	37245	37247	of
O	37248	37253	times
O	37253	37254	.

O	37255	37259	That
O	37260	37262	is
B-api_mention	37263	37268	where
I-api_mention	37269	37276	Mockito
I-api_mention	37276	37277	.
I-api_mention	37277	37283	verify
O	37283	37284	(
O	37284	37285	)
O	37286	37291	comes
O	37292	37294	in
O	37295	37300	handy
O	37300	37301	!

O	37302	37304	It
O	37305	37307	is
O	37308	37317	important
O	37318	37320	to
O	37321	37329	remember
O	37329	37330	,
O	37331	37335	that
O	37336	37341	there
O	37342	37345	are
O	37346	37348	no
O	37349	37358	universal
O	37359	37364	tools
O	37364	37365	.

O	37366	37369	The
O	37370	37374	type
O	37375	37377	of
O	37378	37386	software
O	37386	37387	,
O	37388	37390	it
O	37390	37391	'
O	37391	37392	s
O	37393	37397	size
O	37397	37398	,
O	37399	37406	company
O	37407	37412	goals
O	37413	37416	and
O	37417	37423	market
O	37424	37433	situation
O	37433	37434	,
O	37435	37439	team
O	37440	37446	skills
O	37447	37450	and
O	37451	37455	many
O	37456	37461	other
O	37462	37468	things
O	37469	37478	influence
O	37479	37482	the
O	37483	37491	decision
O	37492	37494	on
O	37495	37500	which
O	37501	37509	approach
O	37510	37512	to
O	37513	37516	use
O	37517	37519	at
O	37520	37524	your
O	37525	37535	particular
O	37536	37540	case
O	37540	37541	.

O	37543	37551	Question
O	37551	37552	-
O	37552	37560	12862659
O	37560	37561	,
O	37562	37568	answer
O	37568	37569	-
O	37569	37577	12862662

O	37578	37581	use
O	37582	37585	the
O	37586	37592	second
O	37593	37601	argument
O	37602	37604	on
B-api_mention	37605	37608	the
I-api_mention	37609	37616	Mockito
I-api_mention	37616	37617	.
I-api_mention	37617	37623	verify
O	37624	37630	method
O	37630	37631	,
O	37632	37634	as
B-api_mention	37635	37637	in
I-api_mention	37637	37638	:
I-api_mention	37639	37645	verify
I-api_mention	37645	37646	(
O	37646	37650	args
O	37650	37651	)
O	37651	37652	.
O	37652	37662	someMethod
O	37662	37663	(
O	37663	37667	args
O	37667	37668	)

O	37670	37678	Question
O	37678	37679	-
O	37679	37687	13102045
O	37687	37688	,
O	37689	37695	answer
O	37695	37696	-
O	37696	37703	7056786

O	37704	37706	It
O	37706	37707	'
O	37707	37708	s
O	37709	37716	because
O	37717	37721	when
O	37722	37725	you
O	37726	37731	enter
O	37732	37733	a
O	37734	37740	number
O	37741	37745	then
O	37746	37751	press
O	37752	37757	Enter
O	37758	37759	,
B-api_mention	37760	37765	input
I-api_mention	37765	37766	.
I-api_mention	37766	37773	nextInt
I-api_mention	37773	37774	(
O	37774	37778	args
O	37778	37779	)
O	37780	37788	consumes
O	37789	37793	only
O	37794	37797	the
O	37798	37804	number
O	37804	37805	,
O	37806	37809	not
O	37810	37813	the
O	37814	37815	"
O	37815	37818	end
O	37819	37821	of
O	37822	37826	line
O	37826	37827	"
O	37827	37828	.

O	37829	37833	When
B-api_mention	37834	37839	input
I-api_mention	37839	37840	.
I-api_mention	37840	37848	nextLine
I-api_mention	37848	37849	(
O	37849	37853	args
O	37853	37854	)
O	37855	37863	executes
O	37863	37864	,
O	37865	37867	it
O	37868	37876	consumes
O	37877	37880	the
O	37881	37882	"
O	37882	37885	end
O	37886	37888	of
O	37889	37893	line
O	37893	37894	"
O	37895	37900	still
O	37901	37903	in
O	37904	37907	the
O	37908	37914	buffer
O	37915	37919	from
O	37920	37923	the
O	37924	37929	first
O	37930	37935	input
O	37935	37936	.

O	37937	37944	Instead
O	37944	37945	,
O	37946	37949	use
B-api_mention	37950	37955	input
I-api_mention	37955	37956	.
I-api_mention	37956	37964	nextLine
I-api_mention	37964	37965	(
O	37965	37969	args
O	37969	37970	)
O	37971	37982	immediately
O	37983	37988	after
B-api_mention	37989	37994	input
I-api_mention	37994	37995	.
I-api_mention	37995	38002	nextInt
I-api_mention	38002	38003	(
O	38003	38007	args
O	38007	38008	)

O	38010	38018	Question
O	38018	38019	-
O	38019	38027	13102045
O	38027	38028	,
O	38029	38035	answer
O	38035	38036	-
O	38036	38044	15046253

O	38045	38047	It
O	38048	38052	does
O	38053	38057	that
O	38058	38065	because
B-api_mention	38066	38071	input
I-api_mention	38071	38072	.
I-api_mention	38072	38079	nextInt
I-api_mention	38079	38080	(
O	38080	38084	args
O	38084	38085	)
O	38085	38086	;
O	38087	38092	doesn
O	38092	38093	'
O	38093	38094	t
O	38095	38102	capture
O	38103	38106	the
O	38107	38114	newline
O	38114	38115	.
O	38116	38119	you
O	38120	38125	could
O	38126	38128	do
O	38129	38133	like
O	38134	38137	the
O	38138	38144	others
O	38145	38153	proposed
O	38154	38156	by
O	38157	38163	adding
O	38164	38166	an
B-api_mention	38167	38172	input
I-api_mention	38172	38173	.
I-api_mention	38173	38181	nextLine
I-api_mention	38181	38182	(
O	38182	38186	args
O	38186	38187	)
O	38187	38188	;
O	38189	38199	underneath
O	38199	38200	.

O	38201	38214	Alternatively
O	38215	38218	you
O	38219	38222	can
O	38223	38225	do
O	38226	38228	it
O	38229	38230	C
O	38230	38231	#
O	38232	38237	style
O	38238	38241	and
B-api_mention	38242	38247	parse
I-api_mention	38248	38249	a
I-api_mention	38250	38258	nextLine
O	38259	38261	to
O	38262	38264	an
O	38265	38272	integer
O	38273	38277	like
O	38278	38280	so
O	38280	38281	:
O	38282	38285	int
B-api_mention	38286	38292	number
I-api_mention	38293	38294	=
I-api_mention	38295	38302	Integer
I-api_mention	38302	38303	.
I-api_mention	38303	38311	parseInt
I-api_mention	38311	38312	(
O	38312	38316	args
O	38316	38317	)
O	38317	38318	;
O	38319	38324	Doing
O	38325	38329	this
O	38330	38335	works
O	38336	38340	just
O	38341	38343	as
O	38344	38348	well
O	38348	38349	,
O	38350	38353	and
O	38354	38356	it
O	38357	38362	saves
O	38363	38366	you
O	38367	38368	a
O	38369	38373	line
O	38374	38376	of
O	38377	38381	code
O	38381	38382	.

O	38384	38392	Question
O	38392	38393	-
O	38393	38401	13102045
O	38401	38402	,
O	38403	38409	answer
O	38409	38410	-
O	38410	38418	22593693

O	38419	38424	There
O	38425	38429	seem
O	38430	38432	to
O	38433	38435	be
O	38436	38440	many
O	38441	38450	questions
O	38451	38456	about
O	38457	38461	this
O	38462	38467	issue
B-api_mention	38468	38472	with
I-api_mention	38473	38477	java
I-api_mention	38477	38478	.
I-api_mention	38478	38482	util
I-api_mention	38482	38483	.
I-api_mention	38483	38490	Scanner
O	38491	38492	.

O	38493	38494	I
O	38495	38500	think
O	38501	38502	a
O	38503	38507	more
O	38508	38516	readable
O	38516	38517	/
O	38517	38526	idiomatic
O	38527	38535	solution
O	38536	38541	would
O	38542	38544	be
O	38545	38547	to
B-api_mention	38548	38552	call
I-api_mention	38553	38560	scanner
I-api_mention	38560	38561	.
I-api_mention	38561	38565	skip
I-api_mention	38565	38566	(
O	38566	38570	args
O	38570	38571	)
O	38572	38574	to
O	38575	38579	drop
O	38580	38583	any
O	38584	38591	newline
O	38592	38602	characters
O	38603	38608	after
B-api_mention	38609	38616	calling
I-api_mention	38617	38624	nextInt
I-api_mention	38624	38625	(
O	38625	38629	args
O	38629	38630	)
O	38631	38632	.

O	38634	38642	Question
O	38642	38643	-
O	38643	38651	13102045
O	38651	38652	,
O	38653	38659	answer
O	38659	38660	-
O	38660	38668	24907860

O	38669	38676	Instead
O	38677	38679	of
B-api_mention	38680	38685	input
I-api_mention	38685	38686	.
I-api_mention	38686	38694	nextLine
I-api_mention	38694	38695	(
O	38695	38699	args
O	38699	38700	)
O	38701	38704	use
B-api_mention	38705	38710	input
I-api_mention	38710	38711	.
I-api_mention	38711	38715	next
I-api_mention	38715	38716	(
O	38716	38720	args
O	38720	38721	)
O	38722	38723	,
O	38724	38728	that
O	38729	38735	should
O	38736	38741	solve
O	38742	38745	the
O	38746	38753	problem
O	38753	38754	.

O	38755	38763	Modified
O	38764	38768	code
O	38768	38769	:
O	38770	38771	#
O	38771	38774	pre

O	38776	38784	Question
O	38784	38785	-
O	38785	38793	11774099
O	38793	38794	,
O	38795	38801	answer
O	38801	38802	-
O	38802	38810	11774137

O	38811	38818	iterate
O	38819	38826	through
O	38827	38830	the
O	38831	38836	whole
O	38837	38840	65k
O	38841	38846	chars
O	38847	38850	and
B-api_mention	38851	38854	ask
I-api_mention	38855	38864	Character
I-api_mention	38864	38865	.
I-api_mention	38865	38886	isJavaIdentifierStart
I-api_mention	38886	38887	(
O	38887	38891	args
O	38891	38892	)
O	38893	38894	.

O	38895	38898	The
O	38899	38905	answer
O	38906	38908	is
O	38909	38910	:
O	38911	38912	"
O	38912	38920	undertie
O	38920	38921	"
O	38922	38929	decimal
O	38930	38934	8255

O	38936	38944	Question
O	38944	38945	-
O	38945	38953	11411022
O	38953	38954	,
O	38955	38961	answer
O	38961	38962	-
O	38962	38970	34052602

O	38971	38974	The
O	38975	38979	best
O	38980	38983	way
O	38984	38986	is
O	38987	38990	the
O	38991	38999	clearest
B-api_mention	39000	39003	way
I-api_mention	39003	39004	:
I-api_mention	39005	39006	*
I-api_mention	39007	39013	Thread
I-api_mention	39013	39014	.
I-api_mention	39014	39027	currentThread
I-api_mention	39027	39028	(
O	39028	39032	args
B-api_mention	39032	39033	)
I-api_mention	39034	39035	=
I-api_mention	39035	39036	=
I-api_mention	39037	39043	Looper
I-api_mention	39043	39044	.
I-api_mention	39044	39057	getMainLooper
I-api_mention	39057	39058	(
I-api_mention	39058	39062	args
I-api_mention	39062	39063	)
I-api_mention	39063	39064	.
I-api_mention	39064	39073	getThread
I-api_mention	39073	39074	(
O	39074	39078	args
O	39078	39079	)
O	39080	39082	Or
O	39082	39083	,
O	39084	39086	if
O	39087	39090	the
O	39091	39098	runtime
O	39099	39107	platform
O	39108	39110	is
O	39111	39114	API
O	39115	39120	level
O	39121	39123	23
O	39124	39125	(
O	39125	39136	Marshmallow
O	39137	39138	6
O	39138	39139	.
O	39139	39140	0
O	39140	39141	)
O	39142	39144	or
B-api_mention	39145	39151	higher
I-api_mention	39151	39152	:
I-api_mention	39153	39159	Looper
I-api_mention	39159	39160	.
I-api_mention	39160	39173	getMainLooper
I-api_mention	39173	39174	(
I-api_mention	39174	39178	args
I-api_mention	39178	39179	)
I-api_mention	39179	39180	.
I-api_mention	39180	39195	isCurrentThread
I-api_mention	39195	39196	(
O	39196	39200	args
O	39200	39201	)
O	39202	39205	See
B-api_mention	39206	39209	the
I-api_mention	39210	39216	Looper
O	39217	39220	API
O	39221	39222	.

O	39223	39227	Note
O	39228	39232	that
B-api_mention	39233	39240	calling
I-api_mention	39241	39247	Looper
I-api_mention	39247	39248	.
I-api_mention	39248	39261	getMainLooper
I-api_mention	39261	39262	(
O	39262	39266	args
O	39266	39267	)
O	39268	39276	involves
O	39277	39291	synchonization
O	39292	39293	(
O	39293	39296	see
O	39297	39300	the
O	39301	39307	source
O	39308	39309	)
O	39309	39310	.

O	39311	39314	You
O	39315	39320	might
O	39321	39325	want
O	39326	39328	to
O	39329	39334	avoid
O	39335	39338	the
O	39339	39347	overhead
O	39348	39350	by
O	39351	39358	storing
O	39359	39362	the
O	39363	39369	return
O	39370	39375	value
O	39376	39379	and
O	39380	39387	reusing
O	39388	39390	it
O	39390	39391	.

O	39392	39393	*
O	39394	39400	credit
O	39401	39409	greg7gkb

O	39411	39419	Question
O	39419	39420	-
O	39420	39428	12552863
O	39428	39429	,
O	39430	39436	answer
O	39436	39437	-
O	39437	39445	12619799

O	39446	39447	I
O	39448	39453	would
O	39454	39457	say
O	39458	39461	don
O	39461	39462	'
O	39462	39463	t
O	39464	39467	use
O	39468	39471	ARM
O	39472	39475	and
O	39476	39478	go
O	39479	39481	on
O	39482	39486	with
O	39487	39496	Closeable
O	39496	39497	.

O	39498	39501	Use
O	39502	39508	method
O	39509	39513	like
O	39513	39514	,
O	39515	39516	#
O	39516	39519	pre
O	39520	39524	Also
O	39525	39528	you
O	39529	39535	should
O	39536	39544	consider
O	39545	39552	calling
B-api_mention	39553	39558	close
I-api_mention	39559	39561	of
I-api_mention	39562	39576	BufferedWriter
O	39577	39579	as
O	39580	39582	it
O	39583	39585	is
O	39586	39589	not
O	39590	39594	just
O	39595	39605	delegating
O	39606	39609	the
B-api_mention	39610	39615	close
I-api_mention	39616	39618	to
I-api_mention	39619	39629	FileWriter
O	39630	39631	,
O	39632	39635	but
O	39636	39638	it
O	39639	39643	does
O	39644	39648	some
O	39649	39656	cleanup
B-api_mention	39657	39661	like
I-api_mention	39662	39673	flushBuffer
O	39674	39675	.

O	39677	39685	Question
O	39685	39686	-
O	39686	39694	12552863
O	39694	39695	,
O	39696	39702	answer
O	39702	39703	-
O	39703	39711	12665271

O	39712	39716	Here
O	39716	39717	'
O	39717	39718	s
O	39719	39721	my
O	39722	39726	take
O	39727	39729	on
O	39730	39733	the
O	39734	39746	alternatives
O	39746	39747	:
O	39748	39749	1
O	39749	39750	)
O	39751	39752	#
O	39752	39755	pre
O	39756	39759	For
O	39760	39762	me
O	39762	39763	,
O	39764	39767	the
O	39768	39772	best
O	39773	39778	thing
O	39779	39785	coming
O	39786	39788	to
O	39789	39793	Java
O	39794	39798	from
O	39799	39810	traditional
O	39811	39812	C
O	39812	39813	+
O	39813	39814	+
O	39815	39817	15
O	39818	39823	years
O	39824	39827	ago
O	39828	39831	was
O	39832	39836	that
O	39837	39840	you
O	39841	39846	could
O	39847	39852	trust
O	39853	39857	your
O	39858	39865	program
O	39865	39866	.

O	39867	39871	Even
O	39872	39874	if
O	39875	39881	things
O	39882	39885	are
O	39886	39888	in
O	39889	39892	the
O	39893	39897	muck
O	39898	39901	and
O	39902	39907	going
O	39908	39913	wrong
O	39913	39914	,
O	39915	39920	which
O	39921	39925	they
O	39926	39931	often
O	39932	39934	do
O	39934	39935	,
O	39936	39937	I
O	39938	39942	want
O	39943	39946	the
O	39947	39951	rest
O	39952	39954	of
O	39955	39958	the
O	39959	39963	code
O	39964	39966	to
O	39967	39969	be
O	39970	39972	on
O	39973	39977	best
O	39978	39987	behaviour
O	39988	39991	and
O	39992	40000	smelling
O	40001	40003	of
O	40004	40009	roses
O	40009	40010	.

O	40011	40017	Indeed
O	40017	40018	,
B-api_mention	40019	40022	the
I-api_mention	40023	40037	BufferedWriter
O	40038	40043	might
O	40044	40049	throw
O	40050	40052	an
O	40053	40062	exception
O	40063	40067	here
O	40067	40068	.

O	40069	40076	Running
O	40077	40080	out
O	40081	40083	of
O	40084	40090	memory
O	40091	40097	wouldn
O	40097	40098	'
O	40098	40099	t
O	40100	40102	be
O	40103	40110	unusual
O	40110	40111	,
O	40112	40115	for
O	40116	40124	instance
O	40124	40125	.

O	40126	40129	For
O	40130	40135	other
O	40136	40146	decorators
O	40146	40147	,
O	40148	40150	do
O	40151	40154	you
O	40155	40159	know
O	40160	40165	which
O	40166	40168	of
B-api_mention	40169	40172	the
I-api_mention	40173	40177	java
O	40177	40178	.
O	40178	40180	io
O	40181	40188	wrapper
O	40189	40196	classes
O	40197	40202	throw
O	40203	40204	a
O	40205	40212	checked
O	40213	40222	exception
O	40223	40227	from
O	40228	40233	their
O	40234	40246	constructors
O	40246	40247	?

O	40248	40249	I
O	40250	40253	don
O	40253	40254	'
O	40254	40255	t
O	40255	40256	.

O	40257	40262	Doesn
O	40262	40263	'
O	40263	40264	t
O	40265	40267	do
O	40268	40272	code
O	40273	40290	understandability
O	40291	40295	much
O	40296	40300	good
O	40301	40303	if
O	40304	40307	you
O	40308	40312	rely
O	40313	40317	upon
O	40318	40322	that
O	40323	40327	sort
O	40328	40330	of
O	40331	40338	obscure
O	40339	40348	knowledge
O	40348	40349	.

O	40350	40354	Also
O	40355	40360	there
O	40360	40361	'
O	40361	40362	s
O	40363	40366	the
O	40367	40368	"
O	40368	40379	destruction
O	40379	40380	"
O	40380	40381	.

O	40382	40384	If
O	40385	40390	there
O	40391	40393	is
O	40394	40396	an
O	40397	40402	error
O	40403	40412	condition
O	40412	40413	,
O	40414	40418	then
O	40419	40422	you
O	40423	40431	probably
O	40432	40435	don
O	40435	40436	'
O	40436	40437	t
O	40438	40442	want
O	40443	40445	to
O	40446	40448	be
O	40449	40457	flushing
O	40458	40465	rubbish
O	40466	40468	to
O	40469	40470	a
O	40471	40475	file
O	40476	40480	that
O	40481	40486	needs
O	40487	40495	deleting
O	40496	40497	(
O	40497	40501	code
O	40502	40505	for
O	40506	40510	that
O	40511	40514	not
O	40515	40520	shown
O	40520	40521	)
O	40521	40522	.

O	40523	40531	Although
O	40531	40532	,
O	40533	40535	of
O	40536	40542	course
O	40542	40543	,
O	40544	40552	deleting
O	40553	40556	the
O	40557	40561	file
O	40562	40564	is
O	40565	40569	also
O	40570	40577	another
O	40578	40589	interesting
O	40590	40599	operation
O	40600	40602	to
O	40603	40605	do
O	40606	40608	as
O	40609	40614	error
O	40615	40623	handling
O	40623	40624	.

O	40625	40634	Generally
O	40635	40638	you
O	40639	40643	want
O	40644	40651	finally
O	40652	40658	blocks
O	40659	40661	to
O	40662	40664	be
O	40665	40667	as
O	40668	40673	short
O	40674	40677	and
O	40678	40686	reliable
O	40687	40689	as
O	40690	40698	possible
O	40698	40699	.

O	40700	40706	Adding
O	40707	40714	flushes
O	40715	40719	does
O	40720	40723	not
O	40724	40728	help
O	40729	40733	this
O	40734	40738	goal
O	40738	40739	.

O	40740	40743	For
O	40744	40748	many
O	40749	40757	releases
O	40758	40762	some
O	40763	40765	of
O	40766	40769	the
O	40770	40779	buffering
O	40780	40787	classes
O	40788	40790	in
O	40791	40794	the
O	40795	40798	JDK
O	40799	40802	had
O	40803	40804	a
O	40805	40808	bug
O	40809	40814	where
O	40815	40817	an
O	40818	40827	exception
B-api_mention	40828	40832	from
O	40833	40838	flush
B-api_mention	40839	40845	within
O	40846	40851	close
B-api_mention	40852	40858	caused
O	40859	40864	close
O	40865	40867	on
O	40868	40871	the
O	40872	40881	decorated
O	40882	40888	object
O	40889	40892	not
O	40893	40895	be
O	40896	40902	called
O	40902	40903	.

O	40904	40910	Whilst
O	40911	40915	that
O	40916	40919	has
O	40920	40924	been
O	40925	40930	fixed
O	40931	40934	for
O	40935	40939	some
O	40940	40944	time
O	40944	40945	,
O	40946	40952	expect
O	40953	40955	it
O	40956	40960	from
O	40961	40966	other
O	40967	40982	implementations
O	40982	40983	.

O	40984	40985	2
O	40985	40986	)
O	40987	40988	#
O	40988	40991	pre
O	40992	40994	We
O	40994	40995	'
O	40995	40997	re
O	40998	41003	still
O	41004	41012	flushing
O	41013	41015	in
O	41016	41019	the
O	41020	41028	implicit
O	41029	41036	finally
O	41037	41042	block
O	41043	41044	(
O	41044	41047	now
O	41048	41052	with
B-api_mention	41053	41061	repeated
O	41062	41067	close
O	41068	41069	-
O	41070	41074	this
O	41075	41079	gets
O	41080	41085	worse
O	41086	41088	as
O	41089	41092	you
O	41093	41096	add
O	41097	41101	more
O	41102	41112	decorators
O	41112	41113	)
O	41113	41114	,
O	41115	41118	but
O	41119	41122	the
O	41123	41135	construction
O	41136	41138	is
O	41139	41143	safe
O	41144	41147	and
O	41148	41150	we
O	41151	41155	have
O	41156	41158	to
O	41159	41167	implicit
O	41168	41175	finally
O	41176	41182	blocks
O	41183	41185	so
O	41186	41190	even
O	41191	41192	a
B-api_mention	41193	41199	failed
O	41200	41205	flush
O	41206	41211	doesn
O	41211	41212	'
O	41212	41213	t
O	41214	41221	prevent
O	41222	41230	resource
O	41231	41238	release
O	41238	41239	.

O	41240	41241	3
O	41241	41242	)
O	41243	41244	#
O	41244	41247	pre
O	41248	41253	There
O	41253	41254	'
O	41254	41255	s
O	41256	41257	a
O	41258	41261	bug
O	41262	41266	here
O	41266	41267	.

O	41268	41274	Should
O	41275	41277	be
O	41277	41278	:
O	41279	41280	#
O	41280	41283	pre
O	41284	41288	Some
O	41289	41295	poorly
O	41296	41307	implemented
O	41308	41318	decorators
O	41319	41322	are
O	41323	41325	in
O	41326	41330	fact
O	41331	41339	resource
O	41340	41343	and
O	41344	41348	will
O	41349	41353	need
O	41354	41356	to
O	41357	41359	be
O	41360	41366	closed
O	41367	41375	reliably
O	41375	41376	.

O	41377	41381	Also
O	41382	41386	some
O	41387	41394	streams
O	41395	41398	may
O	41399	41403	need
O	41404	41406	to
O	41407	41409	be
O	41410	41416	closed
O	41417	41419	in
O	41420	41421	a
O	41422	41432	particular
O	41433	41436	way
O	41437	41438	(
O	41438	41445	perhaps
O	41446	41450	they
O	41451	41454	are
O	41455	41460	doing
O	41461	41472	compression
O	41473	41476	and
O	41477	41481	need
O	41482	41484	to
O	41485	41490	write
O	41491	41495	bits
O	41496	41498	to
O	41499	41505	finish
O	41506	41509	off
O	41509	41510	,
O	41511	41514	and
O	41515	41518	can
O	41518	41519	'
O	41519	41520	t
O	41521	41525	just
O	41526	41531	flush
O	41532	41542	everything
O	41542	41543	.

O	41544	41551	Verdict
O	41552	41560	Although
O	41561	41562	3
O	41563	41565	is
O	41566	41567	a
O	41568	41579	technically
O	41580	41588	superior
O	41589	41597	solution
O	41597	41598	,
O	41599	41607	software
O	41608	41619	development
O	41620	41627	reasons
O	41628	41632	make
O	41633	41634	2
O	41635	41638	the
O	41639	41645	better
O	41646	41652	choice
O	41652	41653	.

O	41654	41661	However
O	41661	41662	,
O	41663	41666	try
O	41666	41667	-
O	41667	41671	with
O	41671	41672	-
O	41672	41680	resource
O	41681	41683	is
O	41684	41689	still
O	41690	41692	an
O	41693	41703	inadequate
O	41704	41707	fix
O	41708	41711	and
O	41712	41715	you
O	41716	41722	should
O	41723	41728	stick
O	41729	41733	with
O	41734	41737	the
O	41738	41745	Execute
O	41746	41752	Around
O	41753	41758	idiom
O	41758	41759	,
O	41760	41765	which
O	41766	41772	should
O	41773	41777	have
O	41778	41779	a
O	41780	41787	clearer
O	41788	41794	syntax
O	41795	41799	with
O	41800	41808	closures
O	41809	41811	in
O	41812	41816	Java
O	41817	41819	SE
O	41820	41821	8
O	41821	41822	.

O	41824	41832	Question
O	41832	41833	-
O	41833	41841	12552863
O	41841	41842	,
O	41843	41849	answer
O	41849	41850	-
O	41850	41858	16229988

O	41859	41861	My
O	41862	41870	solution
O	41871	41873	is
O	41874	41876	to
O	41877	41879	do
O	41880	41881	a
O	41882	41883	"
O	41883	41890	extract
O	41891	41897	method
O	41897	41898	"
O	41899	41910	refactoring
O	41910	41911	,
O	41912	41914	as
O	41915	41924	following
O	41924	41925	:
B-api_mention	41926	41927	#
I-api_mention	41927	41930	pre
I-api_mention	41931	41942	printToFile
O	41943	41946	can
O	41947	41949	be
O	41950	41957	written
O	41958	41964	either
O	41965	41966	#
O	41966	41969	pre
O	41970	41972	or
O	41973	41974	#
O	41974	41977	pre
O	41978	41981	For
O	41982	41987	class
O	41988	41991	lib
O	41992	42001	designers
O	42001	42002	,
O	42003	42004	I
O	42005	42009	will
O	42010	42017	suggest
O	42018	42022	them
O	42023	42029	extend
B-api_mention	42030	42033	the
I-api_mention	42034	42046	AutoClosable
O	42047	42056	interface
O	42057	42061	with
O	42062	42064	an
O	42065	42075	additional
O	42076	42082	method
O	42083	42085	to
O	42086	42094	suppress
O	42095	42098	the
O	42099	42104	close
O	42104	42105	.

O	42106	42108	In
O	42109	42113	this
O	42114	42118	case
O	42119	42121	we
O	42122	42125	can
O	42126	42130	then
O	42131	42139	manually
O	42140	42147	control
O	42148	42151	the
O	42152	42157	close
O	42158	42166	behavior
O	42166	42167	.

O	42168	42171	For
O	42172	42180	language
O	42181	42190	designers
O	42190	42191	,
O	42192	42195	the
O	42196	42202	lesson
O	42203	42205	is
O	42206	42210	that
O	42211	42217	adding
O	42218	42219	a
O	42220	42223	new
O	42224	42231	feature
O	42232	42237	could
O	42238	42242	mean
O	42243	42249	adding
O	42250	42251	a
O	42252	42255	lot
O	42256	42262	others
O	42262	42263	.

O	42264	42266	In
O	42267	42271	this
O	42272	42276	Java
O	42277	42281	case
O	42281	42282	,
O	42283	42292	obviously
O	42293	42296	ARM
O	42297	42304	feature
O	42305	42309	will
O	42310	42314	work
O	42315	42321	better
O	42322	42326	with
O	42327	42328	a
O	42329	42337	resource
O	42338	42347	ownership
O	42348	42356	transfer
O	42357	42366	mechanism
O	42366	42367	.

O	42368	42374	UPDATE
O	42375	42385	Originally
O	42386	42389	the
O	42390	42394	code
O	42395	42400	above
O	42401	42409	requires
O	42410	42411	@
O	42411	42426	SuppressWarning
O	42427	42432	since
B-api_mention	42433	42436	the
I-api_mention	42437	42451	BufferedWriter
O	42452	42458	inside
O	42459	42462	the
O	42463	42471	function
B-api_mention	42472	42480	requires
I-api_mention	42481	42486	close
I-api_mention	42486	42487	(
O	42487	42491	args
O	42491	42492	)
O	42493	42494	.

O	42495	42497	As
O	42498	42507	suggested
O	42508	42510	by
O	42511	42512	a
O	42513	42520	comment
B-api_mention	42520	42521	,
I-api_mention	42522	42524	if
I-api_mention	42525	42530	flush
I-api_mention	42530	42531	(
O	42531	42535	args
O	42535	42536	)
O	42537	42539	to
O	42540	42542	be
O	42543	42549	called
O	42550	42556	before
O	42557	42562	close
O	42563	42566	the
O	42567	42573	writer
O	42573	42574	,
O	42575	42577	we
O	42578	42582	need
O	42583	42585	to
O	42586	42588	do
O	42589	42591	so
O	42592	42598	before
B-api_mention	42599	42602	any
I-api_mention	42603	42609	return
O	42610	42611	(
O	42611	42619	implicit
O	42620	42622	or
O	42623	42631	explicit
O	42631	42632	)
O	42633	42643	statements
O	42644	42650	inside
O	42651	42654	the
O	42655	42658	try
O	42659	42664	block
O	42664	42665	.

O	42666	42671	There
O	42672	42674	is
O	42675	42684	currently
O	42685	42687	no
O	42688	42691	way
O	42692	42694	to
O	42695	42701	ensure
O	42702	42705	the
O	42706	42712	caller
O	42713	42718	doing
O	42719	42723	this
O	42724	42725	I
O	42726	42731	think
O	42731	42732	,
O	42733	42735	so
O	42736	42740	this
O	42741	42745	must
O	42746	42748	be
O	42749	42759	documented
B-api_mention	42760	42763	for
I-api_mention	42764	42779	writeFileWriter
O	42780	42781	.

O	42782	42788	UPDATE
O	42789	42794	AGAIN
O	42795	42798	The
O	42799	42804	above
O	42805	42811	update
O	42812	42817	makes
O	42818	42819	@
O	42819	42834	SuppressWarning
O	42835	42846	unnecessary
O	42847	42852	since
O	42853	42855	it
O	42856	42863	require
O	42864	42867	the
O	42868	42876	function
O	42877	42879	to
O	42880	42886	return
O	42887	42890	the
O	42891	42899	resource
O	42900	42902	to
O	42903	42906	the
O	42907	42913	caller
O	42913	42914	,
O	42915	42917	so
O	42918	42924	itself
O	42925	42929	does
O	42930	42933	not
O	42934	42943	necessary
O	42944	42949	being
O	42950	42956	closed
O	42956	42957	.

O	42958	42971	Unfortunately
O	42971	42972	,
O	42973	42977	this
O	42978	42982	pull
O	42983	42985	us
O	42986	42990	back
O	42991	42993	to
O	42994	42997	the
O	42998	43007	beginning
O	43008	43010	of
O	43011	43014	the
O	43015	43024	situation
O	43024	43025	:
O	43026	43029	the
O	43030	43037	warning
O	43038	43040	is
O	43041	43044	now
O	43045	43050	moved
O	43051	43055	back
O	43056	43058	to
O	43059	43062	the
O	43063	43069	caller
O	43070	43074	side
O	43074	43075	.

O	43076	43078	So
O	43079	43081	to
O	43082	43090	properly
O	43091	43096	solve
O	43097	43101	this
O	43101	43102	,
O	43103	43105	we
O	43106	43110	need
O	43111	43112	a
B-api_mention	43113	43123	customised
I-api_mention	43124	43136	AutoClosable
O	43137	43141	that
O	43142	43150	whenever
O	43151	43153	it
O	43154	43160	closes
O	43160	43161	,
O	43162	43165	the
B-api_mention	43166	43175	underline
I-api_mention	43176	43190	BufferedWriter
I-api_mention	43191	43196	shall
I-api_mention	43197	43199	be
I-api_mention	43200	43205	flush
I-api_mention	43205	43206	(
O	43206	43210	args
O	43210	43211	)
O	43212	43214	ed
O	43214	43215	.

O	43216	43224	Actually
O	43224	43225	,
O	43226	43230	this
O	43231	43236	shows
O	43237	43239	us
O	43240	43247	another
O	43248	43251	way
O	43252	43254	to
O	43255	43261	bypass
O	43262	43265	the
O	43266	43273	warning
O	43273	43274	,
O	43275	43280	since
B-api_mention	43281	43284	the
I-api_mention	43285	43297	BufferWriter
O	43298	43300	is
O	43301	43306	never
O	43307	43313	closed
O	43314	43316	in
O	43317	43323	either
O	43324	43327	way
O	43327	43328	.

O	43330	43338	Question
O	43338	43339	-
O	43339	43347	12552863
O	43347	43348	,
O	43349	43355	answer
O	43355	43356	-
O	43356	43364	18496449

O	43365	43368	The
O	43369	43374	first
O	43375	43380	style
O	43381	43383	is
O	43384	43387	the
O	43388	43391	one
O	43392	43401	suggested
O	43402	43404	by
B-api_mention	43405	43411	Oracle
I-api_mention	43412	43413	.

B-api_mention	43414	43428	BufferedWriter
O	43429	43434	doesn
O	43434	43435	'
O	43435	43436	t
O	43437	43442	throw
O	43443	43450	checked
O	43451	43461	exceptions
O	43461	43462	,
O	43463	43465	so
O	43466	43468	if
O	43469	43472	any
O	43473	43482	exception
O	43483	43485	is
O	43486	43492	thrown
O	43492	43493	,
O	43494	43497	the
O	43498	43505	program
O	43506	43508	is
O	43509	43512	not
O	43513	43521	expected
O	43522	43524	to
O	43525	43532	recover
O	43533	43537	from
O	43538	43540	it
O	43540	43541	,
O	43542	43548	making
O	43549	43557	resource
O	43558	43565	recover
O	43566	43572	mostly
O	43573	43577	moot
O	43577	43578	.

O	43579	43585	Mostly
O	43586	43593	because
O	43594	43596	it
O	43597	43602	could
O	43603	43609	happen
O	43610	43612	in
O	43613	43614	a
O	43615	43621	thread
O	43621	43622	,
O	43623	43627	with
O	43628	43631	the
O	43632	43638	thread
O	43639	43645	dieing
O	43646	43649	but
O	43650	43653	the
O	43654	43661	program
O	43662	43667	still
O	43668	43678	continuing
O	43679	43680	-
O	43680	43681	-
O	43682	43685	say
O	43685	43686	,
O	43687	43692	there
O	43693	43696	was
O	43697	43698	a
O	43699	43708	temporary
O	43709	43715	memory
O	43716	43722	outage
O	43723	43727	that
O	43728	43732	wasn
O	43732	43733	'
O	43733	43734	t
O	43735	43739	long
O	43740	43746	enough
O	43747	43749	to
O	43750	43759	seriously
O	43760	43766	impair
O	43767	43770	the
O	43771	43775	rest
O	43776	43778	of
O	43779	43782	the
O	43783	43790	program
O	43790	43791	.

O	43792	43794	It
O	43794	43795	'
O	43795	43796	s
O	43797	43798	a
O	43799	43805	rather
O	43806	43812	corner
O	43813	43817	case
O	43817	43818	,
O	43819	43825	though
O	43825	43826	,
O	43827	43830	and
O	43831	43833	if
O	43834	43836	it
O	43837	43844	happens
O	43845	43850	often
O	43851	43857	enough
O	43858	43860	to
O	43861	43865	make
O	43866	43874	resource
O	43875	43879	leak
O	43880	43881	a
O	43882	43889	problem
O	43889	43890	,
O	43891	43894	the
O	43895	43898	try
O	43898	43899	-
O	43899	43903	with
O	43903	43904	-
O	43904	43913	resources
O	43914	43916	is
O	43917	43920	the
O	43921	43926	least
O	43927	43929	of
O	43930	43934	your
O	43935	43943	problems
O	43943	43944	.

O	43946	43954	Question
O	43954	43955	-
O	43955	43963	12552863
O	43963	43964	,
O	43965	43971	answer
O	43971	43972	-
O	43972	43980	32302353

O	43981	43983	To
O	43984	43990	concur
O	43991	43995	with
O	43996	44003	earlier
O	44004	44012	comments
O	44012	44013	:
O	44014	44022	simplest
O	44023	44025	is
O	44026	44027	(
O	44027	44028	2
O	44028	44029	)
O	44030	44032	to
B-api_mention	44033	44036	use
I-api_mention	44037	44046	Closeable
O	44047	44056	resources
O	44057	44060	and
O	44061	44068	declare
O	44069	44073	them
O	44074	44076	in
O	44077	44082	order
O	44083	44085	in
O	44086	44089	the
O	44090	44093	try
O	44093	44094	-
O	44094	44098	with
O	44098	44099	-
O	44099	44108	resources
O	44109	44115	clause
O	44115	44116	.

O	44117	44119	If
O	44120	44123	you
O	44124	44128	only
B-api_mention	44129	44133	have
I-api_mention	44134	44147	AutoCloseable
O	44147	44148	,
O	44149	44152	you
O	44153	44156	can
O	44157	44161	wrap
O	44162	44166	them
O	44167	44169	in
O	44170	44177	another
O	44178	44179	(
O	44179	44185	nested
O	44185	44186	)
O	44187	44192	class
O	44193	44197	that
O	44198	44202	just
O	44203	44209	checks
B-api_mention	44210	44214	that
O	44215	44220	close
O	44221	44223	is
O	44224	44228	only
O	44229	44235	called
O	44236	44240	once
O	44241	44242	(
O	44242	44248	Facade
O	44249	44256	Pattern
O	44256	44257	)
O	44257	44258	,
O	44259	44260	e
O	44260	44261	.
O	44261	44262	g
O	44262	44263	.
O	44264	44266	by
O	44267	44273	having
O	44274	44281	private
O	44282	44286	bool
O	44287	44295	isClosed
O	44295	44296	;
O	44297	44298	.

O	44299	44301	In
O	44302	44310	practice
O	44311	44315	even
O	44316	44322	Oracle
O	44323	44327	just
O	44328	44329	(
O	44329	44330	1
O	44330	44331	)
O	44332	44338	chains
O	44339	44342	the
O	44343	44355	constructors
O	44356	44359	and
O	44360	44365	doesn
O	44365	44366	'
O	44366	44367	t
O	44368	44377	correctly
O	44378	44384	handle
O	44385	44395	exceptions
O	44396	44403	partway
O	44404	44411	through
O	44412	44415	the
O	44416	44421	chain
O	44421	44422	.

O	44423	44436	Alternatively
O	44436	44437	,
O	44438	44441	you
O	44442	44445	can
O	44446	44454	manually
O	44455	44461	create
O	44462	44463	a
O	44464	44471	chained
O	44472	44480	resource
O	44480	44481	,
O	44482	44487	using
O	44488	44489	a
O	44490	44496	static
O	44497	44504	factory
O	44505	44511	method
O	44511	44512	;
O	44513	44517	this
O	44518	44530	encapsulates
O	44531	44534	the
O	44535	44540	chain
O	44540	44541	,
O	44542	44545	and
O	44546	44552	handle
O	44553	44560	cleanup
O	44561	44563	if
O	44564	44566	it
O	44567	44572	fails
O	44573	44577	part
O	44577	44578	-
O	44578	44581	way
O	44581	44582	:
O	44583	44584	#
O	44584	44587	pre
O	44588	44591	The
O	44592	44602	complexity
O	44603	44608	comes
O	44609	44613	from
O	44614	44622	handling
O	44623	44631	multiple
O	44632	44642	exceptions
O	44642	44643	;
O	44644	44653	otherwise
O	44654	44656	it
O	44656	44657	'
O	44657	44658	s
O	44659	44663	just
O	44664	44665	"
O	44665	44670	close
O	44671	44680	resources
O	44681	44685	that
O	44686	44689	you
O	44689	44690	'
O	44690	44692	ve
O	44693	44701	acquired
O	44702	44704	so
O	44705	44708	far
O	44708	44709	"
O	44709	44710	.

O	44711	44712	A
O	44713	44719	common
O	44720	44728	practice
O	44729	44734	seems
O	44735	44737	to
O	44738	44740	be
O	44741	44743	to
O	44744	44749	first
O	44750	44760	initialize
O	44761	44764	the
O	44765	44773	variable
O	44774	44778	that
O	44779	44784	holds
O	44785	44788	the
O	44789	44795	object
O	44796	44800	that
O	44801	44806	holds
O	44807	44810	the
O	44811	44819	resource
O	44820	44822	to
O	44823	44827	null
O	44828	44829	(
B-api_mention	44829	44833	here
I-api_mention	44834	44844	fileWriter
O	44845	44846	)
O	44846	44847	,
O	44848	44851	and
O	44852	44856	then
O	44857	44864	include
O	44865	44866	a
O	44867	44871	null
O	44872	44877	check
O	44878	44880	in
O	44881	44884	the
O	44885	44892	cleanup
O	44892	44893	,
O	44894	44897	but
O	44898	44902	that
O	44903	44908	seems
O	44909	44920	unnecessary
O	44920	44921	:
O	44922	44924	if
O	44925	44928	the
O	44929	44940	constructor
O	44941	44946	fails
O	44946	44947	,
O	44948	44953	there
O	44953	44954	'
O	44954	44955	s
O	44956	44963	nothing
O	44964	44966	to
O	44967	44972	clean
O	44973	44975	up
O	44975	44976	,
O	44977	44979	so
O	44980	44982	we
O	44983	44986	can
O	44987	44991	just
O	44992	44995	let
O	44996	45000	that
O	45001	45010	exception
O	45011	45020	propagate
O	45020	45021	,
O	45022	45027	which
O	45028	45038	simplifies
O	45039	45042	the
O	45043	45047	code
O	45048	45049	a
O	45050	45056	little
O	45056	45057	.

O	45058	45061	You
O	45062	45067	could
O	45068	45076	probably
O	45077	45079	do
O	45080	45084	this
O	45085	45096	generically
O	45096	45097	:
O	45098	45099	#
O	45099	45102	pre

O	45104	45112	Question
O	45112	45113	-
O	45113	45121	13195797
O	45121	45122	,
O	45123	45129	answer
O	45129	45130	-
B-api_mention	45130	45138	13195890

B-api_mention	45139	45148	FileUtils
I-api_mention	45148	45149	.
I-api_mention	45149	45163	cleanDirectory
I-api_mention	45163	45164	(
O	45164	45168	args
O	45168	45169	)
O	45169	45170	;
O	45171	45176	There
O	45177	45179	is
O	45180	45184	this
O	45185	45191	method
O	45192	45201	available
O	45202	45204	in
O	45205	45208	the
O	45209	45213	same
O	45214	45218	file
O	45218	45219	.

O	45220	45224	This
O	45225	45229	will
O	45230	45234	also
O	45235	45246	recursively
O	45247	45254	deletes
O	45255	45258	all
O	45259	45262	sub
O	45262	45263	-
O	45263	45270	folders
O	45271	45274	and
O	45275	45280	files
O	45281	45286	under
O	45287	45291	them
O	45291	45292	.

B-api_mention	45293	45297	Docs
I-api_mention	45297	45298	:
I-api_mention	45299	45302	org
I-api_mention	45302	45303	.
I-api_mention	45303	45309	apache
I-api_mention	45309	45310	.
I-api_mention	45310	45317	commons
I-api_mention	45317	45318	.
I-api_mention	45318	45320	io
I-api_mention	45320	45321	.
I-api_mention	45321	45330	FileUtils
I-api_mention	45330	45331	.
I-api_mention	45331	45345	cleanDirectory

O	45347	45355	Question
O	45355	45356	-
O	45356	45364	13195797
O	45364	45365	,
O	45366	45372	answer
O	45372	45373	-
O	45373	45381	20043507

O	45382	45387	Peter
O	45388	45394	Lawrey
O	45394	45395	'
O	45395	45396	s
O	45397	45403	answer
O	45404	45406	is
O	45407	45412	great
O	45413	45420	because
O	45421	45423	it
O	45424	45426	is
O	45427	45433	simple
O	45434	45437	and
O	45438	45441	not
O	45442	45451	depending
O	45452	45454	on
O	45455	45463	anything
O	45464	45471	special
O	45471	45472	,
O	45473	45476	and
O	45477	45479	it
O	45479	45480	'
O	45480	45481	s
O	45482	45485	the
O	45486	45489	way
O	45490	45493	you
O	45494	45500	should
O	45501	45503	do
O	45504	45506	it
O	45506	45507	.

O	45508	45510	If
O	45511	45514	you
O	45515	45519	need
O	45520	45529	something
O	45530	45534	that
O	45535	45542	removes
O	45543	45557	subdirectories
O	45558	45561	and
O	45562	45567	their
O	45568	45576	contents
O	45577	45579	as
O	45580	45584	well
O	45584	45585	,
O	45586	45589	use
O	45590	45599	recursion
O	45599	45600	:
O	45601	45602	#
O	45602	45605	pre
O	45606	45608	To
O	45609	45614	spare
O	45615	45629	subdirectories
O	45630	45633	and
O	45634	45639	their
O	45640	45648	contents
O	45649	45650	(
O	45650	45654	part
O	45655	45657	of
O	45658	45662	your
O	45663	45671	question
O	45671	45672	)
O	45672	45673	,
O	45674	45680	modify
O	45681	45683	as
O	45684	45691	follows
O	45691	45692	:
O	45693	45694	#
O	45694	45697	pre
O	45698	45700	Or
O	45700	45701	,
O	45702	45707	since
O	45708	45711	you
O	45712	45718	wanted
O	45719	45720	a
O	45721	45724	one
O	45724	45725	-
O	45725	45729	line
O	45730	45738	solution
O	45738	45739	:
O	45740	45743	for
O	45743	45744	(
O	45744	45748	args
O	45748	45749	)
O	45750	45752	if
O	45752	45753	(
O	45753	45757	args
O	45757	45758	)
O	45759	45763	file
O	45763	45764	.
O	45764	45770	delete
O	45770	45771	(
O	45771	45775	args
O	45775	45776	)
O	45776	45777	;
O	45778	45783	Using
O	45784	45786	an
O	45787	45795	external
O	45796	45803	library
O	45804	45807	for
O	45808	45812	such
O	45813	45814	a
O	45815	45822	trivial
O	45823	45827	task
O	45828	45830	is
O	45831	45834	not
O	45835	45836	a
O	45837	45841	good
O	45842	45846	idea
O	45847	45853	unless
O	45854	45857	you
O	45858	45862	need
O	45863	45867	this
O	45868	45875	library
O	45876	45879	for
O	45880	45889	something
O	45890	45894	else
O	45895	45901	anyway
O	45901	45902	,
O	45903	45905	in
O	45906	45911	which
O	45912	45916	case
O	45917	45919	it
O	45920	45922	is
O	45923	45934	preferrable
O	45935	45937	to
O	45938	45941	use
O	45942	45950	existing
O	45951	45955	code
O	45955	45956	.

O	45957	45960	You
O	45961	45967	appear
O	45968	45970	to
O	45971	45973	be
O	45974	45979	using
O	45980	45983	the
O	45984	45990	Apache
O	45991	45998	library
O	45999	46005	anyway
O	46006	46008	so
O	46009	46012	use
B-api_mention	46013	46016	its
I-api_mention	46017	46026	FileUtils
I-api_mention	46026	46027	.
I-api_mention	46027	46041	cleanDirectory
I-api_mention	46041	46042	(
O	46042	46046	args
O	46046	46047	)
O	46048	46054	method
O	46054	46055	.

O	46057	46065	Question
O	46065	46066	-
O	46066	46074	11821801
O	46074	46075	,
O	46076	46082	answer
O	46082	46083	-
B-api_mention	46083	46091	11821900

B-api_mention	46092	46093	A
I-api_mention	46094	46107	ReentrantLock
O	46108	46110	is
O	46111	46123	unstructured
O	46124	46125	,
B-api_mention	46126	46132	unlike
I-api_mention	46133	46145	synchronized
O	46146	46156	constructs
O	46157	46158	-
O	46158	46159	-
O	46160	46161	i
O	46161	46162	.
O	46162	46163	e
O	46163	46164	.
O	46165	46168	you
O	46169	46172	don
O	46172	46173	'
O	46173	46174	t
O	46175	46179	need
O	46180	46182	to
O	46183	46186	use
O	46187	46188	a
O	46189	46194	block
O	46195	46204	structure
O	46205	46208	for
O	46209	46216	locking
O	46217	46220	and
O	46221	46224	can
O	46225	46229	even
O	46230	46234	hold
O	46235	46236	a
O	46237	46241	lock
O	46242	46248	across
O	46249	46256	methods
O	46256	46257	.

O	46258	46260	An
O	46261	46268	example
O	46268	46269	:
O	46270	46271	#
O	46271	46274	pre
O	46275	46279	Such
O	46280	46284	flow
O	46285	46287	is
O	46288	46298	impossible
O	46299	46301	to
O	46302	46311	represent
O	46312	46315	via
O	46316	46317	a
O	46318	46324	single
O	46325	46332	monitor
B-api_mention	46333	46335	in
I-api_mention	46336	46337	a
I-api_mention	46338	46350	synchronized
O	46351	46360	construct
O	46360	46361	.

O	46362	46367	Aside
O	46368	46372	from
B-api_mention	46373	46377	that
I-api_mention	46377	46378	,
I-api_mention	46379	46392	ReentrantLock
O	46393	46401	supports
O	46402	46406	lock
O	46407	46414	polling
O	46415	46418	and
O	46419	46432	interruptible
O	46433	46437	lock
O	46438	46443	waits
O	46444	46448	that
O	46449	46456	support
O	46457	46461	time
O	46461	46462	-
B-api_mention	46462	46465	out
I-api_mention	46466	46467	.

B-api_mention	46468	46481	ReentrantLock
O	46482	46486	also
O	46487	46490	has
O	46491	46498	support
O	46499	46502	for
O	46503	46515	configurable
O	46516	46524	fairness
O	46525	46531	policy
O	46532	46533	,
O	46534	46542	allowing
O	46543	46547	more
O	46548	46556	flexible
O	46557	46563	thread
O	46564	46574	scheduling
O	46574	46575	.

O	46576	46577	#
B-api_mention	46577	46587	blockquote
I-api_mention	46588	46601	ReentrantLock
O	46602	46605	may
O	46606	46610	also
O	46611	46613	be
O	46614	46618	more
O	46619	46627	scalable
O	46628	46629	,
O	46630	46640	performing
O	46641	46645	much
O	46646	46652	better
O	46653	46658	under
O	46659	46665	higher
O	46666	46676	contention
O	46676	46677	.

O	46678	46681	You
O	46682	46685	can
O	46686	46690	read
O	46691	46695	more
O	46696	46701	about
O	46702	46706	this
O	46707	46711	here
O	46712	46713	.

O	46714	46718	This
O	46719	46724	claim
O	46725	46728	has
O	46729	46733	been
O	46734	46743	contested
O	46743	46744	,
O	46745	46752	however
O	46752	46753	;
O	46754	46757	see
O	46758	46761	the
O	46762	46771	following
O	46772	46779	comment
O	46779	46780	:
O	46781	46782	#
O	46782	46792	blockquote
O	46793	46797	When
O	46798	46804	should
O	46805	46808	you
B-api_mention	46809	46812	use
I-api_mention	46813	46826	ReentrantLock
O	46827	46828	s
O	46828	46829	?

O	46830	46839	According
O	46840	46842	to
O	46843	46847	that
O	46848	46862	developerWorks
O	46863	46870	article
O	46870	46871	.
O	46871	46872	.
O	46872	46873	.

O	46874	46875	#
O	46875	46885	blockquote

O	46887	46895	Question
O	46895	46896	-
O	46896	46904	11821801
O	46904	46905	,
O	46906	46912	answer
O	46912	46913	-
O	46913	46921	36827191

O	46922	46926	From
O	46927	46933	oracle
O	46934	46947	documentation
O	46948	46952	page
O	46953	46958	about
O	46959	46972	ReentrantLock
O	46973	46974	:
O	46975	46976	#
O	46976	46986	blockquote
O	46987	46988	#
B-api_mention	46988	46990	li
I-api_mention	46991	46992	A
I-api_mention	46993	47006	ReentrantLock
O	47007	47009	is
O	47010	47015	owned
O	47016	47018	by
O	47019	47022	the
O	47023	47029	thread
O	47030	47034	last
O	47035	47047	successfully
O	47048	47055	locking
O	47055	47056	,
O	47057	47060	but
O	47061	47064	not
O	47065	47068	yet
O	47069	47078	unlocking
O	47079	47081	it
O	47081	47082	.

O	47083	47084	A
O	47085	47091	thread
O	47092	47100	invoking
O	47101	47105	lock
O	47106	47110	will
O	47111	47117	return
O	47117	47118	,
O	47119	47131	successfully
O	47132	47141	acquiring
O	47142	47145	the
O	47146	47150	lock
O	47150	47151	,
O	47152	47156	when
O	47157	47160	the
O	47161	47165	lock
O	47166	47168	is
O	47169	47172	not
O	47173	47178	owned
O	47179	47181	by
O	47182	47189	another
O	47190	47196	thread
O	47196	47197	.

O	47198	47201	The
O	47202	47208	method
O	47209	47213	will
O	47214	47220	return
O	47221	47232	immediately
O	47233	47235	if
O	47236	47239	the
O	47240	47247	current
O	47248	47254	thread
O	47255	47262	already
O	47263	47267	owns
O	47268	47271	the
O	47272	47276	lock
O	47276	47277	.

O	47278	47279	#
O	47279	47281	li
O	47282	47285	The
O	47286	47297	constructor
O	47298	47301	for
O	47302	47306	this
O	47307	47312	class
O	47313	47320	accepts
O	47321	47323	an
O	47324	47332	optional
O	47333	47341	fairness
O	47342	47351	parameter
O	47351	47352	.

O	47353	47357	When
O	47358	47361	set
O	47362	47366	true
O	47366	47367	,
O	47368	47373	under
O	47374	47384	contention
O	47384	47385	,
O	47386	47391	locks
O	47392	47397	favor
O	47398	47406	granting
O	47407	47413	access
O	47414	47416	to
O	47417	47420	the
O	47421	47428	longest
O	47428	47429	-
O	47429	47436	waiting
O	47437	47443	thread
O	47444	47445	.

O	47446	47455	Otherwise
O	47456	47460	this
O	47461	47465	lock
O	47466	47470	does
O	47471	47474	not
O	47475	47484	guarantee
O	47485	47488	any
O	47489	47499	particular
O	47500	47506	access
B-api_mention	47507	47512	order
I-api_mention	47512	47513	.

B-api_mention	47514	47527	ReentrantLock
O	47528	47531	key
O	47532	47540	features
O	47541	47543	as
O	47544	47547	per
O	47548	47552	this
O	47553	47560	article
O	47561	47562	#
O	47562	47564	li
O	47565	47572	Ability
O	47573	47575	to
O	47576	47580	lock
O	47581	47594	interruptibly
O	47594	47595	.

O	47596	47597	#
O	47597	47599	li
O	47600	47607	Ability
O	47608	47610	to
O	47611	47618	timeout
O	47619	47624	while
O	47625	47632	waiting
O	47633	47636	for
O	47637	47641	lock
O	47641	47642	.

O	47643	47644	#
O	47644	47646	li
O	47647	47652	Power
O	47653	47655	to
O	47656	47662	create
O	47663	47667	fair
O	47668	47672	lock
O	47672	47673	.

O	47674	47675	#
O	47675	47677	li
O	47678	47681	API
O	47682	47684	to
O	47685	47688	get
O	47689	47693	list
O	47694	47696	of
O	47697	47704	waiting
O	47705	47711	thread
O	47712	47715	for
O	47716	47720	lock
O	47720	47721	.

O	47722	47723	#
O	47723	47725	li
O	47726	47737	Flexibility
O	47738	47740	to
O	47741	47744	try
O	47745	47748	for
O	47749	47753	lock
O	47754	47761	without
O	47762	47770	blocking
O	47770	47771	.

O	47772	47775	You
O	47776	47779	can
B-api_mention	47780	47783	use
I-api_mention	47784	47806	ReentrantReadWriteLock
I-api_mention	47806	47807	.
I-api_mention	47807	47815	ReadLock
I-api_mention	47815	47816	,
I-api_mention	47817	47839	ReentrantReadWriteLock
I-api_mention	47839	47840	.
I-api_mention	47840	47849	WriteLock
O	47850	47852	to
O	47853	47860	further
O	47861	47868	acquire
O	47869	47876	control
O	47877	47879	on
O	47880	47888	granular
O	47889	47896	locking
O	47897	47899	on
O	47900	47904	read
O	47905	47908	and
O	47909	47914	write
O	47915	47925	operations
O	47925	47926	.

O	47927	47931	Have
O	47932	47933	a
O	47934	47938	look
O	47939	47941	at
O	47942	47946	this
O	47947	47954	article
O	47955	47957	by
O	47958	47966	Benjamen
O	47967	47969	on
O	47970	47975	usage
O	47976	47978	of
O	47979	47988	different
B-api_mention	47989	47993	type
I-api_mention	47994	47996	of
I-api_mention	47997	48011	ReentrantLocks

O	48013	48021	Question
O	48021	48022	-
O	48022	48030	11359187
O	48030	48031	,
O	48032	48038	answer
O	48038	48039	-
O	48039	48047	11359320

B-api_mention	48048	48049	#
I-api_mention	48049	48051	li
I-api_mention	48052	48056	java
I-api_mention	48056	48057	.
I-api_mention	48057	48061	util
I-api_mention	48061	48062	.
I-api_mention	48062	48069	logging
O	48070	48073	was
O	48074	48084	introduced
O	48085	48087	in
O	48088	48092	Java
O	48093	48094	1
O	48094	48095	.
O	48095	48096	4
O	48096	48097	.

O	48098	48103	There
O	48104	48108	were
O	48109	48113	uses
O	48114	48117	for
O	48118	48125	logging
O	48126	48132	before
O	48133	48137	that
O	48137	48138	,
O	48139	48143	that
O	48143	48144	'
O	48144	48145	s
O	48146	48149	why
O	48150	48154	many
O	48155	48160	other
O	48161	48168	logging
O	48169	48173	APIs
O	48174	48179	exist
O	48179	48180	.

O	48181	48186	Those
O	48187	48191	APIs
O	48192	48197	where
O	48198	48202	used
O	48203	48210	heavily
O	48211	48217	before
O	48218	48222	Java
O	48223	48224	1
O	48224	48225	.
O	48225	48226	4
O	48227	48230	and
O	48231	48235	thus
O	48236	48239	had
O	48240	48241	a
O	48242	48247	great
O	48248	48259	marketshare
O	48260	48264	that
O	48265	48269	didn
O	48269	48270	'
O	48270	48271	t
O	48272	48276	just
O	48277	48281	drop
O	48282	48284	to
O	48285	48286	0
O	48287	48291	when
O	48292	48293	1
O	48293	48294	.
O	48294	48295	4
O	48296	48299	was
O	48300	48307	release
O	48307	48308	.

O	48309	48310	#
O	48310	48312	li
O	48313	48316	JUL
O	48317	48321	didn
O	48321	48322	'
O	48322	48323	t
O	48324	48329	start
O	48330	48333	out
O	48334	48337	all
O	48338	48342	that
O	48343	48348	great
O	48348	48349	,
O	48350	48354	many
O	48355	48357	of
O	48358	48361	the
O	48362	48368	things
O	48369	48372	you
O	48373	48382	mentioned
O	48383	48388	where
O	48389	48390	a
O	48391	48394	lot
O	48395	48400	worse
O	48401	48403	in
O	48404	48405	1
O	48405	48406	.
O	48406	48407	4
O	48408	48411	and
O	48412	48416	only
O	48417	48420	got
O	48421	48427	better
O	48428	48430	in
O	48431	48432	1
O	48432	48433	.
O	48433	48434	5
O	48435	48436	(
O	48436	48439	and
O	48440	48441	I
O	48442	48447	guess
O	48448	48450	in
O	48451	48452	6
O	48453	48455	as
O	48456	48460	well
O	48460	48461	,
O	48462	48465	but
O	48466	48467	I
O	48467	48468	'
O	48468	48469	m
O	48470	48473	not
O	48474	48477	too
O	48478	48482	sure
O	48482	48483	)
O	48483	48484	.

O	48485	48486	#
O	48486	48488	li
O	48489	48492	JUL
O	48493	48496	isn
O	48496	48497	'
O	48497	48498	t
O	48499	48503	well
O	48504	48510	suited
O	48511	48514	for
O	48515	48523	multiple
O	48524	48536	applications
O	48537	48541	with
O	48542	48551	different
O	48552	48566	configurations
O	48567	48569	in
O	48570	48573	the
O	48574	48578	same
O	48579	48582	JVM
O	48583	48584	(
O	48584	48589	think
O	48590	48598	multiple
O	48599	48602	web
O	48603	48615	applications
O	48616	48620	that
O	48621	48627	should
O	48628	48631	not
O	48632	48640	interact
O	48640	48641	)
O	48641	48642	.

O	48643	48649	Tomcat
O	48650	48655	needs
O	48656	48658	to
O	48659	48663	jump
O	48664	48671	through
O	48672	48676	some
O	48677	48682	hoops
O	48683	48685	to
O	48686	48689	get
O	48690	48694	that
O	48695	48702	working
O	48703	48704	(
O	48704	48715	effectively
O	48716	48718	re
O	48718	48719	-
O	48719	48731	implementing
O	48732	48735	JUL
O	48736	48738	if
O	48739	48740	I
O	48741	48751	understood
O	48752	48756	that
O	48757	48766	correctly
O	48766	48767	)
O	48767	48768	.

O	48769	48770	#
O	48770	48772	li
O	48773	48776	You
O	48777	48780	can
O	48780	48781	'
O	48781	48782	t
O	48783	48789	always
O	48790	48799	influence
O	48800	48804	what
O	48805	48812	logging
O	48813	48822	framework
O	48823	48827	your
O	48828	48837	libraries
O	48838	48841	use
O	48841	48842	.

O	48843	48852	Therefore
O	48853	48858	using
O	48859	48864	SLF4J
O	48865	48866	(
O	48866	48871	which
O	48872	48874	is
O	48875	48883	actually
O	48884	48888	just
O	48889	48890	a
O	48891	48895	very
O	48896	48900	thin
O	48901	48904	API
O	48905	48910	layer
O	48911	48916	above
O	48917	48922	other
O	48923	48932	libraries
O	48932	48933	)
O	48934	48939	helps
O	48940	48947	keeping
O	48948	48949	a
O	48950	48958	somewhat
O	48959	48969	consistent
O	48970	48977	picture
O	48978	48980	of
O	48981	48984	the
O	48985	48991	entire
O	48992	48999	logging
O	49000	49005	world
O	49006	49007	(
O	49007	49009	so
O	49010	49013	you
O	49014	49017	can
O	49018	49024	decide
O	49025	49028	the
O	49029	49039	underlying
O	49040	49047	logging
O	49048	49057	framework
O	49058	49063	while
O	49064	49069	still
O	49070	49076	having
O	49077	49084	library
O	49085	49092	logging
O	49093	49095	in
O	49096	49099	the
O	49100	49104	same
O	49105	49111	system
O	49111	49112	)
O	49112	49113	.

O	49114	49115	#
O	49115	49117	li
O	49118	49127	Libraries
O	49128	49131	can
O	49131	49132	'
O	49132	49133	t
O	49134	49140	easily
O	49141	49147	change
O	49147	49148	.

O	49149	49151	If
O	49152	49153	a
O	49154	49162	previous
O	49163	49170	version
O	49171	49173	of
O	49174	49175	a
O	49176	49183	library
O	49184	49188	used
O	49189	49191	to
O	49192	49195	use
O	49196	49203	logging
O	49203	49204	-
O	49204	49211	library
O	49211	49212	-
O	49212	49213	X
O	49214	49216	it
O	49217	49220	can
O	49220	49221	'
O	49221	49222	t
O	49223	49229	easily
O	49230	49236	switch
O	49237	49239	to
O	49240	49247	logging
O	49247	49248	-
O	49248	49255	library
O	49255	49256	-
O	49256	49257	Y
O	49258	49259	(
O	49259	49262	for
O	49263	49270	example
O	49271	49274	JUL
O	49274	49275	)
O	49275	49276	,
O	49277	49281	even
O	49282	49284	if
O	49285	49288	the
O	49289	49295	latter
O	49296	49298	is
O	49299	49306	clearly
O	49307	49316	superious
O	49316	49317	:
O	49318	49321	any
O	49322	49326	user
O	49327	49329	of
O	49330	49334	that
O	49335	49342	library
O	49343	49348	would
O	49349	49353	need
O	49354	49356	to
O	49357	49362	learn
O	49363	49366	the
O	49367	49370	new
O	49371	49378	logging
O	49379	49388	framework
O	49389	49392	and
O	49393	49394	(
O	49394	49396	at
O	49397	49402	least
O	49402	49403	)
O	49404	49415	reconfigure
O	49416	49421	their
O	49422	49429	logging
O	49429	49430	.

O	49431	49435	That
O	49435	49436	'
O	49436	49437	s
O	49438	49439	a
O	49440	49443	big
O	49444	49446	no
O	49446	49447	-
O	49447	49449	no
O	49449	49450	,
O	49451	49461	especially
O	49462	49466	when
O	49467	49469	it
O	49470	49476	brings
O	49477	49479	no
O	49480	49488	apparent
O	49489	49493	gain
O	49494	49496	to
O	49497	49501	most
O	49502	49508	people
O	49508	49509	.

O	49510	49516	Having
O	49517	49521	said
O	49522	49525	all
O	49526	49530	that
O	49531	49532	I
O	49533	49538	think
O	49539	49542	JUL
O	49543	49545	is
O	49546	49548	at
O	49549	49554	least
O	49555	49556	a
O	49557	49562	valid
O	49563	49574	alternative
O	49575	49577	to
O	49578	49583	other
O	49584	49591	logging
O	49592	49602	frameworks
O	49603	49608	these
O	49609	49613	days
O	49613	49614	.

O	49616	49624	Question
O	49624	49625	-
O	49625	49633	12468764
O	49633	49634	,
O	49635	49641	answer
O	49641	49642	-
O	49642	49650	13368831

O	49651	49657	Actual
O	49658	49664	Answer
O	49664	49665	:
O	49666	49669	The
O	49670	49677	default
O	49678	49690	deserializer
O	49691	49694	for
O	49695	49700	enums
B-api_mention	49701	49705	uses
I-api_mention	49706	49707	.
I-api_mention	49707	49711	name
I-api_mention	49711	49712	(
O	49712	49716	args
O	49716	49717	)
O	49718	49720	to
O	49721	49732	deserialize
O	49732	49733	,
O	49734	49736	so
O	49737	49739	it
O	49739	49740	'
O	49740	49741	s
O	49742	49745	not
O	49746	49751	using
O	49752	49755	the
O	49756	49757	@
O	49757	49766	JsonValue
O	49767	49768	.

O	49769	49771	So
O	49772	49774	as
O	49775	49776	@
O	49776	49789	OldCurmudgeon
O	49790	49797	pointed
O	49798	49801	out
O	49801	49802	,
O	49803	49806	you
O	49806	49807	'
O	49807	49808	d
O	49809	49813	need
O	49814	49816	to
O	49817	49821	pass
O	49822	49824	in
O	49825	49826	{
O	49826	49839	StringLiteral
O	49839	49840	:
O	49841	49854	StringLiteral
O	49854	49855	}
O	49856	49858	to
O	49859	49864	match
B-api_mention	49865	49868	the
I-api_mention	49869	49870	.
I-api_mention	49870	49874	name
I-api_mention	49874	49875	(
O	49875	49879	args
O	49879	49880	)
O	49881	49886	value
O	49886	49887	.

O	49888	49890	An
O	49891	49896	other
O	49897	49903	option
O	49904	49905	(
O	49905	49913	assuming
O	49914	49917	you
O	49918	49922	want
O	49923	49926	the
O	49927	49932	write
O	49933	49936	and
O	49937	49941	read
O	49942	49946	json
O	49947	49953	values
O	49954	49956	to
O	49957	49959	be
O	49960	49963	the
O	49964	49968	same
O	49968	49969	)
O	49969	49970	.
O	49970	49971	.
O	49971	49972	.

O	49973	49977	More
O	49978	49982	Info
O	49982	49983	:
O	49984	49989	There
O	49990	49992	is
O	49993	49994	(
O	49994	49997	yet
O	49997	49998	)
O	49999	50006	another
O	50007	50010	way
O	50011	50013	to
O	50014	50020	manage
O	50021	50024	the
O	50025	50038	serialization
O	50039	50042	and
O	50043	50058	deserialization
O	50059	50066	process
O	50067	50071	with
O	50072	50079	Jackson
O	50079	50080	.

O	50081	50084	You
O	50085	50088	can
O	50089	50096	specify
O	50097	50102	these
O	50103	50114	annotations
O	50115	50117	to
O	50118	50121	use
O	50122	50126	your
O	50127	50130	own
O	50131	50137	custom
O	50138	50148	serializer
O	50149	50152	and
O	50153	50165	deserializer
O	50165	50166	:
O	50167	50168	#
O	50168	50171	pre
O	50172	50176	Then
O	50177	50180	you
O	50181	50185	have
O	50186	50188	to
O	50189	50194	write
O	50195	50207	MySerializer
O	50208	50211	and
O	50212	50226	MyDeserializer
O	50227	50232	which
O	50233	50237	look
O	50238	50242	like
O	50243	50247	this
O	50247	50248	:
O	50249	50261	MySerializer
O	50262	50263	#
O	50263	50266	pre
O	50267	50281	MyDeserializer
O	50282	50283	#
O	50283	50286	pre
O	50287	50291	Last
O	50292	50298	little
O	50299	50302	bit
O	50302	50303	,
O	50304	50316	particularly
O	50317	50320	for
O	50321	50326	doing
O	50327	50331	this
O	50332	50334	to
O	50335	50337	an
O	50338	50342	enum
O	50343	50351	JsonEnum
O	50352	50356	that
O	50357	50367	serializes
O	50368	50372	with
O	50373	50376	the
O	50377	50383	method
O	50384	50396	getYourValue
O	50396	50397	(
O	50397	50401	args
O	50401	50402	)
O	50403	50404	,
O	50405	50409	your
O	50410	50420	serializer
O	50421	50424	and
O	50425	50437	deserializer
O	50438	50443	might
O	50444	50448	look
O	50449	50453	like
O	50454	50458	this
O	50458	50459	:
O	50460	50461	#
O	50461	50464	pre

O	50466	50474	Question
O	50474	50475	-
O	50475	50483	12468764
O	50483	50484	,
O	50485	50491	answer
O	50491	50492	-
O	50492	50500	24537575

O	50501	50502	I
O	50502	50503	'
O	50503	50505	ve
O	50506	50511	found
O	50512	50513	a
O	50514	50518	very
O	50519	50523	nice
O	50524	50527	and
O	50528	50535	concise
O	50536	50544	solution
O	50544	50545	,
O	50546	50556	especially
O	50557	50563	useful
O	50564	50568	when
O	50569	50572	you
O	50573	50579	cannot
B-api_mention	50580	50586	modify
O	50587	50591	enum
O	50592	50599	classes
O	50600	50602	as
O	50603	50605	it
O	50606	50609	was
O	50610	50612	in
O	50613	50615	my
O	50616	50620	case
O	50620	50621	.

O	50622	50626	Then
O	50627	50630	you
O	50631	50637	should
O	50638	50645	provide
O	50646	50647	a
B-api_mention	50648	50654	custom
I-api_mention	50655	50667	ObjectMapper
O	50668	50672	with
O	50673	50674	a
O	50675	50682	certain
O	50683	50690	feature
O	50691	50698	enabled
O	50698	50699	.

O	50700	50705	Those
O	50706	50714	features
O	50715	50718	are
O	50719	50728	available
O	50729	50734	since
O	50735	50742	Jackson
O	50743	50744	1
O	50744	50745	.
O	50745	50746	6
O	50746	50747	.

O	50748	50750	So
O	50751	50754	you
O	50755	50759	only
O	50760	50764	need
O	50765	50767	to
B-api_mention	50768	50773	write
I-api_mention	50774	50782	toString
I-api_mention	50782	50783	(
O	50783	50787	args
O	50787	50788	)
O	50789	50795	method
O	50796	50798	in
O	50799	50803	your
O	50804	50808	enum
O	50808	50809	.

O	50810	50811	#
O	50811	50814	pre
O	50815	50820	There
O	50821	50824	are
O	50825	50829	more
O	50830	50834	enum
O	50834	50835	-
O	50835	50842	related
O	50843	50851	features
O	50852	50861	available
O	50861	50862	,
O	50863	50866	see
O	50867	50871	here
O	50871	50872	:
O	50873	50874	#
O	50874	50875	a
O	50876	50877	#
O	50877	50878	a

O	50880	50888	Question
O	50888	50889	-
O	50889	50897	13659217
O	50897	50898	,
O	50899	50905	answer
O	50905	50906	-
O	50906	50914	13659231

O	50915	50918	You
O	50919	50922	can
O	50922	50923	'
O	50923	50924	t
O	50925	50928	see
O	50929	50933	this
O	50934	50940	method
O	50941	50943	in
O	50944	50951	javadoc
O	50952	50959	because
O	50960	50962	it
O	50962	50963	'
O	50963	50964	s
O	50965	50970	added
O	50971	50973	by
O	50974	50977	the
O	50978	50986	compiler
O	50986	50987	.

O	50988	50998	Documented
O	50999	51001	in
O	51002	51007	three
O	51008	51014	places
O	51015	51016	:
O	51017	51018	#
O	51018	51020	li
O	51021	51025	Enum
O	51026	51031	Types
O	51032	51033	,
O	51034	51037	The
O	51038	51042	Java
O	51043	51052	Tutorials
O	51053	51054	#
O	51054	51064	blockquote
B-api_mention	51065	51066	#
I-api_mention	51066	51068	li
I-api_mention	51069	51073	Enum
I-api_mention	51073	51074	.
I-api_mention	51074	51081	valueOf
O	51082	51087	class
O	51088	51089	(
O	51089	51092	The
O	51093	51100	special
B-api_mention	51101	51109	implicit
I-api_mention	51110	51116	values
O	51117	51123	method
O	51124	51126	is
O	51127	51136	mentioned
O	51137	51139	in
B-api_mention	51140	51151	description
I-api_mention	51152	51154	of
I-api_mention	51155	51162	valueOf
O	51163	51169	method
O	51169	51170	)
O	51171	51172	#
O	51172	51182	blockquote
O	51183	51184	#
O	51184	51186	li
O	51187	51191	Enum
O	51192	51197	Types
O	51197	51198	,
O	51199	51206	Section
O	51207	51208	8
O	51208	51209	.
O	51209	51210	9
O	51211	51212	,
O	51213	51217	Java
O	51218	51226	Language
O	51227	51240	Specification
B-api_mention	51241	51244	The
I-api_mention	51245	51251	values
O	51252	51260	function
O	51261	51267	simply
O	51268	51272	list
O	51273	51276	all
O	51277	51283	values
O	51284	51286	of
O	51287	51290	the
O	51291	51302	enumeration
O	51302	51303	.

O	51305	51313	Question
O	51313	51314	-
O	51314	51322	12575990
O	51322	51323	,
O	51324	51330	answer
O	51330	51331	-
O	51331	51339	12576219

O	51340	51341	A
B-api_mention	51342	51346	Java
O	51347	51351	Date
O	51352	51354	is
O	51355	51356	a
O	51357	51366	container
O	51367	51370	for
O	51371	51374	the
O	51375	51381	number
O	51382	51384	of
O	51385	51397	milliseconds
O	51398	51403	since
O	51404	51411	January
O	51412	51413	1
O	51413	51414	,
O	51415	51419	1970
O	51419	51420	,
O	51421	51423	00
O	51423	51424	:
O	51424	51426	00
O	51426	51427	:
O	51427	51429	00
O	51430	51433	GMT
O	51433	51434	.

O	51435	51439	When
O	51440	51443	you
O	51444	51447	use
O	51448	51457	something
B-api_mention	51458	51462	like
I-api_mention	51463	51469	System
I-api_mention	51469	51470	.
I-api_mention	51470	51473	out
I-api_mention	51473	51474	.
I-api_mention	51474	51481	println
I-api_mention	51481	51482	(
O	51482	51486	args
O	51486	51487	)
O	51488	51489	,
O	51490	51494	Java
B-api_mention	51495	51499	uses
I-api_mention	51500	51504	Date
I-api_mention	51504	51505	.
I-api_mention	51505	51513	toString
I-api_mention	51513	51514	(
O	51514	51518	args
O	51518	51519	)
O	51520	51522	to
O	51523	51528	print
O	51529	51532	the
O	51533	51541	contents
O	51541	51542	.

O	51543	51546	The
O	51547	51551	only
O	51552	51555	way
O	51556	51558	to
O	51559	51565	change
O	51566	51568	it
O	51569	51571	is
O	51572	51574	to
O	51575	51583	override
O	51584	51588	Date
O	51589	51592	and
O	51593	51600	provide
O	51601	51605	your
O	51606	51609	own
B-api_mention	51610	51624	implementation
I-api_mention	51625	51627	of
I-api_mention	51628	51632	Date
I-api_mention	51632	51633	.
I-api_mention	51633	51641	toString
I-api_mention	51641	51642	(
O	51642	51646	args
O	51646	51647	)
O	51648	51649	.

O	51650	51653	Now
O	51654	51660	before
O	51661	51664	you
O	51665	51669	fire
O	51670	51672	up
O	51673	51677	your
O	51678	51681	IDE
O	51682	51685	and
O	51686	51689	try
O	51690	51694	this
O	51694	51695	,
O	51696	51697	I
O	51698	51704	wouldn
O	51704	51705	'
O	51705	51706	t
O	51706	51707	;
O	51708	51710	it
O	51711	51715	will
O	51716	51720	only
O	51721	51731	complicate
O	51732	51739	matters
O	51739	51740	.

O	51741	51744	You
O	51745	51748	are
O	51749	51755	better
O	51756	51759	off
O	51760	51770	formatting
O	51771	51774	the
O	51775	51779	date
O	51780	51782	to
O	51783	51786	the
O	51787	51793	format
O	51794	51797	you
O	51798	51802	want
O	51803	51805	to
O	51806	51809	use
O	51810	51811	(
O	51811	51813	or
O	51814	51821	display
O	51821	51822	)
O	51822	51823	.

O	51824	51828	What
O	51829	51832	you
O	51833	51836	can
O	51837	51839	do
O	51839	51840	,
O	51841	51843	is
O	51844	51850	format
O	51851	51854	the
O	51855	51859	date
O	51859	51860	.

O	51861	51862	#
O	51862	51865	pre
O	51866	51871	These
O	51872	51875	are
O	51876	51884	actually
O	51885	51888	the
O	51889	51893	same
O	51894	51898	date
O	51898	51899	,
O	51900	51911	represented
O	51912	51923	differently
O	51923	51924	.
