O	0	8	Question
O	8	9	-
O	9	17	24885223

O	18	19	I
O	20	23	don
O	23	24	'
O	24	25	t
O	26	30	know
O	31	38	whether
O	39	40	I
O	41	43	am
O	44	50	asking
O	51	54	the
O	55	60	right
O	61	69	question
O	69	70	.

O	71	72	I
O	73	76	was
O	77	86	exploring
B-api_mention	87	99	RecyclerView
O	100	103	and
O	104	105	I
O	106	109	was
O	110	119	surprised
O	120	122	to
O	123	126	see
O	127	131	that
B-api_mention	132	144	RecyclerView
O	145	149	does
O	150	153	not
O	154	158	have
B-api_mention	159	178	onItemClickListener
I-api_mention	178	179	(
I-api_mention	179	183	args
I-api_mention	183	184	)
O	185	186	.

O	187	194	Because
B-api_mention	195	207	RecyclerView
O	208	215	extends
O	216	217	#
O	217	227	blockquote
O	228	231	and
B-api_mention	232	240	ListView
O	241	248	extends
O	249	250	#
O	250	260	blockquote
O	261	262	.

O	263	270	However
O	271	272	I
O	273	279	solved
O	280	282	my
O	283	290	problem
O	291	293	by
O	294	301	writing
B-api_mention	302	309	onClick
O	310	312	in
O	313	315	my
B-api_mention	316	328	RecyclerView
I-api_mention	328	329	.
I-api_mention	329	336	Adapter
O	337	338	:
O	339	340	#
O	340	343	pre
O	344	347	But
O	348	353	still
O	354	355	I
O	356	360	want
O	361	363	to
O	364	368	know
O	369	372	why
O	373	379	Google
O	380	387	removed
B-api_mention	388	407	onItemClickListener
I-api_mention	407	408	(
I-api_mention	408	412	args
I-api_mention	412	413	)
O	414	415	?

O	416	418	Is
O	419	424	there
O	425	426	a
O	427	438	performance
O	439	444	issue
O	445	447	or
O	448	457	something
O	458	462	else
O	462	463	?

O	465	473	Question
O	473	474	-
O	474	482	24511052

O	483	484	I
O	485	487	am
O	488	495	looking
O	496	499	for
O	500	501	a
O	502	509	concise
O	510	513	way
O	514	516	to
O	517	524	convert
O	525	527	an
B-api_mention	528	536	Iterator
O	537	539	to
O	540	541	a
B-api_mention	542	548	Stream
O	549	551	or
O	552	556	more
O	557	569	specifically
O	570	572	to
O	573	574	"
O	574	578	view
O	578	579	"
O	580	583	the
O	584	592	iterator
O	593	595	as
O	596	597	a
O	598	604	stream
O	604	605	.

O	606	609	For
O	610	621	performance
O	622	628	reason
O	628	629	,
O	630	631	I
O	632	637	would
O	638	642	like
O	643	645	to
O	646	651	avoid
O	652	653	a
O	654	658	copy
O	659	661	of
O	662	665	the
O	666	674	iterator
O	675	677	in
O	678	679	a
O	680	683	new
O	684	688	list
O	688	689	:
O	690	691	#
O	691	694	pre
O	695	700	Based
O	701	703	on
O	704	707	the
O	708	712	some
O	713	724	suggestions
O	725	727	in
O	728	731	the
O	732	740	comments
O	740	741	,
O	742	743	I
O	744	748	have
O	749	753	also
O	754	759	tried
O	760	762	to
O	763	766	use
B-api_mention	767	773	Stream
I-api_mention	773	774	.
I-api_mention	774	782	generate
O	783	784	:
O	785	786	#
O	786	789	pre
O	790	797	However
O	797	798	,
O	799	800	I
O	801	804	get
O	805	806	a
B-api_mention	807	829	NoSuchElementException
O	830	831	(
O	831	836	since
O	837	842	there
O	843	845	is
O	846	848	no
O	849	859	invocation
O	860	862	of
B-api_mention	863	870	hasNext
O	871	872	)
O	873	874	#
O	874	877	pre
O	878	879	I
O	880	884	have
O	885	891	looked
O	892	894	at
B-api_mention	895	908	StreamSupport
O	909	912	and
B-api_mention	913	924	Collections
O	925	928	but
O	929	930	I
O	931	935	didn
O	935	936	'
O	936	937	t
O	938	942	find
O	943	951	anything
O	951	952	.

O	954	962	Question
O	962	963	-
O	963	971	26684562

O	972	974	In
O	975	979	Java
O	980	981	8
O	981	982	,
O	983	987	what
O	987	988	'
O	988	989	s
O	990	993	the
O	994	1004	difference
O	1005	1012	between
B-api_mention	1013	1019	Stream
I-api_mention	1019	1020	.
I-api_mention	1020	1023	map
O	1024	1027	and
B-api_mention	1028	1034	Stream
I-api_mention	1034	1035	.
I-api_mention	1035	1042	flatMap
O	1043	1050	methods
O	1050	1051	?

O	1053	1061	Question
O	1061	1062	-
O	1062	1070	27504925

O	1071	1074	The
O	1075	1079	Java
O	1080	1088	language
O	1089	1102	specification
O	1103	1112	specifies
O	1113	1117	that
O	1118	1119	#
O	1119	1129	blockquote
O	1130	1132	So
O	1132	1133	,
O	1134	1145	considering
O	1146	1152	arrays
O	1153	1156	are
O	1157	1164	objects
O	1165	1166	â€”
O	1167	1170	why
O	1171	1174	did
O	1175	1178	the
O	1179	1183	Java
O	1184	1193	designers
O	1194	1198	make
O	1199	1202	the
O	1203	1211	decision
O	1212	1215	not
O	1216	1218	to
O	1219	1224	allow
O	1225	1232	inherit
O	1233	1236	and
O	1237	1245	override
O	1246	1250	from
O	1251	1253	it
O	1253	1254	,
O	1255	1258	for
O	1259	1266	example
O	1266	1267	,
B-api_mention	1268	1276	toString
I-api_mention	1276	1277	(
I-api_mention	1277	1278	)
O	1279	1281	or
B-api_mention	1282	1288	equals
I-api_mention	1288	1289	(
I-api_mention	1289	1293	args
I-api_mention	1293	1294	)
O	1295	1296	?

O	1297	1300	The
O	1301	1308	current
O	1309	1315	syntax
O	1316	1322	wouldn
O	1322	1323	'
O	1323	1324	t
O	1325	1330	allow
O	1331	1339	creating
O	1340	1349	anonymous
O	1350	1357	classes
O	1358	1362	with
O	1363	1365	an
O	1366	1371	array
O	1372	1374	as
O	1375	1378	the
O	1379	1383	base
O	1384	1389	class
O	1389	1390	,
O	1391	1394	but
O	1395	1396	I
O	1397	1400	don
O	1400	1401	'
O	1401	1402	t
O	1403	1408	think
O	1409	1413	that
O	1414	1417	was
O	1418	1421	the
O	1422	1428	reason
O	1429	1432	for
O	1433	1438	their
O	1439	1447	decision
O	1447	1448	.

O	1450	1458	Question
O	1458	1459	-
O	1459	1467	27683759

O	1468	1469	I
O	1470	1474	just
O	1475	1482	studied
O	1483	1488	about
O	1489	1496	generic
O	1497	1508	programming
O	1508	1509	,
O	1510	1513	the
B-api_mention	1514	1518	List
I-api_mention	1518	1519	<
I-api_mention	1519	1520	T
I-api_mention	1520	1521	>
O	1522	1531	interface
O	1531	1532	,
O	1533	1536	and
B-api_mention	1537	1546	ArrayList
O	1547	1548	,
O	1549	1551	so
O	1552	1553	I
O	1554	1557	can
O	1558	1568	understand
O	1569	1572	the
O	1573	1582	statement
O	1583	1588	below
O	1588	1589	.

B-api_mention	1590	1599	ArrayList
I-api_mention	1599	1600	<
I-api_mention	1600	1601	T
I-api_mention	1601	1602	>
O	1603	1607	list
O	1608	1609	=
O	1610	1613	new
B-api_mention	1614	1623	ArrayList
I-api_mention	1623	1624	<
I-api_mention	1624	1625	T
I-api_mention	1625	1626	>
I-api_mention	1626	1627	(
I-api_mention	1627	1631	args
I-api_mention	1631	1632	)
O	1632	1633	;
O	1634	1637	But
O	1638	1639	I
O	1640	1643	don
O	1643	1644	'
O	1644	1645	t
O	1646	1656	understand
O	1657	1660	the
O	1661	1665	next
O	1666	1675	statement
O	1676	1681	which
O	1682	1683	I
O	1684	1687	saw
O	1688	1693	while
O	1694	1701	surfing
O	1702	1705	the
O	1706	1709	web
O	1709	1710	.

B-api_mention	1711	1715	List
I-api_mention	1715	1716	<
I-api_mention	1716	1717	T
I-api_mention	1717	1718	>
O	1719	1724	list2
O	1725	1726	=
B-api_mention	1727	1738	Collections
I-api_mention	1738	1739	.
I-api_mention	1739	1740	<
I-api_mention	1740	1746	String
I-api_mention	1746	1747	>
I-api_mention	1747	1756	emptyList
I-api_mention	1756	1757	(
I-api_mention	1757	1761	args
I-api_mention	1761	1762	)
O	1762	1763	;
O	1764	1765	#
O	1765	1767	li
O	1768	1772	What
O	1773	1775	is
B-api_mention	1776	1787	Collections
O	1788	1789	?

O	1790	1793	Why
O	1794	1797	isn
O	1797	1798	'
O	1798	1799	t
O	1800	1802	it
B-api_mention	1803	1814	Collections
I-api_mention	1814	1815	<
I-api_mention	1815	1816	T
I-api_mention	1816	1817	>
O	1818	1820	or
B-api_mention	1821	1832	Collections
I-api_mention	1832	1833	<
I-api_mention	1833	1834	T
I-api_mention	1834	1835	>
O	1836	1837	?

O	1838	1839	#
O	1839	1841	li
O	1842	1845	Why
O	1846	1848	is
O	1849	1850	<
O	1850	1856	String
O	1856	1857	>
O	1858	1864	placed
O	1865	1871	before
O	1872	1875	the
O	1876	1882	method
O	1883	1887	name
B-api_mention	1888	1897	emptyList
O	1898	1899	?

O	1900	1901	(
O	1901	1904	Isn
O	1904	1905	'
O	1905	1906	t
B-api_mention	1907	1916	emptyList
I-api_mention	1916	1917	<
I-api_mention	1917	1918	T
I-api_mention	1918	1919	>
I-api_mention	1919	1920	(
I-api_mention	1920	1924	args
I-api_mention	1924	1925	)
O	1926	1933	correct
O	1934	1937	for
O	1938	1945	Generic
O	1945	1946	?
O	1946	1947	)
O	1948	1949	#
O	1949	1951	li
O	1952	1956	What
O	1957	1961	does
O	1962	1965	the
O	1966	1975	statement
O	1976	1980	mean
O	1980	1981	?

O	1983	1991	Question
O	1991	1992	-
O	1992	2000	25168062

O	2001	2004	Why
O	2005	2007	is
O	2008	2009	i
O	2009	2010	+
O	2010	2011	+
O	2012	2015	not
O	2016	2022	atomic
O	2023	2025	in
O	2026	2030	Java
O	2030	2031	?

O	2032	2034	To
O	2035	2038	get
O	2039	2040	a
O	2041	2044	bit
O	2045	2051	deeper
O	2052	2054	in
O	2055	2059	Java
O	2060	2061	I
O	2062	2067	tried
O	2068	2070	to
O	2071	2076	count
O	2077	2080	how
O	2081	2086	often
O	2087	2090	the
O	2091	2095	loop
O	2096	2098	in
O	2099	2106	threads
O	2107	2110	are
O	2111	2119	executed
O	2119	2120	.

O	2121	2123	So
O	2124	2125	I
O	2126	2130	used
O	2131	2132	a
O	2133	2140	private
O	2141	2147	static
O	2148	2151	int
O	2152	2157	total
O	2158	2159	=
O	2160	2161	0
O	2161	2162	;
O	2163	2165	in
O	2166	2169	the
O	2170	2174	main
O	2175	2180	class
O	2180	2181	.

O	2182	2183	I
O	2184	2188	have
O	2189	2192	two
O	2193	2200	threads
O	2200	2201	.

O	2202	2203	#
O	2203	2205	li
O	2206	2212	Thread
O	2213	2214	1
O	2214	2215	:
O	2216	2222	Prints
B-api_mention	2223	2229	System
I-api_mention	2229	2230	.
I-api_mention	2230	2233	out
I-api_mention	2233	2234	.
I-api_mention	2234	2241	println
I-api_mention	2241	2242	(
I-api_mention	2242	2246	args
I-api_mention	2246	2247	)
O	2247	2248	;
O	2249	2250	#
O	2250	2252	li
O	2253	2259	Thread
O	2260	2261	2
O	2261	2262	:
O	2263	2269	Prints
B-api_mention	2270	2276	System
I-api_mention	2276	2277	.
I-api_mention	2277	2280	out
I-api_mention	2280	2281	.
I-api_mention	2281	2288	println
I-api_mention	2288	2289	(
I-api_mention	2289	2293	args
I-api_mention	2293	2294	)
O	2294	2295	;
O	2296	2299	And
O	2300	2301	I
O	2302	2307	count
O	2308	2311	the
O	2312	2317	lines
O	2318	2325	printed
O	2326	2328	by
O	2329	2335	thread
O	2336	2337	1
O	2338	2341	and
O	2342	2348	thread
O	2349	2350	2
O	2350	2351	.

O	2352	2355	But
O	2356	2359	the
O	2360	2365	lines
O	2366	2368	of
O	2369	2375	thread
O	2376	2377	1
O	2378	2379	+
O	2380	2385	lines
O	2386	2388	of
O	2389	2395	thread
O	2396	2397	2
O	2398	2401	don
O	2401	2402	'
O	2402	2403	t
O	2404	2409	match
O	2410	2413	the
O	2414	2419	total
O	2420	2426	number
O	2427	2429	of
O	2430	2435	lines
O	2436	2443	printed
O	2444	2447	out
O	2447	2448	.

O	2449	2453	Here
O	2454	2456	is
O	2457	2459	my
O	2460	2464	code
O	2464	2465	:
O	2466	2467	#
O	2467	2470	pre

O	2472	2480	Question
O	2480	2481	-
O	2481	2489	25850328

O	2490	2491	I
O	2492	2495	was
O	2496	2501	being
O	2502	2508	taught
O	2509	2513	that
B-api_mention	2514	2520	Marker
O	2521	2530	interface
O	2531	2533	in
O	2534	2538	Java
O	2539	2541	is
O	2542	2544	an
O	2545	2550	empty
O	2551	2560	interface
O	2561	2564	and
O	2565	2567	is
O	2568	2572	used
O	2573	2575	to
O	2576	2582	signal
O	2583	2585	to
O	2586	2594	compiler
O	2595	2597	or
O	2598	2601	JVM
O	2602	2606	that
O	2607	2610	the
O	2611	2618	objects
O	2619	2621	of
O	2622	2625	the
O	2626	2631	class
O	2632	2644	implementing
O	2645	2649	this
O	2650	2659	interface
O	2660	2664	must
O	2665	2667	be
O	2668	2675	treated
O	2676	2678	in
O	2679	2680	a
O	2681	2688	special
O	2689	2692	way
O	2692	2693	,
O	2694	2698	like
O	2699	2710	serializing
O	2710	2711	,
O	2712	2719	cloning
O	2719	2720	,
O	2721	2724	etc
O	2724	2725	.

O	2726	2729	But
O	2730	2736	lately
O	2737	2738	I
O	2739	2743	have
O	2744	2751	learned
O	2752	2756	that
O	2757	2759	it
O	2760	2768	actually
O	2769	2772	has
O	2773	2780	nothing
O	2781	2783	to
O	2784	2786	do
O	2787	2791	with
O	2792	2795	the
O	2796	2804	compiler
O	2805	2807	or
O	2808	2811	the
O	2812	2815	JVM
O	2815	2816	.

O	2817	2820	For
O	2821	2828	example
O	2828	2829	,
O	2830	2832	in
O	2833	2837	case
O	2838	2840	of
B-api_mention	2841	2853	Serializable
O	2854	2863	interface
O	2864	2867	the
O	2868	2874	method
B-api_mention	2875	2886	writeObject
I-api_mention	2886	2887	(
I-api_mention	2887	2891	args
I-api_mention	2891	2892	)
O	2893	2895	of
B-api_mention	2896	2914	ObjectOutputStream
O	2915	2919	does
O	2920	2929	something
O	2930	2934	like
B-api_mention	2935	2945	instanceOf
I-api_mention	2946	2958	Serializable
O	2959	2961	to
O	2962	2968	detect
O	2969	2976	whether
O	2977	2980	the
O	2981	2986	class
O	2987	2997	implements
B-api_mention	2998	3010	Serializable
O	3011	3012	&
O	3013	3019	throws
B-api_mention	3020	3044	NotSerializableException
O	3045	3056	accordingly
O	3056	3057	.

O	3058	3068	Everything
O	3069	3071	is
O	3072	3079	handled
O	3080	3082	in
O	3083	3086	the
O	3087	3091	code
O	3092	3095	and
O	3096	3100	this
O	3101	3106	seems
O	3107	3109	to
O	3110	3112	be
O	3113	3114	a
O	3115	3121	design
O	3121	3122	-
O	3122	3129	pattern
O	3130	3132	so
O	3133	3134	I
O	3135	3140	think
O	3141	3143	we
O	3144	3147	can
O	3148	3154	define
O	3155	3158	our
O	3159	3162	own
O	3163	3169	marker
O	3170	3180	interfaces
O	3180	3181	.

O	3182	3185	Now
O	3186	3188	my
O	3189	3195	doubts
O	3195	3196	:
O	3197	3198	#
O	3198	3200	li
O	3201	3203	Is
O	3204	3207	the
O	3208	3218	definition
O	3219	3221	of
O	3222	3223	a
O	3224	3230	marker
O	3231	3240	interface
O	3241	3250	mentioned
O	3251	3256	above
O	3257	3259	in
O	3260	3263	1st
O	3264	3269	point
O	3270	3275	wrong
O	3275	3276	?

O	3277	3280	How
O	3281	3284	can
O	3285	3287	we
O	3288	3294	define
O	3295	3296	a
B-api_mention	3297	3303	Marker
O	3304	3313	interface
O	3314	3318	then
O	3318	3319	?

O	3320	3321	#
O	3321	3323	li
O	3324	3327	And
O	3328	3335	instead
O	3336	3338	of
O	3339	3344	using
O	3345	3348	the
B-api_mention	3349	3359	instanceOf
O	3360	3368	operator
O	3369	3372	why
O	3373	3376	can
O	3376	3377	'
O	3377	3378	t
O	3379	3382	the
O	3383	3389	method
O	3390	3392	be
O	3393	3402	something
O	3403	3407	like
B-api_mention	3408	3419	writeObject
I-api_mention	3419	3420	(
I-api_mention	3420	3424	args
I-api_mention	3424	3425	)
O	3426	3428	so
O	3429	3433	that
O	3434	3439	there
O	3440	3442	is
O	3443	3444	a
O	3445	3452	compile
O	3452	3453	-
O	3453	3457	time
O	3458	3462	type
O	3463	3471	checking
O	3472	3478	rather
O	3479	3483	than
O	3484	3491	runtime
O	3491	3492	?

O	3493	3494	#
O	3494	3496	li
O	3497	3500	How
O	3501	3504	are
B-api_mention	3505	3516	Annotations
O	3517	3523	better
O	3524	3528	than
B-api_mention	3529	3535	Marker
O	3536	3546	Interfaces
O	3546	3547	?

O	3549	3557	Question
O	3557	3558	-
O	3558	3566	24630963

O	3567	3570	The
O	3571	3575	Java
O	3576	3577	8
B-api_mention	3578	3588	Collectors
I-api_mention	3588	3589	.
I-api_mention	3589	3594	toMap
O	3595	3601	throws
O	3602	3603	a
B-api_mention	3604	3624	NullPointerException
O	3625	3627	if
O	3628	3631	one
O	3632	3634	of
O	3635	3638	the
O	3639	3645	values
O	3646	3648	is
O	3649	3650	'
O	3650	3654	null
O	3654	3655	'
O	3655	3656	.

O	3657	3658	I
O	3659	3662	don
O	3662	3663	'
O	3663	3664	t
O	3665	3675	understand
O	3676	3680	this
O	3681	3690	behaviour
O	3690	3691	,
O	3692	3696	maps
O	3697	3700	can
O	3701	3708	contain
O	3709	3713	null
O	3714	3722	pointers
O	3723	3725	as
O	3726	3731	value
O	3732	3739	without
O	3740	3743	any
O	3744	3752	problems
O	3752	3753	.

O	3754	3756	Is
O	3757	3762	there
O	3763	3764	a
O	3765	3769	good
O	3770	3776	reason
O	3777	3780	why
O	3781	3787	values
O	3788	3794	cannot
O	3795	3797	be
O	3798	3802	null
O	3803	3806	for
B-api_mention	3807	3817	Collectors
I-api_mention	3817	3818	.
I-api_mention	3818	3823	toMap
O	3824	3825	?

O	3826	3830	Also
O	3830	3831	,
O	3832	3834	is
O	3835	3840	there
O	3841	3842	a
O	3843	3847	nice
O	3848	3852	Java
O	3853	3854	8
O	3855	3858	way
O	3859	3861	of
O	3862	3868	fixing
O	3869	3873	this
O	3873	3874	,
O	3875	3877	or
O	3878	3884	should
O	3885	3886	I
O	3887	3893	revert
O	3894	3896	to
O	3897	3902	plain
O	3903	3906	old
O	3907	3910	for
O	3911	3915	loop
O	3915	3916	?

O	3917	3919	An
O	3920	3927	example
O	3928	3930	of
O	3931	3933	my
O	3934	3941	problem
O	3941	3942	:
O	3943	3944	#
O	3944	3947	pre
O	3948	3958	Stacktrace
O	3958	3959	:
O	3960	3961	#
O	3961	3964	pre

O	3966	3974	Question
O	3974	3975	-
O	3975	3983	27482579

O	3984	3987	How
O	3988	3990	is
O	3991	3994	the
O	3995	4003	compiler
O	4004	4007	not
O	4008	4019	complaining
O	4020	4024	when
O	4025	4026	I
O	4027	4032	write
O	4033	4036	the
O	4037	4046	following
O	4047	4051	code
O	4051	4052	?

O	4053	4054	#
O	4054	4057	pre
O	4058	4062	Even
O	4063	4069	though
O	4070	4072	it
O	4073	4075	is
O	4076	4078	an
O	4079	4087	instance
O	4088	4090	of
O	4091	4094	the
O	4095	4099	same
O	4100	4105	class
O	4106	4108	in
O	4109	4114	which
O	4115	4126	testPrivate
O	4127	4129	is
O	4130	4137	written
O	4137	4138	,
O	4139	4146	shouldn
O	4146	4147	'
O	4147	4148	t
O	4149	4151	it
O	4152	4156	give
O	4157	4158	a
O	4159	4170	compilation
O	4171	4176	error
O	4177	4179	at
B-api_mention	4180	4186	System
I-api_mention	4186	4187	.
I-api_mention	4187	4190	out
I-api_mention	4190	4191	.
I-api_mention	4191	4198	println
I-api_mention	4198	4199	(
I-api_mention	4199	4203	args
I-api_mention	4203	4204	)
O	4205	4206	?

O	4207	4212	After
O	4213	4216	all
O	4216	4217	,
O	4218	4219	I
O	4220	4222	am
O	4223	4229	trying
O	4230	4232	to
O	4233	4239	access
O	4240	4241	a
O	4242	4249	private
O	4250	4258	variable
O	4259	4267	directly
O	4267	4268	.

O	4269	4272	The
O	4273	4277	code
O	4278	4282	even
O	4283	4287	runs
O	4288	4292	fine
O	4292	4293	.

O	4295	4303	Question
O	4303	4304	-
O	4304	4312	26549659

O	4313	4319	Google
B-api_mention	4320	4325	Guava
O	4326	4329	has
O	4330	4331	a
O	4332	4341	predicate
O	4342	4346	that
O	4347	4353	always
O	4354	4361	returns
O	4362	4366	true
O	4367	4368	.

O	4369	4373	Does
O	4374	4378	Java
O	4379	4380	8
O	4381	4385	have
O	4386	4395	something
O	4396	4403	similar
O	4404	4407	for
O	4408	4411	its
B-api_mention	4412	4421	Predicate
O	4422	4423	?

O	4424	4425	I
O	4426	4430	know
O	4431	4432	I
O	4433	4438	could
O	4439	4442	use
O	4443	4444	(
O	4444	4447	foo
O	4447	4448	)
O	4448	4449	-
O	4449	4450	>
O	4450	4451	{
O	4451	4457	return
O	4458	4462	true
O	4462	4463	;
O	4463	4464	}
O	4465	4466	,
O	4467	4470	but
O	4471	4472	I
O	4473	4477	want
O	4478	4487	something
O	4488	4491	pre
O	4491	4492	-
O	4492	4496	made
O	4496	4497	,
O	4498	4507	analogous
O	4508	4510	to
B-api_mention	4511	4522	Collections
I-api_mention	4522	4523	.
I-api_mention	4523	4531	emptySet
I-api_mention	4531	4532	(
I-api_mention	4532	4536	args
I-api_mention	4536	4537	)
O	4538	4539	.

O	4541	4549	Question
O	4549	4550	-
O	4550	4558	26318569

O	4559	4560	I
O	4561	4563	am
O	4564	4571	getting
O	4572	4581	following
O	4582	4591	exception
O	4592	4597	while
O	4598	4605	running
O	4606	4609	the
O	4610	4615	tests
O	4615	4616	.

O	4617	4618	I
O	4619	4621	am
O	4622	4627	using
B-api_mention	4628	4635	Mockito
O	4636	4639	for
O	4640	4647	mocking
O	4647	4648	.

O	4649	4652	The
O	4653	4658	hints
O	4659	4668	mentioned
O	4669	4671	by
B-api_mention	4672	4679	Mockito
O	4680	4687	library
O	4688	4691	are
O	4692	4695	not
O	4696	4703	helping
O	4703	4704	.

O	4705	4706	#
O	4706	4709	pre
O	4710	4714	Test
O	4715	4719	Code
O	4720	4724	from
O	4725	4742	DomainTestFactory
O	4742	4743	.

O	4744	4748	When
O	4749	4750	I
O	4751	4754	run
O	4755	4758	the
O	4759	4768	following
O	4769	4773	test
O	4773	4774	,
O	4775	4776	I
O	4777	4780	see
O	4781	4784	the
O	4785	4794	exception
O	4795	4796	#
O	4796	4799	pre

O	4801	4809	Question
O	4809	4810	-
O	4810	4818	24603186

O	4819	4821	In
O	4822	4826	Java
O	4827	4828	8
O	4828	4829	,
O	4830	4833	the
B-api_mention	4834	4844	Collection
O	4845	4854	interface
O	4855	4858	was
O	4859	4867	extended
O	4868	4872	with
O	4873	4876	two
O	4877	4884	methods
O	4885	4889	that
O	4890	4896	return
B-api_mention	4897	4903	Stream
I-api_mention	4903	4904	<
I-api_mention	4904	4905	T
I-api_mention	4905	4906	>
O	4907	4908	:
B-api_mention	4909	4915	stream
I-api_mention	4915	4916	(
I-api_mention	4916	4920	args
I-api_mention	4920	4921	)
O	4922	4923	,
O	4924	4929	which
O	4930	4937	returns
O	4938	4939	a
O	4940	4950	sequential
O	4951	4957	stream
O	4957	4958	,
O	4959	4962	and
B-api_mention	4963	4977	parallelStream
I-api_mention	4977	4978	(
I-api_mention	4978	4982	args
I-api_mention	4982	4983	)
O	4984	4985	,
O	4986	4991	which
O	4992	4999	returns
O	5000	5001	a
O	5002	5010	possibly
O	5010	5011	-
O	5011	5019	parallel
O	5020	5026	stream
O	5026	5027	.

B-api_mention	5028	5034	Stream
O	5035	5041	itself
O	5042	5046	also
O	5047	5050	has
O	5051	5052	a
B-api_mention	5053	5061	parallel
I-api_mention	5061	5062	(
I-api_mention	5062	5066	args
I-api_mention	5066	5067	)
O	5068	5074	method
O	5075	5079	that
O	5080	5087	returns
O	5088	5090	an
O	5091	5101	equivalent
O	5102	5110	parallel
O	5111	5117	stream
O	5118	5119	(
O	5119	5125	either
O	5126	5134	mutating
O	5135	5138	the
O	5139	5146	current
O	5147	5153	stream
O	5154	5156	to
O	5157	5159	be
O	5160	5168	parallel
O	5169	5171	or
O	5172	5180	creating
O	5181	5182	a
O	5183	5186	new
O	5187	5193	stream
O	5193	5194	)
O	5194	5195	.

O	5196	5199	The
O	5200	5211	duplication
O	5212	5215	has
O	5216	5223	obvious
O	5224	5237	disadvantages
O	5237	5238	:
O	5239	5240	#
O	5240	5242	li
O	5243	5245	It
O	5245	5246	'
O	5246	5247	s
O	5248	5257	confusing
O	5257	5258	.

O	5259	5260	A
O	5261	5269	question
O	5270	5274	asks
O	5275	5282	whether
O	5283	5290	calling
O	5291	5295	both
B-api_mention	5296	5310	parallelStream
I-api_mention	5310	5311	(
I-api_mention	5311	5312	)
I-api_mention	5312	5313	.
I-api_mention	5313	5321	parallel
I-api_mention	5321	5322	(
I-api_mention	5322	5323	)
O	5324	5326	is
O	5327	5336	necessary
O	5337	5339	to
O	5340	5342	be
O	5343	5347	sure
O	5348	5351	the
O	5352	5358	stream
O	5359	5361	is
O	5362	5370	parallel
O	5371	5372	,
O	5373	5378	given
O	5379	5383	that
B-api_mention	5384	5398	parallelStream
I-api_mention	5398	5399	(
I-api_mention	5399	5400	)
O	5401	5404	may
O	5405	5411	return
O	5412	5413	a
O	5414	5424	sequential
O	5425	5431	stream
O	5431	5432	.

O	5433	5436	Why
O	5437	5441	does
B-api_mention	5442	5456	parallelStream
I-api_mention	5456	5457	(
I-api_mention	5457	5458	)
O	5459	5464	exist
O	5465	5467	if
O	5468	5470	it
O	5471	5474	can
O	5474	5475	'
O	5475	5476	t
O	5477	5481	make
O	5482	5483	a
O	5484	5493	guarantee
O	5493	5494	?

O	5495	5498	The
O	5499	5504	other
O	5505	5508	way
O	5509	5515	around
O	5516	5518	is
O	5519	5523	also
O	5524	5533	confusing
O	5534	5535	-
O	5535	5536	-
O	5537	5539	if
B-api_mention	5540	5554	parallelStream
I-api_mention	5554	5555	(
I-api_mention	5555	5556	)
O	5557	5564	returns
O	5565	5566	a
O	5567	5577	sequential
O	5578	5584	stream
O	5584	5585	,
O	5586	5591	there
O	5591	5592	'
O	5592	5593	s
O	5594	5602	probably
O	5603	5604	a
O	5605	5611	reason
O	5612	5613	(
O	5613	5614	e
O	5614	5615	.
O	5615	5616	g
O	5616	5617	.
O	5617	5618	,
O	5619	5621	an
O	5622	5632	inherently
O	5633	5643	sequential
O	5644	5648	data
O	5649	5658	structure
O	5659	5662	for
O	5663	5668	which
O	5669	5677	parallel
O	5678	5685	streams
O	5686	5689	are
O	5690	5691	a
O	5692	5703	performance
O	5704	5708	trap
O	5708	5709	)
O	5709	5710	;
O	5711	5715	what
O	5716	5722	should
B-api_mention	5723	5729	Stream
I-api_mention	5729	5730	.
I-api_mention	5730	5738	parallel
I-api_mention	5738	5739	(
I-api_mention	5739	5740	)
O	5741	5743	do
O	5744	5747	for
O	5748	5752	such
O	5753	5754	a
O	5755	5761	stream
O	5761	5762	?

O	5763	5764	(
B-api_mention	5764	5793	UnsupportedOperationException
O	5794	5796	is
O	5797	5800	not
O	5801	5808	allowed
O	5809	5811	by
B-api_mention	5812	5820	parallel
I-api_mention	5820	5821	(
I-api_mention	5821	5822	)
O	5822	5823	'
O	5823	5824	s
O	5825	5838	specification
O	5838	5839	.
O	5839	5840	)
O	5841	5842	#
O	5842	5844	li
O	5845	5851	Adding
O	5852	5859	methods
O	5860	5862	to
O	5863	5865	an
O	5866	5875	interface
O	5876	5881	risks
O	5882	5891	conflicts
O	5892	5894	if
O	5895	5897	an
O	5898	5906	existing
O	5907	5921	implementation
O	5922	5925	has
O	5926	5927	a
O	5928	5937	similarly
O	5937	5938	-
O	5938	5943	named
O	5944	5950	method
O	5951	5955	with
O	5956	5958	an
O	5959	5971	incompatible
O	5972	5978	return
O	5979	5983	type
O	5983	5984	.

O	5985	5991	Adding
B-api_mention	5992	6006	parallelStream
I-api_mention	6006	6007	(
I-api_mention	6007	6008	)
O	6009	6011	in
O	6012	6020	addition
O	6021	6023	to
B-api_mention	6024	6030	stream
I-api_mention	6030	6031	(
I-api_mention	6031	6032	)
O	6033	6040	doubles
O	6041	6044	the
O	6045	6049	risk
O	6050	6053	for
O	6054	6060	little
O	6061	6065	gain
O	6065	6066	.

O	6067	6068	(
O	6068	6072	Note
O	6073	6077	that
B-api_mention	6078	6092	parallelStream
I-api_mention	6092	6093	(
I-api_mention	6093	6094	)
O	6095	6098	was
O	6099	6101	at
O	6102	6105	one
O	6106	6111	point
O	6112	6116	just
O	6117	6122	named
B-api_mention	6123	6131	parallel
I-api_mention	6131	6132	(
I-api_mention	6132	6133	)
O	6133	6134	,
O	6135	6141	though
O	6142	6143	I
O	6144	6147	don
O	6147	6148	'
O	6148	6149	t
O	6150	6154	know
O	6155	6157	if
O	6158	6160	it
O	6161	6164	was
O	6165	6172	renamed
O	6173	6175	to
O	6176	6181	avoid
O	6182	6186	name
O	6187	6194	clashes
O	6195	6197	or
O	6198	6201	for
O	6202	6209	another
O	6210	6216	reason
O	6216	6217	.
O	6217	6218	)
O	6219	6222	Why
O	6223	6227	does
B-api_mention	6228	6238	Collection
I-api_mention	6238	6239	.
I-api_mention	6239	6253	parallelStream
I-api_mention	6253	6254	(
I-api_mention	6254	6255	)
O	6256	6261	exist
O	6262	6266	when
O	6267	6274	calling
B-api_mention	6275	6285	Collection
I-api_mention	6285	6286	.
I-api_mention	6286	6292	stream
I-api_mention	6292	6293	(
I-api_mention	6293	6294	)
I-api_mention	6294	6295	.
I-api_mention	6295	6303	parallel
I-api_mention	6303	6304	(
I-api_mention	6304	6305	)
O	6306	6310	does
O	6311	6314	the
O	6315	6319	same
O	6320	6325	thing
O	6325	6326	?

O	6328	6336	Question
O	6336	6337	-
O	6337	6345	24649842

O	6346	6350	What
O	6350	6351	'
O	6351	6352	s
O	6353	6356	the
O	6357	6361	main
O	6362	6372	difference
O	6373	6380	between
B-api_mention	6381	6400	scheduleAtFixedRate
O	6401	6404	and
B-api_mention	6405	6427	scheduleWithFixedDelay
O	6428	6435	methods
O	6436	6438	of
B-api_mention	6439	6463	ScheduledExecutorService
O	6464	6465	?

O	6466	6467	#
O	6467	6470	pre
O	6471	6475	they
O	6476	6481	print
O	6482	6487	exact
O	6488	6491	the
O	6492	6496	same
O	6497	6501	time
O	6501	6502	,
O	6503	6508	seems
O	6509	6513	they
O	6514	6517	are
O	6518	6526	executed
O	6527	6529	at
O	6530	6535	exact
O	6536	6539	the
O	6540	6544	same
O	6545	6553	interval
O	6553	6554	.

O	6556	6564	Question
O	6564	6565	-
O	6565	6573	24885223
O	6573	6574	,
O	6575	6581	answer
O	6581	6582	-
O	6582	6590	29841832

O	6591	6597	Thanks
O	6598	6600	to
O	6601	6602	@
O	6602	6608	marmor
O	6608	6609	,
O	6610	6611	I
O	6612	6619	updated
O	6620	6622	my
O	6623	6629	answer
O	6629	6630	.

O	6631	6632	I
O	6633	6638	think
O	6639	6641	it
O	6641	6642	'
O	6642	6643	s
O	6644	6645	a
O	6646	6650	good
O	6651	6659	solution
O	6660	6662	to
O	6663	6669	handle
O	6670	6673	the
B-api_mention	6674	6681	onClick
I-api_mention	6681	6682	(
I-api_mention	6682	6683	)
O	6684	6686	in
O	6687	6690	the
B-api_mention	6691	6701	ViewHolder
O	6702	6707	class
O	6708	6719	constructor
O	6720	6723	and
O	6724	6728	pass
O	6729	6731	it
O	6732	6734	to
O	6735	6738	the
O	6739	6745	parent
O	6746	6751	class
O	6752	6755	via
B-api_mention	6756	6775	OnItemClickListener
O	6776	6785	interface
O	6785	6786	.

O	6787	6796	MyAdapter
O	6796	6797	.
O	6797	6801	java
O	6802	6803	#
O	6803	6806	pre
O	6807	6812	Usage
O	6813	6815	of
O	6816	6823	adapter
O	6824	6826	in
O	6827	6832	other
O	6833	6840	classes
O	6840	6841	:
O	6842	6852	MyFragment
O	6852	6853	.
O	6853	6857	java
O	6858	6859	#
O	6859	6862	pre

O	6864	6872	Question
O	6872	6873	-
O	6873	6881	26791441
O	6881	6882	,
O	6883	6889	answer
O	6889	6890	-
O	6890	6898	26791724

O	6899	6902	Use
O	6903	6906	the
B-api_mention	6907	6918	replaceEach
I-api_mention	6918	6919	(
I-api_mention	6919	6920	)
O	6921	6927	method
O	6928	6932	from
O	6933	6939	Apache
O	6940	6947	Commons
B-api_mention	6948	6959	StringUtils
O	6960	6961	:
B-api_mention	6962	6973	StringUtils
I-api_mention	6973	6974	.
I-api_mention	6974	6985	replaceEach
I-api_mention	6985	6986	(
I-api_mention	6986	6990	args
I-api_mention	6990	6991	)

O	6993	7001	Question
O	7001	7002	-
O	7002	7010	26791441
O	7010	7011	,
O	7012	7018	answer
O	7018	7019	-
O	7019	7027	26791826

O	7028	7034	Search
O	7035	7038	for
O	7039	7042	the
O	7043	7048	first
O	7049	7053	word
O	7054	7056	to
O	7057	7059	be
O	7060	7068	replaced
O	7068	7069	.

O	7070	7072	If
O	7073	7075	it
O	7075	7076	'
O	7076	7077	s
O	7078	7080	in
O	7081	7084	the
O	7085	7091	string
O	7091	7092	,
O	7093	7100	recurse
O	7101	7103	on
O	7104	7107	the
O	7108	7111	the
O	7112	7116	part
O	7117	7119	of
O	7120	7123	the
O	7124	7130	string
O	7131	7137	before
O	7138	7141	the
O	7142	7152	occurrence
O	7152	7153	,
O	7154	7157	and
O	7158	7160	on
O	7161	7164	the
O	7165	7169	part
O	7170	7172	of
O	7173	7176	the
O	7177	7183	string
O	7184	7189	after
O	7190	7193	the
O	7194	7204	occurrence
O	7204	7205	.

O	7206	7215	Otherwise
O	7215	7216	,
O	7217	7225	continue
O	7226	7230	with
O	7231	7234	the
O	7235	7239	next
O	7240	7244	word
O	7245	7247	to
O	7248	7250	be
O	7251	7259	replaced
O	7259	7260	.

O	7261	7262	A
O	7263	7268	naive
O	7269	7283	implementation
O	7284	7289	might
O	7290	7294	look
O	7295	7299	like
O	7300	7304	this
O	7305	7306	#
O	7306	7309	pre
O	7310	7316	Sample
O	7317	7322	usage
O	7322	7323	:
O	7324	7325	#
O	7325	7328	pre
O	7329	7335	Output
O	7335	7336	:
O	7337	7341	Once
O	7342	7346	upon
O	7347	7348	a
O	7349	7352	foo
O	7352	7353	,
O	7354	7359	there
O	7360	7363	was
O	7364	7365	a
O	7366	7369	bar
O	7370	7373	and
O	7374	7375	a
O	7376	7379	baz
O	7379	7380	.

O	7381	7382	A
O	7383	7387	less
O	7387	7388	-
O	7388	7393	naive
O	7394	7401	version
O	7401	7402	:
O	7403	7404	#
O	7404	7407	pre
O	7408	7421	Unfortunately
O	7421	7422	,
O	7423	7427	Java
O	7427	7428	'
O	7428	7429	s
B-api_mention	7430	7436	String
O	7437	7440	has
O	7441	7443	no
B-api_mention	7444	7451	indexOf
I-api_mention	7451	7452	(
I-api_mention	7452	7456	args
I-api_mention	7456	7457	)
O	7458	7464	method
O	7464	7465	.

O	7466	7467	I
O	7467	7468	'
O	7468	7470	ve
O	7471	7478	omitted
O	7479	7482	the
O	7483	7497	implementation
O	7498	7500	of
B-api_mention	7501	7508	indexOf
O	7509	7513	here
O	7514	7516	as
O	7517	7518	I
O	7518	7519	'
O	7519	7520	m
O	7521	7524	not
O	7525	7532	certain
O	7533	7535	it
O	7535	7536	'
O	7536	7537	s
O	7538	7545	correct
O	7545	7546	,
O	7547	7550	but
O	7551	7553	it
O	7554	7557	can
O	7558	7560	be
O	7561	7566	found
O	7567	7569	on
O	7570	7576	ideone
O	7577	7578	,
O	7579	7584	along
O	7585	7589	with
O	7590	7594	some
O	7595	7600	rough
O	7601	7608	timings
O	7609	7611	of
O	7612	7619	various
O	7620	7629	solutions
O	7630	7636	posted
O	7637	7641	here
O	7641	7642	.

O	7644	7652	Question
O	7652	7653	-
O	7653	7661	26791441
O	7661	7662	,
O	7663	7669	answer
O	7669	7670	-
O	7670	7678	26796725

O	7679	7687	Swapping
O	7688	7692	Only
O	7693	7696	One
O	7697	7707	Occurrence
O	7708	7710	If
O	7711	7716	there
O	7717	7719	is
O	7720	7724	only
O	7725	7728	one
O	7729	7739	occurrence
O	7740	7742	of
O	7743	7747	each
O	7748	7750	of
O	7751	7754	the
O	7755	7763	swapable
O	7764	7771	strings
O	7772	7774	in
O	7775	7778	the
O	7779	7784	input
O	7784	7785	,
O	7786	7789	you
O	7790	7793	can
O	7794	7796	do
O	7797	7800	the
O	7801	7810	following
O	7810	7811	:
O	7812	7818	Before
O	7819	7829	proceeding
O	7830	7832	to
O	7833	7836	any
O	7837	7844	replace
O	7844	7845	,
O	7846	7849	get
O	7850	7853	the
O	7854	7861	indices
O	7862	7864	of
O	7865	7868	the
O	7869	7880	occurrences
O	7881	7883	of
O	7884	7887	the
O	7888	7893	words
O	7893	7894	.

O	7895	7900	After
O	7901	7905	that
O	7906	7908	we
O	7909	7913	only
O	7914	7921	replace
O	7922	7925	the
O	7926	7930	word
O	7931	7936	found
O	7937	7939	at
O	7940	7945	these
O	7946	7953	indexes
O	7953	7954	,
O	7955	7958	and
O	7959	7962	not
O	7963	7966	all
O	7967	7978	occurrences
O	7978	7979	.

O	7980	7984	This
O	7985	7993	solution
O	7994	7998	uses
B-api_mention	7999	8012	StringBuilder
O	8013	8016	and
O	8017	8021	does
O	8022	8025	not
O	8026	8033	produce
O	8034	8046	intermediate
B-api_mention	8047	8053	String
O	8054	8055	s
O	8056	8060	like
B-api_mention	8061	8067	String
I-api_mention	8067	8068	.
I-api_mention	8068	8075	replace
I-api_mention	8075	8076	(
I-api_mention	8076	8080	args
I-api_mention	8080	8081	)
O	8082	8083	.

O	8084	8087	One
O	8088	8093	thing
O	8094	8096	to
O	8097	8101	note
O	8101	8102	:
O	8103	8105	if
O	8106	8109	the
O	8110	8118	swapable
O	8119	8124	words
O	8125	8129	have
O	8130	8139	different
O	8140	8147	lengths
O	8147	8148	,
O	8149	8154	after
O	8155	8158	the
O	8159	8164	first
O	8165	8172	replace
O	8173	8176	the
O	8177	8183	second
O	8184	8189	index
O	8190	8195	might
O	8196	8202	change
O	8203	8204	(
O	8204	8206	if
O	8207	8210	the
O	8211	8214	1st
O	8215	8219	word
O	8220	8226	occurs
O	8227	8233	before
O	8234	8237	the
O	8238	8241	2nd
O	8241	8242	)
O	8243	8250	exactly
O	8251	8255	with
O	8256	8259	the
O	8260	8270	difference
O	8271	8273	of
O	8274	8277	the
O	8278	8279	2
O	8280	8287	lengths
O	8287	8288	.

O	8289	8291	So
O	8292	8300	aligning
O	8301	8304	the
O	8305	8311	second
O	8312	8317	index
O	8318	8322	will
O	8323	8329	ensure
O	8330	8334	this
O	8335	8340	works
O	8341	8345	even
O	8346	8348	if
O	8349	8351	we
O	8351	8352	'
O	8352	8354	re
O	8355	8363	swapping
O	8364	8369	words
O	8370	8374	with
O	8375	8384	different
O	8385	8392	lengths
O	8392	8393	.

O	8394	8395	#
O	8395	8398	pre
O	8399	8407	Swapping
O	8408	8417	Arbitrary
O	8418	8424	Number
O	8425	8427	of
O	8428	8439	Occurrences
O	8440	8449	Analogous
O	8450	8452	to
O	8453	8456	the
O	8457	8465	previous
O	8466	8470	case
O	8471	8473	we
O	8474	8478	will
O	8479	8484	first
O	8485	8492	collect
O	8493	8496	the
O	8497	8504	indexes
O	8505	8506	(
O	8506	8517	occurrences
O	8517	8518	)
O	8519	8521	of
O	8522	8525	the
O	8526	8531	words
O	8531	8532	,
O	8533	8536	but
O	8537	8539	in
O	8540	8544	this
O	8545	8549	case
O	8550	8552	it
O	8553	8557	will
O	8558	8559	a
O	8560	8564	list
O	8565	8567	of
O	8568	8576	integers
O	8577	8580	for
O	8581	8585	each
O	8586	8590	word
O	8590	8591	,
O	8592	8595	not
O	8596	8600	just
O	8601	8604	one
O	8605	8608	int
O	8609	8610	.

O	8611	8614	For
O	8615	8619	this
O	8620	8622	we
O	8623	8627	will
O	8628	8631	use
O	8632	8635	the
O	8636	8645	following
O	8646	8653	utility
O	8654	8660	method
O	8660	8661	:
O	8662	8663	#
O	8663	8666	pre
O	8667	8670	And
O	8671	8676	using
O	8677	8681	this
O	8682	8684	we
O	8685	8689	will
O	8690	8697	replace
O	8698	8701	the
O	8702	8707	words
O	8708	8712	with
O	8713	8716	the
O	8717	8722	other
O	8723	8726	one
O	8727	8729	by
O	8730	8740	decreasing
O	8741	8746	index
O	8747	8748	(
O	8748	8753	which
O	8754	8759	might
O	8760	8767	require
O	8768	8770	to
O	8771	8780	alternate
O	8781	8788	between
O	8789	8792	the
O	8793	8794	2
O	8795	8803	swapable
O	8804	8809	words
O	8809	8810	)
O	8811	8813	so
O	8814	8818	that
O	8819	8821	we
O	8822	8825	won
O	8825	8826	'
O	8826	8827	t
O	8828	8832	even
O	8833	8837	have
O	8838	8840	to
O	8841	8848	correct
O	8849	8852	the
O	8853	8860	indices
O	8861	8866	after
O	8867	8868	a
O	8869	8876	replace
O	8876	8877	:
O	8878	8879	#
O	8879	8882	pre

O	8884	8892	Question
O	8892	8893	-
O	8893	8901	26791441
O	8901	8902	,
O	8903	8909	answer
O	8909	8910	-
O	8910	8918	26819171

O	8919	8923	This
O	8924	8926	is
O	8927	8930	not
O	8931	8933	an
O	8934	8938	easy
O	8939	8946	problem
O	8946	8947	.

O	8948	8951	And
O	8952	8955	the
O	8956	8960	more
O	8961	8967	search
O	8967	8968	-
O	8968	8979	replacement
O	8980	8990	parameters
O	8991	8994	you
O	8995	8999	have
O	8999	9000	,
O	9001	9004	the
O	9005	9013	trickier
O	9014	9016	it
O	9017	9021	gets
O	9021	9022	.

O	9023	9026	You
O	9027	9031	have
O	9032	9039	several
O	9040	9047	options
O	9047	9048	,
O	9049	9058	scattered
O	9059	9061	on
O	9062	9065	the
O	9066	9073	palette
O	9074	9076	of
O	9077	9081	ugly
O	9081	9082	-
O	9082	9089	elegant
O	9089	9090	,
O	9091	9100	efficient
O	9100	9101	-
O	9101	9109	wasteful
O	9109	9110	:
O	9111	9112	#
O	9112	9114	li
O	9115	9118	Use
B-api_mention	9119	9130	StringUtils
I-api_mention	9130	9131	.
I-api_mention	9131	9142	replaceEach
O	9143	9147	from
O	9148	9154	Apache
O	9155	9162	Commons
O	9163	9165	as
O	9166	9167	@
O	9167	9174	AlanHay
O	9175	9186	recommended
O	9186	9187	.

O	9188	9192	This
O	9193	9195	is
O	9196	9197	a
O	9198	9202	good
O	9203	9209	option
O	9210	9212	if
O	9213	9216	you
O	9216	9217	'
O	9217	9219	re
O	9220	9224	free
O	9225	9227	to
O	9228	9231	add
O	9232	9235	new
O	9236	9248	dependencies
O	9249	9251	in
O	9252	9256	your
O	9257	9264	project
O	9264	9265	.

O	9266	9269	You
O	9270	9275	might
O	9276	9279	get
O	9280	9285	lucky
O	9285	9286	:
O	9287	9290	the
O	9291	9301	dependency
O	9302	9307	might
O	9308	9310	be
O	9311	9319	included
O	9320	9327	already
O	9328	9330	in
O	9331	9335	your
O	9336	9343	project
O	9344	9345	#
O	9345	9347	li
O	9348	9351	Use
O	9352	9353	a
O	9354	9363	temporary
O	9364	9375	placeholder
O	9376	9378	as
O	9379	9380	@
O	9380	9386	Jeroen
O	9387	9396	suggested
O	9396	9397	,
O	9398	9401	and
O	9402	9409	perform
O	9410	9413	the
O	9414	9425	replacement
O	9426	9428	in
O	9429	9430	2
O	9431	9436	steps
O	9436	9437	:
O	9438	9439	#
O	9439	9441	li
O	9442	9449	Replace
O	9450	9453	all
O	9454	9460	search
O	9461	9469	patterns
O	9470	9474	with
O	9475	9476	a
O	9477	9483	unique
O	9484	9487	tag
O	9488	9492	that
O	9493	9498	doesn
O	9498	9499	'
O	9499	9500	t
O	9501	9506	exist
O	9507	9509	in
O	9510	9513	the
O	9514	9522	original
O	9523	9527	text
O	9528	9529	#
O	9529	9531	li
O	9532	9539	Replace
O	9540	9543	the
O	9544	9556	placeholders
O	9557	9561	with
O	9562	9565	the
O	9566	9570	real
O	9571	9577	target
O	9578	9589	replacement
O	9590	9594	This
O	9595	9597	is
O	9598	9601	not
O	9602	9603	a
O	9604	9609	great
O	9610	9618	approach
O	9618	9619	,
O	9620	9623	for
O	9624	9631	several
O	9632	9639	reasons
O	9639	9640	:
O	9641	9643	it
O	9644	9649	needs
O	9650	9652	to
O	9653	9659	ensure
O	9660	9664	that
O	9665	9668	the
O	9669	9673	tags
O	9674	9678	used
O	9679	9681	in
O	9682	9685	the
O	9686	9691	first
O	9692	9696	step
O	9697	9700	are
O	9701	9707	really
O	9708	9714	unique
O	9714	9715	;
O	9716	9718	it
O	9719	9727	performs
O	9728	9732	more
O	9733	9739	string
O	9740	9751	replacement
O	9752	9762	operations
O	9763	9767	than
O	9768	9774	really
O	9775	9784	necessary
O	9785	9786	#
O	9786	9788	li
O	9789	9794	Build
O	9795	9796	a
O	9797	9802	regex
O	9803	9807	from
O	9808	9811	all
O	9812	9815	the
O	9816	9824	patterns
O	9825	9828	and
O	9829	9832	use
O	9833	9836	the
O	9837	9843	method
O	9844	9848	with
B-api_mention	9849	9856	Matcher
O	9857	9860	and
B-api_mention	9861	9873	StringBuffer
O	9874	9876	as
O	9877	9886	suggested
O	9887	9889	by
O	9890	9891	@
O	9891	9899	arshajii
O	9900	9901	.

O	9902	9906	This
O	9907	9909	is
O	9910	9913	not
O	9914	9922	terrible
O	9922	9923	,
O	9924	9927	but
O	9928	9931	not
O	9932	9936	that
O	9937	9942	great
O	9943	9949	either
O	9949	9950	,
O	9951	9953	as
O	9954	9962	building
O	9963	9966	the
O	9967	9972	regex
O	9973	9975	is
O	9976	9980	kind
O	9981	9983	of
O	9984	9991	hackish
O	9991	9992	,
O	9993	9996	and
O	9997	9999	it
O	10000	10008	involves
B-api_mention	10009	10021	StringBuffer
O	10022	10027	which
O	10028	10032	went
O	10033	10036	out
O	10037	10039	of
O	10040	10047	fashion
O	10048	10049	a
O	10050	10055	while
O	10056	10059	ago
O	10060	10062	in
O	10063	10068	favor
O	10069	10071	of
B-api_mention	10072	10085	StringBuilder
O	10086	10087	.

O	10088	10089	#
O	10089	10091	li
O	10092	10095	Use
O	10096	10097	a
O	10098	10107	recursive
O	10108	10116	solution
O	10117	10125	proposed
O	10126	10128	by
O	10129	10130	@
O	10130	10136	mjolka
O	10137	10138	,
O	10139	10141	by
O	10142	10151	splitting
O	10152	10155	the
O	10156	10162	string
O	10163	10165	at
O	10166	10169	the
O	10170	10177	matched
O	10178	10186	patterns
O	10186	10187	,
O	10188	10191	and
O	10192	10201	recursing
O	10202	10204	on
O	10205	10208	the
O	10209	10218	remaining
O	10219	10227	segments
O	10227	10228	.

O	10229	10233	This
O	10234	10236	is
O	10237	10238	a
O	10239	10243	fine
O	10244	10252	solution
O	10252	10253	,
O	10254	10261	compact
O	10262	10265	and
O	10266	10271	quite
O	10272	10279	elegant
O	10279	10280	.

O	10281	10284	Its
O	10285	10293	weakness
O	10294	10296	is
O	10297	10300	the
O	10301	10312	potentially
O	10313	10317	many
O	10318	10327	substring
O	10328	10331	and
O	10332	10345	concatenation
O	10346	10356	operations
O	10356	10357	,
O	10358	10361	and
O	10362	10365	the
O	10366	10371	stack
O	10372	10376	size
O	10377	10383	limits
O	10384	10388	that
O	10389	10394	apply
O	10395	10397	to
O	10398	10401	all
O	10402	10411	recursive
O	10412	10421	solutions
O	10422	10423	#
O	10423	10425	li
O	10426	10431	Split
O	10432	10435	the
O	10436	10440	text
O	10441	10443	to
O	10444	10449	words
O	10450	10453	and
O	10454	10457	use
O	10458	10462	Java
O	10463	10464	8
O	10465	10472	streams
O	10473	10475	to
O	10476	10483	perform
O	10484	10487	the
O	10488	10500	replacements
O	10501	10510	elegantly
O	10511	10513	as
O	10514	10515	@
O	10515	10525	msandiford
O	10526	10535	suggested
O	10535	10536	,
O	10537	10540	but
O	10541	10543	of
O	10544	10550	course
O	10551	10555	that
O	10556	10560	only
O	10561	10566	works
O	10567	10569	if
O	10570	10573	you
O	10574	10577	are
O	10578	10580	ok
O	10581	10585	with
O	10586	10595	splitting
O	10596	10598	at
O	10599	10603	word
O	10604	10614	boundaries
O	10614	10615	,
O	10616	10621	which
O	10622	10627	makes
O	10628	10630	it
O	10631	10634	not
O	10635	10643	suitable
O	10644	10646	as
O	10647	10648	a
O	10649	10656	general
O	10657	10665	solution
O	10666	10670	Here
O	10670	10671	'
O	10671	10672	s
O	10673	10675	my
O	10676	10683	version
O	10683	10684	,
O	10685	10690	based
O	10691	10693	on
O	10694	10699	ideas
O	10700	10708	borrowed
O	10709	10713	from
O	10714	10720	Apache
O	10720	10721	'
O	10721	10722	s
O	10723	10737	implementation
O	10738	10739	.

O	10740	10742	It
O	10742	10743	'
O	10743	10744	s
O	10745	10752	neither
O	10753	10759	simple
O	10760	10763	nor
O	10764	10771	elegant
O	10771	10772	,
O	10773	10776	but
O	10777	10779	it
O	10780	10785	works
O	10785	10786	,
O	10787	10790	and
O	10791	10797	should
O	10798	10800	be
O	10801	10811	relatively
O	10812	10821	efficient
O	10821	10822	,
O	10823	10830	without
O	10831	10842	unnecessary
O	10843	10848	steps
O	10848	10849	.

O	10850	10852	In
O	10853	10854	a
O	10855	10863	nutshell
O	10863	10864	,
O	10865	10867	it
O	10868	10873	works
O	10874	10878	like
O	10879	10883	this
O	10883	10884	:
O	10885	10895	repeatedly
O	10896	10900	find
O	10901	10904	the
O	10905	10909	next
O	10910	10918	matching
O	10919	10925	search
O	10926	10933	pattern
O	10934	10936	in
O	10937	10940	the
O	10941	10945	text
O	10945	10946	,
O	10947	10950	and
O	10951	10954	use
O	10955	10956	a
B-api_mention	10957	10970	StringBuilder
O	10971	10973	to
O	10974	10984	accumulate
O	10985	10988	the
O	10989	10998	unmatched
O	10999	11007	segments
O	11008	11011	and
O	11012	11015	the
O	11016	11028	replacements
O	11028	11029	.

O	11030	11031	#
O	11031	11034	pre
O	11035	11039	Unit
O	11040	11045	tests
O	11045	11046	:
O	11047	11048	#
O	11048	11051	pre

O	11053	11061	Question
O	11061	11062	-
O	11062	11070	26791441
O	11070	11071	,
O	11072	11078	answer
O	11078	11079	-
O	11079	11087	26826286

O	11088	11090	It
O	11090	11091	'
O	11091	11092	s
O	11093	11097	easy
O	11098	11100	to
O	11101	11106	write
O	11107	11108	a
O	11109	11115	method
O	11116	11118	to
O	11119	11121	do
O	11122	11126	this
O	11127	11132	using
B-api_mention	11133	11139	String
I-api_mention	11139	11140	.
I-api_mention	11140	11153	regionMatches
O	11154	11155	:
O	11156	11157	#
O	11157	11160	pre
O	11161	11168	Testing
O	11168	11169	:
O	11170	11171	#
O	11171	11174	pre
O	11175	11181	Output
O	11181	11182	:
O	11183	11184	#
O	11184	11194	blockquote
O	11195	11197	It
O	11198	11200	is
O	11201	11204	not
O	11205	11216	immediately
O	11217	11224	obvious
O	11224	11225	,
O	11226	11229	but
O	11230	11231	a
O	11232	11240	function
O	11241	11245	like
O	11246	11250	this
O	11251	11254	can
O	11255	11260	still
O	11261	11263	be
O	11264	11273	dependent
O	11274	11276	on
O	11277	11280	the
O	11281	11286	order
O	11287	11289	in
O	11290	11295	which
O	11296	11299	the
O	11300	11312	replacements
O	11313	11316	are
O	11317	11326	specified
O	11326	11327	.

O	11328	11336	Consider
O	11336	11337	:
O	11338	11339	#
O	11339	11342	pre
O	11343	11349	Output
O	11349	11350	:
O	11351	11352	#
O	11352	11362	blockquote
O	11363	11366	But
O	11367	11374	reverse
O	11375	11378	the
O	11379	11391	replacements
O	11391	11392	:
O	11393	11398	truth
O	11399	11400	+
O	11400	11401	=
O	11402	11415	StringLiteral
O	11416	11417	+
O	11418	11437	simultaneousReplace
O	11437	11438	(
O	11438	11442	args
O	11442	11443	)
O	11443	11444	;
O	11445	11451	Output
O	11451	11452	:
O	11453	11454	#
O	11454	11464	blockquote
O	11465	11469	Oops
O	11469	11470	!

O	11471	11472	:
O	11472	11473	)
O	11474	11483	Therefore
O	11484	11486	it
O	11487	11489	is
O	11490	11499	sometimes
O	11500	11506	useful
O	11507	11509	to
O	11510	11514	make
O	11515	11519	sure
O	11520	11522	to
O	11523	11527	look
O	11528	11531	for
O	11532	11535	the
O	11536	11543	longest
O	11544	11549	match
O	11550	11551	(
O	11551	11553	as
O	11554	11557	PHP
O	11557	11558	'
O	11558	11559	s
O	11560	11565	strtr
O	11566	11574	function
O	11575	11579	does
O	11579	11580	,
O	11581	11584	for
O	11585	11592	example
O	11592	11593	)
O	11593	11594	.

O	11595	11599	This
O	11600	11607	version
O	11608	11610	of
O	11611	11614	the
O	11615	11621	method
O	11622	11626	will
O	11627	11629	do
O	11630	11634	that
O	11634	11635	:
O	11636	11637	#
O	11637	11640	pre
O	11641	11645	Note
O	11646	11650	that
O	11651	11654	the
O	11655	11660	above
O	11661	11668	methods
O	11669	11672	are
O	11673	11677	case
O	11677	11678	-
O	11678	11687	sensitive
O	11687	11688	.

O	11689	11691	If
O	11692	11695	you
O	11696	11700	need
O	11701	11702	a
O	11703	11707	case
O	11707	11708	-
O	11708	11719	insensitive
O	11720	11727	version
O	11728	11730	it
O	11731	11733	is
O	11734	11738	easy
O	11739	11741	to
O	11742	11748	modify
O	11749	11752	the
O	11753	11758	above
O	11759	11766	because
B-api_mention	11767	11773	String
I-api_mention	11773	11774	.
I-api_mention	11774	11787	regionMatches
O	11788	11791	can
O	11792	11796	take
O	11797	11799	an
B-api_mention	11800	11810	ignoreCase
O	11811	11820	parameter
O	11820	11821	.

O	11823	11831	Question
O	11831	11832	-
O	11832	11840	26791441
O	11840	11841	,
O	11842	11848	answer
O	11848	11849	-
O	11849	11857	26877910

O	11858	11862	What
O	11863	11864	I
O	11865	11868	can
O	11869	11873	only
O	11874	11879	share
O	11880	11882	is
O	11883	11885	my
O	11886	11889	own
O	11890	11896	method
O	11896	11897	.

O	11898	11901	You
O	11902	11905	can
O	11906	11909	use
O	11910	11911	a
O	11912	11921	temporary
B-api_mention	11922	11928	String
O	11929	11933	temp
O	11934	11935	=
O	11936	11949	StringLiteral
O	11949	11950	;
O	11951	11953	or
B-api_mention	11954	11960	String
I-api_mention	11960	11961	.
I-api_mention	11961	11967	Format
I-api_mention	11967	11968	(
I-api_mention	11968	11972	args
I-api_mention	11972	11973	)
O	11973	11974	;
O	11975	11979	This
O	11980	11982	is
O	11983	11985	my
O	11986	11993	example
O	11994	11998	code
O	11999	12006	created
O	12007	12009	in
O	12010	12017	console
O	12018	12029	application
O	12030	12033	via
O	12034	12035	c
O	12035	12036	#
O	12037	12038	-
O	12038	12039	"
O	12039	12043	Idea
O	12044	12048	Only
O	12048	12049	,
O	12050	12053	Not
O	12054	12059	Exact
O	12060	12066	Answer
O	12066	12067	"
O	12068	12069	.

O	12070	12071	#
O	12071	12074	pre
O	12075	12077	Or
O	12078	12081	you
O	12082	12085	can
O	12086	12090	also
O	12091	12094	use
O	12095	12098	the
B-api_mention	12099	12105	String
I-api_mention	12105	12106	.
I-api_mention	12106	12112	Format
I-api_mention	12112	12113	(
I-api_mention	12113	12117	args
I-api_mention	12117	12118	)
O	12118	12119	;
O	12120	12121	#
O	12121	12124	pre
O	12125	12131	Output
O	12131	12132	:
O	12133	12137	time
O	12138	12142	upon
O	12143	12144	a
O	12145	12149	Once
O	12149	12150	,
O	12151	12156	there
O	12157	12160	was
O	12161	12162	a
O	12163	12166	bar
O	12167	12170	and
O	12171	12172	a
O	12173	12176	foo
O	12176	12177	.

O	12179	12187	Question
O	12187	12188	-
O	12188	12196	26791441
O	12196	12197	,
O	12198	12204	answer
O	12204	12205	-
O	12205	12213	26886202

O	12214	12217	You
O	12218	12221	are
O	12222	12232	performing
O	12233	12241	multiple
O	12242	12248	search
O	12248	12249	-
O	12249	12256	replace
O	12257	12267	operations
O	12268	12270	on
O	12271	12274	the
O	12275	12280	input
O	12280	12281	.

O	12282	12286	This
O	12287	12291	will
O	12292	12299	produce
O	12300	12309	undesired
O	12310	12317	results
O	12318	12322	when
O	12323	12326	the
O	12327	12338	replacement
O	12339	12346	strings
O	12347	12354	contain
O	12355	12361	search
O	12362	12369	strings
O	12369	12370	.

O	12371	12379	Consider
O	12380	12383	the
O	12384	12387	foo
O	12387	12388	-
O	12388	12389	>
O	12389	12392	bar
O	12392	12393	,
O	12394	12397	bar
O	12397	12398	-
O	12398	12401	foo
O	12402	12409	example
O	12409	12410	,
O	12411	12415	here
O	12416	12419	are
O	12420	12423	the
O	12424	12431	results
O	12432	12435	for
O	12436	12440	each
O	12441	12450	iteration
O	12450	12451	:
O	12452	12453	#
O	12453	12455	li
O	12456	12460	Once
O	12461	12465	upon
O	12466	12467	a
O	12468	12472	time
O	12472	12473	,
O	12474	12479	there
O	12480	12483	was
O	12484	12485	a
O	12486	12489	foo
O	12490	12493	and
O	12494	12495	a
O	12496	12499	bar
O	12499	12500	.

O	12501	12502	(
O	12502	12507	input
O	12507	12508	)
O	12509	12510	#
O	12510	12512	li
O	12513	12517	Once
O	12518	12522	upon
O	12523	12524	a
O	12525	12529	time
O	12529	12530	,
O	12531	12536	there
O	12537	12540	was
O	12541	12542	a
O	12543	12546	bar
O	12547	12550	and
O	12551	12552	a
O	12553	12556	bar
O	12556	12557	.

O	12558	12559	(
O	12559	12562	foo
O	12562	12563	-
O	12563	12564	>
O	12564	12567	bar
O	12567	12568	)
O	12569	12570	#
O	12570	12572	li
O	12573	12577	Once
O	12578	12582	upon
O	12583	12584	a
O	12585	12589	time
O	12589	12590	,
O	12591	12596	there
O	12597	12600	was
O	12601	12602	a
O	12603	12606	foo
O	12607	12610	and
O	12611	12612	a
O	12613	12616	foo
O	12616	12617	.

O	12618	12619	(
O	12619	12622	bar
O	12622	12623	-
O	12623	12624	>
O	12624	12627	foo
O	12627	12628	,
O	12629	12635	output
O	12635	12636	)
O	12637	12640	You
O	12641	12645	need
O	12646	12648	to
O	12649	12656	perform
O	12657	12660	the
O	12661	12672	replacement
O	12673	12675	in
O	12676	12679	one
O	12680	12689	iteration
O	12690	12697	without
O	12698	12703	going
O	12704	12708	back
O	12708	12709	.

O	12710	12711	A
O	12712	12717	brute
O	12717	12718	-
O	12718	12723	force
O	12724	12732	solution
O	12733	12735	is
O	12736	12738	as
O	12739	12746	follows
O	12746	12747	:
O	12748	12749	#
O	12749	12751	li
O	12752	12758	Search
O	12759	12762	the
O	12763	12768	input
O	12769	12773	from
O	12774	12781	current
O	12782	12790	position
O	12791	12793	to
O	12794	12797	end
O	12798	12801	for
O	12802	12810	multiple
O	12811	12817	search
O	12818	12825	strings
O	12826	12831	until
O	12832	12833	a
O	12834	12839	match
O	12840	12842	is
O	12843	12848	found
O	12849	12850	#
O	12850	12852	li
O	12853	12860	Replace
O	12861	12864	the
O	12865	12872	matched
O	12873	12879	search
O	12880	12886	string
O	12887	12891	with
O	12892	12905	corresponding
O	12906	12913	replace
O	12914	12920	string
O	12921	12922	#
O	12922	12924	li
O	12925	12928	Set
O	12929	12936	current
O	12937	12945	position
O	12946	12948	to
O	12949	12952	the
O	12953	12957	next
O	12958	12967	character
O	12968	12973	after
O	12974	12977	the
O	12978	12986	replaced
O	12987	12993	string
O	12994	12995	#
O	12995	12997	li
O	12998	13004	Repeat
O	13005	13006	A
O	13007	13015	function
O	13016	13020	such
O	13021	13023	as
B-api_mention	13024	13030	String
I-api_mention	13030	13031	.
I-api_mention	13031	13041	indexOfAny
I-api_mention	13041	13042	(
I-api_mention	13042	13046	args
I-api_mention	13046	13047	)
O	13048	13049	-
O	13049	13050	>
O	13051	13054	int
O	13054	13055	[
O	13055	13056	]
O	13056	13057	{
O	13057	13062	index
O	13062	13063	,
O	13064	13075	whichString
O	13075	13076	}
O	13077	13082	would
O	13083	13085	be
O	13086	13092	useful
O	13092	13093	.

O	13094	13098	Here
O	13099	13101	is
O	13102	13104	an
O	13105	13112	example
O	13113	13114	(
O	13114	13117	not
O	13118	13121	the
O	13122	13126	most
O	13127	13136	efficient
O	13137	13140	one
O	13140	13141	)
O	13141	13142	:
O	13143	13144	#
O	13144	13147	pre
O	13148	13152	Some
O	13153	13158	tests
O	13158	13159	:
O	13160	13161	#
O	13161	13164	pre
O	13165	13169	Demo
O	13170	13172	on
O	13173	13179	IDEONE
O	13180	13184	Demo
O	13185	13187	on
O	13188	13194	IDEONE
O	13194	13195	,
O	13196	13205	alternate
O	13206	13210	code

O	13212	13220	Question
O	13220	13221	-
O	13221	13229	24631909
O	13229	13230	,
O	13231	13237	answer
O	13237	13238	-
O	13238	13246	24635657

O	13247	13253	Common
O	13254	13262	features
O	13263	13264	a
O	13264	13265	)
O	13266	13270	Both
O	13271	13280	libraries
O	13281	13284	use
O	13285	13294	immutable
O	13295	13300	types
O	13300	13301	.

O	13302	13306	Joda
O	13306	13307	-
O	13307	13311	Time
O	13312	13316	also
O	13317	13323	offers
O	13324	13334	additional
O	13335	13342	mutable
O	13343	13348	types
O	13349	13353	like
B-api_mention	13354	13369	MutableDateTime
O	13370	13371	.

O	13372	13373	b
O	13373	13374	)
O	13375	13386	Furthermore
O	13386	13387	:
O	13388	13392	Both
O	13393	13402	libraries
O	13403	13406	are
O	13407	13415	inspired
O	13416	13418	by
O	13419	13422	the
O	13423	13429	design
O	13430	13435	study
O	13436	13437	"
O	13437	13449	TimeAndMoney
O	13449	13450	"
O	13451	13455	from
O	13456	13460	Eric
O	13461	13466	Evans
O	13467	13469	or
O	13470	13475	ideas
O	13476	13480	from
O	13481	13487	Martin
O	13488	13494	Fowler
O	13495	13500	about
O	13501	13507	domain
O	13508	13514	driven
O	13515	13520	style
O	13521	13523	so
O	13524	13528	they
O	13529	13535	strive
O	13536	13540	more
O	13541	13543	or
O	13544	13548	less
O	13549	13552	for
O	13553	13554	a
O	13555	13561	fluent
O	13562	13573	programming
O	13574	13579	style
O	13580	13581	(
O	13581	13589	although
O	13590	13593	not
O	13594	13600	always
O	13601	13608	perfect
O	13609	13610	;
O	13610	13611	-
O	13611	13612	)
O	13612	13613	)
O	13613	13614	.

O	13615	13616	c
O	13616	13617	)
O	13618	13622	With
O	13623	13627	both
O	13628	13637	libraries
O	13638	13640	we
O	13641	13644	get
O	13645	13646	a
O	13647	13651	real
O	13652	13660	calendar
O	13661	13665	date
O	13666	13670	type
O	13671	13672	(
O	13672	13678	called
B-api_mention	13679	13688	LocalDate
O	13689	13690	)
O	13690	13691	,
O	13692	13693	a
O	13694	13698	real
O	13699	13703	wall
O	13704	13708	time
O	13709	13713	type
O	13714	13715	(
O	13715	13721	called
B-api_mention	13722	13731	LocalTime
O	13732	13733	)
O	13734	13737	and
O	13738	13741	the
O	13742	13753	composition
O	13754	13755	(
O	13755	13761	called
B-api_mention	13762	13775	LocalDateTime
O	13776	13777	)
O	13777	13778	.

O	13779	13783	That
O	13784	13786	is
O	13787	13788	a
O	13789	13793	very
O	13794	13797	big
O	13798	13801	win
O	13802	13810	compared
O	13811	13815	with
O	13816	13819	old
B-api_mention	13820	13824	java
I-api_mention	13824	13825	.
I-api_mention	13825	13829	util
I-api_mention	13829	13830	.
I-api_mention	13830	13838	Calendar
O	13839	13842	and
B-api_mention	13843	13847	java
I-api_mention	13847	13848	.
I-api_mention	13848	13852	util
I-api_mention	13852	13853	.
I-api_mention	13853	13857	Date
O	13858	13859	.

O	13860	13861	d
O	13861	13862	)
O	13863	13867	Both
O	13868	13877	libraries
O	13878	13881	use
O	13882	13883	a
O	13884	13890	method
O	13890	13891	-
O	13891	13898	centric
O	13899	13907	approach
O	13908	13915	meaning
O	13916	13920	they
O	13921	13930	encourage
O	13931	13934	the
O	13935	13939	user
O	13940	13942	to
O	13943	13946	use
B-api_mention	13947	13959	getDayOfYear
I-api_mention	13959	13960	(
I-api_mention	13960	13964	args
I-api_mention	13964	13965	)
O	13966	13973	instead
O	13974	13976	of
B-api_mention	13977	13980	get
I-api_mention	13980	13981	(
I-api_mention	13981	13985	args
I-api_mention	13985	13986	)
O	13987	13988	.

O	13989	13993	This
O	13994	14000	causes
O	14001	14002	a
O	14003	14006	lot
O	14007	14009	of
O	14010	14015	extra
O	14016	14023	methods
O	14024	14032	compared
O	14033	14037	with
B-api_mention	14038	14042	java
I-api_mention	14042	14043	.
I-api_mention	14043	14047	util
I-api_mention	14047	14048	.
I-api_mention	14048	14056	Calendar
O	14057	14058	(
O	14058	14066	although
O	14067	14073	latter
O	14074	14076	is
O	14077	14080	not
O	14081	14085	type
O	14085	14086	-
O	14086	14090	safe
O	14091	14093	at
O	14094	14097	all
O	14098	14101	due
O	14102	14104	to
O	14105	14114	excessive
O	14115	14118	use
O	14119	14121	of
O	14122	14126	ints
O	14126	14127	)
O	14127	14128	.

O	14129	14140	Performance
O	14141	14144	See
O	14145	14148	the
O	14149	14154	other
O	14155	14161	answer
O	14162	14164	by
O	14165	14166	@
O	14166	14169	OO7
O	14170	14178	pointing
O	14179	14181	to
O	14182	14185	the
O	14186	14194	analysis
O	14195	14197	of
O	14198	14205	Mikhail
O	14206	14215	Vorontsov
O	14216	14224	although
O	14225	14230	point
O	14231	14232	3
O	14233	14234	(
O	14234	14243	exception
O	14244	14252	catching
O	14252	14253	)
O	14254	14256	is
O	14257	14265	probably
O	14266	14274	obsolete
O	14275	14276	-
O	14277	14280	see
O	14281	14285	this
O	14286	14289	JDK
O	14289	14290	-
O	14290	14293	bug
O	14294	14295	.

O	14296	14299	The
O	14300	14309	different
O	14310	14321	performance
O	14322	14323	(
O	14323	14328	which
O	14329	14331	is
O	14332	14334	in
O	14335	14342	general
O	14343	14349	favour
O	14350	14352	of
O	14353	14356	JSR
O	14356	14357	-
O	14357	14360	310
O	14361	14362	)
O	14363	14365	is
O	14366	14372	mainly
O	14373	14376	due
O	14377	14379	to
O	14380	14383	the
O	14384	14388	fact
O	14389	14393	that
O	14394	14397	the
O	14398	14406	internal
O	14407	14421	implementation
O	14422	14424	of
O	14425	14429	Joda
O	14429	14430	-
O	14430	14434	Time
O	14435	14441	always
O	14442	14445	use
O	14446	14447	a
O	14448	14455	machine
O	14455	14456	-
O	14456	14460	time
O	14460	14461	-
O	14461	14465	like
O	14466	14470	long
O	14470	14471	-
O	14471	14480	primitive
O	14481	14482	(
O	14482	14484	in
O	14485	14497	milliseconds
O	14497	14498	)
O	14498	14499	.

O	14500	14504	Null
O	14505	14509	Joda
O	14509	14510	-
O	14510	14514	Time
O	14515	14520	often
O	14521	14524	use
O	14525	14529	NULL
O	14530	14532	as
O	14533	14540	default
O	14541	14544	for
O	14545	14551	system
O	14552	14560	timezone
O	14560	14561	,
O	14562	14569	default
O	14570	14576	locale
O	14576	14577	,
O	14578	14585	current
O	14586	14595	timestamp
O	14596	14599	etc
O	14599	14600	.
O	14601	14606	while
O	14607	14610	JSR
O	14610	14611	-
O	14611	14614	310
O	14615	14621	almost
O	14622	14628	always
O	14629	14636	rejects
O	14637	14641	NULL
O	14642	14648	values
O	14648	14649	.

O	14650	14659	Precision
O	14660	14663	JSR
O	14663	14664	-
O	14664	14667	310
O	14668	14675	handles
O	14676	14686	nanosecond
O	14687	14696	precision
O	14697	14702	while
O	14703	14707	Joda
O	14707	14708	-
O	14708	14712	Time
O	14713	14715	is
O	14716	14723	limited
O	14724	14726	to
O	14727	14738	millisecond
O	14739	14748	precision
O	14748	14749	.

O	14750	14759	Supported
O	14760	14766	fields
O	14766	14767	:
O	14768	14770	An
O	14771	14779	overview
O	14780	14785	about
O	14786	14795	supported
O	14796	14802	fields
O	14803	14805	in
O	14806	14810	Java
O	14810	14811	-
O	14811	14812	8
O	14813	14814	(
O	14814	14817	JSR
O	14817	14818	-
O	14818	14821	310
O	14821	14822	)
O	14823	14825	is
O	14826	14831	given
O	14832	14834	by
O	14835	14839	some
O	14840	14847	classes
O	14848	14850	in
O	14851	14854	the
O	14855	14863	temporal
O	14863	14864	-
O	14864	14871	package
O	14872	14873	(
O	14873	14876	for
O	14877	14884	example
B-api_mention	14885	14896	ChronoField
O	14897	14900	and
B-api_mention	14901	14911	WeekFields
O	14912	14913	)
O	14914	14919	while
O	14920	14924	Joda
O	14924	14925	-
O	14925	14929	Time
O	14930	14932	is
O	14933	14939	rather
O	14940	14944	weak
O	14945	14947	on
O	14948	14952	this
O	14953	14957	area
O	14958	14959	-
O	14960	14963	see
B-api_mention	14964	14981	DateTimeFieldType
O	14982	14983	.

O	14984	14987	The
O	14988	14995	biggest
O	14996	15000	lack
O	15001	15003	of
O	15004	15008	Joda
O	15008	15009	-
O	15009	15013	Time
O	15014	15016	is
O	15017	15021	here
O	15022	15025	the
O	15026	15033	absence
O	15034	15036	of
O	15037	15046	localized
O	15047	15051	week
O	15051	15052	-
O	15052	15059	related
O	15060	15066	fields
O	15066	15067	.

O	15068	15069	A
O	15070	15076	common
O	15077	15084	feature
O	15085	15087	of
O	15088	15092	both
O	15093	15098	field
O	15099	15113	implementation
O	15114	15120	design
O	15121	15123	is
O	15124	15128	that
O	15129	15133	both
O	15134	15137	are
O	15138	15143	based
O	15144	15146	on
O	15147	15153	values
O	15154	15156	of
O	15157	15161	type
O	15162	15166	long
O	15167	15168	(
O	15168	15170	no
O	15171	15176	other
O	15177	15182	types
O	15182	15183	,
O	15184	15187	not
O	15188	15192	even
O	15193	15198	enums
O	15198	15199	)
O	15199	15200	.

O	15201	15205	Enum
O	15206	15209	JSR
O	15209	15210	-
O	15210	15213	310
O	15214	15220	offers
O	15221	15226	enums
O	15227	15231	like
B-api_mention	15232	15241	DayOfWeek
O	15242	15244	or
B-api_mention	15245	15250	Month
O	15251	15256	while
O	15257	15261	Joda
O	15261	15262	-
O	15262	15266	Time
O	15267	15271	does
O	15272	15275	not
O	15276	15281	offer
O	15282	15286	this
O	15287	15294	because
O	15295	15297	it
O	15298	15301	was
O	15302	15308	mainly
O	15309	15318	developed
O	15319	15321	in
O	15322	15327	years
O	15328	15332	2002
O	15332	15333	-
O	15333	15337	2004
O	15338	15344	before
O	15345	15349	Java
O	15350	15351	5
O	15352	15353	.

O	15354	15358	Zone
O	15359	15362	API
O	15363	15364	a
O	15364	15365	)
O	15366	15369	JSR
O	15369	15370	-
O	15370	15373	310
O	15374	15380	offers
O	15381	15385	more
O	15386	15394	timezone
O	15395	15403	features
O	15404	15408	than
O	15409	15413	Joda
O	15413	15414	-
O	15414	15418	Time
O	15418	15419	.

O	15420	15426	Latter
O	15427	15429	is
O	15430	15433	not
O	15434	15438	able
O	15439	15441	to
O	15442	15447	yield
O	15448	15449	a
O	15450	15464	programmatical
O	15465	15471	access
O	15472	15474	to
O	15475	15478	the
O	15479	15486	history
O	15487	15489	of
O	15490	15498	timezone
O	15499	15505	offset
O	15506	15517	transitions
O	15518	15523	while
O	15524	15527	JSR
O	15527	15528	-
O	15528	15531	310
O	15532	15534	is
O	15535	15542	capable
O	15543	15545	to
O	15546	15548	do
O	15549	15553	this
O	15553	15554	.

O	15555	15556	b
O	15556	15557	)
O	15558	15561	For
O	15562	15566	your
O	15567	15578	information
O	15578	15579	:
O	15580	15583	JSR
O	15583	15584	-
O	15584	15587	310
O	15588	15591	has
O	15592	15597	moved
O	15598	15601	its
O	15602	15610	internal
O	15611	15619	timezone
O	15620	15630	repository
O	15631	15633	to
O	15634	15635	a
O	15636	15639	new
O	15640	15648	location
O	15649	15652	and
O	15653	15654	a
O	15655	15664	different
O	15665	15671	format
O	15671	15672	.

O	15673	15676	The
O	15677	15680	old
O	15681	15688	library
O	15689	15695	folder
O	15696	15699	lib
O	15699	15700	/
O	15700	15702	zi
O	15703	15707	does
O	15708	15711	not
O	15712	15717	exist
O	15718	15721	any
O	15722	15726	more
O	15726	15727	.

O	15728	15736	Adjuster
O	15737	15739	vs
O	15739	15740	.
O	15741	15749	Property
O	15750	15753	JSR
O	15753	15754	-
O	15754	15757	310
O	15758	15761	has
O	15762	15772	introduced
O	15773	15776	the
B-api_mention	15777	15793	TemporalAdjuster
O	15794	15795	-
O	15795	15804	interface
O	15805	15807	as
O	15808	15809	a
O	15810	15820	formalized
O	15821	15824	way
O	15825	15827	to
O	15828	15839	externalize
O	15840	15848	temporal
O	15849	15861	calculations
O	15862	15865	and
O	15866	15879	manipulations
O	15879	15880	,
O	15881	15891	especially
O	15892	15895	for
O	15896	15903	library
O	15904	15906	or
O	15907	15916	framework
O	15916	15917	-
O	15917	15924	writers
O	15925	15929	this
O	15930	15932	is
O	15933	15934	a
O	15935	15939	nice
O	15940	15943	and
O	15944	15952	relative
O	15953	15957	easy
O	15958	15961	way
O	15962	15964	to
O	15965	15970	embed
O	15971	15974	new
O	15975	15985	extensions
O	15986	15988	of
O	15989	15992	JSR
O	15992	15993	-
O	15993	15996	310
O	15997	15998	(
O	15998	15999	a
O	16000	16004	kind
O	16005	16007	of
O	16008	16018	equivalent
O	16019	16021	to
O	16022	16028	static
O	16029	16035	helper
O	16036	16043	classes
O	16044	16047	for
O	16048	16054	former
B-api_mention	16055	16059	java
I-api_mention	16059	16060	.
I-api_mention	16060	16064	util
I-api_mention	16064	16065	.
I-api_mention	16065	16069	Date
O	16070	16071	)
O	16071	16072	.

O	16073	16076	For
O	16077	16081	most
O	16082	16087	users
O	16088	16095	however
O	16095	16096	,
O	16097	16101	this
O	16102	16109	feature
O	16110	16113	has
O	16114	16118	very
O	16119	16126	limited
O	16127	16132	value
O	16133	16140	because
O	16141	16144	the
O	16145	16151	burden
O	16152	16154	to
O	16155	16160	write
O	16161	16165	code
O	16166	16168	is
O	16169	16174	still
O	16175	16179	with
O	16180	16183	the
O	16184	16188	user
O	16188	16189	.

O	16190	16195	Built
O	16195	16196	-
O	16196	16198	in
O	16199	16208	solutions
O	16209	16214	based
O	16215	16217	on
O	16218	16221	the
O	16222	16225	new
B-api_mention	16226	16242	TemporalAdjuster
O	16243	16244	-
O	16244	16251	concept
O	16252	16255	are
O	16256	16259	not
O	16260	16262	so
O	16263	16267	many
O	16267	16268	,
O	16269	16274	there
O	16275	16277	is
O	16278	16287	currently
O	16288	16292	only
O	16293	16296	the
O	16297	16303	helper
O	16304	16309	class
B-api_mention	16310	16327	TemporalAdjusters
O	16328	16332	with
O	16333	16334	a
O	16335	16342	limited
O	16343	16346	set
O	16347	16349	of
O	16350	16363	manipulations
O	16364	16365	(
O	16365	16368	and
O	16369	16372	the
O	16373	16378	enums
O	16379	16384	Month
O	16385	16387	or
O	16388	16393	other
O	16394	16402	temporal
O	16403	16408	types
O	16408	16409	)
O	16409	16410	.

O	16411	16415	Joda
O	16415	16416	-
O	16416	16420	Time
O	16421	16427	offers
O	16428	16429	a
O	16430	16435	field
O	16435	16436	-
O	16436	16443	package
O	16444	16447	but
O	16448	16456	practice
O	16457	16460	has
O	16461	16466	shown
O	16467	16475	evidence
O	16476	16480	that
O	16481	16484	new
O	16485	16490	field
O	16491	16506	implementations
O	16507	16510	are
O	16511	16515	very
O	16516	16520	hard
O	16521	16523	to
O	16524	16528	code
O	16528	16529	.

O	16530	16532	On
O	16533	16536	the
O	16537	16542	other
O	16543	16547	side
O	16548	16552	Joda
O	16552	16553	-
O	16553	16557	Time
O	16558	16564	offers
O	16565	16567	so
O	16567	16568	-
O	16568	16574	called
O	16575	16585	properties
O	16586	16591	which
O	16592	16596	make
O	16597	16601	some
O	16602	16615	manipulations
O	16616	16620	much
O	16621	16627	easier
O	16628	16631	and
O	16632	16636	more
O	16637	16644	elegant
O	16645	16649	than
O	16650	16652	in
O	16653	16656	JSR
O	16656	16657	-
O	16657	16660	310
O	16660	16661	,
O	16662	16665	for
O	16666	16673	example
O	16674	16682	property
B-api_mention	16682	16683	.
I-api_mention	16683	16699	withMaximumValue
I-api_mention	16699	16700	(
I-api_mention	16700	16701	)
O	16702	16703	.

O	16704	16712	Calendar
O	16713	16720	systems
O	16721	16724	JSR
O	16724	16725	-
O	16725	16728	310
O	16729	16735	offers
O	16736	16737	4
O	16738	16743	extra
O	16744	16752	calendar
O	16753	16760	systems
O	16760	16761	.

O	16762	16765	The
O	16766	16770	most
O	16771	16782	interesting
O	16783	16786	one
O	16787	16789	is
O	16790	16798	Umalqura
O	16799	16800	(
O	16800	16804	used
O	16805	16807	in
O	16808	16813	Saudi
O	16814	16820	Arabia
O	16820	16821	)
O	16821	16822	.

O	16823	16826	The
O	16827	16832	other
O	16833	16834	3
O	16835	16838	are
O	16838	16839	:
O	16840	16846	Minguo
O	16847	16848	(
O	16848	16854	Taiwan
O	16854	16855	)
O	16855	16856	,
O	16857	16865	Japanese
O	16866	16867	(
O	16867	16871	only
O	16872	16875	the
O	16876	16882	modern
O	16883	16891	calendar
O	16892	16897	since
O	16898	16902	1871
O	16902	16903	!
O	16903	16904	)
O	16905	16908	and
O	16909	16921	ThaiBuddhist
O	16922	16923	(
O	16923	16927	only
O	16928	16935	correct
O	16936	16941	after
O	16942	16946	1940
O	16946	16947	)
O	16947	16948	.

O	16949	16953	Joda
O	16953	16954	-
O	16954	16958	Time
O	16959	16965	offers
O	16966	16968	an
O	16969	16976	Islamic
O	16977	16985	calendar
O	16986	16991	based
O	16992	16994	on
O	16995	17006	calculatory
O	17007	17011	base
O	17012	17013	-
O	17014	17017	not
O	17018	17019	a
O	17020	17028	sighting
O	17028	17029	-
O	17029	17034	based
O	17035	17043	calendar
O	17044	17048	like
O	17049	17057	Umalqura
O	17057	17058	.

O	17059	17063	Thai
O	17063	17064	-
O	17064	17072	Buddhist
O	17073	17075	is
O	17076	17080	also
O	17081	17088	offered
O	17089	17091	by
O	17092	17096	Joda
O	17096	17097	-
O	17097	17101	Time
O	17102	17104	in
O	17105	17106	a
O	17107	17114	similar
O	17115	17119	form
O	17119	17120	,
O	17121	17127	Minguo
O	17128	17131	and
O	17132	17135	the
O	17136	17144	japanese
O	17145	17148	one
O	17149	17152	not
O	17152	17153	.

O	17154	17163	Otherwise
O	17164	17168	Joda
O	17168	17169	-
O	17169	17173	Time
O	17174	17180	offers
O	17181	17187	coptic
O	17188	17191	and
O	17192	17200	ethiopic
O	17201	17209	calendar
O	17209	17210	,
O	17211	17214	too
O	17215	17216	(
O	17216	17219	but
O	17220	17227	without
O	17228	17231	any
O	17232	17239	support
O	17240	17243	for
O	17244	17264	internationalization
O	17264	17265	)
O	17265	17266	.

O	17267	17271	More
O	17272	17283	interesting
O	17284	17287	for
O	17288	17297	Europeans
O	17297	17298	:
O	17299	17303	Joda
O	17303	17304	-
O	17304	17308	Time
O	17309	17313	also
O	17314	17320	offers
O	17321	17322	a
O	17323	17332	Gregorian
O	17333	17334	,
O	17335	17341	Julian
O	17342	17345	and
O	17346	17351	mixed
O	17351	17352	-
O	17352	17361	gregorian
O	17361	17362	-
O	17362	17368	julian
O	17369	17377	calendar
O	17377	17378	.

O	17379	17386	However
O	17386	17387	,
O	17388	17391	the
O	17392	17401	practical
O	17402	17407	value
O	17408	17411	for
O	17412	17416	real
O	17417	17427	historical
O	17428	17440	calculations
O	17441	17443	is
O	17444	17451	limited
O	17452	17459	because
O	17460	17469	important
O	17470	17478	features
O	17479	17483	like
O	17484	17493	different
O	17494	17498	year
O	17499	17505	starts
O	17506	17508	in
O	17509	17513	date
O	17514	17521	history
O	17522	17525	are
O	17526	17529	not
O	17530	17539	supported
O	17540	17542	at
O	17543	17546	all
O	17547	17548	(
O	17548	17551	the
O	17552	17556	same
O	17557	17566	criticism
O	17567	17569	is
O	17570	17575	valid
O	17576	17579	for
O	17580	17583	old
B-api_mention	17584	17588	java
I-api_mention	17588	17589	.
I-api_mention	17589	17593	util
I-api_mention	17593	17594	.
I-api_mention	17594	17611	GregorianCalendar
O	17612	17613	)
O	17613	17614	.

O	17615	17620	Other
O	17621	17630	calendars
O	17631	17635	like
O	17636	17642	Hebrew
O	17643	17645	or
O	17646	17653	Persian
O	17654	17656	or
O	17657	17662	Hindu
O	17663	17666	are
O	17667	17677	completely
O	17678	17685	missing
O	17686	17688	in
O	17689	17693	both
O	17694	17703	libraries
O	17703	17704	.

O	17705	17710	Epoch
O	17711	17715	days
O	17716	17719	JSR
O	17719	17720	-
O	17720	17723	310
O	17724	17727	has
O	17728	17731	the
O	17732	17737	class
B-api_mention	17738	17750	JulianFields
O	17751	17756	while
O	17757	17761	Joda
O	17761	17762	-
O	17762	17766	Time
O	17767	17768	(
O	17768	17775	version
O	17776	17777	2
O	17777	17778	.
O	17778	17779	0
O	17779	17780	)
O	17781	17787	offers
O	17788	17792	some
O	17793	17799	helper
O	17800	17807	methods
O	17808	17810	in
O	17811	17814	the
O	17815	17820	class
B-api_mention	17821	17834	DateTimeUtils
O	17835	17836	.

O	17837	17843	Clocks
O	17844	17847	JSR
O	17847	17848	-
O	17848	17851	310
O	17852	17855	has
O	17856	17858	no
O	17859	17868	interface
O	17869	17870	(
O	17870	17871	a
O	17872	17878	design
O	17879	17886	mistake
O	17886	17887	)
O	17888	17891	but
O	17892	17894	an
O	17895	17903	abstract
O	17904	17909	class
B-api_mention	17910	17914	java
I-api_mention	17914	17915	.
I-api_mention	17915	17919	time
I-api_mention	17919	17920	.
I-api_mention	17920	17925	Clock
O	17926	17931	which
O	17932	17935	can
O	17936	17938	be
O	17939	17943	used
O	17944	17947	for
O	17948	17951	any
O	17952	17957	clock
O	17958	17968	dependency
O	17969	17978	injection
O	17978	17979	.

O	17980	17984	Joda
O	17984	17985	-
O	17985	17989	Time
O	17990	17996	offers
O	17997	18000	the
O	18001	18010	interface
B-api_mention	18011	18025	MillisProvider
O	18026	18029	and
O	18030	18034	some
O	18035	18041	helper
O	18042	18049	methods
O	18050	18052	in
B-api_mention	18053	18066	DateTimeUtils
O	18067	18074	instead
O	18074	18075	.

O	18076	18078	So
O	18079	18083	this
O	18084	18087	way
O	18088	18092	Joda
O	18092	18093	-
O	18093	18097	Time
O	18098	18100	is
O	18101	18105	also
O	18106	18113	capable
O	18114	18116	of
O	18117	18127	supporting
O	18128	18132	test
O	18132	18133	-
O	18133	18139	driven
O	18140	18146	models
O	18147	18151	with
O	18152	18161	different
O	18162	18168	clocks
O	18169	18170	(
O	18170	18177	mocking
O	18178	18181	etc
O	18181	18182	.
O	18182	18183	)
O	18183	18184	.

O	18185	18193	Duration
O	18194	18204	arithmetic
O	18205	18209	Both
O	18210	18219	libraries
O	18220	18227	support
O	18228	18231	the
O	18232	18243	calculation
O	18244	18246	of
O	18247	18251	time
O	18252	18261	distances
O	18262	18264	in
O	18265	18268	one
O	18269	18271	or
O	18272	18276	more
O	18277	18285	temporal
O	18286	18291	units
O	18291	18292	.

O	18293	18300	However
O	18300	18301	,
O	18302	18306	when
O	18307	18315	handling
O	18316	18322	single
O	18322	18323	-
O	18323	18327	unit
O	18327	18328	-
O	18328	18337	durations
O	18338	18341	the
O	18342	18345	JSR
O	18345	18346	-
O	18346	18349	310
O	18349	18350	-
O	18350	18355	style
O	18356	18358	is
O	18359	18368	obviously
O	18369	18374	nicer
O	18375	18376	(
O	18376	18379	and
O	18380	18384	long
O	18384	18385	-
O	18385	18390	based
O	18391	18398	instead
O	18399	18401	of
O	18402	18407	using
O	18408	18411	int
O	18411	18412	)
O	18412	18413	:
O	18414	18417	JSR
O	18417	18418	-
O	18418	18421	310
O	18422	18423	=
O	18423	18424	>
O	18425	18429	long
O	18430	18434	days
O	18435	18436	=
B-api_mention	18437	18447	ChronoUnit
I-api_mention	18447	18448	.
I-api_mention	18448	18452	DAYS
I-api_mention	18452	18453	.
I-api_mention	18453	18460	between
I-api_mention	18460	18461	(
I-api_mention	18461	18465	args
I-api_mention	18465	18466	)
O	18466	18467	;
O	18468	18472	Joda
O	18472	18473	-
O	18473	18477	Time
O	18478	18479	=
O	18479	18480	>
O	18481	18484	int
O	18485	18489	days
O	18490	18491	=
B-api_mention	18492	18496	DAYS
I-api_mention	18496	18497	.
I-api_mention	18497	18508	daysBetween
I-api_mention	18508	18509	(
I-api_mention	18509	18513	args
I-api_mention	18513	18514	)
I-api_mention	18514	18515	.
I-api_mention	18515	18522	getDays
I-api_mention	18522	18523	(
I-api_mention	18523	18527	args
I-api_mention	18527	18528	)
O	18528	18529	;
O	18530	18538	Handling
O	18539	18541	of
O	18542	18550	multiple
O	18550	18551	-
O	18551	18555	unit
O	18555	18556	-
O	18556	18565	durations
O	18566	18569	are
O	18570	18574	also
O	18575	18584	different
O	18584	18585	.

O	18586	18590	Even
O	18591	18594	the
O	18595	18606	calculation
O	18607	18614	results
O	18615	18618	can
O	18619	18625	differ
O	18626	18627	-
O	18628	18631	see
O	18632	18636	this
O	18637	18643	closed
O	18644	18648	Joda
O	18648	18649	-
O	18649	18653	Time
O	18654	18659	issue
O	18660	18661	.

O	18662	18667	While
O	18668	18671	JSR
O	18671	18672	-
O	18672	18675	310
O	18676	18679	use
O	18680	18681	a
O	18682	18686	very
O	18687	18693	simple
O	18694	18697	and
O	18698	18705	limited
O	18706	18714	approach
O	18715	18717	to
O	18718	18721	use
O	18722	18726	just
O	18727	18730	the
O	18731	18738	classes
B-api_mention	18739	18745	Period
O	18746	18747	(
O	18747	18755	duration
O	18756	18761	based
O	18762	18764	on
O	18765	18770	years
O	18770	18771	,
O	18772	18778	months
O	18779	18782	and
O	18783	18787	days
O	18787	18788	)
O	18789	18792	and
B-api_mention	18793	18801	Duration
O	18802	18803	(
O	18803	18808	based
O	18809	18811	on
O	18812	18819	seconds
O	18820	18823	and
O	18824	18835	nanoseconds
O	18835	18836	)
O	18836	18837	,
O	18838	18842	Joda
O	18842	18843	-
O	18843	18847	Time
O	18848	18852	uses
O	18853	18854	a
O	18855	18859	more
O	18860	18873	sophisticated
O	18874	18877	way
O	18878	18883	using
O	18884	18887	the
O	18888	18893	class
O	18894	18904	PeriodType
O	18905	18907	in
O	18908	18913	order
O	18914	18916	to
O	18917	18924	control
O	18925	18927	in
O	18928	18933	which
O	18934	18939	units
O	18940	18941	a
O	18942	18950	duration
O	18951	18952	(
O	18952	18956	Joda
O	18956	18957	-
O	18957	18961	Time
O	18962	18966	call
O	18967	18969	it
O	18970	18971	"
O	18971	18977	Period
O	18977	18978	"
O	18978	18979	)
O	18980	18985	shall
O	18986	18988	be
O	18989	18998	expressed
O	18998	18999	.

O	19000	19005	While
O	19006	19009	the
B-api_mention	19010	19020	PeriodType
O	19021	19022	-
O	19022	19025	API
O	19026	19028	is
O	19029	19036	somehow
O	19037	19044	awkward
O	19045	19047	to
O	19048	19051	use
O	19052	19053	a
O	19054	19061	similar
O	19062	19065	way
O	19066	19068	is
O	19069	19072	not
O	19073	19080	offered
O	19081	19083	by
O	19084	19087	JSR
O	19087	19088	-
O	19088	19091	310
O	19092	19094	at
O	19095	19098	all
O	19098	19099	.

O	19100	19110	Especially
O	19111	19113	it
O	19114	19116	is
O	19117	19120	not
O	19121	19124	yet
O	19125	19133	possible
O	19134	19136	in
O	19137	19140	JSR
O	19140	19141	-
O	19141	19144	310
O	19145	19147	to
O	19148	19154	define
O	19155	19160	mixed
O	19161	19165	date
O	19166	19169	and
O	19170	19174	time
O	19175	19184	durations
O	19185	19186	(
O	19186	19191	based
O	19192	19194	on
O	19195	19199	days
O	19200	19203	and
O	19204	19209	hours
O	19210	19213	for
O	19214	19221	example
O	19221	19222	)
O	19222	19223	.

O	19224	19226	So
O	19227	19229	be
O	19230	19236	warned
O	19237	19239	if
O	19240	19242	it
O	19243	19248	comes
O	19249	19251	to
O	19252	19261	migration
O	19262	19266	from
O	19267	19270	one
O	19271	19278	library
O	19279	19281	to
O	19282	19289	another
O	19289	19290	.

O	19291	19294	The
O	19295	19304	libraries
O	19305	19307	in
O	19308	19318	discussion
O	19319	19322	are
O	19323	19335	incompatible
O	19336	19337	-
O	19338	19345	despite
O	19346	19348	of
O	19349	19358	partially
O	19359	19363	same
O	19364	19369	class
O	19370	19375	names
O	19375	19376	.

O	19377	19386	Intervals
O	19387	19390	JSR
O	19390	19391	-
O	19391	19394	310
O	19395	19399	does
O	19400	19403	not
O	19404	19411	support
O	19412	19416	this
O	19417	19424	feature
O	19425	19430	while
O	19431	19435	Joda
O	19435	19436	-
O	19436	19440	Time
O	19441	19444	has
O	19445	19452	limited
O	19453	19460	support
O	19460	19461	.

O	19462	19465	See
O	19466	19470	also
O	19471	19475	this
O	19476	19478	SO
O	19478	19479	-
O	19479	19485	answer
O	19486	19487	.

O	19488	19498	Formatting
O	19499	19502	and
O	19503	19510	Parsing
O	19511	19515	Best
O	19516	19519	way
O	19520	19522	to
O	19523	19530	compare
O	19531	19535	both
O	19536	19545	libraries
O	19546	19548	is
O	19549	19551	to
O	19552	19556	view
O	19557	19560	the
O	19561	19566	equal
O	19566	19567	-
O	19567	19572	named
O	19573	19580	classes
B-api_mention	19581	19605	DateTimeFormatterBuilder
O	19606	19607	(
O	19607	19610	JSR
O	19610	19611	-
O	19611	19614	310
O	19614	19615	)
O	19616	19619	and
B-api_mention	19620	19644	DateTimeFormatterBuilder
O	19645	19646	(
O	19646	19650	Joda
O	19650	19651	-
O	19651	19655	Time
O	19655	19656	)
O	19656	19657	.

O	19658	19661	The
O	19662	19665	JSR
O	19665	19666	-
O	19666	19669	310
O	19669	19670	-
O	19670	19677	variant
O	19678	19680	is
O	19681	19682	a
O	19683	19689	little
O	19690	19693	bit
O	19694	19698	more
O	19699	19707	powerful
O	19708	19709	(
O	19709	19712	can
O	19713	19717	also
O	19718	19724	handle
O	19725	19728	any
O	19729	19733	kind
O	19734	19736	of
B-api_mention	19737	19750	TemporalField
O	19751	19759	provided
O	19760	19763	the
O	19764	19769	field
O	19770	19781	implementor
O	19782	19785	has
O	19786	19793	managed
O	19794	19796	to
O	19797	19801	code
O	19802	19806	some
O	19807	19816	extension
O	19817	19823	points
O	19824	19828	like
B-api_mention	19829	19836	resolve
I-api_mention	19836	19837	(
I-api_mention	19837	19838	)
O	19839	19840	)
O	19840	19841	.

O	19842	19846	Most
O	19847	19856	important
O	19857	19867	difference
O	19868	19870	is
O	19871	19878	however
O	19879	19880	-
O	19881	19883	in
O	19884	19886	my
O	19887	19894	opinion
O	19894	19895	:
O	19896	19899	JSR
O	19899	19900	-
O	19900	19903	310
O	19904	19907	can
O	19908	19912	much
O	19913	19919	better
O	19920	19925	parse
O	19926	19934	timezone
O	19935	19940	names
O	19941	19942	(
O	19942	19948	format
O	19949	19956	pattern
O	19957	19963	symbol
O	19964	19965	z
O	19965	19966	)
O	19967	19972	while
O	19973	19977	Joda
O	19977	19978	-
O	19978	19982	Time
O	19983	19988	could
O	19989	19992	not
O	19993	19995	do
O	19996	20000	this
O	20001	20003	at
O	20004	20007	all
O	20008	20010	in
O	20011	20014	its
O	20015	20022	earlier
O	20023	20031	versions
O	20032	20035	and
O	20036	20039	now
O	20040	20044	only
O	20045	20047	in
O	20048	20049	a
O	20050	20054	very
O	20055	20062	limited
O	20063	20066	way
O	20066	20067	.

O	20068	20075	Another
O	20076	20085	advantage
O	20086	20088	of
O	20089	20092	JSR
O	20092	20093	-
O	20093	20096	310
O	20097	20099	is
O	20100	20107	support
O	20108	20111	for
O	20112	20122	standalone
O	20123	20128	month
O	20129	20134	names
O	20135	20140	which
O	20141	20143	is
O	20144	20153	important
O	20154	20156	in
O	20157	20166	languages
O	20167	20171	like
O	20172	20179	Russian
O	20180	20182	or
O	20183	20189	Polish
O	20190	20193	etc
O	20193	20194	.

O	20195	20199	Joda
O	20199	20200	-
O	20200	20204	Time
O	20205	20208	has
O	20209	20211	no
O	20212	20218	access
O	20219	20221	to
O	20222	20226	such
O	20227	20236	resources
O	20237	20238	-
O	20239	20242	not
O	20243	20247	even
O	20248	20250	on
O	20251	20255	Java
O	20255	20256	-
O	20256	20257	8
O	20258	20267	platforms
O	20267	20268	.

O	20269	20272	The
O	20273	20280	pattern
O	20281	20287	syntax
O	20288	20290	in
O	20291	20294	JSR
O	20294	20295	-
O	20295	20298	310
O	20299	20301	is
O	20302	20306	also
O	20307	20311	more
O	20312	20320	flexible
O	20321	20325	than
O	20326	20328	in
O	20329	20333	Joda
O	20333	20334	-
O	20334	20338	Time
O	20338	20339	,
O	20340	20346	allows
O	20347	20350	for
O	20351	20359	optional
O	20360	20368	sections
O	20369	20370	(
O	20370	20375	using
O	20376	20382	square
O	20383	20391	brackets
O	20391	20392	)
O	20392	20393	,
O	20394	20396	is
O	20397	20401	more
O	20402	20412	orientated
O	20413	20420	towards
O	20421	20425	CLDR
O	20425	20426	-
O	20426	20434	standard
O	20435	20438	and
O	20439	20445	offers
O	20446	20453	padding
O	20454	20455	(
O	20455	20461	letter
O	20462	20468	symbol
O	20469	20470	p
O	20470	20471	)
O	20472	20475	and
O	20476	20480	more
O	20481	20487	fields
O	20487	20488	.

O	20489	20498	Otherwise
O	20499	20501	it
O	20502	20508	should
O	20509	20511	be
O	20512	20517	noted
O	20518	20522	that
O	20523	20527	Joda
O	20527	20528	-
O	20528	20532	Time
O	20533	20536	can
O	20537	20543	format
O	20544	20553	durations
O	20554	20559	using
B-api_mention	20560	20575	PeriodFormatter
O	20576	20577	.

O	20578	20581	JSR
O	20581	20582	-
O	20582	20585	310
O	20586	20592	cannot
O	20593	20595	do
O	20596	20600	this
O	20600	20601	.

O	20602	20606	Hope
O	20607	20611	this
O	20612	20620	overview
O	20621	20626	helps
O	20626	20627	.

O	20628	20631	All
O	20632	20635	the
O	20636	20644	gathered
O	20645	20656	information
O	20657	20659	is
O	20660	20666	mainly
O	20667	20672	there
O	20673	20676	due
O	20677	20679	to
O	20680	20682	my
O	20683	20690	efforts
O	20691	20694	and
O	20695	20709	investigations
O	20710	20713	how
O	20714	20716	to
O	20717	20723	design
O	20724	20727	and
O	20728	20737	implement
O	20738	20739	a
O	20740	20746	better
O	20747	20751	date
O	20751	20752	-
O	20752	20755	and
O	20755	20756	-
O	20756	20760	time
O	20761	20768	library
O	20769	20770	(
O	20770	20777	nothing
O	20778	20780	is
O	20781	20788	perfect
O	20788	20789	)
O	20789	20790	.

O	20791	20797	Update
O	20798	20802	from
O	20803	20807	2015
O	20807	20808	-
O	20808	20810	06
O	20810	20811	-
O	20811	20813	24
O	20813	20814	:
O	20815	20824	Meanwhile
O	20825	20826	I
O	20827	20831	have
O	20832	20837	found
O	20838	20841	the
O	20842	20846	time
O	20847	20849	to
O	20850	20855	write
O	20856	20859	and
O	20860	20867	publish
O	20868	20869	a
O	20870	20877	tabular
O	20878	20886	overview
O	20887	20890	for
O	20891	20900	different
O	20901	20905	time
O	20906	20915	libraries
O	20916	20918	in
O	20919	20923	Java
O	20923	20924	.

O	20925	20928	The
O	20929	20935	tables
O	20936	20940	also
O	20941	20948	contain
O	20949	20950	a
O	20951	20961	comparison
O	20962	20969	between
O	20970	20974	Joda
O	20974	20975	-
O	20975	20979	Time
O	20980	20982	v2
O	20982	20983	.
O	20983	20984	8
O	20984	20985	.
O	20985	20986	1
O	20987	20990	and
O	20991	20995	Java
O	20995	20996	-
O	20996	20997	8
O	20998	20999	(
O	20999	21002	JSR
O	21002	21003	-
O	21003	21006	310
O	21006	21007	)
O	21007	21008	.

O	21009	21011	It
O	21012	21014	is
O	21015	21019	more
O	21020	21028	detailed
O	21029	21033	than
O	21034	21038	this
O	21039	21043	post
O	21043	21044	.

O	21046	21054	Question
O	21054	21055	-
O	21055	21063	27625611
O	21063	21064	,
O	21065	21071	answer
O	21071	21072	-
O	21072	21080	27625722

O	21081	21088	Because
B-api_mention	21089	21099	nextDouble
O	21100	21105	works
O	21106	21110	like
O	21111	21115	this
O	21115	21116	:
O	21117	21118	(
O	21119	21125	source
O	21126	21127	)
O	21128	21129	#
O	21129	21132	pre
B-api_mention	21133	21137	next
I-api_mention	21137	21138	(
I-api_mention	21138	21142	args
I-api_mention	21142	21143	)
O	21144	21149	makes
O	21150	21151	x
O	21152	21158	random
O	21159	21163	bits
O	21163	21164	.

O	21165	21168	Now
O	21169	21172	why
O	21173	21177	does
O	21178	21182	this
O	21183	21189	matter
O	21189	21190	?

O	21191	21198	Because
O	21199	21204	about
O	21205	21209	half
O	21210	21213	the
O	21214	21221	numbers
O	21222	21231	generated
O	21232	21234	by
O	21235	21238	the
O	21239	21244	first
O	21245	21249	part
O	21250	21251	(
O	21251	21257	before
O	21258	21261	the
O	21262	21270	division
O	21270	21271	)
O	21272	21275	are
O	21276	21280	less
O	21281	21285	than
O	21286	21288	1L
O	21289	21290	<
O	21290	21291	<
O	21292	21294	52
O	21295	21296	,
O	21297	21300	and
O	21301	21310	therefore
O	21311	21316	their
O	21317	21328	significand
O	21329	21334	doesn
O	21334	21335	'
O	21335	21336	t
O	21337	21345	entirely
O	21346	21350	fill
O	21351	21354	the
O	21355	21357	53
O	21358	21362	bits
O	21363	21367	that
O	21368	21370	it
O	21371	21376	could
O	21377	21381	fill
O	21381	21382	,
O	21383	21390	meaning
O	21391	21394	the
O	21395	21400	least
O	21401	21412	significant
O	21413	21416	bit
O	21417	21419	of
O	21420	21423	the
O	21424	21435	significand
O	21436	21438	is
O	21439	21445	always
O	21446	21450	zero
O	21451	21454	for
O	21455	21460	those
O	21460	21461	.

O	21462	21469	Because
O	21470	21472	of
O	21473	21476	the
O	21477	21483	amount
O	21484	21486	of
O	21487	21496	attention
O	21497	21501	this
O	21502	21504	is
O	21505	21514	receiving
O	21514	21515	,
O	21516	21520	here
O	21520	21521	'
O	21521	21522	s
O	21523	21527	some
O	21528	21533	extra
O	21534	21545	explanation
O	21546	21548	of
O	21549	21553	what
O	21554	21555	a
O	21556	21562	double
O	21563	21565	in
O	21566	21570	Java
O	21571	21572	(
O	21572	21575	and
O	21576	21580	many
O	21581	21586	other
O	21587	21596	languages
O	21596	21597	)
O	21598	21604	really
O	21605	21610	looks
O	21611	21615	like
O	21616	21619	and
O	21620	21623	why
O	21624	21626	it
O	21627	21635	mattered
O	21636	21638	in
O	21639	21643	this
O	21644	21652	question
O	21652	21653	.

O	21654	21663	Basically
O	21663	21664	,
O	21665	21666	a
O	21667	21673	double
O	21674	21679	looks
O	21680	21684	like
O	21685	21689	this
O	21689	21690	:
O	21691	21692	(
O	21693	21699	source
O	21700	21701	)
O	21702	21703	#
O	21703	21706	img
O	21707	21708	A
O	21709	21713	very
O	21714	21723	important
O	21724	21730	detail
O	21731	21734	not
O	21735	21742	visible
O	21743	21745	in
O	21746	21750	this
O	21751	21758	picture
O	21759	21761	is
O	21762	21766	that
O	21767	21774	numbers
O	21775	21778	are
O	21779	21780	"
O	21780	21790	normalized
O	21790	21791	"
O	21792	21793	1
O	21794	21798	such
O	21799	21803	that
O	21804	21807	the
O	21808	21810	53
O	21811	21814	bit
O	21815	21823	fraction
O	21824	21830	starts
O	21831	21835	with
O	21836	21837	a
O	21838	21839	1
O	21840	21841	(
O	21841	21843	by
O	21844	21852	choosing
O	21853	21856	the
O	21857	21865	exponent
O	21866	21870	such
O	21871	21875	that
O	21876	21878	it
O	21879	21881	is
O	21882	21884	so
O	21884	21885	)
O	21885	21886	,
O	21887	21891	that
O	21892	21893	1
O	21894	21896	is
O	21897	21901	then
O	21902	21909	omitted
O	21909	21910	.

O	21911	21915	That
O	21916	21918	is
O	21919	21922	why
O	21923	21926	the
O	21927	21934	picture
O	21935	21940	shows
O	21941	21943	52
O	21944	21948	bits
O	21949	21952	for
O	21953	21956	the
O	21957	21965	fraction
O	21966	21967	(
O	21967	21978	significand
O	21978	21979	)
O	21980	21983	but
O	21984	21989	there
O	21990	21993	are
O	21994	22005	effectively
O	22006	22008	53
O	22009	22013	bits
O	22014	22016	in
O	22017	22019	it
O	22019	22020	.

O	22021	22024	The
O	22025	22038	normalization
O	22039	22044	means
O	22045	22049	that
O	22050	22052	if
O	22053	22055	in
O	22056	22059	the
O	22060	22064	code
O	22065	22068	for
B-api_mention	22069	22079	nextDouble
O	22080	22083	the
O	22084	22088	53rd
O	22089	22092	bit
O	22093	22095	is
O	22096	22099	set
O	22099	22100	,
O	22101	22105	that
O	22106	22109	bit
O	22110	22112	is
O	22113	22116	the
O	22117	22125	implicit
O	22126	22133	leading
O	22134	22135	1
O	22136	22139	and
O	22140	22142	it
O	22143	22147	goes
O	22148	22152	away
O	22152	22153	,
O	22154	22157	and
O	22158	22161	the
O	22162	22167	other
O	22168	22170	52
O	22171	22175	bits
O	22176	22179	are
O	22180	22186	copied
O	22187	22196	literally
O	22197	22199	to
O	22200	22203	the
O	22204	22215	significand
O	22216	22218	of
O	22219	22222	the
O	22223	22232	resulting
O	22233	22239	double
O	22240	22241	.

O	22242	22244	If
O	22245	22249	that
O	22250	22253	bit
O	22254	22256	is
O	22257	22260	not
O	22261	22264	set
O	22265	22272	however
O	22272	22273	,
O	22274	22277	the
O	22278	22287	remaining
O	22288	22292	bits
O	22293	22297	must
O	22298	22300	be
O	22301	22308	shifted
O	22309	22313	left
O	22314	22319	until
O	22320	22322	it
O	22323	22330	becomes
O	22331	22334	set
O	22334	22335	.

O	22336	22338	On
O	22339	22346	average
O	22346	22347	,
O	22348	22352	half
O	22353	22356	the
O	22357	22366	generated
O	22367	22374	numbers
O	22375	22379	fall
O	22380	22384	into
O	22385	22388	the
O	22389	22393	case
O	22394	22399	where
O	22400	22403	the
O	22404	22415	significand
O	22416	22419	was
O	22420	22423	not
O	22424	22431	shifted
O	22432	22436	left
O	22437	22439	at
O	22440	22443	all
O	22444	22445	(
O	22445	22448	and
O	22449	22454	about
O	22455	22459	half
O	22460	22465	those
O	22466	22470	have
O	22471	22472	a
O	22473	22474	0
O	22475	22477	as
O	22478	22483	their
O	22484	22489	least
O	22490	22501	significant
O	22502	22505	bit
O	22505	22506	)
O	22506	22507	,
O	22508	22511	and
O	22512	22515	the
O	22516	22521	other
O	22522	22526	half
O	22527	22529	is
O	22530	22537	shifted
O	22538	22540	by
O	22541	22543	at
O	22544	22549	least
O	22550	22551	1
O	22552	22553	(
O	22553	22555	or
O	22556	22558	is
O	22559	22563	just
O	22564	22574	completely
O	22575	22579	zero
O	22579	22580	)
O	22581	22583	so
O	22584	22589	their
O	22590	22595	least
O	22596	22607	significant
O	22608	22611	bit
O	22612	22614	is
O	22615	22621	always
O	22622	22623	0
O	22623	22624	.

O	22625	22626	1
O	22626	22627	:
O	22628	22631	not
O	22632	22638	always
O	22638	22639	,
O	22640	22647	clearly
O	22648	22650	it
O	22651	22657	cannot
O	22658	22660	be
O	22661	22665	done
O	22666	22669	for
O	22670	22674	zero
O	22674	22675	,
O	22676	22681	which
O	22682	22685	has
O	22686	22688	no
O	22689	22696	highest
O	22697	22698	1
O	22698	22699	.

O	22700	22705	These
O	22706	22713	numbers
O	22714	22717	are
O	22718	22724	called
O	22725	22733	denormal
O	22734	22736	or
O	22737	22746	subnormal
O	22747	22754	numbers
O	22754	22755	,
O	22756	22759	see
O	22760	22769	wikipedia
O	22769	22770	:
O	22770	22778	denormal
O	22779	22785	number
O	22786	22787	.

O	22789	22797	Question
O	22797	22798	-
O	22798	22806	26375932
O	22806	22807	,
O	22808	22814	answer
O	22814	22815	-
O	22815	22823	26407637

O	22824	22826	It
O	22827	22829	is
O	22830	22832	an
O	22833	22840	integer
O	22841	22849	overflow
O	22849	22850	.

O	22851	22854	The
O	22855	22858	int
O	22859	22863	data
O	22864	22868	type
O	22869	22871	is
O	22872	22873	4
O	22874	22879	bytes
O	22879	22880	,
O	22881	22883	or
O	22884	22886	32
O	22887	22891	bits
O	22891	22892	.

O	22893	22902	Therefore
O	22902	22903	,
O	22904	22911	numbers
O	22912	22918	larger
O	22919	22923	than
O	22924	22925	2
O	22925	22926	^
O	22926	22927	(
O	22927	22929	32
O	22930	22931	-
O	22932	22933	1
O	22933	22934	)
O	22935	22936	-
O	22937	22938	1
O	22939	22940	(
O	22940	22941	2
O	22941	22942	,
O	22942	22945	147
O	22945	22946	,
O	22946	22949	483
O	22949	22950	,
O	22950	22953	647
O	22953	22954	)
O	22955	22961	cannot
O	22962	22964	be
O	22965	22971	stored
O	22972	22974	in
O	22975	22979	this
O	22980	22984	data
O	22985	22989	type
O	22989	22990	.

O	22991	22995	Your
O	22996	23005	numerical
O	23006	23012	values
O	23013	23017	will
O	23018	23020	be
O	23021	23030	incorrect
O	23030	23031	.

O	23032	23035	For
O	23036	23040	very
O	23041	23046	large
O	23047	23054	numbers
O	23054	23055	,
O	23056	23059	you
O	23060	23064	will
O	23065	23069	want
O	23070	23072	to
O	23073	23079	import
O	23080	23083	and
O	23084	23087	use
O	23088	23091	the
O	23092	23097	class
B-api_mention	23098	23102	java
I-api_mention	23102	23103	.
I-api_mention	23103	23107	math
I-api_mention	23107	23108	.
I-api_mention	23108	23118	BigInteger
O	23118	23119	:
O	23120	23121	#
O	23121	23124	pre
O	23125	23129	NOTE
O	23129	23130	:
O	23131	23134	For
O	23135	23144	numerical
O	23145	23151	values
O	23152	23156	that
O	23157	23160	are
O	23161	23166	still
O	23167	23170	too
O	23171	23176	large
O	23177	23180	for
O	23181	23184	the
O	23185	23188	int
O	23189	23193	data
O	23194	23198	type
O	23198	23199	,
O	23200	23203	but
O	23204	23209	small
O	23210	23216	enough
O	23217	23219	to
O	23220	23223	fit
O	23224	23230	within
O	23231	23232	8
O	23233	23238	bytes
O	23239	23240	(
O	23240	23248	absolute
O	23249	23254	value
O	23255	23259	less
O	23260	23264	than
O	23265	23267	or
O	23268	23273	equal
O	23274	23276	to
O	23277	23278	2
O	23278	23279	^
O	23279	23280	(
O	23280	23282	64
O	23283	23284	-
O	23285	23286	1
O	23286	23287	)
O	23288	23289	-
O	23290	23291	1
O	23291	23292	)
O	23292	23293	,
O	23294	23297	you
O	23298	23304	should
O	23305	23313	probably
O	23314	23317	use
O	23318	23321	the
O	23322	23326	long
O	23327	23336	primitive
O	23336	23337	.

O	23338	23348	HackerRank
O	23348	23349	'
O	23349	23350	s
O	23351	23359	practice
O	23360	23368	problems
O	23369	23370	(
O	23370	23373	www
O	23373	23374	.
O	23374	23384	hackerrank
O	23384	23385	.
O	23385	23388	com
O	23388	23389	)
O	23389	23390	,
O	23391	23395	such
O	23396	23398	as
O	23399	23402	the
O	23403	23413	Algorithms
O	23414	23422	practice
O	23423	23430	section
O	23430	23431	,
O	23432	23433	(
O	23434	23435	#
O	23435	23436	a
O	23437	23438	)
O	23439	23446	include
O	23447	23451	some
O	23452	23456	very
O	23457	23461	good
O	23462	23467	large
O	23467	23468	-
O	23468	23474	number
O	23475	23484	questions
O	23485	23489	that
O	23490	23494	give
O	23495	23499	good
O	23500	23508	practice
O	23509	23514	about
O	23515	23518	how
O	23519	23521	to
O	23522	23527	think
O	23528	23533	about
O	23534	23537	the
O	23538	23549	appropriate
O	23550	23554	data
O	23555	23559	type
O	23560	23562	to
O	23563	23566	use
O	23566	23567	.

O	23569	23577	Question
O	23577	23578	-
O	23578	23586	26684562
O	23586	23587	,
O	23588	23594	answer
O	23594	23595	-
O	23595	23603	26684710

O	23604	23608	Both
B-api_mention	23609	23612	map
O	23613	23616	and
B-api_mention	23617	23624	flatMap
O	23625	23628	can
O	23629	23631	be
O	23632	23639	applied
O	23640	23642	to
O	23643	23644	a
B-api_mention	23645	23651	Stream
I-api_mention	23651	23652	<
I-api_mention	23652	23653	T
I-api_mention	23653	23654	>
O	23655	23658	and
O	23659	23663	they
O	23664	23668	both
O	23669	23675	return
O	23676	23677	a
B-api_mention	23678	23684	Stream
I-api_mention	23684	23685	<
I-api_mention	23685	23686	T
I-api_mention	23686	23687	>
O	23688	23689	.

O	23690	23693	The
O	23694	23704	difference
O	23705	23707	is
O	23708	23712	that
O	23713	23716	the
B-api_mention	23717	23720	map
O	23721	23730	operation
O	23731	23739	produces
O	23740	23743	one
O	23744	23750	output
O	23751	23756	value
O	23757	23760	for
O	23761	23765	each
O	23766	23771	input
O	23772	23777	value
O	23777	23778	,
O	23779	23786	whereas
O	23787	23790	the
B-api_mention	23791	23798	flatMap
O	23799	23808	operation
O	23809	23817	produces
O	23818	23820	an
O	23821	23830	arbitrary
O	23831	23837	number
O	23838	23839	(
O	23839	23843	zero
O	23844	23846	or
O	23847	23851	more
O	23851	23852	)
O	23853	23859	values
O	23860	23863	for
O	23864	23868	each
O	23869	23874	input
O	23875	23880	value
O	23880	23881	.

O	23882	23886	This
O	23887	23889	is
O	23890	23899	reflected
O	23900	23902	in
O	23903	23906	the
O	23907	23916	arguments
O	23917	23919	to
O	23920	23924	each
O	23925	23934	operation
O	23934	23935	.

O	23936	23939	The
O	23940	23943	map
O	23944	23953	operation
O	23954	23959	takes
O	23960	23961	a
O	23962	23970	Function
O	23971	23972	,
O	23973	23978	which
O	23979	23981	is
O	23982	23988	called
O	23989	23992	for
O	23993	23997	each
O	23998	24003	value
O	24004	24006	in
O	24007	24010	the
O	24011	24016	input
O	24017	24023	stream
O	24024	24027	and
O	24028	24036	produces
O	24037	24040	one
O	24041	24047	result
O	24048	24053	value
O	24053	24054	,
O	24055	24060	which
O	24061	24063	is
O	24064	24068	sent
O	24069	24071	to
O	24072	24075	the
O	24076	24082	output
O	24083	24089	stream
O	24089	24090	.

O	24091	24094	The
B-api_mention	24095	24102	flatMap
O	24103	24112	operation
O	24113	24118	takes
O	24119	24120	a
O	24121	24129	function
O	24130	24134	that
O	24135	24147	conceptually
O	24148	24153	wants
O	24154	24156	to
O	24157	24164	consume
O	24165	24168	one
O	24169	24174	value
O	24175	24178	and
O	24179	24186	produce
O	24187	24189	an
O	24190	24199	arbitrary
O	24200	24206	number
O	24207	24209	of
O	24210	24216	values
O	24216	24217	.

O	24218	24225	However
O	24225	24226	,
O	24227	24229	in
O	24230	24234	Java
O	24234	24235	,
O	24236	24238	it
O	24238	24239	'
O	24239	24240	s
O	24241	24251	cumbersome
O	24252	24255	for
O	24256	24257	a
O	24258	24264	method
O	24265	24267	to
O	24268	24274	return
O	24275	24277	an
O	24278	24287	arbitrary
O	24288	24294	number
O	24295	24297	of
O	24298	24304	values
O	24304	24305	,
O	24306	24311	since
O	24312	24319	methods
O	24320	24323	can
O	24324	24330	return
O	24331	24335	only
O	24336	24340	zero
O	24341	24343	or
O	24344	24347	one
O	24348	24353	value
O	24353	24354	.

O	24355	24358	One
O	24359	24364	could
O	24365	24372	imagine
O	24373	24375	an
O	24376	24379	API
O	24380	24385	where
O	24386	24389	the
O	24390	24396	mapper
O	24397	24405	function
O	24406	24409	for
B-api_mention	24410	24417	flatMap
O	24418	24423	takes
O	24424	24425	a
O	24426	24431	value
O	24432	24435	and
O	24436	24443	returns
O	24444	24446	an
O	24447	24452	array
O	24453	24455	or
O	24456	24457	a
O	24458	24462	List
O	24463	24465	of
O	24466	24472	values
O	24472	24473	,
O	24474	24479	which
O	24480	24483	are
O	24484	24488	then
O	24489	24493	sent
O	24494	24496	to
O	24497	24500	the
O	24501	24507	output
O	24507	24508	.

O	24509	24514	Given
O	24515	24519	that
O	24520	24524	this
O	24525	24527	is
O	24528	24531	the
O	24532	24539	streams
O	24540	24547	library
O	24547	24548	,
O	24549	24550	a
O	24551	24563	particularly
O	24564	24567	apt
O	24568	24571	way
O	24572	24574	to
O	24575	24584	represent
O	24585	24587	an
O	24588	24597	arbitrary
O	24598	24604	number
O	24605	24607	of
O	24608	24614	return
O	24615	24621	values
O	24622	24624	is
O	24625	24628	for
O	24629	24632	the
O	24633	24639	mapper
O	24640	24648	function
O	24649	24655	itself
O	24656	24658	to
O	24659	24665	return
O	24666	24667	a
O	24668	24674	stream
O	24674	24675	!

O	24676	24679	The
O	24680	24686	values
O	24687	24691	from
O	24692	24695	the
O	24696	24702	stream
O	24703	24711	returned
O	24712	24714	by
O	24715	24718	the
O	24719	24725	mapper
O	24726	24729	are
O	24730	24737	drained
O	24738	24742	from
O	24743	24746	the
O	24747	24753	stream
O	24754	24757	and
O	24758	24761	are
O	24762	24768	passed
O	24769	24771	to
O	24772	24775	the
O	24776	24782	output
O	24783	24789	stream
O	24789	24790	.

O	24791	24794	The
O	24795	24796	"
O	24796	24802	clumps
O	24802	24803	"
O	24804	24806	of
O	24807	24813	values
O	24814	24822	returned
O	24823	24825	by
O	24826	24830	each
O	24831	24835	call
O	24836	24838	to
O	24839	24842	the
O	24843	24849	mapper
O	24850	24858	function
O	24859	24862	are
O	24863	24866	not
O	24867	24880	distinguished
O	24881	24883	at
O	24884	24887	all
O	24888	24890	in
O	24891	24894	the
O	24895	24901	output
O	24902	24908	stream
O	24908	24909	,
O	24910	24914	thus
O	24915	24918	the
O	24919	24925	output
O	24926	24928	is
O	24929	24933	said
O	24934	24936	to
O	24937	24941	have
O	24942	24946	been
O	24947	24948	"
O	24948	24957	flattened
O	24957	24958	.
O	24958	24959	"
O	24960	24967	Typical
O	24968	24971	use
O	24972	24974	is
O	24975	24978	for
O	24979	24982	the
O	24983	24989	mapper
O	24990	24998	function
O	24999	25001	of
B-api_mention	25002	25009	flatMap
O	25010	25012	to
O	25013	25019	return
B-api_mention	25020	25026	Stream
I-api_mention	25026	25027	.
I-api_mention	25027	25032	empty
I-api_mention	25032	25033	(
I-api_mention	25033	25037	args
I-api_mention	25037	25038	)
O	25039	25041	if
O	25042	25044	it
O	25045	25050	wants
O	25051	25053	to
O	25054	25058	send
O	25059	25063	zero
O	25064	25070	values
O	25070	25071	,
O	25072	25074	or
O	25075	25084	something
O	25085	25089	like
B-api_mention	25090	25096	Stream
I-api_mention	25096	25097	.
I-api_mention	25097	25099	of
I-api_mention	25099	25100	(
I-api_mention	25100	25104	args
I-api_mention	25104	25105	)
O	25106	25108	if
O	25109	25111	it
O	25112	25117	wants
O	25118	25120	to
O	25121	25127	return
O	25128	25135	several
O	25136	25142	values
O	25142	25143	.

O	25144	25147	But
O	25148	25150	of
O	25151	25157	course
O	25158	25161	any
O	25162	25168	stream
O	25169	25172	can
O	25173	25175	be
O	25176	25184	returned
O	25184	25185	.

O	25187	25195	Question
O	25195	25196	-
O	25196	25204	27430092
O	25204	25205	,
O	25206	25212	answer
O	25212	25213	-
O	25213	25221	27430172

O	25222	25223	A
O	25224	25232	possible
O	25233	25236	use
O	25237	25241	case
O	25242	25244	is
O	25245	25247	in
O	25248	25255	testing
O	25256	25265	primality
O	25266	25268	of
O	25269	25270	a
O	25271	25276	given
O	25277	25283	number
O	25284	25285	(
O	25285	25287	at
O	25288	25292	test
O	25293	25298	which
O	25299	25301	in
O	25302	25308	itself
O	25309	25312	has
O	25313	25317	many
O	25318	25322	uses
O	25322	25323	)
O	25323	25324	.

O	25325	25328	The
B-api_mention	25329	25344	isProbablePrime
O	25345	25354	algorithm
O	25355	25359	will
O	25360	25363	run
O	25364	25368	much
O	25369	25375	faster
O	25376	25380	than
O	25381	25383	an
O	25384	25389	exact
O	25390	25399	algorithm
O	25399	25400	,
O	25401	25403	so
O	25404	25406	if
O	25407	25410	the
O	25411	25417	number
O	25418	25423	fails
B-api_mention	25424	25439	isProbablePrime
O	25440	25441	,
O	25442	25446	then
O	25447	25450	one
O	25451	25455	need
O	25456	25459	not
O	25460	25462	go
O	25463	25465	to
O	25466	25469	the
O	25470	25477	expense
O	25478	25480	of
O	25481	25488	running
O	25489	25492	the
O	25493	25497	more
O	25498	25507	expensive
O	25508	25517	algorithm
O	25517	25518	.

O	25520	25528	Question
O	25528	25529	-
O	25529	25537	27430092
O	25537	25538	,
O	25539	25545	answer
O	25545	25546	-
O	25546	25554	27449187

O	25555	25558	The
O	25559	25567	standard
O	25568	25571	use
O	25572	25576	case
O	25577	25580	for
B-api_mention	25581	25591	BigInteger
I-api_mention	25591	25592	.
I-api_mention	25592	25607	isProbablePrime
I-api_mention	25607	25608	(
I-api_mention	25608	25611	int
I-api_mention	25611	25612	)
O	25613	25615	is
O	25616	25618	in
O	25619	25631	cryptography
O	25631	25632	.

O	25633	25645	Specifically
O	25645	25646	,
O	25647	25654	certain
O	25655	25668	cryptographic
O	25669	25679	algorithms
O	25679	25680	,
O	25681	25685	such
O	25686	25688	as
O	25689	25692	RSA
O	25693	25694	,
O	25695	25702	require
O	25703	25711	randomly
O	25712	25718	chosen
O	25719	25724	large
O	25725	25731	primes
O	25731	25732	.

O	25733	25744	Importantly
O	25744	25745	,
O	25746	25753	however
O	25753	25754	,
O	25755	25760	these
O	25761	25771	algorithms
O	25772	25775	don
O	25775	25776	'
O	25776	25777	t
O	25778	25784	really
O	25785	25792	require
O	25793	25798	these
O	25799	25806	numbers
O	25807	25809	to
O	25810	25812	be
O	25813	25823	guaranteed
O	25824	25826	to
O	25827	25829	be
O	25830	25835	prime
O	25836	25837	â€”
O	25838	25842	they
O	25843	25847	just
O	25848	25852	need
O	25853	25855	to
O	25856	25858	be
O	25859	25864	prime
O	25865	25869	with
O	25870	25871	a
O	25872	25876	very
O	25877	25881	high
O	25882	25893	probability
O	25893	25894	.

O	25895	25898	How
O	25899	25903	high
O	25904	25906	is
O	25907	25911	very
O	25912	25916	high
O	25916	25917	?

O	25918	25922	Well
O	25922	25923	,
O	25924	25926	in
O	25927	25928	a
O	25929	25935	crypto
O	25936	25947	application
O	25947	25948	,
O	25949	25952	one
O	25953	25958	would
O	25959	25968	typically
O	25969	25973	call
B-api_mention	25974	25975	.
I-api_mention	25975	25990	isProbablePrime
I-api_mention	25990	25991	(
I-api_mention	25991	25995	args
I-api_mention	25995	25996	)
O	25997	26001	with
O	26002	26004	an
O	26005	26013	argument
O	26014	26023	somewhere
O	26024	26031	between
O	26032	26035	128
O	26036	26039	and
O	26040	26043	256
O	26043	26044	.

O	26045	26049	Thus
O	26049	26050	,
O	26051	26054	the
O	26055	26066	probability
O	26067	26069	of
O	26070	26071	a
O	26072	26075	non
O	26075	26076	-
O	26076	26081	prime
O	26082	26088	number
O	26089	26096	passing
O	26097	26101	such
O	26102	26103	a
O	26104	26108	test
O	26109	26111	is
O	26112	26116	less
O	26117	26121	than
O	26122	26125	one
O	26126	26128	in
O	26129	26130	2
O	26131	26134	128
O	26135	26137	or
O	26138	26139	2
O	26140	26143	256
O	26144	26145	.

O	26146	26149	Let
O	26149	26150	'
O	26150	26151	s
O	26152	26155	put
O	26156	26160	that
O	26161	26163	in
O	26164	26175	perspective
O	26175	26176	:
O	26177	26179	if
O	26180	26183	you
O	26184	26187	had
O	26188	26190	10
O	26191	26198	billion
O	26199	26208	computers
O	26208	26209	,
O	26210	26214	each
O	26215	26225	generating
O	26226	26228	10
O	26229	26236	billion
O	26237	26245	probable
O	26246	26251	prime
O	26252	26259	numbers
O	26260	26263	per
O	26264	26270	second
O	26271	26272	(
O	26272	26277	which
O	26278	26283	would
O	26284	26288	mean
O	26289	26293	less
O	26294	26298	than
O	26299	26302	one
O	26303	26308	clock
O	26309	26314	cycle
O	26315	26318	per
O	26319	26325	number
O	26326	26328	on
O	26329	26332	any
O	26333	26339	modern
O	26340	26343	CPU
O	26343	26344	)
O	26344	26345	,
O	26346	26349	and
O	26350	26353	the
O	26354	26363	primality
O	26364	26366	of
O	26367	26372	those
O	26373	26380	numbers
O	26381	26384	was
O	26385	26391	tested
O	26392	26396	with
B-api_mention	26397	26398	.
I-api_mention	26398	26413	isProbablePrime
I-api_mention	26413	26414	(
I-api_mention	26414	26418	args
I-api_mention	26418	26419	)
O	26420	26421	,
O	26422	26425	you
O	26426	26431	would
O	26431	26432	,
O	26433	26435	on
O	26436	26443	average
O	26443	26444	,
O	26445	26451	expect
O	26452	26455	one
O	26456	26459	non
O	26459	26460	-
O	26460	26465	prime
O	26466	26472	number
O	26473	26475	to
O	26476	26480	slip
O	26481	26483	in
O	26484	26488	once
O	26489	26491	in
O	26492	26497	every
O	26498	26501	100
O	26502	26509	billion
O	26510	26515	years
O	26516	26517	.

O	26518	26522	That
O	26523	26525	is
O	26525	26526	,
O	26527	26531	that
O	26532	26537	would
O	26538	26540	be
O	26541	26544	the
O	26545	26549	case
O	26549	26550	,
O	26551	26553	if
O	26554	26559	those
O	26560	26562	10
O	26563	26570	billion
O	26571	26580	computers
O	26581	26586	could
O	26587	26594	somehow
O	26595	26598	all
O	26599	26602	run
O	26603	26606	for
O	26607	26615	hundreds
O	26616	26618	of
O	26619	26627	billions
O	26628	26630	of
O	26631	26636	years
O	26637	26644	without
O	26645	26657	experiencing
O	26658	26661	any
O	26662	26670	hardware
O	26671	26679	failures
O	26679	26680	.

O	26681	26683	In
O	26684	26692	practice
O	26692	26693	,
O	26694	26700	though
O	26700	26701	,
O	26702	26704	it
O	26704	26705	'
O	26705	26706	s
O	26707	26708	a
O	26709	26712	lot
O	26713	26717	more
O	26718	26724	likely
O	26725	26728	for
O	26729	26730	a
O	26731	26737	random
O	26738	26744	cosmic
O	26745	26748	ray
O	26749	26751	to
O	26752	26758	strike
O	26759	26763	your
O	26764	26772	computer
O	26773	26775	at
O	26776	26780	just
O	26781	26784	the
O	26785	26790	right
O	26791	26795	time
O	26796	26799	and
O	26800	26805	place
O	26806	26808	to
O	26809	26813	flip
O	26814	26817	the
O	26818	26824	return
O	26825	26830	value
O	26831	26833	of
B-api_mention	26834	26835	.
I-api_mention	26835	26850	isProbablePrime
I-api_mention	26850	26851	(
I-api_mention	26851	26855	args
I-api_mention	26855	26856	)
O	26857	26861	from
O	26862	26867	false
O	26868	26870	to
O	26871	26875	true
O	26875	26876	,
O	26877	26884	without
O	26885	26892	causing
O	26893	26896	any
O	26897	26902	other
O	26903	26913	detectable
O	26914	26921	effects
O	26921	26922	,
O	26923	26927	than
O	26928	26930	it
O	26931	26933	is
O	26934	26937	for
O	26938	26939	a
O	26940	26943	non
O	26943	26944	-
O	26944	26949	prime
O	26950	26956	number
O	26957	26959	to
O	26960	26968	actually
O	26969	26973	pass
O	26974	26977	the
O	26978	26991	probabilistic
O	26992	27001	primality
O	27002	27006	test
O	27007	27009	at
O	27010	27014	that
O	27015	27024	certainty
O	27025	27030	level
O	27030	27031	.

O	27032	27034	Of
O	27035	27041	course
O	27041	27042	,
O	27043	27046	the
O	27047	27051	same
O	27052	27056	risk
O	27057	27059	of
O	27060	27066	random
O	27067	27073	cosmic
O	27074	27078	rays
O	27079	27082	and
O	27083	27088	other
O	27089	27097	hardware
O	27098	27104	faults
O	27105	27109	also
O	27110	27117	applies
O	27118	27120	to
O	27121	27134	deterministic
O	27135	27144	primality
O	27145	27150	tests
O	27151	27155	like
O	27156	27159	AKS
O	27160	27161	.

O	27162	27166	Thus
O	27166	27167	,
O	27168	27170	in
O	27171	27179	practice
O	27179	27180	,
O	27181	27185	even
O	27186	27191	these
O	27192	27197	tests
O	27198	27202	have
O	27203	27204	a
O	27205	27206	(
O	27206	27210	very
O	27211	27216	small
O	27216	27217	)
O	27218	27226	baseline
O	27227	27232	false
O	27233	27241	positive
O	27242	27246	rate
O	27247	27250	due
O	27251	27253	to
O	27254	27260	random
O	27261	27269	hardware
O	27270	27278	failures
O	27279	27280	(
O	27280	27283	not
O	27284	27286	to
O	27287	27294	mention
O	27295	27298	all
O	27299	27304	other
O	27305	27313	possible
O	27314	27321	sources
O	27322	27324	of
O	27325	27331	errors
O	27331	27332	,
O	27333	27337	such
O	27338	27340	as
O	27341	27355	implementation
O	27356	27360	bugs
O	27360	27361	)
O	27361	27362	.

O	27363	27368	Since
O	27369	27371	it
O	27371	27372	'
O	27372	27373	s
O	27374	27378	easy
O	27379	27381	to
O	27382	27386	push
O	27387	27390	the
O	27391	27400	intrinsic
O	27401	27406	false
O	27407	27415	positive
O	27416	27420	rate
O	27421	27423	of
O	27424	27427	the
O	27428	27434	Miller
O	27434	27435	â€“
O	27435	27440	Rabin
O	27441	27450	primality
O	27451	27455	test
O	27456	27460	used
O	27461	27463	by
B-api_mention	27464	27465	.
I-api_mention	27465	27480	isProbablePrime
I-api_mention	27480	27481	(
I-api_mention	27481	27485	args
I-api_mention	27485	27486	)
O	27487	27490	far
O	27491	27496	below
O	27497	27501	this
O	27502	27510	baseline
O	27511	27515	rate
O	27515	27516	,
O	27517	27523	simply
O	27524	27526	by
O	27527	27536	repeating
O	27537	27540	the
O	27541	27545	test
O	27546	27558	sufficiently
O	27559	27563	many
O	27564	27569	times
O	27569	27570	,
O	27571	27574	and
O	27575	27580	since
O	27580	27581	,
O	27582	27586	even
O	27587	27595	repeated
O	27596	27598	so
O	27599	27603	many
O	27604	27609	times
O	27609	27610	,
O	27611	27614	the
O	27615	27621	Miller
O	27621	27622	â€“
O	27622	27627	Rabin
O	27628	27632	test
O	27633	27635	is
O	27636	27641	still
O	27642	27646	much
O	27647	27653	faster
O	27654	27656	in
O	27657	27665	practice
O	27666	27670	than
O	27671	27674	the
O	27675	27679	best
O	27680	27685	known
O	27686	27699	deterministic
O	27700	27709	primality
O	27710	27715	tests
O	27716	27720	like
O	27721	27724	AKS
O	27724	27725	,
O	27726	27728	it
O	27729	27736	remains
O	27737	27740	the
O	27741	27749	standard
O	27750	27759	primality
O	27760	27764	test
O	27765	27768	for
O	27769	27782	cryptographic
O	27783	27795	applications
O	27795	27796	.

O	27797	27798	(
O	27798	27805	Besides
O	27805	27806	,
O	27807	27811	even
O	27812	27814	if
O	27815	27818	you
O	27819	27827	happened
O	27828	27830	to
O	27831	27843	accidentally
O	27844	27850	select
O	27851	27852	a
O	27853	27859	strong
O	27860	27871	pseudoprime
O	27872	27874	as
O	27875	27878	one
O	27879	27881	of
O	27882	27885	the
O	27886	27893	factors
O	27894	27896	of
O	27897	27901	your
O	27902	27905	RSA
O	27906	27913	modulus
O	27913	27914	,
O	27915	27917	it
O	27918	27923	would
O	27924	27927	not
O	27928	27937	generally
O	27938	27942	lead
O	27943	27945	to
O	27946	27947	a
O	27948	27960	catastrophic
O	27961	27968	failure
O	27968	27969	.

O	27970	27979	Typically
O	27979	27980	,
O	27981	27985	such
O	27986	27998	pseudoprimes
O	27999	28004	would
O	28005	28007	be
O	28008	28016	products
O	28017	28019	of
O	28020	28023	two
O	28024	28025	(
O	28025	28027	or
O	28028	28034	rarely
O	28035	28039	more
O	28039	28040	)
O	28041	28047	primes
O	28048	28050	of
O	28051	28064	approximately
O	28065	28069	half
O	28070	28073	the
O	28074	28080	length
O	28080	28081	,
O	28082	28087	which
O	28088	28093	means
O	28094	28098	that
O	28099	28102	you
O	28102	28103	'
O	28103	28104	d
O	28105	28108	end
O	28109	28111	up
O	28112	28116	with
O	28117	28118	a
O	28119	28124	multi
O	28124	28125	-
O	28125	28130	prime
O	28131	28134	RSA
O	28135	28138	key
O	28139	28140	.

O	28141	28143	As
O	28144	28148	long
O	28149	28151	as
O	28152	28156	none
O	28157	28159	of
O	28160	28163	the
O	28164	28171	factors
O	28172	28176	were
O	28177	28180	too
O	28181	28186	small
O	28187	28188	(
O	28188	28191	and
O	28192	28194	if
O	28195	28199	they
O	28200	28204	were
O	28204	28205	,
O	28206	28209	the
O	28210	28219	primality
O	28220	28224	test
O	28225	28231	should
O	28231	28232	'
O	28232	28234	ve
O	28235	28241	caught
O	28242	28246	them
O	28246	28247	)
O	28247	28248	,
O	28249	28252	the
O	28253	28256	RSA
O	28257	28266	algorithm
O	28267	28271	will
O	28272	28277	still
O	28278	28282	work
O	28283	28287	just
O	28288	28292	fine
O	28292	28293	,
O	28294	28297	and
O	28298	28301	the
O	28302	28305	key
O	28305	28306	,
O	28307	28315	although
O	28316	28324	somewhat
O	28325	28331	weaker
O	28332	28339	against
O	28340	28347	certain
O	28348	28353	types
O	28354	28356	of
O	28357	28364	attacks
O	28365	28369	than
O	28370	28376	normal
O	28377	28380	RSA
O	28381	28385	keys
O	28386	28388	of
O	28389	28392	the
O	28393	28397	same
O	28398	28404	length
O	28404	28405	,
O	28406	28412	should
O	28413	28418	still
O	28419	28421	be
O	28422	28432	reasonably
O	28433	28439	secure
O	28440	28442	if
O	28443	28446	you
O	28447	28451	didn
O	28451	28452	'
O	28452	28453	t
O	28454	28464	needlessly
O	28465	28470	skimp
O	28471	28473	on
O	28474	28477	the
O	28478	28481	key
O	28482	28488	length
O	28488	28489	.
O	28489	28490	)

O	28492	28500	Question
O	28500	28501	-
O	28501	28509	24651403
O	28509	28510	,
O	28511	28517	answer
O	28517	28518	-
O	28518	28526	24651855

O	28527	28529	OK
O	28529	28530	,
O	28531	28536	first
O	28537	28539	of
O	28540	28543	all
O	28543	28544	,
O	28545	28549	your
B-api_mention	28550	28558	setExits
I-api_mention	28558	28559	(
I-api_mention	28559	28563	args
I-api_mention	28563	28564	)
O	28565	28571	method
O	28572	28576	will
O	28577	28580	not
O	28581	28585	work
O	28586	28588	as
O	28589	28597	intended
O	28597	28598	,
O	28599	28606	chained
O	28607	28609	if
O	28609	28610	-
O	28610	28616	elseif
O	28617	28621	will
O	28622	28631	maximally
O	28632	28639	execute
O	28640	28641	1
O	28642	28648	branch
O	28649	28651	of
O	28652	28656	code
O	28656	28657	,
O	28658	28661	for
O	28662	28669	example
O	28669	28670	:
O	28671	28672	#
O	28672	28675	pre
O	28676	28680	Even
O	28681	28683	if
O	28684	28685	e
O	28686	28694	contains
O	28695	28699	both
O	28700	28701	N
O	28702	28705	and
O	28706	28707	W
O	28708	28709	,
O	28710	28714	only
O	28715	28721	bexits
O	28721	28722	[
O	28722	28723	0
O	28723	28724	]
O	28725	28729	will
O	28730	28732	be
O	28733	28736	set
O	28736	28737	.

O	28738	28742	Also
O	28743	28747	this
O	28748	28754	method
O	28755	28759	will
O	28760	28764	only
O	28765	28768	add
O	28769	28774	exits
O	28775	28776	(
O	28776	28779	for
O	28780	28787	example
O	28788	28795	calling
B-api_mention	28796	28804	setExits
I-api_mention	28804	28805	(
I-api_mention	28805	28809	args
I-api_mention	28809	28810	)
O	28811	28815	will
O	28816	28819	not
O	28820	28826	delete
O	28827	28830	any
O	28831	28839	existing
O	28840	28845	exits
O	28845	28846	.

O	28847	28848	I
O	28849	28854	would
O	28855	28861	change
O	28862	28866	that
O	28867	28873	method
O	28874	28876	to
O	28876	28877	:
O	28878	28879	#
O	28879	28882	pre
O	28883	28887	Also
O	28887	28888	,
O	28889	28890	i
O	28891	28900	definetly
O	28901	28907	wouldn
O	28907	28908	'
O	28908	28909	t
O	28910	28918	remember
O	28919	28923	that
O	28924	28929	north
O	28930	28932	is
O	28933	28935	on
O	28936	28941	index
O	28942	28943	0
O	28943	28944	,
O	28945	28949	west
O	28950	28952	in
O	28953	28955	on
O	28956	28957	1
O	28957	28958	,
O	28959	28960	.
O	28960	28961	.
O	28961	28962	.

O	28963	28965	so
O	28966	28967	a
O	28968	28974	common
O	28975	28983	practice
O	28984	28986	is
O	28987	28989	to
O	28990	28994	name
O	28995	28999	your
O	29000	29007	indexes
O	29008	29013	using
O	29014	29019	final
O	29020	29026	static
O	29027	29036	constants
O	29036	29037	:
O	29038	29039	#
O	29039	29042	pre
O	29043	29047	Then
O	29048	29051	you
O	29052	29055	can
O	29056	29061	write
O	29062	29064	in
O	29065	29069	your
B-api_mention	29070	29078	setExits
O	29079	29085	method
O	29085	29086	:
O	29087	29088	#
O	29088	29091	pre
O	29092	29093	(
O	29093	29097	much
O	29098	29102	more
O	29103	29111	readible
O	29111	29112	)
O	29113	29120	Finally
O	29120	29121	,
O	29122	29124	if
O	29125	29128	you
O	29129	29133	want
O	29134	29138	your
O	29139	29143	code
O	29144	29148	even
O	29149	29153	more
O	29154	29158	well
O	29158	29159	-
O	29159	29167	arranged
O	29167	29168	,
O	29169	29172	you
O	29173	29176	can
O	29177	29181	make
O	29182	29183	a
B-api_mention	29184	29189	Exits
O	29190	29195	class
O	29196	29208	representing
O	29209	29218	avaliable
O	29219	29224	exits
O	29224	29225	,
O	29226	29229	and
O	29230	29236	backed
O	29237	29239	by
O	29240	29247	boolean
O	29248	29253	array
O	29253	29254	.

O	29255	29259	Then
O	29260	29262	on
O	29263	29268	place
O	29269	29274	where
O	29275	29278	you
O	29279	29285	create
O	29286	29290	your
B-api_mention	29291	29297	String
O	29297	29298	,
O	29299	29302	you
O	29303	29308	could
O	29309	29315	create
O	29316	29320	this
O	29321	29326	class
O	29327	29334	instead
O	29335	29338	and
O	29339	29343	save
O	29344	29352	yourself
O	29353	29357	work
O	29358	29362	with
O	29363	29373	generating
O	29374	29377	and
O	29378	29382	then
O	29383	29390	parsing
O	29391	29392	a
O	29393	29399	string
O	29399	29400	.

O	29401	29405	EDIT
O	29405	29406	:
O	29407	29409	as
O	29410	29411	@
O	29411	29419	gexicide
O	29420	29427	answers
O	29427	29428	,
O	29429	29434	there
O	29435	29437	is
O	29438	29439	a
O	29440	29446	really
O	29447	29452	handy
O	29453	29458	class
B-api_mention	29459	29466	EnumSet
O	29467	29472	which
O	29473	29478	would
O	29479	29481	be
O	29482	29490	probably
O	29491	29497	better
O	29498	29501	for
O	29502	29514	representing
O	29515	29518	the
O	29519	29524	exits
O	29525	29529	than
O	29530	29537	bollean
O	29538	29543	array
O	29543	29544	.

O	29546	29554	Question
O	29554	29555	-
O	29555	29563	24609564
O	29563	29564	,
O	29565	29571	answer
O	29571	29572	-
O	29572	29580	24609841

O	29581	29583	If
O	29584	29587	you
O	29588	29592	will
O	29593	29597	read
O	29598	29605	comment
O	29606	29611	above
O	29612	29615	the
O	29616	29620	code
O	29620	29621	,
O	29622	29624	It
O	29625	29627	is
O	29628	29637	mentioned
O	29638	29642	that
O	29642	29643	.
O	29643	29644	.
O	29644	29645	.

O	29646	29648	If
O	29649	29652	the
O	29653	29659	caller
O	29660	29662	is
O	29663	29666	not
O	29667	29668	a
B-api_mention	29669	29681	ForkJoinTask
O	29682	29683	,
O	29684	29688	this
O	29689	29695	method
O	29696	29698	is
O	29699	29711	behaviorally
O	29712	29722	equivalent
O	29723	29725	to
O	29726	29727	#
O	29727	29730	pre
O	29731	29733	So
O	29734	29736	it
O	29737	29739	is
O	29740	29744	just
O	29745	29752	another
O	29753	29757	form
O	29758	29760	to
O	29761	29770	implement
O	29771	29776	above
O	29777	29781	code
O	29782	29784	in
O	29785	29789	else
O	29790	29794	part
O	29794	29795	.
O	29795	29796	.
O	29796	29797	.
O	29797	29798	!
O	29798	29799	!

O	29800	29802	In
O	29803	29808	Style
O	29809	29814	notes
O	29815	29817	it
O	29818	29820	is
O	29821	29830	mentioned
O	29831	29835	that
O	29835	29836	,
O	29837	29838	#
O	29838	29848	blockquote
O	29849	29852	And
O	29853	29855	if
O	29856	29859	you
O	29860	29864	will
O	29865	29868	see
O	29869	29883	implementation
O	29884	29886	of
B-api_mention	29887	29900	ManagedLocker
I-api_mention	29900	29901	#
I-api_mention	29901	29913	isReleasable
O	29914	29915	,
O	29916	29918	It
O	29919	29921	is
O	29922	29930	updating
O	29931	29934	the
O	29935	29939	lock
O	29940	29943	and
O	29944	29951	returns
O	29952	29956	true
O	29957	29959	if
O	29960	29968	blocking
O	29969	29971	is
O	29972	29983	unnecessary
O	29983	29984	.

O	29985	29999	Interpretation
O	30000	30001	:
O	30002	30007	Blank
O	30008	30013	while
O	30014	30019	loops
O	30020	30023	are
O	30024	30028	used
O	30029	30031	to
O	30032	30039	provide
O	30040	30042	an
O	30043	30052	interrupt
O	30053	30058	until
O	30059	30063	some
O	30064	30073	condition
O	30074	30079	reset
O	30080	30082	to
O	30083	30087	true
O	30087	30088	/
O	30088	30093	false
O	30093	30094	.

O	30095	30099	Here
O	30099	30100	,
O	30101	30103	do
O	30104	30105	{
O	30106	30107	}
O	30108	30113	while
O	30113	30114	(
O	30114	30118	args
O	30118	30119	)
O	30120	30122	is
O	30123	30124	a
O	30125	30132	blocker
O	30132	30133	/
O	30133	30142	interrupt
O	30143	30148	until
O	30149	30156	blocker
B-api_mention	30156	30157	.
I-api_mention	30157	30162	block
I-api_mention	30162	30163	(
I-api_mention	30163	30167	args
I-api_mention	30167	30168	)
O	30169	30173	will
O	30174	30176	be
O	30177	30181	true
O	30182	30186	when
O	30187	30194	blocker
B-api_mention	30194	30195	.
I-api_mention	30195	30207	isReleasable
I-api_mention	30207	30208	(
I-api_mention	30208	30212	args
I-api_mention	30212	30213	)
O	30214	30216	is
O	30217	30222	false
O	30223	30224	.

O	30225	30229	Loop
O	30230	30234	will
O	30235	30243	continue
O	30244	30253	execution
O	30254	30259	while
O	30260	30267	blocker
O	30268	30270	is
O	30271	30274	not
O	30275	30285	releasable
O	30286	30287	(
O	30288	30289	!
O	30289	30296	blocker
B-api_mention	30296	30297	.
I-api_mention	30297	30309	isReleasable
I-api_mention	30309	30310	(
I-api_mention	30310	30314	args
I-api_mention	30314	30315	)
O	30316	30317	)
O	30318	30321	and
O	30322	30329	blocker
O	30330	30332	is
O	30333	30336	not
O	30337	30344	blocked
O	30345	30346	!
O	30346	30347	!

O	30348	30357	Execution
O	30358	30362	will
O	30363	30365	be
O	30366	30369	out
O	30370	30372	of
O	30373	30377	loop
O	30378	30380	as
O	30381	30385	soon
O	30386	30388	as
O	30389	30396	blocker
B-api_mention	30396	30397	.
I-api_mention	30397	30402	block
I-api_mention	30402	30403	(
I-api_mention	30403	30407	args
I-api_mention	30407	30408	)
O	30409	30413	will
O	30414	30417	set
O	30418	30420	to
O	30421	30425	true
O	30425	30426	.

O	30427	30431	Note
O	30432	30436	that
O	30436	30437	,
O	30438	30440	do
O	30440	30441	{
O	30442	30443	}
O	30444	30449	while
O	30449	30450	(
O	30450	30454	args
O	30454	30455	)
O	30456	30460	does
O	30461	30464	not
O	30465	30471	update
O	30472	30475	CAS
O	30476	30484	variable
O	30484	30485	,
O	30486	30489	but
O	30490	30492	it
O	30493	30502	guarantee
O	30503	30507	that
O	30508	30515	program
O	30516	30520	will
O	30521	30525	wait
O	30526	30531	until
O	30532	30540	variable
O	30541	30545	gets
O	30546	30553	updated
O	30554	30555	(
O	30555	30560	force
O	30561	30563	to
O	30564	30568	wait
O	30569	30574	until
O	30575	30583	variable
O	30584	30588	gets
O	30589	30596	updated
O	30596	30597	)
O	30597	30598	.

O	30600	30608	Question
O	30608	30609	-
O	30609	30617	27504925
O	30617	30618	,
O	30619	30625	answer
O	30625	30626	-
O	30626	30634	27505121

O	30635	30636	I
O	30636	30637	'
O	30637	30638	d
O	30639	30643	like
O	30644	30646	to
O	30647	30652	point
O	30653	30656	out
O	30657	30661	this
O	30662	30669	article
O	30670	30671	.

O	30672	30674	It
O	30675	30680	seems
O	30681	30683	as
O	30684	30690	though
O	30691	30697	arrays
O	30698	30701	and
O	30702	30709	objects
O	30710	30716	follow
O	30717	30726	different
O	30727	30734	opcodes
O	30734	30735	.

O	30736	30737	I
O	30738	30741	can
O	30741	30742	'
O	30742	30743	t
O	30744	30752	honestly
O	30753	30762	summarize
O	30763	30765	it
O	30766	30770	more
O	30771	30775	than
O	30776	30780	that
O	30781	30788	however
O	30789	30791	it
O	30792	30797	seems
O	30797	30798	,
O	30799	30805	arrays
O	30806	30809	are
O	30810	30816	simply
O	30817	30820	not
O	30821	30828	treated
O	30829	30831	as
B-api_mention	30832	30839	Objects
O	30840	30844	like
O	30845	30847	we
O	30847	30848	'
O	30848	30850	re
O	30851	30859	normally
O	30860	30864	used
O	30865	30867	to
O	30868	30870	so
O	30871	30875	they
O	30876	30879	don
O	30879	30880	'
O	30880	30881	t
O	30882	30889	inherit
B-api_mention	30890	30896	Object
O	30897	30904	methods
O	30904	30905	.

O	30906	30910	Full
O	30911	30918	credits
O	30919	30921	to
O	30922	30925	the
O	30926	30932	author
O	30933	30935	of
O	30936	30940	that
O	30941	30945	post
O	30946	30948	as
O	30949	30951	it
O	30951	30952	'
O	30952	30953	s
O	30954	30955	a
O	30956	30960	very
O	30961	30972	interesting
O	30973	30977	read
O	30977	30978	,
O	30979	30983	both
O	30984	30989	short
O	30990	30991	&
O	30992	31000	detailed
O	31000	31001	.

O	31002	31006	Upon
O	31007	31014	further
O	31015	31022	digging
O	31023	31027	into
O	31028	31031	the
O	31032	31037	topic
O	31038	31041	via
O	31042	31050	multiple
O	31051	31058	sources
O	31059	31060	I
O	31060	31061	'
O	31061	31063	ve
O	31064	31071	decided
O	31072	31074	to
O	31075	31079	give
O	31080	31081	a
O	31082	31086	more
O	31087	31096	elaborate
O	31097	31104	version
O	31105	31107	of
O	31108	31110	my
O	31111	31119	previous
O	31120	31126	answer
O	31126	31127	.

O	31128	31131	The
O	31132	31137	first
O	31138	31143	thing
O	31144	31146	to
O	31147	31151	note
O	31152	31156	that
O	31157	31170	instantiation
O	31171	31173	of
B-api_mention	31174	31181	Objects
O	31182	31185	and
B-api_mention	31186	31192	Arrays
O	31193	31196	are
O	31197	31201	very
O	31202	31211	different
O	31212	31218	within
O	31219	31222	the
O	31223	31226	JVM
O	31226	31227	,
O	31228	31233	their
O	31234	31240	follow
O	31241	31246	their
O	31247	31257	respective
O	31258	31266	bytecode
O	31266	31267	.

B-api_mention	31268	31274	Object
O	31274	31275	:
B-api_mention	31276	31282	Object
O	31283	31296	instantiation
O	31297	31304	follows
O	31305	31306	a
O	31307	31313	simple
O	31314	31320	Opcode
O	31321	31324	new
O	31325	31330	which
O	31331	31333	is
O	31334	31335	a
O	31336	31347	combination
O	31348	31350	of
O	31351	31354	two
O	31355	31363	operands
O	31364	31365	-
O	31366	31376	indexbyte1
O	31377	31378	&
O	31379	31389	indexbyte2
O	31390	31391	.

O	31392	31396	Once
O	31397	31409	instantiated
O	31410	31413	the
O	31414	31417	JVM
O	31418	31424	pushes
O	31425	31428	the
O	31429	31438	reference
O	31439	31441	to
O	31442	31446	this
O	31447	31453	object
O	31454	31458	onto
O	31459	31462	the
O	31463	31468	stack
O	31469	31470	.

O	31471	31475	This
O	31476	31482	occurs
O	31483	31486	for
O	31487	31490	all
O	31491	31498	objects
O	31499	31511	irrespective
O	31512	31514	of
O	31515	31520	their
O	31521	31526	types
O	31526	31527	.

B-api_mention	31528	31534	Arrays
O	31534	31535	:
B-api_mention	31536	31541	Array
O	31542	31549	Opcodes
O	31550	31551	(
O	31551	31560	regarding
O	31561	31574	instantiation
O	31575	31577	of
O	31578	31580	an
O	31581	31586	array
O	31586	31587	)
O	31588	31595	however
O	31596	31599	are
O	31600	31607	divided
O	31608	31612	into
O	31613	31618	three
O	31619	31628	different
O	31629	31634	codes
O	31634	31635	.

O	31636	31637	#
O	31637	31647	blockquote
O	31648	31656	newarray
O	31657	31663	opcode
O	31664	31666	is
O	31667	31671	used
O	31672	31676	when
O	31677	31685	creating
O	31686	31692	arrays
O	31693	31697	that
O	31698	31705	involve
O	31706	31715	primitive
O	31716	31725	datatypes
O	31726	31727	(
O	31728	31732	byte
O	31733	31738	short
O	31739	31743	char
O	31744	31747	int
O	31748	31752	long
O	31753	31758	float
O	31759	31765	double
O	31766	31773	boolean
O	31774	31775	)
O	31776	31782	rather
O	31783	31787	than
O	31788	31794	object
O	31795	31805	references
O	31805	31806	.

O	31807	31808	#
O	31808	31818	blockquote
O	31819	31828	anewarray
O	31829	31835	opcode
O	31836	31838	is
O	31839	31843	used
O	31844	31848	when
O	31849	31857	creating
O	31858	31864	arrays
O	31865	31867	of
O	31868	31874	object
O	31875	31885	references
O	31886	31887	#
O	31887	31897	blockquote
O	31898	31912	multianewarray
O	31913	31924	instruction
O	31925	31927	is
O	31928	31932	used
O	31933	31937	when
O	31938	31948	allocating
O	31949	31954	multi
O	31954	31955	-
O	31955	31966	dimensional
O	31967	31973	arrays
B-api_mention	31974	31980	Object
O	31981	31984	can
O	31985	31987	be
O	31988	31989	a
O	31990	31995	class
O	31996	32004	instance
O	32005	32007	or
O	32008	32010	an
O	32011	32016	array
O	32016	32017	.

O	32018	32022	Take
O	32023	32027	from
O	32028	32034	Oracle
O	32035	32039	Docs
O	32040	32041	#
O	32041	32051	blockquote
O	32052	32055	BUT
O	32056	32057	#
O	32057	32067	blockquote
O	32068	32072	This
O	32073	32077	goes
O	32078	32082	hand
O	32083	32085	in
O	32086	32090	hand
O	32091	32095	with
O	32096	32099	the
O	32100	32111	information
O	32112	32121	regarding
O	32122	32125	the
O	32126	32133	opcodes
O	32133	32134	.

O	32135	32141	Arrays
O	32142	32145	are
O	32146	32152	simply
O	32153	32156	not
O	32157	32166	developed
O	32167	32169	to
O	32170	32172	be
O	32173	32178	class
O	32179	32189	interfaces
O	32190	32193	but
O	32194	32197	are
O	32198	32205	instead
O	32206	32216	explicitly
O	32217	32224	created
O	32225	32227	by
O	32228	32233	array
O	32234	32242	creation
O	32243	32253	expression
O	32254	32258	thus
O	32259	32268	naturally
O	32269	32275	wouldn
O	32275	32276	'
O	32276	32277	t
O	32278	32288	implicitly
O	32289	32291	be
O	32292	32296	able
O	32297	32299	to
O	32300	32307	inherit
O	32308	32311	and
O	32311	32312	/
O	32312	32314	or
O	32315	32323	override
B-api_mention	32324	32330	Object
O	32331	32332	.

O	32333	32335	As
O	32336	32338	we
O	32339	32343	have
O	32344	32348	seen
O	32348	32349	,
O	32350	32352	it
O	32353	32356	has
O	32357	32364	nothing
O	32365	32367	to
O	32368	32370	do
O	32371	32375	with
O	32376	32379	the
O	32380	32384	fact
O	32385	32389	that
O	32390	32396	arrays
O	32397	32400	may
O	32401	32405	hold
O	32406	32415	primitive
O	32416	32425	datatypes
O	32425	32426	.

O	32427	32432	After
O	32433	32439	giving
O	32440	32442	it
O	32443	32447	some
O	32448	32455	thought
O	32456	32462	though
O	32462	32463	,
O	32464	32466	it
O	32467	32470	isn
O	32470	32471	'
O	32471	32472	t
O	32473	32477	very
O	32478	32484	common
O	32485	32487	to
O	32488	32492	come
O	32493	32499	across
O	32500	32510	situations
O	32511	32516	where
O	32517	32520	one
O	32521	32526	might
O	32527	32531	want
O	32532	32534	to
B-api_mention	32535	32543	toString
I-api_mention	32543	32544	(
I-api_mention	32544	32548	args
I-api_mention	32548	32549	)
O	32550	32552	or
B-api_mention	32553	32559	equals
I-api_mention	32559	32560	(
I-api_mention	32560	32564	args
I-api_mention	32564	32565	)
O	32566	32573	however
O	32574	32577	was
O	32578	32583	still
O	32584	32585	a
O	32586	32590	very
O	32591	32602	interesting
O	32603	32611	question
O	32612	32614	to
O	32615	32618	try
O	32619	32622	and
O	32623	32629	answer
O	32629	32630	.

O	32631	32640	Resources
O	32640	32641	:
O	32642	32648	Oracle
O	32648	32649	-
O	32649	32653	Docs
O	32654	32661	chapter
O	32662	32663	4
O	32663	32664	.
O	32664	32665	3
O	32665	32666	.
O	32666	32667	1
O	32668	32674	Oracle
O	32674	32675	-
O	32675	32679	Docs
O	32680	32687	chapter
O	32688	32690	15
O	32690	32691	.
O	32691	32693	10
O	32693	32694	.
O	32694	32695	1
O	32696	32702	Artima
O	32703	32704	-
O	32705	32717	UnderTheHood

O	32719	32727	Question
O	32727	32728	-
O	32728	32736	24914525
O	32736	32737	,
O	32738	32744	answer
O	32744	32745	-
O	32745	32753	24914586

O	32754	32757	std
O	32757	32758	:
O	32758	32759	:
O	32759	32763	list
O	32764	32766	in
O	32767	32768	C
O	32768	32769	+
O	32769	32770	+
O	32771	32773	is
O	32774	32775	a
O	32776	32782	linked
O	32783	32787	list
O	32787	32788	,
O	32789	32796	whereas
B-api_mention	32797	32801	java
I-api_mention	32801	32802	.
I-api_mention	32802	32806	util
I-api_mention	32806	32807	.
I-api_mention	32807	32816	ArrayList
O	32817	32819	is
O	32820	32822	an
O	32823	32828	array
O	32828	32829	.

O	32830	32833	Try
O	32834	32843	replacing
O	32844	32847	std
O	32847	32848	:
O	32848	32849	:
O	32849	32853	list
O	32854	32856	by
O	32857	32860	std
O	32860	32861	:
O	32861	32862	:
O	32862	32868	vector
O	32869	32870	.

O	32871	32875	Also
O	32875	32876	,
O	32877	32879	be
O	32880	32884	sure
O	32885	32887	to
O	32888	32895	compile
O	32896	32900	with
O	32901	32913	optimization
O	32914	32920	turned
O	32921	32923	on
O	32923	32924	.

O	32926	32934	Question
O	32934	32935	-
O	32935	32943	27683759
O	32943	32944	,
O	32945	32951	answer
O	32951	32952	-
O	32952	32960	27684040

O	32961	32965	That
O	32966	32970	line
O	32971	32978	creates
O	32979	32981	an
O	32982	32987	empty
O	32988	32992	list
O	32993	32995	of
O	32996	33003	strings
O	33004	33006	by
O	33007	33014	calling
O	33015	33016	a
O	33017	33023	static
O	33024	33030	method
O	33031	33035	with
O	33036	33037	a
O	33038	33045	generic
O	33046	33050	type
O	33051	33060	parameter
O	33060	33061	.

O	33062	33068	Inside
O	33069	33072	the
B-api_mention	33073	33084	Collections
O	33085	33090	class
O	33090	33091	,
O	33092	33097	there
O	33098	33100	is
O	33101	33102	a
O	33103	33109	static
O	33110	33116	method
O	33117	33126	emptyList
O	33127	33135	declared
O	33136	33140	like
O	33140	33141	:
O	33142	33143	#
O	33143	33146	pre
O	33147	33151	This
O	33152	33155	has
O	33156	33157	a
O	33158	33165	generic
O	33166	33170	type
O	33171	33180	parameter
B-api_mention	33181	33182	T
O	33183	33184	.

O	33185	33187	We
O	33188	33192	call
O	33193	33197	call
O	33198	33202	this
O	33203	33209	method
O	33210	33212	by
O	33213	33218	using
O	33218	33219	:
B-api_mention	33220	33224	List
I-api_mention	33224	33225	<
I-api_mention	33225	33226	T
I-api_mention	33226	33227	>
O	33228	33232	list
O	33233	33234	=
B-api_mention	33235	33246	Collections
I-api_mention	33246	33247	.
I-api_mention	33247	33256	emptyList
I-api_mention	33256	33257	(
I-api_mention	33257	33261	args
I-api_mention	33261	33262	)
O	33262	33263	;
O	33264	33267	and
O	33268	33269	T
O	33270	33272	is
O	33273	33280	infered
O	33281	33283	to
O	33284	33286	be
O	33287	33288	a
B-api_mention	33289	33295	String
O	33296	33303	because
O	33304	33306	of
O	33307	33310	the
O	33311	33315	type
O	33316	33318	of
O	33319	33323	list
O	33324	33325	.

O	33326	33328	We
O	33329	33332	can
O	33333	33337	also
O	33338	33345	specify
O	33346	33349	the
O	33350	33354	type
O	33355	33357	of
O	33358	33359	T
O	33360	33362	by
O	33363	33370	putting
O	33371	33373	it
O	33374	33376	in
O	33377	33382	angle
O	33383	33391	brackets
O	33392	33396	when
O	33397	33404	calling
B-api_mention	33405	33414	emptyList
O	33415	33416	.

O	33417	33421	This
O	33422	33425	may
O	33426	33428	be
O	33429	33435	needed
O	33436	33438	if
O	33439	33441	we
O	33442	33446	want
O	33447	33448	a
O	33449	33453	more
O	33454	33462	specific
O	33463	33467	type
O	33468	33472	than
O	33473	33475	is
O	33476	33484	inferred
O	33484	33485	:
B-api_mention	33486	33490	List
I-api_mention	33490	33491	<
I-api_mention	33491	33492	T
I-api_mention	33492	33493	>
O	33494	33498	list
O	33499	33500	=
B-api_mention	33501	33512	Collections
I-api_mention	33512	33513	.
I-api_mention	33513	33514	<
I-api_mention	33514	33520	String
I-api_mention	33520	33521	>
I-api_mention	33521	33530	emptyList
I-api_mention	33530	33531	(
I-api_mention	33531	33535	args
I-api_mention	33535	33536	)
O	33536	33537	;
B-api_mention	33538	33547	emptyList
I-api_mention	33547	33548	<
I-api_mention	33548	33549	T
I-api_mention	33549	33550	>
I-api_mention	33550	33551	(
I-api_mention	33551	33555	args
I-api_mention	33555	33556	)
O	33557	33559	is
O	33560	33563	not
O	33564	33571	correct
O	33572	33579	because
O	33580	33584	that
O	33585	33594	placement
O	33595	33597	is
O	33598	33602	only
O	33603	33608	valid
O	33609	33613	when
O	33614	33622	creating
O	33623	33632	instances
O	33633	33635	of
O	33636	33643	generic
O	33644	33651	classes
O	33651	33652	,
O	33653	33656	not
O	33657	33664	calling
O	33665	33672	methods
O	33672	33673	.

O	33674	33678	When
O	33679	33684	using
O	33685	33688	new
O	33689	33694	there
O	33695	33698	are
O	33699	33702	two
O	33703	33711	possible
O	33712	33716	type
O	33717	33727	parameters
O	33727	33728	,
O	33729	33732	the
O	33733	33737	ones
O	33738	33744	before
O	33745	33748	the
O	33749	33754	class
O	33755	33759	name
O	33760	33763	are
O	33764	33767	for
O	33768	33771	the
O	33772	33783	constructor
O	33784	33788	only
O	33788	33789	,
O	33790	33793	and
O	33794	33797	the
O	33798	33802	ones
O	33803	33808	after
O	33809	33812	the
O	33813	33818	class
O	33819	33823	name
O	33824	33827	are
O	33828	33831	for
O	33832	33835	the
O	33836	33841	whole
O	33842	33850	instance
O	33850	33851	,
O	33852	33854	so
O	33855	33859	with
O	33860	33863	the
O	33864	33869	class
O	33869	33870	:
O	33871	33872	#
O	33872	33875	pre
O	33876	33878	We
O	33879	33882	can
O	33883	33887	call
O	33888	33891	its
O	33892	33903	constructor
O	33904	33909	where
O	33910	33911	A
O	33912	33914	is
B-api_mention	33915	33921	String
O	33922	33925	and
O	33926	33927	B
O	33928	33930	is
B-api_mention	33931	33938	Integer
O	33939	33943	like
O	33943	33944	:
O	33945	33952	MyClass
O	33952	33953	<
O	33953	33954	T
O	33954	33955	>
O	33956	33957	a
O	33958	33959	=
O	33960	33963	new
O	33963	33964	<
O	33964	33965	T
O	33965	33966	>
O	33966	33973	MyClass
O	33973	33974	<
O	33974	33975	T
O	33975	33976	>
O	33976	33977	(
O	33977	33981	args
O	33981	33982	)
O	33982	33983	;
O	33984	33986	or
O	33987	33989	by
O	33990	33995	using
O	33996	34000	type
O	34001	34010	inference
O	34010	34011	:
O	34012	34019	MyClass
O	34019	34020	<
O	34020	34021	T
O	34021	34022	>
O	34023	34024	a
O	34025	34026	=
O	34027	34030	new
O	34031	34038	MyClass
O	34038	34039	<
O	34039	34040	T
O	34040	34041	>
O	34041	34042	(
O	34042	34046	args
O	34046	34047	)
O	34047	34048	;
O	34049	34052	See
O	34053	34057	also
O	34057	34058	:
O	34059	34060	#
O	34060	34062	li
O	34063	34070	Generic
O	34071	34078	Methods
O	34079	34080	#
O	34080	34082	li
O	34083	34087	Type
O	34088	34097	Inference

O	34099	34107	Question
O	34107	34108	-
O	34108	34116	27683759
O	34116	34117	,
O	34118	34124	answer
O	34124	34125	-
O	34125	34133	27684042

O	34134	34136	In
O	34137	34138	a
O	34139	34147	nutshell
O	34147	34148	,
O	34149	34153	this
O	34154	34161	creates
O	34162	34164	an
O	34165	34170	empty
O	34170	34171	,
O	34172	34181	immutable
O	34182	34186	list
O	34187	34189	of
O	34190	34197	strings
O	34197	34198	.

O	34199	34202	Let
O	34202	34203	'
O	34203	34204	s
O	34205	34209	look
O	34210	34212	at
O	34213	34216	the
O	34217	34227	expression
O	34228	34231	bit
O	34232	34234	by
O	34235	34238	bit
O	34238	34239	.

B-api_mention	34240	34251	Collections
O	34252	34254	is
O	34255	34258	the
O	34259	34263	name
O	34264	34266	of
O	34267	34268	a
O	34269	34274	class
O	34274	34275	.

O	34276	34280	From
O	34281	34284	the
O	34285	34292	Javadoc
O	34293	34294	:
O	34295	34296	#
O	34296	34306	blockquote
B-api_mention	34307	34316	emptyList
I-api_mention	34316	34317	(
I-api_mention	34317	34318	)
O	34319	34321	is
O	34322	34325	the
O	34326	34330	name
O	34331	34333	of
O	34334	34335	a
O	34336	34342	static
O	34343	34349	method
O	34350	34357	defined
O	34358	34360	in
O	34361	34364	the
B-api_mention	34365	34376	Collections
O	34377	34382	class
O	34383	34384	(
O	34385	34392	Javadoc
O	34393	34394	)
O	34394	34395	.

O	34396	34398	It
O	34399	34401	is
O	34402	34403	a
O	34404	34411	generic
O	34412	34418	method
O	34418	34419	,
O	34420	34423	and
O	34424	34427	the
O	34428	34429	<
B-api_mention	34429	34435	String
O	34435	34436	>
O	34437	34439	in
B-api_mention	34440	34451	Collections
I-api_mention	34451	34452	.
I-api_mention	34452	34453	<
I-api_mention	34453	34459	String
I-api_mention	34459	34460	>
I-api_mention	34460	34469	emptyList
I-api_mention	34469	34470	(
I-api_mention	34470	34474	args
I-api_mention	34474	34475	)
O	34476	34485	specifies
O	34486	34489	the
O	34490	34497	generic
O	34498	34502	type
O	34503	34511	argument
O	34511	34512	.

O	34513	34516	The
O	34517	34523	method
O	34524	34531	returns
O	34532	34533	a
B-api_mention	34534	34538	List
I-api_mention	34538	34539	<
I-api_mention	34539	34540	T
I-api_mention	34540	34541	>
O	34542	34543	,
O	34544	34549	which
O	34550	34552	in
O	34553	34557	this
O	34558	34562	case
O	34563	34565	is
B-api_mention	34566	34570	List
I-api_mention	34570	34571	<
I-api_mention	34571	34572	T
I-api_mention	34572	34573	>
O	34574	34575	:
O	34576	34577	a
O	34578	34582	list
O	34583	34585	of
O	34586	34593	strings
O	34593	34594	.

O	34595	34599	More
O	34600	34612	specifically
O	34612	34613	,
O	34614	34616	it
O	34617	34624	returns
O	34625	34627	an
O	34628	34633	empty
O	34634	34635	,
O	34636	34645	immutable
O	34646	34650	list
O	34651	34653	of
O	34654	34661	strings
O	34661	34662	.

O	34664	34672	Question
O	34672	34673	-
O	34673	34681	24676877
O	34681	34682	,
O	34683	34689	answer
O	34689	34690	-
O	34690	34698	24679745

O	34699	34702	The
O	34703	34709	answer
O	34710	34712	is
O	34712	34713	,
O	34714	34716	as
O	34717	34723	always
O	34723	34724	,
O	34725	34726	"
O	34726	34728	it
O	34729	34736	depends
O	34736	34737	"
O	34737	34738	.

O	34739	34741	It
O	34742	34749	depends
O	34750	34752	on
O	34753	34756	how
O	34757	34760	big
O	34761	34764	the
O	34765	34773	returned
O	34774	34784	collection
O	34785	34789	will
O	34790	34792	be
O	34792	34793	.

O	34794	34796	It
O	34797	34804	depends
O	34805	34807	on
O	34808	34815	whether
O	34816	34819	the
O	34820	34826	result
O	34827	34834	changes
O	34835	34839	over
O	34840	34844	time
O	34844	34845	,
O	34846	34849	and
O	34850	34853	how
O	34854	34863	important
O	34864	34875	consistency
O	34876	34878	of
O	34879	34882	the
O	34883	34891	returned
O	34892	34898	result
O	34899	34901	is
O	34901	34902	.

O	34903	34906	And
O	34907	34909	it
O	34910	34917	depends
O	34918	34922	very
O	34923	34927	much
O	34928	34930	on
O	34931	34934	how
O	34935	34938	the
O	34939	34943	user
O	34944	34946	is
O	34947	34953	likely
O	34954	34956	to
O	34957	34960	use
O	34961	34964	the
O	34965	34971	answer
O	34971	34972	.

O	34973	34978	First
O	34978	34979	,
O	34980	34984	note
O	34985	34989	that
O	34990	34993	you
O	34994	34997	can
O	34998	35004	always
O	35005	35008	get
O	35009	35010	a
B-api_mention	35011	35021	Collection
O	35022	35026	from
O	35027	35028	a
B-api_mention	35029	35035	Stream
O	35035	35036	,
O	35037	35040	and
O	35041	35045	vice
O	35046	35051	versa
O	35051	35052	:
O	35053	35054	/
O	35054	35055	/
O	35056	35058	If
O	35059	35062	API
O	35063	35070	returns
B-api_mention	35071	35081	Collection
O	35081	35082	,
O	35083	35090	convert
O	35091	35095	with
B-api_mention	35096	35102	stream
I-api_mention	35102	35103	(
I-api_mention	35103	35107	args
I-api_mention	35107	35108	)
I-api_mention	35109	35115	getFoo
I-api_mention	35115	35116	(
I-api_mention	35116	35120	args
I-api_mention	35120	35121	)
I-api_mention	35121	35122	.
I-api_mention	35122	35128	stream
I-api_mention	35128	35129	(
I-api_mention	35129	35133	args
I-api_mention	35133	35134	)
O	35134	35135	.
O	35135	35136	.
O	35136	35137	.

O	35138	35139	/
O	35139	35140	/
O	35141	35143	If
O	35144	35147	API
O	35148	35155	returns
B-api_mention	35156	35162	Stream
O	35162	35163	,
O	35164	35167	use
B-api_mention	35168	35175	collect
I-api_mention	35175	35176	(
I-api_mention	35176	35180	args
I-api_mention	35180	35181	)
I-api_mention	35182	35192	Collection
I-api_mention	35192	35193	<
I-api_mention	35193	35194	T
I-api_mention	35194	35195	>
O	35196	35197	c
O	35198	35199	=
O	35200	35212	getFooStream
O	35212	35213	(
O	35213	35217	args
O	35217	35218	)
B-api_mention	35218	35219	.
I-api_mention	35219	35226	collect
I-api_mention	35226	35227	(
I-api_mention	35227	35231	args
I-api_mention	35231	35232	)
O	35232	35233	;
O	35234	35236	So
O	35237	35240	the
O	35241	35249	question
O	35250	35252	is
O	35252	35253	,
O	35254	35259	which
O	35260	35262	is
O	35263	35267	more
O	35268	35274	useful
O	35275	35277	to
O	35278	35282	your
O	35283	35290	callers
O	35290	35291	.

O	35292	35294	If
O	35295	35299	your
O	35300	35306	result
O	35307	35312	might
O	35313	35315	be
O	35316	35324	infinite
O	35324	35325	,
O	35326	35331	there
O	35331	35332	'
O	35332	35333	s
O	35334	35338	only
O	35339	35342	one
O	35343	35349	choice
O	35349	35350	:
B-api_mention	35351	35357	Stream
O	35357	35358	.

O	35359	35361	If
O	35362	35366	your
O	35367	35373	result
O	35374	35379	might
O	35380	35382	be
O	35383	35387	very
O	35388	35393	large
O	35393	35394	,
O	35395	35398	you
O	35399	35407	probably
O	35408	35414	prefer
B-api_mention	35415	35421	Stream
O	35421	35422	,
O	35423	35428	since
O	35429	35434	there
O	35435	35438	may
O	35439	35442	not
O	35443	35445	be
O	35446	35449	any
O	35450	35455	value
O	35456	35458	in
O	35459	35472	materializing
O	35473	35475	it
O	35476	35479	all
O	35480	35482	at
O	35483	35487	once
O	35487	35488	,
O	35489	35492	and
O	35493	35498	doing
O	35499	35501	so
O	35502	35507	could
O	35508	35514	create
O	35515	35526	significant
O	35527	35531	heap
O	35532	35540	pressure
O	35540	35541	.

O	35542	35544	If
O	35545	35548	all
O	35549	35552	the
O	35553	35559	caller
O	35560	35562	is
O	35563	35568	going
O	35569	35571	to
O	35572	35574	do
O	35575	35577	is
O	35578	35585	iterate
O	35586	35593	through
O	35594	35596	it
O	35597	35598	(
O	35598	35604	search
O	35604	35605	,
O	35606	35612	filter
O	35612	35613	,
O	35614	35623	aggregate
O	35623	35624	)
O	35624	35625	,
O	35626	35629	you
O	35630	35636	should
O	35637	35643	prefer
B-api_mention	35644	35650	Stream
O	35650	35651	,
O	35652	35657	since
B-api_mention	35658	35664	Stream
O	35665	35668	has
O	35669	35674	these
O	35675	35680	built
O	35680	35681	-
O	35681	35683	in
O	35684	35691	already
O	35692	35695	and
O	35696	35701	there
O	35701	35702	'
O	35702	35703	s
O	35704	35706	no
O	35707	35711	need
O	35712	35714	to
O	35715	35726	materialize
O	35727	35728	a
O	35729	35739	collection
O	35740	35741	(
O	35741	35751	especially
O	35752	35754	if
O	35755	35758	the
O	35759	35763	user
O	35764	35769	might
O	35770	35773	not
O	35774	35781	process
O	35782	35785	the
O	35786	35791	whole
O	35792	35798	result
O	35798	35799	.
O	35799	35800	)
O	35801	35805	This
O	35806	35808	is
O	35809	35810	a
O	35811	35815	very
O	35816	35822	common
O	35823	35827	case
O	35827	35828	.

O	35829	35833	Even
O	35834	35836	if
O	35837	35840	you
O	35841	35845	know
O	35846	35850	that
O	35851	35854	the
O	35855	35859	user
O	35860	35864	will
O	35865	35872	iterate
O	35873	35875	it
O	35876	35884	multiple
O	35885	35890	times
O	35891	35893	or
O	35894	35903	otherwise
O	35904	35908	keep
O	35909	35911	it
O	35912	35918	around
O	35918	35919	,
O	35920	35923	you
O	35924	35929	still
O	35930	35933	may
O	35934	35938	want
O	35939	35941	to
O	35942	35948	return
O	35949	35950	a
B-api_mention	35951	35957	Stream
O	35958	35965	instead
O	35965	35966	,
O	35967	35970	for
O	35971	35974	the
O	35975	35981	simple
O	35982	35986	fact
O	35987	35991	that
O	35992	36000	whatever
B-api_mention	36001	36011	Collection
O	36012	36015	you
O	36016	36022	choose
O	36023	36025	to
O	36026	36029	put
O	36030	36032	it
O	36033	36035	in
O	36036	36037	(
O	36037	36038	e
O	36038	36039	.
O	36039	36040	g
O	36040	36041	.
O	36041	36042	,
B-api_mention	36043	36052	ArrayList
O	36052	36053	)
O	36054	36057	may
O	36058	36061	not
O	36062	36064	be
O	36065	36068	the
O	36069	36073	form
O	36074	36078	they
O	36079	36083	want
O	36083	36084	,
O	36085	36088	and
O	36089	36093	then
O	36094	36097	the
O	36098	36104	caller
O	36105	36108	has
O	36109	36111	to
O	36112	36116	copy
O	36117	36119	it
O	36120	36126	anyway
O	36126	36127	.

O	36128	36130	if
O	36131	36134	you
O	36135	36141	return
O	36142	36143	a
O	36144	36150	stream
O	36150	36151	,
O	36152	36156	they
O	36157	36160	can
O	36161	36163	do
B-api_mention	36164	36171	collect
I-api_mention	36171	36172	(
I-api_mention	36172	36176	args
I-api_mention	36176	36177	)
O	36178	36181	and
O	36182	36185	get
O	36186	36188	it
O	36189	36191	in
O	36192	36199	exactly
O	36200	36203	the
O	36204	36208	form
O	36209	36213	they
O	36214	36218	want
O	36218	36219	.

O	36220	36223	The
O	36224	36229	above
O	36230	36231	"
O	36231	36237	prefer
O	36238	36244	Stream
O	36244	36245	"
O	36246	36251	cases
O	36252	36258	mostly
O	36259	36265	derive
O	36266	36270	from
O	36271	36274	the
O	36275	36279	fact
O	36280	36284	that
B-api_mention	36285	36291	Stream
O	36292	36294	is
O	36295	36299	more
O	36300	36308	flexible
O	36308	36309	;
O	36310	36313	you
O	36314	36317	can
O	36318	36322	late
O	36322	36323	-
O	36323	36327	bind
O	36328	36330	to
O	36331	36334	how
O	36335	36338	you
O	36339	36342	use
O	36343	36345	it
O	36346	36353	without
O	36354	36363	incurring
O	36364	36367	the
O	36368	36373	costs
O	36374	36377	and
O	36378	36389	constraints
O	36390	36392	of
O	36393	36406	materializing
O	36407	36409	it
O	36410	36412	to
O	36413	36414	a
B-api_mention	36415	36425	Collection
O	36425	36426	.

O	36427	36430	The
O	36431	36434	one
O	36435	36439	case
O	36440	36445	where
O	36446	36449	you
O	36450	36454	must
O	36455	36461	return
O	36462	36463	a
B-api_mention	36464	36474	Collection
O	36475	36477	is
O	36478	36482	when
O	36483	36488	there
O	36489	36492	are
O	36493	36499	strong
O	36500	36511	consistency
O	36512	36524	requirements
O	36524	36525	,
O	36526	36529	and
O	36530	36533	you
O	36534	36538	have
O	36539	36541	to
O	36542	36549	produce
O	36550	36551	a
O	36552	36562	consistent
O	36563	36571	snapshot
O	36572	36574	of
O	36575	36576	a
O	36577	36583	moving
O	36584	36590	target
O	36590	36591	.

O	36592	36596	Then
O	36596	36597	,
O	36598	36601	you
O	36602	36606	will
O	36607	36611	want
O	36612	36615	put
O	36616	36619	the
O	36620	36628	elements
O	36629	36633	into
O	36634	36635	a
O	36636	36646	collection
O	36647	36651	that
O	36652	36656	will
O	36657	36660	not
O	36661	36667	change
O	36667	36668	.

O	36669	36671	So
O	36672	36673	I
O	36674	36679	would
O	36680	36683	say
O	36684	36688	that
O	36689	36693	most
O	36694	36696	of
O	36697	36700	the
O	36701	36705	time
O	36705	36706	,
B-api_mention	36707	36713	Stream
O	36714	36716	is
O	36717	36720	the
O	36721	36726	right
O	36727	36733	answer
O	36734	36735	-
O	36735	36736	-
O	36737	36739	it
O	36740	36742	is
O	36743	36747	more
O	36748	36756	flexible
O	36756	36757	,
O	36758	36760	it
O	36761	36766	doesn
O	36766	36767	'
O	36767	36768	t
O	36769	36775	impose
O	36776	36783	usually
O	36783	36784	-
O	36784	36795	unnecessary
O	36796	36811	materialization
O	36812	36817	costs
O	36817	36818	,
O	36819	36822	and
O	36823	36826	can
O	36827	36829	be
O	36830	36836	easily
O	36837	36843	turned
O	36844	36848	into
O	36849	36852	the
B-api_mention	36853	36863	Collection
O	36864	36866	of
O	36867	36871	your
O	36872	36878	choice
O	36879	36881	if
O	36882	36888	needed
O	36888	36889	.

O	36890	36893	But
O	36894	36903	sometimes
O	36903	36904	,
O	36905	36908	you
O	36909	36912	may
O	36913	36917	have
O	36918	36920	to
O	36921	36927	return
O	36928	36929	a
B-api_mention	36930	36940	Collection
O	36941	36942	(
O	36942	36945	say
O	36945	36946	,
O	36947	36950	due
O	36951	36953	to
O	36954	36960	strong
O	36961	36972	consistency
O	36973	36985	requirements
O	36985	36986	)
O	36986	36987	,
O	36988	36990	or
O	36991	36994	you
O	36995	36998	may
O	36999	37003	want
O	37004	37006	to
O	37007	37013	return
B-api_mention	37014	37024	Collection
O	37025	37032	because
O	37033	37036	you
O	37037	37041	know
O	37042	37045	how
O	37046	37049	the
O	37050	37054	user
O	37055	37059	will
O	37060	37062	be
O	37063	37068	using
O	37069	37071	it
O	37072	37075	and
O	37076	37080	know
O	37081	37085	this
O	37086	37088	is
O	37089	37092	the
O	37093	37097	most
O	37098	37108	convenient
O	37109	37114	thing
O	37115	37118	for
O	37119	37123	them
O	37123	37124	.

O	37126	37134	Question
O	37134	37135	-
O	37135	37143	24676877
O	37143	37144	,
O	37145	37151	answer
O	37151	37152	-
O	37152	37160	24681959

O	37161	37162	I
O	37163	37167	have
O	37168	37169	a
O	37170	37173	few
O	37174	37180	points
O	37181	37183	to
O	37184	37187	add
O	37188	37190	to
O	37191	37196	Brian
O	37197	37202	Goetz
O	37202	37203	'
O	37204	37213	excellent
O	37214	37220	answer
O	37221	37222	.

O	37223	37225	It
O	37225	37226	'
O	37226	37227	s
O	37228	37233	quite
O	37234	37240	common
O	37241	37243	to
O	37244	37250	return
O	37251	37252	a
B-api_mention	37253	37259	Stream
O	37260	37264	from
O	37265	37266	a
O	37267	37268	"
O	37268	37274	getter
O	37274	37275	"
O	37276	37281	style
O	37282	37288	method
O	37289	37293	call
O	37293	37294	.

O	37295	37298	See
O	37299	37302	the
B-api_mention	37303	37309	Stream
O	37310	37315	usage
O	37316	37320	page
O	37321	37323	in
O	37324	37327	the
O	37328	37332	Java
O	37333	37334	8
O	37335	37342	javadoc
O	37343	37346	and
O	37347	37351	look
O	37352	37355	for
O	37356	37357	"
O	37357	37364	methods
O	37364	37365	.
O	37365	37366	.
O	37366	37367	.
O	37368	37372	that
O	37373	37379	return
B-api_mention	37380	37386	Stream
O	37386	37387	"
O	37388	37391	for
O	37392	37395	the
O	37396	37404	packages
O	37405	37410	other
O	37411	37415	than
B-api_mention	37416	37420	java
I-api_mention	37420	37421	.
I-api_mention	37421	37425	util
I-api_mention	37425	37426	.
I-api_mention	37426	37432	Stream
O	37433	37434	.

O	37435	37440	These
O	37441	37448	methods
O	37449	37452	are
O	37453	37460	usually
O	37461	37463	on
O	37464	37471	classes
O	37472	37476	that
O	37477	37486	represent
O	37487	37489	or
O	37490	37493	can
O	37494	37501	contain
O	37502	37510	multiple
O	37511	37517	values
O	37518	37520	or
O	37521	37533	aggregations
O	37534	37536	of
O	37537	37546	something
O	37546	37547	.

O	37548	37550	In
O	37551	37555	such
O	37556	37561	cases
O	37561	37562	,
O	37563	37567	APIs
O	37568	37577	typically
O	37578	37582	have
O	37583	37591	returned
O	37592	37603	collections
O	37604	37606	or
O	37607	37613	arrays
O	37614	37616	of
O	37617	37621	them
O	37621	37622	.

O	37623	37626	For
O	37627	37630	all
O	37631	37634	the
O	37635	37642	reasons
O	37643	37647	that
O	37648	37653	Brian
O	37654	37659	noted
O	37660	37662	in
O	37663	37666	his
O	37667	37673	answer
O	37673	37674	,
O	37675	37677	it
O	37677	37678	'
O	37678	37679	s
O	37680	37684	very
O	37685	37693	flexible
O	37694	37696	to
O	37697	37700	add
B-api_mention	37701	37707	Stream
O	37707	37708	-
O	37708	37717	returning
O	37718	37725	methods
O	37726	37730	here
O	37730	37731	.

O	37732	37736	Many
O	37737	37739	of
O	37740	37745	these
O	37746	37753	classes
O	37754	37758	have
O	37759	37770	collections
O	37770	37771	-
O	37772	37774	or
O	37775	37780	array
O	37780	37781	-
O	37781	37790	returning
O	37791	37798	methods
O	37799	37806	already
O	37806	37807	,
O	37808	37815	because
O	37816	37819	the
O	37820	37827	classes
O	37828	37835	predate
O	37836	37839	the
B-api_mention	37840	37847	Streams
O	37848	37851	API
O	37851	37852	.

O	37853	37855	If
O	37856	37859	you
O	37859	37860	'
O	37860	37862	re
O	37863	37872	designing
O	37873	37874	a
O	37875	37878	new
O	37879	37882	API
O	37882	37883	,
O	37884	37887	and
O	37888	37890	it
O	37891	37896	makes
O	37897	37902	sense
O	37903	37905	to
O	37906	37913	provide
B-api_mention	37914	37920	Stream
O	37920	37921	-
O	37921	37930	returning
O	37931	37938	methods
O	37938	37939	,
O	37940	37942	it
O	37943	37948	might
O	37949	37952	not
O	37953	37955	be
O	37956	37965	necessary
O	37966	37968	to
O	37969	37972	add
O	37973	37983	collection
O	37983	37984	-
O	37984	37993	returning
O	37994	38001	methods
O	38002	38004	as
O	38005	38009	well
O	38009	38010	.

O	38011	38016	Brian
O	38017	38026	mentioned
O	38027	38030	the
O	38031	38035	cost
O	38036	38038	of
O	38039	38040	"
O	38040	38053	materializing
O	38053	38054	"
O	38055	38058	the
O	38059	38065	values
O	38066	38070	into
O	38071	38072	a
O	38073	38083	collection
O	38083	38084	.

O	38085	38087	To
O	38088	38095	amplify
O	38096	38100	this
O	38101	38106	point
O	38106	38107	,
O	38108	38113	there
O	38114	38117	are
O	38118	38126	actually
O	38127	38130	two
O	38131	38136	costs
O	38137	38141	here
O	38141	38142	:
O	38143	38146	the
O	38147	38151	cost
O	38152	38154	of
O	38155	38162	storing
O	38163	38169	values
O	38170	38172	in
O	38173	38176	the
O	38177	38187	collection
O	38188	38189	(
O	38189	38195	memory
O	38196	38206	allocation
O	38207	38210	and
O	38211	38218	copying
O	38218	38219	)
O	38220	38223	and
O	38224	38228	also
O	38229	38232	the
O	38233	38237	cost
O	38238	38240	of
O	38241	38249	creating
O	38250	38253	the
O	38254	38260	values
O	38261	38263	in
O	38264	38267	the
O	38268	38273	first
O	38274	38279	place
O	38279	38280	.

O	38281	38284	The
O	38285	38291	latter
O	38292	38296	cost
O	38297	38300	can
O	38301	38306	often
O	38307	38309	be
O	38310	38317	reduced
O	38318	38320	or
O	38321	38328	avoided
O	38329	38331	by
O	38332	38338	taking
O	38339	38348	advantage
O	38349	38351	of
O	38352	38353	a
B-api_mention	38354	38360	Stream
O	38360	38361	'
O	38361	38362	s
O	38363	38371	laziness
O	38371	38372	-
O	38372	38379	seeking
O	38380	38388	behavior
O	38388	38389	.

O	38390	38391	A
O	38392	38396	good
O	38397	38404	example
O	38405	38407	of
O	38408	38412	this
O	38413	38416	are
O	38417	38420	the
O	38421	38425	APIs
O	38426	38428	in
B-api_mention	38429	38433	java
I-api_mention	38433	38434	.
I-api_mention	38434	38437	nio
I-api_mention	38437	38438	.
I-api_mention	38438	38442	file
I-api_mention	38442	38443	.
I-api_mention	38443	38448	Files
O	38449	38450	:
O	38451	38452	#
O	38452	38455	pre
O	38456	38459	Not
O	38460	38464	only
O	38465	38469	does
B-api_mention	38470	38482	readAllLines
O	38483	38487	have
O	38488	38490	to
O	38491	38495	hold
O	38496	38499	the
O	38500	38506	entire
O	38507	38511	file
O	38512	38520	contents
O	38521	38523	in
O	38524	38530	memory
O	38531	38533	in
O	38534	38539	order
O	38540	38542	to
O	38543	38548	store
O	38549	38551	it
O	38552	38556	into
O	38557	38560	the
O	38561	38567	result
O	38568	38572	list
O	38572	38573	,
O	38574	38576	it
O	38577	38581	also
O	38582	38585	has
O	38586	38588	to
O	38589	38593	read
O	38594	38597	the
O	38598	38602	file
O	38603	38605	to
O	38606	38609	the
O	38610	38614	very
O	38615	38618	end
O	38619	38625	before
O	38626	38628	it
O	38629	38636	returns
O	38637	38640	the
O	38641	38645	list
O	38645	38646	.

O	38647	38650	The
B-api_mention	38651	38656	lines
O	38657	38663	method
O	38664	38667	can
O	38668	38674	return
O	38675	38681	almost
O	38682	38693	immediately
O	38694	38699	after
O	38700	38702	it
O	38703	38706	has
O	38707	38716	performed
O	38717	38721	some
O	38722	38727	setup
O	38727	38728	,
O	38729	38736	leaving
O	38737	38741	file
O	38742	38749	reading
O	38750	38753	and
O	38754	38758	line
O	38759	38767	breaking
O	38768	38773	until
O	38774	38779	later
O	38780	38784	when
O	38785	38787	it
O	38787	38788	'
O	38788	38789	s
O	38790	38799	necessary
O	38800	38801	-
O	38801	38802	-
O	38803	38805	or
O	38806	38809	not
O	38810	38812	at
O	38813	38816	all
O	38816	38817	.

O	38818	38822	This
O	38823	38825	is
O	38826	38827	a
O	38828	38832	huge
O	38833	38840	benefit
O	38840	38841	,
O	38842	38844	if
O	38845	38848	for
O	38849	38856	example
O	38856	38857	,
O	38858	38861	the
O	38862	38868	caller
O	38869	38871	is
O	38872	38882	interested
O	38883	38887	only
O	38888	38890	in
O	38891	38894	the
O	38895	38900	first
O	38901	38904	ten
O	38905	38910	lines
O	38910	38911	:
B-api_mention	38912	38916	List
I-api_mention	38916	38917	<
I-api_mention	38917	38918	T
I-api_mention	38918	38919	>
O	38920	38928	firstTen
O	38929	38930	=
B-api_mention	38931	38936	Files
I-api_mention	38936	38937	.
I-api_mention	38937	38942	lines
I-api_mention	38942	38943	(
I-api_mention	38943	38947	args
I-api_mention	38947	38948	)
I-api_mention	38948	38949	.
I-api_mention	38949	38954	limit
I-api_mention	38954	38955	(
I-api_mention	38955	38959	args
I-api_mention	38959	38960	)
I-api_mention	38960	38961	.
I-api_mention	38961	38968	collect
I-api_mention	38968	38969	(
I-api_mention	38969	38973	args
I-api_mention	38973	38974	)
O	38974	38975	;
O	38976	38978	Of
O	38979	38985	course
O	38986	38998	considerable
O	38999	39005	memory
O	39006	39011	space
O	39012	39015	can
O	39016	39018	be
O	39019	39024	saved
O	39025	39027	if
O	39028	39031	the
O	39032	39038	caller
O	39039	39046	filters
O	39047	39050	the
O	39051	39057	stream
O	39058	39060	to
O	39061	39067	return
O	39068	39072	only
O	39073	39078	lines
O	39079	39087	matching
O	39088	39089	a
O	39090	39097	pattern
O	39097	39098	,
O	39099	39102	etc
O	39102	39103	.

O	39104	39106	An
O	39107	39112	idiom
O	39113	39117	that
O	39118	39123	seems
O	39124	39126	to
O	39127	39129	be
O	39130	39138	emerging
O	39139	39141	is
O	39142	39144	to
O	39145	39149	name
O	39150	39156	stream
O	39156	39157	-
O	39157	39166	returning
O	39167	39174	methods
O	39175	39180	after
O	39181	39184	the
O	39185	39191	plural
O	39192	39194	of
O	39195	39198	the
O	39199	39203	name
O	39204	39206	of
O	39207	39210	the
O	39211	39217	things
O	39218	39222	that
O	39223	39225	it
O	39226	39236	represents
O	39237	39239	or
O	39240	39248	contains
O	39248	39249	,
O	39250	39257	without
O	39258	39259	a
O	39260	39263	get
O	39264	39270	prefix
O	39270	39271	.

O	39272	39276	Also
O	39276	39277	,
O	39278	39283	while
B-api_mention	39284	39290	stream
I-api_mention	39290	39291	(
I-api_mention	39291	39295	args
I-api_mention	39295	39296	)
O	39297	39299	is
O	39300	39301	a
O	39302	39312	reasonable
O	39313	39317	name
O	39318	39321	for
O	39322	39323	a
O	39324	39330	stream
O	39330	39331	-
O	39331	39340	returning
O	39341	39347	method
O	39348	39352	when
O	39353	39358	there
O	39359	39361	is
O	39362	39366	only
O	39367	39370	one
O	39371	39379	possible
O	39380	39383	set
O	39384	39386	of
O	39387	39393	values
O	39394	39396	to
O	39397	39399	be
O	39400	39408	returned
O	39408	39409	,
O	39410	39419	sometimes
O	39420	39425	there
O	39426	39429	are
O	39430	39437	classes
O	39438	39442	that
O	39443	39447	have
O	39448	39460	aggregations
O	39461	39463	of
O	39464	39472	multiple
O	39473	39478	types
O	39479	39481	of
O	39482	39488	values
O	39488	39489	.

O	39490	39493	For
O	39494	39501	example
O	39501	39502	,
O	39503	39510	suppose
O	39511	39514	you
O	39515	39519	have
O	39520	39524	some
O	39525	39531	object
O	39532	39536	that
O	39537	39545	contains
O	39546	39550	both
O	39551	39561	attributes
O	39562	39565	and
O	39566	39574	elements
O	39574	39575	.

O	39576	39579	You
O	39580	39585	might
O	39586	39593	provide
O	39594	39597	two
O	39598	39604	stream
O	39604	39605	-
O	39605	39614	returning
O	39615	39619	APIs
O	39619	39620	:
O	39621	39622	#
O	39622	39625	pre

O	39627	39635	Question
O	39635	39636	-
O	39636	39644	25903137
O	39644	39645	,
O	39646	39652	answer
O	39652	39653	-
O	39653	39661	25903190

O	39662	39663	#
O	39663	39666	pre
O	39667	39669	It
O	39669	39670	'
O	39670	39671	s
O	39672	39675	not
O	39676	39681	quite
O	39682	39684	as
O	39685	39689	nice
O	39690	39692	as
O	39693	39696	the
O	39697	39701	list
O	39702	39706	code
O	39706	39707	.

O	39708	39711	You
O	39712	39715	can
O	39715	39716	'
O	39716	39717	t
O	39718	39727	construct
O	39728	39731	new
B-api_mention	39732	39735	Map
I-api_mention	39735	39736	.
I-api_mention	39736	39741	Entry
O	39742	39743	s
O	39744	39746	in
O	39747	39748	a
B-api_mention	39749	39752	map
I-api_mention	39752	39753	(
I-api_mention	39753	39757	args
I-api_mention	39757	39758	)
O	39759	39763	call
O	39764	39766	so
O	39767	39770	the
O	39771	39775	work
O	39776	39778	is
O	39779	39784	mixed
O	39785	39789	into
O	39790	39793	the
B-api_mention	39794	39801	collect
I-api_mention	39801	39802	(
I-api_mention	39802	39806	args
I-api_mention	39806	39807	)
O	39808	39812	call
O	39812	39813	.

O	39815	39823	Question
O	39823	39824	-
O	39824	39832	25903137
O	39832	39833	,
O	39834	39840	answer
O	39840	39841	-
O	39841	39849	25905196

O	39850	39854	Here
O	39855	39858	are
O	39859	39863	some
O	39864	39874	variations
O	39875	39877	on
O	39878	39886	Sotirios
O	39887	39898	Delimanolis
O	39898	39899	'
O	39900	39906	answer
O	39907	39908	,
O	39909	39914	which
O	39915	39918	was
O	39919	39925	pretty
O	39926	39930	good
O	39931	39933	to
O	39934	39939	begin
O	39940	39944	with
O	39945	39946	(
O	39946	39947	+
O	39947	39948	1
O	39948	39949	)
O	39949	39950	.

O	39951	39959	Consider
O	39960	39963	the
O	39964	39973	following
O	39973	39974	:
O	39975	39976	#
O	39976	39979	pre
O	39980	39981	A
O	39982	39988	couple
O	39989	39995	points
O	39996	40000	here
O	40000	40001	.

O	40002	40007	First
O	40008	40010	is
O	40011	40014	the
O	40015	40018	use
O	40019	40021	of
O	40022	40031	wildcards
O	40032	40034	in
O	40035	40038	the
O	40039	40047	generics
O	40047	40048	;
O	40049	40053	this
O	40054	40059	makes
O	40060	40063	the
O	40064	40072	function
O	40073	40081	somewhat
O	40082	40086	more
O	40087	40095	flexible
O	40095	40096	.

O	40097	40098	A
O	40099	40107	wildcard
O	40108	40113	would
O	40114	40116	be
O	40117	40126	necessary
O	40127	40129	if
O	40129	40130	,
O	40131	40134	for
O	40135	40142	example
O	40142	40143	,
O	40144	40147	you
O	40148	40154	wanted
O	40155	40158	the
O	40159	40165	output
O	40166	40169	map
O	40170	40172	to
O	40173	40177	have
O	40178	40179	a
O	40180	40183	key
O	40184	40188	that
O	40188	40189	'
O	40189	40190	s
O	40191	40192	a
O	40193	40203	superclass
O	40204	40206	of
O	40207	40210	the
O	40211	40216	input
O	40217	40220	map
O	40220	40221	'
O	40221	40222	s
O	40223	40226	key
O	40226	40227	:
O	40228	40229	#
O	40229	40232	pre
O	40233	40234	(
O	40234	40239	There
O	40240	40242	is
O	40243	40247	also
O	40248	40250	an
O	40251	40258	example
O	40259	40262	for
O	40263	40266	the
O	40267	40270	map
O	40270	40271	'
O	40271	40272	s
O	40273	40279	values
O	40279	40280	,
O	40281	40284	but
O	40285	40287	it
O	40287	40288	'
O	40288	40289	s
O	40290	40296	really
O	40297	40306	contrived
O	40306	40307	,
O	40308	40311	and
O	40312	40313	I
O	40314	40319	admit
O	40320	40324	that
O	40325	40331	having
O	40332	40335	the
O	40336	40343	bounded
O	40344	40352	wildcard
O	40353	40356	for
O	40357	40358	Y
O	40359	40363	only
O	40364	40369	helps
O	40370	40372	in
O	40373	40377	edge
O	40378	40383	cases
O	40383	40384	.
O	40384	40385	)
O	40386	40387	A
O	40388	40394	second
O	40395	40400	point
O	40401	40403	is
O	40404	40408	that
O	40409	40416	instead
O	40417	40419	of
O	40420	40427	running
O	40428	40431	the
O	40432	40438	stream
O	40439	40443	over
O	40444	40447	the
O	40448	40453	input
O	40454	40457	map
O	40457	40458	'
O	40458	40459	s
B-api_mention	40460	40468	entrySet
O	40469	40470	,
O	40471	40472	I
O	40473	40476	ran
O	40477	40479	it
O	40480	40484	over
O	40485	40488	the
B-api_mention	40489	40495	keySet
O	40496	40497	.

O	40498	40502	This
O	40503	40508	makes
O	40509	40512	the
O	40513	40517	code
O	40518	40519	a
O	40520	40526	little
O	40527	40534	cleaner
O	40534	40535	,
O	40536	40537	I
O	40538	40543	think
O	40543	40544	,
O	40545	40547	at
O	40548	40551	the
O	40552	40556	cost
O	40557	40559	of
O	40560	40566	having
O	40567	40569	to
O	40570	40575	fetch
O	40576	40582	values
O	40583	40586	out
O	40587	40589	of
O	40590	40593	the
O	40594	40597	map
O	40598	40605	instead
O	40606	40608	of
O	40609	40613	from
O	40614	40617	the
O	40618	40621	map
O	40622	40627	entry
O	40627	40628	.

O	40629	40641	Incidentally
O	40641	40642	,
O	40643	40644	I
O	40645	40654	initially
O	40655	40658	had
O	40659	40662	key
O	40663	40664	-
O	40664	40665	>
O	40666	40669	key
O	40670	40672	as
O	40673	40676	the
O	40677	40682	first
O	40683	40691	argument
O	40692	40694	to
B-api_mention	40695	40700	toMap
I-api_mention	40700	40701	(
I-api_mention	40701	40705	args
I-api_mention	40705	40706	)
O	40707	40710	and
O	40711	40715	this
O	40716	40722	failed
O	40723	40727	with
O	40728	40729	a
O	40730	40734	type
O	40735	40744	inference
O	40745	40750	error
O	40751	40754	for
O	40755	40759	some
O	40760	40766	reason
O	40766	40767	.

O	40768	40776	Changing
O	40777	40779	it
O	40780	40782	to
O	40783	40784	(
O	40784	40785	X
O	40786	40789	key
O	40789	40790	)
O	40791	40792	-
O	40792	40793	>
O	40794	40797	key
O	40798	40804	worked
O	40804	40805	,
O	40806	40808	as
O	40809	40812	did
B-api_mention	40813	40821	Function
I-api_mention	40821	40822	.
I-api_mention	40822	40830	identity
I-api_mention	40830	40831	(
I-api_mention	40831	40835	args
I-api_mention	40835	40836	)
O	40837	40838	.

O	40839	40844	Still
O	40845	40852	another
O	40853	40862	variation
O	40863	40865	is
O	40866	40868	as
O	40869	40876	follows
O	40876	40877	:
O	40878	40879	#
O	40879	40882	pre
O	40883	40887	This
O	40888	40892	uses
B-api_mention	40893	40896	Map
I-api_mention	40896	40897	.
I-api_mention	40897	40904	forEach
I-api_mention	40904	40905	(
I-api_mention	40905	40909	args
I-api_mention	40909	40910	)
O	40911	40918	instead
O	40919	40921	of
O	40922	40929	streams
O	40929	40930	.

O	40931	40935	This
O	40936	40938	is
O	40939	40943	even
O	40944	40951	simpler
O	40951	40952	,
O	40953	40954	I
O	40955	40960	think
O	40960	40961	,
O	40962	40969	because
O	40970	40972	it
O	40973	40982	dispenses
O	40983	40987	with
O	40988	40991	the
O	40992	41002	collectors
O	41002	41003	,
O	41004	41009	which
O	41010	41013	are
O	41014	41022	somewhat
O	41023	41029	clumsy
O	41030	41032	to
O	41033	41036	use
O	41037	41041	with
O	41042	41046	maps
O	41046	41047	.

O	41048	41051	The
O	41052	41058	reason
O	41059	41061	is
O	41062	41066	that
B-api_mention	41067	41070	Map
I-api_mention	41070	41071	.
I-api_mention	41071	41078	forEach
I-api_mention	41078	41079	(
I-api_mention	41079	41083	args
I-api_mention	41083	41084	)
O	41085	41090	gives
O	41091	41094	the
O	41095	41098	key
O	41099	41102	and
O	41103	41108	value
O	41109	41111	as
O	41112	41120	separate
O	41121	41131	parameters
O	41131	41132	,
O	41133	41140	whereas
O	41141	41144	the
O	41145	41151	stream
O	41152	41155	has
O	41156	41160	only
O	41161	41164	one
O	41165	41170	value
O	41171	41172	-
O	41172	41173	-
O	41174	41177	and
O	41178	41181	you
O	41182	41186	have
O	41187	41189	to
O	41190	41196	choose
O	41197	41204	whether
O	41205	41207	to
O	41208	41211	use
O	41212	41215	the
O	41216	41219	key
O	41220	41222	or
O	41223	41226	the
O	41227	41230	map
O	41231	41236	entry
O	41237	41239	as
O	41240	41244	that
O	41245	41250	value
O	41250	41251	.

O	41252	41254	On
O	41255	41258	the
O	41259	41264	minus
O	41265	41269	side
O	41269	41270	,
O	41271	41275	this
O	41276	41281	lacks
O	41282	41285	the
O	41286	41290	rich
O	41290	41291	,
O	41292	41299	streamy
O	41300	41308	goodness
O	41309	41311	of
O	41312	41315	the
O	41316	41321	other
O	41322	41332	approaches
O	41332	41333	.

O	41334	41335	:
O	41335	41336	-
O	41336	41337	)

O	41339	41347	Question
O	41347	41348	-
O	41348	41356	25056607
O	41356	41357	,
O	41358	41364	answer
O	41364	41365	-
O	41365	41373	25056821

O	41374	41387	Documentation
O	41387	41388	:
O	41389	41392	For
O	41392	41393	:
B-api_mention	41394	41400	System
I-api_mention	41400	41401	.
I-api_mention	41401	41404	out
I-api_mention	41404	41405	.
I-api_mention	41405	41412	println
I-api_mention	41412	41413	(
I-api_mention	41413	41417	args
I-api_mention	41417	41418	)
O	41418	41419	;
O	41420	41421	#
O	41421	41431	blockquote
O	41432	41434	It
O	41435	41439	will
O	41440	41446	simply
O	41447	41453	return
O	41454	41457	the
O	41458	41464	entire
O	41465	41471	string
O	41472	41476	that
O	41476	41477	'
O	41477	41478	s
O	41479	41482	why
O	41483	41485	it
O	41486	41493	returns
O	41494	41495	1
O	41495	41496	.

O	41497	41500	For
O	41501	41504	the
O	41505	41511	second
O	41512	41516	case
O	41516	41517	,
B-api_mention	41518	41524	String
I-api_mention	41524	41525	.
I-api_mention	41525	41530	split
O	41531	41535	will
O	41536	41543	discard
O	41544	41547	the
O	41548	41549	,
O	41550	41552	so
O	41553	41556	the
O	41557	41563	result
O	41564	41568	will
O	41569	41571	be
O	41572	41577	empty
O	41577	41578	.

B-api_mention	41579	41585	String
I-api_mention	41585	41586	.
I-api_mention	41586	41591	split
O	41592	41600	silently
O	41601	41609	discards
O	41610	41618	trailing
O	41619	41629	separators
O	41630	41633	see
O	41634	41639	guava
B-api_mention	41640	41656	StringsExplained
O	41657	41660	too

O	41662	41670	Question
O	41670	41671	-
O	41671	41679	25056607
O	41679	41680	,
O	41681	41687	answer
O	41687	41688	-
O	41688	41696	25056878

O	41697	41699	We
O	41700	41703	can
O	41704	41708	take
O	41709	41710	a
O	41711	41715	look
O	41716	41720	into
O	41721	41724	the
O	41725	41731	source
O	41732	41736	code
O	41737	41739	of
B-api_mention	41740	41744	java
I-api_mention	41744	41745	.
I-api_mention	41745	41749	util
I-api_mention	41749	41750	.
I-api_mention	41750	41755	regex
I-api_mention	41755	41756	.
I-api_mention	41756	41763	Pattern
O	41764	41769	which
O	41770	41772	is
O	41773	41779	behind
B-api_mention	41780	41786	String
I-api_mention	41786	41787	.
I-api_mention	41787	41792	split
O	41793	41794	.

O	41795	41798	Way
O	41799	41803	down
O	41804	41807	the
O	41808	41814	rabbit
O	41815	41819	hole
O	41820	41823	the
O	41824	41830	method
O	41831	41837	public
B-api_mention	41838	41844	String
O	41844	41845	[
O	41845	41846	]
B-api_mention	41847	41852	split
I-api_mention	41852	41853	(
I-api_mention	41853	41857	args
I-api_mention	41857	41858	)
O	41859	41861	is
O	41862	41869	invoked
O	41869	41870	.

O	41871	41876	Input
O	41877	41890	StringLiteral
O	41891	41894	For
O	41895	41900	input
O	41901	41914	StringLiteral
O	41915	41919	this
O	41920	41926	method
O	41927	41929	is
O	41930	41936	called
O	41937	41939	as
B-api_mention	41940	41946	String
O	41946	41947	[
O	41947	41948	]
O	41949	41954	parts
O	41955	41956	=
B-api_mention	41957	41962	split
I-api_mention	41962	41963	(
I-api_mention	41963	41967	args
I-api_mention	41967	41968	)
O	41968	41969	;
O	41970	41973	The
O	41974	41984	intersting
O	41985	41989	part
O	41990	41992	of
O	41993	41997	this
O	41998	42004	method
O	42005	42007	is
O	42008	42009	:
O	42010	42011	#
O	42011	42014	pre
O	42015	42018	And
O	42019	42023	that
O	42024	42026	is
O	42027	42031	what
O	42032	42039	happens
O	42039	42040	:
O	42041	42044	new
B-api_mention	42045	42051	String
O	42051	42052	[
O	42052	42053	]
O	42054	42055	{
O	42055	42060	input
B-api_mention	42060	42061	.
I-api_mention	42061	42069	toString
I-api_mention	42069	42070	(
I-api_mention	42070	42071	)
O	42071	42072	}
O	42073	42075	is
O	42076	42084	returned
O	42085	42086	.

O	42087	42092	Input
O	42093	42106	StringLiteral
O	42107	42110	For
O	42111	42116	input
O	42117	42130	StringLiteral
O	42131	42134	the
O	42135	42145	intersting
O	42146	42150	part
O	42151	42153	is
O	42154	42155	#
O	42155	42158	pre
O	42159	42163	Here
O	42164	42174	resultSize
O	42175	42176	=
O	42176	42177	=
O	42178	42179	0
O	42180	42183	and
O	42184	42189	limit
O	42190	42191	=
O	42191	42192	=
O	42193	42194	0
O	42195	42197	so
O	42198	42201	new
B-api_mention	42202	42208	String
O	42208	42209	[
O	42209	42210	0
O	42210	42211	]
O	42212	42214	is
O	42215	42223	returned
O	42224	42225	.

O	42227	42235	Question
O	42235	42236	-
O	42236	42244	25850328
O	42244	42245	,
O	42246	42252	answer
O	42252	42253	-
O	42253	42261	25850576

O	42262	42263	#
O	42263	42265	li
O	42266	42268	Is
O	42269	42272	the
O	42273	42283	definition
O	42284	42286	of
O	42287	42288	a
B-api_mention	42289	42295	marker
O	42296	42305	interface
O	42306	42315	mentioned
O	42316	42321	above
O	42322	42324	in
O	42325	42328	1st
O	42329	42334	point
O	42335	42340	wrong
O	42340	42341	?

O	42342	42343	-
O	42344	42346	It
O	42347	42349	is
O	42350	42357	correct
O	42358	42360	in
O	42361	42364	the
O	42365	42370	parts
O	42371	42375	that
O	42376	42377	(
O	42377	42378	1
O	42378	42379	)
O	42380	42381	a
B-api_mention	42382	42388	marker
O	42389	42398	interface
O	42399	42403	must
O	42404	42406	be
O	42407	42412	empty
O	42412	42413	,
O	42414	42417	and
O	42418	42419	(
O	42419	42420	2
O	42420	42421	)
O	42422	42434	implementing
O	42435	42437	it
O	42438	42440	is
O	42441	42446	meant
O	42447	42449	to
O	42450	42455	imply
O	42456	42460	some
O	42461	42468	special
O	42469	42478	treatment
O	42479	42481	of
O	42482	42485	the
O	42486	42498	implementing
O	42499	42504	class
O	42504	42505	.

O	42506	42509	The
O	42510	42514	part
O	42515	42519	that
O	42520	42522	is
O	42523	42532	incorrect
O	42533	42535	is
O	42536	42540	that
O	42541	42543	it
O	42544	42551	implies
O	42552	42556	that
O	42557	42560	JVM
O	42561	42563	or
O	42564	42567	the
O	42568	42576	compiler
O	42577	42582	would
O	42583	42588	treat
O	42589	42592	the
O	42593	42600	objects
O	42601	42603	of
O	42604	42608	that
O	42609	42614	class
O	42615	42626	differently
O	42626	42627	:
O	42628	42631	you
O	42632	42635	are
O	42636	42643	correct
O	42644	42646	in
O	42647	42656	observing
O	42657	42661	that
O	42662	42664	it
O	42665	42667	is
O	42668	42671	the
O	42672	42676	code
O	42677	42679	of
O	42680	42684	Java
O	42685	42690	class
O	42691	42698	library
O	42699	42703	that
O	42704	42710	treats
O	42711	42716	these
O	42717	42724	objects
O	42725	42727	as
O	42728	42737	cloneable
O	42737	42738	,
O	42739	42751	serializable
O	42751	42752	,
O	42753	42756	etc
O	42756	42757	.

O	42758	42760	It
O	42761	42764	has
O	42765	42772	nothing
O	42773	42775	to
O	42776	42778	do
O	42779	42783	with
O	42784	42787	the
O	42788	42796	compiler
O	42797	42799	or
O	42800	42803	the
O	42804	42807	JVM
O	42807	42808	.

O	42809	42810	#
O	42810	42812	li
O	42813	42820	instead
O	42821	42823	of
O	42824	42829	using
O	42830	42833	the
B-api_mention	42834	42844	instanceOf
O	42845	42853	operator
O	42854	42857	why
O	42858	42861	can
O	42861	42862	'
O	42862	42863	t
O	42864	42867	the
O	42868	42874	method
O	42875	42877	be
O	42878	42887	something
O	42888	42892	like
B-api_mention	42893	42904	writeObject
I-api_mention	42904	42905	(
I-api_mention	42905	42909	args
I-api_mention	42909	42910	)
O	42911	42913	so
O	42914	42918	that
O	42919	42924	there
O	42925	42927	is
O	42928	42929	a
O	42930	42937	compile
O	42937	42938	-
O	42938	42942	time
O	42943	42947	type
O	42948	42956	checking
O	42957	42958	-
O	42959	42963	This
O	42964	42968	lets
O	42969	42972	you
O	42973	42978	avoid
O	42979	42988	polluting
O	42989	42993	your
O	42994	42998	code
O	42999	43003	with
O	43004	43007	the
O	43008	43012	name
O	43013	43015	of
O	43016	43019	the
O	43020	43026	marker
O	43027	43036	interface
O	43037	43041	when
O	43042	43043	a
O	43044	43045	"
O	43045	43050	plain
O	43051	43057	Object
O	43058	43059	"
O	43060	43062	is
O	43063	43069	needed
O	43069	43070	.

O	43071	43074	For
O	43075	43082	example
O	43082	43083	,
O	43084	43086	if
O	43087	43090	you
O	43091	43095	make
O	43096	43097	a
O	43098	43103	class
O	43104	43108	that
O	43109	43114	needs
O	43115	43117	to
O	43118	43120	be
O	43121	43133	serializable
O	43133	43134	,
O	43135	43138	and
O	43139	43142	has
O	43143	43149	object
O	43150	43157	members
O	43157	43158	,
O	43159	43162	you
O	43163	43168	would
O	43169	43171	be
O	43172	43178	forced
O	43179	43181	to
O	43182	43188	either
O	43189	43191	do
O	43192	43199	casting
O	43200	43202	or
O	43203	43207	make
O	43208	43212	your
O	43213	43220	objects
B-api_mention	43221	43233	Serializable
O	43234	43236	at
O	43237	43244	compile
O	43245	43249	time
O	43249	43250	.

O	43251	43255	This
O	43256	43258	is
O	43259	43271	inconvenient
O	43271	43272	,
O	43273	43280	because
O	43281	43284	the
O	43285	43294	interface
O	43295	43297	is
O	43298	43304	devoid
O	43305	43307	of
O	43308	43311	any
O	43312	43325	functionality
O	43325	43326	.

O	43327	43328	#
O	43328	43330	li
O	43331	43334	How
B-api_mention	43335	43346	Annotations
O	43347	43350	are
O	43351	43357	better
O	43358	43362	than
B-api_mention	43363	43369	Marker
O	43370	43380	Interfaces
O	43380	43381	?

O	43382	43383	-
O	43384	43388	They
O	43389	43392	let
O	43393	43396	you
O	43397	43404	achieve
O	43405	43408	the
O	43409	43413	same
O	43414	43421	purpose
O	43422	43424	of
O	43425	43434	conveying
O	43435	43443	metadata
O	43444	43449	about
O	43450	43453	the
O	43454	43459	class
O	43460	43462	to
O	43463	43466	its
O	43467	43476	consumers
O	43477	43484	without
O	43485	43493	creating
O	43494	43495	a
O	43496	43504	separate
O	43505	43509	type
O	43510	43513	for
O	43514	43516	it
O	43516	43517	.

B-api_mention	43518	43529	Annotations
O	43530	43533	are
O	43534	43538	more
O	43539	43547	powerful
O	43547	43548	,
O	43549	43552	too
O	43552	43553	,
O	43554	43561	letting
O	43562	43573	programmers
O	43574	43578	pass
O	43579	43583	more
O	43584	43597	sophisticated
O	43598	43609	information
O	43610	43612	to
O	43613	43620	classes
O	43621	43625	that
O	43626	43627	"
O	43627	43634	consume
O	43634	43635	"
O	43636	43638	it
O	43638	43639	.

O	43641	43649	Question
O	43649	43650	-
O	43650	43658	25850328
O	43658	43659	,
O	43660	43666	answer
O	43666	43667	-
O	43667	43675	25850622

O	43676	43677	a
O	43677	43678	.

O	43679	43680	I
O	43681	43685	have
O	43686	43692	always
O	43693	43697	seen
O	43698	43702	them
O	43703	43705	as
O	43706	43707	a
O	43708	43714	design
O	43715	43722	pattern
O	43723	43726	and
O	43727	43734	nothing
O	43735	43738	JVM
O	43738	43739	-
O	43739	43746	Special
O	43747	43748	I
O	43749	43753	have
O	43754	43758	used
O	43759	43763	that
O	43764	43771	pattern
O	43772	43774	in
O	43775	43782	several
O	43783	43793	situations
O	43793	43794	.

O	43795	43796	c
O	43796	43797	.

O	43798	43799	I
O	43800	43807	beleive
O	43808	43812	that
O	43813	43818	using
B-api_mention	43819	43830	Annotations
O	43831	43833	to
O	43834	43838	mark
O	43839	43848	something
O	43849	43851	is
O	43852	43853	a
O	43854	43860	better
O	43861	43869	solution
O	43870	43874	then
O	43875	43880	using
O	43881	43887	marker
O	43888	43898	interfaces
O	43898	43899	.

O	43900	43906	Simply
O	43907	43914	because
B-api_mention	43915	43925	Interfaces
O	43926	43929	are
O	43930	43932	in
O	43933	43936	the
O	43937	43942	first
O	43943	43948	place
O	43949	43954	aimed
O	43955	43957	to
O	43958	43964	define
O	43965	43971	common
O	43972	43982	interfaces
O	43983	43985	of
O	43986	43991	Types
O	43992	43993	/
O	43994	44001	Classes
O	44001	44002	.

O	44003	44007	They
O	44008	44011	are
O	44012	44016	part
O	44017	44019	of
O	44020	44023	the
O	44024	44029	class
O	44029	44030	-
O	44030	44038	hierachy
O	44038	44039	.

O	44040	44051	Annotations
O	44052	44055	are
O	44056	44061	aimed
O	44062	44064	to
O	44065	44072	provide
O	44073	44077	Meta
O	44077	44078	-
O	44078	44090	Informations
O	44091	44093	to
O	44094	44098	Code
O	44098	44099	,
O	44100	44103	and
O	44104	44105	I
O	44106	44111	think
O	44112	44116	that
O	44117	44123	marker
O	44124	44127	are
O	44128	44132	meta
O	44132	44133	-
O	44133	44145	informations
O	44145	44146	.

O	44147	44149	So
O	44150	44154	they
O	44155	44158	are
O	44159	44166	exactly
O	44167	44170	for
O	44171	44175	that
O	44176	44179	use
O	44179	44180	-
O	44180	44184	case
O	44184	44185	.

O	44187	44195	Question
O	44195	44196	-
O	44196	44204	25850328
O	44204	44205	,
O	44206	44212	answer
O	44212	44213	-
O	44213	44221	25853827

O	44222	44223	I
O	44224	44229	would
O	44230	44235	argue
O	44236	44241	first
O	44241	44242	-
O	44242	44245	off
O	44246	44250	that
B-api_mention	44251	44263	Serializable
O	44264	44267	and
B-api_mention	44268	44277	Cloneable
O	44278	44281	are
O	44282	44285	bad
O	44286	44294	examples
O	44295	44297	of
O	44298	44304	marker
O	44305	44315	interfaces
O	44315	44316	.

O	44317	44321	Sure
O	44321	44322	,
O	44323	44327	they
O	44327	44328	'
O	44328	44330	re
O	44331	44341	interfaces
O	44342	44346	with
O	44347	44354	methods
O	44354	44355	,
O	44356	44359	but
O	44360	44364	they
O	44365	44370	imply
O	44371	44378	methods
O	44378	44379	,
O	44380	44384	such
O	44385	44387	as
B-api_mention	44388	44399	writeObject
I-api_mention	44399	44400	(
I-api_mention	44400	44404	args
I-api_mention	44404	44405	)
O	44406	44407	.

O	44408	44409	(
O	44409	44412	The
O	44413	44421	compiler
O	44422	44426	will
O	44427	44433	create
O	44434	44435	a
B-api_mention	44436	44447	writeObject
I-api_mention	44447	44448	(
I-api_mention	44448	44452	args
I-api_mention	44452	44453	)
O	44454	44460	method
O	44461	44464	for
O	44465	44468	you
O	44469	44471	if
O	44472	44475	you
O	44476	44479	don
O	44479	44480	'
O	44480	44481	t
O	44482	44490	override
O	44491	44493	it
O	44493	44494	,
O	44495	44498	and
O	44499	44502	all
O	44503	44510	objects
O	44511	44518	already
O	44519	44523	have
B-api_mention	44524	44529	clone
I-api_mention	44529	44530	(
I-api_mention	44530	44534	args
I-api_mention	44534	44535	)
O	44536	44537	,
O	44538	44541	but
O	44542	44545	the
O	44546	44554	compiler
O	44555	44559	will
O	44560	44565	again
O	44566	44572	create
O	44573	44574	a
O	44575	44579	real
B-api_mention	44580	44585	clone
I-api_mention	44585	44586	(
I-api_mention	44586	44590	args
I-api_mention	44590	44591	)
O	44592	44598	method
O	44599	44602	for
O	44603	44606	you
O	44607	44610	but
O	44611	44615	with
O	44616	44623	caveats
O	44623	44624	.
O	44625	44629	Both
O	44630	44632	of
O	44633	44638	these
O	44639	44642	are
O	44643	44648	weird
O	44649	44653	edge
O	44654	44659	cases
O	44660	44664	that
O	44665	44671	really
O	44672	44676	aren
O	44676	44677	'
O	44677	44678	t
O	44679	44683	good
O	44684	44690	design
O	44691	44699	examples
O	44699	44700	.
O	44700	44701	)
O	44702	44708	Marker
O	44709	44719	interfaces
O	44720	44723	are
O	44724	44733	generally
O	44734	44738	used
O	44739	44742	for
O	44743	44746	one
O	44747	44749	of
O	44750	44753	two
O	44754	44762	purposes
O	44762	44763	:
O	44764	44765	1
O	44765	44766	)
O	44767	44769	As
O	44770	44771	a
O	44772	44780	shortcut
O	44781	44783	to
O	44784	44789	avoid
O	44790	44792	an
O	44793	44804	excessively
O	44805	44809	long
O	44810	44814	type
O	44814	44815	,
O	44816	44821	which
O	44822	44825	can
O	44826	44832	happen
O	44833	44837	with
O	44838	44842	lots
O	44843	44845	of
O	44846	44854	generics
O	44854	44855	.

O	44856	44859	For
O	44860	44868	instance
O	44868	44869	,
O	44870	44873	say
O	44874	44877	you
O	44878	44882	have
O	44883	44887	this
O	44888	44894	method
O	44895	44904	signature
O	44904	44905	:
O	44906	44912	public
O	44913	44917	void
O	44918	44929	doSomething
O	44929	44930	(
O	44930	44934	args
O	44934	44935	)
O	44936	44937	{
O	44938	44939	.
O	44939	44940	.
O	44940	44941	.

O	44942	44943	}
O	44944	44948	That
O	44948	44949	'
O	44949	44950	s
O	44951	44956	messy
O	44957	44960	and
O	44961	44969	annoying
O	44970	44972	to
O	44973	44977	type
O	44977	44978	,
O	44979	44982	and
O	44983	44987	more
O	44988	44999	importantly
O	44999	45000	,
O	45001	45010	difficult
O	45011	45013	to
O	45014	45024	understand
O	45024	45025	.

O	45026	45034	Consider
O	45035	45039	this
O	45040	45047	instead
O	45047	45048	:
O	45049	45055	public
O	45056	45065	interface
O	45066	45072	Widget
O	45073	45080	extends
O	45081	45087	Foobar
O	45087	45088	<
O	45088	45089	T
O	45089	45090	>
O	45091	45092	{
O	45093	45094	}
O	45095	45099	Then
O	45100	45104	your
O	45105	45111	method
O	45112	45117	looks
O	45118	45122	like
O	45123	45127	this
O	45127	45128	:
O	45129	45135	public
O	45136	45140	void
O	45141	45152	doSomething
O	45152	45153	(
O	45153	45157	args
O	45157	45158	)
O	45159	45160	{
O	45161	45162	.
O	45162	45163	.
O	45163	45164	.

O	45165	45166	}
O	45167	45170	Not
O	45171	45175	only
O	45176	45178	is
O	45179	45181	it
O	45182	45189	clearer
O	45189	45190	,
O	45191	45194	but
O	45195	45198	you
O	45199	45202	can
O	45203	45206	now
O	45207	45214	Javadoc
O	45215	45218	the
B-api_mention	45219	45225	Widget
O	45226	45235	interface
O	45235	45236	,
O	45237	45240	and
O	45241	45243	it
O	45243	45244	'
O	45244	45245	s
O	45246	45250	also
O	45251	45257	easier
O	45258	45260	to
O	45261	45267	search
O	45268	45271	for
O	45272	45275	all
O	45276	45287	occurrences
O	45288	45290	in
O	45291	45295	your
O	45296	45300	code
O	45301	45303	of
B-api_mention	45304	45310	Widget
O	45310	45311	.

O	45312	45313	2
O	45313	45314	)
B-api_mention	45315	45321	Marker
O	45322	45332	interfaces
O	45333	45336	can
O	45337	45341	also
O	45342	45344	be
O	45345	45349	used
O	45350	45352	as
O	45353	45354	a
O	45355	45358	way
O	45359	45365	around
O	45366	45370	Java
O	45370	45371	'
O	45371	45372	s
O	45373	45377	lack
O	45378	45380	of
O	45381	45393	intersection
O	45394	45399	types
O	45399	45400	.

O	45401	45405	With
O	45406	45407	a
B-api_mention	45408	45414	marker
O	45415	45424	interface
O	45424	45425	,
O	45426	45429	you
O	45430	45433	can
O	45434	45441	require
O	45442	45451	something
O	45452	45454	to
O	45455	45457	be
O	45458	45460	of
O	45461	45464	two
O	45465	45474	different
O	45475	45480	types
O	45480	45481	,
O	45482	45486	such
O	45487	45489	as
O	45490	45492	in
O	45493	45494	a
O	45495	45501	method
O	45502	45511	signature
O	45511	45512	.

O	45513	45516	Say
O	45517	45520	you
O	45521	45525	have
O	45526	45530	some
O	45531	45540	interface
B-api_mention	45541	45547	Widget
O	45548	45550	in
O	45551	45555	your
O	45556	45567	application
O	45567	45568	,
O	45569	45573	like
O	45574	45576	we
O	45577	45586	described
O	45587	45592	above
O	45592	45593	.

O	45594	45596	If
O	45597	45600	you
O	45601	45605	have
O	45606	45607	a
O	45608	45614	method
O	45615	45619	that
O	45620	45628	requires
O	45629	45630	a
B-api_mention	45631	45637	Widget
O	45638	45642	that
O	45643	45647	also
O	45648	45655	happens
O	45656	45658	to
O	45659	45662	let
O	45663	45666	you
O	45667	45674	iterate
O	45675	45679	over
O	45680	45682	it
O	45683	45684	(
O	45684	45686	it
O	45686	45687	'
O	45687	45688	s
O	45689	45698	contrived
O	45698	45699	,
O	45700	45703	but
O	45704	45708	work
O	45709	45713	with
O	45714	45716	me
O	45717	45721	here
O	45721	45722	)
O	45722	45723	,
O	45724	45728	your
O	45729	45733	only
O	45734	45738	good
O	45739	45747	solution
O	45748	45750	is
O	45751	45753	to
O	45754	45760	create
O	45761	45762	a
O	45763	45769	marker
O	45770	45779	interface
O	45780	45784	that
O	45785	45792	extends
O	45793	45797	both
O	45798	45808	interfaces
O	45808	45809	:
O	45810	45816	public
O	45817	45826	interface
B-api_mention	45827	45841	IterableWidget
O	45842	45849	extends
B-api_mention	45850	45858	Iterable
I-api_mention	45858	45859	<
I-api_mention	45859	45860	T
I-api_mention	45860	45861	>
O	45861	45862	,
B-api_mention	45863	45869	Widget
O	45870	45871	{
O	45872	45873	}
O	45874	45877	And
O	45878	45880	in
O	45881	45885	your
O	45886	45890	code
O	45890	45891	:
O	45892	45893	#
O	45893	45896	pre

O	45898	45906	Question
O	45906	45907	-
O	45907	45915	25850328
O	45915	45916	,
O	45917	45923	answer
O	45923	45924	-
O	45924	45932	31838310

O	45933	45936	The
O	45937	45941	main
O	45942	45949	purpose
O	45950	45952	of
B-api_mention	45953	45959	marker
O	45960	45970	interfaces
O	45971	45973	is
O	45974	45976	to
O	45977	45983	create
O	45984	45991	special
O	45992	45997	types
O	45998	46003	where
O	46004	46009	types
O	46010	46020	themselves
O	46021	46025	have
O	46026	46028	no
O	46029	46037	behavior
O	46038	46040	of
O	46041	46046	their
O	46047	46050	own
O	46050	46051	.

O	46052	46053	#
O	46053	46056	pre
O	46057	46061	Here
O	46062	46066	save
O	46067	46073	method
O	46074	46079	makes
O	46080	46084	sure
O	46085	46089	that
O	46090	46094	only
O	46095	46098	the
O	46099	46106	objects
O	46107	46109	of
O	46110	46117	classes
O	46118	46122	that
O	46123	46132	implement
O	46133	46136	the
B-api_mention	46137	46149	MarkerEntity
O	46150	46159	interface
O	46160	46163	are
O	46164	46169	saved
O	46169	46170	,
O	46171	46174	for
O	46175	46180	other
O	46181	46186	types
B-api_mention	46187	46214	InvalidEntityFoundException
O	46215	46217	is
O	46218	46224	thrown
O	46224	46225	.

O	46226	46228	So
O	46229	46233	here
B-api_mention	46234	46246	MarkerEntity
O	46247	46253	marker
O	46254	46263	interface
O	46264	46266	is
O	46267	46275	defining
O	46276	46277	a
O	46278	46282	type
O	46283	46287	that
O	46288	46292	adds
O	46293	46300	special
O	46301	46309	behavior
O	46310	46312	to
O	46313	46316	the
O	46317	46324	classes
O	46325	46337	implementing
O	46338	46340	it
O	46340	46341	.

O	46342	46348	Though
O	46349	46360	annotations
O	46361	46364	can
O	46365	46369	also
O	46370	46374	used
O	46375	46378	now
O	46379	46381	to
O	46382	46386	mark
O	46387	46394	classes
O	46395	46398	for
O	46399	46403	some
O	46404	46411	special
O	46412	46422	treatments
O	46423	46426	but
O	46427	46433	marker
O	46434	46445	annotations
O	46446	46449	are
O	46450	46461	replacement
O	46462	46465	for
O	46466	46472	naming
O	46473	46480	pattern
O	46481	46484	not
O	46485	46488	for
B-api_mention	46489	46495	Marker
O	46496	46506	interfaces
O	46506	46507	.

O	46508	46511	But
O	46512	46518	marker
O	46519	46530	annotations
O	46531	46534	can
O	46534	46535	'
O	46535	46536	t
O	46537	46542	fully
O	46543	46550	replace
O	46551	46554	the
O	46555	46561	marker
O	46562	46572	interfaces
O	46573	46580	because
O	46580	46581	;
O	46582	46588	marker
O	46589	46599	interfaces
O	46600	46603	are
O	46604	46608	used
O	46609	46611	to
O	46612	46618	define
O	46619	46623	type
O	46624	46625	(
O	46625	46627	as
O	46628	46635	already
O	46636	46645	explained
O	46646	46651	above
O	46651	46652	)
O	46653	46658	where
O	46659	46661	as
B-api_mention	46662	46668	marker
O	46669	46680	annotations
O	46681	46683	do
O	46684	46687	not
O	46687	46688	.

O	46689	46695	Source
O	46696	46699	for
B-api_mention	46700	46706	marker
O	46707	46716	interface
O	46717	46724	comment

O	46726	46734	Question
O	46734	46735	-
O	46735	46743	25606833
O	46743	46744	,
O	46745	46751	answer
O	46751	46752	-
O	46752	46760	25757572

O	46761	46766	There
O	46767	46770	are
O	46771	46778	several
O	46779	46785	issues
O	46786	46790	here
O	46790	46791	.

O	46792	46793	#
O	46793	46795	li
O	46796	46799	Any
O	46800	46808	solution
O	46809	46814	based
O	46815	46817	on
O	46818	46825	reading
O	46826	46831	lines
O	46832	46834	is
O	46835	46840	going
O	46841	46843	to
O	46844	46851	process
O	46852	46856	each
O	46857	46866	character
O	46867	46872	twice
O	46872	46873	.

O	46874	46883	Compilers
O	46884	46887	for
O	46888	46895	example
O	46896	46899	don
O	46899	46900	'
O	46900	46901	t
O	46902	46904	do
O	46905	46909	this
O	46909	46910	,
O	46911	46915	they
O	46916	46920	read
O	46921	46924	one
O	46925	46934	character
O	46935	46937	at
O	46938	46939	a
O	46940	46944	time
O	46945	46948	and
O	46949	46957	despatch
O	46958	46960	on
O	46961	46963	it
O	46964	46972	directly
O	46972	46973	.

O	46974	46975	#
O	46975	46977	li
O	46978	46981	Any
O	46982	46990	solution
O	46991	46996	based
O	46997	46999	on
B-api_mention	47000	47008	readLine
I-api_mention	47008	47009	(
I-api_mention	47009	47013	args
I-api_mention	47013	47014	)
O	47015	47017	is
O	47018	47023	going
O	47024	47026	to
O	47027	47033	create
B-api_mention	47034	47041	Strings
O	47041	47042	.

O	47043	47044	#
O	47044	47046	li
O	47047	47050	You
O	47051	47054	are
O	47055	47060	using
O	47061	47070	different
O	47071	47077	buffer
O	47078	47083	sizes
O	47083	47084	.

O	47085	47086	#
O	47086	47088	li
O	47089	47092	You
O	47093	47096	are
O	47097	47102	using
O	47103	47112	different
O	47113	47114	I
O	47114	47115	/
O	47115	47116	O
O	47117	47129	technologies
O	47129	47130	.

O	47131	47132	#
O	47132	47134	li
O	47135	47137	In
O	47138	47142	some
O	47143	47148	cases
O	47149	47152	you
O	47153	47156	are
O	47157	47162	using
O	47163	47172	character
O	47173	47183	conversion
O	47183	47184	,
O	47185	47190	while
O	47191	47193	in
O	47194	47200	others
O	47201	47204	you
O	47205	47209	aren
O	47209	47210	'
O	47210	47211	t
O	47211	47212	.

O	47213	47214	#
O	47214	47216	li
O	47217	47220	You
O	47220	47221	'
O	47221	47223	re
O	47224	47228	over
O	47228	47229	-
O	47229	47238	analyzing
O	47239	47242	the
O	47243	47247	file
O	47247	47248	.

O	47249	47252	You
O	47253	47256	don
O	47256	47257	'
O	47257	47258	t
O	47259	47265	really
O	47266	47270	care
O	47271	47276	where
O	47277	47280	the
O	47281	47286	white
O	47287	47292	space
O	47293	47295	is
O	47295	47296	,
O	47297	47299	or
O	47300	47303	how
O	47304	47308	much
O	47309	47311	of
O	47312	47314	it
O	47315	47320	there
O	47321	47323	is
O	47323	47324	,
O	47325	47327	as
O	47328	47332	long
O	47333	47335	as
O	47336	47338	it
O	47339	47348	separates
O	47349	47352	the
O	47353	47360	numbers
O	47361	47365	from
O	47366	47370	each
O	47371	47376	other
O	47376	47377	.

O	47378	47380	My
O	47381	47389	solution
O	47389	47390	:
O	47391	47392	#
O	47392	47395	pre

O	47397	47405	Question
O	47405	47406	-
O	47406	47414	24547673
O	47414	47415	,
O	47416	47422	answer
O	47422	47423	-
O	47423	47431	24547831

O	47432	47434	It
O	47434	47435	'
O	47435	47436	s
O	47437	47438	a
O	47439	47446	curious
O	47447	47455	omission
O	47455	47456	.

O	47457	47460	You
O	47461	47466	would
O	47467	47471	have
O	47472	47474	to
O	47475	47479	mark
O	47480	47483	the
O	47484	47489	field
O	47490	47492	as
O	47493	47502	transient
O	47503	47506	and
O	47507	47514	provide
O	47515	47519	your
O	47520	47523	own
O	47524	47530	custom
B-api_mention	47531	47542	writeObject
I-api_mention	47542	47543	(
I-api_mention	47543	47547	args
I-api_mention	47547	47548	)
O	47549	47555	method
O	47556	47560	that
O	47561	47566	wrote
O	47567	47570	the
B-api_mention	47571	47574	get
I-api_mention	47574	47575	(
I-api_mention	47575	47579	args
I-api_mention	47579	47580	)
O	47581	47587	result
O	47588	47594	itself
O	47594	47595	,
O	47596	47599	and
O	47600	47601	a
B-api_mention	47602	47612	readObject
I-api_mention	47612	47613	(
I-api_mention	47613	47617	args
I-api_mention	47617	47618	)
O	47619	47625	method
O	47626	47630	that
O	47631	47639	restored
O	47640	47643	the
B-api_mention	47644	47652	Optional
O	47653	47655	by
O	47656	47663	reading
O	47664	47668	that
O	47669	47675	result
O	47676	47680	from
O	47681	47684	the
O	47685	47691	stream
O	47691	47692	.

O	47693	47696	Not
O	47697	47707	forgetting
O	47708	47710	to
O	47711	47715	call
B-api_mention	47716	47734	defaultWriteObject
I-api_mention	47734	47735	(
I-api_mention	47735	47739	args
I-api_mention	47739	47740	)
O	47741	47744	and
B-api_mention	47745	47762	defaultReadObject
I-api_mention	47762	47763	(
I-api_mention	47763	47767	args
I-api_mention	47767	47768	)
O	47769	47781	respectively
O	47781	47782	.

O	47784	47792	Question
O	47792	47793	-
O	47793	47801	24630963
O	47801	47802	,
O	47803	47809	answer
O	47809	47810	-
O	47810	47818	32648397

O	47819	47820	I
O	47821	47826	wrote
O	47827	47828	a
B-api_mention	47829	47838	Collector
O	47839	47844	which
O	47844	47845	,
O	47846	47852	unlike
O	47853	47856	the
O	47857	47864	default
O	47865	47869	java
O	47870	47873	one
O	47873	47874	,
O	47875	47879	does
O	47880	47883	not
O	47884	47889	crash
O	47890	47894	when
O	47895	47898	you
O	47899	47903	have
O	47904	47908	null
O	47909	47915	values
O	47915	47916	:
O	47917	47918	#
O	47918	47921	pre
O	47922	47926	Just
O	47927	47934	replace
O	47935	47939	your
B-api_mention	47940	47950	Collectors
I-api_mention	47950	47951	.
I-api_mention	47951	47956	toMap
I-api_mention	47956	47957	(
I-api_mention	47957	47961	args
I-api_mention	47961	47962	)
O	47963	47967	call
O	47968	47970	to
O	47971	47972	a
O	47973	47977	call
O	47978	47980	to
O	47981	47985	this
O	47986	47994	function
O	47995	47998	and
O	47999	48001	it
O	48001	48002	'
O	48002	48004	ll
O	48005	48008	fix
O	48009	48012	the
O	48013	48020	problem
O	48020	48021	.

O	48023	48031	Question
O	48031	48032	-
O	48032	48040	25441088
O	48040	48041	,
O	48042	48048	answer
O	48048	48049	-
O	48049	48057	25441208

O	48058	48059	I
O	48060	48065	think
O	48066	48069	you
O	48069	48070	'
O	48070	48072	re
O	48073	48077	just
O	48078	48085	looking
O	48086	48089	for
O	48090	48093	the
O	48094	48102	overload
O	48103	48108	which
O	48109	48114	takes
O	48115	48122	another
B-api_mention	48123	48132	Collector
O	48133	48135	to
O	48136	48143	specify
O	48144	48148	what
O	48149	48151	to
O	48152	48154	do
O	48155	48159	with
O	48160	48164	each
O	48165	48170	group
O	48170	48171	.
O	48171	48172	.
O	48172	48173	.
O	48174	48177	and
O	48178	48182	then
B-api_mention	48183	48193	Collectors
I-api_mention	48193	48194	.
I-api_mention	48194	48202	counting
I-api_mention	48202	48203	(
I-api_mention	48203	48207	args
I-api_mention	48207	48208	)
O	48209	48211	to
O	48212	48214	do
O	48215	48218	the
O	48219	48227	counting
O	48227	48228	:
O	48229	48230	#
O	48230	48233	pre
O	48234	48240	Result
O	48240	48241	:
O	48242	48243	{
O	48243	48248	Hello
O	48248	48249	=
O	48249	48250	2
O	48250	48251	,
O	48252	48257	World
O	48257	48258	=
O	48258	48259	1
O	48259	48260	}
O	48261	48262	(
O	48262	48267	There
O	48267	48268	'
O	48268	48269	s
O	48270	48274	also
O	48275	48278	the
O	48279	48290	possibility
O	48291	48293	of
O	48294	48299	using
B-api_mention	48300	48320	groupingByConcurrent
O	48321	48324	for
O	48325	48329	more
O	48330	48340	efficiency
O	48340	48341	.
O	48342	48351	Something
O	48352	48354	to
O	48355	48359	bear
O	48360	48362	in
O	48363	48367	mind
O	48368	48371	for
O	48372	48376	your
O	48377	48381	real
O	48382	48386	code
O	48386	48387	,
O	48388	48390	if
O	48391	48393	it
O	48394	48399	would
O	48400	48402	be
O	48403	48407	safe
O	48408	48410	in
O	48411	48415	your
O	48416	48423	context
O	48423	48424	.
O	48424	48425	)

O	48427	48435	Question
O	48435	48436	-
O	48436	48444	25222811
O	48444	48445	,
O	48446	48452	answer
O	48452	48453	-
O	48453	48461	26676046

O	48462	48464	To
O	48465	48470	begin
O	48471	48475	with
O	48476	48477	(
O	48478	48481	and
O	48482	48491	unrelated
O	48492	48493	)
O	48493	48494	,
O	48495	48508	instantiating
O	48509	48512	the
B-api_mention	48513	48524	Application
O	48525	48530	class
O	48531	48533	by
O	48534	48542	yourself
O	48543	48547	does
O	48548	48551	not
O	48552	48556	seem
O	48557	48559	to
O	48560	48562	be
O	48563	48566	its
O	48567	48575	intended
O	48576	48579	use
O	48579	48580	.

O	48581	48585	From
O	48586	48590	what
O	48591	48594	one
O	48595	48598	can
O	48599	48603	read
O	48604	48608	from
O	48609	48612	its
O	48613	48619	source
O	48620	48621	,
O	48622	48625	you
O	48626	48629	are
O	48630	48636	rather
O	48637	48645	expected
O	48646	48648	to
O	48649	48652	use
O	48653	48656	the
O	48657	48663	static
O	48664	48672	instance
O	48673	48681	returned
O	48682	48684	by
B-api_mention	48685	48699	getApplication
I-api_mention	48699	48700	(
I-api_mention	48700	48704	args
I-api_mention	48704	48705	)
O	48706	48707	.

O	48708	48711	Now
O	48712	48715	let
O	48715	48716	'
O	48716	48717	s
O	48718	48721	get
O	48722	48724	to
O	48725	48728	the
O	48729	48734	error
O	48735	48742	Eclipse
O	48743	48750	reports
O	48750	48751	.

O	48752	48753	I
O	48753	48754	'
O	48754	48756	ve
O	48757	48760	ran
O	48761	48765	into
O	48766	48767	a
O	48768	48775	similar
O	48776	48781	issue
O	48782	48790	recently
O	48790	48791	:
O	48792	48798	Access
O	48799	48810	restriction
O	48810	48811	:
O	48812	48815	The
O	48816	48822	method
O	48823	48824	.
O	48824	48825	.
O	48825	48826	.

O	48827	48829	is
O	48830	48833	not
O	48834	48837	API
O	48837	48838	(
O	48838	48842	args
O	48842	48843	)
O	48844	48845	.

O	48846	48847	I
O	48848	48854	called
O	48855	48858	the
O	48859	48865	method
O	48866	48868	in
O	48869	48877	question
O	48878	48880	as
O	48881	48882	a
O	48883	48889	method
O	48890	48892	of
O	48893	48895	an
O	48896	48902	object
O	48903	48908	which
O	48909	48918	inherited
O	48919	48923	that
O	48924	48930	method
O	48931	48935	from
O	48936	48937	a
O	48938	48943	super
O	48944	48949	class
O	48949	48950	.

O	48951	48954	All
O	48955	48956	I
O	48957	48960	had
O	48961	48963	to
O	48964	48966	do
O	48967	48970	was
O	48971	48973	to
O	48974	48977	add
O	48978	48981	the
O	48982	48989	package
O	48990	48993	the
O	48994	48999	super
O	49000	49005	class
O	49006	49009	was
O	49010	49012	in
O	49013	49015	to
O	49016	49019	the
O	49020	49028	packages
O	49029	49037	imported
O	49038	49040	by
O	49041	49043	my
O	49044	49050	plugin
O	49050	49051	.

O	49052	49059	However
O	49059	49060	,
O	49061	49066	there
O	49067	49069	is
O	49070	49071	a
O	49072	49075	lot
O	49076	49078	of
O	49079	49088	different
O	49089	49095	causes
O	49096	49099	for
O	49100	49106	errors
O	49107	49112	based
O	49113	49115	on
O	49116	49117	"
O	49117	49128	restriction
O	49129	49131	on
O	49132	49140	required
O	49141	49148	project
O	49148	49149	/
O	49149	49156	library
O	49157	49158	"
O	49158	49159	.

O	49160	49167	Similar
O	49168	49170	to
O	49171	49174	the
O	49175	49182	problem
O	49183	49192	described
O	49193	49198	above
O	49198	49199	,
O	49200	49203	the
O	49204	49208	type
O	49209	49212	you
O	49213	49216	are
O	49217	49222	using
O	49223	49228	might
O	49229	49233	have
O	49234	49246	dependencies
O	49247	49249	to
O	49250	49258	packages
O	49259	49263	that
O	49264	49267	are
O	49268	49271	not
O	49272	49280	exported
O	49281	49283	by
O	49284	49287	the
O	49288	49295	library
O	49296	49298	or
O	49299	49304	might
O	49305	49308	not
O	49309	49311	be
O	49312	49320	exported
O	49321	49327	itself
O	49327	49328	.

O	49329	49331	In
O	49332	49336	that
O	49337	49341	case
O	49342	49345	you
O	49346	49349	can
O	49350	49353	try
O	49354	49356	to
O	49357	49362	track
O	49363	49367	down
O	49368	49371	the
O	49372	49379	missing
O	49380	49388	packages
O	49389	49392	and
O	49393	49399	export
O	49400	49404	them
O	49405	49407	my
O	49408	49416	yourself
O	49416	49417	,
O	49418	49420	as
O	49421	49430	suggested
O	49431	49435	here
O	49436	49437	,
O	49438	49440	or
O	49441	49444	try
O	49445	49451	Access
O	49452	49457	Rules
O	49457	49458	.

O	49459	49464	Other
O	49465	49473	possible
O	49474	49483	scenarios
O	49484	49491	include
O	49491	49492	:
O	49493	49494	#
O	49494	49496	li
O	49497	49504	Eclipse
O	49505	49510	wants
O	49511	49513	to
O	49514	49518	keep
O	49519	49522	you
O	49523	49527	from
O	49528	49533	using
O	49534	49543	available
O	49544	49552	packages
O	49553	49557	that
O	49558	49561	are
O	49562	49565	not
O	49566	49570	part
O	49571	49573	of
O	49574	49577	the
O	49578	49584	public
O	49585	49589	Java
O	49590	49593	API
O	49594	49595	(
O	49595	49603	solution
O	49604	49605	1
O	49606	49607	,
O	49608	49609	2
O	49610	49611	)
O	49612	49613	#
O	49613	49615	li
O	49616	49628	Dependencies
O	49629	49632	are
O	49633	49642	satisfied
O	49643	49645	by
O	49646	49654	multiple
O	49655	49662	sources
O	49662	49663	,
O	49664	49672	versions
O	49673	49676	are
O	49677	49688	conflicting
O	49689	49692	etc
O	49692	49693	.

O	49694	49695	(
O	49695	49703	solution
O	49704	49705	1
O	49706	49707	,
O	49708	49709	2
O	49710	49711	,
O	49712	49713	3
O	49714	49715	)
O	49716	49717	#
O	49717	49719	li
O	49720	49727	Eclipse
O	49728	49730	is
O	49731	49736	using
O	49737	49738	a
O	49739	49742	JRE
O	49743	49748	where
O	49749	49750	a
O	49751	49754	JDK
O	49755	49757	is
O	49758	49767	necessary
O	49768	49769	(
O	49769	49774	which
O	49775	49780	might
O	49781	49783	be
O	49784	49787	the
O	49788	49792	case
O	49793	49797	here
O	49797	49798	,
O	49799	49803	from
O	49804	49808	what
O	49809	49813	your
O	49814	49820	errors
O	49821	49824	say
O	49824	49825	;
O	49826	49834	solution
O	49835	49836	)
O	49837	49839	or
O	49840	49843	JRE
O	49843	49844	/
O	49844	49847	JDK
O	49848	49855	version
O	49856	49858	in
O	49859	49866	project
O	49867	49872	build
O	49873	49877	path
O	49878	49880	is
O	49881	49884	not
O	49885	49888	the
O	49889	49894	right
O	49895	49898	one
O	49899	49903	This
O	49904	49909	ended
O	49910	49912	up
O	49913	49915	as
O	49916	49920	more
O	49921	49925	like
O	49926	49927	a
O	49928	49934	medley
O	49935	49937	of
O	49938	49949	restriction
O	49949	49950	-
O	49950	49957	related
O	49958	49964	issues
O	49965	49969	than
O	49970	49972	an
O	49973	49979	actual
O	49980	49986	answer
O	49986	49987	.

O	49988	49991	But
O	49992	49997	since
O	49998	50009	restriction
O	50010	50012	on
O	50013	50021	required
O	50022	50030	projects
O	50031	50033	is
O	50034	50038	such
O	50039	50040	a
O	50041	50050	versatile
O	50051	50056	error
O	50057	50059	to
O	50060	50062	be
O	50063	50071	reported
O	50071	50072	,
O	50073	50076	the
O	50077	50084	perfect
O	50085	50091	recipe
O	50092	50094	is
O	50095	50103	probably
O	50104	50109	still
O	50110	50112	to
O	50113	50115	be
O	50116	50121	found
O	50121	50122	.

O	50124	50132	Question
O	50132	50133	-
O	50133	50141	26548660
O	50141	50142	,
O	50143	50149	answer
O	50149	50150	-
O	50150	50158	26548894

O	50159	50162	You
O	50163	50166	can
O	50167	50170	use
O	50171	50172	a
B-api_mention	50173	50181	Callback
O	50182	50184	to
O	50185	50188	get
B-api_mention	50189	50198	onSuccess
O	50199	50202	and
B-api_mention	50203	50210	onError
O	50211	50217	events
O	50217	50218	.

O	50219	50223	Just
O	50224	50227	add
O	50228	50229	a
O	50230	50233	new
B-api_mention	50234	50242	Callback
O	50243	50245	to
O	50246	50250	your
O	50251	50258	request
O	50259	50263	like
O	50264	50266	so
O	50266	50267	:
B-api_mention	50268	50275	Picasso
I-api_mention	50275	50276	.
I-api_mention	50276	50280	with
I-api_mention	50280	50281	(
I-api_mention	50281	50285	args
I-api_mention	50285	50286	)
I-api_mention	50287	50288	.
I-api_mention	50288	50292	load
I-api_mention	50292	50293	(
I-api_mention	50293	50297	args
I-api_mention	50297	50298	)
I-api_mention	50299	50300	.
I-api_mention	50300	50304	into
I-api_mention	50304	50305	(
I-api_mention	50305	50309	args
I-api_mention	50309	50310	)
O	50310	50311	;
O	50312	50316	Then
O	50317	50320	you
O	50321	50324	can
O	50325	50332	perform
O	50333	50336	any
O	50337	50348	alterations
O	50349	50352	and
O	50353	50366	modifications
O	50367	50369	in
O	50370	50373	the
B-api_mention	50374	50383	onSuccess
O	50384	50392	callback
O	50392	50393	.

O	50395	50403	Question
O	50403	50404	-
O	50404	50412	27482579
O	50412	50413	,
O	50414	50420	answer
O	50420	50421	-
O	50421	50429	27483288

O	50430	50431	#
O	50431	50441	blockquote
O	50442	50444	No
O	50445	50446	.

O	50447	50449	It
O	50450	50454	will
O	50455	50460	never
O	50461	50466	throw
O	50467	50468	a
O	50469	50480	compilation
O	50481	50486	error
O	50486	50487	.

O	50488	50492	This
O	50493	50495	is
O	50496	50500	much
O	50501	50508	similar
O	50509	50511	to
O	50512	50516	what
O	50517	50518	a
O	50519	50525	simple
B-api_mention	50526	50532	getter
O	50533	50536	and
B-api_mention	50537	50543	setter
O	50544	50548	does
O	50549	50551	or
O	50552	50553	a
B-api_mention	50554	50558	copy
O	50559	50570	constructor
O	50571	50575	does
O	50575	50576	.

O	50577	50585	Remember
O	50586	50588	we
O	50589	50592	can
O	50593	50599	access
O	50600	50607	private
O	50608	50615	members
O	50616	50621	using
O	50622	50626	this
O	50626	50627	.

O	50628	50629	#
O	50629	50632	pre
O	50633	50637	Your
O	50638	50649	testPrivate
O	50650	50656	method
O	50657	50664	accepts
O	50665	50667	an
O	50668	50676	instance
O	50677	50679	of
O	50680	50687	MyClass
O	50687	50688	.

O	50689	50694	Since
O	50695	50706	testPrivate
O	50707	50709	is
O	50710	50711	a
O	50712	50718	method
O	50719	50725	inside
O	50726	50733	MyClass
O	50734	50735	,
O	50736	50738	it
O	50739	50743	will
O	50744	50748	have
O	50749	50755	access
O	50756	50758	to
O	50759	50766	private
O	50767	50777	properties
O	50777	50778	.

O	50779	50780	#
O	50780	50783	pre
O	50784	50791	Methods
O	50792	50799	defined
O	50800	50806	inside
O	50807	50810	the
O	50811	50816	class
O	50817	50821	will
O	50822	50828	always
O	50829	50833	have
O	50834	50840	access
O	50841	50843	to
O	50844	50846	it
O	50846	50847	'
O	50847	50848	s
O	50849	50856	private
O	50857	50864	members
O	50864	50865	,
O	50866	50873	through
O	50874	50878	this
O	50878	50879	.
O	50880	50883	and
O	50884	50892	instance
O	50893	50901	variable
O	50901	50902	.

O	50903	50906	But
O	50907	50909	if
O	50910	50913	you
O	50914	50920	define
O	50921	50932	testPrivate
O	50933	50940	outside
O	50941	50943	of
O	50944	50951	MyClass
O	50952	50956	then
O	50956	50957	,
O	50958	50961	you
O	50962	50965	won
O	50965	50966	'
O	50966	50967	t
O	50968	50972	have
O	50973	50979	access
O	50980	50982	to
O	50983	50990	private
O	50991	50998	members
O	50998	50999	.

O	51000	51005	There
O	51006	51009	you
O	51010	51014	will
O	51015	51019	have
O	51020	51022	to
O	51023	51026	use
O	51027	51028	a
O	51029	51035	method
O	51036	51038	or
O	51039	51040	a
B-api_mention	51041	51047	setter
O	51048	51050	or
O	51051	51052	a
B-api_mention	51053	51059	getter
O	51059	51060	.

O	51062	51070	Question
O	51070	51071	-
O	51071	51079	26318569
O	51079	51080	,
O	51081	51087	answer
O	51087	51088	-
O	51088	51096	26319364

O	51097	51100	You
O	51100	51101	'
O	51101	51103	re
O	51104	51111	nesting
O	51112	51119	mocking
O	51120	51126	inside
O	51127	51129	of
O	51130	51137	mocking
O	51137	51138	.

O	51139	51142	You
O	51142	51143	'
O	51143	51145	re
O	51146	51153	calling
B-api_mention	51154	51165	getSomeList
I-api_mention	51165	51166	(
I-api_mention	51166	51170	args
I-api_mention	51170	51171	)
O	51172	51173	,
O	51174	51179	which
O	51180	51184	does
O	51185	51189	some
O	51190	51197	mocking
O	51197	51198	,
O	51199	51205	before
O	51206	51209	you
O	51209	51210	'
O	51210	51212	ve
O	51213	51221	finished
O	51222	51225	the
O	51226	51233	mocking
O	51234	51237	for
O	51238	51249	MyMainModel
O	51250	51251	.

B-api_mention	51252	51259	Mockito
O	51260	51265	doesn
O	51265	51266	'
O	51266	51267	t
O	51268	51272	like
O	51273	51275	it
O	51276	51280	when
O	51281	51284	you
O	51285	51287	do
O	51288	51292	this
O	51292	51293	.

O	51294	51301	Replace
O	51302	51303	#
O	51303	51306	pre
O	51307	51311	with
O	51312	51313	#
O	51313	51316	pre
O	51317	51319	To
O	51320	51330	understand
O	51331	51334	why
O	51335	51339	this
O	51340	51346	causes
O	51347	51348	a
O	51349	51356	problem
O	51356	51357	,
O	51358	51361	you
O	51362	51366	need
O	51367	51369	to
O	51370	51374	know
O	51375	51376	a
O	51377	51383	little
O	51384	51389	about
O	51390	51393	how
B-api_mention	51394	51401	Mockito
O	51402	51407	works
O	51407	51408	,
O	51409	51412	and
O	51413	51417	also
O	51418	51420	be
O	51421	51426	aware
O	51427	51429	in
O	51430	51434	what
O	51435	51440	order
O	51441	51452	expressions
O	51453	51456	and
O	51457	51467	statements
O	51468	51471	are
O	51472	51481	evaluated
O	51482	51484	in
O	51485	51489	Java
O	51489	51490	.

B-api_mention	51491	51498	Mockito
O	51499	51502	can
O	51502	51503	'
O	51503	51504	t
O	51505	51509	read
O	51510	51514	your
O	51515	51521	source
O	51522	51526	code
O	51526	51527	,
O	51528	51530	so
O	51531	51533	in
O	51534	51539	order
O	51540	51542	to
O	51543	51549	figure
O	51550	51553	out
O	51554	51558	what
O	51559	51562	you
O	51563	51566	are
O	51567	51573	asking
O	51574	51576	it
O	51577	51579	to
O	51580	51582	do
O	51582	51583	,
O	51584	51586	it
O	51587	51593	relies
O	51594	51595	a
O	51596	51599	lot
O	51600	51602	on
O	51603	51609	static
O	51610	51615	state
O	51615	51616	.

O	51617	51621	When
O	51622	51625	you
O	51626	51630	call
O	51631	51632	a
O	51633	51639	method
O	51640	51642	on
O	51643	51644	a
O	51645	51649	mock
O	51650	51656	object
O	51656	51657	,
B-api_mention	51658	51665	Mockito
O	51666	51673	records
O	51674	51677	the
O	51678	51685	details
O	51686	51688	of
O	51689	51692	the
O	51693	51697	call
O	51698	51700	in
O	51701	51703	an
O	51704	51712	internal
O	51713	51717	list
O	51718	51720	of
O	51721	51732	invocations
O	51732	51733	.

O	51734	51737	The
O	51738	51742	when
O	51743	51749	method
O	51750	51755	reads
O	51756	51759	the
O	51760	51764	last
O	51765	51767	of
O	51768	51773	these
O	51774	51785	invocations
O	51786	51789	off
O	51790	51793	the
O	51794	51798	list
O	51799	51802	and
O	51803	51810	records
O	51811	51815	this
O	51816	51826	invocation
O	51827	51829	in
O	51830	51833	the
B-api_mention	51834	51849	OngoingStubbing
O	51850	51856	object
O	51857	51859	it
O	51860	51867	returns
O	51867	51868	.

O	51869	51872	The
O	51873	51877	line
B-api_mention	51878	51885	Mockito
I-api_mention	51885	51886	.
I-api_mention	51886	51890	when
I-api_mention	51890	51891	(
I-api_mention	51891	51895	args
I-api_mention	51895	51896	)
I-api_mention	51896	51897	.
I-api_mention	51897	51907	thenReturn
I-api_mention	51907	51908	(
I-api_mention	51908	51912	args
I-api_mention	51912	51913	)
O	51913	51914	;
O	51915	51921	causes
O	51922	51925	the
O	51926	51935	following
O	51936	51948	interactions
O	51949	51953	with
B-api_mention	51954	51961	Mockito
O	51961	51962	:
O	51963	51964	#
O	51964	51966	li
B-api_mention	51967	51971	Mock
O	51972	51978	method
O	51979	51988	mainModel
B-api_mention	51988	51989	.
I-api_mention	51989	51996	getList
I-api_mention	51996	51997	(
I-api_mention	51997	52001	args
I-api_mention	52001	52002	)
O	52003	52005	is
O	52006	52012	called
O	52012	52013	,
O	52014	52015	#
O	52015	52017	li
O	52018	52024	Static
O	52025	52031	method
O	52032	52036	when
O	52037	52039	is
O	52040	52046	called
O	52046	52047	,
O	52048	52049	#
O	52049	52051	li
O	52052	52058	Method
O	52059	52069	thenReturn
O	52070	52072	is
O	52073	52079	called
O	52080	52082	on
O	52083	52086	the
B-api_mention	52087	52102	OngoingStubbing
O	52103	52109	object
O	52110	52118	returned
O	52119	52121	by
O	52122	52125	the
O	52126	52130	when
O	52131	52137	method
O	52137	52138	.

O	52139	52142	The
B-api_mention	52143	52153	thenReturn
O	52154	52160	method
O	52161	52164	can
O	52165	52169	then
O	52170	52178	instruct
O	52179	52182	the
O	52183	52187	mock
O	52188	52190	it
O	52191	52199	received
O	52200	52203	via
O	52204	52207	the
B-api_mention	52208	52223	OngoingStubbing
O	52224	52230	method
O	52231	52233	to
O	52234	52240	handle
O	52241	52244	any
O	52245	52253	suitable
O	52254	52258	call
O	52259	52261	to
O	52262	52265	the
O	52266	52273	getList
O	52274	52280	method
O	52281	52283	to
O	52284	52290	return
O	52291	52304	someModelList
O	52305	52306	.

O	52307	52309	In
O	52310	52314	fact
O	52314	52315	,
O	52316	52318	as
B-api_mention	52319	52326	Mockito
O	52327	52330	can
O	52330	52331	'
O	52331	52332	t
O	52333	52336	see
O	52337	52341	your
O	52342	52346	code
O	52346	52347	,
O	52348	52351	you
O	52352	52355	can
O	52356	52360	also
O	52361	52366	write
O	52367	52371	your
O	52372	52379	mocking
O	52380	52382	as
O	52383	52390	follows
O	52390	52391	:
O	52392	52393	#
O	52393	52396	pre
O	52397	52401	This
O	52402	52407	style
O	52408	52410	is
O	52411	52419	somewhat
O	52420	52424	less
O	52425	52430	clear
O	52431	52433	to
O	52434	52438	read
O	52438	52439	,
O	52440	52450	especially
O	52451	52456	since
O	52457	52459	in
O	52460	52464	this
O	52465	52469	case
O	52470	52473	the
O	52474	52478	null
O	52479	52482	has
O	52483	52485	to
O	52486	52488	be
O	52489	52495	casted
O	52495	52496	,
O	52497	52500	but
O	52501	52503	it
O	52504	52513	generates
O	52514	52517	the
O	52518	52522	same
O	52523	52531	sequence
O	52532	52534	of
O	52535	52547	interactions
O	52548	52552	with
B-api_mention	52553	52560	Mockito
O	52561	52564	and
O	52565	52569	will
O	52570	52577	achieve
O	52578	52581	the
O	52582	52586	same
O	52587	52593	result
O	52594	52596	as
O	52597	52600	the
O	52601	52605	line
O	52606	52611	above
O	52611	52612	.

O	52613	52620	However
O	52620	52621	,
O	52622	52625	the
O	52626	52630	line
B-api_mention	52631	52638	Mockito
I-api_mention	52638	52639	.
I-api_mention	52639	52643	when
I-api_mention	52643	52644	(
I-api_mention	52644	52648	args
I-api_mention	52648	52649	)
I-api_mention	52649	52650	.
I-api_mention	52650	52660	thenReturn
I-api_mention	52660	52661	(
I-api_mention	52661	52665	args
I-api_mention	52665	52666	)
O	52666	52667	;
O	52668	52674	causes
O	52675	52678	the
O	52679	52688	following
O	52689	52701	interactions
O	52702	52706	with
B-api_mention	52707	52714	Mockito
O	52714	52715	:
O	52716	52717	#
O	52717	52719	li
B-api_mention	52720	52724	Mock
O	52725	52731	method
O	52732	52741	mainModel
B-api_mention	52741	52742	.
I-api_mention	52742	52749	getList
I-api_mention	52749	52750	(
I-api_mention	52750	52754	args
I-api_mention	52754	52755	)
O	52756	52758	is
O	52759	52765	called
O	52765	52766	,
O	52767	52768	#
O	52768	52770	li
O	52771	52777	Static
O	52778	52784	method
O	52785	52789	when
O	52790	52792	is
O	52793	52799	called
O	52799	52800	,
O	52801	52802	#
O	52802	52804	li
O	52805	52806	A
O	52807	52810	new
O	52811	52815	mock
O	52816	52818	of
O	52819	52828	SomeModel
O	52829	52831	is
O	52832	52839	created
O	52840	52841	(
O	52841	52847	inside
B-api_mention	52848	52859	getSomeList
I-api_mention	52859	52860	(
I-api_mention	52860	52864	args
I-api_mention	52864	52865	)
O	52866	52867	)
O	52867	52868	,
O	52869	52870	#
O	52870	52872	li
B-api_mention	52873	52877	Mock
O	52878	52884	method
O	52885	52890	model
B-api_mention	52890	52891	.
I-api_mention	52891	52898	getName
I-api_mention	52898	52899	(
I-api_mention	52899	52903	args
I-api_mention	52903	52904	)
O	52905	52907	is
O	52908	52914	called
O	52914	52915	,
O	52916	52918	At
O	52919	52923	this
O	52924	52929	point
B-api_mention	52930	52937	Mockito
O	52938	52942	gets
O	52943	52951	confused
O	52951	52952	.

O	52953	52955	It
O	52956	52963	thought
O	52964	52967	you
O	52968	52972	were
O	52973	52980	mocking
O	52981	52990	mainModel
B-api_mention	52990	52991	.
I-api_mention	52991	52998	getList
I-api_mention	52998	52999	(
I-api_mention	52999	53003	args
I-api_mention	53003	53004	)
O	53005	53006	,
O	53007	53010	but
O	53011	53014	now
O	53015	53018	you
O	53018	53019	'
O	53019	53021	re
O	53022	53029	telling
O	53030	53032	it
O	53033	53036	you
O	53037	53041	want
O	53042	53044	to
O	53045	53049	mock
O	53050	53053	the
O	53054	53059	model
B-api_mention	53059	53060	.
I-api_mention	53060	53067	getName
I-api_mention	53067	53068	(
I-api_mention	53068	53072	args
I-api_mention	53072	53073	)
O	53074	53080	method
O	53080	53081	.

O	53082	53084	To
B-api_mention	53085	53092	Mockito
O	53092	53093	,
O	53094	53096	it
O	53097	53102	looks
O	53103	53107	like
O	53108	53111	you
O	53111	53112	'
O	53112	53114	re
O	53115	53120	doing
O	53121	53124	the
O	53125	53134	following
O	53134	53135	:
O	53136	53137	#
O	53137	53140	pre
O	53141	53145	This
O	53146	53151	looks
O	53152	53157	silly
O	53158	53160	to
B-api_mention	53161	53168	Mockito
O	53169	53171	as
O	53172	53174	it
O	53175	53178	can
O	53178	53179	'
O	53179	53180	t
O	53181	53183	be
O	53184	53188	sure
O	53189	53193	what
O	53194	53197	you
O	53197	53198	'
O	53198	53200	re
O	53201	53206	doing
O	53207	53211	with
O	53212	53221	mainModel
B-api_mention	53221	53222	.
I-api_mention	53222	53229	getList
I-api_mention	53229	53230	(
I-api_mention	53230	53234	args
I-api_mention	53234	53235	)
O	53236	53237	.

O	53238	53242	Note
O	53243	53247	that
O	53248	53250	we
O	53251	53254	did
O	53255	53258	not
O	53259	53262	get
O	53263	53265	to
O	53266	53269	the
O	53270	53280	thenReturn
O	53281	53287	method
O	53288	53292	call
O	53292	53293	,
O	53294	53296	as
O	53297	53300	the
O	53301	53304	JVM
O	53305	53310	needs
O	53311	53313	to
O	53314	53322	evaluate
O	53323	53326	the
O	53327	53337	parameters
O	53338	53340	to
O	53341	53345	this
O	53346	53352	method
O	53353	53359	before
O	53360	53362	it
O	53363	53366	can
O	53367	53371	call
O	53372	53375	the
O	53376	53382	method
O	53382	53383	.

O	53384	53386	In
O	53387	53391	this
O	53392	53396	case
O	53396	53397	,
O	53398	53402	this
O	53403	53408	means
O	53409	53416	calling
O	53417	53420	the
B-api_mention	53421	53432	getSomeList
I-api_mention	53432	53433	(
I-api_mention	53433	53437	args
I-api_mention	53437	53438	)
O	53439	53445	method
O	53445	53446	.

O	53447	53456	Generally
O	53457	53459	it
O	53460	53462	is
O	53463	53464	a
O	53465	53468	bad
O	53469	53475	design
O	53476	53484	decision
O	53485	53487	to
O	53488	53492	rely
O	53493	53495	on
O	53496	53502	static
O	53503	53508	state
O	53508	53509	,
O	53510	53512	as
B-api_mention	53513	53520	Mockito
O	53521	53525	does
O	53525	53526	,
O	53527	53534	because
O	53535	53537	it
O	53538	53541	can
O	53542	53546	lead
O	53547	53549	to
O	53550	53555	cases
O	53556	53561	where
O	53562	53565	the
O	53566	53575	Principle
O	53576	53578	of
O	53579	53584	Least
O	53585	53597	Astonishment
O	53598	53600	is
O	53601	53609	violated
O	53609	53610	.

O	53611	53618	However
O	53618	53619	,
B-api_mention	53620	53627	Mockito
I-api_mention	53627	53628	'
I-api_mention	53628	53629	s
O	53630	53636	design
O	53637	53641	does
O	53642	53646	make
O	53647	53650	for
O	53651	53656	clear
O	53657	53660	and
O	53661	53671	expressive
O	53672	53679	mocking
O	53679	53680	,
O	53681	53685	even
O	53686	53688	if
O	53689	53691	it
O	53692	53697	leads
O	53698	53700	to
O	53701	53713	astonishment
O	53714	53723	sometimes
O	53723	53724	.

O	53725	53732	Finally
O	53732	53733	,
O	53734	53740	recent
O	53741	53749	versions
O	53750	53752	of
B-api_mention	53753	53760	Mockito
O	53761	53764	add
O	53765	53767	an
O	53768	53773	extra
O	53774	53778	line
O	53779	53781	to
O	53782	53785	the
O	53786	53791	error
O	53792	53799	message
O	53800	53805	above
O	53805	53806	.

O	53807	53811	This
O	53812	53817	extra
O	53818	53822	line
O	53823	53832	indicates
O	53833	53836	you
O	53837	53840	may
O	53841	53843	be
O	53844	53846	in
O	53847	53850	the
O	53851	53855	same
O	53856	53865	situation
O	53866	53868	as
O	53869	53873	this
O	53874	53882	question
O	53882	53883	:
O	53884	53885	#
O	53885	53895	blockquote

O	53897	53905	Question
O	53905	53906	-
O	53906	53914	24603186
O	53914	53915	,
O	53916	53922	answer
O	53922	53923	-
O	53923	53931	24603187

O	53932	53935	The
O	53936	53944	Javadocs
O	53945	53948	for
B-api_mention	53949	53959	Collection
I-api_mention	53959	53960	.
I-api_mention	53960	53961	(
I-api_mention	53961	53970	parallelS
I-api_mention	53970	53971	|
I-api_mention	53971	53972	s
I-api_mention	53972	53973	)
I-api_mention	53973	53978	tream
I-api_mention	53978	53979	(
I-api_mention	53979	53983	args
I-api_mention	53983	53984	)
O	53985	53988	and
B-api_mention	53989	53995	Stream
O	53996	54002	itself
O	54003	54006	don
O	54006	54007	'
O	54007	54008	t
O	54009	54015	answer
O	54016	54019	the
O	54020	54028	question
O	54028	54029	,
O	54030	54032	so
O	54033	54035	it
O	54035	54036	'
O	54036	54037	s
O	54038	54041	off
O	54042	54044	to
O	54045	54048	the
O	54049	54056	mailing
O	54057	54062	lists
O	54063	54066	for
O	54067	54070	the
O	54071	54080	rationale
O	54080	54081	.

O	54082	54083	I
O	54084	54088	went
O	54089	54096	through
O	54097	54100	the
O	54101	54107	lambda
O	54107	54108	-
O	54108	54112	libs
O	54112	54113	-
O	54113	54117	spec
O	54117	54118	-
O	54118	54127	observers
O	54128	54136	archives
O	54137	54140	and
O	54141	54146	found
O	54147	54150	one
O	54151	54157	thread
O	54158	54170	specifically
O	54171	54176	about
B-api_mention	54177	54187	Collection
I-api_mention	54187	54188	.
I-api_mention	54188	54202	parallelStream
I-api_mention	54202	54203	(
I-api_mention	54203	54204	)
O	54205	54208	and
O	54209	54216	another
O	54217	54223	thread
O	54224	54228	that
O	54229	54236	touched
O	54237	54239	on
O	54240	54247	whether
B-api_mention	54248	54252	java
I-api_mention	54252	54253	.
I-api_mention	54253	54257	util
I-api_mention	54257	54258	.
I-api_mention	54258	54264	Arrays
O	54265	54271	should
O	54272	54279	provide
B-api_mention	54280	54294	parallelStream
I-api_mention	54294	54295	(
I-api_mention	54295	54296	)
O	54297	54299	to
O	54300	54305	match
O	54306	54307	(
O	54307	54309	or
O	54310	54318	actually
O	54318	54319	,
O	54320	54327	whether
O	54328	54330	it
O	54331	54337	should
O	54338	54340	be
O	54341	54348	removed
O	54348	54349	)
O	54349	54350	.

O	54351	54356	There
O	54357	54360	was
O	54361	54363	no
O	54364	54368	once
O	54368	54369	-
O	54369	54372	and
O	54372	54373	-
O	54373	54376	for
O	54376	54377	-
O	54377	54380	all
O	54381	54391	conclusion
O	54391	54392	,
O	54393	54395	so
O	54396	54403	perhaps
O	54404	54405	I
O	54405	54406	'
O	54406	54408	ve
O	54409	54415	missed
O	54416	54425	something
O	54426	54430	from
O	54431	54438	another
O	54439	54443	list
O	54444	54446	or
O	54447	54450	the
O	54451	54457	matter
O	54458	54461	was
O	54462	54469	settled
O	54470	54472	in
O	54473	54480	private
O	54481	54491	discussion
O	54491	54492	.

O	54493	54494	(
O	54494	54501	Perhaps
O	54502	54507	Brian
O	54508	54513	Goetz
O	54514	54515	,
O	54516	54519	one
O	54520	54522	of
O	54523	54526	the
O	54527	54537	principals
O	54538	54540	of
O	54541	54545	this
O	54546	54556	discussion
O	54556	54557	,
O	54558	54561	can
O	54562	54566	fill
O	54567	54569	in
O	54570	54578	anything
O	54579	54586	missing
O	54586	54587	.
O	54587	54588	)
O	54589	54592	The
O	54593	54605	participants
O	54606	54610	made
O	54611	54616	their
O	54617	54623	points
O	54624	54628	well
O	54628	54629	,
O	54630	54632	so
O	54633	54637	this
O	54638	54644	answer
O	54645	54647	is
O	54648	54654	mostly
O	54655	54659	just
O	54660	54662	an
O	54663	54675	organization
O	54676	54678	of
O	54679	54682	the
O	54683	54691	relevant
O	54692	54698	quotes
O	54698	54699	,
O	54700	54704	with
O	54705	54706	a
O	54707	54710	few
O	54711	54725	clarifications
O	54726	54728	in
O	54729	54730	[
O	54730	54738	brackets
O	54738	54739	]
O	54740	54741	,
O	54742	54751	presented
O	54752	54754	in
O	54755	54760	order
O	54761	54763	of
O	54764	54774	importance
O	54775	54776	(
O	54776	54778	as
O	54779	54780	I
O	54781	54790	interpret
O	54791	54793	it
O	54793	54794	)
O	54794	54795	.

B-api_mention	54796	54810	parallelStream
I-api_mention	54810	54811	(
I-api_mention	54811	54812	)
O	54813	54819	covers
O	54820	54821	a
O	54822	54826	very
O	54827	54833	common
O	54834	54838	case
O	54839	54844	Brian
O	54845	54850	Goetz
O	54851	54853	in
O	54854	54857	the
O	54858	54863	first
O	54864	54870	thread
O	54870	54871	,
O	54872	54882	explaining
O	54883	54886	why
B-api_mention	54887	54898	Collections
I-api_mention	54898	54899	.
I-api_mention	54899	54913	parallelStream
I-api_mention	54913	54914	(
I-api_mention	54914	54918	args
I-api_mention	54918	54919	)
O	54920	54922	is
O	54923	54931	valuable
O	54932	54938	enough
O	54939	54941	to
O	54942	54946	keep
O	54947	54951	even
O	54952	54957	after
O	54958	54963	other
O	54964	54972	parallel
O	54973	54979	stream
O	54980	54987	factory
O	54988	54995	methods
O	54996	55000	have
O	55001	55005	been
O	55006	55013	removed
O	55013	55014	:
O	55015	55016	#
O	55016	55026	blockquote
O	55027	55032	Brian
O	55033	55038	Goetz
O	55039	55045	stands
O	55046	55048	by
O	55049	55053	this
O	55054	55062	position
O	55063	55065	in
O	55066	55069	the
O	55070	55075	later
O	55076	55086	discussion
O	55087	55092	about
B-api_mention	55093	55099	Arrays
I-api_mention	55099	55100	.
I-api_mention	55100	55114	parallelStream
I-api_mention	55114	55115	(
I-api_mention	55115	55119	args
I-api_mention	55119	55120	)
O	55121	55122	:
O	55123	55124	#
O	55124	55134	blockquote
B-api_mention	55135	55149	parallelStream
I-api_mention	55149	55150	(
I-api_mention	55150	55151	)
O	55152	55154	is
O	55155	55159	more
O	55160	55170	performant
O	55171	55176	Brian
O	55177	55182	Goetz
O	55183	55184	:
O	55185	55186	#
O	55186	55196	blockquote
O	55197	55199	In
O	55200	55208	response
O	55209	55211	to
O	55212	55217	Kevin
O	55218	55229	Bourrillion
O	55229	55230	'
O	55230	55231	s
O	55232	55242	skepticism
O	55243	55248	about
O	55249	55256	whether
O	55257	55260	the
O	55261	55267	effect
O	55268	55270	is
O	55271	55282	significant
O	55282	55283	,
O	55284	55289	Brian
O	55290	55295	again
O	55296	55297	:
O	55298	55299	#
O	55299	55309	blockquote
O	55310	55314	Doug
O	55315	55318	Lea
O	55319	55326	follows
O	55327	55329	up
O	55330	55331	,
O	55332	55335	but
O	55336	55342	hedges
O	55343	55346	his
O	55347	55355	position
O	55355	55356	:
O	55357	55358	#
O	55358	55368	blockquote
O	55369	55375	Indeed
O	55375	55376	,
O	55377	55380	the
O	55381	55386	later
O	55387	55397	discussion
O	55398	55403	about
B-api_mention	55404	55410	Arrays
I-api_mention	55410	55411	.
I-api_mention	55411	55425	parallelStream
I-api_mention	55425	55426	(
I-api_mention	55426	55430	args
I-api_mention	55430	55431	)
O	55432	55437	takes
O	55438	55444	notice
O	55445	55447	of
O	55448	55453	lower
B-api_mention	55454	55460	Stream
I-api_mention	55460	55461	.
I-api_mention	55461	55469	parallel
I-api_mention	55469	55470	(
I-api_mention	55470	55471	)
O	55472	55476	cost
O	55477	55478	.

B-api_mention	55479	55485	stream
I-api_mention	55485	55486	(
I-api_mention	55486	55487	)
I-api_mention	55487	55488	.
I-api_mention	55488	55496	parallel
I-api_mention	55496	55497	(
I-api_mention	55497	55498	)
O	55499	55511	statefulness
O	55512	55523	complicates
O	55524	55527	the
O	55528	55534	future
O	55535	55537	At
O	55538	55541	the
O	55542	55546	time
O	55547	55549	of
O	55550	55553	the
O	55554	55564	discussion
O	55564	55565	,
O	55566	55575	switching
O	55576	55577	a
O	55578	55584	stream
O	55585	55589	from
O	55590	55600	sequential
O	55601	55603	to
O	55604	55612	parallel
O	55613	55616	and
O	55617	55621	back
O	55622	55627	could
O	55628	55630	be
O	55631	55642	interleaved
O	55643	55647	with
O	55648	55653	other
O	55654	55660	stream
O	55661	55671	operations
O	55671	55672	.

O	55673	55678	Brian
O	55679	55684	Goetz
O	55684	55685	,
O	55686	55688	on
O	55689	55695	behalf
O	55696	55698	of
O	55699	55703	Doug
O	55704	55707	Lea
O	55708	55709	,
O	55710	55718	explains
O	55719	55722	why
O	55723	55733	sequential
O	55733	55734	/
O	55734	55742	parallel
O	55743	55747	mode
O	55748	55757	switching
O	55758	55761	may
O	55762	55772	complicate
O	55773	55779	future
O	55780	55791	development
O	55792	55794	of
O	55795	55798	the
O	55799	55803	Java
O	55804	55812	platform
O	55812	55813	:
O	55814	55815	#
O	55815	55825	blockquote
O	55826	55830	This
O	55831	55835	mode
O	55836	55845	switching
O	55846	55849	was
O	55850	55857	removed
O	55858	55863	after
O	55864	55871	further
O	55872	55882	discussion
O	55883	55884	.

O	55885	55887	In
O	55888	55891	the
O	55892	55899	current
O	55900	55907	version
O	55908	55910	of
O	55911	55914	the
O	55915	55922	library
O	55922	55923	,
O	55924	55925	a
O	55926	55932	stream
O	55933	55941	pipeline
O	55942	55944	is
O	55945	55951	either
O	55952	55962	sequential
O	55963	55965	or
O	55966	55974	parallel
O	55974	55975	;
O	55976	55980	last
O	55981	55985	call
O	55986	55988	to
B-api_mention	55989	55999	sequential
I-api_mention	55999	56000	(
I-api_mention	56000	56004	args
I-api_mention	56004	56005	)
O	56006	56007	/
B-api_mention	56008	56016	parallel
I-api_mention	56016	56017	(
I-api_mention	56017	56021	args
I-api_mention	56021	56022	)
O	56023	56027	wins
O	56027	56028	.

O	56029	56036	Besides
O	56037	56041	side
O	56041	56042	-
O	56042	56050	stepping
O	56051	56054	the
O	56055	56067	statefulness
O	56068	56075	problem
O	56075	56076	,
O	56077	56081	this
O	56082	56088	change
O	56089	56093	also
O	56094	56102	improved
O	56103	56106	the
O	56107	56118	performance
O	56119	56121	of
O	56122	56127	using
B-api_mention	56128	56136	parallel
I-api_mention	56136	56137	(
I-api_mention	56137	56141	args
I-api_mention	56141	56142	)
O	56143	56145	to
O	56146	56149	set
O	56150	56152	up
O	56153	56154	a
O	56155	56163	parallel
O	56164	56172	pipeline
O	56173	56177	from
O	56178	56179	a
O	56180	56190	sequential
O	56191	56197	stream
O	56198	56205	factory
O	56205	56206	.
O	56207	56215	exposing
B-api_mention	56216	56230	parallelStream
I-api_mention	56230	56231	(
I-api_mention	56231	56232	)
O	56233	56235	as
O	56236	56237	a
O	56238	56243	first
O	56243	56244	-
O	56244	56249	class
O	56250	56257	citizen
O	56258	56266	improves
O	56267	56277	programmer
O	56278	56288	perception
O	56289	56291	of
O	56292	56295	the
O	56296	56303	library
O	56303	56304	,
O	56305	56312	leading
O	56313	56317	them
O	56318	56320	to
O	56321	56326	write
O	56327	56333	better
O	56334	56338	code
O	56339	56344	Brian
O	56345	56350	Goetz
O	56351	56356	again
O	56357	56358	,
O	56359	56361	in
O	56362	56370	response
O	56371	56373	to
O	56374	56377	Tim
O	56378	56385	Peierls
O	56385	56386	'
O	56386	56387	s
O	56388	56396	argument
O	56397	56401	that
B-api_mention	56402	56408	Stream
I-api_mention	56408	56409	.
I-api_mention	56409	56417	parallel
I-api_mention	56417	56418	(
I-api_mention	56418	56422	args
I-api_mention	56422	56423	)
O	56424	56430	allows
O	56431	56442	programmers
O	56443	56445	to
O	56446	56456	understand
O	56457	56464	streams
O	56465	56477	sequentially
O	56478	56484	before
O	56485	56490	going
O	56491	56499	parallel
O	56499	56500	:
O	56501	56502	#
O	56502	56512	blockquote

O	56514	56522	Question
O	56522	56523	-
O	56523	56531	24649842
O	56531	56532	,
O	56533	56539	answer
O	56539	56540	-
O	56540	56548	24649939

O	56549	56552	Try
O	56553	56559	adding
O	56560	56561	a
B-api_mention	56562	56568	Thread
I-api_mention	56568	56569	.
I-api_mention	56569	56574	sleep
I-api_mention	56574	56575	(
I-api_mention	56575	56579	args
I-api_mention	56579	56580	)
O	56580	56581	;
O	56582	56586	call
O	56587	56593	within
O	56594	56598	your
B-api_mention	56599	56602	run
I-api_mention	56602	56603	(
I-api_mention	56603	56607	args
I-api_mention	56607	56608	)
O	56609	56615	method
O	56615	56616	.
O	56616	56617	.
O	56617	56618	.

O	56619	56628	Basically
O	56629	56631	it
O	56631	56632	'
O	56632	56633	s
O	56634	56637	the
O	56638	56648	difference
O	56649	56656	between
O	56657	56667	scheduling
O	56668	56677	something
O	56678	56683	based
O	56684	56686	on
O	56687	56691	when
O	56692	56695	the
O	56696	56704	previous
O	56705	56714	execution
O	56715	56719	ends
O	56720	56723	and
O	56724	56728	when
O	56729	56731	it
O	56732	56733	(
O	56733	56742	logically
O	56742	56743	)
O	56744	56750	starts
O	56751	56752	.

O	56753	56756	For
O	56757	56764	example
O	56764	56765	,
O	56766	56773	suppose
O	56774	56775	I
O	56776	56784	schedule
O	56785	56787	an
O	56788	56793	alarm
O	56794	56796	to
O	56797	56799	go
O	56800	56803	off
O	56804	56808	with
O	56809	56810	a
O	56811	56816	fixed
O	56817	56821	rate
O	56822	56824	of
O	56825	56829	once
O	56830	56832	an
O	56833	56837	hour
O	56837	56838	,
O	56839	56842	and
O	56843	56848	every
O	56849	56853	time
O	56854	56856	it
O	56857	56861	goes
O	56862	56865	off
O	56865	56866	,
O	56867	56868	I
O	56869	56873	have
O	56874	56875	a
O	56876	56879	cup
O	56880	56882	of
O	56883	56889	coffee
O	56889	56890	,
O	56891	56896	which
O	56897	56902	takes
O	56903	56905	10
O	56906	56913	minutes
O	56913	56914	.

O	56915	56922	Suppose
O	56923	56927	that
O	56928	56934	starts
O	56935	56937	at
O	56938	56946	midnight
O	56946	56947	,
O	56948	56949	I
O	56949	56950	'
O	56950	56951	d
O	56952	56956	have
O	56956	56957	:
O	56958	56959	#
O	56959	56962	pre
O	56963	56965	If
O	56966	56967	I
O	56968	56976	schedule
O	56977	56981	with
O	56982	56983	a
O	56984	56989	fixed
O	56990	56995	delay
O	56996	56998	of
O	56999	57002	one
O	57003	57007	hour
O	57007	57008	,
O	57009	57010	I
O	57010	57011	'
O	57011	57012	d
O	57013	57017	have
O	57017	57018	:
O	57019	57020	#
O	57020	57023	pre
O	57024	57029	Which
O	57030	57033	one
O	57034	57037	you
O	57038	57042	want
O	57043	57050	depends
O	57051	57053	on
O	57054	57058	your
O	57059	57063	task
O	57063	57064	.
