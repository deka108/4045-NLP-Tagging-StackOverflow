O	0	8	Question
O	8	9	-
O	9	16	6841333

O	17	19	If
O	20	21	I
O	22	25	run
O	26	29	the
O	30	39	following
O	40	47	program
O	47	48	,
O	49	54	which
O	55	61	parses
O	62	65	two
O	66	70	date
O	71	78	strings
O	79	90	referencing
O	91	96	times
O	97	100	one
O	101	107	second
O	108	113	apart
O	114	117	and
O	118	126	compares
O	127	131	them
O	131	132	:
O	133	134	#
O	134	137	pre
O	138	141	The
O	142	148	output
O	149	151	is
O	151	152	:
O	153	156	353
O	157	160	Why
O	161	163	is
O	164	167	ld4
O	167	168	-
O	168	171	ld3
O	172	175	not
O	176	177	1
O	178	179	(
O	179	181	as
O	182	183	I
O	184	189	would
O	190	196	expect
O	197	201	from
O	202	205	the
O	206	209	one
O	209	210	-
O	210	216	second
O	217	227	difference
O	228	230	in
O	231	234	the
O	235	240	times
O	240	241	)
O	241	242	,
O	243	246	but
O	247	250	353
O	251	252	?

O	253	255	If
O	256	257	I
O	258	264	change
O	265	268	the
O	269	274	dates
O	275	277	to
O	278	283	times
O	284	287	one
O	288	294	second
O	295	300	later
O	300	301	:
O	302	303	#
O	303	306	pre
O	307	311	Then
O	312	315	ld4
O	315	316	-
O	316	319	ld3
O	320	324	will
O	325	327	be
O	328	329	1
O	330	331	.

O	332	336	Java
O	337	344	version
O	344	345	:
O	346	347	#
O	347	350	pre
B-api_mention	351	359	Timezone
O	359	360	(
B-api_mention	361	369	TimeZone
I-api_mention	369	370	.
I-api_mention	370	380	getDefault
I-api_mention	380	381	(
I-api_mention	381	385	args
I-api_mention	385	386	)
O	387	388	)
O	388	389	:
O	390	391	#
O	391	394	pre

O	396	404	Question
O	404	405	-
O	405	412	7693324

O	413	414	I
O	415	418	got
O	419	420	a
O	421	427	simple
O	428	436	question
O	437	439	in
O	440	444	Java
O	444	445	:
O	446	449	How
O	450	453	can
O	454	455	I
O	456	463	convert
O	464	465	a
B-api_mention	466	472	String
O	473	477	that
O	478	481	was
O	482	490	obtained
O	491	493	by
B-api_mention	494	498	Long
I-api_mention	498	499	.
I-api_mention	499	507	toString
I-api_mention	507	508	(
I-api_mention	508	512	args
I-api_mention	512	513	)
O	514	516	to
O	517	521	long
O	522	523	?

O	525	533	Question
O	533	534	-
O	534	541	7520432

O	542	543	I
O	544	550	wanted
O	551	553	to
O	554	561	clarify
O	562	564	if
O	565	566	I
O	567	577	understand
O	578	582	this
O	583	592	correctly
O	592	593	:
O	594	595	#
O	595	597	li
O	598	599	=
O	599	600	=
O	601	602	-
O	602	603	>
O	604	606	is
O	607	608	a
O	609	618	reference
O	619	629	comparison
O	629	630	,
O	631	632	i
O	632	633	.
O	633	634	e
O	634	635	.
O	636	640	both
O	641	648	objects
O	649	654	point
O	655	657	to
O	658	661	the
O	662	666	same
O	667	673	memory
O	674	682	location
O	683	684	#
O	684	686	li
B-api_mention	687	688	.
I-api_mention	688	694	equals
I-api_mention	694	695	(
I-api_mention	695	699	args
I-api_mention	699	700	)
O	701	702	-
O	702	703	>
O	704	713	evaluates
O	714	716	to
O	717	720	the
O	721	731	comparison
O	732	734	of
O	735	741	values
O	742	744	in
O	745	748	the
O	749	756	objects
O	757	759	Am
O	760	761	I
O	762	769	correct
O	770	772	in
O	773	775	my
O	776	789	understanding
O	790	791	?

O	793	801	Question
O	801	802	-
O	802	809	7348711

O	810	815	Which
O	816	818	of
O	819	822	the
O	823	832	following
O	833	835	is
O	836	839	the
O	840	844	best
O	845	848	and
O	849	853	most
O	854	862	portable
O	863	866	way
O	867	869	to
O	870	873	get
O	874	877	the
O	878	886	hostname
O	887	889	of
O	890	893	the
O	894	901	current
O	902	910	computer
O	911	913	in
O	914	918	Java
O	918	919	?

B-api_mention	920	927	Runtime
I-api_mention	927	928	.
I-api_mention	928	938	getRuntime
I-api_mention	938	939	(
I-api_mention	939	943	args
I-api_mention	943	944	)
I-api_mention	944	945	.
I-api_mention	945	949	exec
I-api_mention	949	950	(
I-api_mention	950	954	args
I-api_mention	954	955	)
O	956	958	vs
B-api_mention	959	970	InetAddress
I-api_mention	970	971	.
I-api_mention	971	983	getLocalHost
I-api_mention	983	984	(
I-api_mention	984	988	args
I-api_mention	988	989	)
I-api_mention	989	990	.
I-api_mention	990	1001	getHostName
I-api_mention	1001	1002	(
I-api_mention	1002	1006	args
I-api_mention	1006	1007	)

O	1009	1017	Question
O	1017	1018	-
O	1018	1025	6667243

O	1026	1030	What
O	1031	1033	is
O	1034	1037	the
O	1038	1042	best
O	1043	1046	way
O	1047	1049	to
O	1050	1053	use
O	1054	1057	the
O	1058	1064	values
O	1065	1071	stored
O	1072	1074	in
O	1075	1077	an
B-api_mention	1078	1082	Enum
O	1083	1085	as
B-api_mention	1086	1092	String
O	1093	1101	literals
O	1101	1102	?

O	1103	1106	For
O	1107	1114	example
O	1114	1115	:
O	1116	1117	#
O	1117	1120	pre
O	1121	1125	Then
O	1126	1131	later
O	1132	1133	I
O	1134	1139	could
O	1140	1143	use
O	1144	1148	Mode
O	1148	1149	.
O	1149	1154	mode1
O	1155	1157	to
O	1158	1164	return
O	1165	1168	its
O	1169	1175	string
O	1176	1190	representation
O	1191	1193	as
O	1194	1199	mode1
O	1200	1201	.

O	1202	1209	Without
O	1210	1216	having
O	1217	1219	to
O	1220	1224	keep
O	1225	1232	calling
O	1233	1237	Mode
O	1237	1238	.
O	1238	1243	model
B-api_mention	1243	1244	.
I-api_mention	1244	1252	toString
I-api_mention	1252	1253	(
I-api_mention	1253	1257	args
I-api_mention	1257	1258	)
O	1259	1260	.

O	1262	1270	Question
O	1270	1271	-
O	1271	1278	8189466

O	1279	1283	Note
O	1283	1284	:
O	1285	1286	I
O	1287	1289	am
O	1290	1295	aware
O	1296	1298	of
O	1299	1302	the
B-api_mention	1303	1311	Iterator
I-api_mention	1311	1312	#
I-api_mention	1312	1318	remove
I-api_mention	1318	1319	(
I-api_mention	1319	1323	args
I-api_mention	1323	1324	)
O	1325	1331	method
O	1331	1332	.

O	1333	1335	In
O	1336	1339	the
O	1340	1349	following
O	1350	1354	code
O	1355	1361	sample
O	1361	1362	,
O	1363	1364	I
O	1365	1368	don
O	1368	1369	'
O	1369	1370	t
O	1371	1381	understand
O	1382	1385	why
O	1386	1389	the
B-api_mention	1390	1394	List
I-api_mention	1394	1395	.
I-api_mention	1395	1401	remove
O	1402	1404	in
O	1405	1409	main
O	1410	1416	method
O	1417	1423	throws
B-api_mention	1424	1455	ConcurrentModificationException
O	1456	1459	but
O	1460	1463	not
O	1464	1466	in
O	1467	1470	the
B-api_mention	1471	1477	remove
O	1478	1484	method
O	1484	1485	.

O	1486	1487	#
O	1487	1490	pre

O	1492	1500	Question
O	1500	1501	-
O	1501	1508	7032070

O	1509	1517	Assuming
O	1518	1522	that
O	1523	1532	arraylist
O	1533	1535	is
O	1536	1543	defined
O	1544	1546	as
B-api_mention	1547	1556	ArrayList
I-api_mention	1556	1557	<
I-api_mention	1557	1558	T
I-api_mention	1558	1559	>
O	1560	1569	arraylist
O	1570	1571	,
O	1572	1574	is
O	1575	1584	arraylist
B-api_mention	1584	1585	.
I-api_mention	1585	1594	removeAll
I-api_mention	1594	1595	(
I-api_mention	1595	1604	arraylist
I-api_mention	1604	1605	)
O	1606	1616	equivalent
O	1617	1619	to
O	1620	1629	arraylist
B-api_mention	1629	1630	.
I-api_mention	1630	1635	clear
I-api_mention	1635	1636	(
I-api_mention	1636	1637	)
O	1638	1639	?

O	1640	1642	If
O	1643	1645	so
O	1645	1646	,
O	1647	1650	can
O	1651	1652	I
O	1653	1659	assume
O	1660	1664	that
O	1665	1668	the
B-api_mention	1669	1674	clear
I-api_mention	1674	1675	(
I-api_mention	1675	1679	args
I-api_mention	1679	1680	)
O	1681	1687	method
O	1688	1690	is
O	1691	1695	more
O	1696	1705	efficient
O	1706	1709	for
O	1710	1718	emptying
O	1719	1722	the
O	1723	1728	array
O	1729	1733	list
O	1733	1734	?

O	1735	1738	Are
O	1739	1744	there
O	1745	1748	any
O	1749	1756	caveats
O	1757	1759	in
O	1760	1765	using
O	1766	1775	arraylist
B-api_mention	1775	1776	.
I-api_mention	1776	1785	removeAll
I-api_mention	1785	1786	(
I-api_mention	1786	1790	args
I-api_mention	1790	1791	)
O	1792	1799	instead
O	1800	1802	of
O	1803	1812	arraylist
B-api_mention	1812	1813	.
I-api_mention	1813	1818	clear
I-api_mention	1818	1819	(
I-api_mention	1819	1823	args
I-api_mention	1823	1824	)
O	1825	1826	?

O	1828	1836	Question
O	1836	1837	-
O	1837	1844	6652687

O	1845	1846	#
O	1846	1856	blockquote
O	1857	1859	Is
O	1860	1865	there
O	1866	1867	a
O	1868	1879	convenience
O	1880	1886	method
O	1887	1889	to
O	1890	1895	strip
O	1896	1899	any
O	1900	1907	leading
O	1908	1910	or
O	1911	1919	trailing
O	1920	1926	spaces
O	1927	1931	from
O	1932	1933	a
O	1934	1938	Java
B-api_mention	1939	1945	String
O	1945	1946	?

O	1947	1956	Something
O	1957	1961	like
O	1961	1962	:
O	1963	1964	#
O	1964	1967	pre
O	1968	1974	Result
O	1974	1975	:
O	1976	1978	no
O	1979	1985	spaces
O	1985	1986	:
O	1986	1990	keep
O	1991	1995	this
O	1996	2004	myString
B-api_mention	2004	2005	.
I-api_mention	2005	2012	replace
I-api_mention	2012	2013	(
I-api_mention	2013	2017	args
I-api_mention	2017	2018	)
O	2019	2024	would
O	2025	2032	replace
O	2033	2036	the
O	2037	2042	space
O	2043	2050	between
O	2051	2055	keep
O	2056	2059	and
O	2060	2064	this
O	2064	2065	.

O	2066	2072	Thanks

O	2074	2082	Question
O	2082	2083	-
O	2083	2090	6608795

O	2091	2092	I
O	2093	2099	wonder
O	2100	2104	what
O	2105	2108	the
O	2109	2119	difference
O	2120	2122	is
O	2123	2130	between
B-api_mention	2131	2136	Class
I-api_mention	2136	2137	.
I-api_mention	2137	2148	getResource
I-api_mention	2148	2149	(
I-api_mention	2149	2153	args
I-api_mention	2153	2154	)
O	2155	2158	and
B-api_mention	2159	2170	ClassLoader
I-api_mention	2170	2171	.
I-api_mention	2171	2182	getResource
I-api_mention	2182	2183	(
I-api_mention	2183	2187	args
I-api_mention	2187	2188	)
O	2189	2190	?

O	2191	2195	edit
O	2195	2196	:
O	2197	2198	I
O	2199	2209	especially
O	2210	2214	want
O	2215	2217	to
O	2218	2222	know
O	2223	2225	if
O	2226	2229	any
O	2230	2237	caching
O	2238	2240	is
O	2241	2249	involved
O	2250	2252	on
O	2253	2257	file
O	2257	2258	/
O	2258	2267	directory
O	2268	2273	level
O	2273	2274	.

O	2275	2277	As
O	2278	2280	in
O	2281	2282	"
O	2282	2285	are
O	2286	2295	directory
O	2296	2304	listings
O	2305	2311	cached
O	2312	2314	in
O	2315	2318	the
B-api_mention	2319	2324	Class
O	2325	2332	version
O	2332	2333	?
O	2333	2334	"
O	2335	2340	AFAIK
O	2341	2344	the
O	2345	2354	following
O	2355	2361	should
O	2362	2373	essentially
O	2374	2376	do
O	2377	2380	the
O	2381	2385	same
O	2385	2386	,
O	2387	2390	but
O	2391	2395	they
O	2396	2399	are
O	2400	2403	not
O	2403	2404	:
O	2405	2406	#
O	2406	2409	pre
O	2410	2411	I
O	2412	2422	discovered
O	2423	2427	this
O	2428	2432	when
O	2433	2441	fiddling
O	2442	2446	with
O	2447	2451	some
O	2452	2458	report
O	2459	2469	generation
O	2470	2474	code
O	2475	2479	that
O	2480	2487	creates
O	2488	2489	a
O	2490	2493	new
O	2494	2498	file
O	2499	2501	in
O	2502	2505	WEB
O	2505	2506	-
O	2506	2509	INF
O	2509	2510	/
O	2510	2517	classes
O	2517	2518	/
O	2519	2523	from
O	2524	2526	an
O	2527	2535	existing
O	2536	2540	file
O	2541	2543	in
O	2544	2548	that
O	2549	2558	directory
O	2558	2559	.

O	2560	2564	When
O	2565	2570	using
O	2571	2574	the
O	2575	2581	method
O	2582	2586	from
B-api_mention	2587	2592	Class
O	2592	2593	,
O	2594	2595	I
O	2596	2601	could
O	2602	2606	find
O	2607	2612	files
O	2613	2617	that
O	2618	2622	were
O	2623	2628	there
O	2629	2631	at
O	2632	2642	deployment
O	2643	2648	using
B-api_mention	2649	2657	getClass
I-api_mention	2657	2658	(
I-api_mention	2658	2662	args
I-api_mention	2662	2663	)
I-api_mention	2663	2664	.
I-api_mention	2664	2675	getResource
I-api_mention	2675	2676	(
I-api_mention	2676	2680	args
I-api_mention	2680	2681	)
O	2682	2683	,
O	2684	2687	but
O	2688	2692	when
O	2693	2699	trying
O	2700	2702	to
O	2703	2708	fetch
O	2709	2712	the
O	2713	2718	newly
O	2719	2726	created
O	2727	2731	file
O	2731	2732	,
O	2733	2734	I
O	2735	2743	recieved
O	2744	2745	a
O	2746	2750	null
O	2751	2757	object
O	2757	2758	.

O	2759	2767	Browsing
O	2768	2771	the
O	2772	2781	directory
O	2782	2789	clearly
O	2790	2795	shows
O	2796	2800	that
O	2801	2804	the
O	2805	2808	new
O	2809	2813	file
O	2814	2816	is
O	2817	2822	there
O	2822	2823	.

O	2824	2827	The
O	2828	2837	filenames
O	2838	2842	were
O	2843	2852	prepended
O	2853	2857	with
O	2858	2859	a
O	2860	2867	forward
O	2868	2873	slash
O	2874	2876	as
O	2877	2879	in
O	2880	2881	"
O	2881	2882	/
O	2882	2888	myFile
O	2888	2889	.
O	2889	2892	txt
O	2892	2893	"
O	2893	2894	.

O	2895	2898	The
B-api_mention	2899	2910	ClassLoader
O	2911	2918	version
O	2919	2921	of
B-api_mention	2922	2933	getResource
I-api_mention	2933	2934	(
I-api_mention	2934	2938	args
I-api_mention	2938	2939	)
O	2940	2942	on
O	2943	2946	the
O	2947	2952	other
O	2953	2957	hand
O	2958	2961	did
O	2962	2966	find
O	2967	2970	the
O	2971	2980	generated
O	2981	2985	file
O	2985	2986	.

O	2987	2991	From
O	2992	2996	this
O	2997	3007	experience
O	3008	3010	it
O	3011	3016	seems
O	3017	3021	that
O	3022	3027	there
O	3028	3030	is
O	3031	3035	some
O	3036	3040	kind
O	3041	3043	of
O	3044	3051	caching
O	3052	3054	of
O	3055	3058	the
O	3059	3068	directory
O	3069	3076	listing
O	3077	3082	going
O	3083	3085	on
O	3085	3086	.

O	3087	3089	Am
O	3090	3091	I
O	3092	3097	right
O	3097	3098	,
O	3099	3102	and
O	3103	3105	if
O	3106	3108	so
O	3108	3109	,
O	3110	3115	where
O	3116	3118	is
O	3119	3123	this
O	3124	3134	documented
O	3134	3135	?

O	3136	3140	From
O	3141	3144	the
O	3145	3148	API
O	3149	3153	docs
O	3154	3156	on
B-api_mention	3157	3162	Class
I-api_mention	3162	3163	.
I-api_mention	3163	3174	getResource
I-api_mention	3174	3175	(
I-api_mention	3175	3179	args
I-api_mention	3179	3180	)
O	3181	3182	#
O	3182	3192	blockquote
O	3193	3195	To
O	3196	3198	me
O	3198	3199	,
O	3200	3204	this
O	3205	3210	reads
O	3211	3212	"
B-api_mention	3212	3217	Class
I-api_mention	3217	3218	.
I-api_mention	3218	3229	getResource
O	3230	3232	is
O	3233	3239	really
O	3240	3247	calling
O	3248	3251	its
O	3252	3255	own
O	3256	3267	classloader
O	3267	3268	'
O	3268	3269	s
B-api_mention	3270	3281	getResource
I-api_mention	3281	3282	(
I-api_mention	3282	3283	)
O	3283	3284	"
O	3284	3285	.

O	3286	3291	Which
O	3292	3297	would
O	3298	3300	be
O	3301	3304	the
O	3305	3309	same
O	3310	3312	as
O	3313	3318	doing
B-api_mention	3319	3327	getClass
I-api_mention	3327	3328	(
I-api_mention	3328	3332	args
I-api_mention	3332	3333	)
I-api_mention	3333	3334	.
I-api_mention	3334	3348	getClassLoader
I-api_mention	3348	3349	(
I-api_mention	3349	3353	args
I-api_mention	3353	3354	)
I-api_mention	3354	3355	.
I-api_mention	3355	3366	getResource
I-api_mention	3366	3367	(
I-api_mention	3367	3371	args
I-api_mention	3371	3372	)
O	3373	3374	.

O	3375	3378	But
O	3379	3381	it
O	3382	3384	is
O	3385	3394	obviously
O	3395	3398	not
O	3398	3399	.

O	3400	3405	Could
O	3406	3413	someone
O	3414	3420	please
O	3421	3428	provide
O	3429	3431	me
O	3432	3436	with
O	3437	3441	some
O	3442	3454	illumination
O	3455	3459	into
O	3460	3464	this
O	3465	3471	matter
O	3471	3472	?

O	3474	3482	Question
O	3482	3483	-
O	3483	3490	7935858

O	3491	3492	I
O	3493	3497	have
O	3498	3506	prepared
O	3507	3508	a
O	3509	3515	simple
O	3516	3520	code
O	3521	3528	snippet
O	3529	3531	in
O	3532	3537	order
O	3538	3540	to
O	3541	3549	separate
O	3550	3553	the
O	3554	3563	erroneous
O	3564	3571	portion
O	3572	3576	from
O	3577	3579	my
O	3580	3583	web
O	3584	3595	application
O	3595	3596	.

O	3597	3598	#
O	3598	3601	pre
O	3602	3603	I
O	3604	3608	have
O	3609	3615	tested
O	3616	3618	it
O	3619	3624	while
O	3625	3633	building
O	3634	3635	a
O	3636	3639	web
O	3640	3651	application
O	3652	3655	JSF
O	3655	3656	.

O	3657	3658	I
O	3659	3663	just
O	3664	3668	want
O	3669	3671	to
O	3672	3676	know
O	3677	3680	why
O	3681	3683	in
O	3684	3687	the
O	3688	3693	above
O	3694	3698	code
O	3699	3703	temp
O	3703	3704	.
O	3704	3709	split
O	3709	3710	(
O	3710	3714	args
O	3714	3715	)
O	3716	3720	does
O	3721	3724	not
O	3725	3729	work
O	3729	3730	.

O	3731	3734	The
O	3735	3744	statement
O	3744	3745	,
B-api_mention	3746	3752	System
I-api_mention	3752	3753	.
I-api_mention	3753	3756	out
I-api_mention	3756	3757	.
I-api_mention	3757	3764	println
I-api_mention	3764	3765	(
I-api_mention	3765	3769	args
I-api_mention	3769	3770	)
O	3770	3771	;
O	3772	3780	displays
O	3781	3788	nothing
O	3789	3791	on
O	3792	3795	the
O	3796	3803	console
O	3804	3809	means
O	3810	3814	that
O	3815	3817	it
O	3818	3823	doesn
O	3823	3824	'
O	3824	3825	t
O	3826	3828	go
O	3829	3836	through
O	3837	3840	the
O	3841	3845	loop
O	3845	3846	.

O	3847	3851	When
O	3852	3853	I
O	3854	3860	change
O	3861	3864	the
O	3865	3873	argument
O	3874	3876	of
O	3877	3880	the
O	3881	3885	temp
B-api_mention	3885	3886	.
I-api_mention	3886	3891	split
I-api_mention	3891	3892	(
I-api_mention	3892	3896	args
I-api_mention	3896	3897	)
O	3898	3904	method
O	3905	3907	to
O	3908	3913	other
O	3914	3924	characters
O	3924	3925	,
O	3926	3928	It
O	3929	3934	works
O	3935	3939	just
O	3940	3944	fine
O	3945	3947	as
O	3948	3953	usual
O	3953	3954	.

O	3955	3959	What
O	3960	3965	might
O	3966	3968	be
O	3969	3972	the
O	3973	3980	problem
O	3980	3981	?

O	3983	3991	Question
O	3991	3992	-
O	3992	3999	6841333
O	3999	4000	,
O	4001	4007	answer
O	4007	4008	-
O	4008	4016	20906129

O	4017	4019	As
O	4020	4029	explained
O	4030	4032	by
O	4033	4039	others
O	4039	4040	,
O	4041	4046	there
O	4046	4047	'
O	4047	4048	s
O	4049	4050	a
O	4051	4055	time
O	4056	4069	discontinuity
O	4070	4075	there
O	4075	4076	.

O	4077	4082	There
O	4083	4086	are
O	4087	4090	two
O	4091	4099	possible
O	4100	4108	timezone
O	4109	4116	offsets
O	4117	4120	for
O	4121	4125	1927
O	4125	4126	-
O	4126	4128	12
O	4128	4129	-
O	4129	4131	31
O	4132	4134	23
O	4134	4135	:
O	4135	4137	54
O	4137	4138	:
O	4138	4140	08
O	4141	4143	at
O	4144	4148	Asia
O	4148	4149	/
O	4149	4157	Shanghai
O	4158	4159	,
O	4160	4163	but
O	4164	4168	only
O	4169	4172	one
O	4173	4179	offset
O	4180	4183	for
O	4184	4188	1927
O	4188	4189	-
O	4189	4191	12
O	4191	4192	-
O	4192	4194	31
O	4195	4197	23
O	4197	4198	:
O	4198	4200	54
O	4200	4201	:
O	4201	4203	07
O	4204	4205	.

O	4206	4208	So
O	4208	4209	,
O	4210	4219	depending
O	4220	4222	on
O	4223	4228	which
O	4229	4235	offset
O	4236	4238	is
O	4239	4243	used
O	4243	4244	,
O	4245	4250	there
O	4250	4251	'
O	4251	4252	s
O	4253	4259	either
O	4260	4261	a
O	4262	4265	one
O	4266	4272	second
O	4273	4283	difference
O	4284	4286	or
O	4287	4288	a
O	4289	4290	5
O	4291	4298	minutes
O	4299	4302	and
O	4303	4305	53
O	4306	4313	seconds
O	4314	4324	difference
O	4324	4325	.

O	4326	4330	This
O	4331	4337	slight
O	4338	4343	shift
O	4344	4346	of
O	4347	4354	offsets
O	4354	4355	,
O	4356	4363	instead
O	4364	4366	of
O	4367	4370	the
O	4371	4376	usual
O	4377	4380	one
O	4380	4381	-
O	4381	4385	hour
O	4386	4394	daylight
O	4395	4402	savings
O	4403	4404	(
O	4404	4410	summer
O	4411	4415	time
O	4415	4416	)
O	4417	4419	we
O	4420	4423	are
O	4424	4428	used
O	4429	4431	to
O	4431	4432	,
O	4433	4441	obscures
O	4442	4445	the
O	4446	4453	problem
O	4454	4455	a
O	4456	4459	bit
O	4459	4460	.

O	4461	4465	Note
O	4466	4470	that
O	4471	4474	the
O	4475	4480	2013a
O	4481	4487	update
O	4488	4490	of
O	4491	4494	the
O	4495	4503	timezone
O	4504	4512	database
O	4513	4518	moved
O	4519	4523	this
O	4524	4537	discontinuity
O	4538	4539	a
O	4540	4543	few
O	4544	4551	seconds
O	4552	4559	earlier
O	4559	4560	,
O	4561	4564	but
O	4565	4568	the
O	4569	4575	effect
O	4576	4581	would
O	4582	4587	still
O	4588	4590	be
O	4591	4601	observable
O	4601	4602	.

O	4603	4606	The
O	4607	4610	new
O	4611	4615	java
O	4615	4616	.
O	4616	4620	time
O	4621	4628	package
O	4629	4631	on
O	4632	4636	Java
O	4637	4638	8
O	4639	4642	let
O	4643	4646	use
O	4647	4650	see
O	4651	4655	this
O	4656	4660	more
O	4661	4668	clearly
O	4668	4669	,
O	4670	4673	and
O	4674	4681	provide
O	4682	4687	tools
O	4688	4690	to
O	4691	4697	handle
O	4698	4700	it
O	4700	4701	.

O	4702	4707	Given
O	4707	4708	:
O	4709	4710	#
O	4710	4713	pre
O	4714	4718	Then
B-api_mention	4719	4742	durationAtEarlierOffset
O	4743	4747	will
O	4748	4750	be
O	4751	4754	one
O	4755	4761	second
O	4761	4762	,
O	4763	4768	while
B-api_mention	4769	4790	durationAtLaterOffset
O	4791	4795	will
O	4796	4798	be
O	4799	4803	five
O	4804	4811	minutes
O	4812	4815	and
O	4816	4818	53
O	4819	4826	seconds
O	4826	4827	.

O	4828	4832	Also
O	4832	4833	,
O	4834	4839	these
O	4840	4843	two
O	4844	4851	offsets
O	4852	4855	are
O	4856	4859	the
O	4860	4864	same
O	4864	4865	:
O	4866	4867	#
O	4867	4870	pre
O	4871	4874	But
O	4875	4880	these
O	4881	4884	two
O	4885	4888	are
O	4889	4898	different
O	4898	4899	:
O	4900	4901	#
O	4901	4904	pre
O	4905	4908	You
O	4909	4912	can
O	4913	4916	see
O	4917	4920	the
O	4921	4925	same
O	4926	4933	problem
O	4934	4943	comparing
O	4944	4948	1927
O	4948	4949	-
O	4949	4951	12
O	4951	4952	-
O	4952	4954	31
O	4955	4957	23
O	4957	4958	:
O	4958	4960	59
O	4960	4961	:
O	4961	4963	59
O	4964	4968	with
O	4969	4973	1928
O	4973	4974	-
O	4974	4976	01
O	4976	4977	-
O	4977	4979	01
O	4980	4982	00
O	4982	4983	:
O	4983	4985	00
O	4985	4986	:
O	4986	4988	00
O	4989	4990	,
O	4991	4997	though
O	4997	4998	,
O	4999	5001	in
O	5002	5006	this
O	5007	5011	case
O	5011	5012	,
O	5013	5015	it
O	5016	5018	is
O	5019	5022	the
O	5023	5030	earlier
O	5031	5037	offset
O	5038	5042	that
O	5043	5050	produce
O	5051	5054	the
O	5055	5061	longer
O	5062	5072	divergence
O	5072	5073	,
O	5074	5077	and
O	5078	5080	it
O	5081	5083	is
O	5084	5087	the
O	5088	5095	earlier
O	5096	5100	date
O	5101	5105	that
O	5106	5109	has
O	5110	5113	two
O	5114	5122	possible
O	5123	5130	offsets
O	5130	5131	.

O	5132	5139	Another
O	5140	5143	way
O	5144	5146	to
O	5147	5155	approach
O	5156	5160	this
O	5161	5163	is
O	5164	5166	to
O	5167	5172	check
O	5173	5180	whether
O	5181	5186	there
O	5186	5187	'
O	5187	5188	s
O	5189	5190	a
O	5191	5201	transition
O	5202	5207	going
O	5208	5210	on
O	5210	5211	.

O	5212	5214	We
O	5215	5218	can
O	5219	5221	do
O	5222	5226	this
O	5227	5231	like
O	5232	5236	this
O	5236	5237	:
O	5238	5239	#
O	5239	5242	pre
O	5243	5246	You
O	5247	5250	can
O	5251	5256	check
O	5257	5264	whether
O	5265	5268	the
O	5269	5279	transition
O	5280	5282	is
O	5283	5285	an
O	5286	5293	overlap
O	5294	5295	-
O	5296	5298	in
O	5299	5304	which
O	5305	5309	case
O	5310	5315	there
O	5315	5316	'
O	5316	5317	s
O	5318	5322	more
O	5323	5327	than
O	5328	5331	one
O	5332	5337	valid
O	5338	5344	offset
O	5345	5348	for
O	5349	5353	that
O	5354	5358	date
O	5358	5359	/
O	5359	5363	time
O	5364	5365	-
O	5366	5368	or
O	5369	5370	a
O	5371	5374	gap
O	5375	5376	-
O	5377	5379	in
O	5380	5385	which
O	5386	5390	case
O	5391	5395	that
O	5396	5400	date
O	5400	5401	/
O	5401	5405	time
O	5406	5408	is
O	5409	5412	not
O	5413	5418	valid
O	5419	5422	for
O	5423	5427	that
O	5428	5432	zone
O	5433	5435	id
O	5436	5437	-
O	5438	5440	by
O	5441	5446	using
O	5447	5450	the
B-api_mention	5451	5460	isOverlap
I-api_mention	5460	5461	(
I-api_mention	5461	5465	args
I-api_mention	5465	5466	)
O	5467	5470	and
B-api_mention	5471	5476	isGap
I-api_mention	5476	5477	(
I-api_mention	5477	5481	args
I-api_mention	5481	5482	)
O	5483	5490	methods
O	5491	5493	on
O	5494	5498	zot4
O	5499	5500	.

O	5501	5502	I
O	5503	5507	hope
O	5508	5512	this
O	5513	5518	helps
O	5519	5525	people
O	5526	5532	handle
O	5533	5537	this
O	5538	5542	sort
O	5543	5545	of
O	5546	5551	issue
O	5552	5556	once
O	5557	5561	Java
O	5562	5563	8
O	5564	5571	becomes
O	5572	5578	widely
O	5579	5588	available
O	5588	5589	,
O	5590	5592	or
O	5593	5595	to
O	5596	5601	those
O	5602	5607	using
O	5608	5612	Java
O	5613	5614	7
O	5615	5618	who
O	5619	5624	adopt
O	5625	5628	the
O	5629	5632	JSR
O	5633	5636	310
O	5637	5645	backport
O	5645	5646	.

O	5648	5656	Question
O	5656	5657	-
O	5657	5664	8172420
O	5664	5665	,
O	5666	5672	answer
O	5672	5673	-
O	5673	5680	8172439

O	5681	5684	You
O	5685	5688	can
O	5689	5692	use
B-api_mention	5693	5702	Character
I-api_mention	5702	5703	.
I-api_mention	5703	5711	toString
I-api_mention	5711	5712	(
I-api_mention	5712	5716	char
I-api_mention	5716	5717	)
O	5718	5719	.

O	5720	5724	Note
O	5725	5729	that
O	5730	5734	this
O	5735	5741	method
O	5742	5748	simply
O	5749	5756	returns
O	5757	5758	a
O	5759	5763	call
O	5764	5766	to
B-api_mention	5767	5773	String
I-api_mention	5773	5774	.
I-api_mention	5774	5781	valueOf
I-api_mention	5781	5782	(
I-api_mention	5782	5786	char
I-api_mention	5786	5787	)
O	5788	5789	,
O	5790	5795	which
O	5796	5800	also
O	5801	5806	works
O	5806	5807	.

O	5808	5810	As
O	5811	5817	others
O	5818	5822	have
O	5823	5828	noted
O	5828	5829	,
O	5830	5836	string
O	5837	5850	concatenation
O	5851	5856	works
O	5857	5859	as
O	5860	5861	a
O	5862	5870	shortcut
O	5871	5873	as
O	5874	5878	well
O	5878	5879	:
B-api_mention	5880	5886	String
O	5887	5888	s
O	5889	5890	=
O	5891	5904	StringLiteral
O	5905	5906	+
O	5907	5918	CharLiteral
O	5918	5919	;
O	5920	5923	But
O	5924	5928	this
O	5929	5937	compiles
O	5938	5942	down
O	5943	5945	to
O	5945	5946	:
B-api_mention	5947	5953	String
O	5954	5955	s
O	5956	5957	=
O	5958	5961	new
B-api_mention	5962	5975	StringBuilder
I-api_mention	5975	5976	(
I-api_mention	5976	5980	args
I-api_mention	5980	5981	)
I-api_mention	5981	5982	.
I-api_mention	5982	5988	append
I-api_mention	5988	5989	(
I-api_mention	5989	5993	args
I-api_mention	5993	5994	)
I-api_mention	5994	5995	.
I-api_mention	5995	6001	append
I-api_mention	6001	6002	(
I-api_mention	6002	6006	args
I-api_mention	6006	6007	)
I-api_mention	6007	6008	.
I-api_mention	6008	6016	toString
I-api_mention	6016	6017	(
I-api_mention	6017	6021	args
I-api_mention	6021	6022	)
O	6022	6023	;
O	6024	6029	which
O	6030	6032	is
O	6033	6037	less
O	6038	6047	efficient
O	6048	6055	because
O	6056	6059	the
B-api_mention	6060	6073	StringBuilder
O	6074	6076	is
O	6077	6083	backed
O	6084	6086	by
O	6087	6088	a
O	6089	6093	char
O	6093	6094	[
O	6094	6095	]
O	6096	6097	(
O	6097	6101	over
O	6101	6102	-
O	6102	6111	allocated
O	6112	6114	by
B-api_mention	6115	6128	StringBuilder
I-api_mention	6128	6129	(
I-api_mention	6129	6130	)
O	6131	6133	to
O	6134	6136	16
O	6137	6138	)
O	6138	6139	,
O	6140	6144	only
O	6145	6148	for
O	6149	6153	that
O	6154	6159	array
O	6160	6162	to
O	6163	6165	be
O	6166	6177	defensively
O	6178	6184	copied
O	6185	6187	by
O	6188	6191	the
O	6192	6201	resulting
B-api_mention	6202	6208	String
O	6209	6210	.

B-api_mention	6211	6217	String
I-api_mention	6217	6218	.
I-api_mention	6218	6225	valueOf
I-api_mention	6225	6226	(
I-api_mention	6226	6230	args
I-api_mention	6230	6231	)
O	6232	6233	"
O	6233	6237	gets
O	6238	6240	in
O	6241	6244	the
O	6245	6249	back
O	6250	6254	door
O	6254	6255	"
O	6256	6258	by
O	6259	6267	wrapping
O	6268	6271	the
O	6272	6276	char
O	6277	6279	in
O	6280	6281	a
O	6282	6288	single
O	6288	6289	-
O	6289	6296	element
O	6297	6302	array
O	6303	6306	and
O	6307	6314	passing
O	6315	6317	it
O	6318	6320	to
O	6321	6324	the
O	6325	6332	package
O	6333	6340	private
O	6341	6352	constructor
B-api_mention	6353	6359	String
I-api_mention	6359	6360	(
I-api_mention	6360	6364	char
I-api_mention	6364	6365	[
I-api_mention	6365	6366	]
I-api_mention	6366	6367	,
I-api_mention	6368	6375	boolean
I-api_mention	6375	6376	)
O	6377	6378	,
O	6379	6384	which
O	6385	6391	avoids
O	6392	6395	the
O	6396	6401	array
O	6402	6406	copy
O	6406	6407	.

O	6409	6417	Question
O	6417	6418	-
O	6418	6425	8172420
O	6425	6426	,
O	6427	6433	answer
O	6433	6434	-
O	6434	6441	8172444

O	6442	6445	Try
O	6446	6450	this
O	6450	6451	:
B-api_mention	6452	6461	Character
I-api_mention	6461	6462	.
I-api_mention	6462	6470	toString
I-api_mention	6470	6471	(
I-api_mention	6471	6475	args
I-api_mention	6475	6476	)
O	6477	6479	or
O	6480	6484	just
O	6485	6489	this
O	6489	6490	:
O	6491	6496	aChar
O	6497	6498	+
O	6499	6512	StringLiteral

O	6514	6522	Question
O	6522	6523	-
O	6523	6530	8172420
O	6530	6531	,
O	6532	6538	answer
O	6538	6539	-
O	6539	6547	15633542

O	6548	6552	Nice
O	6553	6561	question
O	6561	6562	.

O	6563	6564	I
O	6564	6565	'
O	6565	6567	ve
O	6568	6571	got
O	6572	6574	of
O	6575	6578	the
O	6579	6588	following
O	6589	6593	five
O	6594	6595	6
O	6596	6603	methods
O	6604	6606	to
O	6607	6609	do
O	6610	6612	it
O	6612	6613	.

O	6614	6615	#
O	6615	6618	pre
O	6619	6620	#
O	6620	6630	blockquote
B-api_mention	6631	6637	String
I-api_mention	6637	6638	.
I-api_mention	6638	6645	valueOf
I-api_mention	6645	6646	(
I-api_mention	6646	6650	args
I-api_mention	6650	6651	)
O	6652	6659	invokes
O	6660	6663	new
B-api_mention	6664	6670	String
I-api_mention	6670	6671	(
I-api_mention	6671	6675	args
I-api_mention	6675	6676	)
O	6677	6678	,
O	6679	6684	which
O	6685	6687	in
O	6688	6692	turn
O	6693	6697	sets
O	6698	6701	the
O	6702	6707	value
O	6708	6712	char
O	6713	6718	array
O	6718	6719	.

O	6720	6721	#
O	6721	6724	pre
O	6725	6727	On
O	6728	6731	the
O	6732	6737	other
O	6738	6742	hand
B-api_mention	6743	6749	String
I-api_mention	6749	6750	.
I-api_mention	6750	6757	valueOf
I-api_mention	6757	6758	(
I-api_mention	6758	6762	args
I-api_mention	6762	6763	)
O	6764	6771	invokes
O	6772	6775	the
O	6776	6785	following
O	6786	6793	package
O	6794	6801	private
O	6802	6813	constructor
O	6813	6814	.

O	6815	6816	#
O	6816	6819	pre
O	6820	6826	Source
O	6827	6831	code
O	6832	6836	from
B-api_mention	6837	6843	String
O	6843	6844	.
O	6844	6848	java
O	6849	6851	in
O	6852	6856	Java
O	6857	6858	8
O	6859	6865	source
O	6866	6870	code
O	6871	6872	#
O	6872	6882	blockquote
O	6883	6884	#
O	6884	6886	li
O	6887	6891	Java
O	6892	6893	:
O	6893	6894	:
O	6895	6898	How
O	6899	6901	to
O	6902	6909	convert
O	6910	6919	primitive
O	6920	6924	char
O	6925	6927	to
B-api_mention	6928	6934	String
O	6935	6937	in
O	6938	6942	Java
O	6943	6944	#
O	6944	6946	li
O	6947	6950	How
O	6951	6953	to
O	6954	6961	convert
B-api_mention	6962	6966	Char
O	6967	6969	to
B-api_mention	6970	6976	String
O	6977	6979	in
O	6980	6984	Java
O	6985	6989	with
O	6990	6997	Example

O	6999	7007	Question
O	7007	7008	-
O	7008	7015	8172420
O	7015	7016	,
O	7017	7023	answer
O	7023	7024	-
O	7024	7032	32174377

O	7033	7035	We
O	7036	7040	have
O	7041	7048	various
O	7049	7053	ways
O	7054	7056	to
O	7057	7064	convert
O	7065	7066	a
O	7067	7071	char
O	7072	7074	to
B-api_mention	7075	7081	String
O	7082	7083	.

O	7084	7087	One
O	7088	7091	way
O	7092	7094	is
O	7095	7097	to
O	7098	7102	make
O	7103	7106	use
O	7107	7109	of
O	7110	7116	static
O	7117	7123	method
B-api_mention	7124	7132	toString
I-api_mention	7132	7133	(
I-api_mention	7133	7137	args
I-api_mention	7137	7138	)
O	7139	7141	in
O	7142	7151	Character
O	7152	7157	class
O	7157	7158	:
O	7159	7160	#
O	7160	7163	pre
O	7164	7172	Actually
O	7173	7177	this
B-api_mention	7178	7186	toString
O	7187	7193	method
O	7194	7204	internally
O	7205	7210	makes
O	7211	7214	use
O	7215	7217	of
B-api_mention	7218	7225	valueOf
O	7226	7232	method
O	7233	7237	from
B-api_mention	7238	7244	String
O	7245	7250	class
O	7251	7256	which
O	7257	7262	makes
O	7263	7266	use
O	7267	7269	of
O	7270	7274	char
O	7275	7280	array
O	7280	7281	:
O	7282	7283	#
O	7283	7286	pre
O	7287	7289	So
O	7290	7296	second
O	7297	7300	way
O	7301	7303	is
O	7304	7306	to
O	7307	7310	use
O	7311	7315	this
O	7316	7324	directly
O	7324	7325	:
B-api_mention	7326	7332	String
O	7333	7337	str2
O	7338	7339	=
B-api_mention	7340	7346	String
I-api_mention	7346	7347	.
I-api_mention	7347	7354	valueOf
I-api_mention	7354	7355	(
I-api_mention	7355	7359	args
I-api_mention	7359	7360	)
O	7360	7361	;
O	7362	7366	This
B-api_mention	7367	7374	valueOf
O	7375	7381	method
O	7382	7384	in
B-api_mention	7385	7391	String
O	7392	7397	class
O	7398	7403	makes
O	7404	7407	use
O	7408	7410	of
O	7411	7415	char
O	7416	7421	array
O	7421	7422	:
O	7423	7424	#
O	7424	7427	pre
O	7428	7430	So
O	7431	7434	the
O	7435	7440	third
O	7441	7444	way
O	7445	7447	is
O	7448	7450	to
O	7451	7455	make
O	7456	7459	use
O	7460	7462	of
O	7463	7465	an
O	7466	7475	anonymous
O	7476	7481	array
O	7482	7484	to
O	7485	7489	wrap
O	7490	7491	a
O	7492	7498	single
O	7499	7508	character
O	7509	7512	and
O	7513	7517	then
O	7518	7525	passing
O	7526	7528	it
O	7529	7531	to
B-api_mention	7532	7538	String
O	7539	7550	constructor
O	7550	7551	:
B-api_mention	7552	7558	String
O	7559	7563	str4
O	7564	7565	=
O	7566	7569	new
B-api_mention	7570	7576	String
I-api_mention	7576	7577	(
I-api_mention	7577	7581	args
I-api_mention	7581	7582	)
O	7582	7583	;
O	7584	7587	The
O	7588	7594	fourth
O	7595	7598	way
O	7599	7601	is
O	7602	7604	to
O	7605	7609	make
O	7610	7613	use
O	7614	7616	of
O	7617	7630	concatenation
O	7630	7631	:
B-api_mention	7632	7638	String
O	7639	7643	str3
O	7644	7645	=
O	7646	7659	StringLiteral
O	7660	7661	+
O	7662	7664	ch
O	7664	7665	;
O	7666	7670	This
O	7671	7675	will
O	7676	7684	actually
O	7685	7689	make
O	7690	7693	use
O	7694	7696	of
B-api_mention	7697	7703	append
O	7704	7710	method
O	7711	7715	from
B-api_mention	7716	7729	StringBuilder
O	7730	7735	class
O	7736	7741	which
O	7742	7744	is
O	7745	7753	actually
O	7754	7763	preferred
O	7764	7768	when
O	7769	7771	we
O	7772	7775	are
O	7776	7781	doing
O	7782	7795	concatenation
O	7796	7798	in
O	7799	7800	a
O	7801	7805	loop
O	7805	7806	.

O	7808	7816	Question
O	7816	7817	-
O	7817	7824	6802483
O	7824	7825	,
O	7826	7832	answer
O	7832	7833	-
O	7833	7840	6802523

O	7841	7846	There
O	7847	7849	is
O	7850	7852	no
O	7853	7859	direct
O	7860	7863	way
O	7864	7866	to
O	7867	7869	do
O	7870	7874	this
O	7875	7876	-
O	7877	7881	Java
O	7882	7885	has
O	7886	7888	no
B-api_mention	7889	7892	Map
O	7893	7901	literals
O	7902	7903	(
O	7903	7906	yet
O	7907	7908	-
O	7909	7910	I
O	7911	7916	think
O	7917	7921	they
O	7922	7926	were
O	7927	7935	proposed
O	7936	7939	for
O	7940	7944	Java
O	7945	7946	8
O	7946	7947	)
O	7947	7948	.

O	7949	7953	Some
O	7954	7960	people
O	7961	7965	like
O	7966	7970	this
O	7970	7971	:
O	7972	7973	#
O	7973	7976	pre
O	7977	7981	This
O	7982	7989	creates
O	7990	7992	an
O	7993	8002	anonymous
O	8003	8011	subclass
O	8012	8014	of
B-api_mention	8015	8022	HashMap
O	8022	8023	,
O	8024	8029	whose
O	8030	8038	instance
O	8039	8050	initializer
O	8051	8055	puts
O	8056	8061	these
O	8062	8068	values
O	8068	8069	.

O	8070	8071	(
O	8071	8073	By
O	8074	8077	the
O	8078	8081	way
O	8081	8082	,
O	8083	8084	a
O	8085	8088	map
O	8089	8092	can
O	8092	8093	'
O	8093	8094	t
O	8095	8102	contain
O	8103	8108	twice
O	8109	8112	the
O	8113	8117	same
O	8118	8123	value
O	8123	8124	,
O	8125	8129	your
O	8130	8136	second
O	8137	8140	put
O	8141	8145	will
O	8146	8155	overwrite
O	8156	8159	the
O	8160	8165	first
O	8166	8169	one
O	8169	8170	.
O	8171	8172	I
O	8172	8173	'
O	8173	8175	ll
O	8176	8179	use
O	8180	8189	different
O	8190	8196	values
O	8197	8200	for
O	8201	8204	the
O	8205	8209	next
O	8210	8218	examples
O	8218	8219	.
O	8219	8220	)
O	8221	8224	The
O	8225	8231	normal
O	8232	8235	way
O	8236	8241	would
O	8242	8244	be
O	8245	8249	this
O	8250	8251	(
O	8251	8254	for
O	8255	8256	a
O	8257	8262	local
O	8263	8271	variable
O	8271	8272	)
O	8272	8273	:
O	8274	8275	#
O	8275	8278	pre
O	8279	8281	If
O	8282	8286	your
O	8287	8291	test
O	8292	8295	map
O	8296	8298	is
O	8299	8301	an
O	8302	8310	instance
O	8311	8319	variable
O	8319	8320	,
O	8321	8324	put
O	8325	8328	the
O	8329	8343	initialization
O	8344	8346	in
O	8347	8348	a
O	8349	8360	constructor
O	8361	8363	or
O	8364	8372	instance
O	8373	8384	initializer
O	8384	8385	:
O	8386	8387	#
O	8387	8390	pre
O	8391	8393	If
O	8394	8398	your
O	8399	8403	test
O	8404	8407	map
O	8408	8410	is
O	8411	8412	a
O	8413	8418	class
O	8419	8427	variable
O	8427	8428	,
O	8429	8432	put
O	8433	8436	the
O	8437	8451	initialization
O	8452	8454	in
O	8455	8456	a
O	8457	8463	static
O	8464	8475	initializer
O	8475	8476	:
O	8477	8478	#
O	8478	8481	pre
O	8482	8484	If
O	8485	8488	you
O	8489	8493	want
O	8494	8498	your
O	8499	8502	map
O	8503	8505	to
O	8506	8511	never
O	8512	8518	change
O	8518	8519	,
O	8520	8523	you
O	8524	8530	should
O	8531	8536	after
O	8537	8540	the
O	8541	8555	initialization
O	8556	8560	wrap
O	8561	8565	your
O	8566	8569	map
O	8570	8572	by
B-api_mention	8573	8584	Collections
I-api_mention	8584	8585	.
I-api_mention	8585	8600	unmodifiableMap
I-api_mention	8600	8601	(
I-api_mention	8601	8605	args
I-api_mention	8605	8606	)
O	8607	8608	.

O	8609	8612	You
O	8613	8616	can
O	8617	8619	do
O	8620	8624	this
O	8625	8627	in
O	8628	8629	a
O	8630	8636	static
O	8637	8648	initializer
O	8649	8652	too
O	8652	8653	:
O	8654	8655	#
O	8655	8658	pre
O	8659	8660	(
O	8660	8661	I
O	8661	8662	'
O	8662	8663	m
O	8664	8667	not
O	8668	8672	sure
O	8673	8675	if
O	8676	8679	you
O	8680	8683	can
O	8684	8687	now
O	8688	8692	make
O	8693	8697	test
O	8698	8703	final
O	8704	8705	.
O	8705	8706	.
O	8706	8707	.
O	8708	8711	try
O	8712	8714	it
O	8715	8718	out
O	8719	8722	and
O	8723	8729	report
O	8730	8734	here
O	8734	8735	.
O	8735	8736	)

O	8738	8746	Question
O	8746	8747	-
O	8747	8754	7488643
O	8754	8755	,
O	8756	8762	answer
O	8762	8763	-
O	8763	8770	7488669

O	8771	8774	Two
O	8775	8780	steps
O	8780	8781	:
O	8782	8783	#
O	8783	8785	li
B-api_mention	8786	8792	String
O	8793	8794	[
O	8794	8795	]
O	8796	8801	items
O	8802	8803	=
O	8804	8818	commaSeparated
B-api_mention	8818	8819	.
I-api_mention	8819	8824	split
I-api_mention	8824	8825	(
I-api_mention	8825	8829	args
I-api_mention	8829	8830	)
O	8830	8831	;
O	8832	8833	#
O	8833	8835	li
B-api_mention	8836	8840	List
I-api_mention	8840	8841	<
I-api_mention	8841	8842	T
I-api_mention	8842	8843	>
O	8844	8853	container
O	8854	8855	=
B-api_mention	8856	8862	Arrays
I-api_mention	8862	8863	.
I-api_mention	8863	8869	asList
I-api_mention	8869	8870	(
I-api_mention	8870	8874	args
I-api_mention	8874	8875	)
O	8875	8876	;

O	8878	8886	Question
O	8886	8887	-
O	8887	8894	7488643
O	8894	8895	,
O	8896	8902	answer
O	8902	8903	-
O	8903	8910	7488683

O	8911	8914	You
O	8915	8918	can
O	8919	8924	first
O	8925	8930	split
O	8931	8935	them
O	8936	8941	using
B-api_mention	8942	8948	String
I-api_mention	8948	8949	.
I-api_mention	8949	8954	split
I-api_mention	8954	8955	(
I-api_mention	8955	8959	args
I-api_mention	8959	8960	)
O	8961	8962	,
O	8963	8966	and
O	8967	8971	then
O	8972	8979	convert
O	8980	8983	the
O	8984	8992	returned
B-api_mention	8993	8999	String
O	9000	9005	array
O	9006	9008	to
O	9009	9011	an
B-api_mention	9012	9021	ArrayList
O	9022	9027	using
B-api_mention	9028	9034	Arrays
I-api_mention	9034	9035	.
I-api_mention	9035	9041	asList
I-api_mention	9041	9042	(
I-api_mention	9042	9046	args
I-api_mention	9046	9047	)

O	9049	9057	Question
O	9057	9058	-
O	9058	9065	7488643
O	9065	9066	,
O	9067	9073	answer
O	9073	9074	-
O	9074	9081	7488710

B-api_mention	9082	9088	Arrays
I-api_mention	9088	9089	.
I-api_mention	9089	9095	asList
O	9096	9103	returns
O	9104	9105	a
O	9106	9111	fixed
O	9111	9112	-
O	9112	9116	size
O	9117	9121	List
O	9122	9128	backed
O	9129	9131	by
O	9132	9135	the
O	9136	9141	array
O	9141	9142	.

O	9143	9145	If
O	9146	9149	you
O	9150	9154	want
O	9155	9156	a
O	9157	9163	normal
O	9164	9171	mutable
B-api_mention	9172	9176	java
I-api_mention	9176	9177	.
I-api_mention	9177	9181	util
I-api_mention	9181	9182	.
I-api_mention	9182	9191	ArrayList
O	9192	9195	you
O	9196	9200	need
O	9201	9203	to
O	9204	9206	do
O	9207	9211	this
O	9211	9212	:
B-api_mention	9213	9217	List
I-api_mention	9217	9218	<
I-api_mention	9218	9219	T
I-api_mention	9219	9220	>
O	9221	9225	list
O	9226	9227	=
O	9228	9231	new
B-api_mention	9232	9241	ArrayList
I-api_mention	9241	9242	<
I-api_mention	9242	9243	T
I-api_mention	9243	9244	>
I-api_mention	9244	9245	(
I-api_mention	9245	9249	args
I-api_mention	9249	9250	)
O	9250	9251	;
O	9252	9254	Or
O	9254	9255	,
O	9256	9261	using
O	9262	9267	Guava
O	9268	9269	:
B-api_mention	9270	9274	List
I-api_mention	9274	9275	<
I-api_mention	9275	9276	T
I-api_mention	9276	9277	>
O	9278	9282	list
O	9283	9284	=
B-api_mention	9285	9290	Lists
I-api_mention	9290	9291	.
I-api_mention	9291	9303	newArrayList
I-api_mention	9303	9304	(
I-api_mention	9304	9308	args
I-api_mention	9308	9309	)
O	9309	9310	;
O	9311	9316	Using
O	9317	9318	a
B-api_mention	9319	9327	Splitter
O	9328	9333	gives
O	9334	9337	you
O	9338	9342	more
O	9343	9354	flexibility
O	9355	9357	in
O	9358	9361	how
O	9362	9365	you
O	9366	9371	split
O	9372	9375	the
O	9376	9382	string
O	9383	9386	and
O	9387	9392	gives
O	9393	9396	you
O	9397	9400	the
O	9401	9408	ability
O	9409	9411	to
O	9411	9412	,
O	9413	9416	for
O	9417	9424	example
O	9424	9425	,
O	9426	9430	skip
O	9431	9436	empty
O	9437	9444	strings
O	9445	9447	in
O	9448	9451	the
O	9452	9459	results
O	9460	9463	and
O	9464	9468	trim
O	9469	9476	results
O	9476	9477	.

O	9478	9480	It
O	9481	9485	also
O	9486	9489	has
O	9490	9494	less
O	9495	9500	weird
O	9501	9509	behavior
O	9510	9514	than
B-api_mention	9515	9521	String
I-api_mention	9521	9522	.
I-api_mention	9522	9527	split
O	9528	9530	as
O	9531	9535	well
O	9536	9538	as
O	9539	9542	not
O	9543	9552	requiring
O	9553	9556	you
O	9557	9559	to
O	9560	9565	split
O	9566	9568	by
O	9569	9574	regex
O	9575	9576	(
O	9576	9580	that
O	9580	9581	'
O	9581	9582	s
O	9583	9587	just
O	9588	9591	one
O	9592	9598	option
O	9598	9599	)
O	9599	9600	.

O	9602	9610	Question
O	9610	9611	-
O	9611	9618	7693324
O	9618	9619	,
O	9620	9626	answer
O	9626	9627	-
O	9627	9634	7693341

O	9635	9637	To
O	9638	9645	convert
O	9646	9647	a
B-api_mention	9648	9654	String
O	9655	9657	to
O	9658	9659	a
B-api_mention	9660	9664	Long
O	9665	9666	(
O	9666	9672	object
O	9672	9673	)
O	9673	9674	,
O	9675	9678	use
B-api_mention	9679	9683	Long
I-api_mention	9683	9684	.
I-api_mention	9684	9691	valueOf
I-api_mention	9691	9692	(
I-api_mention	9692	9696	args
I-api_mention	9696	9697	)
I-api_mention	9697	9698	.
I-api_mention	9698	9707	longValue
I-api_mention	9707	9708	(
I-api_mention	9708	9712	args
I-api_mention	9712	9713	)
O	9713	9714	;
O	9715	9718	See
O	9719	9723	link

O	9725	9733	Question
O	9733	9734	-
O	9734	9741	7520432
O	9741	9742	,
O	9743	9749	answer
O	9749	9750	-
O	9750	9757	7520464

O	9758	9760	In
O	9761	9768	general
O	9768	9769	,
O	9770	9773	the
O	9774	9780	answer
O	9781	9783	to
O	9784	9788	your
O	9789	9797	question
O	9798	9800	is
O	9801	9802	"
O	9802	9805	yes
O	9805	9806	"
O	9806	9807	,
O	9808	9811	but
O	9811	9812	.
O	9812	9813	.
O	9813	9814	.

O	9815	9816	#
O	9816	9818	li
B-api_mention	9819	9825	equals
O	9826	9830	will
O	9831	9835	only
O	9836	9843	compare
O	9844	9848	what
O	9849	9851	it
O	9852	9854	is
O	9855	9862	written
O	9863	9865	to
O	9866	9873	compare
O	9873	9874	,
O	9875	9877	no
O	9878	9882	more
O	9882	9883	,
O	9884	9886	no
O	9887	9891	less
O	9891	9892	.

O	9893	9894	#
O	9894	9896	li
O	9897	9899	if
O	9900	9901	a
O	9902	9907	class
O	9908	9912	does
O	9913	9916	not
O	9917	9925	override
O	9926	9929	the
O	9930	9936	equals
O	9937	9943	method
O	9943	9944	,
O	9945	9949	then
O	9950	9952	it
O	9953	9961	defaults
O	9962	9964	to
O	9965	9968	the
B-api_mention	9969	9975	equals
I-api_mention	9975	9976	(
I-api_mention	9976	9980	args
I-api_mention	9980	9981	)
O	9982	9988	method
O	9989	9991	of
O	9992	9995	the
O	9996	10003	closest
O	10004	10010	parent
O	10011	10016	class
O	10017	10021	that
O	10022	10025	has
O	10026	10036	overridden
O	10037	10041	this
O	10042	10048	method
O	10048	10049	.

O	10050	10051	#
O	10051	10053	li
O	10054	10056	If
O	10057	10059	no
O	10060	10066	parent
O	10067	10074	classes
O	10075	10079	have
O	10080	10088	provided
O	10089	10091	an
O	10092	10100	override
O	10100	10101	,
O	10102	10106	then
O	10107	10109	it
O	10110	10118	defaults
O	10119	10121	to
O	10122	10125	the
O	10126	10132	method
O	10133	10137	from
O	10138	10141	the
O	10142	10150	ultimate
O	10151	10157	parent
O	10158	10163	class
O	10163	10164	,
B-api_mention	10165	10171	Object
O	10171	10172	,
O	10173	10176	and
O	10177	10179	so
O	10180	10183	you
O	10183	10184	'
O	10184	10186	re
O	10187	10191	left
O	10192	10196	with
O	10197	10200	the
B-api_mention	10201	10207	Object
I-api_mention	10207	10208	#
I-api_mention	10208	10214	equals
I-api_mention	10214	10215	(
I-api_mention	10215	10219	args
I-api_mention	10219	10220	)
O	10221	10227	method
O	10227	10228	.

O	10229	10232	Per
O	10233	10236	the
O	10237	10243	Object
O	10244	10247	API
O	10248	10252	this
O	10253	10255	is
O	10256	10259	the
O	10260	10264	same
O	10265	10267	as
O	10268	10269	=
O	10269	10270	=
O	10271	10272	;
O	10273	10277	that
O	10278	10280	is
O	10280	10281	,
O	10282	10284	it
O	10285	10292	returns
O	10293	10297	true
O	10298	10300	if
O	10301	10304	and
O	10305	10309	only
O	10310	10312	if
O	10313	10317	both
O	10318	10327	variables
O	10328	10333	refer
O	10334	10336	to
O	10337	10340	the
O	10341	10345	same
O	10346	10352	object
O	10352	10353	,
O	10354	10356	if
O	10357	10362	their
O	10363	10373	references
O	10374	10377	are
O	10378	10381	one
O	10382	10385	and
O	10386	10389	the
O	10390	10394	same
O	10394	10395	.

O	10396	10400	Thus
O	10401	10404	you
O	10405	10409	will
O	10410	10412	be
O	10413	10420	testing
O	10421	10424	for
O	10425	10431	object
O	10432	10440	equality
O	10441	10444	and
O	10445	10448	not
O	10449	10459	functional
O	10460	10468	equality
O	10469	10470	.

O	10471	10472	#
O	10472	10474	li
O	10475	10481	Always
O	10482	10490	remember
O	10491	10493	to
O	10494	10502	override
B-api_mention	10503	10511	hashCode
O	10512	10514	if
O	10515	10518	you
O	10519	10527	override
O	10528	10534	equals
O	10535	10537	so
O	10538	10540	as
O	10541	10544	not
O	10545	10547	to
O	10548	10549	"
O	10549	10554	break
O	10555	10558	the
O	10559	10567	contract
O	10567	10568	"
O	10568	10569	.

O	10570	10572	As
O	10573	10576	per
O	10577	10580	the
O	10581	10584	API
O	10584	10585	,
O	10586	10589	the
O	10590	10596	result
O	10597	10605	returned
O	10606	10610	from
O	10611	10614	the
B-api_mention	10615	10623	hashCode
I-api_mention	10623	10624	(
I-api_mention	10624	10628	args
I-api_mention	10628	10629	)
O	10630	10636	method
O	10637	10640	for
O	10641	10644	two
O	10645	10652	objects
O	10653	10657	must
O	10658	10660	be
O	10661	10664	the
O	10665	10669	same
O	10670	10672	if
O	10673	10678	their
O	10679	10685	equals
O	10686	10693	methods
O	10694	10699	shows
O	10700	10704	that
O	10705	10709	they
O	10710	10713	are
O	10714	10724	equivalent
O	10724	10725	.

O	10726	10729	The
O	10730	10738	converse
O	10739	10741	is
O	10742	10745	not
O	10746	10757	necessarily
O	10758	10762	true
O	10762	10763	.

O	10765	10773	Question
O	10773	10774	-
O	10774	10781	7520432
O	10781	10782	,
O	10783	10789	answer
O	10789	10790	-
O	10790	10797	7521675

O	10798	10802	Just
O	10803	10811	remember
O	10812	10816	that
B-api_mention	10817	10818	.
I-api_mention	10818	10824	equals
I-api_mention	10824	10825	(
I-api_mention	10825	10829	args
I-api_mention	10829	10830	)
O	10831	10834	has
O	10835	10837	to
O	10838	10840	be
O	10841	10852	implemented
O	10853	10855	by
O	10856	10859	the
O	10860	10865	class
O	10866	10869	you
O	10870	10873	are
O	10874	10880	trying
O	10881	10883	to
O	10884	10891	compare
O	10891	10892	.

O	10893	10902	Otherwise
O	10902	10903	,
O	10904	10909	there
O	10910	10913	isn
O	10913	10914	'
O	10914	10915	t
O	10916	10920	much
O	10921	10923	of
O	10924	10925	a
O	10926	10931	point
O	10931	10932	;
O	10933	10936	the
O	10937	10944	version
O	10945	10947	of
O	10948	10951	the
O	10952	10958	method
O	10959	10962	for
O	10963	10966	the
B-api_mention	10967	10973	Object
O	10974	10979	class
O	10980	10984	does
O	10985	10988	the
O	10989	10993	same
O	10994	10999	thing
O	11000	11002	as
O	11003	11006	the
O	11007	11017	comparison
O	11018	11027	operation
O	11027	11028	:
B-api_mention	11029	11035	Object
I-api_mention	11035	11036	#
I-api_mention	11036	11042	equals
O	11043	11044	.

O	11045	11048	The
O	11049	11053	only
O	11054	11058	time
O	11059	11062	you
O	11063	11069	really
O	11070	11074	want
O	11075	11077	to
O	11078	11081	use
O	11082	11085	the
O	11086	11096	comparison
O	11097	11105	operator
O	11106	11109	for
O	11110	11117	objects
O	11118	11120	is
O	11121	11124	wen
O	11125	11128	you
O	11129	11132	are
O	11133	11142	comparing
O	11143	11148	Enums
O	11148	11149	.

O	11150	11154	This
O	11155	11157	is
O	11158	11165	because
O	11166	11171	there
O	11172	11174	is
O	11175	11179	only
O	11180	11183	one
O	11184	11192	instance
O	11193	11195	of
O	11196	11198	an
O	11199	11203	Enum
O	11204	11209	value
O	11210	11212	at
O	11213	11214	a
O	11215	11219	time
O	11219	11220	.

O	11221	11224	For
O	11225	11233	instance
O	11233	11234	,
O	11235	11240	given
O	11241	11244	the
O	11245	11249	enum
O	11250	11254	enum
O	11255	11262	FooEnum
O	11263	11264	{
O	11264	11265	A
O	11265	11266	,
O	11267	11268	B
O	11268	11269	,
O	11270	11271	C
O	11271	11272	}
O	11273	11276	You
O	11277	11281	will
O	11282	11287	never
O	11288	11292	have
O	11293	11297	more
O	11298	11302	than
O	11303	11306	one
O	11307	11315	instance
O	11316	11318	of
O	11319	11320	A
O	11321	11323	at
O	11324	11325	a
O	11326	11330	time
O	11330	11331	,
O	11332	11335	and
O	11336	11339	the
O	11340	11344	same
O	11345	11348	for
O	11349	11350	B
O	11351	11354	and
O	11355	11356	C
O	11357	11358	.

O	11359	11363	This
O	11364	11369	means
O	11370	11374	that
O	11375	11378	you
O	11379	11382	can
O	11383	11391	actually
O	11392	11397	write
O	11398	11399	a
O	11400	11406	method
O	11407	11411	like
O	11412	11414	so
O	11414	11415	:
O	11416	11417	#
O	11417	11420	pre
O	11421	11424	And
O	11425	11428	you
O	11429	11433	will
O	11434	11438	have
O	11439	11441	no
O	11442	11450	problems
O	11451	11461	whatsoever
O	11461	11462	.

O	11464	11472	Question
O	11472	11473	-
O	11473	11480	7520432
O	11480	11481	,
O	11482	11488	answer
O	11488	11489	-
O	11489	11497	27478241

O	11498	11499	=
O	11499	11500	=
O	11501	11504	can
O	11505	11507	be
O	11508	11512	used
O	11513	11515	in
O	11516	11520	many
O	11521	11527	object
O	11528	11533	types
O	11534	11537	but
O	11538	11541	you
O	11542	11545	can
O	11546	11549	use
B-api_mention	11550	11556	Object
I-api_mention	11556	11557	.
I-api_mention	11557	11563	equals
O	11564	11567	for
O	11568	11571	any
O	11572	11576	type
O	11577	11578	,
O	11579	11589	especially
O	11590	11597	Strings
O	11598	11601	and
O	11602	11608	Google
O	11609	11612	Map
O	11613	11620	Markers
O	11620	11621	.

O	11623	11631	Question
O	11631	11632	-
O	11632	11639	7520432
O	11639	11640	,
O	11641	11647	answer
O	11647	11648	-
O	11648	11656	29226136

O	11657	11661	Also
O	11662	11666	note
O	11667	11671	that
B-api_mention	11672	11673	.
I-api_mention	11673	11679	equals
I-api_mention	11679	11680	(
I-api_mention	11680	11684	args
I-api_mention	11684	11685	)
O	11686	11694	normally
O	11695	11703	contains
O	11704	11705	=
O	11705	11706	=
O	11707	11710	for
O	11711	11718	testing
O	11719	11721	as
O	11722	11726	this
O	11727	11729	is
O	11730	11733	the
O	11734	11739	first
O	11740	11745	thing
O	11746	11749	you
O	11750	11755	would
O	11756	11760	wish
O	11761	11763	to
O	11764	11768	test
O	11769	11772	for
O	11773	11775	if
O	11776	11779	you
O	11780	11786	wanted
O	11787	11789	to
O	11790	11794	test
O	11795	11797	if
O	11798	11801	two
O	11802	11809	objects
O	11810	11813	are
O	11814	11819	equal
O	11819	11820	.

O	11821	11824	And
O	11825	11826	=
O	11826	11827	=
O	11828	11836	actually
O	11837	11841	does
O	11842	11846	look
O	11847	11849	at
O	11850	11856	values
O	11857	11860	for
O	11861	11870	primitive
O	11871	11876	types
O	11876	11877	,
O	11878	11881	for
O	11882	11889	objects
O	11890	11892	it
O	11893	11899	checks
O	11900	11903	the
O	11904	11913	reference
O	11913	11914	.

O	11916	11924	Question
O	11924	11925	-
O	11925	11932	7520432
O	11932	11933	,
O	11934	11940	answer
O	11940	11941	-
O	11941	11949	35399386

O	11950	11953	The
B-api_mention	11954	11960	String
O	11961	11965	pool
O	11966	11967	(
O	11967	11970	aka
O	11971	11980	interning
O	11981	11982	)
O	11983	11986	and
B-api_mention	11987	11994	Integer
O	11995	11999	pool
O	12000	12004	blur
O	12005	12008	the
O	12009	12019	difference
O	12020	12027	further
O	12027	12028	,
O	12029	12032	and
O	12033	12036	may
O	12037	12042	allow
O	12043	12046	you
O	12047	12049	to
O	12050	12053	use
O	12054	12055	=
O	12055	12056	=
O	12057	12060	for
O	12061	12068	objects
O	12069	12071	in
O	12072	12076	some
O	12077	12082	cases
O	12083	12090	instead
O	12091	12093	of
B-api_mention	12094	12095	.
I-api_mention	12095	12101	equals
O	12102	12106	This
O	12107	12110	can
O	12111	12115	give
O	12116	12119	you
O	12120	12127	greater
O	12128	12139	performance
O	12140	12141	(
O	12141	12142	?
O	12142	12143	)
O	12143	12144	,
O	12145	12147	at
O	12148	12151	the
O	12152	12156	cost
O	12157	12159	of
O	12160	12167	greater
O	12168	12178	complexity
O	12178	12179	.

O	12180	12181	E
O	12181	12182	.
O	12182	12183	g
O	12183	12184	.
O	12184	12185	:
O	12186	12187	#
O	12187	12190	pre
O	12191	12201	Complexity
O	12202	12210	tradeoff
O	12210	12211	:
O	12212	12215	the
O	12216	12225	following
O	12226	12229	may
O	12230	12238	surprise
O	12239	12242	you
O	12242	12243	:
O	12244	12245	#
O	12245	12248	pre
O	12249	12250	I
O	12251	12257	advise
O	12258	12261	you
O	12262	12264	to
O	12265	12269	stay
O	12270	12274	away
O	12275	12279	from
O	12280	12284	such
O	12285	12290	micro
O	12290	12291	-
O	12291	12303	optimization
O	12303	12304	,
O	12305	12308	and
O	12309	12315	always
O	12316	12319	use
O	12320	12321	.
O	12321	12327	equals
O	12328	12331	for
O	12332	12339	objects
O	12339	12340	,
O	12341	12344	and
O	12345	12346	=
O	12346	12347	=
O	12348	12351	for
O	12352	12362	primitives
O	12362	12363	:
O	12364	12365	#
O	12365	12368	pre

O	12370	12378	Question
O	12378	12379	-
O	12379	12386	7520432
O	12386	12387	,
O	12388	12394	answer
O	12394	12395	-
O	12395	12403	36875991

O	12404	12413	Basically
O	12413	12414	,
O	12415	12416	=
O	12416	12417	=
O	12418	12426	compares
O	12427	12429	if
O	12430	12433	two
O	12434	12441	objects
O	12442	12446	have
O	12447	12450	the
O	12451	12455	same
O	12456	12465	reference
O	12466	12468	on
O	12469	12472	the
O	12473	12477	heap
O	12477	12478	,
O	12479	12481	so
O	12482	12488	unless
O	12489	12492	two
O	12493	12503	references
O	12504	12507	are
O	12508	12514	linked
O	12515	12517	to
O	12518	12521	the
O	12522	12526	same
O	12527	12533	object
O	12533	12534	,
O	12535	12539	this
O	12540	12550	comparison
O	12551	12555	will
O	12556	12558	be
O	12559	12564	false
O	12564	12565	.

B-api_mention	12566	12572	equals
I-api_mention	12572	12573	(
I-api_mention	12573	12577	args
I-api_mention	12577	12578	)
O	12579	12581	is
O	12582	12583	a
O	12584	12590	method
O	12591	12600	inherited
O	12601	12605	from
B-api_mention	12606	12612	Object
O	12613	12618	class
O	12618	12619	.

O	12620	12624	This
O	12625	12631	method
O	12632	12634	by
O	12635	12642	default
O	12643	12651	compares
O	12652	12654	if
O	12655	12658	two
O	12659	12666	objects
O	12667	12671	have
O	12672	12675	the
O	12676	12680	same
O	12681	12689	referece
O	12689	12690	.

O	12691	12693	It
O	12694	12699	means
O	12699	12700	:
O	12701	12708	object1
B-api_mention	12708	12709	.
I-api_mention	12709	12715	equals
I-api_mention	12715	12716	(
I-api_mention	12716	12720	args
I-api_mention	12720	12721	)
O	12722	12723	<
O	12723	12724	=
O	12724	12725	>
O	12726	12733	object1
O	12734	12735	=
O	12735	12736	=
O	12737	12744	object2
O	12745	12752	However
O	12752	12753	,
O	12754	12756	if
O	12757	12760	you
O	12761	12765	want
O	12766	12768	to
O	12769	12778	establish
O	12779	12787	equality
O	12788	12795	between
O	12796	12799	two
O	12800	12807	objects
O	12808	12810	of
O	12811	12814	the
O	12815	12819	same
O	12820	12825	class
O	12826	12829	you
O	12830	12836	should
O	12837	12845	override
O	12846	12850	this
O	12851	12857	method
O	12857	12858	.

O	12859	12861	It
O	12862	12864	is
O	12865	12869	also
O	12870	12874	very
O	12875	12884	important
O	12885	12887	to
O	12888	12896	override
O	12897	12900	the
O	12901	12907	method
B-api_mention	12908	12916	hashCode
I-api_mention	12916	12917	(
I-api_mention	12917	12921	args
I-api_mention	12921	12922	)
O	12923	12925	if
O	12926	12929	you
O	12930	12934	have
O	12935	12944	overriden
B-api_mention	12945	12951	equals
I-api_mention	12951	12952	(
I-api_mention	12952	12956	args
I-api_mention	12956	12957	)
O	12958	12959	.

O	12960	12969	Implement
B-api_mention	12970	12978	hashCode
I-api_mention	12978	12979	(
I-api_mention	12979	12983	args
I-api_mention	12983	12984	)
O	12985	12989	when
O	12990	13002	establishing
O	13003	13011	equality
O	13012	13014	is
O	13015	13019	part
O	13020	13022	of
O	13023	13026	the
O	13027	13031	Java
B-api_mention	13032	13038	Object
O	13039	13047	Contract
O	13047	13048	.

O	13049	13051	If
O	13052	13055	you
O	13056	13059	are
O	13060	13067	working
O	13068	13072	with
O	13073	13084	collections
O	13084	13085	,
O	13086	13089	and
O	13090	13093	you
O	13094	13099	haven
O	13099	13100	'
O	13100	13101	t
O	13102	13113	implemented
B-api_mention	13114	13122	hashCode
I-api_mention	13122	13123	(
I-api_mention	13123	13127	args
I-api_mention	13127	13128	)
O	13129	13130	,
O	13131	13138	Strange
O	13139	13142	Bad
O	13143	13149	Things
O	13150	13155	could
O	13156	13162	happen
O	13162	13163	:
O	13164	13165	#
O	13165	13168	pre
O	13169	13173	null
O	13174	13178	will
O	13179	13181	be
O	13182	13189	printed
O	13190	13195	after
O	13196	13205	executing
O	13206	13209	the
O	13210	13218	previous
O	13219	13223	code
O	13224	13226	if
O	13227	13230	you
O	13231	13236	haven
O	13236	13237	'
O	13237	13238	t
O	13239	13250	implemented
B-api_mention	13251	13259	hashCode
I-api_mention	13259	13260	(
I-api_mention	13260	13264	args
I-api_mention	13264	13265	)
O	13266	13267	.

O	13269	13277	Question
O	13277	13278	-
O	13278	13285	6992608
O	13285	13286	,
O	13287	13293	answer
O	13293	13294	-
O	13294	13301	6992643

O	13302	13307	There
O	13307	13308	'
O	13308	13309	s
O	13310	13312	no
O	13313	13318	built
O	13319	13321	in
O	13322	13326	type
O	13327	13330	for
B-api_mention	13331	13348	ConcurrentHashSet
O	13349	13356	because
O	13357	13360	you
O	13361	13364	can
O	13365	13371	always
O	13372	13378	derive
O	13379	13380	a
O	13381	13384	set
O	13385	13389	from
O	13390	13391	a
O	13392	13395	map
O	13395	13396	.

O	13397	13402	Since
O	13403	13408	there
O	13409	13412	are
O	13413	13417	many
O	13418	13423	types
O	13424	13426	of
O	13427	13431	maps
O	13431	13432	,
O	13433	13436	you
O	13437	13440	use
O	13441	13442	a
O	13443	13449	method
O	13450	13452	to
O	13453	13460	produce
O	13461	13462	a
O	13463	13466	set
O	13467	13471	from
O	13472	13473	a
O	13474	13479	given
O	13480	13483	map
O	13484	13485	(
O	13485	13487	or
O	13488	13491	map
O	13492	13497	class
O	13497	13498	)
O	13498	13499	.

O	13500	13505	Prior
O	13506	13508	to
O	13509	13513	Java
O	13514	13515	8
O	13515	13516	,
O	13517	13520	you
O	13521	13528	produce
O	13529	13530	a
O	13531	13541	concurrent
O	13542	13546	hash
O	13547	13550	set
O	13551	13557	backed
O	13558	13560	by
O	13561	13562	a
O	13563	13573	concurrent
O	13574	13578	hash
O	13579	13582	map
O	13582	13583	,
O	13584	13586	by
O	13587	13592	using
B-api_mention	13593	13604	Collections
I-api_mention	13604	13605	.
I-api_mention	13605	13618	newSetFromMap
I-api_mention	13618	13619	(
I-api_mention	13619	13622	map
I-api_mention	13622	13623	)
O	13624	13626	In
O	13627	13631	Java
O	13632	13633	8
O	13634	13635	(
O	13635	13642	pointed
O	13643	13646	out
O	13647	13649	by
O	13650	13651	@
O	13651	13655	Matt
O	13655	13656	)
O	13656	13657	,
O	13658	13661	you
O	13662	13665	can
O	13666	13669	get
O	13670	13671	a
O	13672	13682	concurrent
O	13683	13687	hash
O	13688	13691	set
O	13692	13696	view
O	13697	13700	via
B-api_mention	13701	13718	ConcurrentHashMap
I-api_mention	13718	13719	.
I-api_mention	13719	13728	newKeySet
I-api_mention	13728	13729	(
I-api_mention	13729	13730	)
O	13731	13732	.

O	13733	13737	This
O	13738	13740	is
O	13741	13742	a
O	13743	13746	bit
O	13747	13754	simpler
O	13755	13759	than
O	13760	13763	the
O	13764	13767	old
B-api_mention	13768	13781	newSetFromMap
O	13782	13787	which
O	13788	13796	required
O	13797	13800	you
O	13801	13803	to
O	13804	13808	pass
O	13809	13811	in
O	13812	13814	an
O	13815	13820	empty
O	13821	13824	map
O	13825	13831	object
O	13831	13832	.

O	13833	13836	But
O	13837	13839	it
O	13840	13842	is
O	13843	13851	specific
O	13852	13854	to
B-api_mention	13855	13872	ConcurrentHashMap
O	13873	13874	.

O	13875	13881	Anyway
O	13881	13882	,
O	13883	13886	the
O	13887	13891	Java
O	13892	13901	designers
O	13902	13907	could
O	13908	13912	have
O	13913	13920	created
O	13921	13922	a
O	13923	13926	new
O	13927	13930	set
O	13931	13940	interface
O	13941	13946	every
O	13947	13951	time
O	13952	13953	a
O	13954	13957	new
O	13958	13961	map
O	13962	13971	interface
O	13972	13975	was
O	13976	13983	created
O	13983	13984	,
O	13985	13988	but
O	13989	13993	that
O	13994	14001	pattern
O	14002	14007	would
O	14008	14010	be
O	14011	14021	impossible
O	14022	14024	to
O	14025	14032	enforce
O	14033	14037	when
O	14038	14043	third
O	14044	14051	parties
O	14052	14058	create
O	14059	14064	their
O	14065	14068	own
O	14069	14073	maps
O	14073	14074	.

O	14075	14077	It
O	14078	14080	is
O	14081	14087	better
O	14088	14090	to
O	14091	14095	have
O	14096	14099	the
O	14100	14106	static
O	14107	14114	methods
O	14115	14119	that
O	14120	14126	derive
O	14127	14130	new
O	14131	14135	sets
O	14135	14136	;
O	14137	14141	that
O	14142	14150	approach
O	14151	14157	always
O	14158	14163	works
O	14163	14164	,
O	14165	14169	even
O	14170	14174	when
O	14175	14178	you
O	14179	14185	create
O	14186	14190	your
O	14191	14194	own
O	14195	14198	map
O	14199	14214	implementations
O	14214	14215	.

O	14217	14225	Question
O	14225	14226	-
O	14226	14233	6992608
O	14233	14234	,
O	14235	14241	answer
O	14241	14242	-
O	14242	14250	26764904

O	14251	14253	As
O	14254	14261	pointed
O	14262	14264	by
O	14265	14269	this
O	14270	14273	the
O	14274	14278	best
O	14279	14282	way
O	14283	14285	to
O	14286	14292	obtain
O	14293	14294	a
O	14295	14306	concurrency
O	14306	14307	-
O	14307	14311	able
B-api_mention	14312	14319	HashSet
O	14320	14322	is
O	14323	14325	by
O	14326	14331	means
O	14332	14334	of
B-api_mention	14335	14346	Collections
I-api_mention	14346	14347	.
I-api_mention	14347	14362	synchronizedSet
I-api_mention	14362	14363	(
I-api_mention	14363	14367	args
I-api_mention	14367	14368	)
O	14369	14372	Set
O	14373	14374	s
O	14375	14376	=
B-api_mention	14377	14388	Collections
I-api_mention	14388	14389	.
I-api_mention	14389	14404	synchronizedSet
I-api_mention	14404	14405	(
I-api_mention	14405	14409	args
I-api_mention	14409	14410	)
O	14410	14411	;
O	14412	14416	This
O	14417	14423	worked
O	14424	14427	for
O	14428	14430	me
O	14431	14434	and
O	14435	14436	I
O	14437	14442	haven
O	14442	14443	'
O	14443	14444	t
O	14445	14449	seen
O	14450	14457	anybody
O	14458	14464	really
O	14465	14473	pointing
O	14474	14476	to
O	14477	14479	it
O	14479	14480	.

O	14481	14485	EDIT
O	14486	14490	This
O	14491	14493	is
O	14494	14498	less
O	14499	14508	efficient
O	14509	14513	than
O	14514	14517	the
O	14518	14527	currently
O	14528	14535	aproved
O	14536	14544	solution
O	14544	14545	,
O	14546	14548	as
O	14549	14555	Eugene
O	14556	14562	points
O	14563	14566	out
O	14566	14567	,
O	14568	14573	since
O	14574	14576	it
O	14577	14581	just
O	14582	14587	wraps
O	14588	14592	your
O	14593	14596	set
O	14597	14601	into
O	14602	14603	a
O	14604	14616	synchronized
O	14617	14626	decorator
O	14626	14627	,
O	14628	14633	while
O	14634	14635	a
B-api_mention	14636	14653	ConcurrentHashMap
O	14654	14662	actually
O	14663	14673	implements
O	14674	14677	low
O	14677	14678	-
O	14678	14683	level
O	14684	14695	concurrency
O	14696	14699	and
O	14700	14702	it
O	14703	14706	can
O	14707	14711	back
O	14712	14716	your
O	14717	14720	Set
O	14721	14725	just
O	14726	14728	as
O	14729	14733	fine
O	14733	14734	.

O	14735	14737	So
O	14738	14744	thanks
O	14745	14747	to
O	14748	14750	Mr
O	14750	14751	.
O	14752	14763	Stepanenkov
O	14764	14767	for
O	14768	14774	making
O	14775	14779	that
O	14780	14785	clear
O	14785	14786	.

O	14787	14788	#
O	14788	14789	a

O	14791	14799	Question
O	14799	14800	-
O	14800	14807	7438612
O	14807	14808	,
O	14809	14815	answer
O	14815	14816	-
O	14816	14823	7438613

O	14824	14831	Replace
O	14832	14836	will
O	14837	14844	replace
O	14845	14848	all
O	14849	14858	instances
O	14859	14861	of
O	14862	14863	a
O	14864	14870	letter
O	14870	14871	.

O	14872	14875	All
O	14876	14879	you
O	14880	14884	need
O	14885	14887	to
O	14888	14890	do
O	14891	14893	is
O	14894	14897	use
B-api_mention	14898	14907	substring
I-api_mention	14907	14908	(
I-api_mention	14908	14909	)
O	14910	14911	:
O	14912	14913	#
O	14913	14916	pre

O	14918	14926	Question
O	14926	14927	-
O	14927	14934	7569335
O	14934	14935	,
O	14936	14942	answer
O	14942	14943	-
O	14943	14951	39329245

O	14952	14954	As
O	14955	14961	others
O	14962	14966	have
O	14967	14974	pointed
O	14975	14978	out
O	14979	14982	the
O	14983	14992	preferred
O	14993	14996	way
O	14997	14999	is
O	15000	15002	to
O	15003	15006	use
O	15006	15007	:
O	15008	15011	new
B-api_mention	15012	15025	StringBuilder
I-api_mention	15025	15026	(
I-api_mention	15026	15030	args
I-api_mention	15030	15031	)
I-api_mention	15031	15032	.
I-api_mention	15032	15039	reverse
I-api_mention	15039	15040	(
I-api_mention	15040	15044	args
I-api_mention	15044	15045	)
I-api_mention	15045	15046	.
I-api_mention	15046	15054	toString
I-api_mention	15054	15055	(
I-api_mention	15055	15059	args
I-api_mention	15059	15060	)
O	15061	15064	but
O	15065	15067	if
O	15068	15071	you
O	15072	15076	want
O	15077	15079	to
O	15080	15089	implement
O	15090	15094	this
O	15095	15097	by
O	15098	15105	youself
O	15105	15106	,
O	15107	15108	i
O	15108	15109	'
O	15109	15111	am
O	15112	15118	afraid
O	15119	15123	that
O	15124	15127	the
O	15128	15132	rest
O	15133	15135	of
O	15136	15145	responses
O	15146	15150	have
O	15151	15156	flaws
O	15156	15157	.

O	15158	15161	The
O	15162	15168	reason
O	15169	15171	is
O	15172	15176	that
B-api_mention	15177	15183	String
O	15184	15193	represent
O	15194	15195	a
O	15196	15200	list
O	15201	15203	of
O	15204	15211	Unicode
O	15212	15218	points
O	15218	15219	,
O	15220	15227	encoded
O	15228	15230	in
O	15231	15232	a
O	15233	15237	char
O	15237	15238	[
O	15238	15239	]
O	15240	15245	array
O	15246	15255	according
O	15256	15258	to
O	15259	15262	the
O	15263	15271	variable
O	15271	15272	-
O	15272	15278	length
O	15279	15287	encoding
O	15287	15288	:
O	15289	15292	UTF
O	15292	15293	-
O	15293	15295	16
O	15296	15297	.

O	15298	15302	This
O	15303	15308	means
O	15309	15313	some
O	15314	15318	code
O	15319	15325	points
O	15326	15329	use
O	15330	15331	a
O	15332	15338	single
O	15339	15346	element
O	15347	15349	of
O	15350	15353	the
O	15354	15359	array
O	15360	15361	(
O	15361	15364	one
O	15365	15369	code
O	15370	15374	unit
O	15374	15375	)
O	15376	15379	but
O	15380	15386	others
O	15387	15390	use
O	15391	15394	two
O	15395	15397	of
O	15398	15402	them
O	15402	15403	,
O	15404	15406	so
O	15407	15412	there
O	15413	15418	might
O	15419	15421	be
O	15422	15427	pairs
O	15428	15430	of
O	15431	15441	characters
O	15442	15446	that
O	15447	15451	must
O	15452	15454	be
O	15455	15462	treated
O	15463	15465	as
O	15466	15467	a
O	15468	15474	single
O	15475	15479	unit
O	15480	15481	(
O	15481	15492	consecutive
O	15493	15494	"
O	15494	15498	high
O	15498	15499	"
O	15500	15503	and
O	15504	15505	"
O	15505	15508	low
O	15508	15509	"
O	15510	15520	surrogates
O	15520	15521	)
O	15522	15523	#
O	15523	15526	pre

O	15528	15536	Question
O	15536	15537	-
O	15537	15544	7655127
O	15544	15545	,
O	15546	15552	answer
O	15552	15553	-
O	15553	15560	7655177

B-api_mention	15561	15567	String
O	15568	15572	text
O	15573	15574	=
B-api_mention	15575	15581	String
I-api_mention	15581	15582	.
I-api_mention	15582	15593	copyValueOf
I-api_mention	15593	15594	(
I-api_mention	15594	15598	args
I-api_mention	15598	15599	)
O	15599	15600	;
O	15601	15603	or
B-api_mention	15604	15610	String
O	15611	15615	text
O	15616	15617	=
B-api_mention	15618	15624	String
I-api_mention	15624	15625	.
I-api_mention	15625	15632	valueOf
I-api_mention	15632	15633	(
I-api_mention	15633	15637	args
I-api_mention	15637	15638	)
O	15638	15639	;
O	15640	15642	is
O	15643	15651	arguably
O	15652	15658	better
O	15659	15660	(
O	15660	15672	encapsulates
O	15673	15676	the
O	15677	15680	new
B-api_mention	15681	15687	String
O	15688	15692	call
O	15692	15693	)
O	15693	15694	.

O	15696	15704	Question
O	15704	15705	-
O	15705	15712	7348711
O	15712	15713	,
O	15714	15720	answer
O	15720	15721	-
O	15721	15728	7353205

B-api_mention	15729	15740	InetAddress
I-api_mention	15740	15741	.
I-api_mention	15741	15753	getLocalHost
I-api_mention	15753	15754	(
I-api_mention	15754	15758	args
I-api_mention	15758	15759	)
I-api_mention	15759	15760	.
I-api_mention	15760	15771	getHostName
I-api_mention	15771	15772	(
I-api_mention	15772	15776	args
I-api_mention	15776	15777	)
O	15778	15780	is
O	15781	15784	the
O	15785	15789	more
O	15790	15798	portable
O	15799	15802	way
O	15802	15803	.

B-api_mention	15804	15808	exec
I-api_mention	15808	15809	(
I-api_mention	15809	15813	args
I-api_mention	15813	15814	)
O	15815	15823	actually
O	15824	15829	calls
O	15830	15833	out
O	15834	15836	to
O	15837	15840	the
O	15841	15850	operating
O	15851	15857	system
O	15858	15860	to
O	15861	15868	execute
O	15869	15872	the
O	15873	15881	hostname
O	15882	15889	command
O	15889	15890	.

O	15891	15895	Here
O	15896	15899	are
O	15900	15901	a
O	15902	15908	couple
O	15909	15914	other
O	15915	15922	related
O	15923	15930	answers
O	15931	15933	on
O	15934	15936	SO
O	15936	15937	:
O	15938	15939	#
O	15939	15941	li
O	15942	15946	Java
O	15947	15954	current
O	15955	15962	machine
O	15963	15967	name
O	15968	15971	and
O	15972	15978	logged
O	15979	15981	in
O	15982	15986	user
O	15986	15987	?

O	15988	15989	#
O	15989	15991	li
O	15992	15995	Get
O	15996	15999	DNS
O	16000	16004	name
O	16005	16007	of
O	16008	16013	local
O	16014	16021	machine
O	16022	16024	as
O	16025	16029	seen
O	16030	16032	by
O	16033	16034	a
O	16035	16041	remote
O	16042	16049	machine
O	16050	16054	EDIT
O	16054	16055	:
O	16056	16059	You
O	16060	16066	should
O	16067	16071	take
O	16072	16073	a
O	16074	16078	look
O	16079	16081	at
O	16082	16083	A
O	16083	16084	.
O	16084	16085	H
O	16085	16086	.
O	16086	16087	'
O	16087	16088	s
O	16089	16095	answer
O	16096	16098	or
O	16099	16105	Arnout
O	16106	16113	Engelen
O	16113	16114	'
O	16114	16115	s
O	16116	16122	answer
O	16123	16126	for
O	16127	16134	details
O	16135	16137	on
O	16138	16141	why
O	16142	16146	this
O	16147	16152	might
O	16153	16156	not
O	16157	16161	work
O	16162	16164	as
O	16165	16173	expected
O	16173	16174	,
O	16175	16184	depending
O	16185	16187	on
O	16188	16192	your
O	16193	16202	situation
O	16202	16203	.

O	16204	16206	As
O	16207	16209	an
O	16210	16216	answer
O	16217	16220	for
O	16221	16225	this
O	16226	16232	person
O	16233	16236	who
O	16237	16249	specifically
O	16250	16259	requested
O	16260	16268	portable
O	16268	16269	,
O	16270	16271	I
O	16272	16277	still
O	16278	16283	think
B-api_mention	16284	16295	getHostName
I-api_mention	16295	16296	(
I-api_mention	16296	16300	args
I-api_mention	16300	16301	)
O	16302	16304	is
O	16305	16309	fine
O	16309	16310	,
O	16311	16314	but
O	16315	16319	they
O	16320	16325	bring
O	16326	16328	up
O	16329	16333	some
O	16334	16338	good
O	16339	16345	points
O	16346	16350	that
O	16351	16357	should
O	16358	16360	be
O	16361	16371	considered
O	16371	16372	.

O	16374	16382	Question
O	16382	16383	-
O	16383	16390	7348711
O	16390	16391	,
O	16392	16398	answer
O	16398	16399	-
O	16399	16406	7353473

B-api_mention	16407	16418	InetAddress
I-api_mention	16418	16419	.
I-api_mention	16419	16431	getLocalHost
I-api_mention	16431	16432	(
I-api_mention	16432	16436	args
I-api_mention	16436	16437	)
I-api_mention	16437	16438	.
I-api_mention	16438	16449	getHostName
I-api_mention	16449	16450	(
I-api_mention	16450	16454	args
I-api_mention	16454	16455	)
O	16456	16458	is
O	16459	16465	better
O	16466	16467	(
O	16467	16469	as
O	16470	16479	explained
O	16480	16482	by
O	16483	16487	Nick
O	16487	16488	)
O	16488	16489	,
O	16490	16493	but
O	16494	16499	still
O	16500	16503	not
O	16504	16508	very
O	16509	16513	good
O	16514	16517	One
O	16518	16522	host
O	16523	16526	can
O	16527	16529	be
O	16530	16535	known
O	16536	16541	under
O	16542	16546	many
O	16547	16556	different
O	16557	16566	hostnames
O	16566	16567	.

O	16568	16575	Usually
O	16576	16579	you
O	16579	16580	'
O	16580	16582	ll
O	16583	16585	be
O	16586	16593	looking
O	16594	16597	for
O	16598	16601	the
O	16602	16610	hostname
O	16611	16615	your
O	16616	16620	host
O	16621	16624	has
O	16625	16627	in
O	16628	16629	a
O	16630	16638	specific
O	16639	16646	context
O	16646	16647	.

O	16648	16651	For
O	16652	16659	example
O	16659	16660	,
O	16661	16663	in
O	16664	16665	a
O	16666	16669	web
O	16670	16681	application
O	16681	16682	,
O	16683	16686	you
O	16687	16692	might
O	16693	16695	be
O	16696	16703	looking
O	16704	16707	for
O	16708	16711	the
O	16712	16720	hostname
O	16721	16725	used
O	16726	16728	by
O	16729	16736	whoever
O	16737	16743	issued
O	16744	16747	the
O	16748	16755	request
O	16756	16759	you
O	16759	16760	'
O	16760	16762	re
O	16763	16772	currently
O	16773	16781	handling
O	16781	16782	.

O	16783	16786	How
O	16787	16789	to
O	16790	16794	best
O	16795	16799	find
O	16800	16804	that
O	16805	16808	one
O	16809	16816	depends
O	16817	16819	on
O	16820	16825	which
O	16826	16835	framework
O	16836	16839	you
O	16839	16840	'
O	16840	16842	re
O	16843	16848	using
O	16849	16852	for
O	16853	16857	your
O	16858	16861	web
O	16862	16873	application
O	16873	16874	.

O	16875	16877	In
O	16878	16882	some
O	16883	16887	kind
O	16888	16890	of
O	16891	16896	other
O	16897	16905	internet
O	16905	16906	-
O	16906	16912	facing
O	16913	16920	service
O	16920	16921	,
O	16922	16925	you
O	16925	16926	'
O	16926	16928	ll
O	16929	16933	want
O	16934	16937	the
O	16938	16946	hostname
O	16947	16951	your
O	16952	16959	service
O	16960	16962	is
O	16963	16972	available
O	16973	16980	through
O	16981	16985	from
O	16986	16989	the
O	16990	16991	'
O	16991	16998	outside
O	16998	16999	'
O	16999	17000	.

O	17001	17004	Due
O	17005	17007	to
O	17008	17015	proxies
O	17015	17016	,
O	17017	17026	firewalls
O	17027	17030	etc
O	17031	17035	this
O	17036	17041	might
O	17042	17045	not
O	17046	17050	even
O	17051	17053	be
O	17054	17055	a
O	17056	17064	hostname
O	17065	17067	on
O	17068	17071	the
O	17072	17079	machine
O	17080	17084	your
O	17085	17092	service
O	17093	17095	is
O	17096	17105	installed
O	17106	17108	on
O	17109	17110	-
O	17111	17114	you
O	17115	17120	might
O	17121	17124	try
O	17125	17127	to
O	17128	17132	come
O	17133	17135	up
O	17136	17140	with
O	17141	17142	a
O	17143	17153	reasonable
O	17154	17161	default
O	17161	17162	,
O	17163	17166	but
O	17167	17170	you
O	17171	17177	should
O	17178	17188	definitely
O	17189	17193	make
O	17194	17198	this
O	17199	17211	configurable
O	17212	17215	for
O	17216	17223	whoever
O	17224	17232	installs
O	17233	17237	this
O	17237	17238	.

O	17240	17248	Question
O	17248	17249	-
O	17249	17256	7348711
O	17256	17257	,
O	17258	17264	answer
O	17264	17265	-
O	17265	17272	7800008

O	17273	17281	Strictly
O	17282	17290	speaking
O	17291	17292	-
O	17293	17296	you
O	17297	17301	have
O	17302	17304	no
O	17305	17311	choice
O	17312	17315	but
O	17316	17323	calling
O	17324	17330	either
B-api_mention	17331	17339	hostname
I-api_mention	17339	17340	(
I-api_mention	17340	17344	args
I-api_mention	17344	17345	)
O	17346	17348	or
O	17349	17350	-
O	17351	17353	on
O	17354	17358	Unix
B-api_mention	17359	17370	gethostname
I-api_mention	17370	17371	(
I-api_mention	17371	17375	args
I-api_mention	17375	17376	)
O	17377	17378	.

O	17379	17383	This
O	17384	17386	is
O	17387	17390	the
O	17391	17395	name
O	17396	17398	of
O	17399	17403	your
O	17404	17412	computer
O	17412	17413	.

O	17414	17417	Any
O	17418	17425	attempt
O	17426	17428	to
O	17429	17438	determine
O	17439	17442	the
O	17443	17451	hostname
O	17452	17454	by
O	17455	17457	an
O	17458	17460	IP
O	17461	17468	address
O	17469	17473	like
O	17474	17478	this
B-api_mention	17479	17490	InetAddress
I-api_mention	17490	17491	.
I-api_mention	17491	17503	getLocalHost
I-api_mention	17503	17504	(
I-api_mention	17504	17508	args
I-api_mention	17508	17509	)
I-api_mention	17509	17510	.
I-api_mention	17510	17521	getHostName
I-api_mention	17521	17522	(
I-api_mention	17522	17526	args
I-api_mention	17526	17527	)
O	17528	17530	is
O	17531	17536	bound
O	17537	17539	to
O	17540	17544	fail
O	17545	17547	in
O	17548	17552	some
O	17553	17566	circumstances
O	17566	17567	:
O	17568	17569	#
O	17569	17571	li
O	17572	17575	The
O	17576	17578	IP
O	17579	17586	address
O	17587	17592	might
O	17593	17596	not
O	17597	17604	resolve
O	17605	17609	into
O	17610	17613	any
O	17614	17618	name
O	17618	17619	.

O	17620	17623	Bad
O	17624	17627	DNS
O	17628	17633	setup
O	17633	17634	,
O	17635	17638	bad
O	17639	17645	system
O	17646	17651	setup
O	17652	17654	or
O	17655	17658	bad
O	17659	17667	provider
O	17668	17673	setup
O	17674	17677	may
O	17678	17680	be
O	17681	17684	the
O	17685	17691	reason
O	17692	17695	for
O	17696	17700	this
O	17700	17701	.

O	17702	17703	#
O	17703	17705	li
O	17706	17707	A
O	17708	17712	name
O	17713	17715	in
O	17716	17719	DNS
O	17720	17723	can
O	17724	17728	have
O	17729	17733	many
O	17734	17741	aliases
O	17742	17748	called
O	17749	17755	CNAMEs
O	17755	17756	.

O	17757	17762	These
O	17763	17766	can
O	17767	17771	only
O	17772	17774	be
O	17775	17783	resolved
O	17784	17786	in
O	17787	17790	one
O	17791	17800	direction
O	17801	17809	properly
O	17809	17810	:
O	17811	17815	name
O	17816	17818	to
O	17819	17826	address
O	17826	17827	.

O	17828	17831	The
O	17832	17839	reverse
O	17840	17849	direction
O	17850	17852	is
O	17853	17862	ambiguous
O	17862	17863	.

O	17864	17869	Which
O	17870	17873	one
O	17874	17876	is
O	17877	17880	the
O	17881	17882	"
O	17882	17890	official
O	17890	17891	"
O	17892	17896	name
O	17896	17897	?

O	17898	17899	#
O	17899	17901	li
O	17902	17903	A
O	17904	17908	host
O	17909	17912	can
O	17913	17917	have
O	17918	17922	many
O	17923	17932	different
O	17933	17935	IP
O	17936	17945	addresses
O	17946	17947	-
O	17948	17951	and
O	17952	17956	each
O	17957	17964	address
O	17965	17968	can
O	17969	17973	have
O	17974	17978	many
O	17979	17988	different
O	17989	17994	names
O	17994	17995	.

O	17996	17999	Two
O	18000	18006	common
O	18007	18012	cases
O	18013	18016	are
O	18016	18017	:
O	18018	18021	One
O	18022	18030	ethernet
O	18031	18035	port
O	18036	18039	has
O	18040	18047	several
O	18048	18049	"
O	18049	18056	logical
O	18056	18057	"
O	18058	18060	IP
O	18061	18070	addresses
O	18071	18073	or
O	18074	18077	the
O	18078	18086	computer
O	18087	18090	has
O	18091	18098	several
O	18099	18107	ethernet
O	18108	18113	ports
O	18113	18114	.

O	18115	18117	It
O	18118	18120	is
O	18121	18133	configurable
O	18134	18141	whether
O	18142	18146	they
O	18147	18152	share
O	18153	18155	an
O	18156	18158	IP
O	18159	18161	or
O	18162	18166	have
O	18167	18176	different
O	18177	18180	IPs
O	18180	18181	.

O	18182	18186	This
O	18187	18189	is
O	18190	18196	called
O	18197	18198	"
O	18198	18208	multihomed
O	18208	18209	"
O	18209	18210	.

O	18211	18212	#
O	18212	18214	li
O	18215	18218	One
O	18219	18223	Name
O	18224	18226	in
O	18227	18230	DNS
O	18231	18234	can
O	18235	18242	resolve
O	18243	18245	to
O	18246	18253	several
O	18254	18256	IP
O	18257	18266	Addresses
O	18266	18267	.

O	18268	18271	And
O	18272	18275	not
O	18276	18279	all
O	18280	18282	of
O	18283	18288	those
O	18289	18298	addresses
O	18299	18303	must
O	18304	18306	be
O	18307	18314	located
O	18315	18317	on
O	18318	18321	the
O	18322	18326	same
O	18327	18335	computer
O	18335	18336	!

O	18337	18338	(
O	18338	18345	Usecase
O	18345	18346	:
O	18347	18348	A
O	18349	18355	simple
O	18356	18360	form
O	18361	18363	of
O	18364	18368	load
O	18368	18369	-
O	18369	18378	balancing
O	18378	18379	)
O	18380	18381	#
O	18381	18383	li
O	18384	18387	Let
O	18387	18388	'
O	18388	18389	s
O	18390	18393	not
O	18394	18398	even
O	18399	18404	start
O	18405	18412	talking
O	18413	18418	about
O	18419	18426	dynamic
O	18427	18429	IP
O	18430	18439	addresses
O	18439	18440	.

O	18441	18445	Also
O	18446	18449	don
O	18449	18450	'
O	18450	18451	t
O	18452	18459	confuse
O	18460	18463	the
O	18464	18468	name
O	18469	18471	of
O	18472	18474	an
O	18475	18477	IP
O	18477	18478	-
O	18478	18485	address
O	18486	18490	with
O	18491	18494	the
O	18495	18499	name
O	18500	18502	of
O	18503	18506	the
O	18507	18511	host
O	18512	18513	(
O	18513	18521	hostname
O	18521	18522	)
O	18522	18523	.

O	18524	18525	A
O	18526	18534	metaphor
O	18535	18540	might
O	18541	18545	make
O	18546	18548	it
O	18549	18556	clearer
O	18556	18557	:
O	18558	18559	#
O	18559	18569	blockquote
O	18570	18574	This
O	18575	18586	illustrates
O	18587	18589	it
O	18590	18596	pretty
O	18597	18601	much
O	18602	18603	I
O	18604	18609	think
O	18609	18610	.

O	18611	18614	The
O	18615	18619	good
O	18620	18624	news
O	18625	18627	is
O	18627	18628	:
O	18629	18632	The
O	18633	18637	real
O	18638	18646	hostname
O	18647	18649	is
O	18650	18657	usually
O	18658	18661	not
O	18662	18671	necessary
O	18671	18672	.

O	18673	18675	In
O	18676	18680	most
O	18681	18686	cases
O	18687	18690	any
O	18691	18695	name
O	18696	18701	which
O	18702	18710	resolves
O	18711	18715	into
O	18716	18718	an
O	18719	18721	IP
O	18722	18729	address
O	18730	18732	on
O	18733	18737	this
O	18738	18742	host
O	18743	18747	will
O	18748	18750	do
O	18750	18751	.

O	18752	18753	(
O	18753	18756	The
O	18757	18765	stranger
O	18766	18771	might
O	18772	18777	enter
O	18778	18781	the
O	18782	18786	city
O	18787	18789	by
O	18790	18799	Northgate
O	18799	18800	,
O	18801	18804	but
O	18805	18812	helpful
O	18813	18819	locals
O	18820	18829	translate
O	18830	18833	the
O	18834	18835	"
O	18835	18838	2nd
O	18839	18843	left
O	18843	18844	"
O	18845	18849	part
O	18849	18850	.
O	18850	18851	)
O	18852	18854	If
O	18855	18858	the
O	18859	18868	remaining
O	18869	18875	corner
O	18876	18881	cases
O	18882	18885	you
O	18886	18890	must
O	18891	18894	use
O	18895	18898	the
O	18899	18909	definitive
O	18910	18916	source
O	18917	18919	of
O	18920	18924	this
O	18925	18938	configuration
O	18939	18946	setting
O	18947	18948	-
O	18949	18954	which
O	18955	18957	is
O	18958	18961	the
O	18962	18963	C
O	18964	18972	function
O	18973	18984	gethostname
O	18984	18985	(
O	18985	18989	args
O	18989	18990	)
O	18991	18992	.

O	18993	18997	That
O	18998	19006	function
O	19007	19009	is
O	19010	19014	also
O	19015	19021	called
O	19022	19024	by
O	19025	19028	the
O	19029	19036	program
O	19037	19045	hostname
O	19046	19047	.

O	19049	19057	Question
O	19057	19058	-
O	19058	19065	7348711
O	19065	19066	,
O	19067	19073	answer
O	19073	19074	-
O	19074	19082	20793241

O	19083	19094	Environment
O	19095	19104	variables
O	19105	19108	may
O	19109	19113	also
O	19114	19121	provide
O	19122	19123	a
O	19124	19130	useful
O	19131	19136	means
O	19137	19138	-
O	19138	19139	-
O	19140	19152	COMPUTERNAME
O	19153	19155	on
O	19156	19163	Windows
O	19163	19164	,
O	19165	19173	HOSTNAME
O	19174	19176	on
O	19177	19181	most
O	19182	19188	modern
O	19189	19193	Unix
O	19193	19194	/
O	19194	19199	Linux
O	19200	19206	shells
O	19206	19207	.

O	19208	19211	See
O	19211	19212	:
O	19213	19214	#
O	19214	19215	a
O	19216	19217	I
O	19217	19218	'
O	19218	19219	m
O	19220	19225	using
O	19226	19231	these
O	19232	19234	as
O	19235	19236	"
O	19236	19249	supplementary
O	19249	19250	"
O	19251	19258	methods
O	19259	19261	to
B-api_mention	19262	19273	InetAddress
I-api_mention	19273	19274	.
I-api_mention	19274	19286	getLocalHost
I-api_mention	19286	19287	(
I-api_mention	19287	19291	args
I-api_mention	19291	19292	)
I-api_mention	19292	19293	.
I-api_mention	19293	19304	getHostName
I-api_mention	19304	19305	(
I-api_mention	19305	19309	args
I-api_mention	19309	19310	)
O	19311	19312	,
O	19313	19318	since
O	19319	19321	as
O	19322	19329	several
O	19330	19336	people
O	19337	19342	point
O	19343	19346	out
O	19346	19347	,
O	19348	19352	that
O	19353	19361	function
O	19362	19367	doesn
O	19367	19368	'
O	19368	19369	t
O	19370	19374	work
O	19375	19377	in
O	19378	19381	all
O	19382	19394	environments
O	19394	19395	.

B-api_mention	19396	19403	Runtime
I-api_mention	19403	19404	.
I-api_mention	19404	19414	getRuntime
I-api_mention	19414	19415	(
I-api_mention	19415	19419	args
I-api_mention	19419	19420	)
I-api_mention	19420	19421	.
I-api_mention	19421	19425	exec
I-api_mention	19425	19426	(
I-api_mention	19426	19430	args
I-api_mention	19430	19431	)
O	19432	19434	is
O	19435	19442	another
O	19443	19451	possible
O	19452	19462	supplement
O	19462	19463	.

O	19464	19466	At
O	19467	19471	this
O	19472	19477	stage
O	19477	19478	,
O	19479	19480	I
O	19481	19486	haven
O	19486	19487	'
O	19487	19488	t
O	19489	19493	used
O	19494	19496	it
O	19496	19497	.

O	19498	19499	#
O	19499	19502	pre

O	19504	19512	Question
O	19512	19513	-
O	19513	19520	7348711
O	19520	19521	,
O	19522	19528	answer
O	19528	19529	-
O	19529	19537	28043703

O	19538	19540	As
O	19541	19547	others
O	19548	19552	have
O	19553	19558	noted
O	19558	19559	,
O	19560	19567	getting
O	19568	19571	the
O	19572	19580	hostname
O	19581	19586	based
O	19587	19589	on
O	19590	19593	DNS
O	19594	19604	resolution
O	19605	19607	is
O	19608	19618	unreliable
O	19618	19619	.

O	19620	19625	Since
O	19626	19630	this
O	19631	19639	question
O	19640	19642	is
O	19643	19656	unfortunately
O	19657	19662	still
O	19663	19671	relevant
O	19672	19674	in
O	19675	19679	2016
O	19680	19681	,
O	19682	19683	I
O	19683	19684	'
O	19684	19685	d
O	19686	19690	like
O	19691	19693	to
O	19694	19699	share
O	19700	19704	with
O	19705	19708	you
O	19709	19711	my
O	19712	19719	network
O	19719	19720	-
O	19720	19731	independent
O	19732	19740	solution
O	19740	19741	,
O	19742	19746	with
O	19747	19751	some
O	19752	19756	test
O	19757	19761	runs
O	19762	19764	on
O	19765	19774	different
O	19775	19782	systems
O	19782	19783	.

O	19784	19787	The
O	19788	19797	following
O	19798	19802	code
O	19803	19808	tries
O	19809	19811	to
O	19812	19814	do
O	19815	19818	the
O	19819	19828	following
O	19828	19829	:
O	19830	19831	#
O	19831	19833	li
O	19834	19836	On
O	19837	19844	Windows
O	19845	19846	#
O	19846	19848	li
O	19849	19853	Read
O	19854	19857	the
O	19858	19870	COMPUTERNAME
O	19871	19882	environment
O	19883	19891	variable
O	19892	19899	through
B-api_mention	19900	19906	System
I-api_mention	19906	19907	.
I-api_mention	19907	19913	getenv
I-api_mention	19913	19914	(
I-api_mention	19914	19918	args
I-api_mention	19918	19919	)
O	19920	19921	.

O	19922	19923	#
O	19923	19925	li
O	19926	19933	Execute
O	19934	19942	hostname
O	19942	19943	.
O	19943	19946	exe
O	19947	19950	and
O	19951	19955	read
O	19956	19959	the
O	19960	19968	response
O	19969	19970	#
O	19970	19972	li
O	19973	19975	On
O	19976	19981	Linux
O	19982	19983	#
O	19983	19985	li
O	19986	19990	Read
O	19991	19994	the
O	19995	20003	HOSTNAME
O	20004	20015	environment
O	20016	20024	variable
O	20025	20032	through
B-api_mention	20033	20039	System
I-api_mention	20039	20040	.
I-api_mention	20040	20046	getenv
I-api_mention	20046	20047	(
I-api_mention	20047	20051	args
I-api_mention	20051	20052	)
O	20053	20054	#
O	20054	20056	li
O	20057	20064	Execute
O	20065	20073	hostname
O	20074	20077	and
O	20078	20082	read
O	20083	20086	the
O	20087	20095	response
O	20096	20097	#
O	20097	20099	li
O	20100	20104	Read
O	20105	20106	/
O	20106	20109	etc
O	20109	20110	/
O	20110	20118	hostname
O	20119	20120	(
O	20120	20122	to
O	20123	20125	do
O	20126	20130	this
O	20131	20132	I
O	20132	20133	'
O	20133	20134	m
O	20135	20144	executing
O	20145	20148	cat
O	20149	20154	since
O	20155	20158	the
O	20159	20166	snippet
O	20167	20174	already
O	20175	20183	contains
O	20184	20188	code
O	20189	20191	to
O	20192	20199	execute
O	20200	20203	and
O	20204	20208	read
O	20208	20209	.
O	20210	20216	Simply
O	20217	20224	reading
O	20225	20228	the
O	20229	20233	file
O	20234	20239	would
O	20240	20242	be
O	20243	20249	better
O	20249	20250	,
O	20251	20257	though
O	20257	20258	)
O	20258	20259	.

O	20260	20263	The
O	20264	20268	code
O	20268	20269	:
O	20270	20271	#
O	20271	20274	pre
O	20275	20282	Results
O	20283	20286	for
O	20287	20296	different
O	20297	20306	operating
O	20307	20314	systems
O	20314	20315	:
O	20316	20324	OpenSuse
O	20325	20327	13
O	20327	20328	.
O	20328	20329	1
O	20330	20331	#
O	20331	20334	pre
O	20335	20341	Ubuntu
O	20342	20344	14
O	20344	20345	.
O	20345	20347	04
O	20348	20351	LTS
O	20352	20356	This
O	20357	20360	one
O	20361	20363	is
O	20364	20369	kinda
O	20370	20377	strange
O	20378	20383	since
O	20384	20388	echo
O	20389	20390	$
O	20390	20398	HOSTNAME
O	20399	20406	returns
O	20407	20410	the
O	20411	20418	correct
O	20419	20427	hostname
O	20427	20428	,
O	20429	20432	but
B-api_mention	20433	20439	System
I-api_mention	20439	20440	.
I-api_mention	20440	20446	getenv
I-api_mention	20446	20447	(
I-api_mention	20447	20451	args
I-api_mention	20451	20452	)
O	20453	20457	does
O	20458	20461	not
O	20461	20462	:
O	20463	20464	#
O	20464	20467	pre
O	20468	20472	EDIT
O	20472	20473	:
O	20474	20483	According
O	20484	20486	to
O	20487	20497	legolas108
O	20498	20499	,
B-api_mention	20500	20506	System
I-api_mention	20506	20507	.
I-api_mention	20507	20513	getenv
I-api_mention	20513	20514	(
I-api_mention	20514	20518	args
I-api_mention	20518	20519	)
O	20520	20525	works
O	20526	20528	on
O	20529	20535	Ubuntu
O	20536	20538	14
O	20538	20539	.
O	20539	20541	04
O	20542	20544	if
O	20545	20548	you
O	20549	20552	run
O	20553	20559	export
O	20560	20568	HOSTNAME
O	20569	20575	before
O	20576	20585	executing
O	20586	20589	the
O	20590	20594	Java
O	20595	20599	code
O	20599	20600	.

O	20601	20608	Windows
O	20609	20610	7
O	20611	20612	#
O	20612	20615	pre
O	20616	20619	The
O	20620	20627	machine
O	20628	20633	names
O	20634	20638	have
O	20639	20643	been
O	20644	20652	replaced
O	20653	20656	but
O	20657	20658	I
O	20659	20663	kept
O	20664	20667	the
O	20668	20682	capitalization
O	20683	20686	and
O	20687	20696	structure
O	20696	20697	.

O	20698	20702	Note
O	20703	20706	the
O	20707	20712	extra
O	20713	20720	newline
O	20721	20725	when
O	20726	20735	executing
O	20736	20744	hostname
O	20745	20746	,
O	20747	20750	you
O	20751	20756	might
O	20757	20761	have
O	20762	20764	to
O	20765	20769	take
O	20770	20772	it
O	20773	20777	into
O	20778	20785	account
O	20786	20788	in
O	20789	20793	some
O	20794	20799	cases
O	20799	20800	.

O	20802	20810	Question
O	20810	20811	-
O	20811	20818	8098953
O	20818	20819	,
O	20820	20826	answer
O	20826	20827	-
O	20827	20834	8103083

O	20835	20838	The
O	20839	20844	first
O	20845	20850	thing
O	20851	20853	to
O	20854	20858	keep
O	20859	20861	in
O	20862	20866	mind
O	20867	20869	is
O	20870	20874	that
O	20875	20879	Java
O	20880	20887	ternary
O	20888	20897	operators
O	20898	20902	have
O	20903	20904	a
O	20905	20906	"
O	20906	20910	type
O	20910	20911	"
O	20911	20912	,
O	20913	20916	and
O	20917	20921	that
O	20922	20926	this
O	20927	20929	is
O	20930	20934	what
O	20935	20938	the
O	20939	20947	compiler
O	20948	20952	will
O	20953	20962	determine
O	20963	20966	and
O	20967	20975	consider
O	20976	20978	no
O	20979	20985	matter
O	20986	20990	what
O	20991	20994	the
O	20995	21001	actual
O	21001	21002	/
O	21002	21006	real
O	21007	21012	types
O	21013	21015	of
O	21016	21019	the
O	21020	21026	second
O	21027	21029	or
O	21030	21035	third
O	21036	21045	parameter
O	21046	21049	are
O	21049	21050	.

O	21051	21060	Depending
O	21061	21063	on
O	21064	21071	several
O	21072	21079	factors
O	21080	21083	the
O	21084	21091	ternary
O	21092	21100	operator
O	21101	21105	type
O	21106	21108	is
O	21109	21119	determined
O	21120	21122	in
O	21123	21132	different
O	21133	21137	ways
O	21138	21140	as
O	21141	21152	illustrated
O	21153	21155	in
O	21156	21159	the
O	21160	21164	Java
O	21165	21173	Language
O	21174	21187	Specification
O	21188	21190	15
O	21190	21191	.
O	21191	21193	26
O	21194	21196	In
O	21197	21200	the
O	21201	21209	question
O	21210	21215	above
O	21216	21218	we
O	21219	21225	should
O	21226	21234	consider
O	21235	21238	the
O	21239	21243	last
O	21244	21248	case
O	21248	21249	:
O	21250	21251	#
O	21251	21261	blockquote
O	21262	21266	This
O	21267	21269	is
O	21270	21272	by
O	21273	21276	far
O	21277	21280	the
O	21281	21285	most
O	21286	21293	complex
O	21294	21298	case
O	21299	21303	once
O	21304	21307	you
O	21308	21312	take
O	21313	21314	a
O	21315	21319	look
O	21320	21322	at
O	21323	21331	applying
O	21332	21339	capture
O	21340	21350	conversion
O	21351	21352	(
O	21352	21353	§
O	21353	21354	5
O	21354	21355	.
O	21355	21356	1
O	21356	21357	.
O	21357	21359	10
O	21359	21360	)
O	21361	21364	and
O	21365	21369	most
O	21370	21372	of
O	21373	21376	all
O	21377	21379	at
O	21380	21383	lub
O	21383	21384	(
O	21384	21386	T1
O	21386	21387	,
O	21388	21390	T2
O	21390	21391	)
O	21392	21393	.

O	21394	21396	In
O	21397	21402	plain
O	21403	21410	English
O	21411	21414	and
O	21415	21420	after
O	21421	21423	an
O	21424	21431	extreme
O	21432	21446	simplification
O	21447	21449	we
O	21450	21453	can
O	21454	21462	describe
O	21463	21466	the
O	21467	21474	process
O	21475	21477	as
O	21478	21489	calculating
O	21490	21493	the
O	21494	21495	"
O	21495	21500	Least
O	21501	21507	Common
O	21508	21518	Superclass
O	21518	21519	"
O	21520	21521	(
O	21521	21524	yes
O	21524	21525	,
O	21526	21531	think
O	21532	21534	of
O	21535	21538	the
O	21539	21542	LCM
O	21542	21543	)
O	21544	21546	of
O	21547	21550	the
O	21551	21557	second
O	21558	21561	and
O	21562	21567	third
O	21568	21578	parameters
O	21578	21579	.

O	21580	21584	This
O	21585	21589	will
O	21590	21594	give
O	21595	21597	us
O	21598	21601	the
O	21602	21609	ternary
O	21610	21618	operator
O	21619	21620	"
O	21620	21624	type
O	21624	21625	"
O	21625	21626	.

O	21627	21632	Again
O	21632	21633	,
O	21634	21638	what
O	21639	21640	I
O	21641	21645	just
O	21646	21650	said
O	21651	21653	is
O	21654	21656	an
O	21657	21664	extreme
O	21665	21679	simplification
O	21680	21681	(
O	21681	21689	consider
O	21690	21697	classes
O	21698	21702	that
O	21703	21712	implement
O	21713	21721	multiple
O	21722	21728	common
O	21729	21739	interfaces
O	21739	21740	)
O	21740	21741	.

O	21742	21745	For
O	21746	21753	example
O	21753	21754	,
O	21755	21757	if
O	21758	21761	you
O	21762	21765	try
O	21766	21769	the
O	21770	21779	following
O	21779	21780	:
O	21781	21782	#
O	21782	21785	pre
O	21786	21789	You
O	21789	21790	'
O	21790	21792	ll
O	21793	21799	notice
O	21800	21804	that
O	21805	21814	resulting
O	21815	21819	type
O	21820	21822	of
O	21823	21826	the
O	21827	21838	conditional
O	21839	21849	expression
O	21850	21852	is
B-api_mention	21853	21857	java
I-api_mention	21857	21858	.
I-api_mention	21858	21862	util
I-api_mention	21862	21863	.
I-api_mention	21863	21867	Date
O	21868	21873	since
O	21874	21876	it
O	21876	21877	'
O	21877	21878	s
O	21879	21882	the
O	21883	21884	"
O	21884	21889	Least
O	21890	21896	Common
O	21897	21907	Superclass
O	21907	21908	"
O	21909	21912	for
O	21913	21916	the
B-api_mention	21917	21926	Timestamp
O	21927	21928	/
B-api_mention	21929	21933	Time
O	21934	21938	pair
O	21938	21939	.

O	21940	21945	Since
O	21946	21950	null
O	21951	21954	can
O	21955	21957	be
O	21958	21967	autoboxed
O	21968	21970	to
O	21971	21979	anything
O	21979	21980	,
O	21981	21984	the
O	21985	21986	"
O	21986	21991	Least
O	21992	21998	Common
O	21999	22009	Superclass
O	22009	22010	"
O	22011	22013	is
O	22014	22017	the
O	22018	22025	Integer
O	22026	22031	class
O	22032	22035	and
O	22036	22040	this
O	22041	22045	will
O	22046	22048	be
O	22049	22052	the
O	22053	22059	return
O	22060	22064	type
O	22065	22067	of
O	22068	22071	the
O	22072	22083	conditional
O	22084	22094	expression
O	22095	22096	(
O	22096	22103	ternary
O	22104	22112	operator
O	22112	22113	)
O	22114	22119	above
O	22119	22120	.

O	22121	22124	The
O	22125	22131	return
O	22132	22137	value
O	22138	22142	will
O	22143	22147	then
O	22148	22150	be
O	22151	22152	a
O	22153	22157	null
O	22158	22165	pointer
O	22166	22168	of
O	22169	22173	type
B-api_mention	22174	22181	Integer
O	22182	22185	and
O	22186	22190	that
O	22191	22193	is
O	22194	22198	what
O	22199	22203	will
O	22204	22206	be
O	22207	22215	returned
O	22216	22218	by
O	22219	22222	the
O	22223	22230	ternary
O	22231	22239	operator
O	22239	22240	.

O	22241	22243	At
O	22244	22251	runtime
O	22251	22252	,
O	22253	22257	when
O	22258	22261	the
O	22262	22266	Java
O	22267	22274	Virtual
O	22275	22282	Machine
O	22283	22290	unboxes
O	22291	22294	the
B-api_mention	22295	22302	Integer
O	22303	22304	a
B-api_mention	22305	22325	NullPointerException
O	22326	22328	is
O	22329	22335	thrown
O	22335	22336	.

O	22337	22341	This
O	22342	22349	happens
O	22350	22357	because
O	22358	22361	the
O	22362	22365	JVM
O	22366	22374	attempts
O	22375	22377	to
O	22378	22384	invoke
O	22385	22388	the
O	22389	22397	function
O	22398	22402	null
B-api_mention	22402	22403	.
I-api_mention	22403	22411	intValue
I-api_mention	22411	22412	(
I-api_mention	22412	22416	args
I-api_mention	22416	22417	)
O	22418	22419	,
O	22420	22425	where
O	22426	22430	null
O	22431	22433	is
O	22434	22437	the
O	22438	22444	result
O	22445	22447	of
O	22448	22458	autoboxing
O	22458	22459	.

O	22460	22462	In
O	22463	22465	my
O	22466	22473	opinion
O	22474	22475	(
O	22475	22478	and
O	22479	22484	since
O	22485	22487	my
O	22488	22495	opinion
O	22496	22498	is
O	22499	22502	not
O	22503	22505	in
O	22506	22509	the
O	22510	22514	Java
O	22515	22523	Language
O	22524	22537	Specification
O	22538	22542	many
O	22543	22549	people
O	22550	22554	will
O	22555	22559	find
O	22560	22562	it
O	22563	22568	wrong
O	22569	22575	anyway
O	22575	22576	)
O	22577	22580	the
O	22581	22589	compiler
O	22590	22594	does
O	22595	22596	a
O	22597	22601	poor
O	22602	22605	job
O	22606	22608	in
O	22609	22619	evaluating
O	22620	22623	the
O	22624	22634	expression
O	22635	22637	in
O	22638	22642	your
O	22643	22651	question
O	22651	22652	.

O	22653	22658	Given
O	22659	22663	that
O	22664	22667	you
O	22668	22673	wrote
O	22674	22678	true
O	22679	22680	?

O	22681	22687	param1
O	22688	22689	:
O	22690	22696	param2
O	22697	22700	the
O	22701	22709	compiler
O	22710	22716	should
O	22717	22726	determine
O	22727	22732	right
O	22733	22737	away
O	22738	22742	that
O	22743	22746	the
O	22747	22752	first
O	22753	22762	parameter
O	22763	22764	-
O	22765	22769	null
O	22770	22771	-
O	22772	22776	will
O	22777	22779	be
O	22780	22788	returned
O	22789	22792	and
O	22793	22795	it
O	22796	22802	should
O	22803	22811	generate
O	22812	22813	a
O	22814	22822	compiler
O	22823	22828	error
O	22828	22829	.

O	22830	22834	This
O	22835	22837	is
O	22838	22846	somewhat
O	22847	22854	similar
O	22855	22857	to
O	22858	22862	when
O	22863	22866	you
O	22867	22872	write
O	22873	22878	while
O	22878	22879	(
O	22879	22883	args
O	22883	22884	)
O	22884	22885	{
O	22885	22886	}
O	22887	22890	etc
O	22890	22891	.
O	22891	22892	.
O	22892	22893	.
O	22894	22897	and
O	22898	22901	the
O	22902	22910	compiler
O	22911	22920	complains
O	22921	22926	about
O	22927	22930	the
O	22931	22935	code
O	22936	22946	underneath
O	22947	22950	the
O	22951	22955	loop
O	22956	22959	and
O	22960	22965	flags
O	22966	22968	it
O	22969	22973	with
O	22974	22985	Unreachable
O	22986	22996	Statements
O	22997	22998	.

O	22999	23003	Your
O	23004	23010	second
O	23011	23015	case
O	23016	23018	is
O	23019	23025	pretty
O	23026	23041	straightforward
O	23042	23045	and
O	23046	23050	this
O	23051	23057	answer
O	23058	23060	is
O	23061	23068	already
O	23069	23072	too
O	23073	23077	long
O	23077	23078	.
O	23078	23079	.
O	23079	23080	.

O	23081	23082	;
O	23082	23083	)
O	23084	23094	CORRECTION
O	23094	23095	:
O	23096	23101	After
O	23102	23109	another
O	23110	23118	analysis
O	23119	23120	I
O	23121	23128	believe
O	23129	23133	that
O	23134	23135	I
O	23136	23139	was
O	23140	23145	wrong
O	23146	23148	to
O	23149	23152	say
O	23153	23157	that
O	23158	23159	a
O	23160	23164	null
O	23165	23170	value
O	23171	23174	can
O	23175	23177	be
O	23178	23183	boxed
O	23183	23184	/
O	23184	23193	autoboxed
O	23194	23196	to
O	23197	23205	anything
O	23205	23206	.

O	23207	23214	Talking
O	23215	23220	about
O	23221	23224	the
O	23225	23230	class
O	23231	23238	Integer
O	23238	23239	,
O	23240	23248	explicit
O	23249	23255	boxing
O	23256	23264	consists
O	23265	23267	in
O	23268	23276	invoking
O	23277	23280	the
O	23281	23284	new
B-api_mention	23285	23292	Integer
I-api_mention	23292	23293	(
I-api_mention	23293	23297	args
I-api_mention	23297	23298	)
O	23299	23310	constructor
O	23311	23313	or
O	23314	23319	maybe
O	23320	23323	the
B-api_mention	23324	23331	Integer
I-api_mention	23331	23332	.
I-api_mention	23332	23339	valueOf
I-api_mention	23339	23340	(
I-api_mention	23340	23344	args
I-api_mention	23344	23345	)
O	23345	23346	;
O	23347	23348	(
O	23348	23349	I
O	23350	23355	found
O	23356	23360	this
O	23361	23368	version
O	23369	23378	somewhere
O	23378	23379	)
O	23379	23380	.

O	23381	23384	The
O	23385	23391	former
O	23392	23397	would
O	23398	23403	throw
O	23404	23405	a
B-api_mention	23406	23427	NumberFormatException
O	23428	23429	(
O	23429	23432	and
O	23433	23437	this
O	23438	23442	does
O	23443	23446	not
O	23447	23453	happen
O	23453	23454	)
O	23455	23460	while
O	23461	23464	the
O	23465	23471	second
O	23472	23477	would
O	23478	23482	just
O	23483	23486	not
O	23487	23491	make
O	23492	23497	sense
O	23498	23503	since
O	23504	23506	an
O	23507	23510	int
O	23511	23517	cannot
O	23518	23520	be
O	23521	23525	null
O	23526	23527	.
O	23527	23528	.
O	23528	23529	.

O	23531	23539	Question
O	23539	23540	-
O	23540	23547	8430805
O	23547	23548	,
O	23549	23555	answer
O	23555	23556	-
O	23556	23564	22332291

O	23565	23573	Sudheesh
O	23574	23575	B
O	23576	23580	Nair
O	23581	23582	'
O	23582	23583	s
O	23584	23587	has
O	23588	23589	a
O	23590	23594	nice
O	23595	23596	(
O	23596	23599	and
O	23600	23608	accepted
O	23608	23609	)
O	23610	23616	answer
O	23617	23619	on
O	23620	23623	the
O	23624	23632	question
O	23632	23633	,
O	23634	23639	which
O	23640	23641	i
O	23642	23647	think
O	23648	23654	should
O	23655	23659	have
O	23660	23661	a
O	23662	23668	better
O	23669	23680	alternative
O	23681	23685	such
O	23686	23688	as
O	23688	23689	;
O	23690	23694	What
O	23694	23695	'
O	23695	23696	s
O	23697	23702	wrong
O	23703	23707	with
O	23708	23717	measuring
O	23718	23722	time
O	23723	23729	passed
O	23730	23733	and
O	23734	23742	checking
O	23743	23745	if
O	23746	23750	TIME
O	23750	23751	_
O	23751	23759	INTERVAL
O	23760	23771	miliseconds
O	23772	23773	(
O	23773	23776	say
O	23777	23781	2000
O	23781	23782	)
O	23783	23789	passed
O	23790	23795	since
O	23796	23799	the
O	23800	23804	last
O	23805	23809	back
O	23810	23815	press
O	23815	23816	.

O	23817	23820	The
O	23821	23830	following
O	23831	23837	sample
O	23838	23842	code
O	23843	23847	uses
B-api_mention	23848	23854	System
I-api_mention	23854	23855	.
I-api_mention	23855	23872	currentTimeMillis
I-api_mention	23872	23873	(
I-api_mention	23873	23877	args
I-api_mention	23877	23878	)
O	23878	23879	;
O	23880	23882	to
O	23883	23888	store
O	23889	23892	the
O	23893	23897	time
B-api_mention	23898	23911	onBackPressed
I-api_mention	23911	23912	(
I-api_mention	23912	23916	args
I-api_mention	23916	23917	)
O	23918	23920	is
O	23921	23927	called
O	23927	23928	;
O	23929	23930	#
O	23930	23933	pre
O	23934	23938	Back
O	23939	23941	on
O	23942	23950	accepted
O	23951	23957	answer
O	23958	23966	critique
O	23967	23968	;
O	23969	23974	Using
O	23975	23976	a
O	23977	23981	flag
O	23982	23984	to
O	23985	23993	indicate
O	23994	23996	if
O	23997	23999	it
O	24000	24003	was
O	24004	24011	pressed
O	24012	24014	in
O	24015	24019	last
O	24020	24024	TIME
O	24024	24025	_
O	24025	24033	INTERVAL
O	24034	24035	(
O	24035	24038	say
O	24039	24043	2000
O	24043	24044	)
O	24045	24057	milliseconds
O	24058	24061	and
O	24062	24065	set
O	24066	24067	-
O	24068	24073	reset
O	24074	24076	is
O	24077	24080	via
B-api_mention	24081	24088	Handler
O	24089	24090	'
O	24090	24091	s
B-api_mention	24092	24103	postDelayed
I-api_mention	24103	24104	(
I-api_mention	24104	24108	args
I-api_mention	24108	24109	)
O	24110	24116	method
O	24117	24120	was
O	24121	24124	the
O	24125	24130	first
O	24131	24136	thing
O	24137	24139	to
O	24140	24144	come
O	24145	24147	in
O	24148	24150	my
O	24151	24155	mind
O	24155	24156	.

O	24157	24160	But
O	24161	24164	the
B-api_mention	24165	24176	postDelayed
I-api_mention	24176	24177	(
I-api_mention	24177	24181	args
I-api_mention	24181	24182	)
O	24183	24189	action
O	24190	24196	should
O	24197	24199	be
O	24200	24209	cancelled
O	24210	24214	when
O	24215	24223	activity
O	24224	24226	is
O	24227	24234	closing
O	24234	24235	,
O	24236	24244	removing
O	24245	24248	the
B-api_mention	24249	24257	Runnable
O	24258	24259	.

O	24260	24262	In
O	24263	24268	order
O	24269	24271	to
O	24272	24278	remove
O	24279	24282	the
B-api_mention	24283	24291	Runnable
O	24292	24293	,
O	24294	24296	it
O	24297	24301	must
O	24302	24305	not
O	24306	24308	be
O	24309	24317	declared
O	24318	24327	anonymous
O	24328	24329	,
O	24330	24333	and
O	24334	24336	be
O	24337	24345	declared
O	24346	24348	as
O	24349	24355	member
O	24356	24361	along
O	24362	24366	with
O	24367	24370	the
B-api_mention	24371	24378	Handler
O	24379	24385	aswell
O	24385	24386	.

O	24387	24391	Then
B-api_mention	24392	24407	removeCallbacks
I-api_mention	24407	24408	(
I-api_mention	24408	24412	args
I-api_mention	24412	24413	)
O	24414	24420	method
O	24421	24423	of
B-api_mention	24424	24431	Handler
O	24432	24435	can
O	24436	24438	be
O	24439	24445	called
O	24446	24459	appropriately
O	24459	24460	.

O	24461	24464	The
O	24465	24474	following
O	24475	24481	sample
O	24482	24484	is
O	24485	24488	the
O	24489	24502	demonstration
O	24502	24503	;
O	24504	24505	#
O	24505	24508	pre
O	24509	24515	Thanks
O	24516	24518	to
O	24519	24520	@
O	24520	24526	NSouth
O	24527	24530	for
O	24531	24543	contributing
O	24543	24544	;
O	24545	24547	In
O	24548	24553	order
O	24554	24556	to
O	24557	24564	prevent
O	24565	24570	toast
O	24571	24578	message
O	24579	24588	appearing
O	24589	24593	even
O	24594	24599	after
O	24600	24603	the
O	24604	24615	application
O	24616	24618	is
O	24619	24625	closed
O	24625	24626	,
O	24627	24632	Toast
O	24633	24636	can
O	24637	24639	be
O	24640	24648	declared
O	24649	24651	as
O	24652	24653	a
O	24654	24660	member
O	24661	24662	-
O	24663	24666	say
O	24667	24677	mExitToast
O	24678	24679	-
O	24680	24683	and
O	24684	24687	can
O	24688	24690	be
O	24691	24700	cancelled
O	24701	24704	via
O	24705	24715	mExitToast
B-api_mention	24715	24716	.
I-api_mention	24716	24722	cancel
I-api_mention	24722	24723	(
I-api_mention	24723	24727	args
I-api_mention	24727	24728	)
O	24728	24729	;
O	24730	24734	just
O	24735	24741	before
O	24742	24747	super
B-api_mention	24747	24748	.
I-api_mention	24748	24761	onBackPressed
I-api_mention	24761	24762	(
I-api_mention	24762	24766	args
I-api_mention	24766	24767	)
O	24767	24768	;
O	24769	24773	call
O	24773	24774	.

O	24776	24784	Question
O	24784	24785	-
O	24785	24792	6667243
O	24792	24793	,
O	24794	24800	answer
O	24800	24801	-
O	24801	24808	6667307

O	24809	24814	mode1
B-api_mention	24814	24815	.
I-api_mention	24815	24819	name
I-api_mention	24819	24820	(
I-api_mention	24820	24824	args
I-api_mention	24824	24825	)
O	24826	24828	or
B-api_mention	24829	24835	String
I-api_mention	24835	24836	.
I-api_mention	24836	24843	valueOf
I-api_mention	24843	24844	(
I-api_mention	24844	24848	args
I-api_mention	24848	24849	)
O	24850	24851	.

O	24852	24854	It
O	24855	24860	doesn
O	24860	24861	'
O	24861	24862	t
O	24863	24866	get
O	24867	24873	better
O	24874	24878	than
O	24879	24883	that
O	24883	24884	,
O	24885	24886	I
O	24886	24887	'
O	24887	24888	m
O	24889	24895	afraid

O	24897	24905	Question
O	24905	24906	-
O	24906	24913	6667243
O	24913	24914	,
O	24915	24921	answer
O	24921	24922	-
O	24922	24929	6667310

O	24930	24933	You
O	24934	24937	can
O	24938	24941	use
O	24942	24946	Mode
O	24946	24947	.
O	24947	24952	mode1
B-api_mention	24952	24953	.
I-api_mention	24953	24957	name
I-api_mention	24957	24958	(
I-api_mention	24958	24962	args
I-api_mention	24962	24963	)
O	24964	24971	however
O	24972	24975	you
O	24976	24981	often
O	24982	24985	don
O	24985	24986	'
O	24986	24987	t
O	24988	24992	need
O	24993	24995	to
O	24996	24998	do
O	24999	25003	this
O	25003	25004	.

O	25005	25009	Mode
O	25010	25014	mode
O	25015	25016	=
B-api_mention	25017	25023	System
I-api_mention	25023	25024	.
I-api_mention	25024	25027	out
I-api_mention	25027	25028	.
I-api_mention	25028	25035	println
I-api_mention	25035	25036	(
I-api_mention	25036	25040	args
I-api_mention	25040	25041	)
O	25041	25042	;

O	25044	25052	Question
O	25052	25053	-
O	25053	25060	6667243
O	25060	25061	,
O	25062	25068	answer
O	25068	25069	-
O	25069	25076	6667354

O	25077	25081	Enum
O	25082	25084	is
O	25085	25089	just
O	25090	25091	a
O	25092	25098	little
O	25099	25102	bit
O	25103	25110	special
O	25111	25116	class
O	25116	25117	.

O	25118	25123	Enums
O	25124	25127	can
O	25128	25133	store
O	25134	25144	additional
O	25145	25151	fields
O	25151	25152	,
O	25153	25162	implement
O	25163	25170	methods
O	25171	25174	etc
O	25174	25175	.

O	25176	25179	For
O	25180	25187	example
O	25188	25189	#
O	25189	25192	pre
O	25193	25196	Now
O	25197	25200	you
O	25201	25204	can
O	25205	25208	say
O	25208	25209	:
B-api_mention	25210	25216	System
I-api_mention	25216	25217	.
I-api_mention	25217	25220	out
I-api_mention	25220	25221	.
I-api_mention	25221	25228	println
I-api_mention	25228	25229	(
I-api_mention	25229	25233	args
I-api_mention	25233	25234	)
O	25235	25238	and
O	25239	25242	see
O	25243	25249	output
O	25249	25250	:
O	25251	25252	a

O	25254	25262	Question
O	25262	25263	-
O	25263	25270	6667243
O	25270	25271	,
O	25272	25278	answer
O	25278	25279	-
O	25279	25287	25575077

O	25288	25291	You
O	25292	25297	could
O	25298	25306	override
O	25307	25310	the
B-api_mention	25311	25319	toString
I-api_mention	25319	25320	(
I-api_mention	25320	25324	args
I-api_mention	25324	25325	)
O	25326	25332	method
O	25333	25336	for
O	25337	25341	each
O	25342	25346	enum
O	25347	25352	value
O	25352	25353	.

O	25354	25361	Example
O	25361	25362	:
O	25363	25364	#
O	25364	25367	pre
O	25368	25373	Usage
O	25373	25374	:
O	25375	25376	#
O	25376	25379	pre

O	25381	25389	Question
O	25389	25390	-
O	25390	25397	8275499
O	25397	25398	,
O	25399	25405	answer
O	25405	25406	-
O	25406	25413	8275508

O	25414	25418	Just
O	25419	25422	use
O	25423	25435	TheClassName
O	25435	25436	.
O	25436	25441	class
O	25442	25449	instead
O	25450	25452	of
B-api_mention	25453	25461	getClass
I-api_mention	25461	25462	(
I-api_mention	25462	25466	args
I-api_mention	25466	25467	)
O	25468	25469	.

O	25471	25479	Question
O	25479	25480	-
O	25480	25487	8275499
O	25487	25488	,
O	25489	25495	answer
O	25495	25496	-
O	25496	25503	8275761

B-api_mention	25504	25512	getClass
I-api_mention	25512	25513	(
I-api_mention	25513	25517	args
I-api_mention	25517	25518	)
O	25519	25525	method
O	25526	25528	is
O	25529	25536	defined
O	25537	25539	in
B-api_mention	25540	25546	Object
O	25547	25552	class
O	25553	25557	with
O	25558	25561	the
O	25562	25571	following
O	25572	25581	signature
O	25581	25582	:
O	25583	25584	#
O	25584	25594	blockquote
O	25595	25600	Since
O	25601	25603	it
O	25604	25606	is
O	25607	25610	not
O	25611	25618	defined
O	25619	25621	as
O	25622	25628	static
O	25629	25630	,
O	25631	25634	you
O	25635	25638	can
O	25639	25642	not
O	25643	25647	call
O	25648	25650	it
O	25651	25657	within
O	25658	25659	a
O	25660	25666	static
O	25667	25671	code
O	25672	25677	block
O	25677	25678	.

O	25679	25682	See
O	25683	25688	these
O	25689	25696	answers
O	25697	25700	for
O	25701	25705	more
O	25706	25717	information
O	25717	25718	:
O	25719	25721	Q1
O	25722	25723	,
O	25724	25726	Q2
O	25727	25728	,
O	25729	25731	Q3
O	25732	25733	.

O	25734	25736	If
O	25737	25740	you
O	25740	25741	'
O	25741	25743	re
O	25744	25746	in
O	25747	25748	a
O	25749	25755	static
O	25756	25763	context
O	25763	25764	,
O	25765	25769	then
O	25770	25773	you
O	25774	25778	have
O	25779	25781	to
O	25782	25785	use
O	25786	25789	the
O	25790	25795	class
O	25796	25803	literal
O	25804	25814	expression
O	25815	25817	to
O	25818	25821	get
O	25822	25825	the
B-api_mention	25826	25831	Class
O	25831	25832	,
O	25833	25835	so
O	25836	25839	you
O	25840	25849	basically
O	25850	25854	have
O	25855	25857	to
O	25858	25860	do
O	25861	25865	like
O	25865	25866	:
O	25867	25868	#
O	25868	25878	blockquote
O	25879	25883	This
O	25884	25888	type
O	25889	25891	of
O	25892	25902	expression
O	25903	25905	is
O	25906	25912	called
B-api_mention	25913	25918	Class
O	25919	25927	Literals
O	25928	25931	and
O	25932	25936	they
O	25937	25940	are
O	25941	25950	explained
O	25951	25953	in
O	25954	25958	Java
O	25959	25967	Language
O	25968	25981	Specification
O	25982	25986	Book
O	25987	25989	as
O	25990	25997	follows
O	25997	25998	:
O	25999	26000	#
O	26000	26010	blockquote
O	26011	26014	You
O	26015	26018	can
O	26019	26023	also
O	26024	26028	find
O	26029	26040	information
O	26041	26046	about
O	26047	26051	this
O	26052	26059	subject
O	26060	26062	on
O	26063	26066	API
O	26067	26080	documentation
O	26081	26084	for
B-api_mention	26085	26090	Class
O	26090	26091	.

O	26093	26101	Question
O	26101	26102	-
O	26102	26109	8275499
O	26109	26110	,
O	26111	26117	answer
O	26117	26118	-
O	26118	26126	17397548

O	26127	26129	As
O	26130	26133	for
O	26134	26137	the
O	26138	26142	code
O	26143	26150	example
O	26151	26153	in
O	26154	26157	the
O	26158	26166	question
O	26166	26167	,
O	26168	26171	the
O	26172	26180	standard
O	26181	26189	solution
O	26190	26192	is
O	26193	26195	to
O	26196	26205	reference
O	26206	26209	the
O	26210	26215	class
O	26216	26226	explicitly
O	26227	26229	by
O	26230	26233	its
O	26234	26238	name
O	26238	26239	,
O	26240	26243	and
O	26244	26246	it
O	26247	26249	is
O	26250	26254	even
O	26255	26263	possible
O	26264	26266	to
O	26267	26269	do
O	26270	26277	without
B-api_mention	26278	26292	getClassLoader
I-api_mention	26292	26293	(
I-api_mention	26293	26297	args
I-api_mention	26297	26298	)
O	26299	26303	call
O	26303	26304	:
O	26305	26306	#
O	26306	26309	pre
O	26310	26314	This
O	26315	26323	approach
O	26324	26329	still
O	26330	26333	has
O	26334	26335	a
O	26336	26340	back
O	26341	26345	side
O	26346	26350	that
O	26351	26353	it
O	26354	26356	is
O	26357	26360	not
O	26361	26365	very
O	26366	26370	safe
O	26371	26378	against
O	26379	26383	copy
O	26383	26384	/
O	26384	26389	paste
O	26390	26396	errors
O	26397	26399	in
O	26400	26404	case
O	26405	26408	you
O	26409	26413	need
O	26414	26416	to
O	26417	26426	replicate
O	26427	26431	this
O	26432	26436	code
O	26437	26439	to
O	26440	26441	a
O	26442	26448	number
O	26449	26451	of
O	26452	26459	similar
O	26460	26467	classes
O	26467	26468	.

O	26469	26472	And
O	26473	26475	as
O	26476	26479	for
O	26480	26483	the
O	26484	26489	exact
O	26490	26498	question
O	26499	26501	in
O	26502	26505	the
O	26506	26514	headline
O	26514	26515	,
O	26516	26521	there
O	26522	26524	is
O	26525	26526	a
O	26527	26532	trick
O	26533	26539	posted
O	26540	26542	in
O	26543	26546	the
O	26547	26555	adjacent
O	26556	26562	thread
O	26563	26564	:
B-api_mention	26565	26570	Class
O	26571	26583	currentClass
O	26584	26585	=
O	26586	26589	new
B-api_mention	26590	26596	Object
I-api_mention	26596	26597	(
I-api_mention	26597	26601	args
I-api_mention	26601	26602	)
O	26603	26604	{
O	26605	26606	}
B-api_mention	26606	26607	.
I-api_mention	26607	26615	getClass
I-api_mention	26615	26616	(
I-api_mention	26616	26620	args
I-api_mention	26620	26621	)
I-api_mention	26621	26622	.
I-api_mention	26622	26639	getEnclosingClass
I-api_mention	26639	26640	(
I-api_mention	26640	26644	args
I-api_mention	26644	26645	)
O	26645	26646	;
O	26647	26649	It
O	26650	26654	uses
O	26655	26656	a
O	26657	26663	nested
O	26664	26673	anonymous
B-api_mention	26674	26680	Object
O	26681	26689	subclass
O	26690	26692	to
O	26693	26696	get
O	26697	26701	hold
O	26702	26704	of
O	26705	26708	the
O	26709	26718	execution
O	26719	26726	context
O	26726	26727	.

O	26728	26732	This
O	26733	26738	trick
O	26739	26742	has
O	26743	26744	a
O	26745	26752	benefit
O	26753	26755	of
O	26756	26761	being
O	26762	26766	copy
O	26766	26767	/
O	26767	26772	paste
O	26773	26777	safe
O	26777	26778	.
O	26778	26779	.
O	26779	26780	.

O	26781	26783	It
O	26784	26787	may
O	26788	26790	be
O	26791	26795	also
O	26796	26801	worth
O	26802	26808	noting
O	26809	26813	that
O	26814	26816	if
O	26817	26821	this
O	26822	26829	snippet
O	26830	26832	is
O	26833	26839	shaped
O	26840	26842	as
O	26843	26844	a
O	26845	26851	static
O	26852	26858	method
O	26859	26861	of
O	26862	26866	some
O	26867	26871	base
O	26872	26877	class
O	26877	26878	,
O	26879	26883	then
O	26884	26895	currenClass
O	26896	26901	value
O	26902	26906	will
O	26907	26913	always
O	26914	26916	be
O	26917	26918	a
O	26919	26928	reference
O	26929	26931	to
O	26932	26936	that
O	26937	26941	base
O	26942	26947	class
O	26948	26954	rather
O	26955	26959	than
O	26960	26962	to
O	26963	26966	any
O	26967	26975	subclass
O	26976	26980	that
O	26981	26984	may
O	26985	26987	be
O	26988	26993	using
O	26994	26998	that
O	26999	27005	method
O	27005	27006	.

O	27008	27016	Question
O	27016	27017	-
O	27017	27024	8189466
O	27024	27025	,
O	27026	27032	answer
O	27032	27033	-
O	27033	27040	8189786

O	27041	27045	Here
O	27045	27046	'
O	27046	27047	s
O	27048	27051	why
O	27051	27052	:
O	27053	27055	As
O	27056	27058	it
O	27059	27061	is
O	27062	27066	says
O	27067	27069	in
O	27070	27073	the
O	27074	27081	Javadoc
O	27081	27082	:
O	27083	27084	#
O	27084	27094	blockquote
O	27095	27099	This
O	27100	27105	check
O	27106	27108	is
O	27109	27113	done
O	27114	27116	in
O	27117	27120	the
B-api_mention	27121	27125	next
I-api_mention	27125	27126	(
I-api_mention	27126	27130	args
I-api_mention	27130	27131	)
O	27132	27138	method
O	27139	27141	of
O	27142	27145	the
O	27146	27154	iterator
O	27155	27156	(
O	27156	27158	as
O	27159	27162	you
O	27163	27166	can
O	27167	27170	see
O	27171	27173	by
O	27174	27177	the
O	27178	27188	stacktrace
O	27188	27189	)
O	27189	27190	.

O	27191	27194	But
O	27195	27197	we
O	27198	27202	will
O	27203	27208	reach
O	27209	27212	the
B-api_mention	27213	27217	next
I-api_mention	27217	27218	(
I-api_mention	27218	27222	args
I-api_mention	27222	27223	)
O	27224	27230	method
O	27231	27235	only
O	27236	27238	if
B-api_mention	27239	27246	hasNext
I-api_mention	27246	27247	(
I-api_mention	27247	27251	args
I-api_mention	27251	27252	)
O	27253	27262	delivered
O	27263	27267	true
O	27267	27268	,
O	27269	27274	which
O	27275	27277	is
O	27278	27282	what
O	27283	27285	is
O	27286	27292	called
O	27293	27295	by
O	27296	27299	the
O	27300	27303	for
O	27304	27308	each
O	27309	27311	to
O	27312	27317	check
O	27318	27320	if
O	27321	27324	the
O	27325	27333	boundary
O	27334	27336	is
O	27337	27340	met
O	27340	27341	.

O	27342	27344	In
O	27345	27349	your
O	27350	27356	remove
O	27357	27363	method
O	27363	27364	,
O	27365	27369	when
B-api_mention	27370	27377	hasNext
I-api_mention	27377	27378	(
I-api_mention	27378	27382	args
I-api_mention	27382	27383	)
O	27384	27390	checks
O	27391	27393	if
O	27394	27396	it
O	27397	27402	needs
O	27403	27405	to
O	27406	27412	return
O	27413	27420	another
O	27421	27428	element
O	27428	27429	,
O	27430	27432	it
O	27433	27437	will
O	27438	27441	see
O	27442	27446	that
O	27447	27449	it
O	27450	27458	returned
O	27459	27462	two
O	27463	27471	elements
O	27471	27472	,
O	27473	27476	and
O	27477	27480	now
O	27481	27486	after
O	27487	27490	one
O	27491	27498	element
O	27499	27502	was
O	27503	27510	removed
O	27511	27514	the
O	27515	27519	list
O	27520	27524	only
O	27525	27533	contains
O	27534	27537	two
O	27538	27546	elements
O	27546	27547	.

O	27548	27550	So
O	27551	27554	all
O	27555	27557	is
O	27558	27564	peachy
O	27565	27568	and
O	27569	27571	we
O	27572	27575	are
O	27576	27580	done
O	27581	27585	with
O	27586	27595	iterating
O	27595	27596	.

O	27597	27600	The
O	27601	27606	check
O	27607	27610	for
O	27611	27621	concurrent
O	27622	27635	modifications
O	27636	27640	does
O	27641	27644	not
O	27645	27650	occur
O	27650	27651	,
O	27652	27654	as
O	27655	27659	this
O	27660	27662	is
O	27663	27667	done
O	27668	27670	in
O	27671	27674	the
O	27675	27679	next
O	27679	27680	(
O	27680	27684	args
O	27684	27685	)
O	27686	27692	method
O	27693	27698	which
O	27699	27701	is
O	27702	27707	never
O	27708	27714	called
O	27714	27715	.

O	27716	27720	Next
O	27721	27723	we
O	27724	27727	get
O	27728	27730	to
O	27731	27734	the
O	27735	27741	second
O	27742	27746	loop
O	27746	27747	.

O	27748	27753	After
O	27754	27756	we
O	27757	27763	remove
O	27764	27767	the
O	27768	27774	second
O	27775	27781	number
O	27782	27785	the
B-api_mention	27786	27793	hasNext
O	27794	27800	method
O	27801	27805	will
O	27806	27811	check
O	27812	27817	again
O	27818	27820	if
O	27821	27824	can
O	27825	27831	return
O	27832	27836	more
O	27837	27843	values
O	27843	27844	.

O	27845	27847	It
O	27848	27851	has
O	27852	27860	returned
O	27861	27864	two
O	27865	27871	values
O	27872	27879	already
O	27879	27880	,
O	27881	27884	but
O	27885	27888	the
O	27889	27893	list
O	27894	27897	now
O	27898	27902	only
O	27903	27911	contains
O	27912	27915	one
O	27915	27916	.

O	27917	27920	But
O	27921	27924	the
O	27925	27929	code
O	27930	27934	here
O	27935	27937	is
O	27937	27938	:
O	27939	27940	#
O	27940	27943	pre
O	27944	27945	1
O	27946	27947	!
O	27947	27948	=
O	27949	27950	2
O	27950	27951	,
O	27952	27954	so
O	27955	27957	we
O	27958	27966	continue
O	27967	27969	to
O	27970	27973	the
B-api_mention	27974	27978	next
I-api_mention	27978	27979	(
I-api_mention	27979	27983	args
I-api_mention	27983	27984	)
O	27985	27991	method
O	27991	27992	,
O	27993	27998	which
O	27999	28002	now
O	28003	28011	realizes
O	28012	28016	that
O	28017	28024	someone
O	28025	28028	has
O	28029	28033	been
O	28034	28041	messing
O	28042	28046	with
O	28047	28050	the
O	28051	28055	list
O	28056	28059	and
O	28060	28065	fires
O	28066	28069	the
O	28070	28079	exception
O	28079	28080	.

O	28081	28085	Hope
O	28086	28090	that
O	28091	28097	clears
O	28098	28102	your
O	28103	28111	question
O	28112	28114	up
O	28114	28115	.

O	28117	28125	Question
O	28125	28126	-
O	28126	28133	8189466
O	28133	28134	,
O	28135	28141	answer
O	28141	28142	-
O	28142	28150	23592535

O	28151	28152	I
O	28153	28156	had
O	28157	28161	that
O	28162	28166	same
O	28167	28174	problem
O	28175	28178	but
O	28179	28181	in
O	28182	28186	case
O	28187	28191	that
O	28192	28193	I
O	28194	28197	was
O	28198	28204	adding
O	28205	28207	en
O	28208	28215	element
O	28216	28220	into
O	28221	28229	iterated
O	28230	28234	list
O	28234	28235	.

O	28236	28237	I
O	28238	28242	made
O	28243	28245	it
O	28246	28250	this
O	28251	28254	way
O	28255	28256	#
O	28256	28259	pre
O	28260	28263	Now
O	28264	28274	everything
O	28275	28279	goes
O	28280	28284	fine
O	28285	28292	because
O	28293	28296	you
O	28297	28300	don
O	28300	28301	'
O	28301	28302	t
O	28303	28309	create
O	28310	28313	any
O	28314	28322	iterator
O	28323	28327	over
O	28328	28332	your
O	28333	28337	list
O	28337	28338	,
O	28339	28342	you
O	28343	28350	iterate
O	28351	28355	over
O	28356	28358	it
O	28359	28360	"
O	28360	28368	manually
O	28368	28369	"
O	28369	28370	.

O	28371	28374	And
O	28375	28384	condition
O	28385	28386	i
O	28387	28388	<
O	28389	28400	integerList
B-api_mention	28400	28401	.
I-api_mention	28401	28405	size
I-api_mention	28405	28406	(
I-api_mention	28406	28410	args
I-api_mention	28410	28411	)
O	28412	28416	will
O	28417	28422	never
O	28423	28427	fool
O	28428	28431	you
O	28432	28439	because
O	28440	28444	when
O	28445	28448	you
O	28449	28455	remove
O	28455	28456	/
O	28456	28459	add
O	28460	28469	something
O	28470	28474	into
B-api_mention	28475	28479	List
O	28480	28484	size
O	28485	28487	of
O	28488	28491	the
B-api_mention	28492	28496	List
O	28497	28506	decrement
O	28506	28507	/
O	28507	28516	increment
O	28516	28517	.
O	28517	28518	.

O	28519	28523	Hope
O	28524	28526	it
O	28527	28532	helps
O	28532	28533	,
O	28534	28537	for
O	28538	28540	me
O	28541	28545	that
O	28546	28549	was
O	28550	28558	solution
O	28558	28559	.

O	28561	28569	Question
O	28569	28570	-
O	28570	28577	7032070
O	28577	28578	,
O	28579	28585	answer
O	28585	28586	-
O	28586	28593	7032137

O	28594	28600	Unless
O	28601	28606	there
O	28607	28609	is
O	28610	28611	a
O	28612	28620	specific
O	28621	28633	optimization
O	28634	28638	that
O	28639	28645	checks
O	28646	28648	if
O	28649	28652	the
O	28653	28661	argument
O	28662	28668	passed
O	28669	28671	to
B-api_mention	28672	28681	removeAll
I-api_mention	28681	28682	(
I-api_mention	28682	28686	args
I-api_mention	28686	28687	)
O	28688	28690	is
O	28691	28694	the
O	28695	28705	collection
O	28706	28712	itself
O	28713	28714	(
O	28714	28717	and
O	28718	28719	I
O	28720	28726	highly
O	28727	28732	doubt
O	28733	28737	that
O	28738	28742	such
O	28743	28745	an
O	28746	28758	optimization
O	28759	28761	is
O	28762	28767	there
O	28767	28768	)
O	28769	28771	it
O	28772	28776	will
O	28777	28779	be
O	28780	28793	significantly
O	28794	28800	slower
O	28801	28805	than
O	28806	28807	a
O	28808	28814	simple
B-api_mention	28815	28816	.
I-api_mention	28816	28821	clear
I-api_mention	28821	28822	(
I-api_mention	28822	28826	args
I-api_mention	28826	28827	)
O	28828	28829	.

O	28830	28835	Apart
O	28836	28840	from
O	28841	28845	that
O	28846	28847	(
O	28847	28850	and
O	28851	28853	at
O	28854	28859	least
O	28860	28867	equally
O	28868	28877	important
O	28877	28878	)
O	28878	28879	:
O	28880	28889	arraylist
B-api_mention	28889	28890	.
I-api_mention	28890	28899	removeAll
I-api_mention	28899	28900	(
I-api_mention	28900	28904	args
I-api_mention	28904	28905	)
O	28906	28908	is
O	28909	28913	just
O	28914	28920	obtuse
O	28920	28921	,
O	28922	28931	confusing
O	28932	28936	code
O	28936	28937	.

O	28938	28940	It
O	28941	28943	is
O	28944	28945	a
O	28946	28950	very
O	28951	28960	backwards
O	28961	28964	way
O	28965	28967	of
O	28968	28974	saying
O	28975	28976	"
O	28976	28981	clear
O	28982	28986	this
O	28987	28997	collection
O	28997	28998	"
O	28998	28999	.

O	29000	29004	What
O	29005	29014	advantage
O	29015	29020	would
O	29021	29023	it
O	29024	29028	have
O	29029	29033	over
O	29034	29037	the
O	29038	29042	very
O	29043	29057	understandable
O	29058	29067	arraylist
B-api_mention	29067	29068	.
I-api_mention	29068	29073	clear
I-api_mention	29073	29074	(
I-api_mention	29074	29078	args
I-api_mention	29078	29079	)
O	29080	29081	?

O	29083	29091	Question
O	29091	29092	-
O	29092	29099	7032070
O	29099	29100	,
O	29101	29107	answer
O	29107	29108	-
O	29108	29115	7032144

O	29116	29119	The
O	29120	29126	source
O	29127	29131	code
O	29132	29135	for
B-api_mention	29136	29141	clear
I-api_mention	29141	29142	(
I-api_mention	29142	29146	args
I-api_mention	29146	29147	)
O	29148	29149	:
O	29150	29151	#
O	29151	29154	pre
O	29155	29158	The
O	29159	29165	source
O	29166	29170	code
O	29171	29174	for
B-api_mention	29175	29184	removeAll
I-api_mention	29184	29185	(
I-api_mention	29185	29189	args
I-api_mention	29189	29190	)
O	29191	29192	(
O	29192	29194	As
O	29195	29202	defined
O	29203	29205	in
B-api_mention	29206	29224	AbstractCollection
O	29225	29226	)
O	29226	29227	:
O	29228	29229	#
O	29229	29232	pre
B-api_mention	29233	29238	clear
I-api_mention	29238	29239	(
I-api_mention	29239	29243	args
I-api_mention	29243	29244	)
O	29245	29247	is
O	29248	29252	much
O	29253	29259	faster
O	29260	29265	since
O	29266	29268	it
O	29269	29274	doesn
O	29274	29275	'
O	29275	29276	t
O	29277	29281	have
O	29282	29284	to
O	29285	29289	deal
O	29290	29294	with
O	29295	29298	all
O	29299	29304	those
O	29305	29310	extra
O	29311	29317	method
O	29318	29323	calls
O	29323	29324	.

O	29325	29328	And
O	29329	29331	as
O	29332	29337	Atrey
O	29338	29344	points
O	29345	29348	out
O	29348	29349	,
O	29350	29351	c
B-api_mention	29351	29352	.
I-api_mention	29352	29360	contains
I-api_mention	29360	29361	(
I-api_mention	29361	29365	args
I-api_mention	29365	29366	)
O	29367	29376	increases
O	29377	29380	the
O	29381	29385	time
O	29386	29396	complexity
O	29397	29399	of
B-api_mention	29400	29409	removeAll
O	29410	29412	to
O	29413	29414	O
O	29414	29415	(
O	29415	29416	n
O	29416	29417	^
O	29417	29418	2
O	29418	29419	)
O	29420	29422	as
O	29423	29430	opposed
O	29431	29433	to
O	29434	29439	clear
O	29440	29441	'
O	29441	29442	s
O	29443	29444	O
O	29444	29445	(
O	29445	29446	n
O	29446	29447	)
O	29447	29448	.

O	29450	29458	Question
O	29458	29459	-
O	29459	29466	7032070
O	29466	29467	,
O	29468	29474	answer
O	29474	29475	-
O	29475	29482	7032180

O	29483	29486	The
B-api_mention	29487	29492	clear
I-api_mention	29492	29493	(
I-api_mention	29493	29497	args
I-api_mention	29497	29498	)
O	29499	29505	method
O	29506	29513	removes
O	29514	29517	all
O	29518	29521	the
O	29522	29530	elements
O	29531	29533	of
O	29534	29535	a
O	29536	29542	single
B-api_mention	29543	29552	ArrayList
O	29553	29554	.

O	29555	29557	It
O	29557	29558	'
O	29558	29559	s
O	29560	29561	a
O	29562	29566	fast
O	29567	29576	operation
O	29576	29577	,
O	29578	29580	as
O	29581	29583	it
O	29584	29588	just
O	29589	29593	sets
O	29594	29598	some
O	29599	29604	array
O	29605	29613	elements
O	29614	29616	to
O	29617	29621	null
O	29622	29623	.

O	29624	29627	The
B-api_mention	29628	29637	removeAll
I-api_mention	29637	29638	(
I-api_mention	29638	29642	args
I-api_mention	29642	29643	)
O	29644	29650	method
O	29650	29651	,
O	29652	29657	which
O	29658	29660	is
O	29661	29670	inherited
O	29671	29675	from
B-api_mention	29676	29694	AbstractCollection
O	29695	29696	,
O	29697	29704	removes
O	29705	29708	all
O	29709	29712	the
O	29713	29721	elements
O	29722	29726	that
O	29727	29730	are
O	29731	29733	in
O	29734	29737	the
O	29738	29746	argument
O	29747	29757	collection
O	29758	29762	from
O	29763	29766	the
O	29767	29777	collection
O	29778	29781	you
O	29782	29786	call
O	29787	29790	the
O	29791	29797	method
O	29798	29800	on
O	29800	29801	.

O	29802	29804	It
O	29804	29805	'
O	29805	29806	s
O	29807	29808	a
O	29809	29819	relatively
O	29820	29824	slow
O	29825	29834	operation
O	29834	29835	,
O	29836	29838	as
O	29839	29841	it
O	29842	29845	has
O	29846	29848	to
O	29849	29855	search
O	29856	29863	through
O	29864	29867	one
O	29868	29870	of
O	29871	29874	the
O	29875	29886	collections
O	29887	29895	involved
O	29895	29896	.

O	29898	29906	Question
O	29906	29907	-
O	29907	29914	7032070
O	29914	29915	,
O	29916	29922	answer
O	29922	29923	-
O	29923	29930	7032208

B-api_mention	29931	29936	clear
I-api_mention	29936	29937	(
I-api_mention	29937	29941	args
I-api_mention	29941	29942	)
O	29943	29947	will
O	29948	29950	go
O	29951	29958	through
O	29959	29962	the
O	29963	29973	underlying
B-api_mention	29974	29979	Array
O	29980	29983	and
O	29984	29987	set
O	29988	29992	each
O	29993	29998	entry
O	29999	30001	to
O	30002	30006	null
O	30006	30007	;
B-api_mention	30008	30017	removeAll
I-api_mention	30017	30018	(
I-api_mention	30018	30022	args
I-api_mention	30022	30023	)
O	30024	30028	will
O	30029	30031	go
O	30032	30039	through
O	30040	30043	the
B-api_mention	30044	30053	ArrayList
O	30054	30062	checking
O	30063	30066	for
O	30067	30077	collection
O	30078	30081	and
B-api_mention	30082	30088	remove
I-api_mention	30088	30089	(
I-api_mention	30089	30093	args
I-api_mention	30093	30094	)
O	30095	30097	it
O	30098	30100	if
O	30101	30103	it
O	30104	30110	exists
O	30110	30111	.

O	30112	30113	I
O	30114	30119	would
O	30120	30127	imagine
O	30128	30132	that
B-api_mention	30133	30138	clear
I-api_mention	30138	30139	(
I-api_mention	30139	30143	args
I-api_mention	30143	30144	)
O	30145	30147	is
O	30148	30151	way
O	30152	30158	faster
O	30159	30163	then
B-api_mention	30164	30173	removeAll
O	30174	30181	because
O	30182	30184	it
O	30184	30185	'
O	30185	30186	s
O	30187	30190	not
O	30191	30200	comparing
O	30200	30201	,
O	30202	30205	etc
O	30205	30206	.

O	30208	30216	Question
O	30216	30217	-
O	30217	30224	6840803
O	30224	30225	,
O	30226	30232	answer
O	30232	30233	-
O	30233	30240	6840856

B-api_mention	30241	30257	SimpleDateFormat
O	30258	30264	stores
O	30265	30277	intermediate
O	30278	30285	results
O	30286	30288	in
O	30289	30297	instance
O	30298	30304	fields
O	30304	30305	.

O	30306	30308	So
O	30309	30311	if
O	30312	30315	one
O	30316	30324	instance
O	30325	30327	is
O	30328	30332	used
O	30333	30335	by
O	30336	30339	two
O	30340	30347	threads
O	30348	30352	they
O	30353	30356	can
O	30357	30361	mess
O	30362	30366	each
O	30367	30372	other
O	30372	30373	'
O	30373	30374	s
O	30375	30382	results
O	30382	30383	.

O	30384	30391	Looking
O	30392	30394	at
O	30395	30398	the
O	30399	30405	source
O	30406	30410	code
O	30411	30418	reveals
O	30419	30423	that
O	30424	30429	there
O	30430	30432	is
O	30433	30434	a
B-api_mention	30435	30443	Calendar
O	30444	30452	instance
O	30453	30458	field
O	30458	30459	,
O	30460	30465	which
O	30466	30468	is
O	30469	30473	used
O	30474	30476	by
O	30477	30487	operations
O	30488	30490	on
B-api_mention	30491	30501	DateFormat
O	30502	30503	/
B-api_mention	30504	30520	SimpleDateFormat
O	30521	30524	For
O	30525	30532	example
B-api_mention	30533	30538	parse
I-api_mention	30538	30539	(
I-api_mention	30539	30543	args
I-api_mention	30543	30544	)
O	30545	30550	calls
O	30551	30559	calendar
B-api_mention	30559	30560	.
I-api_mention	30560	30565	clear
I-api_mention	30565	30566	(
I-api_mention	30566	30570	args
I-api_mention	30570	30571	)
O	30572	30581	initially
O	30582	30585	and
O	30586	30590	then
O	30591	30599	calendar
B-api_mention	30599	30600	.
I-api_mention	30600	30603	add
I-api_mention	30603	30604	(
I-api_mention	30604	30608	args
I-api_mention	30608	30609	)
O	30610	30611	.

O	30612	30614	If
O	30615	30622	another
O	30623	30629	thread
O	30630	30637	invokes
B-api_mention	30638	30643	parse
I-api_mention	30643	30644	(
I-api_mention	30644	30648	args
I-api_mention	30648	30649	)
O	30650	30656	before
O	30657	30660	the
O	30661	30671	completion
O	30672	30674	of
O	30675	30678	the
O	30679	30684	first
O	30685	30695	invocation
O	30695	30696	,
O	30697	30699	it
O	30700	30704	will
O	30705	30710	clear
O	30711	30714	the
O	30715	30723	calendar
O	30723	30724	,
O	30725	30728	but
O	30729	30732	the
O	30733	30738	other
O	30739	30749	invocation
O	30750	30754	will
O	30755	30761	expect
O	30762	30764	it
O	30765	30767	to
O	30768	30770	be
O	30771	30780	populated
O	30781	30785	with
O	30786	30798	intermediate
O	30799	30806	results
O	30807	30809	of
O	30810	30813	the
O	30814	30825	calculation
O	30825	30826	.

O	30827	30830	One
O	30831	30834	way
O	30835	30837	to
O	30838	30843	reuse
O	30844	30848	date
O	30849	30856	formats
O	30857	30864	without
O	30865	30872	trading
O	30873	30879	thread
O	30879	30880	-
O	30880	30886	safety
O	30887	30889	is
O	30890	30892	to
O	30893	30896	put
O	30897	30901	them
O	30902	30904	in
O	30905	30906	a
B-api_mention	30907	30918	ThreadLocal
O	30919	30920	-
O	30921	30925	some
O	30926	30935	libraries
O	30936	30938	do
O	30939	30943	that
O	30943	30944	.

O	30945	30949	That
O	30949	30950	'
O	30950	30951	s
O	30952	30954	if
O	30955	30958	you
O	30959	30963	need
O	30964	30966	to
O	30967	30970	use
O	30971	30974	the
O	30975	30979	same
O	30980	30986	format
O	30987	30995	multiple
O	30996	31001	times
O	31002	31008	within
O	31009	31012	one
O	31013	31019	thread
O	31019	31020	.

O	31021	31024	But
O	31025	31027	in
O	31028	31032	case
O	31033	31036	you
O	31037	31040	are
O	31041	31046	using
O	31047	31048	a
O	31049	31056	servlet
O	31057	31066	container
O	31067	31068	(
O	31068	31072	that
O	31073	31076	has
O	31077	31078	a
O	31079	31085	thread
O	31086	31090	pool
O	31090	31091	)
O	31091	31092	,
O	31093	31101	remember
O	31102	31104	to
O	31105	31110	clean
O	31111	31114	the
O	31115	31121	thread
O	31121	31122	-
O	31122	31127	local
O	31128	31133	after
O	31134	31137	you
O	31138	31144	finish
O	31144	31145	.

O	31146	31148	To
O	31149	31151	be
O	31152	31158	honest
O	31158	31159	,
O	31160	31161	I
O	31162	31165	don
O	31165	31166	'
O	31166	31167	t
O	31168	31178	understand
O	31179	31182	why
O	31183	31187	they
O	31188	31192	need
O	31193	31196	the
O	31197	31205	instance
O	31206	31211	field
O	31211	31212	,
O	31213	31216	but
O	31217	31221	that
O	31221	31222	'
O	31222	31223	s
O	31224	31227	the
O	31228	31231	way
O	31232	31234	it
O	31235	31237	is
O	31237	31238	.

O	31239	31242	You
O	31243	31246	can
O	31247	31251	also
O	31252	31255	use
O	31256	31260	joda
O	31260	31261	-
O	31261	31265	time
B-api_mention	31266	31280	DateTimeFormat
O	31281	31286	which
O	31287	31289	is
O	31290	31300	threadsafe
O	31300	31301	.

O	31303	31311	Question
O	31311	31312	-
O	31312	31319	6652687
O	31319	31320	,
O	31321	31327	answer
O	31327	31328	-
O	31328	31335	6652772

O	31336	31339	Use
B-api_mention	31340	31346	String
I-api_mention	31346	31347	#
I-api_mention	31347	31351	trim
I-api_mention	31351	31352	(
I-api_mention	31352	31353	)
O	31354	31360	method
O	31361	31363	or
B-api_mention	31364	31370	String
O	31371	31381	allRemoved
O	31382	31383	=
O	31384	31392	myString
B-api_mention	31392	31393	.
I-api_mention	31393	31403	replaceAll
I-api_mention	31403	31404	(
I-api_mention	31404	31408	args
I-api_mention	31408	31409	)
O	31410	31413	for
O	31414	31418	trim
O	31419	31423	both
O	31424	31427	the
O	31428	31431	end
O	31431	31432	.

O	31433	31436	For
O	31437	31441	left
O	31442	31446	trim
O	31446	31447	:
B-api_mention	31448	31454	String
O	31455	31466	leftRemoved
O	31467	31468	=
O	31469	31477	myString
B-api_mention	31477	31478	.
I-api_mention	31478	31488	replaceAll
I-api_mention	31488	31489	(
I-api_mention	31489	31493	args
I-api_mention	31493	31494	)
O	31494	31495	;
O	31496	31499	For
O	31500	31505	right
O	31506	31510	trim
O	31510	31511	:
B-api_mention	31512	31518	String
O	31519	31531	rightRemoved
O	31532	31533	=
O	31534	31542	myString
B-api_mention	31542	31543	.
I-api_mention	31543	31553	replaceAll
I-api_mention	31553	31554	(
I-api_mention	31554	31558	args
I-api_mention	31558	31559	)
O	31559	31560	;

O	31562	31570	Question
O	31570	31571	-
O	31571	31578	7283338
O	31578	31579	,
O	31580	31586	answer
O	31586	31587	-
O	31587	31594	7283475

O	31595	31602	Because
O	31603	31606	any
O	31607	31617	particular
O	31618	31632	implementation
O	31633	31635	of
O	31636	31639	Set
O	31640	31643	may
O	31644	31646	or
O	31647	31650	may
O	31651	31654	not
O	31655	31657	be
O	31658	31664	random
O	31665	31671	access
O	31672	31673	.

O	31674	31677	You
O	31678	31681	can
O	31682	31688	always
O	31689	31692	get
O	31693	31695	an
O	31696	31704	iterator
O	31705	31708	and
O	31709	31713	step
O	31714	31721	through
O	31722	31725	the
B-api_mention	31726	31729	Set
O	31729	31730	,
O	31731	31736	using
O	31737	31740	the
O	31741	31750	iterators
O	31750	31751	'
B-api_mention	31752	31756	next
I-api_mention	31756	31757	(
I-api_mention	31757	31761	args
I-api_mention	31761	31762	)
O	31763	31769	method
O	31770	31772	to
O	31773	31779	return
O	31780	31783	the
O	31784	31790	result
O	31791	31794	you
O	31795	31799	want
O	31800	31804	once
O	31805	31808	you
O	31809	31813	find
O	31814	31817	the
O	31818	31823	equal
O	31824	31831	element
O	31831	31832	.

O	31833	31837	This
O	31838	31843	works
O	31844	31854	regardless
O	31855	31857	of
O	31858	31861	the
O	31862	31876	implementation
O	31876	31877	.

O	31878	31880	If
O	31881	31884	the
O	31885	31899	implementation
O	31900	31902	is
O	31903	31906	NOT
O	31907	31913	random
O	31914	31920	access
O	31921	31922	(
O	31922	31929	picture
O	31930	31931	a
O	31932	31938	linked
O	31938	31939	-
O	31939	31943	list
O	31944	31950	backed
B-api_mention	31951	31954	Set
O	31954	31955	)
O	31955	31956	,
O	31957	31958	a
B-api_mention	31959	31962	get
I-api_mention	31962	31963	(
I-api_mention	31963	31967	args
I-api_mention	31967	31968	)
O	31969	31975	method
O	31976	31978	in
O	31979	31982	the
O	31983	31992	interface
O	31993	31998	would
O	31999	32001	be
O	32002	32011	deceptive
O	32011	32012	,
O	32013	32018	since
O	32019	32021	it
O	32022	32027	would
O	32028	32032	have
O	32033	32035	to
O	32036	32043	iterate
O	32044	32047	the
O	32048	32058	collection
O	32059	32061	to
O	32062	32066	find
O	32067	32070	the
O	32071	32078	element
O	32079	32081	to
O	32082	32088	return
O	32088	32089	,
O	32090	32093	and
O	32094	32095	a
B-api_mention	32096	32099	get
I-api_mention	32099	32100	(
I-api_mention	32100	32104	args
I-api_mention	32104	32105	)
O	32106	32111	would
O	32112	32116	seem
O	32117	32119	to
O	32120	32125	imply
O	32126	32130	this
O	32131	32136	would
O	32137	32139	be
O	32140	32149	necessary
O	32149	32150	,
O	32151	32155	that
O	32156	32159	the
B-api_mention	32160	32163	Set
O	32164	32169	could
O	32170	32174	jump
O	32175	32183	directly
O	32184	32186	to
O	32187	32190	the
O	32191	32198	element
O	32199	32201	to
O	32202	32205	get
O	32205	32206	.

B-api_mention	32207	32215	contains
I-api_mention	32215	32216	(
I-api_mention	32216	32220	args
I-api_mention	32220	32221	)
O	32222	32225	may
O	32226	32228	or
O	32229	32232	may
O	32233	32236	not
O	32237	32241	have
O	32242	32244	to
O	32245	32247	do
O	32248	32251	the
O	32252	32256	same
O	32257	32262	thing
O	32262	32263	,
O	32264	32266	of
O	32267	32273	course
O	32273	32274	,
O	32275	32284	depending
O	32285	32287	on
O	32288	32291	the
O	32292	32306	implementation
O	32306	32307	,
O	32308	32311	but
O	32312	32315	the
O	32316	32320	name
O	32321	32326	doesn
O	32326	32327	'
O	32327	32328	t
O	32329	32333	seem
O	32334	32336	to
O	32337	32341	lend
O	32342	32348	itself
O	32349	32351	to
O	32352	32355	the
O	32356	32360	same
O	32361	32365	sort
O	32366	32368	of
O	32369	32386	misunderstandings
O	32386	32387	.

O	32389	32397	Question
O	32397	32398	-
O	32398	32405	8157755
O	32405	32406	,
O	32407	32413	answer
O	32413	32414	-
O	32414	32421	8157791

O	32422	32424	If
O	32425	32428	you
O	32429	32433	want
O	32434	32437	the
O	32438	32443	value
O	32444	32447	you
O	32448	32451	are
O	32452	32461	assigning
O	32462	32464	in
O	32465	32468	the
O	32469	32480	constructor
O	32480	32481	,
O	32482	32485	you
O	32486	32490	need
O	32491	32493	to
O	32494	32497	add
O	32498	32499	a
O	32500	32506	method
O	32507	32509	in
O	32510	32513	the
O	32514	32518	enum
O	32519	32529	definition
O	32530	32532	to
O	32533	32539	return
O	32540	32544	that
O	32545	32550	value
O	32550	32551	.

O	32552	32554	If
O	32555	32558	you
O	32559	32563	want
O	32564	32565	a
O	32566	32572	unique
O	32573	32579	number
O	32580	32584	that
O	32585	32594	represent
O	32595	32598	the
O	32599	32603	enum
O	32604	32609	value
O	32609	32610	,
O	32611	32614	you
O	32615	32618	can
O	32619	32622	use
B-api_mention	32623	32630	ordinal
I-api_mention	32630	32631	(
I-api_mention	32631	32635	args
I-api_mention	32635	32636	)
O	32637	32638	.

O	32640	32648	Question
O	32648	32649	-
O	32649	32656	6684665
O	32656	32657	,
O	32658	32664	answer
O	32664	32665	-
O	32665	32672	6684822

O	32673	32676	You
O	32677	32680	can
O	32680	32681	'
O	32681	32682	t
O	32683	32687	just
O	32688	32692	take
O	32693	32696	the
O	32697	32705	returned
O	32706	32712	string
O	32713	32716	and
O	32717	32726	construct
O	32727	32728	a
O	32729	32735	string
O	32736	32740	from
O	32741	32743	it
O	32743	32744	.
O	32744	32745	.
O	32745	32746	.

O	32747	32749	it
O	32749	32750	'
O	32750	32751	s
O	32752	32755	not
O	32756	32757	a
O	32758	32762	byte
O	32762	32763	[
O	32763	32764	]
O	32765	32769	data
O	32770	32774	type
O	32775	32782	anymore
O	32782	32783	,
O	32784	32786	it
O	32786	32787	'
O	32787	32788	s
O	32789	32796	already
O	32797	32798	a
O	32799	32805	string
O	32805	32806	;
O	32807	32810	you
O	32811	32815	need
O	32816	32818	to
O	32819	32824	parse
O	32825	32827	it
O	32827	32828	.

O	32829	32832	For
O	32833	32840	example
O	32841	32842	:
O	32843	32844	#
O	32844	32847	pre
O	32848	32849	*
O	32849	32850	*
O	32851	32855	EDIT
O	32856	32857	*
O	32857	32858	*
O	32859	32862	You
O	32863	32866	get
O	32867	32869	an
O	32870	32874	hint
O	32875	32877	of
O	32878	32882	your
O	32883	32890	problem
O	32891	32893	in
O	32894	32898	your
O	32899	32907	question
O	32907	32908	,
O	32909	32914	where
O	32915	32918	you
O	32919	32922	say
O	32923	32924	"
O	32925	32933	Whatever
O	32934	32935	I
O	32936	32940	seem
O	32941	32943	to
O	32944	32947	try
O	32948	32949	I
O	32950	32953	end
O	32954	32956	up
O	32957	32964	getting
O	32965	32966	a
O	32967	32971	byte
O	32972	32977	array
O	32978	32983	which
O	32984	32989	looks
O	32990	32992	as
O	32993	33000	follows
O	33000	33001	.
O	33001	33002	.
O	33002	33003	.

O	33004	33005	[
O	33005	33007	91
O	33007	33008	,
O	33009	33011	45
O	33011	33012	,
O	33013	33014	.
O	33014	33015	.
O	33015	33016	.

O	33017	33018	"
O	33018	33019	,
O	33020	33027	because
O	33028	33030	91
O	33031	33033	is
O	33034	33037	the
O	33038	33042	byte
O	33043	33048	value
O	33049	33052	for
O	33053	33054	[
O	33055	33056	,
O	33057	33059	so
O	33060	33061	[
O	33061	33063	91
O	33063	33064	,
O	33065	33067	45
O	33067	33068	,
O	33069	33070	.
O	33070	33071	.
O	33071	33072	.

O	33073	33075	is
O	33076	33079	the
O	33080	33084	byte
O	33085	33090	array
O	33091	33093	of
O	33094	33097	the
O	33098	33104	string
O	33105	33106	"
O	33107	33108	[
O	33108	33109	-
O	33109	33111	45
O	33111	33112	,
O	33113	33114	1
O	33114	33115	,
O	33116	33118	16
O	33118	33119	,
O	33120	33121	.
O	33121	33122	.
O	33122	33123	.

O	33124	33125	"
O	33126	33132	string
O	33132	33133	.

O	33134	33137	The
O	33138	33144	method
B-api_mention	33145	33151	Arrays
I-api_mention	33151	33152	.
I-api_mention	33152	33160	toString
I-api_mention	33160	33161	(
I-api_mention	33161	33165	args
I-api_mention	33165	33166	)
O	33167	33171	will
O	33172	33178	return
O	33179	33180	a
B-api_mention	33181	33187	String
O	33188	33202	representation
O	33203	33205	of
O	33206	33209	the
O	33210	33219	specified
O	33220	33225	array
O	33225	33226	;
O	33227	33234	meaning
O	33235	33239	that
O	33240	33243	the
O	33244	33252	returned
O	33253	33258	value
O	33259	33263	will
O	33264	33267	not
O	33268	33270	be
O	33271	33272	a
O	33273	33278	array
O	33279	33286	anymore
O	33286	33287	.

O	33288	33291	For
O	33292	33299	example
O	33300	33301	:
O	33302	33303	#
O	33303	33306	pre
O	33307	33309	As
O	33310	33313	you
O	33314	33317	can
O	33318	33321	see
O	33321	33322	,
O	33323	33325	s1
O	33326	33331	holds
O	33332	33335	the
O	33336	33342	string
O	33343	33357	representation
O	33358	33360	of
O	33361	33364	the
O	33365	33370	array
O	33371	33373	b1
O	33374	33375	,
O	33376	33381	while
O	33382	33384	s2
O	33385	33390	holds
O	33391	33394	the
O	33395	33401	string
O	33402	33416	representation
O	33417	33419	of
O	33420	33423	the
O	33424	33429	bytes
O	33430	33439	contained
O	33440	33442	in
O	33443	33445	b1
O	33446	33447	.

O	33448	33451	Now
O	33451	33452	,
O	33453	33455	in
O	33456	33460	your
O	33461	33468	problem
O	33468	33469	,
O	33470	33474	your
O	33475	33481	server
O	33482	33489	returns
O	33490	33491	a
O	33492	33498	string
O	33499	33506	similar
O	33507	33509	to
O	33510	33512	s1
O	33513	33514	,
O	33515	33524	therefore
O	33525	33527	to
O	33528	33531	get
O	33532	33535	the
O	33536	33541	array
O	33542	33556	representation
O	33557	33561	back
O	33561	33562	,
O	33563	33566	you
O	33567	33571	need
O	33572	33575	the
O	33576	33584	opposite
O	33585	33596	constructor
O	33597	33603	method
O	33603	33604	.

O	33605	33607	If
O	33608	33610	s2
B-api_mention	33610	33611	.
I-api_mention	33611	33619	getBytes
I-api_mention	33619	33620	(
I-api_mention	33620	33624	args
I-api_mention	33624	33625	)
O	33626	33628	is
O	33629	33632	the
O	33633	33641	opposite
O	33642	33644	of
O	33645	33648	new
B-api_mention	33649	33655	String
I-api_mention	33655	33656	(
I-api_mention	33656	33660	args
I-api_mention	33660	33661	)
O	33662	33663	,
O	33664	33667	you
O	33668	33672	need
O	33673	33675	to
O	33676	33680	find
O	33681	33684	the
O	33685	33693	opposite
O	33694	33696	of
B-api_mention	33697	33703	Arrays
I-api_mention	33703	33704	.
I-api_mention	33704	33712	toString
I-api_mention	33712	33713	(
I-api_mention	33713	33717	args
I-api_mention	33717	33718	)
O	33719	33720	,
O	33721	33725	thus
O	33726	33729	the
O	33730	33734	code
O	33735	33736	I
O	33737	33743	pasted
O	33744	33746	in
O	33747	33750	the
O	33751	33756	first
O	33757	33764	snippet
O	33765	33767	of
O	33768	33772	this
O	33773	33779	answer
O	33779	33780	.

O	33782	33790	Question
O	33790	33791	-
O	33791	33798	6684665
O	33798	33799	,
O	33800	33806	answer
O	33806	33807	-
O	33807	33814	6684852

O	33815	33819	What
B-api_mention	33820	33826	Arrays
I-api_mention	33826	33827	.
I-api_mention	33827	33835	toString
I-api_mention	33835	33836	(
I-api_mention	33836	33840	args
I-api_mention	33840	33841	)
O	33842	33846	does
O	33847	33849	is
O	33850	33856	create
O	33857	33858	a
O	33859	33865	string
O	33866	33880	representation
O	33881	33883	of
O	33884	33888	each
O	33889	33899	individual
O	33900	33904	byte
O	33905	33907	in
O	33908	33912	your
B-api_mention	33913	33922	byteArray
O	33922	33923	.

O	33924	33930	Please
O	33931	33936	check
O	33937	33940	the
O	33941	33944	API
O	33945	33958	documentation
B-api_mention	33959	33965	Arrays
O	33966	33969	API
O	33970	33972	To
O	33973	33980	convert
O	33981	33985	your
O	33986	33994	response
O	33995	34001	string
O	34002	34006	back
O	34007	34009	to
O	34010	34013	the
O	34014	34022	original
O	34023	34027	byte
O	34028	34033	array
O	34033	34034	,
O	34035	34038	you
O	34039	34043	have
O	34044	34046	to
O	34047	34050	use
B-api_mention	34051	34056	split
I-api_mention	34056	34057	(
I-api_mention	34057	34061	args
I-api_mention	34061	34062	)
O	34063	34065	or
O	34066	34075	something
O	34076	34079	and
O	34080	34087	convert
O	34088	34090	it
O	34091	34095	into
O	34096	34097	a
O	34098	34108	collection
O	34109	34112	and
O	34113	34117	then
O	34118	34125	convert
O	34126	34130	each
O	34131	34141	individual
O	34142	34146	item
O	34147	34149	in
O	34150	34155	there
O	34156	34158	to
O	34159	34160	a
O	34161	34165	byte
O	34166	34168	to
O	34169	34177	recreate
O	34178	34182	your
O	34183	34187	byte
O	34188	34193	array
O	34193	34194	.

O	34196	34204	Question
O	34204	34205	-
O	34205	34212	6684665
O	34212	34213	,
O	34214	34220	answer
O	34220	34221	-
O	34221	34228	6684935

O	34229	34231	If
O	34232	34235	you
O	34236	34240	want
O	34241	34243	to
O	34244	34251	convert
O	34252	34255	the
O	34256	34262	string
O	34263	34267	back
O	34268	34272	into
O	34273	34274	a
O	34275	34279	byte
O	34280	34285	array
O	34286	34289	you
O	34290	34294	will
O	34295	34299	need
O	34300	34302	to
O	34303	34306	use
B-api_mention	34307	34313	String
I-api_mention	34313	34314	.
I-api_mention	34314	34322	getBytes
I-api_mention	34322	34323	(
I-api_mention	34323	34327	args
I-api_mention	34327	34328	)
O	34329	34330	(
O	34330	34332	or
O	34333	34343	equivalent
O	34344	34350	Python
O	34351	34359	function
O	34359	34360	)
O	34361	34364	and
O	34365	34369	this
O	34370	34374	will
O	34375	34380	allow
O	34381	34384	you
O	34385	34390	print
O	34391	34394	out
O	34395	34398	the
O	34399	34407	original
O	34408	34412	byte
O	34413	34418	array
O	34418	34419	.

O	34421	34429	Question
O	34429	34430	-
O	34430	34437	6684665
O	34437	34438	,
O	34439	34445	answer
O	34445	34446	-
O	34446	34454	12685471

O	34455	34458	The
O	34459	34463	kind
O	34464	34466	of
O	34467	34473	output
O	34474	34477	you
O	34478	34481	are
O	34482	34488	seeing
O	34489	34493	from
O	34494	34498	your
O	34499	34503	byte
O	34504	34509	array
O	34510	34511	(
O	34512	34513	[
O	34513	34514	B
O	34514	34515	@
O	34515	34523	405217f8
O	34524	34525	)
O	34526	34528	is
O	34529	34533	also
O	34534	34536	an
O	34537	34543	output
O	34544	34547	for
O	34548	34549	a
O	34550	34554	zero
O	34555	34561	length
O	34562	34566	byte
O	34567	34572	array
O	34573	34574	(
O	34574	34576	ie
O	34577	34580	new
O	34581	34585	byte
O	34585	34586	[
O	34586	34587	0
O	34587	34588	]
O	34589	34590	)
O	34590	34591	.

O	34592	34594	It
O	34595	34600	looks
O	34601	34605	like
O	34606	34610	this
O	34611	34617	string
O	34618	34620	is
O	34621	34622	a
O	34623	34632	reference
O	34633	34635	to
O	34636	34639	the
O	34640	34645	array
O	34646	34652	rather
O	34653	34657	than
O	34658	34659	a
O	34660	34671	description
O	34672	34674	of
O	34675	34678	the
O	34679	34687	contents
O	34688	34690	of
O	34691	34694	the
O	34695	34700	array
O	34701	34705	like
O	34706	34708	we
O	34709	34714	might
O	34715	34721	expect
O	34722	34726	from
O	34727	34728	a
O	34729	34736	regular
O	34737	34747	collection
O	34747	34748	'
O	34748	34749	s
B-api_mention	34750	34758	toString
I-api_mention	34758	34759	(
I-api_mention	34759	34763	args
I-api_mention	34763	34764	)
O	34765	34771	method
O	34771	34772	.

O	34773	34775	As
O	34776	34780	with
O	34781	34786	other
O	34787	34798	respondents
O	34798	34799	,
O	34800	34801	I
O	34802	34807	would
O	34808	34813	point
O	34814	34817	you
O	34818	34820	to
O	34821	34824	the
B-api_mention	34825	34831	String
O	34832	34844	constructors
O	34845	34849	that
O	34850	34856	accept
O	34857	34858	a
O	34859	34863	byte
O	34863	34864	[
O	34864	34865	]
O	34866	34875	parameter
O	34876	34878	to
O	34879	34888	construct
O	34889	34890	a
O	34891	34897	string
O	34898	34902	from
O	34903	34906	the
O	34907	34915	contents
O	34916	34918	of
O	34919	34920	a
O	34921	34925	byte
O	34926	34931	array
O	34931	34932	.

O	34933	34936	You
O	34937	34943	should
O	34944	34946	be
O	34947	34951	able
O	34952	34954	to
O	34955	34959	read
O	34960	34963	raw
O	34964	34969	bytes
O	34970	34974	from
O	34975	34976	a
O	34977	34983	socket
O	34983	34984	'
O	34984	34985	s
B-api_mention	34986	34997	InputStream
O	34998	35000	if
O	35001	35004	you
O	35005	35009	want
O	35010	35012	to
O	35013	35019	obtain
O	35020	35025	bytes
O	35026	35030	from
O	35031	35032	a
O	35033	35036	TCP
O	35037	35047	connection
O	35047	35048	.

O	35049	35051	If
O	35052	35055	you
O	35056	35060	have
O	35061	35068	already
O	35069	35073	read
O	35074	35079	those
O	35080	35085	bytes
O	35086	35088	as
O	35089	35090	a
B-api_mention	35091	35097	String
O	35098	35099	(
O	35099	35104	using
O	35105	35107	an
B-api_mention	35108	35125	InputStreamReader
O	35126	35127	)
O	35127	35128	,
O	35129	35133	then
O	35133	35134	,
O	35135	35138	the
O	35139	35145	string
O	35146	35149	can
O	35150	35152	be
O	35153	35162	converted
O	35163	35165	to
O	35166	35171	bytes
O	35172	35177	using
O	35178	35181	the
B-api_mention	35182	35190	getBytes
I-api_mention	35190	35191	(
I-api_mention	35191	35195	args
I-api_mention	35195	35196	)
O	35197	35205	function
O	35205	35206	.

O	35207	35209	Be
O	35210	35214	sure
O	35215	35217	to
O	35218	35222	pass
O	35223	35225	in
O	35226	35230	your
O	35231	35238	desired
O	35239	35248	character
O	35249	35252	set
O	35253	35255	to
O	35256	35260	both
O	35261	35264	the
B-api_mention	35265	35271	String
O	35272	35283	constructor
O	35284	35287	and
B-api_mention	35288	35296	getBytes
I-api_mention	35296	35297	(
I-api_mention	35297	35301	args
I-api_mention	35301	35302	)
O	35303	35312	functions
O	35312	35313	,
O	35314	35317	and
O	35318	35322	this
O	35323	35327	will
O	35328	35332	only
O	35333	35337	work
O	35338	35340	if
O	35341	35344	the
O	35345	35349	byte
O	35350	35354	data
O	35355	35358	can
O	35359	35361	be
O	35362	35371	converted
O	35372	35374	to
O	35375	35385	characters
O	35386	35388	by
O	35389	35392	the
B-api_mention	35393	35410	InputStreamReader
O	35411	35412	.

O	35413	35415	If
O	35416	35419	you
O	35420	35424	want
O	35425	35427	to
O	35428	35432	deal
O	35433	35437	with
O	35438	35441	raw
O	35442	35447	bytes
O	35448	35451	you
O	35452	35458	should
O	35459	35465	really
O	35466	35471	avoid
O	35472	35477	using
O	35478	35482	this
O	35483	35489	stream
O	35490	35496	reader
O	35497	35502	layer
O	35502	35503	.

O	35505	35513	Question
O	35513	35514	-
O	35514	35521	7707556
O	35521	35522	,
O	35523	35529	answer
O	35529	35530	-
O	35530	35538	15870428

O	35539	35544	There
O	35545	35547	is
O	35548	35549	a
O	35550	35556	subtle
O	35557	35562	issue
O	35563	35567	here
O	35568	35572	that
O	35573	35575	is
O	35576	35577	a
O	35578	35581	bit
O	35582	35584	of
O	35585	35586	a
O	35587	35593	gotcha
O	35593	35594	.

O	35595	35598	The
B-api_mention	35599	35607	toString
I-api_mention	35607	35608	(
I-api_mention	35608	35612	args
I-api_mention	35612	35613	)
O	35614	35620	method
O	35621	35624	has
O	35625	35626	a
O	35627	35631	base
O	35632	35646	implementation
O	35647	35649	in
B-api_mention	35650	35656	Object
O	35657	35658	.

B-api_mention	35659	35671	CharSequence
O	35672	35674	is
O	35675	35677	an
O	35678	35687	interface
O	35687	35688	;
O	35689	35692	and
O	35693	35701	although
O	35702	35705	the
B-api_mention	35706	35714	toString
I-api_mention	35714	35715	(
I-api_mention	35715	35719	args
I-api_mention	35719	35720	)
O	35721	35727	method
O	35728	35735	appears
O	35736	35738	as
O	35739	35743	part
O	35744	35746	of
O	35747	35751	that
O	35752	35761	interface
O	35761	35762	,
O	35763	35768	there
O	35769	35771	is
O	35772	35779	nothing
O	35780	35782	at
O	35783	35790	compile
O	35790	35791	-
O	35791	35795	time
O	35796	35800	that
O	35801	35805	will
O	35806	35811	force
O	35812	35815	you
O	35816	35818	to
O	35819	35827	override
O	35828	35830	it
O	35831	35834	and
O	35835	35840	honor
O	35841	35844	the
O	35845	35855	additional
O	35856	35867	constraints
O	35868	35872	that
O	35873	35876	the
B-api_mention	35877	35889	CharSequence
I-api_mention	35890	35898	toString
I-api_mention	35898	35899	(
I-api_mention	35899	35903	args
I-api_mention	35903	35904	)
O	35905	35911	method
O	35911	35912	'
O	35912	35913	s
O	35914	35921	javadoc
O	35922	35926	puts
O	35927	35929	on
O	35930	35933	the
B-api_mention	35934	35942	toString
I-api_mention	35942	35943	(
I-api_mention	35943	35947	args
I-api_mention	35947	35948	)
O	35949	35955	method
O	35955	35956	;
O	35957	35959	ie
O	35960	35964	that
O	35965	35967	it
O	35968	35974	should
O	35975	35981	return
O	35982	35983	a
O	35984	35990	string
O	35991	36001	containing
O	36002	36005	the
O	36006	36016	characters
O	36017	36019	in
O	36020	36023	the
O	36024	36029	order
O	36030	36038	returned
O	36039	36041	by
B-api_mention	36042	36048	charAt
I-api_mention	36048	36049	(
I-api_mention	36049	36053	args
I-api_mention	36053	36054	)
O	36055	36056	.

O	36057	36061	Your
O	36062	36065	IDE
O	36066	36069	won
O	36069	36070	'
O	36070	36071	t
O	36072	36076	even
O	36077	36081	help
O	36082	36085	you
O	36086	36089	out
O	36090	36092	by
O	36093	36102	reminding
O	36103	36107	that
O	36108	36111	you
O	36112	36116	that
O	36117	36120	you
O	36121	36129	probably
O	36130	36136	should
O	36137	36145	override
B-api_mention	36146	36154	toString
I-api_mention	36154	36155	(
I-api_mention	36155	36159	args
I-api_mention	36159	36160	)
O	36161	36162	.

O	36163	36166	For
O	36167	36174	example
O	36174	36175	,
O	36176	36178	in
O	36179	36187	intellij
O	36187	36188	,
O	36189	36193	this
O	36194	36196	is
O	36197	36201	what
O	36202	36205	you
O	36205	36206	'
O	36206	36208	ll
O	36209	36212	see
O	36213	36215	if
O	36216	36219	you
O	36220	36226	create
O	36227	36228	a
O	36229	36232	new
B-api_mention	36233	36245	CharSequence
O	36246	36260	implementation
O	36260	36261	:
O	36262	36263	#
O	36263	36264	a
O	36265	36266	.

O	36267	36271	Note
O	36272	36275	the
O	36276	36283	absence
O	36284	36286	of
B-api_mention	36287	36295	toString
I-api_mention	36295	36296	(
I-api_mention	36296	36300	args
O	36300	36301	)
O	36302	36303	.

O	36304	36306	If
O	36307	36310	you
O	36311	36315	rely
O	36316	36318	on
B-api_mention	36319	36327	toString
I-api_mention	36327	36328	(
I-api_mention	36328	36332	args
O	36332	36333	)
O	36334	36336	on
O	36337	36339	an
O	36340	36349	arbitrary
B-api_mention	36350	36362	CharSequence
O	36363	36364	,
O	36365	36367	it
O	36368	36374	should
O	36375	36379	work
O	36380	36388	provided
O	36389	36392	the
B-api_mention	36393	36405	CharSequence
O	36406	36417	implementer
O	36418	36421	did
O	36422	36427	their
O	36428	36431	job
O	36432	36440	properly
O	36440	36441	.

O	36442	36445	But
O	36446	36448	if
O	36449	36452	you
O	36453	36457	want
O	36458	36460	to
O	36461	36466	avoid
O	36467	36470	any
O	36471	36482	uncertainty
O	36483	36493	altogether
O	36493	36494	,
O	36495	36498	you
O	36499	36505	should
O	36506	36509	use
O	36510	36511	a
B-api_mention	36512	36525	StringBuilder
O	36526	36529	and
B-api_mention	36530	36536	append
I-api_mention	36536	36537	(
I-api_mention	36537	36541	args
I-api_mention	36541	36542	)
O	36543	36544	,
O	36545	36549	like
O	36550	36552	so
O	36552	36553	:
O	36554	36555	#
O	36555	36558	pre

O	36560	36568	Question
O	36568	36569	-
O	36569	36576	8579657
O	36576	36577	,
O	36578	36584	answer
O	36584	36585	-
O	36585	36592	8579702

O	36593	36595	If
O	36596	36599	you
O	36600	36604	just
O	36605	36611	invoke
B-api_mention	36612	36615	run
I-api_mention	36615	36616	(
I-api_mention	36616	36620	args
I-api_mention	36620	36621	)
O	36622	36630	directly
O	36630	36631	,
O	36632	36634	it
O	36634	36635	'
O	36635	36636	s
O	36637	36645	executed
O	36646	36648	on
O	36649	36652	the
O	36653	36660	calling
O	36661	36667	thread
O	36667	36668	,
O	36669	36673	just
O	36674	36678	like
O	36679	36682	any
O	36683	36688	other
O	36689	36695	method
O	36696	36700	call
O	36700	36701	.

B-api_mention	36702	36708	Thread
I-api_mention	36708	36709	.
I-api_mention	36709	36714	start
I-api_mention	36714	36715	(
I-api_mention	36715	36719	args
I-api_mention	36719	36720	)
O	36721	36723	is
O	36724	36732	required
O	36733	36735	to
O	36736	36744	actually
O	36745	36751	create
O	36752	36753	a
O	36754	36757	new
O	36758	36764	thread
O	36765	36767	so
O	36768	36772	that
O	36773	36776	the
O	36777	36785	runnable
O	36785	36786	'
O	36786	36787	s
O	36788	36791	run
O	36792	36798	method
O	36799	36801	is
O	36802	36810	executed
O	36811	36813	in
O	36814	36822	parallel
O	36822	36823	.

O	36825	36833	Question
O	36833	36834	-
O	36834	36841	8579657
O	36841	36842	,
O	36843	36849	answer
O	36849	36850	-
O	36850	36857	8641412

B-api_mention	36858	36864	Thread
I-api_mention	36864	36865	.
I-api_mention	36865	36870	start
I-api_mention	36870	36871	(
I-api_mention	36871	36875	args
I-api_mention	36875	36876	)
O	36877	36881	code
O	36882	36891	registers
O	36892	36895	the
B-api_mention	36896	36902	Thread
O	36903	36907	with
O	36908	36917	scheduler
O	36918	36921	and
O	36922	36925	the
O	36926	36935	scheduler
O	36936	36941	calls
O	36942	36945	the
B-api_mention	36946	36949	run
I-api_mention	36949	36950	(
I-api_mention	36950	36954	args
I-api_mention	36954	36955	)
O	36956	36962	method
O	36962	36963	.

O	36964	36968	Also
O	36968	36969	,
B-api_mention	36970	36976	Thread
O	36977	36979	is
O	36980	36985	class
O	36986	36991	while
B-api_mention	36992	37000	Runnable
O	37001	37003	is
O	37004	37006	an
O	37007	37016	interface
O	37016	37017	.

O	37019	37027	Question
O	37027	37028	-
O	37028	37035	8579657
O	37035	37036	,
O	37037	37043	answer
O	37043	37044	-
O	37044	37052	13134221

O	37053	37061	Actually
B-api_mention	37062	37068	Thread
I-api_mention	37068	37069	.
I-api_mention	37069	37074	start
I-api_mention	37074	37075	(
I-api_mention	37075	37079	args
I-api_mention	37079	37080	)
O	37081	37088	creates
O	37089	37090	a
O	37091	37094	new
O	37095	37101	thread
O	37102	37105	and
O	37106	37110	have
O	37111	37114	its
O	37115	37118	own
O	37119	37128	execution
O	37129	37137	scenario
O	37137	37138	.

B-api_mention	37139	37145	Thread
I-api_mention	37145	37146	.
I-api_mention	37146	37151	start
I-api_mention	37151	37152	(
I-api_mention	37152	37156	args
I-api_mention	37156	37157	)
O	37158	37163	calls
O	37164	37167	the
B-api_mention	37168	37171	run
I-api_mention	37171	37172	(
I-api_mention	37172	37176	args
I-api_mention	37176	37177	)
O	37178	37184	method
O	37185	37199	asynchronously
O	37199	37200	,
O	37200	37205	which
O	37206	37213	changes
O	37214	37217	the
O	37218	37223	state
O	37224	37226	of
O	37227	37230	new
B-api_mention	37231	37237	Thread
O	37238	37240	to
B-api_mention	37241	37249	Runnable
O	37249	37250	.

O	37251	37254	But
B-api_mention	37255	37261	Thread
I-api_mention	37261	37262	.
I-api_mention	37262	37265	run
I-api_mention	37265	37266	(
I-api_mention	37266	37270	args
I-api_mention	37270	37271	)
O	37272	37276	does
O	37277	37280	not
O	37281	37287	create
O	37288	37291	any
O	37292	37295	new
O	37296	37302	thread
O	37302	37303	.

O	37304	37311	Instead
O	37312	37314	it
O	37315	37322	execute
O	37323	37326	the
O	37327	37330	run
O	37331	37337	method
O	37338	37340	in
O	37341	37344	the
O	37345	37352	current
O	37353	37360	running
O	37361	37367	thread
O	37368	37381	synchronously
O	37381	37382	.

O	37383	37385	If
O	37386	37389	you
O	37390	37393	are
O	37394	37399	using
B-api_mention	37400	37406	Thread
I-api_mention	37406	37407	.
I-api_mention	37407	37410	run
I-api_mention	37410	37411	(
I-api_mention	37411	37415	args
I-api_mention	37415	37416	)
O	37417	37421	then
O	37422	37425	you
O	37426	37429	are
O	37430	37433	not
O	37434	37439	using
O	37440	37443	the
O	37444	37452	features
O	37453	37455	of
O	37456	37461	multi
O	37462	37471	threading
O	37472	37474	at
O	37475	37478	all
O	37478	37479	.

O	37481	37489	Question
O	37489	37490	-
O	37490	37497	8579657
O	37497	37498	,
O	37499	37505	answer
O	37505	37506	-
O	37506	37514	19629304

O	37515	37517	If
O	37518	37521	you
O	37522	37524	do
B-api_mention	37525	37528	run
I-api_mention	37528	37529	(
I-api_mention	37529	37533	args
I-api_mention	37533	37534	)
O	37535	37537	in
O	37538	37542	main
O	37543	37549	method
O	37549	37550	,
O	37551	37554	the
O	37555	37561	thread
O	37562	37564	of
O	37565	37569	main
O	37570	37576	method
O	37577	37581	will
O	37582	37588	invoke
O	37589	37592	the
O	37593	37596	run
O	37597	37603	method
O	37604	37611	instead
O	37612	37614	of
O	37615	37618	the
O	37619	37625	thread
O	37626	37629	you
O	37630	37637	require
O	37638	37640	to
O	37641	37644	run
O	37644	37645	.

O	37646	37649	The
B-api_mention	37650	37655	start
I-api_mention	37655	37656	(
I-api_mention	37656	37660	args
I-api_mention	37660	37661	)
O	37662	37668	method
O	37669	37676	creates
O	37677	37680	new
O	37681	37687	thread
O	37688	37691	and
O	37692	37695	for
O	37696	37701	which
O	37702	37705	the
B-api_mention	37706	37709	run
I-api_mention	37709	37710	(
I-api_mention	37710	37714	args
I-api_mention	37714	37715	)
O	37716	37722	method
O	37723	37726	has
O	37727	37729	to
O	37730	37732	be
O	37733	37737	done

O	37739	37747	Question
O	37747	37748	-
O	37748	37755	8579657
O	37755	37756	,
O	37757	37763	answer
O	37763	37764	-
O	37764	37772	26159918

O	37773	37779	invoke
B-api_mention	37780	37783	run
I-api_mention	37783	37784	(
I-api_mention	37784	37788	args
I-api_mention	37788	37789	)
O	37790	37792	is
O	37793	37802	executing
O	37803	37805	on
O	37806	37809	the
O	37810	37817	calling
O	37818	37824	thread
O	37824	37825	,
O	37826	37830	like
O	37831	37834	any
O	37835	37840	other
O	37841	37847	method
O	37848	37852	call
O	37852	37853	.
O	37854	37861	whereas
B-api_mention	37862	37868	Thread
I-api_mention	37868	37869	.
I-api_mention	37869	37874	start
I-api_mention	37874	37875	(
I-api_mention	37875	37879	args
I-api_mention	37879	37880	)
O	37881	37888	creates
O	37889	37890	a
O	37891	37894	new
O	37895	37901	thread
O	37901	37902	.
O	37903	37911	invoking
B-api_mention	37912	37915	run
I-api_mention	37915	37916	(
I-api_mention	37916	37920	args
I-api_mention	37920	37921	)
O	37922	37924	is
O	37925	37926	a
O	37927	37939	programmatic
O	37940	37943	bug
O	37943	37944	.

O	37946	37954	Question
O	37954	37955	-
O	37955	37962	8579657
O	37962	37963	,
O	37964	37970	answer
O	37970	37971	-
O	37971	37979	33375616

O	37980	37984	Most
O	37985	37987	of
O	37988	37993	these
O	37994	38001	answers
O	38002	38006	miss
O	38007	38010	the
O	38011	38014	big
O	38015	38022	picture
O	38022	38023	,
O	38024	38029	which
O	38030	38032	is
O	38033	38037	that
O	38037	38038	,
O	38039	38041	as
O	38042	38045	far
O	38046	38048	as
O	38049	38052	the
O	38053	38057	Java
O	38058	38066	language
O	38067	38069	is
O	38070	38079	concerned
O	38079	38080	,
O	38081	38086	there
O	38087	38089	is
O	38090	38092	no
O	38093	38097	more
O	38098	38108	difference
O	38109	38116	between
O	38117	38118	t
B-api_mention	38118	38119	.
I-api_mention	38119	38124	start
I-api_mention	38124	38125	(
I-api_mention	38125	38129	args
I-api_mention	38129	38130	)
O	38131	38134	and
O	38135	38136	r
B-api_mention	38136	38137	.
I-api_mention	38137	38140	run
I-api_mention	38140	38141	(
I-api_mention	38141	38145	args
I-api_mention	38145	38146	)
O	38147	38151	than
O	38152	38157	there
O	38158	38160	is
O	38161	38168	between
O	38169	38172	any
O	38173	38178	other
O	38179	38182	two
O	38183	38190	methods
O	38190	38191	.

O	38192	38196	They
O	38196	38197	'
O	38197	38199	re
O	38200	38204	both
O	38205	38209	just
O	38210	38217	methods
O	38217	38218	.

O	38219	38223	They
O	38224	38228	both
O	38229	38232	run
O	38233	38235	in
O	38236	38239	the
O	38240	38246	thread
O	38247	38251	that
O	38252	38258	called
O	38259	38263	them
O	38264	38265	.

O	38266	38270	They
O	38271	38275	both
O	38276	38278	do
O	38279	38287	whatever
O	38288	38292	they
O	38293	38297	were
O	38298	38303	coded
O	38304	38306	to
O	38307	38309	do
O	38309	38310	,
O	38311	38314	and
O	38315	38319	then
O	38320	38324	they
O	38325	38329	both
O	38330	38336	return
O	38336	38337	,
O	38338	38343	still
O	38344	38346	in
O	38347	38350	the
O	38351	38355	same
O	38356	38362	thread
O	38362	38363	,
O	38364	38366	to
O	38367	38372	their
O	38373	38380	callers
O	38380	38381	.

O	38382	38385	The
O	38386	38393	biggest
O	38394	38404	difference
O	38405	38407	is
O	38408	38412	that
O	38413	38417	most
O	38418	38420	of
O	38421	38424	the
O	38425	38429	code
O	38430	38433	for
O	38434	38435	t
B-api_mention	38435	38436	.
I-api_mention	38436	38441	start
I-api_mention	38441	38442	(
I-api_mention	38442	38446	args
I-api_mention	38446	38447	)
O	38448	38450	is
O	38451	38457	native
O	38458	38462	code
O	38463	38468	while
O	38468	38469	,
O	38470	38472	in
O	38473	38477	most
O	38478	38483	cases
O	38483	38484	,
O	38485	38488	the
O	38489	38493	code
O	38494	38497	for
O	38498	38499	r
B-api_mention	38499	38500	.
I-api_mention	38500	38503	run
I-api_mention	38503	38504	(
I-api_mention	38504	38508	args
I-api_mention	38508	38509	)
O	38510	38512	is
O	38513	38518	going
O	38519	38521	to
O	38522	38524	be
O	38525	38529	pure
O	38530	38534	Java
O	38534	38535	.

O	38536	38539	But
O	38540	38544	that
O	38544	38545	'
O	38545	38546	s
O	38547	38550	not
O	38551	38555	much
O	38556	38558	of
O	38559	38560	a
O	38561	38571	difference
O	38571	38572	.

O	38573	38577	Code
O	38578	38580	is
O	38581	38585	code
O	38585	38586	.

O	38587	38593	Native
O	38594	38598	code
O	38599	38601	is
O	38602	38608	harder
O	38609	38611	to
O	38612	38616	find
O	38616	38617	,
O	38618	38621	and
O	38622	38628	harder
O	38629	38631	to
O	38632	38642	understand
O	38643	38647	when
O	38648	38651	you
O	38652	38656	find
O	38657	38659	it
O	38659	38660	,
O	38661	38664	but
O	38665	38667	it
O	38667	38668	'
O	38668	38669	s
O	38670	38675	still
O	38676	38680	just
O	38681	38685	code
O	38686	38690	that
O	38691	38696	tells
O	38697	38700	the
O	38701	38709	computer
O	38710	38714	what
O	38715	38717	to
O	38718	38720	do
O	38720	38721	.

O	38722	38724	So
O	38724	38725	,
O	38726	38730	what
O	38731	38735	does
O	38736	38737	t
B-api_mention	38737	38738	.
I-api_mention	38738	38743	start
I-api_mention	38743	38744	(
I-api_mention	38744	38748	args
I-api_mention	38748	38749	)
O	38750	38752	do
O	38752	38753	?

O	38754	38756	It
O	38757	38764	creates
O	38765	38766	a
O	38767	38770	new
O	38771	38777	native
O	38778	38784	thread
O	38784	38785	,
O	38786	38788	it
O	38789	38797	arranges
O	38798	38801	for
O	38802	38806	that
O	38807	38813	thread
O	38814	38816	to
O	38817	38821	call
O	38822	38823	t
B-api_mention	38823	38824	.
I-api_mention	38824	38827	run
I-api_mention	38827	38828	(
I-api_mention	38828	38832	args
I-api_mention	38832	38833	)
O	38834	38835	,
O	38836	38839	and
O	38840	38844	then
O	38845	38847	it
O	38848	38853	tells
O	38854	38857	the
O	38858	38860	OS
O	38861	38863	to
O	38864	38867	let
O	38868	38871	the
O	38872	38875	new
O	38876	38882	thread
O	38883	38886	run
O	38886	38887	.

O	38888	38892	Then
O	38893	38895	it
O	38896	38903	returns
O	38903	38904	.

O	38905	38908	And
O	38909	38913	what
O	38914	38918	does
O	38919	38920	r
B-api_mention	38920	38921	.
I-api_mention	38921	38924	run
I-api_mention	38924	38925	(
I-api_mention	38925	38929	args
I-api_mention	38929	38930	)
O	38931	38933	do
O	38933	38934	?

O	38935	38938	The
O	38939	38944	funny
O	38945	38950	thing
O	38951	38953	is
O	38953	38954	,
O	38955	38958	the
O	38959	38965	person
O	38966	38972	asking
O	38973	38977	this
O	38978	38986	question
O	38987	38989	is
O	38990	38993	the
O	38994	39000	person
O	39001	39004	who
O	39005	39010	wrote
O	39011	39013	it
O	39014	39015	.

O	39016	39017	r
B-api_mention	39017	39018	.
I-api_mention	39018	39021	run
I-api_mention	39021	39022	(
I-api_mention	39022	39026	args
I-api_mention	39026	39027	)
O	39028	39032	does
O	39033	39041	whatever
O	39042	39045	you
O	39046	39047	(
O	39047	39048	i
O	39048	39049	.
O	39049	39050	e
O	39050	39051	.
O	39051	39052	,
O	39053	39056	the
O	39057	39066	developer
O	39067	39070	who
O	39071	39076	wrote
O	39077	39079	it
O	39079	39080	)
O	39081	39089	designed
O	39090	39092	it
O	39093	39095	to
O	39096	39098	do
O	39098	39099	.

O	39100	39101	t
B-api_mention	39101	39102	.
I-api_mention	39102	39107	start
I-api_mention	39107	39108	(
I-api_mention	39108	39112	args
I-api_mention	39112	39113	)
O	39114	39116	is
O	39117	39120	the
O	39121	39127	method
O	39128	39132	that
O	39133	39136	the
O	39137	39144	library
O	39145	39153	provides
O	39154	39157	for
O	39158	39162	your
O	39163	39167	code
O	39168	39170	to
O	39171	39175	call
O	39176	39180	when
O	39181	39184	you
O	39185	39189	want
O	39190	39191	a
O	39192	39195	new
O	39196	39202	thread
O	39202	39203	.

O	39204	39205	r
B-api_mention	39205	39206	.
I-api_mention	39206	39209	run
I-api_mention	39209	39210	(
I-api_mention	39210	39214	args
I-api_mention	39214	39215	)
O	39216	39218	is
O	39219	39222	the
O	39223	39229	method
O	39230	39234	that
O	39235	39238	you
O	39239	39246	provide
O	39247	39250	for
O	39251	39254	the
O	39255	39262	library
O	39263	39265	to
O	39266	39270	call
O	39271	39273	in
O	39274	39277	the
O	39278	39281	new
O	39282	39288	thread
O	39288	39289	.

O	39291	39299	Question
O	39299	39300	-
O	39300	39307	8579657
O	39307	39308	,
O	39309	39315	answer
O	39315	39316	-
O	39316	39324	35264580

O	39325	39329	Main
O	39330	39340	difference
O	39341	39343	is
O	39344	39348	that
O	39349	39353	when
O	39354	39361	program
O	39362	39367	calls
B-api_mention	39368	39373	start
I-api_mention	39373	39374	(
I-api_mention	39374	39378	args
I-api_mention	39378	39379	)
O	39380	39386	method
O	39387	39388	a
O	39389	39392	new
B-api_mention	39393	39399	Thread
O	39400	39402	is
O	39403	39410	created
O	39411	39414	and
O	39415	39419	code
O	39420	39426	inside
B-api_mention	39427	39430	run
I-api_mention	39430	39431	(
I-api_mention	39431	39432	)
O	39433	39439	method
O	39440	39442	is
O	39443	39451	executed
O	39452	39454	in
O	39455	39458	new
B-api_mention	39459	39465	Thread
O	39466	39471	while
O	39472	39474	if
O	39475	39478	you
O	39479	39483	call
B-api_mention	39484	39487	run
I-api_mention	39487	39488	(
I-api_mention	39488	39492	args
I-api_mention	39492	39493	)
O	39494	39500	method
O	39501	39509	directly
O	39510	39512	no
O	39513	39516	new
B-api_mention	39517	39523	Thread
O	39524	39526	is
O	39527	39534	created
O	39535	39538	and
O	39539	39543	code
O	39544	39550	inside
O	39551	39554	run
O	39554	39555	(
O	39555	39556	)
O	39557	39561	will
O	39562	39569	execute
O	39570	39572	on
O	39573	39580	current
O	39581	39587	Thread
O	39588	39589	.

O	39590	39597	Another
O	39598	39608	difference
O	39609	39616	between
O	39617	39622	start
O	39623	39625	vs
O	39626	39629	run
O	39630	39632	in
O	39633	39637	Java
O	39638	39644	thread
O	39645	39647	is
O	39648	39652	that
O	39653	39656	you
O	39657	39660	can
O	39661	39664	not
O	39665	39669	call
B-api_mention	39670	39675	start
I-api_mention	39675	39676	(
I-api_mention	39676	39677	)
O	39678	39684	method
O	39685	39690	twice
O	39691	39693	on
O	39694	39700	thread
O	39701	39707	object
O	39708	39709	.
O	39710	39714	once
O	39715	39722	started
O	39722	39723	,
O	39724	39730	second
O	39731	39735	call
O	39736	39738	of
B-api_mention	39739	39744	start
I-api_mention	39744	39745	(
I-api_mention	39745	39746	)
O	39747	39751	will
O	39752	39757	throw
B-api_mention	39758	39779	IllegalStateException
O	39780	39782	in
O	39783	39787	Java
O	39788	39793	while
O	39794	39797	you
O	39798	39801	can
O	39802	39806	call
B-api_mention	39807	39810	run
I-api_mention	39810	39811	(
I-api_mention	39811	39812	)
O	39813	39819	method
O	39820	39825	twice
O	39825	39826	.

O	39828	39836	Question
O	39836	39837	-
O	39837	39844	8579657
O	39844	39845	,
O	39846	39852	answer
O	39852	39853	-
O	39853	39861	35931153

O	39862	39864	If
O	39865	39868	you
O	39869	39877	directly
O	39878	39882	call
B-api_mention	39883	39886	run
I-api_mention	39886	39887	(
I-api_mention	39887	39891	args
I-api_mention	39891	39892	)
O	39893	39899	method
O	39899	39900	,
O	39901	39904	you
O	39905	39908	are
O	39909	39912	not
O	39913	39918	using
O	39919	39924	multi
O	39924	39925	-
O	39925	39934	threading
O	39935	39942	feature
O	39943	39948	since
B-api_mention	39949	39952	run
I-api_mention	39952	39953	(
I-api_mention	39953	39957	args
I-api_mention	39957	39958	)
O	39959	39965	method
O	39966	39968	is
O	39969	39977	executed
O	39978	39980	as
O	39981	39985	part
O	39986	39988	of
O	39989	39995	caller
O	39996	40002	thread
O	40002	40003	.

O	40004	40006	If
O	40007	40010	you
O	40011	40015	call
B-api_mention	40016	40021	start
I-api_mention	40021	40022	(
I-api_mention	40022	40026	args
I-api_mention	40026	40027	)
O	40028	40034	method
O	40035	40037	on
B-api_mention	40038	40044	Thread
O	40044	40045	,
O	40046	40049	the
O	40050	40054	Java
O	40055	40062	Virtual
O	40063	40070	Machine
O	40071	40075	will
O	40076	40080	call
B-api_mention	40081	40084	run
I-api_mention	40084	40085	(
I-api_mention	40085	40086	)
O	40087	40093	method
O	40094	40097	and
O	40098	40101	two
O	40102	40109	threads
O	40110	40114	will
O	40115	40118	run
O	40119	40131	concurrently
O	40132	40133	-
O	40134	40141	Current
B-api_mention	40142	40148	Thread
O	40149	40150	(
O	40151	40155	main
O	40155	40156	(
O	40156	40160	args
O	40160	40161	)
O	40162	40164	in
O	40165	40169	your
O	40170	40177	example
O	40177	40178	)
O	40179	40182	and
O	40183	40188	Other
B-api_mention	40189	40195	Thread
O	40196	40197	(
B-api_mention	40197	40205	Runnable
O	40206	40208	r1
O	40209	40211	in
O	40212	40216	your
O	40217	40224	example
O	40224	40225	)
O	40225	40226	.

O	40227	40231	Have
O	40232	40233	a
O	40234	40238	look
O	40239	40241	at
O	40242	40248	source
O	40249	40253	code
O	40254	40256	of
B-api_mention	40257	40262	start
I-api_mention	40262	40263	(
I-api_mention	40263	40267	args
I-api_mention	40267	40268	)
O	40269	40275	method
O	40276	40278	in
B-api_mention	40279	40285	Thread
O	40286	40291	class
O	40292	40293	#
O	40293	40296	pre
O	40297	40299	In
O	40300	40305	above
O	40306	40310	code
O	40310	40311	,
O	40312	40315	you
O	40316	40319	can
O	40319	40320	'
O	40320	40321	t
O	40322	40325	see
O	40326	40336	invocation
O	40337	40339	to
B-api_mention	40340	40343	run
I-api_mention	40343	40344	(
I-api_mention	40344	40348	args
I-api_mention	40348	40349	)
O	40350	40356	method
O	40356	40357	.
O	40358	40365	private
O	40366	40372	native
O	40373	40377	void
O	40378	40384	start0
O	40384	40385	(
O	40385	40389	args
O	40389	40390	)
O	40391	40393	is
O	40394	40405	responsible
O	40406	40409	for
O	40410	40417	calling
B-api_mention	40418	40421	run
I-api_mention	40421	40422	(
I-api_mention	40422	40426	args
I-api_mention	40426	40427	)
O	40428	40434	method
O	40434	40435	.

O	40436	40439	JVM
O	40440	40448	executes
O	40449	40453	this
O	40454	40460	native
O	40461	40467	method
O	40467	40468	.

O	40470	40478	Question
O	40478	40479	-
O	40479	40486	6608795
O	40486	40487	,
O	40488	40494	answer
O	40494	40495	-
O	40495	40503	20069798

O	40504	40507	All
O	40508	40513	these
O	40514	40521	answers
O	40522	40528	around
O	40529	40533	here
O	40533	40534	,
O	40535	40537	as
O	40538	40542	well
O	40543	40545	as
O	40546	40549	the
O	40550	40557	answers
O	40558	40560	in
O	40561	40565	this
O	40566	40574	question
O	40575	40576	,
O	40577	40584	suggest
O	40585	40589	that
O	40590	40597	loading
O	40598	40606	absolute
O	40607	40611	URLs
O	40611	40612	,
O	40613	40617	like
O	40618	40619	"
O	40619	40620	/
O	40620	40623	foo
O	40623	40624	/
O	40624	40627	bar
O	40627	40628	.
O	40628	40638	properties
O	40638	40639	"
O	40640	40647	treated
O	40648	40651	the
O	40652	40656	same
O	40657	40659	by
O	40660	40665	class
B-api_mention	40665	40666	.
I-api_mention	40666	40685	getResourceAsStream
I-api_mention	40685	40686	(
I-api_mention	40686	40690	args
I-api_mention	40690	40691	)
O	40692	40695	and
O	40696	40701	class
B-api_mention	40701	40702	.
I-api_mention	40702	40716	getClassLoader
I-api_mention	40716	40717	(
I-api_mention	40717	40721	args
I-api_mention	40721	40722	)
I-api_mention	40722	40723	.
I-api_mention	40723	40742	getResourceAsStream
I-api_mention	40742	40743	(
I-api_mention	40743	40747	args
I-api_mention	40747	40748	)
O	40749	40750	.

O	40751	40755	This
O	40756	40758	is
O	40759	40762	NOT
O	40763	40766	the
O	40767	40771	case
O	40771	40772	,
O	40773	40775	at
O	40776	40781	least
O	40782	40785	not
O	40786	40788	in
O	40789	40791	my
O	40792	40798	Tomcat
O	40799	40812	configuration
O	40812	40813	/
O	40813	40820	version
O	40821	40822	(
O	40822	40831	currently
O	40832	40833	7
O	40833	40834	.
O	40834	40835	0
O	40835	40836	.
O	40836	40838	40
O	40838	40839	)
O	40839	40840	.

O	40841	40842	#
O	40842	40845	pre
O	40846	40851	Sorry
O	40851	40852	,
O	40853	40854	I
O	40855	40859	have
O	40860	40870	absolutely
O	40871	40873	no
O	40874	40884	satisfying
O	40885	40896	explanation
O	40896	40897	,
O	40898	40901	but
O	40902	40903	I
O	40904	40909	guess
O	40910	40914	that
O	40915	40921	tomcat
O	40922	40926	does
O	40927	40932	dirty
O	40933	40939	tricks
O	40940	40943	and
O	40944	40947	his
O	40948	40953	black
O	40954	40959	magic
O	40960	40964	with
O	40965	40968	the
O	40969	40981	classloaders
O	40982	40985	and
O	40986	40991	cause
O	40992	40995	the
O	40996	41006	difference
O	41006	41007	.

O	41008	41009	I
O	41010	41016	always
O	41017	41021	used
O	41022	41027	class
B-api_mention	41027	41028	.
I-api_mention	41028	41047	getResourceAsStream
I-api_mention	41047	41048	(
I-api_mention	41048	41052	args
I-api_mention	41052	41053	)
O	41054	41056	in
O	41057	41060	the
O	41061	41065	past
O	41066	41069	and
O	41070	41075	haven
O	41075	41076	'
O	41076	41077	t
O	41078	41081	had
O	41082	41085	any
O	41086	41094	problems
O	41094	41095	.

O	41096	41098	PS
O	41098	41099	:
O	41100	41101	I
O	41102	41106	also
O	41107	41113	posted
O	41114	41118	this
O	41119	41123	over
O	41124	41128	here

O	41130	41138	Question
O	41138	41139	-
O	41139	41146	6608795
O	41146	41147	,
O	41148	41154	answer
O	41154	41155	-
O	41155	41163	22327270

O	41164	41165	I
O	41166	41171	tried
O	41172	41179	reading
O	41180	41184	from
O	41185	41191	input1
O	41191	41192	.
O	41192	41195	txt
O	41196	41201	which
O	41202	41205	was
O	41206	41212	inside
O	41213	41216	one
O	41217	41219	of
O	41220	41222	my
O	41223	41231	packages
O	41232	41240	together
O	41241	41245	with
O	41246	41249	the
O	41250	41255	class
O	41256	41261	which
O	41262	41265	was
O	41266	41272	trying
O	41273	41275	to
O	41276	41280	read
O	41281	41283	it
O	41283	41284	.

O	41285	41288	The
O	41289	41298	following
O	41299	41304	works
O	41304	41305	:
O	41306	41307	#
O	41307	41310	pre
O	41311	41314	The
O	41315	41319	most
O	41320	41329	important
O	41330	41334	part
O	41335	41338	was
O	41339	41341	to
O	41342	41346	call
B-api_mention	41347	41354	getPath
I-api_mention	41354	41355	(
I-api_mention	41355	41359	args
I-api_mention	41359	41360	)
O	41361	41363	if
O	41364	41367	you
O	41368	41372	want
O	41373	41376	the
O	41377	41384	correct
O	41385	41389	path
O	41390	41394	name
O	41395	41397	in
B-api_mention	41398	41404	String
O	41405	41411	format
O	41411	41412	.

O	41413	41415	DO
O	41416	41419	NOT
O	41420	41423	USE
B-api_mention	41424	41432	toString
I-api_mention	41432	41433	(
I-api_mention	41433	41437	args
I-api_mention	41437	41438	)
O	41439	41446	because
O	41447	41449	it
O	41450	41454	will
O	41455	41458	add
O	41459	41463	some
O	41464	41469	extra
O	41470	41480	formatting
O	41481	41485	text
O	41486	41491	which
O	41492	41496	will
O	41497	41504	TOTALLY
O	41505	41509	MESS
O	41510	41512	UP
O	41513	41516	the
O	41517	41525	fileName
O	41526	41527	(
O	41527	41530	you
O	41531	41534	can
O	41535	41538	try
O	41539	41541	it
O	41542	41545	and
O	41546	41549	see
O	41550	41553	the
O	41554	41559	print
O	41560	41563	out
O	41563	41564	)
O	41564	41565	.

O	41566	41571	Spent
O	41572	41573	2
O	41574	41579	hours
O	41580	41589	debugging
O	41590	41594	this
O	41594	41595	.
O	41595	41596	.
O	41596	41597	.

O	41598	41599	:
O	41599	41600	(

O	41602	41610	Question
O	41610	41611	-
O	41611	41618	7935858
O	41618	41619	,
O	41620	41626	answer
O	41626	41627	-
O	41627	41634	7935873

B-api_mention	41635	41639	java
I-api_mention	41639	41640	.
I-api_mention	41640	41644	lang
I-api_mention	41644	41645	.
I-api_mention	41645	41651	String
I-api_mention	41651	41652	.
I-api_mention	41652	41657	split
O	41658	41664	splits
O	41665	41667	on
O	41668	41675	regular
O	41676	41687	expressions
O	41687	41688	,
O	41689	41692	and
O	41693	41694	.
O	41695	41697	in
O	41698	41699	a
O	41700	41707	regular
O	41708	41718	expression
O	41719	41724	means
O	41725	41726	"
O	41726	41729	any
O	41730	41739	character
O	41739	41740	"
O	41740	41741	.

O	41742	41745	Try
O	41746	41750	temp
B-api_mention	41750	41751	.
I-api_mention	41751	41756	split
I-api_mention	41756	41757	(
I-api_mention	41757	41761	args
I-api_mention	41761	41762	)
O	41763	41764	.

O	41766	41774	Question
O	41774	41775	-
O	41775	41782	7935858
O	41782	41783	,
O	41784	41790	answer
O	41790	41791	-
O	41791	41798	7935881

O	41799	41802	The
O	41803	41816	documentation
O	41817	41819	on
B-api_mention	41820	41825	split
I-api_mention	41825	41826	(
I-api_mention	41826	41827	)
O	41828	41832	says
O	41832	41833	:
O	41834	41835	#
O	41835	41845	blockquote
O	41846	41847	(
O	41847	41855	Emphasis
O	41856	41860	mine
O	41860	41861	.
O	41861	41862	)
O	41863	41864	A
O	41865	41868	dot
O	41869	41871	is
O	41872	41873	a
O	41874	41881	special
O	41882	41891	character
O	41892	41894	in
O	41895	41902	regular
O	41903	41913	expression
O	41914	41920	syntax
O	41920	41921	.

O	41922	41925	Use
B-api_mention	41926	41933	Pattern
I-api_mention	41933	41934	.
I-api_mention	41934	41939	quote
I-api_mention	41939	41940	(
I-api_mention	41940	41941	)
O	41942	41944	on
O	41945	41948	the
O	41949	41958	parameter
O	41959	41961	to
B-api_mention	41962	41967	split
I-api_mention	41967	41968	(
I-api_mention	41968	41969	)
O	41970	41972	if
O	41973	41976	you
O	41977	41981	want
O	41982	41985	the
O	41986	41991	split
O	41992	41994	to
O	41995	41997	be
O	41998	42000	on
O	42001	42002	a
O	42003	42010	literal
O	42011	42017	string
O	42018	42025	pattern
O	42025	42026	:
B-api_mention	42027	42033	String
O	42033	42034	[
O	42034	42035	]
O	42036	42041	words
O	42042	42043	=
O	42044	42048	temp
B-api_mention	42048	42049	.
I-api_mention	42049	42054	split
I-api_mention	42054	42055	(
I-api_mention	42055	42059	args
I-api_mention	42059	42060	)
O	42060	42061	;
