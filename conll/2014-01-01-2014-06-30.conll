O	0	8	Question
O	8	9	-
O	9	17	21947452

O	18	19	I
O	20	29	generated
O	30	33	two
O	34	42	matrices
O	43	45	of
O	46	50	1000
O	51	52	x
O	53	57	1000
O	58	59	:
O	60	65	First
O	66	72	Matrix
O	72	73	:
O	74	75	O
O	76	79	and
O	80	81	#
O	82	83	.

O	84	90	Second
O	91	97	Matrix
O	97	98	:
O	99	100	O
O	101	104	and
O	105	106	B
O	107	108	.

O	109	114	Using
O	115	118	the
O	119	128	following
O	129	133	code
O	133	134	,
O	135	138	the
O	139	144	first
O	145	151	matrix
O	152	156	took
O	157	158	8
O	158	159	.
O	159	161	52
O	162	169	seconds
O	170	172	to
O	173	181	complete
O	181	182	:
O	183	184	#
O	184	187	pre
O	188	192	With
O	193	197	this
O	198	202	code
O	202	203	,
O	204	207	the
O	208	214	second
O	215	221	matrix
O	222	226	took
O	227	230	259
O	230	231	.
O	231	234	152
O	235	242	seconds
O	243	245	to
O	246	254	complete
O	254	255	:
O	256	257	#
O	257	260	pre
O	261	265	What
O	266	268	is
O	269	272	the
O	273	279	reason
O	280	286	behind
O	287	290	the
O	291	303	dramatically
O	304	313	different
O	314	317	run
O	318	323	times
O	323	324	?

O	325	327	As
O	328	337	suggested
O	338	340	in
O	341	344	the
O	345	353	comments
O	353	354	,
O	355	363	printing
O	364	368	only
B-api_mention	369	375	System
I-api_mention	375	376	.
I-api_mention	376	379	out
I-api_mention	379	380	.
I-api_mention	380	385	print
I-api_mention	385	386	(
I-api_mention	386	390	args
I-api_mention	390	391	)
O	391	392	;
O	393	398	takes
O	399	400	7
O	400	401	.
O	401	405	8871
O	406	413	seconds
O	413	414	,
O	415	422	whereas
B-api_mention	423	429	System
I-api_mention	429	430	.
I-api_mention	430	433	out
I-api_mention	433	434	.
I-api_mention	434	439	print
I-api_mention	439	440	(
I-api_mention	440	444	args
I-api_mention	444	445	)
O	445	446	;
O	447	452	gives
O	453	458	still
O	459	467	printing
O	467	468	.
O	468	469	.
O	469	470	.

O	471	472	.
O	473	475	As
O	476	482	others
O	483	486	who
O	487	494	pointed
O	495	498	out
O	499	503	that
O	504	506	it
O	507	512	works
O	513	516	for
O	517	521	them
O	522	530	normally
O	530	531	,
O	532	533	I
O	534	539	tried
O	540	546	Ideone
O	546	547	.
O	547	550	com
O	551	554	for
O	555	563	instance
O	563	564	,
O	565	568	and
O	569	573	both
O	574	580	pieces
O	581	583	of
O	584	588	code
O	589	596	execute
O	597	599	at
O	600	603	the
O	604	608	same
O	609	614	speed
O	614	615	.

O	616	620	Test
O	621	631	Conditions
O	631	632	:
O	633	634	#
O	634	636	li
O	637	638	I
O	639	642	ran
O	643	647	this
O	648	652	test
O	653	657	from
O	658	666	Netbeans
O	667	668	7
O	668	669	.
O	669	670	2
O	670	671	,
O	672	676	with
O	677	680	the
O	681	687	output
O	688	692	into
O	693	696	its
O	697	704	console
O	705	706	#
O	706	708	li
O	709	710	I
O	711	715	used
B-api_mention	716	722	System
I-api_mention	722	723	.
I-api_mention	723	731	nanoTime
I-api_mention	731	732	(
I-api_mention	732	736	args
I-api_mention	736	737	)
O	738	741	for
O	742	754	measurements

O	756	764	Question
O	764	765	-
O	765	773	20945049

O	774	776	We
O	777	780	all
O	781	785	know
O	786	790	that
B-api_mention	791	797	String
O	798	800	is
O	801	810	immutable
O	811	813	in
O	814	818	Java
O	818	819	,
O	820	823	but
O	824	829	check
O	830	833	the
O	834	843	following
O	844	848	code
O	848	849	:
O	850	851	#
O	851	854	pre
O	855	858	Why
O	859	863	does
O	864	868	this
O	869	876	program
O	877	884	operate
O	885	889	like
O	890	894	this
O	894	895	?

O	896	899	And
O	900	903	why
O	904	906	is
O	907	910	the
O	911	916	value
O	917	919	of
O	920	922	s1
O	923	926	and
O	927	929	s2
O	930	937	changed
O	937	938	,
O	939	942	but
O	943	946	not
O	947	949	s3
O	950	951	?

O	953	961	Question
O	961	962	-
O	962	970	23453287

O	971	974	One
O	975	977	of
O	978	981	the
O	982	986	most
O	987	993	useful
O	994	1002	features
O	1003	1005	of
O	1006	1010	Java
O	1011	1012	8
O	1013	1016	are
O	1017	1020	the
O	1021	1024	new
O	1025	1032	default
O	1033	1040	methods
O	1041	1043	on
O	1044	1054	interfaces
O	1054	1055	.

O	1056	1061	There
O	1062	1065	are
O	1066	1077	essentially
O	1078	1081	two
O	1082	1089	reasons
O	1090	1091	(
O	1091	1096	there
O	1097	1100	may
O	1101	1103	be
O	1104	1110	others
O	1110	1111	)
O	1112	1115	why
O	1116	1120	they
O	1121	1125	have
O	1126	1130	been
O	1131	1141	introduced
O	1141	1142	:
O	1143	1144	#
O	1144	1146	li
O	1147	1156	Providing
O	1157	1163	actual
O	1164	1171	default
O	1172	1187	implementations
O	1187	1188	.

O	1189	1196	Example
O	1196	1197	:
B-api_mention	1198	1206	Iterator
I-api_mention	1206	1207	.
I-api_mention	1207	1213	remove
I-api_mention	1213	1214	(
I-api_mention	1214	1215	)
O	1216	1217	#
O	1217	1219	li
O	1220	1228	Allowing
O	1229	1232	for
O	1233	1236	JDK
O	1237	1240	API
O	1241	1250	evolution
O	1250	1251	.

O	1252	1259	Example
O	1259	1260	:
B-api_mention	1261	1269	Iterable
I-api_mention	1269	1270	.
I-api_mention	1270	1277	forEach
I-api_mention	1277	1278	(
I-api_mention	1278	1279	)
O	1280	1284	From
O	1285	1287	an
O	1288	1291	API
O	1292	1300	designer
O	1300	1301	'
O	1301	1302	s
O	1303	1314	perspective
O	1314	1315	,
O	1316	1317	I
O	1318	1323	would
O	1324	1328	have
O	1329	1334	liked
O	1335	1337	to
O	1338	1340	be
O	1341	1345	able
O	1346	1348	to
O	1349	1352	use
O	1353	1358	other
O	1359	1368	modifiers
O	1369	1371	on
O	1372	1381	interface
O	1382	1389	methods
O	1389	1390	,
O	1391	1392	e
O	1392	1393	.
O	1393	1394	g
O	1394	1395	.
O	1396	1401	final
O	1402	1403	.

O	1404	1408	This
O	1409	1414	would
O	1415	1417	be
O	1418	1424	useful
O	1425	1429	when
O	1430	1436	adding
O	1437	1448	convenience
O	1449	1456	methods
O	1456	1457	,
O	1458	1468	preventing
O	1469	1470	"
O	1470	1480	accidental
O	1480	1481	"
O	1482	1491	overrides
O	1492	1494	in
O	1495	1507	implementing
O	1508	1515	classes
O	1515	1516	:
O	1517	1518	#
O	1518	1521	pre
O	1522	1525	The
O	1526	1531	above
O	1532	1534	is
O	1535	1542	already
O	1543	1549	common
O	1550	1558	practice
O	1559	1561	if
O	1562	1568	Sender
O	1569	1573	were
O	1574	1575	a
O	1576	1581	class
O	1581	1582	:
O	1583	1584	#
O	1584	1587	pre
O	1588	1591	Now
O	1591	1592	,
O	1593	1600	default
O	1601	1604	and
O	1605	1610	final
O	1611	1614	are
O	1615	1624	obviously
O	1625	1638	contradicting
O	1639	1647	keywords
O	1647	1648	,
O	1649	1652	but
O	1653	1656	the
O	1657	1664	default
O	1665	1672	keyword
O	1673	1679	itself
O	1680	1685	would
O	1686	1689	not
O	1690	1694	have
O	1695	1699	been
O	1700	1708	strictly
O	1709	1717	required
O	1718	1719	,
O	1720	1722	so
O	1723	1724	I
O	1724	1725	'
O	1725	1726	m
O	1727	1735	assuming
O	1736	1740	that
O	1741	1745	this
O	1746	1759	contradiction
O	1760	1762	is
O	1763	1773	deliberate
O	1773	1774	,
O	1775	1777	to
O	1778	1785	reflect
O	1786	1789	the
O	1790	1796	subtle
O	1797	1808	differences
O	1809	1816	between
O	1817	1818	"
O	1818	1823	class
O	1824	1831	methods
O	1832	1836	with
O	1837	1841	body
O	1841	1842	"
O	1843	1844	(
O	1844	1848	just
O	1849	1856	methods
O	1856	1857	)
O	1858	1861	and
O	1862	1863	"
O	1863	1872	interface
O	1873	1880	methods
O	1881	1885	with
O	1886	1890	body
O	1890	1891	"
O	1892	1893	(
O	1893	1900	default
O	1901	1908	methods
O	1908	1909	)
O	1909	1910	,
O	1911	1912	i
O	1912	1913	.
O	1913	1914	e
O	1914	1915	.
O	1916	1927	differences
O	1928	1933	which
O	1934	1935	I
O	1936	1940	have
O	1941	1944	not
O	1945	1948	yet
O	1949	1959	understood
O	1959	1960	.

O	1961	1963	At
O	1964	1968	some
O	1969	1974	point
O	1975	1977	of
O	1978	1982	time
O	1982	1983	,
O	1984	1991	support
O	1992	1995	for
O	1996	2005	modifiers
O	2006	2010	like
O	2011	2017	static
O	2018	2021	and
O	2022	2027	final
O	2028	2030	on
O	2031	2040	interface
O	2041	2048	methods
O	2049	2052	was
O	2053	2056	not
O	2057	2060	yet
O	2061	2066	fully
O	2067	2075	explored
O	2075	2076	,
O	2077	2083	citing
O	2084	2089	Brian
O	2090	2095	Goetz
O	2096	2097	:
O	2098	2099	#
O	2099	2109	blockquote
O	2110	2115	Since
O	2116	2120	that
O	2121	2125	time
O	2126	2128	in
O	2129	2133	late
O	2134	2138	2011
O	2138	2139	,
O	2140	2149	obviously
O	2149	2150	,
O	2151	2158	support
O	2159	2162	for
O	2163	2169	static
O	2170	2177	methods
O	2178	2180	in
O	2181	2191	interfaces
O	2192	2195	was
O	2196	2201	added
O	2201	2202	.

O	2203	2210	Clearly
O	2210	2211	,
O	2212	2216	this
O	2217	2222	added
O	2223	2224	a
O	2225	2228	lot
O	2229	2231	of
O	2232	2237	value
O	2238	2240	to
O	2241	2244	the
O	2245	2248	JDK
O	2249	2258	libraries
O	2259	2269	themselves
O	2269	2270	,
O	2271	2275	such
O	2276	2278	as
O	2279	2283	with
B-api_mention	2284	2294	Comparator
I-api_mention	2294	2295	.
I-api_mention	2295	2304	comparing
I-api_mention	2304	2305	(
I-api_mention	2305	2306	)
O	2307	2308	.

O	2309	2317	Question
O	2317	2318	:
O	2319	2323	What
O	2324	2326	is
O	2327	2330	the
O	2331	2337	reason
O	2338	2343	final
O	2344	2345	(
O	2345	2348	and
O	2349	2353	also
O	2354	2360	static
O	2361	2366	final
O	2367	2368	)
O	2369	2374	never
O	2375	2379	made
O	2380	2382	it
O	2383	2385	to
O	2386	2390	Java
O	2391	2392	8
O	2393	2403	interfaces
O	2403	2404	?

O	2406	2414	Question
O	2414	2415	-
O	2415	2423	21242110

O	2424	2428	What
O	2429	2431	is
O	2432	2435	the
O	2436	2440	best
O	2441	2444	way
O	2445	2447	to
O	2448	2455	convert
O	2456	2457	a
B-api_mention	2458	2462	java
I-api_mention	2462	2463	.
I-api_mention	2463	2467	util
I-api_mention	2467	2468	.
I-api_mention	2468	2472	Date
O	2473	2479	object
O	2480	2482	to
O	2483	2486	the
O	2487	2490	new
O	2491	2494	JDK
O	2495	2496	8
O	2496	2497	/
O	2497	2500	JSR
O	2500	2501	-
O	2501	2504	310
B-api_mention	2505	2509	java
I-api_mention	2509	2510	.
I-api_mention	2510	2514	time
I-api_mention	2514	2515	.
I-api_mention	2515	2524	LocalDate
O	2525	2526	?

O	2527	2528	#
O	2528	2531	pre

O	2533	2541	Question
O	2541	2542	-
O	2542	2550	22561614

O	2551	2555	Note
O	2555	2556	:
O	2557	2561	this
O	2562	2570	question
O	2571	2581	originates
O	2582	2586	from
O	2587	2588	a
O	2589	2593	dead
O	2594	2598	link
O	2599	2604	which
O	2605	2608	was
O	2609	2610	a
O	2611	2619	previous
O	2620	2622	SO
O	2623	2631	question
O	2631	2632	,
O	2633	2636	but
O	2637	2641	here
O	2642	2646	goes
O	2646	2647	.
O	2647	2648	.
O	2648	2649	.

O	2650	2653	See
O	2654	2658	this
O	2659	2663	code
O	2664	2665	(
O	2665	2669	note
O	2669	2670	:
O	2671	2672	I
O	2673	2675	do
O	2676	2680	know
O	2681	2685	that
O	2686	2690	this
O	2691	2695	code
O	2696	2699	won
O	2699	2700	'
O	2700	2701	t
O	2702	2703	"
O	2703	2707	work
O	2707	2708	"
O	2709	2712	and
O	2713	2717	that
B-api_mention	2718	2725	Integer
I-api_mention	2725	2726	:
I-api_mention	2726	2727	:
I-api_mention	2727	2734	compare
O	2735	2741	should
O	2742	2744	be
O	2745	2749	used
O	2750	2751	-
O	2751	2752	-
O	2753	2754	I
O	2755	2759	just
O	2760	2769	extracted
O	2770	2772	it
O	2773	2777	from
O	2778	2781	the
O	2782	2788	linked
O	2789	2797	question
O	2797	2798	)
O	2798	2799	:
O	2800	2801	#
O	2801	2804	pre
O	2805	2814	According
O	2815	2817	to
O	2818	2821	the
O	2822	2829	javadoc
O	2830	2832	of
B-api_mention	2833	2834	.
I-api_mention	2834	2837	min
I-api_mention	2837	2838	(
I-api_mention	2838	2839	)
O	2840	2843	and
B-api_mention	2844	2845	.
I-api_mention	2845	2848	max
I-api_mention	2848	2849	(
I-api_mention	2849	2850	)
O	2851	2852	,
O	2853	2856	the
O	2857	2865	argument
O	2866	2868	of
O	2869	2873	both
O	2874	2880	should
O	2881	2883	be
O	2884	2885	a
B-api_mention	2886	2896	Comparator
O	2897	2898	.

O	2899	2902	Yet
O	2903	2907	here
O	2908	2911	the
O	2912	2918	method
O	2919	2929	references
O	2930	2933	are
O	2934	2936	to
O	2937	2943	static
O	2944	2951	methods
O	2952	2954	of
O	2955	2958	the
B-api_mention	2959	2966	Integer
O	2967	2972	class
O	2972	2973	.

O	2974	2976	So
O	2976	2977	,
O	2978	2981	why
O	2982	2986	does
O	2987	2991	this
O	2992	2999	compile
O	3000	3002	at
O	3003	3006	all
O	3006	3007	?

O	3009	3017	Question
O	3017	3018	-
O	3018	3026	23114015

O	3027	3028	I
O	3029	3031	am
O	3032	3041	wondering
O	3042	3045	why
O	3046	3049	the
B-api_mention	3050	3058	Iterable
O	3059	3068	interface
O	3069	3073	does
O	3074	3077	not
O	3078	3085	provide
O	3086	3089	the
B-api_mention	3090	3096	stream
I-api_mention	3096	3097	(
I-api_mention	3097	3101	args
I-api_mention	3101	3102	)
O	3103	3106	and
B-api_mention	3107	3121	parallelStream
I-api_mention	3121	3122	(
I-api_mention	3122	3126	args
I-api_mention	3126	3127	)
O	3128	3135	methods
O	3135	3136	.

O	3137	3145	Consider
O	3146	3149	the
O	3150	3159	following
O	3160	3165	class
O	3165	3166	:
O	3167	3168	#
O	3168	3171	pre
O	3172	3174	It
O	3175	3177	is
O	3178	3180	an
O	3181	3195	implementation
O	3196	3198	of
O	3199	3200	a
O	3201	3205	Hand
O	3206	3208	as
O	3209	3212	you
O	3213	3216	can
O	3217	3221	have
O	3222	3227	cards
O	3228	3230	in
O	3231	3235	your
O	3236	3240	hand
O	3241	3246	while
O	3247	3254	playing
O	3255	3256	a
O	3257	3264	Trading
O	3265	3269	Card
O	3270	3274	Game
O	3274	3275	.

O	3276	3287	Essentially
O	3288	3290	it
O	3291	3296	wraps
O	3297	3298	a
B-api_mention	3299	3303	List
I-api_mention	3303	3304	<
I-api_mention	3304	3305	T
I-api_mention	3305	3306	>
O	3307	3308	,
O	3309	3316	ensures
O	3317	3318	a
O	3319	3326	maximum
O	3327	3335	capacity
O	3336	3339	and
O	3340	3346	offers
O	3347	3351	some
O	3352	3357	other
O	3358	3364	useful
O	3365	3373	features
O	3373	3374	.

O	3375	3377	It
O	3378	3380	is
O	3381	3387	better
O	3388	3390	as
O	3391	3403	implementing
O	3404	3406	it
O	3407	3415	directly
O	3416	3418	as
O	3419	3420	a
B-api_mention	3421	3425	List
I-api_mention	3425	3426	<
I-api_mention	3426	3427	T
I-api_mention	3427	3428	>
O	3429	3430	.

O	3431	3434	Now
O	3434	3435	,
O	3436	3439	for
O	3440	3452	convienience
O	3453	3454	I
O	3455	3462	thought
O	3463	3465	it
O	3466	3471	would
O	3472	3474	be
O	3475	3479	nice
O	3480	3482	to
O	3483	3492	implement
B-api_mention	3493	3501	Iterable
I-api_mention	3501	3502	<
I-api_mention	3502	3503	T
I-api_mention	3503	3504	>
O	3505	3506	,
O	3507	3511	such
O	3512	3516	that
O	3517	3520	you
O	3521	3524	can
O	3525	3528	use
O	3529	3537	enhanced
O	3538	3541	for
O	3541	3542	-
O	3542	3547	loops
O	3548	3550	if
O	3551	3554	you
O	3555	3559	want
O	3560	3562	to
O	3563	3567	loop
O	3568	3572	over
O	3573	3575	it
O	3575	3576	.

O	3577	3578	(
O	3578	3580	My
O	3581	3585	Hand
O	3586	3591	class
O	3592	3596	also
O	3597	3605	provides
O	3606	3607	a
B-api_mention	3608	3611	get
I-api_mention	3611	3612	(
I-api_mention	3612	3616	args
I-api_mention	3616	3617	)
O	3618	3624	method
O	3624	3625	,
O	3626	3631	hence
O	3632	3635	the
B-api_mention	3636	3644	Iterable
I-api_mention	3644	3645	<
I-api_mention	3645	3646	T
I-api_mention	3646	3647	>
O	3648	3650	is
O	3651	3660	justified
O	3661	3663	in
O	3664	3666	my
O	3667	3674	opinion
O	3674	3675	.
O	3675	3676	)
O	3677	3680	The
O	3681	3689	Iterable
O	3690	3699	interface
O	3700	3708	provides
O	3709	3712	the
O	3713	3722	following
O	3723	3724	(
O	3724	3728	left
O	3729	3732	out
O	3733	3740	javadoc
O	3740	3741	)
O	3741	3742	:
O	3743	3744	#
O	3744	3747	pre
O	3748	3751	Now
O	3752	3755	can
O	3756	3759	you
O	3760	3766	obtain
O	3767	3768	a
O	3769	3775	stream
O	3776	3780	with
O	3780	3781	:
B-api_mention	3782	3788	Stream
I-api_mention	3788	3789	<
I-api_mention	3789	3790	T
I-api_mention	3790	3791	>
O	3792	3798	stream
O	3799	3800	=
B-api_mention	3801	3814	StreamSupport
I-api_mention	3814	3815	.
I-api_mention	3815	3821	stream
I-api_mention	3821	3822	(
I-api_mention	3822	3826	args
I-api_mention	3826	3827	)
O	3827	3828	;
O	3829	3831	So
O	3832	3836	onto
O	3837	3840	the
O	3841	3845	real
O	3846	3854	question
O	3854	3855	:
O	3856	3857	#
O	3857	3859	li
O	3860	3863	Why
O	3864	3868	does
B-api_mention	3869	3877	Iterable
I-api_mention	3877	3878	<
I-api_mention	3878	3879	T
I-api_mention	3879	3880	>
O	3881	3884	not
O	3885	3892	provide
O	3893	3894	a
O	3895	3902	default
O	3903	3910	methods
O	3911	3915	that
B-api_mention	3916	3925	implement
I-api_mention	3926	3932	stream
I-api_mention	3932	3933	(
I-api_mention	3933	3937	args
I-api_mention	3937	3938	)
O	3939	3942	and
B-api_mention	3943	3957	parallelStream
I-api_mention	3957	3958	(
I-api_mention	3958	3962	args
I-api_mention	3962	3963	)
O	3964	3965	,
O	3966	3967	I
O	3968	3971	see
O	3972	3979	nothing
O	3980	3984	that
O	3985	3990	would
O	3991	3995	make
O	3996	4000	this
O	4001	4011	impossible
O	4012	4014	or
O	4015	4023	unwanted
O	4023	4024	?

O	4025	4026	A
O	4027	4034	related
O	4035	4043	question
O	4044	4045	I
O	4046	4051	found
O	4052	4054	is
O	4055	4058	the
O	4059	4068	following
O	4069	4075	though
O	4075	4076	:
O	4077	4080	Why
O	4081	4085	does
B-api_mention	4086	4092	Stream
I-api_mention	4092	4093	<
I-api_mention	4093	4094	T
I-api_mention	4094	4095	>
O	4096	4099	not
O	4100	4109	implement
B-api_mention	4110	4118	Iterable
I-api_mention	4118	4119	<
I-api_mention	4119	4120	T
I-api_mention	4120	4121	>
O	4121	4122	?

O	4123	4128	Which
O	4129	4131	is
O	4132	4137	oddly
O	4138	4144	enough
O	4145	4155	suggesting
O	4156	4158	it
O	4159	4161	to
O	4162	4164	do
O	4165	4167	it
O	4168	4176	somewhat
O	4177	4180	the
O	4181	4186	other
O	4187	4190	way
O	4191	4197	around
O	4197	4198	.

O	4200	4208	Question
O	4208	4209	-
O	4209	4217	22463062

O	4218	4222	Java
O	4223	4224	8
O	4225	4230	added
O	4231	4232	a
O	4233	4236	new
O	4237	4240	API
O	4241	4244	for
O	4245	4252	working
O	4253	4257	with
O	4258	4263	dates
O	4264	4267	and
O	4268	4273	times
O	4274	4275	(
O	4275	4278	JSR
O	4279	4282	310
O	4282	4283	)
O	4283	4284	.

O	4285	4286	I
O	4287	4291	have
O	4292	4296	date
O	4297	4300	and
O	4301	4305	time
O	4306	4308	as
O	4309	4315	string
O	4316	4317	(
O	4317	4318	e
O	4318	4319	.
O	4319	4320	g
O	4320	4321	.
B-api_mention	4322	4335	StringLiteral
O	4336	4337	)
O	4337	4338	.

O	4339	4342	How
O	4343	4346	can
O	4347	4348	I
O	4349	4355	obtain
O	4356	4357	a
O	4358	4371	LocalDateTime
O	4372	4380	instance
O	4381	4385	from
O	4386	4389	the
O	4390	4395	given
O	4396	4402	string
O	4402	4403	?

O	4404	4409	After
O	4410	4411	I
O	4412	4420	finished
O	4421	4428	working
O	4429	4433	with
O	4434	4437	the
B-api_mention	4438	4451	LocalDateTime
O	4452	4458	object
O	4458	4459	:
O	4460	4463	How
O	4464	4467	can
O	4468	4469	I
O	4470	4474	then
O	4475	4482	convert
O	4483	4486	the
B-api_mention	4487	4500	LocalDateTime
O	4501	4509	instance
O	4510	4514	back
O	4515	4517	to
O	4518	4519	a
O	4520	4526	string
O	4527	4531	with
O	4532	4535	the
O	4536	4540	same
O	4541	4547	format
O	4548	4550	as
O	4551	4556	shown
O	4557	4562	above
O	4562	4563	?

O	4565	4573	Question
O	4573	4574	-
O	4574	4582	23699371

O	4583	4585	In
O	4586	4590	Java
O	4591	4592	8
O	4593	4596	how
O	4597	4600	can
O	4601	4602	I
O	4603	4609	filter
O	4610	4611	a
O	4612	4622	collection
O	4623	4628	using
O	4629	4632	the
B-api_mention	4633	4639	Stream
O	4640	4643	API
O	4644	4646	by
O	4647	4655	checking
O	4656	4659	the
O	4660	4672	distinctness
O	4673	4675	of
O	4676	4677	a
O	4678	4686	property
O	4687	4689	of
O	4690	4694	each
O	4695	4701	object
O	4701	4702	?

O	4703	4706	For
O	4707	4714	example
O	4715	4716	I
O	4717	4721	have
O	4722	4723	a
O	4724	4728	list
O	4729	4731	of
B-api_mention	4732	4738	Person
O	4739	4745	object
O	4746	4749	and
O	4750	4751	I
O	4752	4756	want
O	4757	4759	to
O	4760	4766	remove
O	4767	4773	people
O	4774	4778	with
O	4779	4782	the
O	4783	4787	same
O	4788	4792	name
O	4792	4793	,
B-api_mention	4794	4801	persons
I-api_mention	4801	4802	.
I-api_mention	4802	4808	stream
I-api_mention	4808	4809	(
I-api_mention	4809	4813	args
I-api_mention	4813	4814	)
I-api_mention	4814	4815	.
I-api_mention	4815	4823	distinct
I-api_mention	4823	4824	(
I-api_mention	4824	4828	args
I-api_mention	4828	4829	)
O	4829	4830	;
O	4831	4835	Will
O	4836	4839	use
O	4840	4843	the
O	4844	4851	default
O	4852	4860	equality
O	4861	4866	check
O	4867	4870	for
O	4871	4872	a
B-api_mention	4873	4879	Person
O	4880	4886	object
O	4886	4887	,
O	4888	4890	so
O	4891	4892	I
O	4893	4897	need
O	4898	4907	something
O	4908	4912	like
O	4912	4913	,
B-api_mention	4914	4921	persons
I-api_mention	4921	4922	.
I-api_mention	4922	4928	stream
I-api_mention	4928	4929	(
I-api_mention	4929	4933	args
I-api_mention	4933	4934	)
I-api_mention	4934	4935	.
I-api_mention	4935	4943	distinct
I-api_mention	4943	4944	(
I-api_mention	4944	4948	args
I-api_mention	4948	4949	)
O	4949	4950	;
O	4951	4964	Unfortunately
O	4965	4968	the
B-api_mention	4969	4977	distinct
I-api_mention	4977	4978	(
I-api_mention	4978	4982	args
I-api_mention	4982	4983	)
O	4984	4990	method
O	4991	4994	has
O	4995	4997	no
O	4998	5002	such
O	5003	5011	overload
O	5011	5012	.

O	5013	5020	Without
O	5021	5030	modifying
O	5031	5034	the
O	5035	5043	equality
O	5044	5049	check
O	5050	5056	inside
O	5057	5060	the
O	5061	5067	Person
O	5068	5073	class
O	5074	5076	is
O	5077	5079	it
O	5080	5088	possible
O	5089	5091	to
O	5092	5094	do
O	5095	5099	this
O	5100	5110	succinctly
O	5110	5111	?

O	5113	5121	Question
O	5121	5122	-
O	5122	5130	22725537

O	5131	5134	The
O	5135	5138	new
O	5139	5143	Java
O	5144	5145	8
O	5146	5152	stream
O	5153	5162	framework
O	5163	5166	and
O	5167	5174	friends
O	5175	5179	make
O	5180	5183	for
O	5184	5188	some
O	5189	5193	very
O	5194	5201	concise
O	5202	5206	java
O	5207	5211	code
O	5211	5212	,
O	5213	5216	but
O	5217	5218	I
O	5219	5223	have
O	5224	5228	come
O	5229	5235	across
O	5236	5237	a
O	5238	5247	seemingly
O	5247	5248	-
O	5248	5254	simple
O	5255	5264	situation
O	5265	5269	that
O	5270	5272	is
O	5273	5279	tricky
O	5280	5282	to
O	5283	5285	do
O	5286	5295	concisely
O	5295	5296	.

O	5297	5305	Consider
O	5306	5307	a
B-api_mention	5308	5312	List
I-api_mention	5312	5313	<
I-api_mention	5313	5314	T
I-api_mention	5314	5315	>
O	5316	5322	things
O	5323	5326	and
O	5327	5333	method
B-api_mention	5334	5342	Optional
I-api_mention	5342	5343	<
I-api_mention	5343	5344	T
I-api_mention	5344	5345	>
I-api_mention	5346	5353	resolve
I-api_mention	5353	5354	(
I-api_mention	5354	5358	args
I-api_mention	5358	5359	)
O	5360	5361	.

O	5362	5363	I
O	5364	5368	want
O	5369	5371	to
O	5372	5375	map
O	5376	5379	the
O	5380	5385	Thing
O	5386	5387	s
O	5388	5390	to
B-api_mention	5391	5399	Optional
I-api_mention	5399	5400	<
I-api_mention	5400	5401	T
I-api_mention	5401	5402	>
O	5403	5404	s
O	5405	5408	and
O	5409	5412	get
O	5413	5416	the
O	5417	5422	first
O	5423	5428	Other
O	5429	5430	.

O	5431	5434	The
O	5435	5442	obvious
O	5443	5451	solution
O	5452	5457	would
O	5458	5460	be
O	5461	5463	to
O	5464	5467	use
B-api_mention	5468	5474	things
I-api_mention	5474	5475	.
I-api_mention	5475	5481	stream
I-api_mention	5481	5482	(
I-api_mention	5482	5486	args
I-api_mention	5486	5487	)
I-api_mention	5487	5488	.
I-api_mention	5488	5495	flatMap
I-api_mention	5495	5496	(
I-api_mention	5496	5500	args
I-api_mention	5500	5501	)
I-api_mention	5501	5502	.
I-api_mention	5502	5511	findFirst
I-api_mention	5511	5512	(
I-api_mention	5512	5516	args
I-api_mention	5516	5517	)
O	5518	5519	,
O	5520	5523	but
B-api_mention	5524	5531	flatMap
O	5532	5540	requires
O	5541	5545	that
O	5546	5549	you
O	5550	5556	return
O	5557	5558	a
O	5559	5565	stream
O	5565	5566	,
O	5567	5570	and
B-api_mention	5571	5579	Optional
O	5580	5585	doesn
O	5585	5586	'
O	5586	5587	t
O	5588	5592	have
O	5593	5594	a
B-api_mention	5595	5601	stream
I-api_mention	5601	5602	(
I-api_mention	5602	5606	args
I-api_mention	5606	5607	)
O	5608	5614	method
O	5615	5616	(
O	5616	5618	or
O	5619	5621	is
O	5622	5624	it
O	5625	5626	a
B-api_mention	5627	5637	Collection
O	5638	5640	or
O	5641	5648	provide
O	5649	5650	a
O	5651	5657	method
O	5658	5660	to
O	5661	5668	convert
O	5669	5671	it
O	5672	5674	to
O	5675	5677	or
O	5678	5682	view
O	5683	5685	it
O	5686	5688	as
O	5689	5690	a
O	5691	5701	Collection
O	5702	5703	)
O	5703	5704	.

O	5705	5708	The
O	5709	5713	best
O	5714	5715	I
O	5716	5719	can
O	5720	5724	come
O	5725	5727	up
O	5728	5732	with
O	5733	5735	is
O	5736	5740	this
O	5740	5741	:
B-api_mention	5742	5748	things
I-api_mention	5748	5749	.
I-api_mention	5749	5755	stream
I-api_mention	5755	5756	(
I-api_mention	5756	5760	args
I-api_mention	5760	5761	)
I-api_mention	5762	5763	.
I-api_mention	5763	5766	map
I-api_mention	5766	5767	(
I-api_mention	5767	5771	args
I-api_mention	5771	5772	)
I-api_mention	5773	5774	.
I-api_mention	5774	5780	filter
I-api_mention	5780	5781	(
I-api_mention	5781	5785	args
I-api_mention	5785	5786	)
I-api_mention	5787	5788	.
I-api_mention	5788	5791	map
I-api_mention	5791	5792	(
I-api_mention	5792	5796	args
I-api_mention	5796	5797	)
I-api_mention	5798	5799	.
I-api_mention	5799	5808	findFirst
I-api_mention	5808	5809	(
I-api_mention	5809	5813	args
I-api_mention	5813	5814	)
O	5814	5815	;
O	5816	5819	But
O	5820	5824	that
O	5825	5830	seems
O	5831	5838	awfully
O	5839	5843	long
O	5843	5844	-
O	5844	5850	winded
O	5851	5854	for
O	5855	5859	what
O	5860	5865	seems
O	5866	5870	like
O	5871	5872	a
O	5873	5877	very
O	5878	5884	common
O	5885	5889	case
O	5889	5890	.

O	5891	5897	Anyone
O	5898	5902	have
O	5903	5904	a
O	5905	5911	better
O	5912	5916	idea
O	5916	5917	?

O	5919	5927	Question
O	5927	5928	-
O	5928	5936	21105403

O	5937	5938	I
O	5938	5939	'
O	5939	5941	ve
O	5942	5949	written
O	5950	5951	a
O	5952	5959	factory
O	5960	5962	to
O	5963	5970	produce
B-api_mention	5971	5975	java
I-api_mention	5975	5976	.
I-api_mention	5976	5979	sql
I-api_mention	5979	5980	.
I-api_mention	5980	5990	Connection
O	5991	5998	objects
O	5998	5999	:
O	6000	6001	#
O	6001	6004	pre
O	6005	6006	I
O	6006	6007	'
O	6007	6008	d
O	6009	6013	like
O	6014	6016	to
O	6017	6025	validate
O	6026	6029	the
O	6030	6040	parameters
O	6041	6047	passed
O	6048	6050	to
B-api_mention	6051	6064	DriverManager
I-api_mention	6064	6065	.
I-api_mention	6065	6078	getConnection
O	6079	6080	,
O	6081	6084	but
O	6085	6086	I
O	6087	6090	don
O	6090	6091	'
O	6091	6092	t
O	6093	6097	know
O	6098	6101	how
O	6102	6104	to
O	6105	6109	mock
O	6110	6111	a
O	6112	6118	static
O	6119	6125	method
O	6125	6126	.

O	6127	6128	I
O	6128	6129	'
O	6129	6130	m
O	6131	6136	using
O	6137	6142	JUnit
O	6143	6144	4
O	6145	6148	and
O	6149	6156	Mockito
O	6157	6160	for
O	6161	6163	my
O	6164	6168	test
O	6169	6174	cases
O	6174	6175	.

O	6176	6178	Is
O	6179	6184	there
O	6185	6186	a
O	6187	6191	good
O	6192	6195	way
O	6196	6198	to
O	6199	6203	mock
O	6203	6204	/
O	6204	6210	verify
O	6211	6215	this
O	6216	6224	specific
O	6225	6228	use
O	6228	6229	-
O	6229	6233	case
O	6233	6234	?

O	6236	6244	Question
O	6244	6245	-
O	6245	6253	23674624

O	6254	6255	I
O	6255	6256	'
O	6256	6257	m
O	6258	6265	looking
O	6266	6268	at
O	6269	6272	the
O	6273	6277	docs
O	6278	6281	for
O	6282	6285	the
B-api_mention	6286	6295	IntStream
O	6296	6297	,
O	6298	6301	and
O	6302	6303	I
O	6304	6307	see
O	6308	6310	an
B-api_mention	6311	6318	toArray
O	6319	6325	method
O	6325	6326	,
O	6327	6330	but
O	6331	6333	no
O	6334	6337	way
O	6338	6340	to
O	6341	6343	go
O	6344	6352	directly
O	6353	6355	to
O	6356	6357	a
B-api_mention	6358	6362	List
I-api_mention	6362	6363	<
I-api_mention	6363	6364	T
I-api_mention	6364	6365	>
O	6366	6372	Surely
O	6373	6378	there
O	6379	6381	is
O	6382	6383	a
O	6384	6387	way
O	6388	6390	to
O	6391	6398	convert
O	6399	6400	a
B-api_mention	6401	6407	Stream
O	6408	6410	to
O	6411	6412	a
B-api_mention	6413	6417	List
O	6418	6419	?

O	6421	6429	Question
O	6429	6430	-
O	6430	6438	23218874

O	6439	6440	I
O	6441	6451	understand
O	6452	6456	that
O	6457	6461	with
B-api_mention	6462	6463	.
I-api_mention	6463	6469	stream
I-api_mention	6469	6470	(
I-api_mention	6470	6474	args
I-api_mention	6474	6475	)
O	6476	6477	,
O	6478	6479	I
O	6480	6483	can
O	6484	6487	use
O	6488	6493	chain
O	6494	6504	operations
O	6505	6509	like
B-api_mention	6510	6511	.
I-api_mention	6511	6517	filter
I-api_mention	6517	6518	(
I-api_mention	6518	6522	args
I-api_mention	6522	6523	)
O	6524	6526	or
O	6527	6530	use
O	6531	6539	parallel
O	6540	6546	stream
O	6546	6547	.

O	6548	6551	But
O	6552	6556	what
O	6557	6559	is
O	6560	6570	difference
O	6571	6578	between
O	6579	6583	them
O	6584	6586	if
O	6587	6588	I
O	6589	6593	need
O	6594	6596	to
O	6597	6604	execute
O	6605	6610	small
O	6611	6621	operations
O	6622	6623	(
O	6623	6626	for
O	6627	6634	example
O	6634	6635	,
O	6636	6644	printing
O	6645	6648	the
O	6649	6657	elements
O	6658	6660	of
O	6661	6664	the
O	6665	6669	list
O	6669	6670	)
O	6670	6671	?

O	6672	6673	#
O	6673	6676	pre

O	6678	6686	Question
O	6686	6687	-
O	6687	6695	22435833

O	6696	6698	In
O	6699	6703	Java
O	6704	6705	8
O	6705	6706	,
O	6707	6712	there
O	6713	6715	is
O	6716	6717	a
O	6718	6721	new
O	6722	6728	method
B-api_mention	6729	6735	String
I-api_mention	6735	6736	.
I-api_mention	6736	6741	chars
I-api_mention	6741	6742	(
I-api_mention	6742	6743	)
O	6744	6749	which
O	6750	6757	returns
O	6758	6759	a
O	6760	6766	stream
O	6767	6769	of
O	6770	6773	int
O	6774	6775	s
O	6776	6777	(
B-api_mention	6778	6787	IntStream
O	6788	6789	)
O	6790	6794	that
O	6795	6804	represent
O	6805	6808	the
O	6809	6818	character
O	6819	6824	codes
O	6824	6825	.

O	6826	6827	I
O	6828	6833	guess
O	6834	6838	many
O	6839	6845	people
O	6846	6851	would
O	6852	6858	expect
O	6859	6860	a
O	6861	6867	stream
O	6868	6870	of
O	6871	6875	char
O	6876	6877	s
O	6878	6882	here
O	6883	6890	instead
O	6890	6891	.

O	6892	6896	What
O	6897	6900	was
O	6901	6904	the
O	6905	6915	motivation
O	6916	6918	to
O	6919	6925	design
O	6926	6929	the
O	6930	6933	API
O	6934	6938	this
O	6939	6942	way
O	6942	6943	?

O	6945	6953	Question
O	6953	6954	-
O	6954	6962	22740464

O	6963	6964	I
O	6965	6968	can
O	6969	6972	add
O	6973	6980	streams
O	6981	6983	or
O	6984	6989	extra
O	6990	6998	elements
O	6998	6999	,
O	7000	7004	like
O	7005	7009	this
O	7009	7010	:
B-api_mention	7011	7017	Stream
O	7018	7024	stream
O	7025	7026	=
B-api_mention	7027	7033	Stream
I-api_mention	7033	7034	.
I-api_mention	7034	7040	concat
O	7040	7041	(
O	7041	7048	stream1
O	7048	7049	,
B-api_mention	7050	7056	Stream
I-api_mention	7056	7057	.
I-api_mention	7057	7063	concat
I-api_mention	7063	7064	(
I-api_mention	7064	7068	args
I-api_mention	7068	7069	)
O	7069	7070	;
O	7071	7074	And
O	7075	7076	I
O	7077	7080	can
O	7081	7084	add
O	7085	7088	new
O	7089	7094	stuff
O	7095	7097	as
O	7098	7099	I
O	7100	7102	go
O	7102	7103	,
O	7104	7108	like
O	7109	7113	this
O	7113	7114	:
B-api_mention	7115	7121	Stream
O	7122	7128	stream
O	7129	7130	=
B-api_mention	7131	7137	Stream
I-api_mention	7137	7138	.
I-api_mention	7138	7144	concat
I-api_mention	7144	7145	(
I-api_mention	7145	7149	args
I-api_mention	7149	7150	)
I-api_mention	7151	7152	.
I-api_mention	7152	7158	filter
I-api_mention	7158	7159	(
I-api_mention	7159	7163	args
I-api_mention	7163	7164	)
O	7164	7165	;
O	7166	7169	But
O	7170	7174	this
O	7175	7177	is
O	7178	7182	ugly
O	7182	7183	,
O	7184	7191	because
B-api_mention	7192	7198	concat
O	7199	7201	is
O	7202	7208	static
O	7208	7209	.
O	7210	7212	If
O	7213	7219	concat
O	7220	7224	were
O	7225	7227	an
O	7228	7236	instance
O	7237	7243	method
O	7243	7244	,
O	7245	7248	the
O	7249	7254	above
O	7255	7263	examples
O	7264	7269	would
O	7270	7272	be
O	7273	7277	much
O	7278	7284	easier
O	7285	7287	to
O	7288	7292	read
O	7292	7293	:
O	7294	7300	Stream
O	7301	7307	stream
O	7308	7309	=
O	7310	7317	stream1
B-api_mention	7317	7318	.
I-api_mention	7318	7324	concat
I-api_mention	7324	7325	(
I-api_mention	7325	7329	args
I-api_mention	7329	7330	)
I-api_mention	7330	7331	.
I-api_mention	7331	7337	concat
I-api_mention	7337	7338	(
I-api_mention	7338	7342	args
I-api_mention	7342	7343	)
O	7343	7344	;
O	7345	7348	And
B-api_mention	7349	7355	Stream
O	7356	7362	stream
O	7363	7364	=
O	7365	7372	stream1
B-api_mention	7373	7374	.
I-api_mention	7374	7380	filter
I-api_mention	7380	7381	(
I-api_mention	7381	7385	args
I-api_mention	7385	7386	)
I-api_mention	7387	7388	.
I-api_mention	7388	7394	concat
I-api_mention	7394	7395	(
I-api_mention	7395	7399	args
I-api_mention	7399	7400	)
I-api_mention	7401	7402	.
I-api_mention	7402	7408	filter
I-api_mention	7408	7409	(
I-api_mention	7409	7413	args
I-api_mention	7413	7414	)
I-api_mention	7415	7416	.
I-api_mention	7416	7422	concat
I-api_mention	7422	7423	(
I-api_mention	7423	7427	args
I-api_mention	7427	7428	)
I-api_mention	7429	7430	.
I-api_mention	7430	7436	filter
I-api_mention	7436	7437	(
I-api_mention	7437	7441	args
I-api_mention	7441	7442	)
O	7442	7443	;
O	7444	7446	My
O	7447	7455	question
O	7456	7458	is
O	7458	7459	:
O	7460	7461	1
O	7461	7462	)
O	7463	7465	Is
O	7466	7471	there
O	7472	7475	any
O	7476	7480	good
O	7481	7487	reason
O	7488	7491	why
B-api_mention	7492	7498	concat
O	7499	7501	is
O	7502	7508	static
O	7508	7509	?

O	7510	7512	Or
O	7513	7515	is
O	7516	7521	there
O	7522	7526	some
O	7527	7537	equivalent
O	7538	7546	instance
O	7547	7553	method
O	7554	7555	I
O	7555	7556	'
O	7556	7557	m
O	7558	7565	missing
O	7565	7566	?

O	7567	7568	2
O	7568	7569	)
O	7570	7572	In
O	7573	7576	any
O	7577	7581	case
O	7581	7582	,
O	7583	7585	is
O	7586	7591	there
O	7592	7593	a
O	7594	7600	better
O	7601	7604	way
O	7605	7607	of
O	7608	7613	doing
O	7614	7618	this
O	7618	7619	?

O	7621	7629	Question
O	7629	7630	-
O	7630	7638	23756966

O	7639	7644	While
O	7645	7658	investigating
O	7659	7662	for
O	7663	7664	a
O	7665	7671	little
O	7672	7678	debate
O	7679	7680	w
O	7680	7681	.
O	7681	7682	r
O	7682	7683	.
O	7683	7684	t
O	7684	7685	.
O	7686	7691	using
B-api_mention	7692	7705	StringLiteral
O	7706	7707	+
O	7708	7709	n
O	7710	7713	and
B-api_mention	7714	7721	Integer
I-api_mention	7721	7722	.
I-api_mention	7722	7730	toString
I-api_mention	7730	7731	(
I-api_mention	7731	7734	int
I-api_mention	7734	7735	)
O	7736	7738	to
O	7739	7746	convert
O	7747	7749	an
O	7750	7757	integer
O	7758	7767	primitive
O	7768	7770	to
O	7771	7772	a
O	7773	7779	string
O	7780	7781	I
O	7782	7787	wrote
O	7788	7792	this
O	7793	7796	JMH
O	7797	7811	microbenchmark
O	7811	7812	:
O	7813	7814	#
O	7814	7817	pre
O	7818	7819	I
O	7820	7823	ran
O	7824	7826	it
O	7827	7831	with
O	7832	7835	the
O	7836	7843	default
O	7844	7847	JMH
O	7848	7855	options
O	7856	7860	with
O	7861	7865	both
O	7866	7870	Java
O	7871	7874	VMs
O	7875	7879	that
O	7880	7885	exist
O	7886	7888	on
O	7889	7891	my
O	7892	7897	Linux
O	7898	7905	machine
O	7906	7907	(
O	7907	7909	up
O	7909	7910	-
O	7910	7912	to
O	7912	7913	-
O	7913	7917	date
O	7918	7924	Mageia
O	7925	7926	4
O	7927	7929	64
O	7929	7930	-
O	7930	7933	bit
O	7933	7934	,
O	7935	7940	Intel
O	7941	7943	i7
O	7943	7944	-
O	7944	7948	3770
O	7949	7952	CPU
O	7952	7953	,
O	7954	7958	32GB
O	7959	7962	RAM
O	7962	7963	)
O	7963	7964	.

O	7965	7968	The
O	7969	7974	first
O	7975	7978	JVM
O	7979	7982	was
O	7983	7986	the
O	7987	7990	one
O	7991	7999	supplied
O	8000	8004	with
O	8005	8011	Oracle
O	8012	8015	JDK
O	8016	8019	8u5
O	8020	8022	64
O	8022	8023	-
O	8023	8026	bit
O	8026	8027	:
O	8028	8029	#
O	8029	8032	pre
O	8033	8037	With
O	8038	8042	this
O	8043	8046	JVM
O	8047	8048	I
O	8049	8052	got
O	8053	8059	pretty
O	8060	8064	much
O	8065	8069	what
O	8070	8071	I
O	8072	8080	expected
O	8080	8081	:
O	8082	8083	#
O	8083	8086	pre
O	8087	8088	I
O	8088	8089	.
O	8089	8090	e
O	8090	8091	.
O	8092	8097	using
O	8098	8101	the
B-api_mention	8102	8115	StringBuilder
O	8116	8121	class
O	8122	8124	is
O	8125	8131	slower
O	8132	8135	due
O	8136	8138	to
O	8139	8142	the
O	8143	8153	additional
O	8154	8162	overhead
O	8163	8165	of
O	8166	8174	creating
O	8175	8178	the
B-api_mention	8179	8192	StringBuilder
O	8193	8199	object
O	8200	8203	and
O	8204	8213	appending
O	8214	8216	an
O	8217	8222	empty
O	8223	8229	string
O	8229	8230	.

O	8231	8236	Using
B-api_mention	8237	8243	String
I-api_mention	8243	8244	.
I-api_mention	8244	8250	format
I-api_mention	8250	8251	(
I-api_mention	8251	8255	args
O	8255	8256	)
O	8257	8259	is
O	8260	8264	even
O	8265	8271	slower
O	8271	8272	,
O	8273	8275	by
O	8276	8278	an
O	8279	8284	order
O	8285	8287	of
O	8288	8297	magnitude
O	8298	8300	or
O	8301	8303	so
O	8303	8304	.

O	8305	8308	The
O	8309	8321	distribution
O	8321	8322	-
O	8322	8330	provided
O	8331	8339	compiler
O	8339	8340	,
O	8341	8343	on
O	8344	8347	the
O	8348	8353	other
O	8354	8358	hand
O	8358	8359	,
O	8360	8362	is
O	8363	8368	based
O	8369	8371	on
O	8372	8379	OpenJDK
O	8380	8381	1
O	8381	8382	.
O	8382	8383	7
O	8383	8384	:
O	8385	8386	#
O	8386	8389	pre
O	8390	8393	The
O	8394	8401	results
O	8402	8406	here
O	8407	8411	were
O	8412	8423	interesting
O	8424	8425	:
O	8426	8427	#
O	8427	8430	pre
O	8431	8434	Why
O	8435	8439	does
B-api_mention	8440	8453	StringBuilder
I-api_mention	8453	8454	.
I-api_mention	8454	8460	append
I-api_mention	8460	8461	(
I-api_mention	8461	8465	args
I-api_mention	8465	8466	)
O	8467	8473	appear
O	8474	8476	so
O	8477	8481	much
O	8482	8488	faster
O	8489	8493	with
O	8494	8498	this
O	8499	8502	JVM
O	8502	8503	?

O	8504	8511	Looking
O	8512	8514	at
O	8515	8518	the
B-api_mention	8519	8532	StringBuilder
O	8533	8538	class
O	8539	8545	source
O	8546	8550	code
O	8551	8559	revealed
O	8560	8567	nothing
O	8568	8580	particularly
O	8581	8592	interesting
O	8593	8594	-
O	8595	8598	the
O	8599	8605	method
O	8606	8608	in
O	8609	8617	question
O	8618	8620	is
O	8621	8627	almost
O	8628	8637	identical
O	8638	8640	to
O	8641	8648	Integer
O	8648	8649	#
B-api_mention	8649	8657	toString
I-api_mention	8657	8658	(
I-api_mention	8658	8662	args
I-api_mention	8662	8663	)
O	8664	8665	.

O	8666	8679	Interestingly
O	8680	8686	enough
O	8686	8687	,
O	8688	8697	appending
O	8698	8701	the
O	8702	8708	result
O	8709	8711	of
B-api_mention	8712	8719	Integer
I-api_mention	8719	8720	.
I-api_mention	8720	8728	toString
I-api_mention	8728	8729	(
I-api_mention	8729	8733	args
I-api_mention	8733	8734	)
O	8735	8736	(
O	8736	8739	the
O	8740	8754	stringBuilder2
O	8755	8769	microbenchmark
O	8769	8770	)
O	8771	8775	does
O	8776	8779	not
O	8780	8786	appear
O	8787	8789	to
O	8790	8792	be
O	8793	8799	faster
O	8799	8800	.

O	8801	8803	Is
O	8804	8808	this
O	8809	8820	performance
O	8821	8832	discrepancy
O	8833	8835	an
O	8836	8841	issue
O	8842	8846	with
O	8847	8850	the
O	8851	8858	testing
O	8859	8866	harness
O	8866	8867	?

O	8868	8870	Or
O	8871	8875	does
O	8876	8878	my
O	8879	8886	OpenJDK
O	8887	8890	JVM
O	8891	8898	contain
O	8899	8912	optimizations
O	8913	8917	that
O	8918	8923	would
O	8924	8930	affect
O	8931	8935	this
O	8936	8946	particular
O	8947	8951	code
O	8952	8953	(
O	8953	8957	anti
O	8957	8958	)
O	8958	8959	-
O	8959	8966	pattern
O	8966	8967	?

O	8968	8972	EDIT
O	8972	8973	:
O	8974	8977	For
O	8978	8979	a
O	8980	8984	more
O	8985	8993	straight
O	8993	8994	-
O	8994	9001	forward
O	9002	9012	comparison
O	9012	9013	,
O	9014	9015	I
O	9016	9025	installed
O	9026	9032	Oracle
O	9033	9036	JDK
O	9037	9038	1
O	9038	9039	.
O	9039	9043	7u55
O	9043	9044	:
O	9045	9046	#
O	9046	9049	pre
O	9050	9053	The
O	9054	9061	results
O	9062	9065	are
O	9066	9073	similar
O	9074	9076	to
O	9077	9082	those
O	9083	9085	of
O	9086	9093	OpenJDK
O	9093	9094	:
O	9095	9096	#
O	9096	9099	pre
O	9100	9102	It
O	9103	9108	seems
O	9109	9113	that
O	9114	9118	this
O	9119	9121	is
O	9122	9123	a
O	9124	9128	more
O	9129	9136	general
O	9137	9141	Java
O	9142	9143	7
O	9144	9146	vs
O	9147	9151	Java
O	9152	9153	8
O	9154	9159	issue
O	9159	9160	.

O	9161	9168	Perhaps
O	9169	9173	Java
O	9174	9175	7
O	9176	9179	had
O	9180	9184	more
O	9185	9195	aggressive
O	9196	9202	string
O	9203	9216	optimizations
O	9216	9217	?

O	9218	9222	EDIT
O	9223	9224	2
O	9225	9226	:
O	9227	9230	For
O	9231	9243	completeness
O	9243	9244	,
O	9245	9249	here
O	9250	9253	are
O	9254	9257	the
O	9258	9264	string
O	9264	9265	-
O	9265	9272	related
O	9273	9275	VM
O	9276	9283	options
O	9284	9287	for
O	9288	9292	both
O	9293	9295	of
O	9296	9301	these
O	9302	9306	JVMs
O	9306	9307	:
O	9308	9311	For
O	9312	9318	Oracle
O	9319	9322	JDK
O	9323	9326	8u5
O	9326	9327	:
O	9328	9329	#
O	9329	9332	pre
O	9333	9336	For
O	9337	9344	OpenJDK
O	9345	9346	1
O	9346	9347	.
O	9347	9348	7
O	9348	9349	:
O	9350	9351	#
O	9351	9354	pre
O	9355	9358	The
B-api_mention	9359	9373	UseStringCache
O	9374	9380	option
O	9381	9384	was
O	9385	9392	removed
O	9393	9395	in
O	9396	9400	Java
O	9401	9402	8
O	9403	9407	with
O	9408	9410	no
O	9411	9422	replacement
O	9422	9423	,
O	9424	9426	so
O	9427	9428	I
O	9429	9434	doubt
O	9435	9439	that
O	9440	9445	makes
O	9446	9449	any
O	9450	9460	difference
O	9460	9461	.

O	9462	9465	The
O	9466	9470	rest
O	9471	9473	of
O	9474	9477	the
O	9478	9485	options
O	9486	9492	appear
O	9493	9495	to
O	9496	9500	have
O	9501	9504	the
O	9505	9509	same
O	9510	9518	settings
O	9518	9519	.

O	9520	9524	EDIT
O	9525	9526	3
O	9526	9527	:
O	9528	9529	A
O	9530	9534	side
O	9534	9535	-
O	9535	9537	by
O	9537	9538	-
O	9538	9542	side
O	9543	9553	comparison
O	9554	9556	of
O	9557	9560	the
O	9561	9567	source
O	9568	9572	code
O	9573	9575	of
O	9576	9579	the
B-api_mention	9580	9601	AbstractStringBuilder
O	9602	9603	,
B-api_mention	9604	9617	StringBuilder
O	9618	9621	and
B-api_mention	9622	9629	Integer
O	9630	9637	classes
O	9638	9642	from
O	9643	9646	the
O	9647	9650	src
O	9650	9651	.
O	9651	9654	zip
O	9655	9659	file
O	9660	9662	of
O	9663	9670	reveals
O	9671	9678	nothing
O	9679	9688	noteworty
O	9688	9689	.

O	9690	9695	Apart
O	9696	9700	from
O	9701	9702	a
O	9703	9708	whole
O	9709	9712	lot
O	9713	9715	of
O	9716	9724	cosmetic
O	9725	9728	and
O	9729	9742	documentation
O	9743	9750	changes
O	9750	9751	,
B-api_mention	9752	9759	Integer
O	9760	9763	now
O	9764	9767	has
O	9768	9772	some
O	9773	9780	support
O	9781	9784	for
O	9785	9793	unsigned
O	9794	9802	integers
O	9803	9806	and
B-api_mention	9807	9820	StringBuilder
O	9821	9824	has
O	9825	9829	been
O	9830	9838	slightly
O	9839	9849	refactored
O	9850	9852	to
O	9853	9858	share
O	9859	9863	more
O	9864	9868	code
O	9869	9873	with
B-api_mention	9874	9886	StringBuffer
O	9887	9888	.

O	9889	9893	None
O	9894	9896	of
O	9897	9902	these
O	9903	9910	changes
O	9911	9915	seem
O	9916	9918	to
O	9919	9925	affect
O	9926	9929	the
O	9930	9934	code
O	9935	9940	paths
O	9941	9945	used
O	9946	9948	by
B-api_mention	9949	9962	StringBuilder
I-api_mention	9962	9963	#
I-api_mention	9963	9969	append
I-api_mention	9969	9970	(
I-api_mention	9970	9974	args
I-api_mention	9974	9975	)
O	9976	9977	,
O	9978	9986	although
O	9987	9988	I
O	9989	9992	may
O	9993	9997	have
O	9998	10004	missed
O	10005	10014	something
O	10014	10015	.

O	10016	10017	A
O	10018	10028	comparison
O	10029	10031	of
O	10032	10035	the
O	10036	10044	assembly
O	10045	10049	code
O	10050	10059	generated
O	10060	10063	for
B-api_mention	10064	10070	IntStr
I-api_mention	10070	10071	#
I-api_mention	10071	10086	integerToString
I-api_mention	10086	10087	(
I-api_mention	10087	10091	args
I-api_mention	10091	10092	)
O	10093	10096	and
B-api_mention	10097	10103	IntStr
I-api_mention	10103	10104	#
I-api_mention	10104	10118	stringBuilder0
I-api_mention	10118	10119	(
I-api_mention	10119	10123	args
I-api_mention	10123	10124	)
O	10125	10127	is
O	10128	10131	far
O	10132	10136	more
O	10137	10148	interesting
O	10148	10149	.

O	10150	10153	The
O	10154	10159	basic
O	10160	10166	layout
O	10167	10169	of
O	10170	10173	the
O	10174	10178	code
O	10179	10188	generated
O	10189	10192	for
O	10193	10199	IntStr
O	10199	10200	#
O	10200	10215	integerToString
O	10215	10216	(
O	10216	10220	args
O	10220	10221	)
O	10222	10225	was
O	10226	10233	similar
O	10234	10237	for
O	10238	10242	both
O	10243	10247	JVMs
O	10247	10248	,
O	10249	10257	although
O	10258	10264	Oracle
O	10265	10268	JDK
O	10269	10272	8u5
O	10273	10279	seemed
O	10280	10282	to
O	10283	10285	be
O	10286	10290	more
O	10291	10301	aggressive
O	10302	10303	w
O	10303	10304	.
O	10304	10305	r
O	10305	10306	.
O	10306	10307	t
O	10307	10308	.
O	10309	10317	inlining
O	10318	10322	some
O	10323	10328	calls
O	10329	10335	within
O	10336	10339	the
B-api_mention	10340	10347	Integer
I-api_mention	10347	10348	#
I-api_mention	10348	10356	toString
I-api_mention	10356	10357	(
I-api_mention	10357	10361	args
I-api_mention	10361	10362	)
O	10363	10367	code
O	10367	10368	.

O	10369	10374	There
O	10375	10378	was
O	10379	10380	a
O	10381	10386	clear
O	10387	10401	correspondence
O	10402	10406	with
O	10407	10410	the
O	10411	10415	Java
O	10416	10422	source
O	10423	10427	code
O	10427	10428	,
O	10429	10433	even
O	10434	10437	for
O	10438	10445	someone
O	10446	10450	with
O	10451	10458	minimal
O	10459	10467	assembly
O	10468	10478	experience
O	10478	10479	.

O	10480	10483	The
O	10484	10492	assembly
O	10493	10497	code
O	10498	10501	for
B-api_mention	10502	10508	IntStr
I-api_mention	10508	10509	#
I-api_mention	10509	10523	stringBuilder0
I-api_mention	10523	10524	(
I-api_mention	10524	10528	args
I-api_mention	10528	10529	)
O	10530	10531	,
O	10532	10539	however
O	10539	10540	,
O	10541	10544	was
O	10545	10554	radically
O	10555	10564	different
O	10564	10565	.

O	10566	10569	The
O	10570	10574	code
O	10575	10584	generated
O	10585	10587	by
O	10588	10594	Oracle
O	10595	10598	JDK
O	10599	10602	8u5
O	10603	10606	was
O	10607	10611	once
O	10612	10617	again
O	10618	10626	directly
O	10627	10634	related
O	10635	10637	to
O	10638	10641	the
O	10642	10646	Java
O	10647	10653	source
O	10654	10658	code
O	10659	10660	-
O	10661	10662	I
O	10663	10668	could
O	10669	10675	easily
O	10676	10685	recognise
O	10686	10689	the
O	10690	10694	same
O	10695	10701	layout
O	10701	10702	.

O	10703	10705	On
O	10706	10709	the
O	10710	10718	contrary
O	10718	10719	,
O	10720	10723	the
O	10724	10728	code
O	10729	10738	generated
O	10739	10741	by
O	10742	10749	OpenJDK
O	10750	10751	7
O	10752	10755	was
O	10756	10762	almost
O	10763	10777	unrecognisable
O	10778	10780	to
O	10781	10784	the
O	10785	10794	untrained
O	10795	10798	eye
O	10799	10800	(
O	10800	10804	like
O	10805	10809	mine
O	10809	10810	)
O	10810	10811	.

O	10812	10815	The
O	10816	10819	new
B-api_mention	10820	10833	StringBuilder
I-api_mention	10833	10834	(
I-api_mention	10834	10838	args
I-api_mention	10838	10839	)
O	10840	10844	call
O	10845	10848	was
O	10849	10858	seemingly
O	10859	10866	removed
O	10866	10867	,
O	10868	10870	as
O	10871	10874	was
O	10875	10878	the
O	10879	10887	creation
O	10888	10890	of
O	10891	10894	the
O	10895	10900	array
O	10901	10903	in
O	10904	10907	the
B-api_mention	10908	10921	StringBuilder
O	10922	10933	constructor
O	10933	10934	.

O	10935	10946	Additionaly
O	10946	10947	,
O	10948	10951	the
O	10952	10964	disassembler
O	10965	10971	plugin
O	10972	10975	was
O	10976	10979	not
O	10980	10984	able
O	10985	10987	to
O	10988	10995	provide
O	10996	10998	as
O	10999	11003	many
O	11004	11014	references
O	11015	11017	to
O	11018	11021	the
O	11022	11028	source
O	11029	11033	code
O	11034	11036	as
O	11037	11039	it
O	11040	11043	did
O	11044	11046	in
O	11047	11050	JDK
O	11051	11052	8
O	11052	11053	.

O	11054	11055	I
O	11056	11062	assume
O	11063	11067	that
O	11068	11072	this
O	11073	11075	is
O	11076	11082	either
O	11083	11086	the
O	11087	11093	result
O	11094	11096	of
O	11097	11098	a
O	11099	11103	much
O	11104	11108	more
O	11109	11119	aggressive
O	11120	11132	optimization
O	11133	11137	pass
O	11138	11140	in
O	11141	11148	OpenJDK
O	11149	11150	7
O	11150	11151	,
O	11152	11154	or
O	11155	11159	more
O	11160	11168	probably
O	11169	11172	the
O	11173	11179	result
O	11180	11182	of
O	11183	11192	inserting
O	11193	11197	hand
O	11197	11198	-
O	11198	11205	written
O	11206	11209	low
O	11209	11210	-
O	11210	11215	level
O	11216	11220	code
O	11221	11224	for
O	11225	11232	certain
B-api_mention	11233	11246	StringBuilder
O	11247	11257	operations
O	11257	11258	.

O	11259	11260	I
O	11261	11263	am
O	11264	11270	unsure
O	11271	11274	why
O	11275	11279	this
O	11280	11292	optimization
O	11293	11297	does
O	11298	11301	not
O	11302	11308	happen
O	11309	11311	in
O	11312	11314	my
O	11315	11318	JVM
O	11319	11320	8
O	11321	11335	implementation
O	11336	11338	or
O	11339	11342	why
O	11343	11346	the
O	11347	11351	same
O	11352	11365	optimizations
O	11366	11370	were
O	11371	11374	not
O	11375	11386	implemented
O	11387	11390	for
B-api_mention	11391	11398	Integer
I-api_mention	11398	11399	#
I-api_mention	11399	11407	toString
I-api_mention	11407	11408	(
I-api_mention	11408	11412	args
I-api_mention	11412	11413	)
O	11414	11416	in
O	11417	11420	JVM
O	11421	11422	7
O	11422	11423	.

O	11424	11425	I
O	11426	11431	guess
O	11432	11439	someone
O	11440	11448	familiar
O	11449	11453	with
O	11454	11457	the
O	11458	11465	related
O	11466	11471	parts
O	11472	11474	of
O	11475	11478	the
O	11479	11482	JRE
O	11483	11489	source
O	11490	11494	code
O	11495	11500	would
O	11501	11505	have
O	11506	11508	to
O	11509	11515	answer
O	11516	11521	these
O	11522	11531	questions
O	11531	11532	.
O	11532	11533	.
O	11533	11534	.

O	11536	11544	Question
O	11544	11545	-
O	11545	11553	21947452
O	11553	11554	,
O	11555	11561	answer
O	11561	11562	-
O	11562	11570	29434641

O	11571	11572	I
O	11573	11582	performed
O	11583	11588	tests
O	11589	11591	on
O	11592	11599	Eclipse
O	11600	11602	vs
O	11603	11611	Netbeans
O	11612	11613	8
O	11613	11614	.
O	11614	11615	0
O	11615	11616	.
O	11616	11617	2
O	11617	11618	,
O	11619	11623	both
O	11624	11628	with
O	11629	11633	Java
O	11634	11641	version
O	11642	11643	1
O	11643	11644	.
O	11644	11645	8
O	11645	11646	;
O	11647	11648	I
O	11649	11653	used
B-api_mention	11654	11660	System
I-api_mention	11660	11661	.
I-api_mention	11661	11669	nanoTime
I-api_mention	11669	11670	(
I-api_mention	11670	11674	args
I-api_mention	11674	11675	)
O	11676	11679	for
O	11680	11692	measurements
O	11692	11693	.

O	11694	11701	Eclipse
O	11701	11702	:
O	11703	11704	I
O	11705	11708	got
O	11709	11712	the
O	11713	11717	same
O	11718	11722	time
O	11723	11725	on
O	11726	11730	both
O	11731	11736	cases
O	11737	11738	-
O	11739	11745	around
O	11746	11747	1
O	11747	11748	.
O	11748	11751	564
O	11752	11759	seconds
O	11760	11761	.

O	11762	11770	Netbeans
O	11770	11771	:
O	11772	11773	#
O	11773	11775	li
O	11776	11781	Using
O	11782	11783	"
O	11783	11784	#
O	11784	11785	"
O	11785	11786	:
O	11787	11788	1
O	11788	11789	.
O	11789	11792	536
O	11793	11800	seconds
O	11801	11802	#
O	11802	11804	li
O	11805	11810	Using
O	11811	11812	"
O	11812	11813	B
O	11813	11814	"
O	11814	11815	:
O	11816	11818	44
O	11818	11819	.
O	11819	11822	164
O	11823	11830	seconds
O	11831	11833	So
O	11833	11834	,
O	11835	11837	it
O	11838	11843	looks
O	11844	11848	like
O	11849	11857	Netbeans
O	11858	11861	has
O	11862	11865	bad
O	11866	11877	performance
O	11878	11880	on
O	11881	11886	print
O	11887	11889	to
O	11890	11897	console
O	11897	11898	.

O	11899	11904	After
O	11905	11909	more
O	11910	11918	research
O	11919	11920	I
O	11921	11929	realized
O	11930	11934	that
O	11935	11938	the
O	11939	11946	problem
O	11947	11949	is
O	11950	11954	line
O	11954	11955	-
O	11955	11963	wrapping
O	11964	11966	of
O	11967	11970	the
O	11971	11974	max
O	11975	11981	buffer
O	11982	11984	of
O	11985	11993	Netbeans
O	11994	11995	(
O	11995	11997	it
O	11997	11998	'
O	11998	11999	s
O	12000	12003	not
O	12004	12014	restricted
O	12015	12017	to
B-api_mention	12018	12024	System
I-api_mention	12024	12025	.
I-api_mention	12025	12028	out
I-api_mention	12028	12029	.
I-api_mention	12029	12036	println
O	12037	12044	command
O	12044	12045	)
O	12045	12046	,
O	12047	12059	demonstrated
O	12060	12062	by
O	12063	12067	this
O	12068	12072	code
O	12072	12073	:
O	12074	12075	#
O	12075	12078	pre
O	12079	12082	The
O	12083	12087	time
O	12088	12095	results
O	12096	12099	are
O	12100	12104	less
O	12105	12109	then
O	12110	12111	1
O	12112	12123	millisecond
O	12124	12129	every
O	12130	12139	iteration
O	12140	12146	except
O	12147	12152	every
O	12153	12158	fifth
O	12159	12168	iteration
O	12169	12170	,
O	12171	12175	when
O	12176	12179	the
O	12180	12184	time
O	12185	12191	result
O	12192	12194	is
O	12195	12201	around
O	12202	12205	225
O	12206	12217	millisecond
O	12217	12218	.

O	12219	12228	Something
O	12229	12233	like
O	12234	12235	(
O	12235	12237	in
O	12238	12249	nanoseconds
O	12249	12250	)
O	12250	12251	:
O	12252	12253	#
O	12253	12256	pre
O	12257	12260	And
O	12261	12263	so
O	12264	12266	on
O	12266	12267	.
O	12267	12268	.

O	12269	12276	Summary
O	12276	12277	:
O	12278	12279	#
O	12279	12281	li
O	12282	12289	Eclipse
O	12290	12295	works
O	12296	12305	perfectly
O	12306	12310	with
O	12311	12312	"
O	12312	12313	B
O	12313	12314	"
O	12315	12316	#
O	12316	12318	li
O	12319	12327	Netbeans
O	12328	12331	has
O	12332	12333	a
O	12334	12338	line
O	12338	12339	-
O	12339	12347	wrapping
O	12348	12355	problem
O	12356	12360	that
O	12361	12364	can
O	12365	12367	be
O	12368	12374	solved
O	12375	12376	(
O	12376	12383	because
O	12384	12387	the
O	12388	12395	problem
O	12396	12400	does
O	12401	12404	not
O	12405	12410	occur
O	12411	12413	in
O	12414	12421	eclipse
O	12421	12422	)
O	12422	12423	(
O	12423	12430	without
O	12431	12437	adding
O	12438	12443	space
O	12444	12449	after
O	12450	12451	B
O	12452	12453	(
O	12453	12454	"
O	12454	12455	B
O	12456	12457	"
O	12457	12458	)
O	12458	12459	)
O	12459	12460	.

O	12462	12470	Question
O	12470	12471	-
O	12471	12479	20945049
O	12479	12480	,
O	12481	12487	answer
O	12487	12488	-
O	12488	12496	20945113

B-api_mention	12497	12503	String
O	12504	12506	is
O	12507	12516	immutable
O	12516	12517	*
O	12518	12521	but
O	12522	12526	this
O	12527	12531	only
O	12532	12537	means
O	12538	12541	you
O	12542	12548	cannot
O	12549	12555	change
O	12556	12558	it
O	12559	12564	using
O	12565	12568	its
O	12569	12575	public
O	12576	12579	API
O	12579	12580	.

O	12581	12585	What
O	12586	12589	you
O	12590	12593	are
O	12594	12599	doing
O	12600	12604	here
O	12605	12607	is
O	12608	12621	circumventing
O	12622	12625	the
O	12626	12632	normal
O	12633	12636	API
O	12636	12637	,
O	12638	12643	using
O	12644	12654	reflection
O	12654	12655	.

O	12656	12659	The
O	12660	12664	same
O	12665	12668	way
O	12668	12669	,
O	12670	12673	you
O	12674	12677	can
O	12678	12684	change
O	12685	12688	the
O	12689	12695	values
O	12696	12698	of
O	12699	12704	enums
O	12704	12705	,
O	12706	12712	change
O	12713	12716	the
O	12717	12723	lookup
O	12724	12729	table
O	12730	12734	used
O	12735	12737	in
B-api_mention	12738	12745	Integer
O	12746	12756	autoboxing
O	12757	12760	etc
O	12760	12761	.

O	12762	12765	Now
O	12765	12766	,
O	12767	12770	the
O	12771	12777	reason
O	12778	12780	s1
O	12781	12784	and
O	12785	12787	s2
O	12788	12794	change
O	12795	12800	value
O	12800	12801	,
O	12802	12804	is
O	12805	12809	that
O	12810	12814	they
O	12815	12819	both
O	12820	12825	refer
O	12826	12828	to
O	12829	12832	the
O	12833	12837	same
O	12838	12846	interned
O	12847	12853	string
O	12853	12854	.

O	12855	12858	The
O	12859	12867	compiler
O	12868	12872	does
O	12873	12877	this
O	12878	12879	(
O	12879	12881	as
O	12882	12891	mentioned
O	12892	12894	by
O	12895	12900	other
O	12901	12908	answers
O	12908	12909	)
O	12909	12910	.

O	12911	12914	The
O	12915	12921	reason
O	12922	12924	s3
O	12925	12929	does
O	12930	12933	not
O	12934	12937	was
O	12938	12946	actually
O	12947	12948	a
O	12949	12952	bit
O	12953	12963	surprising
O	12964	12966	to
O	12967	12969	me
O	12969	12970	,
O	12971	12973	as
O	12974	12975	I
O	12976	12983	thought
O	12984	12986	it
O	12987	12992	would
O	12993	12998	share
O	12999	13002	the
O	13003	13008	value
O	13009	13014	array
O	13015	13016	(
O	13017	13019	it
O	13020	13023	did
O	13024	13026	in
O	13027	13034	earlier
O	13035	13042	version
O	13043	13045	of
O	13046	13050	Java
O	13051	13052	,
O	13053	13059	before
O	13060	13064	Java
O	13065	13068	7u6
O	13068	13069	)
O	13069	13070	.

O	13071	13078	However
O	13078	13079	,
O	13080	13087	looking
O	13088	13090	at
O	13091	13094	the
O	13095	13101	source
O	13102	13106	code
O	13107	13109	of
B-api_mention	13110	13116	String
O	13117	13118	,
O	13119	13121	we
O	13122	13125	can
O	13126	13129	see
O	13130	13134	that
O	13135	13138	the
O	13139	13144	value
O	13145	13154	character
O	13155	13160	array
O	13161	13164	for
O	13165	13166	a
O	13167	13176	substring
O	13177	13179	is
O	13180	13188	actually
O	13189	13195	copied
O	13196	13197	(
O	13197	13202	using
B-api_mention	13203	13209	Arrays
I-api_mention	13209	13210	.
I-api_mention	13210	13221	copyOfRange
I-api_mention	13221	13222	(
I-api_mention	13222	13226	args
I-api_mention	13226	13227	)
O	13228	13229	)
O	13229	13230	.

O	13231	13235	This
O	13236	13238	is
O	13239	13242	why
O	13243	13245	it
O	13246	13250	goes
O	13251	13260	unchanged
O	13260	13261	.

O	13262	13265	You
O	13266	13269	can
O	13270	13277	install
O	13278	13279	a
B-api_mention	13280	13295	SecurityManager
O	13296	13297	,
O	13298	13300	to
O	13301	13306	avoid
O	13307	13316	malicious
O	13317	13321	code
O	13322	13324	to
O	13325	13327	do
O	13328	13332	such
O	13333	13339	things
O	13339	13340	.

O	13341	13344	But
O	13345	13349	keep
O	13350	13352	in
O	13353	13357	mind
O	13358	13362	that
O	13363	13367	some
O	13368	13377	libraries
O	13378	13384	depend
O	13385	13387	on
O	13388	13393	using
O	13394	13399	these
O	13400	13404	kind
O	13405	13407	of
O	13408	13418	reflection
O	13419	13425	tricks
O	13426	13427	(
O	13427	13436	typically
O	13437	13440	ORM
O	13441	13446	tools
O	13446	13447	,
O	13448	13451	AOP
O	13452	13461	libraries
O	13462	13465	etc
O	13465	13466	)
O	13466	13467	.

O	13468	13469	*
O	13469	13470	)
O	13471	13472	I
O	13473	13482	initially
O	13483	13488	wrote
O	13489	13493	that
B-api_mention	13494	13500	String
O	13501	13502	s
O	13503	13507	aren
O	13507	13508	'
O	13508	13509	t
O	13510	13516	really
O	13517	13526	immutable
O	13526	13527	,
O	13528	13532	just
O	13533	13534	"
O	13534	13543	effective
O	13544	13553	immutable
O	13553	13554	"
O	13554	13555	.

O	13556	13560	This
O	13561	13566	might
O	13567	13569	be
O	13570	13580	misleading
O	13581	13583	in
O	13584	13587	the
O	13588	13595	current
O	13596	13610	implementation
O	13611	13613	of
B-api_mention	13614	13620	String
O	13621	13622	,
O	13623	13628	where
O	13629	13632	the
O	13633	13638	value
O	13639	13644	array
O	13645	13647	is
O	13648	13654	indeed
O	13655	13661	marked
O	13662	13669	private
O	13670	13675	final
O	13676	13677	.

O	13678	13680	It
O	13680	13681	'
O	13681	13682	s
O	13683	13688	still
O	13689	13694	worth
O	13695	13701	noting
O	13701	13702	,
O	13703	13709	though
O	13709	13710	,
O	13711	13715	that
O	13716	13721	there
O	13722	13724	is
O	13725	13727	no
O	13728	13731	way
O	13732	13734	to
O	13735	13742	declare
O	13743	13745	an
O	13746	13751	array
O	13752	13754	in
O	13755	13759	Java
O	13760	13762	as
O	13763	13772	immutable
O	13772	13773	,
O	13774	13776	so
O	13777	13781	care
O	13782	13786	must
O	13787	13789	be
O	13790	13795	taken
O	13796	13799	not
O	13800	13802	to
O	13803	13809	expose
O	13810	13812	it
O	13813	13820	outside
O	13821	13824	its
O	13825	13830	class
O	13830	13831	,
O	13832	13836	even
O	13837	13841	with
O	13842	13845	the
O	13846	13852	proper
O	13853	13859	access
O	13860	13869	modifiers
O	13869	13870	.

O	13871	13873	As
O	13874	13878	this
O	13879	13884	topic
O	13885	13890	seems
O	13891	13905	overwhelmingly
O	13906	13913	popular
O	13913	13914	,
O	13915	13919	here
O	13919	13920	'
O	13920	13921	s
O	13922	13926	some
O	13927	13936	suggested
O	13937	13944	further
O	13945	13952	reading
O	13952	13953	:
O	13954	13959	Heinz
O	13960	13966	Kabutz
O	13966	13967	'
O	13967	13968	s
O	13969	13979	Reflection
O	13980	13987	Madness
O	13988	13992	talk
O	13993	13997	from
O	13998	14006	JavaZone
O	14007	14011	2009
O	14011	14012	,
O	14013	14018	which
O	14019	14025	covers
O	14026	14027	a
O	14028	14031	lot
O	14032	14034	of
O	14035	14038	the
O	14039	14045	issues
O	14046	14048	in
O	14049	14052	the
O	14053	14055	OP
O	14055	14056	,
O	14057	14062	along
O	14063	14067	with
O	14068	14073	other
O	14074	14084	reflection
O	14084	14085	.
O	14085	14086	.
O	14086	14087	.
O	14088	14092	well
O	14092	14093	.
O	14093	14094	.
O	14094	14095	.
O	14096	14103	madness
O	14103	14104	.

O	14105	14107	It
O	14108	14114	covers
O	14115	14118	why
O	14119	14123	this
O	14124	14126	is
O	14127	14136	sometimes
O	14137	14143	useful
O	14143	14144	.

O	14145	14148	And
O	14149	14152	why
O	14152	14153	,
O	14154	14158	most
O	14159	14161	of
O	14162	14165	the
O	14166	14170	time
O	14170	14171	,
O	14172	14175	you
O	14176	14182	should
O	14183	14188	avoid
O	14189	14191	it
O	14191	14192	.

O	14193	14194	:
O	14194	14195	-
O	14195	14196	)

O	14198	14206	Question
O	14206	14207	-
O	14207	14215	20945049
O	14215	14216	,
O	14217	14223	answer
O	14223	14224	-
O	14224	14232	20945268

O	14233	14235	In
O	14236	14240	Java
O	14240	14241	,
O	14242	14244	if
O	14245	14248	two
O	14249	14255	string
O	14256	14265	primitive
O	14266	14275	variables
O	14276	14279	are
O	14280	14291	initialized
O	14292	14294	to
O	14295	14298	the
O	14299	14303	same
O	14304	14311	literal
O	14311	14312	,
O	14313	14315	it
O	14316	14323	assigns
O	14324	14327	the
O	14328	14332	same
O	14333	14342	reference
O	14343	14345	to
O	14346	14350	both
O	14351	14360	variables
O	14360	14361	:
O	14362	14363	#
O	14363	14366	pre
O	14367	14368	#
O	14368	14378	blockquote
O	14379	14383	That
O	14384	14386	is
O	14387	14390	the
O	14391	14397	reason
O	14398	14401	the
O	14402	14412	comparison
O	14413	14420	returns
O	14421	14425	true
O	14425	14426	.

O	14427	14430	The
O	14431	14436	third
O	14437	14443	string
O	14444	14446	is
O	14447	14454	created
O	14455	14460	using
B-api_mention	14461	14470	substring
I-api_mention	14470	14471	(
I-api_mention	14471	14475	args
I-api_mention	14475	14476	)
O	14477	14482	which
O	14483	14488	makes
O	14489	14490	a
O	14491	14494	new
O	14495	14501	string
O	14502	14509	instead
O	14510	14512	of
O	14513	14521	pointing
O	14522	14524	to
O	14525	14528	the
O	14529	14533	same
O	14533	14534	.

O	14535	14536	#
O	14536	14546	blockquote
O	14547	14551	When
O	14552	14555	you
O	14556	14562	access
O	14563	14564	a
O	14565	14571	string
O	14572	14577	using
O	14578	14588	reflection
O	14588	14589	,
O	14590	14593	you
O	14594	14597	get
O	14598	14601	the
O	14602	14608	actual
O	14609	14616	pointer
O	14616	14617	:
O	14618	14619	#
O	14619	14622	pre
O	14623	14625	So
O	14626	14632	change
O	14633	14635	to
O	14636	14640	this
O	14641	14645	will
O	14646	14652	change
O	14653	14656	the
O	14657	14663	string
O	14664	14671	holding
O	14672	14673	a
O	14674	14681	pointer
O	14682	14684	to
O	14685	14687	it
O	14687	14688	,
O	14689	14692	but
O	14693	14695	as
O	14696	14698	s3
O	14699	14701	is
O	14702	14709	created
O	14710	14714	with
O	14715	14716	a
O	14717	14720	new
O	14721	14727	string
O	14728	14731	due
O	14732	14734	to
B-api_mention	14735	14744	substring
I-api_mention	14744	14745	(
I-api_mention	14745	14749	args
I-api_mention	14749	14750	)
O	14751	14753	it
O	14754	14759	would
O	14760	14763	not
O	14764	14770	change
O	14770	14771	.

O	14772	14773	#
O	14773	14783	blockquote

O	14785	14793	Question
O	14793	14794	-
O	14794	14802	20945049
O	14802	14803	,
O	14804	14810	answer
O	14810	14811	-
O	14811	14819	20959594

B-api_mention	14820	14826	String
O	14827	14829	is
O	14830	14839	immutable
O	14839	14840	,
O	14841	14844	but
O	14845	14852	through
O	14853	14863	reflection
O	14864	14867	you
O	14867	14868	'
O	14868	14870	re
O	14871	14878	allowed
O	14879	14881	to
O	14882	14888	change
O	14889	14892	the
B-api_mention	14893	14899	String
O	14900	14905	class
O	14905	14906	.

O	14907	14910	You
O	14910	14911	'
O	14911	14913	ve
O	14914	14918	just
O	14919	14928	redefined
O	14929	14932	the
B-api_mention	14933	14939	String
O	14940	14945	class
O	14946	14948	as
O	14949	14956	mutable
O	14957	14959	in
O	14960	14964	real
O	14964	14965	-
O	14965	14969	time
O	14969	14970	.

O	14971	14974	You
O	14975	14980	could
O	14981	14989	redefine
O	14990	14997	methods
O	14998	15000	to
O	15001	15003	be
O	15004	15010	public
O	15011	15013	or
O	15014	15021	private
O	15022	15024	or
O	15025	15031	static
O	15032	15034	if
O	15035	15038	you
O	15039	15045	wanted
O	15045	15046	.

O	15048	15056	Question
O	15056	15057	-
O	15057	15065	20945049
O	15065	15066	,
O	15067	15073	answer
O	15073	15074	-
O	15074	15082	21008747

O	15083	15084	[
O	15084	15094	Disclaimer
O	15095	15099	this
O	15100	15102	is
O	15103	15104	a
O	15105	15117	deliberately
O	15118	15129	opinionated
O	15130	15135	style
O	15136	15138	of
O	15139	15145	answer
O	15146	15148	as
O	15149	15150	I
O	15151	15155	feel
O	15156	15157	a
O	15158	15162	more
O	15163	15164	"
O	15164	15167	don
O	15167	15168	'
O	15168	15169	t
O	15170	15172	do
O	15173	15177	this
O	15178	15180	at
O	15181	15185	home
O	15186	15190	kids
O	15190	15191	"
O	15192	15198	answer
O	15199	15201	is
O	15202	15211	warranted
O	15211	15212	]
O	15213	15216	The
O	15217	15220	sin
O	15221	15223	is
O	15224	15227	the
O	15228	15232	line
B-api_mention	15233	15238	field
I-api_mention	15238	15239	.
I-api_mention	15239	15252	setAccessible
I-api_mention	15252	15253	(
I-api_mention	15253	15257	args
I-api_mention	15257	15258	)
O	15258	15259	;
O	15260	15265	which
O	15266	15270	says
O	15271	15273	to
O	15274	15281	violate
O	15282	15285	the
O	15286	15292	public
O	15293	15296	api
O	15297	15299	by
O	15300	15308	allowing
O	15309	15315	access
O	15316	15318	to
O	15319	15320	a
O	15321	15328	private
O	15329	15334	field
O	15334	15335	.

O	15336	15341	Thats
O	15342	15343	a
O	15344	15349	giant
O	15350	15358	security
O	15359	15363	hole
O	15364	15369	which
O	15370	15373	can
O	15374	15376	be
O	15377	15383	locked
O	15384	15388	down
O	15389	15391	by
O	15392	15403	configuring
O	15404	15405	a
O	15406	15414	security
O	15415	15422	manager
O	15422	15423	.

O	15424	15427	The
O	15428	15438	phenomenon
O	15439	15441	in
O	15442	15445	the
O	15446	15454	question
O	15455	15458	are
O	15459	15473	implementation
O	15474	15481	details
O	15482	15487	which
O	15488	15491	you
O	15492	15497	would
O	15498	15503	never
O	15504	15507	see
O	15508	15512	when
O	15513	15516	not
O	15517	15522	using
O	15523	15527	that
O	15528	15537	dangerous
O	15538	15542	line
O	15543	15545	of
O	15546	15550	code
O	15551	15553	to
O	15554	15561	violate
O	15562	15565	the
O	15566	15572	access
O	15573	15582	modifiers
O	15583	15586	via
O	15587	15597	reflection
O	15597	15598	.

O	15599	15606	Clearly
O	15607	15610	two
O	15611	15612	(
O	15612	15620	normally
O	15620	15621	)
O	15622	15631	immutable
O	15632	15639	strings
O	15640	15643	can
O	15644	15649	share
O	15650	15653	the
O	15654	15658	same
O	15659	15663	char
O	15664	15669	array
O	15669	15670	.

O	15671	15678	Whether
O	15679	15680	a
O	15681	15690	substring
O	15691	15697	shares
O	15698	15701	the
O	15702	15706	same
O	15707	15712	array
O	15713	15720	depends
O	15721	15723	on
O	15724	15731	whether
O	15732	15734	it
O	15735	15738	can
O	15739	15742	and
O	15743	15750	whether
O	15751	15754	the
O	15755	15764	developer
O	15765	15772	thought
O	15773	15775	to
O	15776	15781	share
O	15782	15784	it
O	15784	15785	.

O	15786	15794	Normally
O	15795	15800	these
O	15801	15804	are
O	15805	15814	invisible
O	15815	15829	implementation
O	15830	15837	details
O	15838	15843	which
O	15844	15847	you
O	15848	15854	should
O	15855	15858	not
O	15859	15863	have
O	15864	15866	to
O	15867	15871	know
O	15872	15878	unless
O	15879	15882	you
O	15883	15888	shoot
O	15889	15892	the
O	15893	15899	access
O	15900	15908	modifier
O	15909	15916	through
O	15917	15920	the
O	15921	15925	head
O	15926	15930	with
O	15931	15935	that
O	15936	15940	line
O	15941	15943	of
O	15944	15948	code
O	15948	15949	.

O	15950	15952	It
O	15953	15955	is
O	15956	15962	simply
O	15963	15966	not
O	15967	15968	a
O	15969	15973	good
O	15974	15978	idea
O	15979	15981	to
O	15982	15986	rely
O	15987	15991	upon
O	15992	15996	such
O	15997	16004	details
O	16005	16010	which
O	16011	16017	cannot
O	16018	16020	be
O	16021	16032	experienced
O	16033	16040	without
O	16041	16050	violating
O	16051	16054	the
O	16055	16061	access
O	16062	16071	modifiers
O	16072	16077	using
O	16078	16088	reflection
O	16088	16089	.

O	16090	16093	The
O	16094	16099	owner
O	16100	16102	of
O	16103	16107	that
O	16108	16113	class
O	16114	16118	only
O	16119	16127	supports
O	16128	16131	the
O	16132	16138	normal
O	16139	16145	public
O	16146	16149	API
O	16150	16153	and
O	16154	16156	is
O	16157	16161	free
O	16162	16164	to
O	16165	16169	make
O	16170	16184	implementation
O	16185	16192	changes
O	16193	16195	in
O	16196	16199	the
O	16200	16206	future
O	16206	16207	.

O	16208	16214	Having
O	16215	16219	said
O	16220	16223	all
O	16224	16228	that
O	16229	16232	the
O	16233	16237	line
O	16238	16240	of
O	16241	16245	code
O	16246	16248	is
O	16249	16255	really
O	16256	16260	very
O	16261	16267	useful
O	16268	16272	when
O	16273	16276	you
O	16277	16281	have
O	16282	16283	a
O	16284	16287	gun
O	16288	16292	held
O	16293	16296	you
O	16297	16301	your
O	16302	16306	head
O	16307	16314	forcing
O	16315	16318	you
O	16319	16321	to
O	16322	16324	do
O	16325	16329	such
O	16330	16339	dangerous
O	16340	16346	things
O	16346	16347	.

O	16348	16353	Using
O	16354	16358	that
O	16359	16363	back
O	16364	16368	door
O	16369	16371	is
O	16372	16379	usually
O	16380	16381	a
O	16382	16386	code
O	16387	16392	smell
O	16393	16397	that
O	16398	16401	you
O	16402	16406	need
O	16407	16409	to
O	16410	16417	upgrade
O	16418	16420	to
O	16421	16427	better
O	16428	16435	library
O	16436	16440	code
O	16441	16446	where
O	16447	16450	you
O	16451	16454	don
O	16454	16455	'
O	16455	16456	t
O	16457	16461	have
O	16462	16464	to
O	16465	16468	sin
O	16468	16469	.

O	16470	16477	Another
O	16478	16484	common
O	16485	16488	use
O	16489	16491	of
O	16492	16496	that
O	16497	16506	dangerous
O	16507	16511	line
O	16512	16514	of
O	16515	16519	code
O	16520	16522	is
O	16523	16525	to
O	16526	16531	write
O	16532	16533	a
O	16534	16535	"
O	16535	16541	voodoo
O	16542	16551	framework
O	16551	16552	"
O	16553	16554	(
O	16554	16557	orm
O	16557	16558	,
O	16559	16568	injection
O	16569	16578	container
O	16578	16579	,
O	16580	16581	.
O	16581	16582	.
O	16582	16583	.
O	16583	16584	)
O	16584	16585	.

O	16586	16590	Many
O	16591	16596	folks
O	16597	16600	get
O	16601	16610	religious
O	16611	16616	about
O	16617	16621	such
O	16622	16632	frameworks
O	16633	16634	(
O	16634	16638	both
O	16639	16642	for
O	16643	16646	and
O	16647	16654	against
O	16655	16659	them
O	16659	16660	)
O	16661	16663	so
O	16664	16665	I
O	16666	16670	will
O	16671	16676	avoid
O	16677	16685	inviting
O	16686	16687	a
O	16688	16693	flame
O	16694	16697	war
O	16698	16700	by
O	16701	16707	saying
O	16708	16715	nothing
O	16716	16721	other
O	16722	16726	than
O	16727	16730	the
O	16731	16735	vast
O	16736	16744	majority
O	16745	16747	of
O	16748	16759	programmers
O	16760	16763	don
O	16763	16764	'
O	16764	16765	t
O	16766	16770	have
O	16771	16773	to
O	16774	16776	go
O	16777	16782	there
O	16782	16783	.

O	16785	16793	Question
O	16793	16794	-
O	16794	16802	22409102
O	16802	16803	,
O	16804	16810	answer
O	16810	16811	-
O	16811	16819	22409270

O	16820	16823	You
O	16824	16827	can
O	16828	16831	use
B-api_mention	16832	16837	Float
I-api_mention	16837	16838	.
I-api_mention	16838	16852	floatToIntBits
O	16853	16855	to
O	16856	16863	convert
O	16864	16866	it
O	16867	16869	to
O	16870	16872	an
O	16873	16876	int
O	16877	16880	and
O	16881	16885	look
O	16886	16888	at
O	16889	16892	the
O	16893	16896	bit
O	16897	16904	pattern
O	16904	16905	:
O	16906	16907	#
O	16907	16910	pre

O	16912	16920	Question
O	16920	16921	-
O	16921	16929	22409102
O	16929	16930	,
O	16931	16937	answer
O	16937	16938	-
O	16938	16946	22501695

O	16947	16950	The
O	16951	16959	approach
O	16960	16964	used
O	16965	16967	by
B-api_mention	16968	16972	Math
I-api_mention	16972	16973	.
I-api_mention	16973	16976	min
O	16977	16979	is
O	16980	16987	similar
O	16988	16990	to
O	16991	16995	what
O	16996	17002	Jesper
O	17003	17011	proposes
O	17012	17015	but
O	17016	17017	a
O	17018	17024	little
O	17025	17032	clearer
O	17032	17033	:
O	17034	17035	#
O	17035	17038	pre

O	17040	17048	Question
O	17048	17049	-
O	17049	17057	22409102
O	17057	17058	,
O	17059	17065	answer
O	17065	17066	-
O	17066	17074	33501556

B-api_mention	17075	17081	Double
I-api_mention	17081	17082	.
I-api_mention	17082	17088	equals
O	17089	17102	distinguishes
O	17103	17104	±
O	17104	17105	0
O	17105	17106	.
O	17106	17107	0
O	17108	17110	in
O	17111	17115	Java
O	17115	17116	.

O	17117	17118	(
O	17118	17123	There
O	17123	17124	'
O	17124	17125	s
O	17126	17130	also
B-api_mention	17131	17136	Float
I-api_mention	17136	17137	.
I-api_mention	17137	17143	equals
O	17144	17145	.
O	17145	17146	)
O	17147	17148	I
O	17148	17149	'
O	17149	17150	m
O	17151	17152	a
O	17153	17156	bit
O	17157	17166	surprised
O	17167	17169	no
O	17169	17170	-
O	17170	17173	one
O	17174	17177	has
O	17178	17187	mentioned
O	17188	17193	these
O	17193	17194	,
O	17195	17197	as
O	17198	17202	they
O	17203	17207	seem
O	17208	17210	to
O	17211	17213	me
O	17214	17221	clearer
O	17222	17226	than
O	17227	17230	any
O	17231	17237	method
O	17238	17243	given
O	17244	17246	so
O	17247	17250	far
O	17250	17251	!

O	17253	17261	Question
O	17261	17262	-
O	17262	17270	22501230
O	17270	17271	,
O	17272	17278	answer
O	17278	17279	-
O	17279	17287	22511214

O	17288	17289	I
O	17290	17293	don
O	17293	17294	'
O	17294	17295	t
O	17296	17300	like
O	17301	17304	any
O	17305	17307	of
O	17308	17311	the
O	17312	17321	solutions
O	17322	17331	presented
O	17332	17338	except
O	17339	17342	for
O	17343	17346	JAB
O	17346	17347	'
O	17347	17348	s
O	17348	17349	.

O	17350	17354	None
O	17355	17357	of
O	17358	17361	the
O	17362	17368	others
O	17369	17373	make
O	17374	17376	it
O	17377	17381	easy
O	17382	17384	to
O	17385	17389	read
O	17390	17393	the
O	17394	17398	code
O	17399	17402	and
O	17403	17413	understand
O	17414	17418	what
O	17419	17421	is
O	17422	17427	being
O	17428	17436	computed
O	17437	17438	.

O	17439	17443	Here
O	17443	17444	'
O	17444	17445	s
O	17446	17449	how
O	17450	17451	I
O	17452	17457	would
O	17458	17463	write
O	17464	17468	this
O	17469	17473	code
O	17474	17475	-
O	17475	17476	-
O	17477	17478	I
O	17479	17483	only
O	17484	17488	know
O	17489	17490	C
O	17490	17491	#
O	17491	17492	,
O	17493	17496	not
O	17497	17501	Java
O	17501	17502	,
O	17503	17506	but
O	17507	17510	you
O	17511	17514	get
O	17515	17518	the
O	17519	17526	picture
O	17526	17527	:
O	17528	17529	#
O	17529	17532	pre
O	17533	17536	Now
O	17537	17539	it
O	17540	17542	is
O	17543	17547	much
O	17548	17552	more
O	17553	17558	clear
O	17559	17563	what
O	17564	17566	is
O	17567	17572	being
O	17573	17581	computed
O	17582	17586	here
O	17586	17587	:
O	17588	17592	this
O	17593	17603	emphasizes
O	17604	17608	that
O	17609	17611	we
O	17612	17615	are
O	17616	17625	computing
O	17626	17629	who
O	17630	17634	gets
O	17635	17638	hit
O	17639	17641	by
O	17642	17646	what
O	17647	17653	attack
O	17653	17654	,
O	17655	17658	and
O	17659	17668	returning
O	17669	17673	both
O	17674	17681	results
O	17681	17682	.

O	17683	17690	However
O	17691	17695	this
O	17696	17701	could
O	17702	17704	be
O	17705	17709	even
O	17710	17716	better
O	17716	17717	;
O	17718	17722	that
B-api_mention	17723	17730	Boolean
O	17731	17736	array
O	17737	17739	is
O	17740	17748	somewhat
O	17749	17755	opaque
O	17755	17756	.

O	17757	17758	I
O	17759	17763	like
O	17764	17767	the
O	17768	17773	table
O	17774	17780	lookup
O	17781	17789	approach
O	17790	17793	but
O	17794	17795	I
O	17796	17801	would
O	17802	17804	be
O	17805	17813	inclined
O	17814	17816	to
O	17817	17822	write
O	17823	17825	it
O	17826	17828	in
O	17829	17833	such
O	17834	17835	a
O	17836	17839	way
O	17840	17844	that
O	17845	17849	made
O	17850	17852	it
O	17853	17858	clear
O	17859	17863	what
O	17864	17867	the
O	17868	17876	intended
O	17877	17881	game
O	17882	17891	semantics
O	17892	17896	were
O	17896	17897	.

O	17898	17902	That
O	17903	17905	is
O	17905	17906	,
O	17907	17913	rather
O	17914	17918	than
O	17919	17920	"
O	17920	17922	an
O	17923	17929	attack
O	17930	17932	of
O	17933	17937	zero
O	17938	17941	and
O	17942	17943	a
O	17944	17951	defense
O	17952	17954	of
O	17955	17958	one
O	17959	17966	results
O	17967	17969	in
O	17970	17972	no
O	17973	17976	hit
O	17976	17977	"
O	17977	17978	,
O	17979	17986	instead
O	17987	17991	find
O	17992	17993	a
O	17994	17997	way
O	17998	18000	to
O	18001	18005	make
O	18006	18009	the
O	18010	18014	code
O	18015	18019	more
O	18020	18027	clearly
O	18028	18033	imply
O	18034	18035	"
O	18035	18036	a
O	18037	18040	low
O	18041	18045	kick
O	18046	18052	attack
O	18053	18056	and
O	18057	18058	a
O	18059	18062	low
O	18063	18068	block
O	18069	18076	defense
O	18077	18084	results
O	18085	18087	in
O	18088	18090	no
O	18091	18094	hit
O	18094	18095	"
O	18095	18096	.

O	18097	18101	Make
O	18102	18105	the
O	18106	18110	code
O	18111	18118	reflect
O	18119	18122	the
O	18123	18131	business
O	18132	18137	logic
O	18138	18140	of
O	18141	18144	the
O	18145	18149	game
O	18149	18150	.

O	18152	18160	Question
O	18160	18161	-
O	18161	18169	22847105
O	18169	18170	,
O	18171	18177	answer
O	18177	18178	-
O	18178	18186	37354549

O	18187	18190	The
O	18191	18194	way
O	18195	18196	I
O	18197	18202	think
O	18203	18208	about
O	18209	18211	it
O	18212	18214	is
O	18215	18219	that
O	18220	18223	you
O	18224	18227	use
B-api_mention	18228	18235	flatMap
O	18236	18240	when
O	18241	18244	the
O	18245	18253	function
O	18254	18257	you
O	18258	18264	wanted
O	18265	18267	to
O	18268	18271	put
O	18272	18278	inside
O	18279	18281	of
B-api_mention	18282	18285	map
I-api_mention	18285	18286	(
I-api_mention	18286	18290	args
I-api_mention	18290	18291	)
O	18292	18299	returns
O	18300	18302	an
B-api_mention	18303	18313	Observable
O	18314	18315	.

O	18316	18318	In
O	18319	18324	which
O	18325	18329	case
O	18330	18333	you
O	18334	18339	might
O	18340	18345	still
O	18346	18349	try
O	18350	18352	to
O	18353	18356	use
B-api_mention	18357	18360	map
I-api_mention	18360	18361	(
I-api_mention	18361	18365	args
I-api_mention	18365	18366	)
O	18367	18370	but
O	18371	18373	it
O	18374	18379	would
O	18380	18382	be
O	18383	18394	unpractical
O	18394	18395	.

O	18396	18399	Let
O	18400	18402	me
O	18403	18406	try
O	18407	18409	to
O	18410	18417	explain
O	18418	18421	why
O	18421	18422	.

O	18423	18425	If
O	18426	18428	in
O	18429	18433	such
O	18434	18438	case
O	18439	18442	you
O	18443	18450	decided
O	18451	18453	to
O	18454	18459	stick
O	18460	18464	with
O	18465	18468	map
O	18469	18470	,
O	18471	18474	you
O	18475	18480	would
O	18481	18484	get
O	18485	18487	an
B-api_mention	18488	18498	Observable
I-api_mention	18498	18499	<
I-api_mention	18499	18500	T
I-api_mention	18500	18501	>
O	18502	18503	.

O	18504	18507	For
O	18508	18515	example
O	18516	18518	in
O	18519	18523	your
O	18524	18528	case
O	18528	18529	,
O	18530	18532	if
O	18533	18535	we
O	18536	18540	used
O	18541	18543	an
O	18544	18553	imaginary
O	18554	18560	RxGson
O	18561	18568	library
O	18568	18569	,
O	18570	18574	that
O	18575	18583	returned
O	18584	18586	an
B-api_mention	18587	18597	Observable
I-api_mention	18597	18598	<
I-api_mention	18598	18599	T
I-api_mention	18599	18600	>
O	18601	18605	from
O	18606	18608	it
O	18608	18609	'
O	18609	18610	s
B-api_mention	18611	18617	toJson
I-api_mention	18617	18618	(
I-api_mention	18618	18622	args
I-api_mention	18622	18623	)
O	18624	18630	method
O	18631	18632	(
O	18632	18639	instead
O	18640	18642	of
O	18643	18649	simply
O	18650	18659	returning
O	18660	18661	a
B-api_mention	18662	18668	String
O	18669	18670	)
O	18671	18673	it
O	18674	18679	would
O	18680	18684	look
O	18685	18689	like
O	18690	18694	this
O	18694	18695	:
O	18696	18697	#
O	18697	18700	pre
O	18701	18703	At
O	18704	18708	this
O	18709	18714	point
O	18715	18717	it
O	18718	18723	would
O	18724	18726	be
O	18727	18733	pretty
O	18734	18740	tricky
O	18741	18743	to
B-api_mention	18744	18753	subscribe
I-api_mention	18753	18754	(
I-api_mention	18754	18758	args
I-api_mention	18758	18759	)
O	18760	18762	to
O	18763	18767	such
O	18768	18770	an
O	18771	18781	observable
O	18781	18782	.

O	18783	18789	Inside
O	18790	18792	of
O	18793	18795	it
O	18796	18799	you
O	18800	18805	would
O	18806	18809	get
O	18810	18812	an
B-api_mention	18813	18823	Observable
I-api_mention	18823	18824	<
I-api_mention	18824	18825	T
I-api_mention	18825	18826	>
O	18827	18829	to
O	18830	18835	which
O	18836	18839	you
O	18840	18845	would
O	18846	18851	again
O	18852	18856	need
O	18857	18859	to
B-api_mention	18860	18869	subscribe
I-api_mention	18869	18870	(
I-api_mention	18870	18874	args
I-api_mention	18874	18875	)
O	18876	18878	to
O	18879	18882	get
O	18883	18886	the
O	18887	18892	value
O	18892	18893	.

O	18894	18899	Which
O	18900	18902	is
O	18903	18906	not
O	18907	18916	practical
O	18917	18919	or
O	18920	18924	nice
O	18925	18927	to
O	18928	18932	look
O	18933	18935	at
O	18935	18936	.

O	18937	18939	So
O	18940	18942	to
O	18943	18947	make
O	18948	18950	it
O	18951	18957	useful
O	18958	18961	one
O	18962	18966	idea
O	18967	18969	is
O	18970	18972	to
O	18973	18974	"
O	18974	18981	flatten
O	18981	18982	"
O	18983	18987	this
O	18988	18998	observable
O	18999	19001	of
O	19002	19013	observables
O	19014	19015	(
O	19015	19018	you
O	19019	19024	might
O	19025	19030	start
O	19031	19033	to
O	19034	19037	see
O	19038	19043	where
O	19044	19047	the
O	19048	19052	name
O	19053	19054	_
O	19054	19058	flat
O	19058	19059	_
O	19059	19062	Map
O	19063	19068	comes
O	19069	19073	from
O	19073	19074	)
O	19074	19075	.

O	19076	19082	RxJava
O	19083	19091	provides
O	19092	19093	a
O	19094	19097	few
O	19098	19102	ways
O	19103	19105	to
O	19106	19113	flatten
O	19114	19125	observables
O	19126	19129	and
O	19130	19133	for
O	19134	19138	sake
O	19139	19141	of
O	19142	19152	simplicity
O	19153	19157	lets
O	19158	19164	assume
O	19165	19170	merge
O	19171	19173	is
O	19174	19178	what
O	19179	19181	we
O	19182	19186	want
O	19186	19187	.

O	19188	19193	Merge
O	19194	19203	basically
O	19204	19209	takes
O	19210	19211	a
O	19212	19217	bunch
O	19218	19220	of
O	19221	19232	observables
O	19233	19236	and
O	19237	19242	emits
O	19243	19251	whenever
O	19252	19255	any
O	19256	19258	of
O	19259	19263	them
O	19264	19269	emits
O	19269	19270	.

O	19271	19272	(
O	19272	19276	Lots
O	19277	19279	of
O	19280	19286	people
O	19287	19292	would
O	19293	19298	argue
O	19299	19305	switch
O	19306	19311	would
O	19312	19314	be
O	19315	19316	a
O	19317	19323	better
O	19324	19331	default
O	19331	19332	.
O	19333	19336	But
O	19337	19339	if
O	19340	19343	you
O	19343	19344	'
O	19344	19346	re
O	19347	19355	emitting
O	19356	19360	just
O	19361	19364	one
O	19365	19370	value
O	19370	19371	,
O	19372	19374	it
O	19375	19380	doesn
O	19380	19381	'
O	19381	19382	t
O	19383	19389	matter
O	19390	19396	anyway
O	19396	19397	.
O	19397	19398	)
O	19399	19401	So
O	19402	19410	amending
O	19411	19414	our
O	19415	19423	previous
O	19424	19431	snippet
O	19432	19434	we
O	19435	19440	would
O	19441	19444	get
O	19444	19445	:
O	19446	19447	#
O	19447	19450	pre
O	19451	19455	This
O	19456	19458	is
O	19459	19460	a
O	19461	19464	lot
O	19465	19469	more
O	19470	19476	useful
O	19476	19477	,
O	19478	19485	because
O	19486	19497	subscribing
O	19498	19500	to
O	19501	19505	that
O	19506	19507	(
O	19507	19509	or
O	19510	19517	mapping
O	19517	19518	,
O	19519	19521	or
O	19522	19531	filtering
O	19531	19532	,
O	19533	19535	or
O	19535	19536	.
O	19536	19537	.
O	19537	19538	.
O	19538	19539	)
O	19540	19543	you
O	19544	19548	just
O	19549	19552	get
O	19553	19556	the
B-api_mention	19557	19563	String
O	19564	19569	value
O	19569	19570	.

O	19571	19572	(
O	19572	19576	Also
O	19576	19577	,
O	19578	19582	mind
O	19583	19586	you
O	19586	19587	,
O	19588	19592	such
O	19593	19600	variant
O	19601	19603	of
B-api_mention	19604	19609	merge
I-api_mention	19609	19610	(
I-api_mention	19610	19614	args
I-api_mention	19614	19615	)
O	19616	19620	does
O	19621	19624	not
O	19625	19630	exist
O	19631	19633	in
O	19634	19640	RxJava
O	19640	19641	,
O	19642	19645	but
O	19646	19648	if
O	19649	19652	you
O	19653	19663	understand
O	19664	19667	the
O	19668	19672	idea
O	19673	19675	of
O	19676	19681	merge
O	19682	19686	then
O	19687	19688	I
O	19689	19693	hope
O	19694	19697	you
O	19698	19702	also
O	19703	19713	understand
O	19714	19717	how
O	19718	19722	that
O	19723	19728	would
O	19729	19733	work
O	19733	19734	.
O	19734	19735	)
O	19736	19738	So
O	19739	19748	basically
O	19749	19756	because
O	19757	19761	such
B-api_mention	19762	19767	merge
I-api_mention	19767	19768	(
I-api_mention	19768	19772	args
I-api_mention	19772	19773	)
O	19774	19780	should
O	19781	19789	probably
O	19790	19794	only
O	19795	19799	ever
O	19800	19802	be
O	19803	19809	useful
O	19810	19814	when
O	19815	19817	it
O	19818	19826	succeeds
O	19827	19828	a
B-api_mention	19829	19832	map
I-api_mention	19832	19833	(
I-api_mention	19833	19837	args
O	19837	19838	)
O	19839	19848	returning
O	19849	19851	an
O	19852	19862	observable
O	19863	19866	and
O	19867	19869	so
O	19870	19873	you
O	19874	19877	don
O	19877	19878	'
O	19878	19879	t
O	19880	19884	have
O	19885	19887	to
O	19888	19892	type
O	19893	19897	this
O	19898	19902	over
O	19903	19906	and
O	19907	19911	over
O	19912	19917	again
O	19917	19918	,
B-api_mention	19919	19926	flatMap
I-api_mention	19926	19927	(
I-api_mention	19927	19931	args
I-api_mention	19931	19932	)
O	19933	19936	was
O	19937	19944	created
O	19945	19947	as
O	19948	19949	a
O	19950	19959	shorthand
O	19959	19960	.

O	19961	19963	It
O	19964	19971	applies
O	19972	19975	the
O	19976	19983	mapping
O	19984	19992	function
O	19993	19997	just
O	19998	20000	as
O	20001	20002	a
O	20003	20009	normal
B-api_mention	20010	20013	map
I-api_mention	20013	20014	(
I-api_mention	20014	20018	args
I-api_mention	20018	20019	)
O	20020	20025	would
O	20025	20026	,
O	20027	20030	but
O	20031	20036	later
O	20037	20044	instead
O	20045	20047	of
O	20048	20056	emitting
O	20057	20060	the
O	20061	20069	returned
O	20070	20076	values
O	20077	20079	it
O	20080	20084	also
O	20085	20086	"
O	20086	20094	flattens
O	20094	20095	"
O	20096	20097	(
O	20097	20099	or
O	20100	20106	merges
O	20106	20107	)
O	20108	20112	them
O	20112	20113	.

O	20114	20118	That
O	20118	20119	'
O	20119	20120	s
O	20121	20124	the
O	20125	20132	general
O	20133	20136	use
O	20137	20141	case
O	20141	20142	.

O	20143	20145	It
O	20146	20148	is
O	20149	20153	most
O	20154	20160	useful
O	20161	20163	in
O	20164	20165	a
O	20166	20174	codebase
O	20175	20179	that
O	20180	20184	uses
O	20185	20187	Rx
O	20188	20195	allover
O	20196	20199	the
O	20200	20205	place
O	20206	20209	and
O	20210	20213	you
O	20213	20214	'
O	20214	20216	ve
O	20217	20220	got
O	20221	20225	many
O	20226	20233	methods
O	20234	20243	returning
O	20244	20255	observables
O	20255	20256	,
O	20257	20262	which
O	20263	20266	you
O	20267	20271	want
O	20272	20274	to
O	20275	20280	chain
O	20281	20285	with
O	20286	20291	other
O	20292	20299	methods
O	20300	20309	returning
O	20310	20321	observables
O	20321	20322	.

O	20323	20325	In
O	20326	20330	your
O	20331	20334	use
O	20335	20339	case
O	20340	20342	it
O	20343	20350	happens
O	20351	20353	to
O	20354	20356	be
O	20357	20363	useful
O	20364	20366	as
O	20367	20371	well
O	20371	20372	,
O	20373	20380	because
B-api_mention	20381	20384	map
I-api_mention	20384	20385	(
I-api_mention	20385	20389	args
I-api_mention	20389	20390	)
O	20391	20394	can
O	20395	20399	only
O	20400	20409	transform
O	20410	20413	one
O	20414	20419	value
O	20420	20427	emitted
O	20428	20430	in
B-api_mention	20431	20437	onNext
I-api_mention	20437	20438	(
I-api_mention	20438	20442	args
I-api_mention	20442	20443	)
O	20444	20448	into
O	20449	20456	another
O	20457	20462	value
O	20463	20470	emitted
O	20471	20473	in
B-api_mention	20474	20480	onNext
I-api_mention	20480	20481	(
I-api_mention	20481	20485	args
I-api_mention	20485	20486	)
O	20487	20488	.

O	20489	20492	But
O	20493	20495	it
O	20496	20502	cannot
O	20503	20512	transform
O	20513	20515	it
O	20516	20520	into
O	20521	20529	multiple
O	20530	20536	values
O	20536	20537	,
O	20538	20540	no
O	20541	20546	value
O	20547	20549	at
O	20550	20553	all
O	20554	20556	or
O	20557	20559	an
O	20560	20565	error
O	20565	20566	.

O	20567	20570	And
O	20571	20573	as
O	20574	20582	akarnokd
O	20583	20588	wrote
O	20589	20591	in
O	20592	20595	his
O	20596	20602	answer
O	20603	20604	(
O	20604	20607	and
O	20608	20612	mind
O	20613	20616	you
O	20617	20619	he
O	20619	20620	'
O	20620	20621	s
O	20622	20626	much
O	20627	20634	smarter
O	20635	20639	than
O	20640	20642	me
O	20642	20643	,
O	20644	20652	probably
O	20653	20655	in
O	20656	20663	general
O	20663	20664	,
O	20665	20668	but
O	20669	20671	at
O	20672	20677	least
O	20678	20682	when
O	20683	20685	it
O	20686	20691	comes
O	20692	20694	to
O	20695	20701	RxJava
O	20701	20702	)
O	20703	20706	you
O	20707	20714	shouldn
O	20714	20715	'
O	20715	20716	t
O	20717	20722	throw
O	20723	20733	exceptions
O	20734	20738	from
O	20739	20743	your
B-api_mention	20744	20747	map
I-api_mention	20747	20748	(
I-api_mention	20748	20752	args
I-api_mention	20752	20753	)
O	20754	20755	.

O	20756	20758	So
O	20759	20766	instead
O	20767	20770	you
O	20771	20774	can
O	20775	20778	use
B-api_mention	20779	20786	flatMap
I-api_mention	20786	20787	(
I-api_mention	20787	20791	args
I-api_mention	20791	20792	)
O	20793	20796	and
O	20797	20803	return
B-api_mention	20804	20814	Observable
I-api_mention	20814	20815	.
I-api_mention	20815	20819	just
I-api_mention	20819	20820	(
I-api_mention	20820	20824	args
I-api_mention	20824	20825	)
O	20825	20826	;
O	20827	20831	when
O	20832	20835	all
O	20836	20840	goes
O	20841	20845	well
O	20845	20846	,
O	20847	20850	but
O	20851	20857	return
B-api_mention	20858	20868	Observable
I-api_mention	20868	20869	.
I-api_mention	20869	20874	error
I-api_mention	20874	20875	(
I-api_mention	20875	20879	args
I-api_mention	20879	20880	)
O	20880	20881	;
O	20882	20886	when
O	20887	20896	something
O	20897	20902	fails
O	20902	20903	.

O	20904	20907	See
O	20908	20911	his
O	20912	20918	answer
O	20919	20922	for
O	20923	20924	a
O	20925	20933	complete
O	20934	20941	snippet
O	20941	20942	:
O	20943	20944	#
O	20944	20945	a

O	20947	20955	Question
O	20955	20956	-
O	20956	20964	22182669
O	20964	20965	,
O	20966	20972	answer
O	20972	20973	-
O	20973	20981	22222274

B-api_mention	20982	21000	StackOverflowError
O	21001	21007	occurs
O	21008	21011	due
O	21012	21014	to
O	21015	21017	an
O	21018	21029	application
O	21030	21038	recurses
O	21039	21042	too
O	21043	21049	deeply
O	21050	21051	(
O	21051	21055	This
O	21056	21058	is
O	21059	21062	not
O	21063	21065	an
O	21066	21072	answer
O	21073	21076	you
O	21077	21080	are
O	21081	21090	expecting
O	21090	21091	)
O	21091	21092	.

O	21093	21096	Now
O	21097	21102	other
O	21103	21109	things
O	21110	21112	to
O	21113	21119	happen
O	21120	21122	to
B-api_mention	21123	21141	StackOverflowError
O	21142	21144	is
O	21145	21149	keep
O	21150	21157	calling
O	21158	21165	methods
O	21166	21170	from
O	21171	21178	methods
O	21179	21183	till
O	21184	21187	you
O	21188	21191	get
B-api_mention	21192	21210	StackOverflowError
O	21211	21212	,
O	21213	21216	but
O	21217	21223	nobody
O	21224	21227	can
O	21228	21235	program
O	21236	21238	to
O	21239	21242	get
B-api_mention	21243	21261	StackOverflowError
O	21262	21265	and
O	21266	21270	even
O	21271	21273	if
O	21274	21279	those
O	21280	21290	programmer
O	21291	21294	are
O	21295	21300	doing
O	21301	21303	so
O	21304	21308	then
O	21309	21313	they
O	21314	21317	are
O	21318	21321	not
O	21322	21331	following
O	21332	21338	coding
O	21339	21348	standards
O	21349	21352	for
O	21353	21363	cyclomatic
O	21364	21374	complixity
O	21375	21379	that
O	21380	21385	every
O	21386	21396	programmer
O	21397	21400	has
O	21401	21403	to
O	21404	21414	understand
O	21415	21420	while
O	21421	21432	programming
O	21432	21433	.

O	21434	21438	Such
O	21439	21445	reason
O	21446	21449	for
B-api_mention	21450	21451	'
I-api_mention	21451	21469	StackOverflowError
I-api_mention	21469	21470	'
O	21471	21475	will
O	21476	21483	require
O	21484	21488	much
O	21489	21493	time
O	21494	21496	to
O	21497	21504	rectify
O	21505	21507	it
O	21507	21508	.

O	21509	21512	But
O	21513	21524	unknowingly
O	21525	21531	coding
O	21532	21535	one
O	21536	21540	line
O	21541	21543	or
O	21544	21547	two
O	21548	21552	line
O	21553	21558	which
O	21559	21565	causes
B-api_mention	21566	21584	StackOverflowError
O	21585	21587	is
O	21588	21602	understandable
O	21603	21606	and
O	21607	21610	JVM
O	21611	21617	throws
O	21618	21622	that
O	21623	21626	and
O	21627	21629	we
O	21630	21633	can
O	21634	21641	rectify
O	21642	21644	it
O	21645	21654	instantly
O	21654	21655	.

O	21656	21660	Here
O	21661	21663	is
O	21664	21666	my
O	21667	21673	answer
O	21674	21678	with
O	21679	21686	picture
O	21687	21690	for
O	21691	21695	some
O	21696	21701	other
O	21702	21710	question
O	21710	21711	.

O	21713	21721	Question
O	21721	21722	-
O	21722	21730	22182669
O	21730	21731	,
O	21732	21738	answer
O	21738	21739	-
O	21739	21747	22223113

O	21748	21751	The
O	21752	21756	most
O	21757	21763	common
O	21764	21769	cause
O	21770	21772	of
B-api_mention	21773	21791	StackOverFlowError
O	21792	21794	is
O	21795	21806	excessively
O	21807	21811	deep
O	21812	21814	or
O	21815	21823	infinite
O	21824	21833	recursion
O	21833	21834	.

O	21835	21838	For
O	21839	21847	instance
O	21847	21848	:
O	21849	21850	#
O	21850	21853	pre
O	21854	21856	In
O	21857	21861	Java
O	21861	21862	:
O	21863	21868	There
O	21869	21872	are
O	21873	21876	two
O	21877	21882	areas
O	21883	21885	in
O	21886	21892	memory
O	21893	21896	the
O	21897	21901	heap
O	21902	21905	and
O	21906	21911	stack
O	21911	21912	.

O	21913	21916	The
O	21917	21922	stack
O	21923	21929	memory
O	21930	21932	is
O	21933	21937	used
O	21938	21940	to
O	21941	21946	store
O	21947	21952	local
O	21953	21962	variables
O	21963	21966	and
O	21967	21975	function
O	21976	21980	call
O	21980	21981	,
O	21982	21987	while
O	21988	21992	heap
O	21993	21999	memory
O	22000	22002	is
O	22003	22007	used
O	22008	22010	to
O	22011	22016	store
O	22017	22024	objects
O	22025	22027	in
O	22028	22032	Java
O	22032	22033	.

O	22034	22036	If
O	22037	22042	there
O	22043	22045	is
O	22046	22048	no
O	22049	22055	memory
O	22056	22060	left
O	22061	22063	in
O	22064	22069	stack
O	22070	22073	for
O	22074	22081	storing
O	22082	22090	function
O	22091	22095	call
O	22096	22098	or
O	22099	22104	local
O	22105	22113	variable
O	22113	22114	,
O	22115	22118	JVM
O	22119	22123	will
O	22124	22129	throw
B-api_mention	22130	22134	java
I-api_mention	22134	22135	.
I-api_mention	22135	22139	lang
I-api_mention	22139	22140	.
I-api_mention	22140	22158	StackOverFlowError
O	22159	22164	while
O	22165	22167	if
O	22168	22173	there
O	22174	22176	is
O	22177	22179	no
O	22180	22184	more
O	22185	22189	heap
O	22190	22195	space
O	22196	22199	for
O	22200	22208	creating
O	22209	22215	object
O	22215	22216	,
O	22217	22220	JVM
O	22221	22225	will
O	22226	22231	throw
B-api_mention	22232	22236	java
I-api_mention	22236	22237	.
I-api_mention	22237	22241	lang
I-api_mention	22241	22242	.
I-api_mention	22242	22258	OutOfMemoryError

O	22260	22268	Question
O	22268	22269	-
O	22269	22277	23453287
O	22277	22278	,
O	22279	22285	answer
O	22285	22286	-
O	22286	22294	23456085

O	22295	22297	It
O	22298	22302	will
O	22303	22305	be
O	22306	22310	hard
O	22311	22313	to
O	22314	22318	find
O	22319	22322	and
O	22323	22331	identify
O	22332	22333	"
O	22333	22336	THE
O	22336	22337	"
O	22338	22344	answer
O	22344	22345	,
O	22346	22349	for
O	22350	22353	the
O	22354	22360	resons
O	22361	22370	mentioned
O	22371	22373	in
O	22374	22377	the
O	22378	22386	comments
O	22387	22391	from
O	22392	22393	@
O	22393	22396	EJP
O	22397	22398	:
O	22399	22404	There
O	22405	22408	are
O	22409	22416	roughly
O	22417	22418	2
O	22419	22420	(
O	22420	22421	+
O	22421	22422	/
O	22422	22423	-
O	22424	22425	2
O	22425	22426	)
O	22427	22433	people
O	22434	22436	in
O	22437	22440	the
O	22441	22446	world
O	22447	22450	who
O	22451	22454	can
O	22455	22459	give
O	22460	22463	the
O	22464	22472	definite
O	22473	22479	answer
O	22480	22482	at
O	22483	22486	all
O	22487	22488	.

O	22489	22492	And
O	22493	22495	in
O	22496	22501	doubt
O	22501	22502	,
O	22503	22506	the
O	22507	22513	answer
O	22514	22519	might
O	22520	22524	just
O	22525	22527	be
O	22528	22537	something
O	22538	22542	like
O	22543	22544	"
O	22544	22554	Supporting
O	22555	22560	final
O	22561	22568	default
O	22569	22576	methods
O	22577	22580	did
O	22581	22584	not
O	22585	22589	seem
O	22590	22592	to
O	22593	22595	be
O	22596	22601	worth
O	22602	22605	the
O	22606	22612	effort
O	22613	22615	of
O	22616	22629	restructuring
O	22630	22633	the
O	22634	22642	internal
O	22643	22647	call
O	22648	22658	resolution
O	22659	22669	mechanisms
O	22669	22670	"
O	22670	22671	.

O	22672	22676	This
O	22677	22679	is
O	22680	22691	speculation
O	22691	22692	,
O	22693	22695	of
O	22696	22702	course
O	22702	22703	,
O	22704	22707	but
O	22708	22710	it
O	22711	22713	is
O	22714	22716	at
O	22717	22722	least
O	22723	22729	backed
O	22730	22732	by
O	22733	22739	subtle
O	22740	22749	evidences
O	22749	22750	,
O	22751	22755	like
O	22756	22760	this
O	22761	22770	Statement
O	22771	22772	(
O	22772	22774	by
O	22775	22778	one
O	22779	22781	of
O	22782	22785	the
O	22786	22789	two
O	22790	22797	persons
O	22797	22798	)
O	22799	22801	in
O	22802	22805	the
O	22806	22813	OpenJDK
O	22814	22821	mailing
O	22822	22826	list
O	22827	22828	:
O	22829	22830	#
O	22830	22840	blockquote
O	22841	22844	and
O	22845	22852	trivial
O	22853	22858	facts
O	22859	22863	like
O	22864	22868	that
O	22869	22870	a
O	22871	22877	method
O	22878	22880	is
O	22881	22887	simply
O	22888	22891	not
O	22892	22902	considered
O	22903	22905	to
O	22906	22908	be
O	22909	22910	a
O	22911	22912	(
O	22912	22918	really
O	22918	22919	)
O	22920	22925	final
O	22926	22932	method
O	22933	22937	when
O	22938	22940	it
O	22941	22943	is
O	22944	22945	a
O	22946	22953	default
O	22954	22960	method
O	22960	22961	,
O	22962	22964	as
O	22965	22974	currently
O	22975	22986	implemented
O	22987	22989	in
O	22990	22993	the
B-api_mention	22994	23000	Method
I-api_mention	23000	23001	:
I-api_mention	23001	23002	:
I-api_mention	23002	23004	is
I-api_mention	23004	23005	_
I-api_mention	23005	23010	final
I-api_mention	23010	23011	_
I-api_mention	23011	23017	method
O	23018	23024	method
O	23025	23027	in
O	23028	23031	the
O	23032	23039	OpenJDK
O	23039	23040	.

O	23041	23048	Further
O	23049	23055	really
O	23056	23057	"
O	23057	23068	authorative
O	23068	23069	"
O	23070	23081	information
O	23082	23084	is
O	23085	23091	indeed
O	23092	23096	hard
O	23097	23099	to
O	23100	23104	find
O	23104	23105	,
O	23106	23110	even
O	23111	23115	with
O	23116	23125	excessive
O	23126	23137	websearches
O	23138	23141	and
O	23142	23144	by
O	23145	23152	reading
O	23153	23159	commit
O	23160	23164	logs
O	23164	23165	.

O	23166	23167	I
O	23168	23175	thought
O	23176	23180	that
O	23181	23183	it
O	23184	23189	might
O	23190	23192	be
O	23193	23200	related
O	23201	23203	to
O	23204	23213	potential
O	23214	23225	ambiguities
O	23226	23232	during
O	23233	23236	the
O	23237	23247	resolution
O	23248	23250	of
O	23251	23260	interface
O	23261	23267	method
O	23268	23273	calls
O	23274	23278	with
O	23279	23282	the
B-api_mention	23283	23298	invokeinterface
O	23299	23310	instruction
O	23311	23314	and
O	23315	23318	and
O	23319	23324	class
O	23325	23331	method
O	23332	23337	calls
O	23337	23338	,
O	23339	23352	corresponding
O	23353	23355	to
O	23356	23359	the
B-api_mention	23360	23373	invokevirtual
O	23374	23385	instruction
O	23385	23386	:
O	23387	23390	For
O	23391	23394	the
B-api_mention	23395	23408	invokevirtual
O	23409	23420	instruction
O	23420	23421	,
O	23422	23427	there
O	23428	23431	may
O	23432	23434	be
O	23435	23436	a
O	23437	23443	simple
O	23444	23450	vtable
O	23451	23457	lookup
O	23457	23458	,
O	23459	23466	because
O	23467	23470	the
O	23471	23477	method
O	23478	23482	must
O	23483	23489	either
O	23490	23492	be
O	23493	23502	inherited
O	23503	23507	from
O	23508	23509	a
O	23510	23520	superclass
O	23520	23521	,
O	23522	23524	or
O	23525	23536	implemented
O	23537	23539	by
O	23540	23543	the
O	23544	23549	class
O	23550	23558	directly
O	23558	23559	.

O	23560	23562	In
O	23563	23571	contrast
O	23572	23574	to
O	23575	23579	that
O	23579	23580	,
O	23581	23583	an
B-api_mention	23584	23599	invokeinterface
O	23600	23604	call
O	23605	23609	must
O	23610	23617	examine
O	23618	23621	the
O	23622	23632	respective
O	23633	23637	call
O	23638	23642	site
O	23643	23645	to
O	23646	23650	find
O	23651	23654	out
O	23655	23660	which
O	23661	23670	interface
O	23671	23675	this
O	23676	23680	call
O	23681	23689	actually
O	23690	23696	refers
O	23697	23699	to
O	23700	23701	(
O	23701	23705	this
O	23706	23708	is
O	23709	23718	explained
O	23719	23721	in
O	23722	23726	more
O	23727	23733	detail
O	23734	23736	in
O	23737	23740	the
O	23741	23755	InterfaceCalls
O	23756	23760	page
O	23761	23763	of
O	23764	23767	the
O	23768	23775	HotSpot
O	23776	23780	Wiki
O	23780	23781	)
O	23781	23782	.

O	23783	23790	However
O	23790	23791	,
O	23792	23797	final
O	23798	23805	methods
O	23806	23808	do
O	23809	23815	either
O	23816	23819	not
O	23820	23823	get
O	23824	23832	inserted
O	23833	23837	into
O	23838	23841	the
O	23842	23848	vtable
O	23849	23851	at
O	23852	23855	all
O	23855	23856	,
O	23857	23859	or
O	23860	23867	replace
O	23868	23876	existing
O	23877	23884	entries
O	23885	23887	in
O	23888	23891	the
O	23892	23898	vtable
O	23899	23900	(
O	23900	23903	see
O	23904	23915	klassVtable
O	23915	23916	.
O	23916	23919	cpp
O	23919	23920	.
O	23921	23925	Line
O	23926	23929	333
O	23930	23931	)
O	23931	23932	,
O	23933	23936	and
O	23937	23946	similarly
O	23946	23947	,
O	23948	23955	default
O	23956	23963	methods
O	23964	23967	are
O	23968	23977	replacing
O	23978	23986	existing
O	23987	23994	entries
O	23995	23997	in
O	23998	24001	the
O	24002	24008	vtable
O	24009	24010	(
O	24010	24013	see
O	24014	24025	klassVtable
O	24025	24026	.
O	24026	24029	cpp
O	24029	24030	,
O	24031	24035	Line
O	24036	24039	202
O	24040	24041	)
O	24041	24042	.

O	24043	24045	So
O	24046	24049	the
O	24050	24056	actual
O	24057	24063	reason
O	24064	24065	(
O	24065	24068	and
O	24069	24073	thus
O	24073	24074	,
O	24075	24078	the
O	24079	24085	answer
O	24085	24086	)
O	24087	24091	must
O	24092	24094	be
O	24095	24101	hidden
O	24102	24108	deeper
O	24109	24115	inside
O	24116	24119	the
O	24120	24121	(
O	24121	24127	rather
O	24128	24135	complex
O	24135	24136	)
O	24137	24143	method
O	24144	24148	call
O	24149	24159	resolution
O	24160	24170	mechanisms
O	24170	24171	,
O	24172	24175	but
O	24176	24181	maybe
O	24182	24187	these
O	24188	24198	references
O	24199	24203	will
O	24204	24216	nevertheless
O	24217	24219	be
O	24220	24230	considered
O	24231	24233	as
O	24234	24239	being
O	24240	24247	helpful
O	24247	24248	,
O	24249	24251	be
O	24252	24254	it
O	24255	24259	only
O	24260	24263	for
O	24264	24270	others
O	24271	24275	that
O	24276	24282	manage
O	24283	24285	to
O	24286	24292	derive
O	24293	24296	the
O	24297	24303	actual
O	24304	24310	answer
O	24311	24315	from
O	24316	24320	that
O	24320	24321	.

O	24323	24331	Question
O	24331	24332	-
O	24332	24340	23079003
O	24340	24341	,
O	24342	24348	answer
O	24348	24349	-
O	24349	24357	23079174

O	24358	24361	You
O	24362	24365	can
O	24366	24369	use
O	24370	24373	the
O	24374	24384	overloaded
O	24385	24392	version
O	24393	24395	of
B-api_mention	24396	24403	toArray
O	24404	24405	,
O	24406	24408	as
O	24409	24412	the
O	24413	24422	following
O	24422	24423	:
O	24424	24425	#
O	24425	24428	pre
O	24429	24432	The
O	24433	24440	purpose
O	24441	24443	of
O	24444	24447	the
B-api_mention	24448	24459	IntFunction
I-api_mention	24459	24460	<
I-api_mention	24460	24461	T
I-api_mention	24461	24462	>
O	24463	24472	generator
O	24473	24475	is
O	24476	24478	to
O	24479	24486	convert
O	24487	24489	an
O	24490	24497	integer
O	24497	24498	,
O	24499	24502	the
O	24503	24507	size
O	24508	24510	of
O	24511	24514	the
O	24515	24520	array
O	24520	24521	,
O	24522	24524	to
O	24525	24526	a
O	24527	24530	new
O	24531	24536	array
O	24536	24537	.

O	24538	24545	Example
O	24546	24550	code
O	24550	24551	:
O	24552	24553	#
O	24553	24556	pre
O	24557	24563	Prints
O	24563	24564	:
O	24565	24566	#
O	24566	24569	pre
O	24570	24577	Another
O	24578	24584	option
O	24585	24587	is
O	24588	24590	to
O	24591	24594	use
O	24595	24596	a
O	24597	24603	method
O	24604	24613	reference
O	24614	24616	to
O	24617	24620	the
O	24621	24627	string
O	24628	24633	array
O	24634	24645	constructor
O	24645	24646	,
O	24647	24651	this
O	24652	24655	one
O	24656	24658	is
O	24659	24660	a
O	24661	24664	bit
O	24665	24669	more
O	24670	24676	tricky
O	24676	24677	.

O	24678	24683	Usage
O	24684	24686	is
O	24687	24691	easy
O	24691	24692	:
B-api_mention	24693	24699	String
O	24699	24700	[
O	24700	24701	]
O	24702	24713	stringArray
O	24714	24715	=
O	24716	24728	streamString
B-api_mention	24728	24729	.
I-api_mention	24729	24736	toArray
I-api_mention	24736	24737	(
I-api_mention	24737	24741	args
I-api_mention	24741	24742	)
O	24742	24743	;
O	24744	24748	What
O	24749	24751	it
O	24752	24756	does
O	24756	24757	,
O	24758	24760	is
O	24761	24765	find
O	24766	24767	a
O	24768	24774	method
O	24775	24779	that
O	24780	24785	takes
O	24786	24788	in
O	24789	24791	an
O	24792	24799	integer
O	24800	24801	(
O	24801	24804	the
O	24805	24809	size
O	24809	24810	)
O	24811	24813	as
O	24814	24822	argument
O	24822	24823	,
O	24824	24827	and
O	24828	24835	returns
O	24836	24837	a
B-api_mention	24838	24844	String
O	24844	24845	[
O	24845	24846	]
O	24847	24848	,
O	24849	24854	which
O	24855	24857	is
O	24858	24865	exactly
O	24866	24870	what
O	24871	24872	(
O	24872	24875	one
O	24876	24878	of
O	24879	24882	the
O	24883	24892	overloads
O	24893	24895	of
O	24895	24896	)
O	24897	24900	new
B-api_mention	24901	24907	String
O	24907	24908	[
O	24908	24909	]
O	24910	24914	does
O	24914	24915	.

O	24917	24925	Question
O	24925	24926	-
O	24926	24934	21242110
O	24934	24935	,
O	24936	24942	answer
O	24942	24943	-
O	24943	24951	27378709

O	24952	24958	Better
O	24959	24962	way
O	24963	24965	is
O	24965	24966	:
O	24967	24968	#
O	24968	24971	pre
O	24972	24982	Advantages
O	24983	24985	of
O	24986	24990	this
O	24991	24998	version
O	24998	24999	:
O	25000	25001	#
O	25001	25003	li
O	25004	25009	works
O	25010	25020	regardless
O	25021	25024	the
O	25025	25030	input
O	25031	25033	is
O	25034	25036	an
O	25037	25045	instance
O	25046	25048	of
O	25049	25053	java
O	25053	25054	.
O	25054	25058	util
O	25058	25059	.
O	25059	25063	Date
O	25064	25066	or
O	25067	25069	it
O	25069	25070	'
O	25070	25071	s
O	25072	25080	subclass
B-api_mention	25081	25085	java
I-api_mention	25085	25086	.
I-api_mention	25086	25089	sql
I-api_mention	25089	25090	.
I-api_mention	25090	25094	Date
O	25095	25096	(
O	25096	25102	unlike
O	25103	25104	@
O	25104	25115	JodaStephen
O	25115	25116	'
O	25116	25117	s
O	25118	25121	way
O	25121	25122	)
O	25122	25123	.

O	25124	25128	This
O	25129	25131	is
O	25132	25138	common
O	25139	25143	with
O	25144	25148	JDBC
O	25149	25159	originated
O	25160	25164	data
O	25164	25165	.
B-api_mention	25166	25170	java
I-api_mention	25170	25171	.
I-api_mention	25171	25174	sql
I-api_mention	25174	25175	.
I-api_mention	25175	25179	Date
I-api_mention	25179	25180	.
I-api_mention	25180	25189	toInstant
I-api_mention	25189	25190	(
I-api_mention	25190	25194	args
I-api_mention	25194	25195	)
O	25196	25202	always
O	25203	25209	throws
O	25210	25212	an
O	25213	25222	exception
O	25222	25223	.

O	25224	25225	#
O	25225	25227	li
O	25228	25230	it
O	25230	25231	'
O	25231	25232	s
O	25233	25236	the
O	25237	25241	same
O	25242	25245	for
O	25246	25250	JDK8
O	25251	25254	and
O	25255	25259	JDK7
O	25260	25264	with
O	25265	25268	JSR
O	25268	25269	-
O	25269	25272	310
O	25273	25281	backport
O	25282	25283	I
O	25284	25294	personally
O	25295	25298	use
O	25299	25301	an
O	25302	25309	utility
O	25310	25315	class
O	25316	25317	(
O	25317	25320	but
O	25321	25325	this
O	25326	25328	is
O	25329	25332	not
O	25333	25341	backport
O	25341	25342	-
O	25342	25352	compatible
O	25352	25353	)
O	25353	25354	:
O	25355	25356	#
O	25356	25359	pre
O	25360	25363	The
B-api_mention	25364	25375	asLocalDate
I-api_mention	25375	25376	(
I-api_mention	25376	25380	args
I-api_mention	25380	25381	)
O	25382	25388	method
O	25389	25393	here
O	25394	25396	is
O	25397	25401	null
O	25401	25402	-
O	25402	25406	safe
O	25406	25407	,
O	25408	25412	uses
B-api_mention	25413	25424	toLocalDate
I-api_mention	25424	25425	(
I-api_mention	25425	25429	args
I-api_mention	25429	25430	)
O	25431	25432	,
O	25433	25435	if
O	25436	25441	input
O	25442	25444	is
B-api_mention	25445	25449	java
I-api_mention	25449	25450	.
I-api_mention	25450	25453	sql
I-api_mention	25453	25454	.
I-api_mention	25454	25458	Date
O	25459	25460	(
O	25460	25462	it
O	25463	25466	may
O	25467	25469	be
O	25470	25479	overriden
O	25480	25482	by
O	25483	25486	the
O	25487	25491	JDBC
O	25492	25498	driver
O	25499	25501	to
O	25502	25507	avoid
O	25508	25516	timezone
O	25517	25525	problems
O	25526	25528	or
O	25529	25540	unnecessary
O	25541	25553	calculations
O	25553	25554	)
O	25554	25555	,
O	25556	25565	otherwise
O	25566	25570	uses
O	25571	25574	the
O	25575	25589	abovementioned
O	25590	25596	method
O	25596	25597	.

O	25599	25607	Question
O	25607	25608	-
O	25608	25616	22036885
O	25616	25617	,
O	25618	25624	answer
O	25624	25625	-
O	25625	25633	22037068

O	25634	25636	As
O	25637	25641	said
O	25642	25644	in
O	25645	25648	API
O	25649	25650	#
O	25650	25660	blockquote
O	25661	25663	It
O	25663	25664	'
O	25664	25665	s
O	25666	25673	because
O	25674	25676	of
O	25677	25683	cannot
O	25684	25693	represent
O	25694	25700	double
O	25701	25706	value
O	25707	25714	exactly
O	25714	25715	.

O	25716	25718	So
O	25719	25722	you
O	25723	25727	have
O	25728	25730	to
O	25731	25734	use
B-api_mention	25735	25745	BigDecimal
O	25746	25756	bigDecimal
O	25757	25758	=
B-api_mention	25759	25769	BigDecimal
I-api_mention	25769	25770	.
I-api_mention	25770	25777	valueOf
I-api_mention	25777	25778	(
I-api_mention	25778	25782	args
I-api_mention	25782	25783	)
O	25783	25784	;
O	25785	25792	instead
O	25793	25795	of
B-api_mention	25796	25806	BigDecimal
O	25807	25817	bigDecimal
O	25818	25819	=
O	25820	25823	new
B-api_mention	25824	25834	BigDecimal
I-api_mention	25834	25835	(
I-api_mention	25835	25839	args
I-api_mention	25839	25840	)
O	25840	25841	;

O	25843	25851	Question
O	25851	25852	-
O	25852	25860	20877086
O	25860	25861	,
O	25862	25868	answer
O	25868	25869	-
O	25869	25877	20877161

B-api_mention	25878	25885	Integer
O	25886	25893	objects
O	25894	25900	caches
O	25901	25908	between
O	25909	25910	-
O	25910	25913	128
O	25914	25917	and
O	25918	25921	127
O	25922	25924	of
O	25925	25928	256
O	25929	25936	Integer
O	25937	25940	You
O	25941	25947	should
O	25948	25951	not
O	25952	25959	compare
O	25960	25966	object
O	25967	25977	references
O	25978	25982	with
O	25983	25984	=
O	25984	25985	=
O	25986	25988	or
O	25989	25990	!
O	25990	25991	=
O	25992	25993	.

O	25994	25997	You
O	25998	26004	should
O	26005	26008	use
O	26009	26010	.

B-api_mention	26011	26017	equals
I-api_mention	26017	26018	(
I-api_mention	26018	26019	.
I-api_mention	26019	26020	.
I-api_mention	26020	26021	)
O	26022	26029	instead
O	26029	26030	,
O	26031	26033	or
O	26034	26040	better
O	26041	26042	-
O	26043	26046	use
O	26047	26050	the
O	26051	26060	primitive
O	26061	26064	int
O	26065	26071	rather
O	26072	26076	than
B-api_mention	26077	26084	Integer
O	26084	26085	.

B-api_mention	26086	26094	parseInt
O	26095	26096	:
O	26097	26103	Parses
O	26104	26107	the
O	26108	26114	string
O	26115	26123	argument
O	26124	26126	as
O	26127	26128	a
O	26129	26135	signed
O	26136	26143	decimal
O	26144	26151	integer
O	26151	26152	.

O	26153	26156	The
O	26157	26167	characters
O	26168	26170	in
O	26171	26174	the
O	26175	26181	string
O	26182	26186	must
O	26187	26190	all
O	26191	26193	be
O	26194	26201	decimal
O	26202	26208	digits
O	26208	26209	,
O	26210	26216	except
O	26217	26221	that
O	26222	26225	the
O	26226	26231	first
O	26232	26241	character
O	26242	26245	may
O	26246	26248	be
O	26249	26251	an
O	26252	26257	ASCII
O	26258	26263	minus
O	26264	26268	sign
O	26269	26270	'
O	26270	26271	-
O	26271	26272	'
O	26273	26274	(
O	26274	26275	'
O	26275	26276	\
O	26276	26281	u002D
O	26281	26282	'
O	26282	26283	)
O	26284	26286	to
O	26287	26295	indicate
O	26296	26297	a
O	26298	26306	negative
O	26307	26312	value
O	26312	26313	.

O	26314	26317	The
O	26318	26327	resulting
O	26328	26335	integer
O	26336	26341	value
O	26342	26344	is
O	26345	26353	returned
O	26353	26354	,
O	26355	26362	exactly
O	26363	26365	as
O	26366	26368	if
O	26369	26372	the
O	26373	26381	argument
O	26382	26385	and
O	26386	26389	the
O	26390	26395	radix
O	26396	26398	10
O	26399	26403	were
O	26404	26409	given
O	26410	26412	as
O	26413	26422	arguments
O	26423	26425	to
O	26426	26429	the
B-api_mention	26430	26438	parseInt
O	26438	26439	(
B-api_mention	26439	26443	java
I-api_mention	26443	26444	.
I-api_mention	26444	26448	lang
I-api_mention	26448	26449	.
I-api_mention	26449	26455	String
O	26455	26456	,
O	26457	26460	int
O	26460	26461	)
O	26462	26468	method
O	26468	26469	.

B-api_mention	26470	26477	valueOf
O	26478	26485	Returns
O	26486	26488	an
O	26489	26496	Integer
O	26497	26503	object
O	26504	26511	holding
O	26512	26515	the
O	26516	26521	value
O	26522	26531	extracted
O	26532	26536	from
O	26537	26540	the
O	26541	26550	specified
O	26551	26557	String
O	26558	26562	when
O	26563	26569	parsed
O	26570	26574	with
O	26575	26578	the
O	26579	26584	radix
O	26585	26590	given
O	26591	26593	by
O	26594	26597	the
O	26598	26604	second
O	26605	26613	argument
O	26613	26614	.

O	26615	26618	The
O	26619	26624	first
O	26625	26633	argument
O	26634	26636	is
O	26637	26648	interpreted
O	26649	26651	as
O	26652	26664	representing
O	26665	26666	a
O	26667	26673	signed
O	26674	26681	integer
O	26682	26684	in
O	26685	26688	the
O	26689	26694	radix
O	26695	26704	specified
O	26705	26707	by
O	26708	26711	the
O	26712	26718	second
O	26719	26727	argument
O	26727	26728	,
O	26729	26736	exactly
O	26737	26739	as
O	26740	26742	if
O	26743	26746	the
O	26747	26756	arguments
O	26757	26761	were
O	26762	26767	given
O	26768	26770	to
O	26771	26774	the
B-api_mention	26775	26783	parseInt
I-api_mention	26783	26784	(
I-api_mention	26784	26788	java
I-api_mention	26788	26789	.
I-api_mention	26789	26793	lang
I-api_mention	26793	26794	.
I-api_mention	26794	26800	String
I-api_mention	26800	26801	,
I-api_mention	26802	26805	int
I-api_mention	26805	26806	)
O	26807	26813	method
O	26813	26814	.

O	26815	26818	The
O	26819	26825	result
O	26826	26828	is
O	26829	26831	an
O	26832	26839	Integer
O	26840	26846	object
O	26847	26851	that
O	26852	26862	represents
O	26863	26866	the
O	26867	26874	integer
O	26875	26880	value
O	26881	26890	specified
O	26891	26893	by
O	26894	26897	the
O	26898	26904	string
O	26904	26905	.
O	26906	26916	equivalent
O	26917	26919	to
O	26920	26923	new
B-api_mention	26924	26931	Integer
I-api_mention	26931	26932	(
I-api_mention	26932	26936	args
I-api_mention	26936	26937	)
O	26938	26943	radix
O	26944	26945	-
O	26946	26949	the
O	26950	26955	radix
O	26956	26958	to
O	26959	26961	be
O	26962	26966	used
O	26967	26969	in
O	26970	26982	interpreting
O	26983	26984	s
O	26985	26987	so
O	26988	26990	if
O	26991	26994	you
O	26995	27000	equal
B-api_mention	27001	27008	Integer
I-api_mention	27008	27009	.
I-api_mention	27009	27016	valueOf
I-api_mention	27016	27017	(
I-api_mention	27017	27021	args
I-api_mention	27021	27022	)
O	27023	27026	for
O	27027	27030	the
O	27031	27038	integer
O	27039	27048	inbetween
O	27049	27050	-
O	27050	27053	128
O	27054	27056	to
O	27057	27060	127
O	27061	27063	it
O	27064	27071	returns
O	27072	27076	true
O	27077	27079	in
O	27080	27084	your
O	27085	27094	condition
O	27095	27098	for
O	27099	27105	lesser
O	27106	27110	than
O	27111	27112	-
O	27112	27115	128
O	27116	27119	and
O	27120	27127	greater
O	27128	27132	than
O	27133	27136	127
O	27137	27139	it
O	27140	27145	gives
O	27146	27151	false

O	27153	27161	Question
O	27161	27162	-
O	27162	27170	20877086
O	27170	27171	,
O	27172	27178	answer
O	27178	27179	-
O	27179	27187	20877283

O	27188	27191	The
B-api_mention	27192	27199	Integer
O	27200	27205	class
O	27206	27209	has
O	27210	27211	a
O	27212	27218	static
O	27219	27224	cache
O	27224	27225	,
O	27226	27230	that
O	27231	27237	stores
O	27238	27241	256
O	27242	27249	special
B-api_mention	27250	27257	Integer
O	27258	27265	objects
O	27266	27267	-
O	27268	27271	one
O	27272	27275	for
O	27276	27281	every
O	27282	27287	value
O	27288	27295	between
O	27296	27297	-
O	27297	27300	128
O	27301	27304	and
O	27305	27308	127
O	27308	27309	.

O	27310	27314	With
O	27315	27319	that
O	27320	27322	in
O	27323	27327	mind
O	27327	27328	,
O	27329	27337	consider
O	27338	27341	the
O	27342	27352	difference
O	27353	27360	between
O	27361	27366	these
O	27367	27372	three
O	27372	27373	.
O	27374	27377	new
B-api_mention	27378	27385	Integer
I-api_mention	27385	27386	(
I-api_mention	27386	27390	args
I-api_mention	27390	27391	)
O	27391	27392	;
O	27393	27397	This
O	27398	27399	(
O	27399	27408	obviously
O	27408	27409	)
O	27410	27415	makes
O	27416	27417	a
O	27418	27423	brand
O	27424	27427	new
B-api_mention	27428	27435	Integer
O	27436	27442	object
O	27442	27443	.

B-api_mention	27444	27451	Integer
I-api_mention	27451	27452	.
I-api_mention	27452	27460	parseInt
I-api_mention	27460	27461	(
I-api_mention	27461	27465	args
I-api_mention	27465	27466	)
O	27466	27467	;
O	27468	27472	This
O	27473	27480	returns
O	27481	27483	an
O	27484	27487	int
O	27488	27497	primitive
O	27498	27503	value
O	27504	27509	after
O	27510	27517	parsing
O	27518	27521	the
B-api_mention	27522	27528	String
O	27529	27530	.

B-api_mention	27531	27538	Integer
I-api_mention	27538	27539	.
I-api_mention	27539	27546	valueOf
I-api_mention	27546	27547	(
I-api_mention	27547	27551	args
I-api_mention	27551	27552	)
O	27552	27553	;
O	27554	27558	This
O	27559	27561	is
O	27562	27566	more
O	27567	27574	complex
O	27575	27579	than
O	27580	27583	the
O	27584	27590	others
O	27590	27591	.

O	27592	27594	It
O	27595	27601	starts
O	27602	27605	off
O	27606	27608	by
O	27609	27616	parsing
O	27617	27620	the
B-api_mention	27621	27627	String
O	27628	27629	.

O	27630	27634	Then
O	27634	27635	,
O	27636	27638	if
O	27639	27642	the
O	27643	27648	value
O	27649	27651	is
O	27652	27659	between
O	27660	27661	-
O	27661	27664	128
O	27665	27668	and
O	27669	27672	127
O	27672	27673	,
O	27674	27676	it
O	27677	27684	returns
O	27685	27688	the
O	27689	27702	corresponding
O	27703	27709	object
O	27710	27714	from
O	27715	27718	the
O	27719	27725	static
O	27726	27731	cache
O	27731	27732	.

O	27733	27735	If
O	27736	27739	the
O	27740	27745	value
O	27746	27748	is
O	27749	27756	outside
O	27757	27759	of
O	27760	27764	this
O	27765	27770	range
O	27770	27771	,
O	27772	27776	then
O	27777	27779	it
O	27780	27787	invokes
O	27788	27791	new
B-api_mention	27792	27799	Integer
I-api_mention	27799	27800	(
I-api_mention	27800	27804	args
I-api_mention	27804	27805	)
O	27806	27809	and
O	27810	27816	passes
O	27817	27819	in
O	27820	27823	the
O	27824	27829	value
O	27829	27830	,
O	27831	27833	so
O	27834	27838	that
O	27839	27842	you
O	27843	27846	get
O	27847	27848	a
O	27849	27852	new
O	27853	27859	object
O	27859	27860	.

O	27861	27864	Now
O	27864	27865	,
O	27866	27874	consider
O	27875	27878	the
O	27879	27884	three
O	27885	27896	expressions
O	27897	27899	in
O	27900	27903	the
O	27904	27912	question
O	27912	27913	.

B-api_mention	27914	27921	Integer
I-api_mention	27921	27922	.
I-api_mention	27922	27929	valueOf
I-api_mention	27929	27930	(
I-api_mention	27930	27934	args
I-api_mention	27934	27935	)
O	27935	27936	=
O	27936	27937	=
B-api_mention	27937	27944	Integer
I-api_mention	27944	27945	.
I-api_mention	27945	27952	valueOf
I-api_mention	27952	27953	(
I-api_mention	27953	27957	args
I-api_mention	27957	27958	)
O	27958	27959	;
O	27960	27964	This
O	27965	27972	returns
O	27973	27977	true
O	27977	27978	,
O	27979	27986	because
O	27987	27990	the
O	27991	27998	Integer
O	27999	28004	whose
O	28005	28010	value
O	28011	28013	is
O	28014	28017	127
O	28018	28020	is
O	28021	28030	retrieved
O	28031	28036	twice
O	28037	28041	from
O	28042	28045	the
O	28046	28052	static
O	28053	28058	cache
O	28058	28059	,
O	28060	28063	and
O	28064	28072	compared
O	28073	28075	to
O	28076	28082	itself
O	28082	28083	.

O	28084	28089	There
O	28089	28090	'
O	28090	28091	s
O	28092	28096	only
O	28097	28100	one
B-api_mention	28101	28108	Integer
O	28109	28115	object
O	28116	28124	involved
O	28124	28125	,
O	28126	28128	so
O	28129	28133	this
O	28134	28141	returns
O	28142	28146	true
O	28147	28148	.

B-api_mention	28149	28156	Integer
I-api_mention	28156	28157	.
I-api_mention	28157	28164	valueOf
I-api_mention	28164	28165	(
I-api_mention	28165	28169	args
I-api_mention	28169	28170	)
O	28170	28171	=
O	28171	28172	=
B-api_mention	28172	28179	Integer
I-api_mention	28179	28180	.
I-api_mention	28180	28187	valueOf
I-api_mention	28187	28188	(
I-api_mention	28188	28192	args
I-api_mention	28192	28193	)
O	28193	28194	;
O	28195	28199	This
O	28200	28207	returns
O	28208	28213	false
O	28214	28215	,
O	28216	28223	because
O	28224	28227	128
O	28228	28230	is
O	28231	28234	not
O	28235	28237	in
O	28238	28241	the
O	28242	28248	static
O	28249	28254	cache
O	28254	28255	.

O	28256	28258	So
O	28259	28260	a
O	28261	28264	new
B-api_mention	28265	28272	Integer
O	28273	28275	is
O	28276	28283	created
O	28284	28287	for
O	28288	28292	each
O	28293	28297	side
O	28298	28300	of
O	28301	28304	the
O	28305	28313	equality
O	28313	28314	.

O	28315	28320	Since
O	28321	28326	there
O	28327	28330	are
O	28331	28334	two
O	28335	28344	different
B-api_mention	28345	28352	Integer
O	28353	28360	objects
O	28360	28361	,
O	28362	28365	and
O	28366	28367	=
O	28367	28368	=
O	28369	28372	for
O	28373	28380	objects
O	28381	28385	only
O	28386	28393	returns
O	28394	28398	true
O	28399	28401	if
O	28402	28406	both
O	28407	28412	sides
O	28413	28416	are
O	28417	28420	the
O	28421	28426	exact
O	28427	28431	same
O	28432	28438	object
O	28438	28439	,
O	28440	28444	this
O	28445	28447	is
O	28448	28453	going
O	28454	28456	to
O	28457	28459	be
O	28460	28465	false
O	28466	28467	.

B-api_mention	28468	28475	Integer
I-api_mention	28475	28476	.
I-api_mention	28476	28484	parseInt
I-api_mention	28484	28485	(
I-api_mention	28485	28489	args
I-api_mention	28489	28490	)
O	28490	28491	=
O	28491	28492	=
B-api_mention	28492	28499	Integer
I-api_mention	28499	28500	.
I-api_mention	28500	28507	valueOf
I-api_mention	28507	28508	(
I-api_mention	28508	28512	args
I-api_mention	28512	28513	)
O	28513	28514	;
O	28515	28519	This
O	28520	28522	is
O	28523	28532	comparing
O	28533	28536	the
O	28537	28546	primitive
O	28547	28550	int
O	28551	28556	value
O	28557	28560	128
O	28561	28563	on
O	28564	28567	the
O	28568	28572	left
O	28572	28573	,
O	28574	28578	with
O	28579	28580	a
O	28581	28586	newly
O	28587	28594	created
B-api_mention	28595	28602	Integer
O	28603	28609	object
O	28610	28612	on
O	28613	28616	the
O	28617	28622	right
O	28622	28623	.

O	28624	28627	But
O	28628	28635	because
O	28636	28638	it
O	28639	28644	doesn
O	28644	28645	'
O	28645	28646	t
O	28647	28651	make
O	28652	28657	sense
O	28658	28660	to
O	28661	28668	compare
O	28669	28671	an
O	28672	28675	int
O	28676	28678	to
O	28679	28681	an
B-api_mention	28682	28689	Integer
O	28690	28691	,
O	28692	28696	Java
O	28697	28701	will
O	28702	28706	auto
O	28706	28707	-
O	28707	28712	unbox
O	28713	28716	the
O	28717	28724	Integer
O	28725	28731	before
O	28732	28737	doing
O	28738	28741	the
O	28742	28752	comparison
O	28752	28753	;
O	28754	28756	so
O	28757	28760	you
O	28761	28764	end
O	28765	28767	up
O	28768	28777	comparing
O	28778	28780	an
O	28781	28784	int
O	28785	28787	to
O	28788	28790	an
O	28791	28794	int
O	28795	28796	.

O	28797	28802	Since
O	28803	28806	the
O	28807	28816	primitive
O	28817	28820	128
O	28821	28823	is
O	28824	28829	equal
O	28830	28832	to
O	28833	28839	itself
O	28839	28840	,
O	28841	28845	this
O	28846	28853	returns
O	28854	28858	true
O	28859	28860	.

O	28862	28870	Question
O	28870	28871	-
O	28871	28879	20877086
O	28879	28880	,
O	28881	28887	answer
O	28887	28888	-
O	28888	28896	20889556

O	28897	28899	To
O	28900	28910	complement
O	28911	28914	the
O	28915	28920	given
O	28921	28928	answers
O	28928	28929	,
O	28930	28934	also
O	28935	28939	take
O	28940	28944	note
O	28945	28947	of
O	28948	28951	the
O	28952	28961	following
O	28961	28962	:
O	28963	28964	#
O	28964	28967	pre
O	28968	28972	This
O	28973	28977	code
O	28978	28982	will
O	28983	28987	also
O	28988	28993	print
O	28993	28994	:
O	28995	29000	false
O	29001	29003	As
O	29004	29008	user
O	29009	29012	Jay
O	29013	29016	has
O	29017	29024	claimed
O	29025	29027	in
O	29028	29029	a
O	29030	29037	comment
O	29038	29041	for
O	29042	29045	the
O	29046	29054	accepted
O	29055	29061	answer
O	29061	29062	,
O	29063	29067	care
O	29068	29072	must
O	29073	29075	be
O	29076	29081	taken
O	29082	29086	when
O	29087	29092	using
O	29093	29101	operator
O	29102	29103	=
O	29103	29104	=
O	29105	29107	on
O	29108	29115	objects
O	29115	29116	,
O	29117	29121	here
O	29122	29125	you
O	29125	29126	'
O	29126	29128	re
O	29129	29137	checking
O	29138	29140	if
O	29141	29145	both
O	29146	29156	references
O	29157	29160	are
O	29161	29164	the
O	29165	29169	same
O	29169	29170	,
O	29171	29176	which
O	29177	29179	is
O	29180	29183	not
O	29183	29184	,
O	29185	29192	because
O	29193	29197	they
O	29198	29201	are
O	29202	29211	different
O	29212	29218	objets
O	29218	29219	,
O	29220	29228	although
O	29229	29233	they
O	29234	29243	represent
O	29244	29247	the
O	29248	29252	very
O	29253	29257	same
O	29258	29263	value
O	29263	29264	.

O	29265	29267	To
O	29268	29275	compare
O	29276	29283	objects
O	29283	29284	,
O	29285	29288	you
O	29289	29295	should
O	29296	29299	use
O	29300	29303	the
O	29304	29310	equals
O	29311	29317	method
O	29318	29325	instead
O	29325	29326	:
O	29327	29328	#
O	29328	29331	pre
O	29332	29336	This
O	29337	29341	will
O	29342	29347	print
O	29347	29348	:
O	29349	29353	true
O	29354	29357	You
O	29358	29361	may
O	29362	29365	ask
O	29365	29366	,
O	29367	29370	But
O	29371	29375	then
O	29376	29379	why
O	29380	29383	the
O	29384	29389	first
O	29390	29394	line
O	29395	29402	printed
O	29403	29407	true
O	29408	29409	?

O	29410	29411	.
O	29412	29420	Checking
O	29421	29424	the
O	29425	29431	source
O	29432	29436	code
O	29437	29440	for
O	29441	29444	the
B-api_mention	29445	29452	Integer
I-api_mention	29452	29453	.
I-api_mention	29453	29460	valueOf
O	29461	29467	method
O	29467	29468	,
O	29469	29472	you
O	29473	29476	can
O	29477	29480	see
O	29481	29484	the
O	29485	29494	following
O	29494	29495	:
O	29496	29497	#
O	29497	29500	pre
O	29501	29503	If
O	29504	29507	the
O	29508	29513	param
O	29514	29516	is
O	29517	29519	an
O	29520	29527	integer
O	29528	29535	between
B-api_mention	29536	29548	IntegerCache
I-api_mention	29548	29549	.
I-api_mention	29549	29552	low
O	29553	29554	(
O	29554	29563	defaulted
O	29564	29566	to
O	29567	29568	-
O	29568	29571	128
O	29571	29572	)
O	29573	29576	and
B-api_mention	29577	29589	IntegerCache
I-api_mention	29589	29590	.
I-api_mention	29590	29594	high
O	29595	29596	(
O	29596	29606	calculated
O	29607	29609	at
O	29610	29617	runtime
O	29618	29622	with
O	29623	29630	minimum
O	29631	29636	value
O	29637	29640	127
O	29640	29641	)
O	29642	29646	then
O	29647	29648	a
O	29649	29652	pre
O	29652	29653	-
O	29653	29662	allocated
O	29663	29664	(
O	29664	29670	cached
O	29670	29671	)
O	29672	29678	object
O	29679	29681	is
O	29682	29690	returned
O	29690	29691	.

O	29692	29694	So
O	29695	29699	when
O	29700	29703	you
O	29704	29707	use
O	29708	29711	127
O	29712	29714	as
O	29715	29724	parameter
O	29724	29725	,
O	29726	29729	you
O	29729	29730	'
O	29730	29732	re
O	29733	29740	getting
O	29741	29744	two
O	29745	29755	references
O	29756	29758	to
O	29759	29763	same
O	29764	29770	cached
O	29771	29777	object
O	29778	29781	and
O	29782	29789	getting
O	29790	29794	true
O	29795	29797	in
O	29798	29801	the
O	29802	29812	comparison
O	29813	29815	of
O	29816	29819	the
O	29820	29830	references
O	29830	29831	.

O	29833	29841	Question
O	29841	29842	-
O	29842	29850	21163108
O	29850	29851	,
O	29852	29858	answer
O	29858	29859	-
O	29859	29867	21172732

O	29868	29871	The
O	29872	29880	parallel
O	29881	29888	streams
O	29889	29892	use
O	29893	29896	the
O	29897	29904	default
B-api_mention	29905	29917	ForkJoinPool
O	29918	29923	which
O	29924	29926	by
O	29927	29934	default
O	29935	29938	has
O	29939	29942	one
O	29943	29947	less
O	29948	29955	threads
O	29956	29958	as
O	29959	29962	you
O	29963	29967	have
O	29968	29978	processors
O	29979	29980	,
O	29981	29983	as
O	29984	29992	returned
O	29993	29995	by
B-api_mention	29996	30003	Runtime
I-api_mention	30003	30004	.
I-api_mention	30004	30014	getRuntime
I-api_mention	30014	30015	(
I-api_mention	30015	30019	args
I-api_mention	30019	30020	)
I-api_mention	30020	30021	.
I-api_mention	30021	30040	availableProcessors
I-api_mention	30040	30041	(
I-api_mention	30041	30045	args
I-api_mention	30045	30046	)
O	30047	30048	(
O	30048	30050	so
O	30051	30059	parallel
O	30060	30067	streams
O	30068	30071	use
O	30072	30075	all
O	30076	30080	your
O	30081	30091	processors
O	30092	30099	because
O	30100	30104	they
O	30105	30109	also
O	30110	30113	use
O	30114	30117	the
O	30118	30122	main
O	30123	30129	thread
O	30129	30130	)
O	30130	30131	:
O	30132	30133	#
O	30133	30143	blockquote
O	30144	30146	To
O	30147	30153	change
O	30154	30157	the
O	30158	30161	way
O	30162	30170	parallel
O	30171	30178	streams
O	30179	30182	are
O	30183	30191	executed
O	30191	30192	,
O	30193	30196	you
O	30197	30200	can
O	30201	30207	either
O	30208	30209	#
O	30209	30211	li
O	30212	30218	submit
O	30219	30222	the
O	30223	30231	parallel
O	30232	30238	stream
O	30239	30248	execution
O	30249	30251	to
O	30252	30256	your
O	30257	30260	own
B-api_mention	30261	30273	ForkJoinPool
O	30273	30274	:
O	30275	30282	yourFJP
B-api_mention	30282	30283	.
I-api_mention	30283	30289	submit
I-api_mention	30289	30290	(
I-api_mention	30290	30294	args
O	30294	30295	)
O	30295	30296	;
O	30297	30299	or
O	30300	30301	#
O	30301	30303	li
O	30304	30307	you
O	30308	30311	can
O	30312	30318	change
O	30319	30322	the
O	30323	30327	size
O	30328	30330	of
O	30331	30334	the
O	30335	30341	common
O	30342	30346	pool
O	30347	30352	using
O	30353	30359	system
O	30360	30370	properties
O	30370	30371	:
B-api_mention	30372	30378	System
I-api_mention	30378	30379	.
I-api_mention	30379	30390	setProperty
I-api_mention	30390	30391	(
I-api_mention	30391	30395	args
I-api_mention	30395	30396	)
O	30397	30400	for
O	30401	30402	a
O	30403	30409	target
O	30410	30421	parallelism
O	30422	30424	of
O	30425	30427	20
O	30428	30435	threads
O	30435	30436	.

O	30437	30444	Example
O	30445	30447	of
O	30448	30451	the
O	30452	30458	latter
O	30459	30461	on
O	30462	30464	my
O	30465	30472	machine
O	30473	30478	which
O	30479	30482	has
O	30483	30484	8
O	30485	30495	processors
O	30495	30496	.

O	30497	30499	If
O	30500	30501	I
O	30502	30505	run
O	30506	30509	the
O	30510	30519	following
O	30520	30527	program
O	30527	30528	:
O	30529	30530	#
O	30530	30533	pre
O	30534	30537	The
O	30538	30544	output
O	30545	30547	is
O	30547	30548	:
O	30549	30550	#
O	30550	30560	blockquote
O	30561	30563	So
O	30564	30567	you
O	30568	30571	can
O	30572	30575	see
O	30576	30580	that
O	30581	30584	the
O	30585	30593	parallel
O	30594	30600	stream
O	30601	30610	processes
O	30611	30612	8
O	30613	30618	items
O	30619	30621	at
O	30622	30623	a
O	30624	30628	time
O	30628	30629	,
O	30630	30631	i
O	30631	30632	.
O	30632	30633	e
O	30633	30634	.
O	30635	30637	it
O	30638	30642	uses
O	30643	30644	8
O	30645	30652	threads
O	30652	30653	.

O	30654	30661	However
O	30662	30664	if
O	30665	30666	I
O	30667	30676	uncomment
O	30677	30680	the
O	30681	30690	commented
O	30691	30695	line
O	30695	30696	,
O	30697	30700	the
O	30701	30707	output
O	30708	30710	is
O	30710	30711	:
O	30712	30713	#
O	30713	30723	blockquote
O	30724	30728	This
O	30729	30733	time
O	30734	30737	the
O	30738	30746	parallel
O	30747	30753	stream
O	30754	30757	has
O	30758	30762	used
O	30763	30765	20
O	30766	30773	threads
O	30774	30777	and
O	30778	30781	all
O	30782	30784	20
O	30785	30793	elements
O	30794	30796	in
O	30797	30800	the
O	30801	30807	stream
O	30808	30812	have
O	30813	30817	been
O	30818	30827	processed
O	30828	30840	comcurrently
O	30840	30841	.

O	30843	30851	Question
O	30851	30852	-
O	30852	30860	21163108
O	30860	30861	,
O	30862	30868	answer
O	30868	30869	-
O	30869	30877	22269778

O	30878	30883	There
O	30884	30892	actually
O	30893	30895	is
O	30896	30897	a
O	30898	30903	trick
O	30904	30907	how
O	30908	30910	to
O	30911	30918	execute
O	30919	30920	a
O	30921	30929	parallel
O	30930	30939	operation
O	30940	30942	in
O	30943	30944	a
O	30945	30953	specific
O	30954	30958	fork
O	30958	30959	-
O	30959	30963	join
O	30964	30968	pool
O	30968	30969	.

O	30970	30972	If
O	30973	30976	you
O	30977	30984	execute
O	30985	30987	it
O	30988	30990	as
O	30991	30992	a
O	30993	30997	task
O	30998	31000	in
O	31001	31002	a
O	31003	31007	fork
O	31007	31008	-
O	31008	31012	join
O	31013	31017	pool
O	31017	31018	,
O	31019	31021	it
O	31022	31027	stays
O	31028	31033	there
O	31034	31037	and
O	31038	31042	does
O	31043	31046	not
O	31047	31050	use
O	31051	31054	the
O	31055	31061	common
O	31062	31065	one
O	31065	31066	.

O	31067	31068	#
O	31068	31071	pre
O	31072	31075	The
O	31076	31081	trick
O	31082	31084	is
O	31085	31090	based
O	31091	31093	on
B-api_mention	31094	31106	ForkJoinTask
I-api_mention	31106	31107	.
I-api_mention	31107	31111	fork
O	31112	31117	which
O	31118	31127	specifies
O	31127	31128	:
O	31129	31130	"
O	31130	31138	Arranges
O	31139	31141	to
O	31142	31156	asynchronously
O	31157	31164	execute
O	31165	31169	this
O	31170	31174	task
O	31175	31177	in
O	31178	31181	the
O	31182	31186	pool
O	31187	31190	the
O	31191	31198	current
O	31199	31203	task
O	31204	31206	is
O	31207	31214	running
O	31215	31217	in
O	31217	31218	,
O	31219	31221	if
O	31222	31232	applicable
O	31232	31233	,
O	31234	31236	or
O	31237	31242	using
O	31243	31246	the
B-api_mention	31247	31259	ForkJoinPool
I-api_mention	31259	31260	.
I-api_mention	31260	31270	commonPool
I-api_mention	31270	31271	(
I-api_mention	31271	31272	)
O	31273	31275	if
O	31276	31279	not
B-api_mention	31280	31294	inForkJoinPool
I-api_mention	31294	31295	(
I-api_mention	31295	31296	)
O	31296	31297	"

O	31299	31307	Question
O	31307	31308	-
O	31308	31316	21163108
O	31316	31317	,
O	31318	31324	answer
O	31324	31325	-
O	31325	31333	34930831

O	31334	31336	To
O	31337	31344	measure
O	31345	31348	the
O	31349	31355	actual
O	31356	31362	number
O	31363	31365	of
O	31366	31370	used
O	31371	31378	threads
O	31378	31379	,
O	31380	31383	you
O	31384	31387	can
O	31388	31393	check
B-api_mention	31394	31400	Thread
I-api_mention	31400	31401	.
I-api_mention	31401	31412	activeCount
I-api_mention	31412	31413	(
I-api_mention	31413	31417	args
I-api_mention	31417	31418	)
O	31419	31420	:
O	31421	31422	#
O	31422	31425	pre
O	31426	31430	This
O	31431	31434	can
O	31435	31442	produce
O	31443	31445	on
O	31446	31447	a
O	31448	31449	4
O	31449	31450	-
O	31450	31454	core
O	31455	31458	CPU
O	31459	31461	an
O	31462	31468	output
O	31469	31473	like
O	31473	31474	:
O	31475	31476	#
O	31476	31479	pre
O	31480	31487	Without
B-api_mention	31488	31489	.
I-api_mention	31489	31497	parallel
I-api_mention	31497	31498	(
I-api_mention	31498	31502	args
I-api_mention	31502	31503	)
O	31504	31506	it
O	31507	31512	gives
O	31512	31513	:
O	31514	31515	#
O	31515	31518	pre

O	31520	31528	Question
O	31528	31529	-
O	31529	31537	22382453
O	31537	31538	,
O	31539	31545	answer
O	31545	31546	-
O	31546	31554	22384113

O	31555	31559	Made
O	31560	31562	up
O	31563	31570	example
O	31571	31578	Imagine
O	31579	31583	that
O	31584	31587	you
O	31588	31592	want
O	31593	31595	to
O	31596	31602	create
O	31603	31606	the
O	31607	31616	following
O	31617	31625	sequence
O	31625	31626	:
O	31627	31628	1
O	31628	31629	,
O	31630	31631	2
O	31631	31632	,
O	31633	31634	2
O	31634	31635	,
O	31636	31637	3
O	31637	31638	,
O	31639	31640	3
O	31640	31641	,
O	31642	31643	3
O	31643	31644	,
O	31645	31646	4
O	31646	31647	,
O	31648	31649	4
O	31649	31650	,
O	31651	31652	4
O	31652	31653	,
O	31654	31655	4
O	31656	31659	etc
O	31659	31660	.

O	31661	31662	(
O	31662	31664	in
O	31665	31670	other
O	31671	31676	words
O	31676	31677	:
O	31678	31681	1x1
O	31681	31682	,
O	31683	31686	2x2
O	31686	31687	,
O	31688	31691	3x3
O	31692	31695	etc
O	31695	31696	.
O	31696	31697	)
O	31698	31702	With
B-api_mention	31703	31710	flatMap
O	31711	31713	it
O	31714	31719	could
O	31720	31724	look
O	31725	31729	like
O	31729	31730	:
O	31731	31732	#
O	31732	31735	pre
O	31736	31741	where
O	31741	31742	:
O	31743	31744	#
O	31744	31746	li
B-api_mention	31747	31756	IntStream
I-api_mention	31756	31757	.
I-api_mention	31757	31768	rangeClosed
I-api_mention	31768	31769	(
I-api_mention	31769	31773	args
I-api_mention	31773	31774	)
O	31775	31782	creates
O	31783	31784	a
O	31785	31791	stream
O	31792	31794	of
O	31795	31798	int
O	31799	31803	from
O	31804	31805	1
O	31806	31808	to
O	31809	31810	4
O	31810	31811	,
O	31812	31821	inclusive
O	31822	31823	#
O	31823	31825	li
B-api_mention	31826	31835	IntStream
I-api_mention	31835	31836	.
I-api_mention	31836	31843	iterate
I-api_mention	31843	31844	(
I-api_mention	31844	31848	args
I-api_mention	31848	31849	)
I-api_mention	31849	31850	.
I-api_mention	31850	31855	limit
I-api_mention	31855	31856	(
I-api_mention	31856	31860	args
I-api_mention	31860	31861	)
O	31862	31869	creates
O	31870	31871	a
O	31872	31878	stream
O	31879	31881	of
O	31882	31888	length
O	31889	31890	i
O	31891	31893	of
O	31894	31897	int
O	31898	31899	i
O	31900	31901	-
O	31902	31904	so
O	31905	31912	applied
O	31913	31915	to
O	31916	31917	i
O	31918	31919	=
O	31920	31921	4
O	31922	31924	it
O	31925	31932	creates
O	31933	31934	a
O	31935	31941	stream
O	31941	31942	:
O	31943	31944	4
O	31944	31945	,
O	31946	31947	4
O	31947	31948	,
O	31949	31950	4
O	31950	31951	,
O	31952	31953	4
O	31954	31955	#
O	31955	31957	li
B-api_mention	31958	31965	flatMap
O	31966	31967	"
O	31967	31975	flattens
O	31975	31976	"
O	31977	31980	the
O	31981	31987	stream
O	31988	31991	and
O	31992	31993	"
O	31993	32005	concatenates
O	32005	32006	"
O	32007	32009	it
O	32010	32012	to
O	32013	32016	the
O	32017	32025	original
O	32026	32032	stream
O	32033	32037	With
O	32038	32042	Java
O	32043	32044	<
O	32045	32046	8
O	32047	32050	you
O	32051	32056	would
O	32057	32061	need
O	32062	32065	two
O	32066	32072	nested
O	32073	32078	loops
O	32078	32079	:
O	32080	32081	#
O	32081	32084	pre
O	32085	32089	Real
O	32090	32095	world
O	32096	32103	example
O	32104	32107	Let
O	32107	32108	'
O	32108	32109	s
O	32110	32113	say
O	32114	32115	I
O	32116	32120	have
O	32121	32122	a
B-api_mention	32123	32127	List
I-api_mention	32127	32128	<
I-api_mention	32128	32129	T
I-api_mention	32129	32130	>
O	32131	32136	where
O	32137	32141	each
O	32142	32152	TimeSeries
O	32153	32155	is
O	32156	32167	essentially
O	32168	32169	a
B-api_mention	32170	32173	Map
I-api_mention	32173	32174	<
I-api_mention	32174	32175	T
I-api_mention	32175	32176	>
O	32177	32178	.

O	32179	32180	I
O	32181	32185	want
O	32186	32188	to
O	32189	32192	get
O	32193	32194	a
O	32195	32199	list
O	32200	32202	of
O	32203	32206	all
O	32207	32212	dates
O	32213	32216	for
O	32217	32222	which
O	32223	32225	at
O	32226	32231	least
O	32232	32235	one
O	32236	32238	of
O	32239	32242	the
O	32243	32247	time
O	32248	32254	series
O	32255	32258	has
O	32259	32260	a
O	32261	32266	value
O	32266	32267	.

B-api_mention	32268	32275	flatMap
O	32276	32278	to
O	32279	32282	the
O	32283	32289	rescue
O	32289	32290	:
O	32291	32295	list
B-api_mention	32295	32296	.
I-api_mention	32296	32302	stream
I-api_mention	32302	32303	(
I-api_mention	32303	32307	args
I-api_mention	32307	32308	)
I-api_mention	32308	32309	.
I-api_mention	32309	32317	parallel
I-api_mention	32317	32318	(
I-api_mention	32318	32322	args
I-api_mention	32322	32323	)
I-api_mention	32324	32325	.
I-api_mention	32325	32332	flatMap
I-api_mention	32332	32333	(
I-api_mention	32333	32337	args
I-api_mention	32337	32338	)
O	32339	32340	/
O	32340	32341	/
O	32342	32345	for
O	32346	32350	each
O	32351	32353	TS
O	32353	32354	,
O	32355	32361	stream
O	32362	32367	dates
O	32368	32371	and
O	32372	32379	flatmap
B-api_mention	32380	32381	.
I-api_mention	32381	32389	distinct
I-api_mention	32389	32390	(
I-api_mention	32390	32394	args
I-api_mention	32394	32395	)
O	32396	32397	/
O	32397	32398	/
O	32399	32405	remove
O	32406	32416	duplicates
B-api_mention	32417	32418	.
I-api_mention	32418	32424	sorted
I-api_mention	32424	32425	(
I-api_mention	32425	32429	args
I-api_mention	32429	32430	)
O	32431	32432	/
O	32432	32433	/
O	32434	32438	sort
O	32439	32448	ascending
B-api_mention	32449	32450	.
I-api_mention	32450	32457	collect
I-api_mention	32457	32458	(
I-api_mention	32458	32462	args
I-api_mention	32462	32463	)
O	32463	32464	;
O	32465	32468	Not
O	32469	32473	only
O	32474	32476	is
O	32477	32479	it
O	32480	32488	readable
O	32488	32489	,
O	32490	32493	but
O	32494	32496	if
O	32497	32500	you
O	32501	32509	suddenly
O	32510	32514	need
O	32515	32517	to
O	32518	32525	process
O	32526	32530	100k
O	32531	32539	elements
O	32539	32540	,
O	32541	32547	simply
O	32548	32554	adding
B-api_mention	32555	32563	parallel
I-api_mention	32563	32564	(
I-api_mention	32564	32568	args
I-api_mention	32568	32569	)
O	32570	32574	will
O	32575	32582	improve
O	32583	32594	performance
O	32595	32602	without
O	32603	32606	you
O	32607	32614	writing
O	32615	32618	any
O	32619	32629	concurrent
O	32630	32634	code
O	32634	32635	.

O	32637	32645	Question
O	32645	32646	-
O	32646	32654	22694884
O	32654	32655	,
O	32656	32662	answer
O	32662	32663	-
O	32663	32671	22695031

O	32672	32683	Technically
O	32684	32689	there
O	32689	32690	'
O	32690	32691	s
O	32692	32694	an
O	32695	32699	ugly
O	32700	32701	'
O	32701	32711	workaround
O	32711	32712	'
O	32713	32717	that
O	32718	32726	involves
B-api_mention	32727	32731	peek
I-api_mention	32731	32732	(
I-api_mention	32732	32736	args
I-api_mention	32736	32737	)
O	32738	32741	and
O	32742	32744	an
B-api_mention	32745	32758	AtomicInteger
O	32759	32760	,
O	32761	32764	but
O	32765	32771	really
O	32772	32775	you
O	32776	32783	shouldn
O	32783	32784	'
O	32784	32785	t
O	32786	32788	be
O	32789	32794	using
O	32795	32799	that
O	32799	32800	.

O	32801	32805	What
O	32806	32807	I
O	32808	32810	do
O	32811	32813	in
O	32814	32819	these
O	32820	32825	cases
O	32826	32828	is
O	32829	32833	just
O	32834	32844	collecting
O	32845	32847	it
O	32848	32850	in
O	32851	32852	a
O	32853	32857	list
O	32857	32858	,
O	32859	32863	like
O	32864	32868	this
O	32868	32869	:
O	32870	32871	#
O	32871	32874	pre
O	32875	32876	I
O	32877	32879	am
O	32880	32883	not
O	32884	32889	aware
O	32890	32892	of
O	32893	32894	a
O	32895	32898	way
O	32899	32901	to
O	32902	32904	do
O	32905	32909	this
O	32910	32912	in
O	32913	32916	the
O	32917	32920	API
O	32920	32921	,
O	32922	32931	meanwhile
O	32932	32933	I
O	32934	32938	will
O	32939	32943	work
O	32944	32946	on
O	32947	32954	another
O	32955	32962	example
O	32963	32972	involving
O	32973	32974	a
O	32975	32981	custom
O	32982	32989	element
O	32989	32990	.

O	32991	32997	Update
O	32998	32999	,
O	33000	33003	You
O	33004	33010	should
O	33011	33017	create
O	33018	33022	your
O	33023	33026	own
B-api_mention	33027	33036	Collector
O	33037	33040	for
O	33041	33045	this
O	33045	33046	:
O	33047	33048	#
O	33048	33051	pre
O	33052	33056	What
O	33057	33059	it
O	33060	33064	does
O	33065	33067	is
O	33067	33068	:
O	33069	33070	#
O	33070	33072	li
O	33073	33075	It
O	33076	33083	mimicks
O	33084	33087	the
B-api_mention	33088	33098	Collectors
I-api_mention	33098	33099	.
I-api_mention	33099	33105	toList
I-api_mention	33105	33106	(
I-api_mention	33106	33110	args
I-api_mention	33110	33111	)
O	33112	33121	collector
O	33121	33122	.

O	33123	33124	#
O	33124	33126	li
O	33127	33129	It
O	33130	33137	applies
O	33138	33140	an
O	33141	33146	extra
O	33147	33155	finisher
O	33156	33158	at
O	33159	33162	the
O	33163	33166	end
O	33166	33167	,
O	33168	33172	that
O	33173	33179	throws
O	33180	33182	an
O	33183	33192	exception
O	33192	33193	,
O	33194	33196	or
O	33197	33199	if
O	33200	33202	no
O	33203	33212	exception
O	33212	33213	,
O	33214	33221	returns
O	33222	33225	the
O	33226	33231	first
O	33232	33239	element
O	33240	33242	of
O	33243	33246	the
O	33247	33251	list
O	33251	33252	.

O	33253	33257	Used
O	33258	33260	as
O	33260	33261	:
B-api_mention	33262	33266	User
O	33267	33277	resultUser
O	33278	33279	=
O	33280	33285	users
B-api_mention	33285	33286	.
I-api_mention	33286	33292	stream
I-api_mention	33292	33293	(
I-api_mention	33293	33297	args
I-api_mention	33297	33298	)
I-api_mention	33299	33300	.
I-api_mention	33300	33306	filter
I-api_mention	33306	33307	(
I-api_mention	33307	33311	args
I-api_mention	33311	33312	)
I-api_mention	33313	33314	.
I-api_mention	33314	33321	collect
I-api_mention	33321	33322	(
I-api_mention	33322	33326	args
I-api_mention	33326	33327	)
O	33327	33328	;
O	33329	33332	You
O	33333	33336	can
O	33337	33341	then
O	33342	33351	customize
O	33352	33356	this
B-api_mention	33357	33375	singletonCollector
O	33376	33378	as
O	33379	33383	much
O	33384	33386	as
O	33387	33390	you
O	33391	33395	want
O	33395	33396	,
O	33397	33400	for
O	33401	33408	example
O	33409	33413	give
O	33414	33417	the
O	33418	33427	exception
O	33428	33430	as
O	33431	33439	argument
O	33440	33442	in
O	33443	33446	the
O	33447	33458	constructor
O	33458	33459	,
O	33460	33465	tweak
O	33466	33468	it
O	33469	33471	to
O	33472	33477	allow
O	33478	33481	two
O	33482	33488	values
O	33488	33489	,
O	33490	33493	and
O	33494	33498	more
O	33498	33499	.

O	33500	33503	New
O	33504	33510	update
O	33511	33512	,
O	33513	33514	I
O	33515	33522	revised
O	33523	33525	my
O	33526	33529	old
O	33530	33536	answer
O	33537	33541	once
O	33542	33546	more
O	33547	33550	for
B-api_mention	33551	33569	singletonCollector
I-api_mention	33569	33570	(
I-api_mention	33570	33574	args
I-api_mention	33574	33575	)
O	33576	33577	,
O	33578	33580	it
O	33581	33584	can
O	33585	33593	actually
O	33594	33596	be
O	33597	33605	obtained
O	33606	33610	like
O	33611	33615	this
O	33615	33616	:
O	33617	33618	#
O	33618	33621	pre

O	33623	33631	Question
O	33631	33632	-
O	33632	33640	22694884
O	33640	33641	,
O	33642	33648	answer
O	33648	33649	-
O	33649	33657	39385411

O	33658	33660	As
B-api_mention	33661	33671	Collectors
I-api_mention	33671	33672	.
I-api_mention	33672	33677	toMap
I-api_mention	33677	33678	(
I-api_mention	33678	33682	args
I-api_mention	33682	33683	)
O	33684	33688	uses
O	33689	33690	a
O	33691	33699	throwing
O	33700	33706	merger
O	33707	33709	to
O	33710	33716	handle
O	33717	33725	multiple
O	33726	33733	entries
O	33734	33738	with
O	33739	33742	the
O	33743	33747	same
O	33748	33751	key
O	33752	33754	it
O	33755	33757	is
O	33758	33762	easy
O	33762	33763	:
O	33764	33765	#
O	33765	33768	pre
O	33769	33772	You
O	33773	33777	will
O	33778	33781	get
O	33782	33783	a
B-api_mention	33784	33805	IllegalStateException
O	33806	33809	for
O	33810	33819	duplicate
O	33820	33824	keys
O	33824	33825	.

O	33826	33829	But
O	33830	33832	at
O	33833	33836	the
O	33837	33840	end
O	33841	33842	I
O	33843	33845	am
O	33846	33849	not
O	33850	33854	sure
O	33855	33857	if
O	33858	33861	the
O	33862	33866	code
O	33867	33872	would
O	33873	33876	not
O	33877	33879	be
O	33880	33884	even
O	33885	33889	more
O	33890	33898	readable
O	33899	33904	using
O	33905	33907	an
O	33908	33910	if
O	33911	33912	.

O	33914	33922	Question
O	33922	33923	-
O	33923	33931	23932061
O	33931	33932	,
O	33933	33939	answer
O	33939	33940	-
O	33940	33948	23932216

O	33949	33952	You
O	33953	33956	can
O	33957	33963	easily
O	33964	33970	create
O	33971	33972	a
B-api_mention	33973	33979	Stream
O	33980	33983	out
O	33984	33986	of
O	33987	33989	an
B-api_mention	33990	33998	Iterable
O	33999	34001	or
B-api_mention	34002	34010	Iterator
O	34011	34012	:
O	34013	34014	#
O	34014	34017	pre

O	34019	34027	Question
O	34027	34028	-
O	34028	34036	23932061
O	34036	34037	,
O	34038	34044	answer
O	34044	34045	-
O	34045	34053	23936723

O	34054	34059	There
O	34059	34060	'
O	34060	34061	s
O	34062	34063	a
O	34064	34068	much
O	34069	34075	better
O	34076	34082	answer
O	34083	34087	than
O	34088	34093	using
B-api_mention	34094	34116	spliteratorUnknownSize
O	34117	34125	directly
O	34125	34126	,
O	34127	34132	which
O	34133	34135	is
O	34136	34140	both
O	34141	34147	easier
O	34148	34151	and
O	34152	34156	gets
O	34157	34158	a
O	34159	34165	better
O	34166	34172	result
O	34172	34173	.

O	34174	34182	Iterable
O	34183	34186	has
O	34187	34188	a
B-api_mention	34189	34200	spliterator
I-api_mention	34200	34201	(
I-api_mention	34201	34205	args
I-api_mention	34205	34206	)
O	34207	34213	method
O	34213	34214	,
O	34215	34217	so
O	34218	34221	you
O	34222	34228	should
O	34229	34233	just
O	34234	34237	use
O	34238	34242	that
O	34243	34245	to
O	34246	34249	get
O	34250	34254	your
O	34255	34266	spliterator
O	34266	34267	.

O	34268	34270	In
O	34271	34274	the
O	34275	34280	worst
O	34281	34285	case
O	34285	34286	,
O	34287	34290	its
O	34291	34294	the
O	34295	34299	same
O	34300	34304	code
O	34305	34306	(
O	34306	34309	the
O	34310	34317	default
O	34318	34332	implementation
O	34333	34337	uses
B-api_mention	34338	34360	spliteratorUnknownSize
O	34361	34362	)
O	34362	34363	,
O	34364	34367	but
O	34368	34370	in
O	34371	34374	the
O	34375	34379	more
O	34380	34386	common
O	34387	34391	case
O	34391	34392	,
O	34393	34398	where
O	34399	34403	your
O	34404	34412	Iterable
O	34413	34415	is
O	34416	34423	already
O	34424	34425	a
O	34426	34436	collection
O	34436	34437	,
O	34438	34441	you
O	34441	34442	'
O	34442	34444	ll
O	34445	34448	get
O	34449	34450	a
O	34451	34457	better
O	34458	34469	spliterator
O	34469	34470	,
O	34471	34474	and
O	34475	34484	therefore
O	34485	34491	better
O	34492	34498	stream
O	34499	34510	performance
O	34511	34512	(
O	34512	34517	maybe
O	34518	34522	even
O	34523	34527	good
O	34528	34539	parallelism
O	34539	34540	.
O	34540	34541	)
O	34542	34545	Its
O	34546	34550	also
O	34551	34555	less
O	34556	34560	code
O	34560	34561	:
B-api_mention	34562	34575	StreamSupport
I-api_mention	34575	34576	.
I-api_mention	34576	34582	stream
I-api_mention	34582	34583	(
I-api_mention	34583	34587	args
I-api_mention	34587	34588	)
I-api_mention	34589	34590	.
I-api_mention	34590	34596	filter
I-api_mention	34596	34597	(
I-api_mention	34597	34601	args
I-api_mention	34601	34602	)
I-api_mention	34603	34604	.
I-api_mention	34604	34617	moreStreamOps
I-api_mention	34617	34618	(
I-api_mention	34618	34622	args
I-api_mention	34622	34623	)
O	34623	34624	;
O	34625	34627	As
O	34628	34631	you
O	34632	34635	can
O	34636	34639	see
O	34639	34640	,
O	34641	34648	getting
O	34649	34650	a
O	34651	34657	stream
O	34658	34662	from
O	34663	34665	an
B-api_mention	34666	34674	Iterable
O	34675	34676	(
O	34676	34679	see
O	34680	34683	Why
O	34684	34688	does
B-api_mention	34689	34697	Iterable
I-api_mention	34697	34698	<
I-api_mention	34698	34699	T
I-api_mention	34699	34700	>
O	34701	34704	not
O	34705	34712	provide
B-api_mention	34713	34719	stream
I-api_mention	34719	34720	(
I-api_mention	34720	34721	)
O	34722	34725	and
B-api_mention	34726	34740	parallelStream
I-api_mention	34740	34741	(
I-api_mention	34741	34742	)
O	34743	34750	methods
O	34750	34751	?
O	34752	34753	)
O	34754	34756	is
O	34757	34760	not
O	34761	34765	very
O	34766	34773	painful
O	34773	34774	.

O	34776	34784	Question
O	34784	34785	-
O	34785	34793	20918650
O	34793	34794	,
O	34795	34801	answer
O	34801	34802	-
O	34802	34810	20918709

O	34811	34812	A
O	34813	34823	subsequent
O	34824	34828	post
O	34829	34831	by
O	34832	34835	the
O	34836	34840	same
O	34841	34845	user
O	34846	34848	in
O	34849	34852	the
O	34853	34857	same
O	34858	34870	conversation
O	34870	34871	:
O	34872	34873	#
O	34873	34883	blockquote
O	34884	34885	(
O	34885	34889	This
O	34890	34893	was
O	34894	34896	in
O	34897	34905	response
O	34906	34908	to
O	34909	34910	a
O	34911	34920	statement
O	34921	34923	by
O	34924	34931	another
O	34932	34936	user
O	34936	34937	,
O	34938	34944	namely
O	34945	34949	that
O	34950	34951	"
O	34951	34953	it
O	34954	34959	seems
O	34960	34962	in
O	34963	34967	some
O	34968	34978	situations
O	34979	34980	'
O	34980	34983	new
B-api_mention	34984	34985	T
O	34985	34986	'
O	34987	34992	would
O	34993	34995	be
O	34996	35002	better
O	35002	35003	"
O	35003	35004	,
O	35005	35008	the
O	35009	35013	idea
O	35014	35019	being
O	35020	35024	that
O	35025	35028	new
B-api_mention	35029	35030	T
I-api_mention	35030	35031	(
I-api_mention	35031	35035	args
I-api_mention	35035	35036	)
O	35037	35039	is
O	35040	35050	impossible
O	35051	35054	due
O	35055	35057	to
O	35058	35062	type
O	35063	35070	erasure
O	35070	35071	.

O	35072	35073	(
O	35073	35077	This
O	35078	35080	is
O	35081	35090	debatable
O	35091	35092	—
O	35093	35097	even
O	35098	35100	if
B-api_mention	35101	35102	T
O	35103	35107	were
O	35108	35117	available
O	35118	35120	at
O	35121	35128	runtime
O	35128	35129	,
O	35130	35132	it
O	35133	35138	could
O	35139	35141	be
O	35142	35144	an
O	35145	35153	abstract
O	35154	35159	class
O	35160	35162	or
O	35163	35172	interface
O	35172	35173	,
O	35174	35176	or
O	35177	35179	it
O	35180	35185	could
O	35186	35188	be
O	35189	35193	Void
O	35194	35195	,
O	35196	35198	or
O	35199	35201	it
O	35202	35207	could
O	35208	35212	lack
O	35213	35214	a
O	35215	35217	no
O	35217	35218	-
O	35218	35221	arg
O	35222	35233	constructor
O	35233	35234	,
O	35235	35237	or
O	35238	35241	its
O	35242	35244	no
O	35244	35245	-
O	35245	35248	arg
O	35249	35260	constructor
O	35261	35266	could
O	35267	35269	be
O	35270	35277	private
O	35278	35279	(
O	35279	35280	e
O	35280	35281	.
O	35281	35282	g
O	35282	35283	.
O	35283	35284	,
O	35285	35292	because
O	35293	35295	it
O	35295	35296	'
O	35296	35297	s
O	35298	35306	supposed
O	35307	35309	to
O	35310	35312	be
O	35313	35314	a
O	35315	35324	singleton
O	35325	35330	class
O	35330	35331	)
O	35331	35332	,
O	35333	35335	or
O	35336	35339	its
O	35340	35342	no
O	35342	35343	-
O	35343	35346	arg
O	35347	35358	constructor
O	35359	35364	could
O	35365	35372	specify
O	35373	35374	a
O	35375	35382	checked
O	35383	35392	exception
O	35393	35397	that
O	35398	35401	the
O	35402	35409	generic
O	35410	35416	method
O	35417	35421	does
O	35422	35425	not
O	35426	35431	catch
O	35432	35434	or
O	35435	35442	specify
O	35443	35444	—
O	35445	35448	but
O	35449	35453	that
O	35454	35457	was
O	35458	35461	the
O	35462	35469	premise
O	35469	35470	.

O	35471	35481	Regardless
O	35481	35482	,
O	35483	35485	it
O	35485	35486	'
O	35486	35487	s
O	35488	35492	true
O	35493	35497	that
O	35498	35505	without
O	35506	35513	erasure
O	35514	35517	you
O	35518	35523	could
O	35524	35526	at
O	35527	35532	least
O	35533	35538	write
B-api_mention	35539	35540	T
I-api_mention	35540	35541	.
I-api_mention	35541	35546	class
I-api_mention	35546	35547	.
I-api_mention	35547	35558	newInstance
I-api_mention	35558	35559	(
I-api_mention	35559	35563	args
I-api_mention	35563	35564	)
O	35565	35566	,
O	35567	35572	which
O	35573	35580	handles
O	35581	35586	those
O	35587	35593	issues
O	35593	35594	.
O	35594	35595	)
O	35595	35596	)
O	35597	35601	This
O	35602	35606	view
O	35606	35607	,
O	35608	35612	that
O	35613	35618	types
O	35619	35622	are
O	35623	35633	isomorphic
O	35634	35636	to
O	35637	35649	propositions
O	35649	35650	,
O	35651	35659	suggests
O	35660	35664	that
O	35665	35668	the
O	35669	35673	user
O	35674	35677	has
O	35678	35679	a
O	35680	35690	background
O	35691	35693	in
O	35694	35700	formal
O	35701	35705	type
O	35706	35712	theory
O	35712	35713	.

O	35714	35715	(
O	35715	35716	S
O	35716	35717	)
O	35717	35719	he
O	35720	35724	very
O	35725	35731	likely
O	35732	35736	does
O	35737	35740	not
O	35741	35745	like
O	35746	35747	"
O	35747	35754	dynamic
O	35755	35760	types
O	35760	35761	"
O	35762	35764	or
O	35765	35766	"
O	35766	35773	runtime
O	35773	35774	-
O	35774	35779	types
O	35779	35780	"
O	35781	35784	and
O	35785	35790	would
O	35791	35797	prefer
O	35798	35799	a
O	35800	35804	Java
O	35805	35812	without
O	35813	35822	downcasts
O	35823	35826	and
B-api_mention	35827	35837	instanceof
O	35838	35841	and
O	35842	35852	reflection
O	35853	35856	and
O	35857	35859	so
O	35860	35862	on
O	35862	35863	.

O	35864	35865	(
O	35865	35870	Think
O	35871	35873	of
O	35874	35875	a
O	35876	35884	language
O	35885	35889	like
O	35890	35898	Standard
O	35899	35901	ML
O	35901	35902	,
O	35903	35908	which
O	35909	35912	has
O	35913	35914	a
O	35915	35919	very
O	35920	35924	rich
O	35925	35926	(
O	35926	35932	static
O	35932	35933	)
O	35934	35938	type
O	35939	35945	system
O	35946	35949	and
O	35950	35955	whose
O	35956	35963	dynamic
O	35964	35973	semantics
O	35974	35976	do
O	35977	35980	not
O	35981	35987	depend
O	35988	35990	on
O	35991	35994	any
O	35995	35999	type
O	36000	36011	information
O	36012	36022	whatsoever
O	36022	36023	.
O	36023	36024	)
O	36025	36027	It
O	36027	36028	'
O	36028	36029	s
O	36030	36035	worth
O	36036	36043	keeping
O	36044	36046	in
O	36047	36051	mind
O	36051	36052	,
O	36053	36055	by
O	36056	36059	the
O	36060	36063	way
O	36063	36064	,
O	36065	36069	that
O	36070	36073	the
O	36074	36078	user
O	36079	36081	is
O	36082	36090	trolling
O	36090	36091	:
O	36092	36097	while
O	36098	36099	(
O	36099	36100	s
O	36100	36101	)
O	36101	36103	he
O	36104	36110	likely
O	36111	36120	sincerely
O	36121	36128	prefers
O	36129	36130	(
O	36130	36140	statically
O	36140	36141	)
O	36142	36147	typed
O	36148	36157	languages
O	36157	36158	,
O	36159	36160	(
O	36160	36161	s
O	36161	36162	)
O	36162	36164	he
O	36165	36167	is
O	36168	36171	not
O	36172	36181	sincerely
O	36182	36188	trying
O	36189	36191	to
O	36192	36200	persuade
O	36201	36207	others
O	36208	36210	of
O	36211	36215	that
O	36216	36220	view
O	36220	36221	.

O	36222	36228	Rather
O	36228	36229	,
O	36230	36233	the
O	36234	36238	main
O	36239	36246	purpose
O	36247	36249	of
O	36250	36253	the
O	36254	36262	original
O	36263	36268	tweet
O	36269	36272	was
O	36273	36275	to
O	36276	36280	mock
O	36281	36286	those
O	36287	36290	who
O	36291	36299	disagree
O	36299	36300	,
O	36301	36304	and
O	36305	36310	after
O	36311	36315	some
O	36316	36318	of
O	36319	36324	those
O	36325	36333	disagree
O	36333	36334	-
O	36334	36337	ers
O	36338	36344	chimed
O	36345	36347	in
O	36347	36348	,
O	36349	36352	the
O	36353	36357	user
O	36358	36364	posted
O	36365	36371	follow
O	36371	36372	-
O	36372	36374	up
O	36375	36381	tweets
O	36382	36386	such
O	36387	36389	as
O	36390	36391	"
O	36391	36394	the
O	36395	36401	reason
O	36402	36406	java
O	36407	36410	has
O	36411	36415	type
O	36416	36423	erasure
O	36424	36426	is
O	36427	36431	that
O	36432	36438	Wadler
O	36439	36441	et
O	36442	36444	al
O	36445	36449	know
O	36450	36454	what
O	36455	36459	they
O	36460	36463	are
O	36464	36469	doing
O	36469	36470	,
O	36471	36477	unlike
O	36478	36483	users
O	36484	36486	of
O	36487	36491	java
O	36491	36492	"
O	36492	36493	.

O	36494	36507	Unfortunately
O	36507	36508	,
O	36509	36513	this
O	36514	36519	makes
O	36520	36522	it
O	36523	36527	hard
O	36528	36530	to
O	36531	36535	find
O	36536	36539	out
O	36540	36544	what
O	36545	36546	(
O	36546	36547	s
O	36547	36548	)
O	36548	36550	he
O	36550	36551	'
O	36551	36552	s
O	36553	36561	actually
O	36562	36570	thinking
O	36570	36571	;
O	36572	36575	but
O	36576	36587	fortunately
O	36587	36588	,
O	36589	36591	it
O	36592	36596	also
O	36597	36603	likely
O	36604	36609	means
O	36610	36614	that
O	36615	36617	it
O	36617	36618	'
O	36618	36619	s
O	36620	36623	not
O	36624	36628	very
O	36629	36638	important
O	36639	36641	to
O	36642	36644	do
O	36645	36647	so
O	36647	36648	.

O	36649	36655	People
O	36656	36660	with
O	36661	36667	actual
O	36668	36673	depth
O	36674	36676	to
O	36677	36682	their
O	36683	36688	views
O	36689	36692	don
O	36692	36693	'
O	36693	36694	t
O	36695	36704	generally
O	36705	36711	resort
O	36712	36714	to
O	36715	36721	trolls
O	36722	36726	that
O	36727	36730	are
O	36731	36736	quite
O	36737	36741	this
O	36742	36749	content
O	36749	36750	-
O	36750	36754	free
O	36754	36755	.

O	36757	36765	Question
O	36765	36766	-
O	36766	36774	22561614
O	36774	36775	,
O	36776	36782	answer
O	36782	36783	-
O	36783	36791	22561687

O	36792	36796	This
O	36797	36802	works
O	36803	36810	because
B-api_mention	36811	36818	Integer
I-api_mention	36818	36819	:
I-api_mention	36819	36820	:
I-api_mention	36820	36823	min
O	36824	36832	resolves
O	36833	36835	to
O	36836	36838	an
O	36839	36853	implementation
O	36854	36856	of
O	36857	36860	the
B-api_mention	36861	36871	Comparable
I-api_mention	36871	36872	<
I-api_mention	36872	36873	T
I-api_mention	36873	36874	>
O	36875	36884	interface
O	36884	36885	.

O	36886	36889	The
O	36890	36896	method
O	36897	36906	reference
O	36907	36909	of
B-api_mention	36910	36917	Integer
I-api_mention	36917	36918	:
I-api_mention	36918	36919	:
I-api_mention	36919	36922	min
O	36923	36931	resolves
O	36932	36934	to
B-api_mention	36935	36942	Integer
I-api_mention	36942	36943	.
I-api_mention	36943	36946	min
I-api_mention	36946	36947	(
I-api_mention	36947	36951	args
I-api_mention	36951	36952	)
O	36953	36954	,
O	36955	36963	resolved
O	36964	36966	to
B-api_mention	36967	36984	IntBinaryOperator
O	36985	36986	,
O	36987	36990	and
O	36991	37001	presumably
O	37002	37012	autoboxing
O	37013	37019	occurs
O	37020	37029	somewhere
O	37030	37036	making
O	37037	37039	it
O	37040	37041	a
B-api_mention	37042	37056	BinaryOperator
I-api_mention	37056	37057	<
I-api_mention	37057	37058	T
I-api_mention	37058	37059	>
O	37060	37061	.

O	37062	37065	And
O	37066	37069	the
B-api_mention	37070	37073	min
I-api_mention	37073	37074	(
I-api_mention	37074	37078	args
I-api_mention	37078	37079	)
O	37080	37084	resp
B-api_mention	37085	37088	max
I-api_mention	37088	37089	(
I-api_mention	37089	37093	args
I-api_mention	37093	37094	)
O	37095	37102	methods
O	37103	37105	of
O	37106	37109	the
B-api_mention	37110	37116	Stream
I-api_mention	37116	37117	<
I-api_mention	37117	37118	T
I-api_mention	37118	37119	>
O	37120	37123	ask
O	37124	37127	the
B-api_mention	37128	37138	Comparable
I-api_mention	37138	37139	<
I-api_mention	37139	37140	T
I-api_mention	37140	37141	>
O	37142	37151	interface
O	37152	37154	to
O	37155	37157	be
O	37158	37169	implemented
O	37169	37170	.

O	37171	37174	Now
O	37175	37179	this
O	37180	37188	resolves
O	37189	37191	to
O	37192	37195	the
O	37196	37202	single
O	37203	37209	method
O	37210	37217	Integer
B-api_mention	37218	37227	compareTo
I-api_mention	37227	37228	(
I-api_mention	37228	37232	args
I-api_mention	37232	37233	)
O	37234	37235	.

O	37236	37241	Which
O	37242	37244	is
O	37245	37247	of
O	37248	37252	type
B-api_mention	37253	37267	BinaryOperator
I-api_mention	37267	37268	<
I-api_mention	37268	37269	T
I-api_mention	37269	37270	>
O	37271	37272	.

O	37273	37276	And
O	37277	37281	thus
O	37282	37285	the
O	37286	37291	magic
O	37292	37295	has
O	37296	37304	happened
O	37305	37307	as
O	37308	37312	both
O	37313	37320	methods
O	37321	37324	are
O	37325	37326	a
B-api_mention	37327	37341	BinaryOperator
I-api_mention	37341	37342	<
I-api_mention	37342	37343	T
I-api_mention	37343	37344	>
O	37345	37346	.

O	37348	37356	Question
O	37356	37357	-
O	37357	37365	22561614
O	37365	37366	,
O	37367	37373	answer
O	37373	37374	-
O	37374	37382	22561690

O	37383	37393	Comparator
O	37394	37396	is
O	37397	37398	a
O	37399	37409	functional
O	37410	37419	interface
O	37420	37421	,
O	37422	37425	and
B-api_mention	37426	37433	Integer
I-api_mention	37433	37434	:
I-api_mention	37434	37435	:
I-api_mention	37435	37438	max
O	37439	37447	complies
O	37448	37452	with
O	37453	37457	that
O	37458	37467	interface
O	37468	37469	(
O	37469	37474	after
O	37475	37485	autoboxing
O	37485	37486	/
O	37486	37494	unboxing
O	37495	37497	is
O	37498	37503	taken
O	37504	37508	into
O	37509	37522	consideration
O	37522	37523	)
O	37523	37524	.

O	37525	37527	It
O	37528	37533	takes
O	37534	37537	two
O	37538	37541	int
O	37542	37548	values
O	37549	37552	and
O	37553	37560	returns
O	37561	37563	an
O	37564	37567	int
O	37568	37569	-
O	37570	37574	just
O	37575	37577	as
O	37578	37581	you
O	37581	37582	'
O	37582	37583	d
O	37584	37590	expect
O	37591	37592	a
B-api_mention	37593	37603	Comparator
I-api_mention	37603	37604	<
I-api_mention	37604	37605	T
I-api_mention	37605	37606	>
O	37607	37609	to
O	37610	37611	(
O	37611	37616	again
O	37616	37617	,
O	37618	37627	squinting
O	37628	37630	to
O	37631	37637	ignore
O	37638	37641	the
B-api_mention	37642	37649	Integer
O	37649	37650	/
O	37650	37653	int
O	37654	37664	difference
O	37664	37665	)
O	37665	37666	.

O	37667	37674	However
O	37674	37675	,
O	37676	37677	I
O	37678	37684	wouldn
O	37684	37685	'
O	37685	37686	t
O	37687	37693	expect
O	37694	37696	it
O	37697	37699	to
O	37700	37702	do
O	37703	37706	the
O	37707	37712	right
O	37713	37718	thing
O	37718	37719	,
O	37720	37725	given
O	37726	37730	that
O	37731	37738	Integer
O	37738	37739	.
O	37739	37742	max
O	37743	37748	doesn
O	37748	37749	'
O	37749	37750	t
O	37751	37757	comply
O	37758	37762	with
O	37763	37766	the
O	37767	37776	semantics
O	37777	37779	of
B-api_mention	37780	37790	Comparator
I-api_mention	37790	37791	.
I-api_mention	37791	37798	compare
O	37799	37800	.

O	37801	37804	And
O	37805	37811	indeed
O	37812	37814	it
O	37815	37820	doesn
O	37820	37821	'
O	37821	37822	t
O	37823	37829	really
O	37830	37834	work
O	37835	37837	in
O	37838	37845	general
O	37845	37846	.

O	37847	37850	For
O	37851	37858	example
O	37858	37859	,
O	37860	37864	make
O	37865	37868	one
O	37869	37874	small
O	37875	37881	change
O	37881	37882	:
O	37883	37884	#
O	37884	37887	pre
O	37888	37889	.
O	37889	37890	.
O	37890	37891	.
O	37892	37895	and
O	37896	37899	now
O	37900	37903	the
O	37904	37907	max
O	37908	37913	value
O	37914	37916	is
O	37917	37918	-
O	37918	37920	20
O	37921	37924	and
O	37925	37928	the
O	37929	37932	min
O	37933	37938	value
O	37939	37941	is
O	37942	37943	-
O	37943	37944	1
O	37944	37945	.

O	37946	37953	Instead
O	37953	37954	,
O	37955	37959	both
O	37960	37965	calls
O	37966	37972	should
O	37973	37976	use
B-api_mention	37977	37984	Integer
I-api_mention	37984	37985	:
I-api_mention	37985	37986	:
I-api_mention	37986	37993	compare
O	37994	37995	:
O	37996	37997	#
O	37997	38000	pre

O	38002	38010	Question
O	38010	38011	-
O	38011	38019	22561614
O	38019	38020	,
O	38021	38027	answer
O	38027	38028	-
O	38028	38036	22561853

O	38037	38040	Let
O	38041	38043	me
O	38044	38051	explain
O	38052	38056	what
O	38057	38059	is
O	38060	38069	happening
O	38070	38074	here
O	38074	38075	,
O	38076	38083	because
O	38084	38086	it
O	38087	38090	isn
O	38090	38091	'
O	38091	38092	t
O	38093	38100	obvious
O	38100	38101	!

O	38102	38107	First
O	38107	38108	,
B-api_mention	38109	38115	Stream
I-api_mention	38115	38116	.
I-api_mention	38116	38119	max
I-api_mention	38119	38120	(
I-api_mention	38120	38121	)
O	38122	38129	accepts
O	38130	38132	an
O	38133	38141	instance
O	38142	38144	of
B-api_mention	38145	38155	Comparator
O	38156	38158	so
O	38159	38163	that
O	38164	38169	items
O	38170	38172	in
O	38173	38176	the
O	38177	38183	stream
O	38184	38187	can
O	38188	38190	be
O	38191	38199	compared
O	38200	38207	against
O	38208	38212	each
O	38213	38218	other
O	38219	38221	to
O	38222	38226	find
O	38227	38230	the
O	38231	38238	minimum
O	38239	38241	or
O	38242	38249	maximum
O	38249	38250	,
O	38251	38253	in
O	38254	38258	some
O	38259	38266	optimal
O	38267	38272	order
O	38273	38277	that
O	38278	38281	you
O	38282	38285	don
O	38285	38286	'
O	38286	38287	t
O	38288	38292	need
O	38293	38295	to
O	38296	38301	worry
O	38302	38305	too
O	38306	38310	much
O	38311	38316	about
O	38316	38317	.

O	38318	38320	So
O	38321	38324	the
O	38325	38333	question
O	38334	38336	is
O	38336	38337	,
O	38338	38340	of
O	38341	38347	course
O	38347	38348	,
O	38349	38352	why
O	38353	38355	is
B-api_mention	38356	38363	Integer
I-api_mention	38363	38364	:
I-api_mention	38364	38365	:
I-api_mention	38365	38368	max
O	38369	38377	accepted
O	38377	38378	?

O	38379	38384	After
O	38385	38388	all
O	38389	38391	it
O	38391	38392	'
O	38392	38393	s
O	38394	38397	not
O	38398	38399	a
O	38400	38410	comparator
O	38410	38411	!

O	38412	38415	The
O	38416	38422	answer
O	38423	38425	is
O	38426	38428	in
O	38429	38432	the
O	38433	38436	way
O	38437	38441	that
O	38442	38445	the
O	38446	38449	new
O	38450	38456	lambda
O	38457	38470	functionality
O	38471	38476	works
O	38477	38479	in
O	38480	38484	Java
O	38485	38486	8
O	38486	38487	.

O	38488	38490	It
O	38491	38497	relies
O	38498	38500	on
O	38501	38502	a
O	38503	38510	concept
O	38511	38516	which
O	38517	38519	is
O	38520	38530	informally
O	38531	38536	known
O	38537	38539	as
O	38540	38541	"
O	38541	38547	single
O	38548	38556	abstract
O	38557	38563	method
O	38563	38564	"
O	38565	38575	interfaces
O	38575	38576	,
O	38577	38579	or
O	38580	38581	"
O	38581	38584	SAM
O	38584	38585	"
O	38586	38596	interfaces
O	38596	38597	.

O	38598	38601	The
O	38602	38606	idea
O	38607	38609	is
O	38610	38614	that
O	38615	38618	any
O	38619	38628	interface
O	38629	38633	with
O	38634	38637	one
O	38638	38646	abstract
O	38647	38653	method
O	38654	38657	can
O	38658	38660	be
O	38661	38674	automatically
O	38675	38686	implemented
O	38687	38689	by
O	38690	38693	any
O	38694	38700	lambda
O	38701	38702	-
O	38703	38705	or
O	38706	38712	method
O	38713	38722	reference
O	38723	38724	-
O	38725	38730	whose
O	38731	38737	method
O	38738	38747	signature
O	38748	38750	is
O	38751	38752	a
O	38753	38758	match
O	38759	38762	for
O	38763	38766	the
O	38767	38770	one
O	38771	38777	method
O	38778	38780	on
O	38781	38784	the
O	38785	38794	interface
O	38794	38795	.

O	38796	38798	So
O	38799	38808	examining
O	38809	38812	the
B-api_mention	38813	38823	Comparator
O	38824	38833	interface
O	38834	38835	(
O	38835	38841	simple
O	38842	38849	version
O	38849	38850	)
O	38850	38851	:
O	38852	38853	#
O	38853	38856	pre
O	38857	38859	If
O	38860	38861	a
O	38862	38868	method
O	38869	38871	is
O	38872	38879	looking
O	38880	38883	for
O	38884	38885	a
B-api_mention	38886	38896	Comparator
I-api_mention	38896	38897	<
I-api_mention	38897	38898	T
I-api_mention	38898	38899	>
O	38900	38901	,
O	38902	38906	then
O	38907	38909	it
O	38909	38910	'
O	38910	38911	s
O	38912	38923	essentially
O	38924	38931	looking
O	38932	38935	for
O	38936	38940	this
O	38941	38950	signature
O	38950	38951	:
O	38952	38955	int
O	38956	38959	xxx
O	38959	38960	(
O	38960	38964	args
O	38964	38965	)
O	38965	38966	;
O	38967	38968	I
O	38969	38972	use
O	38973	38974	"
O	38974	38977	xxx
O	38977	38978	"
O	38979	38986	because
O	38987	38990	the
O	38991	38997	method
O	38998	39002	name
O	39003	39005	is
O	39006	39009	not
O	39010	39014	used
O	39015	39018	for
O	39019	39027	matching
O	39028	39036	purposes
O	39037	39038	.

O	39039	39048	Therefore
O	39048	39049	,
O	39050	39054	both
B-api_mention	39055	39062	Integer
I-api_mention	39062	39063	.
I-api_mention	39063	39066	min
I-api_mention	39066	39067	(
I-api_mention	39067	39071	args
I-api_mention	39071	39072	)
O	39073	39076	and
B-api_mention	39077	39084	Integer
I-api_mention	39084	39085	.
I-api_mention	39085	39088	max
I-api_mention	39088	39089	(
I-api_mention	39089	39093	args
I-api_mention	39093	39094	)
O	39095	39098	are
O	39099	39104	close
O	39105	39111	enough
O	39112	39116	that
O	39117	39127	autoboxing
O	39128	39132	will
O	39133	39138	allow
O	39139	39143	this
O	39144	39146	to
O	39147	39153	appear
O	39154	39156	as
O	39157	39158	a
B-api_mention	39159	39169	Comparator
I-api_mention	39169	39170	<
I-api_mention	39170	39171	T
I-api_mention	39171	39172	>
O	39173	39175	in
O	39176	39177	a
O	39178	39184	method
O	39185	39192	context
O	39192	39193	.

O	39195	39203	Question
O	39203	39204	-
O	39204	39212	23114015
O	39212	39213	,
O	39214	39220	answer
O	39220	39221	-
O	39221	39229	23177907

O	39230	39234	This
O	39235	39238	was
O	39239	39242	not
O	39243	39245	an
O	39246	39254	omission
O	39254	39255	;
O	39256	39261	there
O	39262	39265	was
O	39266	39274	detailed
O	39275	39285	discussion
O	39286	39288	on
O	39289	39292	the
O	39293	39295	EG
O	39296	39300	list
O	39301	39303	in
O	39304	39308	June
O	39309	39311	of
O	39312	39316	2013
O	39316	39317	.

O	39318	39321	The
O	39322	39332	definitive
O	39333	39343	discussion
O	39344	39346	of
O	39347	39350	the
O	39351	39357	Expert
O	39358	39363	Group
O	39364	39366	is
O	39367	39373	rooted
O	39374	39376	at
O	39377	39381	this
O	39382	39388	thread
O	39389	39390	.

O	39391	39396	While
O	39397	39399	it
O	39400	39406	seemed
O	39407	39408	"
O	39408	39415	obvious
O	39415	39416	"
O	39417	39418	(
O	39418	39422	even
O	39423	39425	to
O	39426	39429	the
O	39430	39436	Expert
O	39437	39442	Group
O	39442	39443	,
O	39444	39453	initially
O	39453	39454	)
O	39455	39459	that
B-api_mention	39460	39466	stream
I-api_mention	39466	39467	(
I-api_mention	39467	39471	args
I-api_mention	39471	39472	)
O	39473	39479	seemed
O	39480	39482	to
O	39483	39487	make
O	39488	39493	sense
O	39494	39496	on
B-api_mention	39497	39505	Iterable
O	39506	39507	,
O	39508	39511	the
O	39512	39516	fact
O	39517	39521	that
B-api_mention	39522	39530	Iterable
O	39531	39534	was
O	39535	39537	so
O	39538	39545	general
O	39546	39552	became
O	39553	39554	a
O	39555	39562	problem
O	39562	39563	,
O	39564	39571	because
O	39572	39575	the
O	39576	39583	obvious
O	39584	39593	signature
O	39593	39594	:
B-api_mention	39595	39601	Stream
I-api_mention	39601	39602	<
I-api_mention	39602	39603	T
I-api_mention	39603	39604	>
I-api_mention	39605	39611	stream
I-api_mention	39611	39612	(
I-api_mention	39612	39616	args
I-api_mention	39616	39617	)
O	39618	39621	was
O	39622	39625	not
O	39626	39632	always
O	39633	39637	what
O	39638	39641	you
O	39642	39646	were
O	39647	39652	going
O	39653	39655	to
O	39656	39660	want
O	39660	39661	.

O	39662	39666	Some
O	39667	39673	things
O	39674	39678	that
O	39679	39683	were
B-api_mention	39684	39692	Iterable
I-api_mention	39692	39693	<
I-api_mention	39693	39694	T
I-api_mention	39694	39695	>
O	39696	39701	would
O	39702	39708	rather
O	39709	39713	have
O	39714	39719	their
O	39720	39726	stream
O	39727	39733	method
O	39734	39740	return
O	39741	39743	an
B-api_mention	39744	39753	IntStream
O	39754	39755	,
O	39756	39759	for
O	39760	39767	example
O	39767	39768	.

O	39769	39772	But
O	39773	39780	putting
O	39781	39784	the
B-api_mention	39785	39791	stream
I-api_mention	39791	39792	(
I-api_mention	39792	39796	args
I-api_mention	39796	39797	)
O	39798	39804	method
O	39805	39809	this
O	39810	39814	high
O	39815	39817	up
O	39818	39820	in
O	39821	39824	the
O	39825	39834	hierarchy
O	39835	39840	would
O	39841	39845	make
O	39846	39850	that
O	39851	39861	impossible
O	39861	39862	.

O	39863	39865	So
O	39866	39873	instead
O	39873	39874	,
O	39875	39877	we
O	39878	39882	made
O	39883	39885	it
O	39886	39892	really
O	39893	39897	easy
O	39898	39900	to
O	39901	39905	make
O	39906	39907	a
B-api_mention	39908	39914	Stream
O	39915	39919	from
O	39920	39922	an
B-api_mention	39923	39931	Iterable
O	39932	39933	,
O	39934	39936	by
O	39937	39946	providing
O	39947	39948	a
B-api_mention	39949	39960	spliterator
I-api_mention	39960	39961	(
I-api_mention	39961	39965	args
I-api_mention	39965	39966	)
O	39967	39973	method
O	39973	39974	.

O	39975	39978	The
O	39979	39993	implementation
O	39994	39996	of
B-api_mention	39997	40003	stream
I-api_mention	40003	40004	(
I-api_mention	40004	40008	args
I-api_mention	40008	40009	)
O	40010	40012	in
B-api_mention	40013	40023	Collection
O	40024	40026	is
O	40027	40031	just
O	40031	40032	:
O	40033	40034	#
O	40034	40037	pre
O	40038	40041	Any
O	40042	40048	client
O	40049	40052	can
O	40053	40056	get
O	40057	40060	the
O	40061	40067	stream
O	40068	40072	they
O	40073	40077	want
O	40078	40082	from
O	40083	40085	an
O	40086	40094	Iterable
O	40095	40099	with
O	40099	40100	:
B-api_mention	40101	40107	Stream
O	40108	40109	s
O	40110	40111	=
B-api_mention	40112	40125	StreamSupport
I-api_mention	40125	40126	.
I-api_mention	40126	40132	stream
I-api_mention	40132	40133	(
I-api_mention	40133	40137	args
I-api_mention	40137	40138	)
O	40138	40139	;
O	40140	40142	In
O	40143	40146	the
O	40147	40150	end
O	40151	40153	we
O	40154	40163	concluded
O	40164	40168	that
O	40169	40175	adding
B-api_mention	40176	40182	stream
I-api_mention	40182	40183	(
I-api_mention	40183	40187	args
I-api_mention	40187	40188	)
O	40189	40191	to
O	40192	40200	Iterable
O	40201	40206	would
O	40207	40209	be
O	40210	40211	a
O	40212	40219	mistake
O	40219	40220	.

O	40222	40230	Question
O	40230	40231	-
O	40231	40239	23114015
O	40239	40240	,
O	40241	40247	answer
O	40247	40248	-
O	40248	40256	32874755

O	40257	40259	If
O	40260	40263	you
O	40264	40268	know
O	40269	40272	the
O	40273	40277	size
O	40278	40281	you
O	40282	40287	could
O	40288	40291	use
B-api_mention	40292	40296	java
I-api_mention	40296	40297	.
I-api_mention	40297	40301	util
I-api_mention	40301	40302	.
I-api_mention	40302	40312	Collection
O	40313	40318	which
O	40319	40327	provides
O	40328	40331	the
B-api_mention	40332	40338	stream
I-api_mention	40338	40339	(
I-api_mention	40339	40343	args
I-api_mention	40343	40344	)
O	40345	40351	method
O	40351	40352	:
O	40353	40354	#
O	40354	40357	pre
O	40358	40361	And
O	40362	40366	then
O	40366	40367	:
O	40368	40371	new
B-api_mention	40372	40376	Hand
I-api_mention	40376	40377	(
I-api_mention	40377	40381	args
I-api_mention	40381	40382	)
I-api_mention	40382	40383	.
I-api_mention	40383	40389	stream
I-api_mention	40389	40390	(
I-api_mention	40390	40394	args
I-api_mention	40394	40395	)
I-api_mention	40395	40396	.
I-api_mention	40396	40399	map
I-api_mention	40399	40400	(
I-api_mention	40400	40404	args
I-api_mention	40404	40405	)
O	40406	40407	I
O	40408	40413	faced
O	40414	40417	the
O	40418	40422	same
O	40423	40430	problem
O	40431	40434	and
O	40435	40438	was
O	40439	40448	surprised
O	40449	40453	that
O	40454	40456	my
B-api_mention	40457	40465	Iterable
O	40466	40480	implementation
O	40481	40486	could
O	40487	40489	be
O	40490	40494	very
O	40495	40501	easily
O	40502	40510	extended
O	40511	40513	to
O	40514	40516	an
B-api_mention	40517	40535	AbstractCollection
O	40536	40550	implementation
O	40551	40553	by
O	40554	40560	simply
O	40561	40567	adding
O	40568	40571	the
B-api_mention	40572	40576	size
I-api_mention	40576	40577	(
I-api_mention	40577	40581	args
I-api_mention	40581	40582	)
O	40583	40589	method
O	40590	40591	(
O	40591	40598	luckily
O	40599	40600	I
O	40601	40604	had
O	40605	40608	the
O	40609	40613	size
O	40614	40616	of
O	40617	40620	the
O	40621	40631	collection
O	40632	40633	:
O	40633	40634	-
O	40634	40635	)
O	40636	40639	You
O	40640	40646	should
O	40647	40651	also
O	40652	40660	consider
O	40661	40663	to
O	40664	40672	override
B-api_mention	40673	40684	Spliterator
I-api_mention	40684	40685	<
I-api_mention	40685	40686	T
I-api_mention	40686	40687	>
I-api_mention	40688	40699	spliterator
I-api_mention	40699	40700	(
I-api_mention	40700	40704	args
I-api_mention	40704	40705	)
O	40706	40707	.

O	40709	40717	Question
O	40717	40718	-
O	40718	40726	21524642
O	40726	40727	,
O	40728	40734	answer
O	40734	40735	-
O	40735	40743	21524694

O	40744	40746	Or
O	40746	40747	.
O	40747	40748	.

B-api_mention	40749	40756	Pattern
I-api_mention	40756	40757	#
I-api_mention	40757	40762	quote
O	40763	40764	:
B-api_mention	40765	40771	String
O	40771	40772	[
O	40772	40773	]
O	40774	40779	value
O	40779	40780	_
O	40780	40785	split
O	40786	40787	=
O	40788	40791	rat
O	40791	40792	_
O	40792	40798	values
B-api_mention	40798	40799	.
I-api_mention	40799	40804	split
I-api_mention	40804	40805	(
I-api_mention	40805	40809	args
I-api_mention	40809	40810	)
O	40810	40811	;
O	40812	40816	This
O	40817	40819	is
O	40820	40829	happening
O	40830	40837	because
B-api_mention	40838	40844	String
I-api_mention	40844	40845	#
I-api_mention	40845	40850	split
O	40851	40858	accepts
O	40859	40860	a
O	40861	40866	regex
O	40867	40868	:
O	40869	40870	|
O	40871	40874	has
O	40875	40876	a
O	40877	40884	special
O	40885	40892	meaning
O	40893	40895	in
O	40896	40901	regex
O	40902	40903	.
B-api_mention	40904	40909	quote
O	40910	40914	will
O	40915	40921	return
O	40922	40923	a
B-api_mention	40924	40930	String
O	40931	40945	representation
O	40946	40949	for
O	40950	40953	the
O	40954	40959	regex
O	40960	40961	.

O	40963	40971	Question
O	40971	40972	-
O	40972	40980	22463062
O	40980	40981	,
O	40982	40988	answer
O	40988	40989	-
O	40989	40997	22463063

O	40998	41005	Parsing
O	41006	41010	date
O	41011	41014	and
O	41015	41019	time
O	41020	41022	To
O	41023	41029	create
O	41030	41031	a
B-api_mention	41032	41045	LocalDateTime
O	41046	41052	object
O	41053	41057	from
O	41058	41059	a
O	41060	41066	string
O	41067	41070	you
O	41071	41074	can
O	41075	41078	use
O	41079	41082	the
O	41083	41089	static
B-api_mention	41090	41103	LocalDateTime
I-api_mention	41103	41104	.
I-api_mention	41104	41109	parse
I-api_mention	41109	41110	(
I-api_mention	41110	41111	)
O	41112	41118	method
O	41118	41119	.

O	41120	41122	It
O	41123	41128	takes
O	41129	41130	a
O	41131	41137	string
O	41138	41141	and
O	41142	41143	a
B-api_mention	41144	41161	DateTimeFormatter
O	41162	41164	as
O	41165	41174	parameter
O	41174	41175	.

O	41176	41179	The
B-api_mention	41180	41197	DateTimeFormatter
O	41198	41200	is
O	41201	41205	used
O	41206	41208	to
O	41209	41216	specify
O	41217	41220	the
O	41221	41225	date
O	41225	41226	/
O	41226	41230	time
O	41231	41238	pattern
O	41238	41239	.

O	41240	41241	#
O	41241	41244	pre
O	41245	41255	Formatting
O	41256	41260	date
O	41261	41264	and
O	41265	41269	time
O	41270	41272	To
O	41273	41279	create
O	41280	41281	a
O	41282	41291	formatted
O	41292	41298	string
O	41299	41302	out
O	41303	41304	a
B-api_mention	41305	41318	LocalDateTime
O	41319	41325	object
O	41326	41329	you
O	41330	41333	can
O	41334	41337	use
O	41338	41341	the
B-api_mention	41342	41348	format
I-api_mention	41348	41349	(
I-api_mention	41349	41353	args
I-api_mention	41353	41354	)
O	41355	41361	method
O	41361	41362	.

O	41363	41364	#
O	41364	41367	pre
O	41368	41372	Note
O	41373	41377	that
O	41378	41383	there
O	41384	41387	are
O	41388	41392	some
O	41393	41401	commonly
O	41402	41406	used
O	41407	41411	date
O	41411	41412	/
O	41412	41416	time
O	41417	41424	formats
O	41425	41435	predefined
O	41436	41438	as
O	41439	41448	constants
O	41449	41451	in
B-api_mention	41452	41469	DateTimeFormatter
O	41470	41471	.

O	41472	41475	For
O	41476	41483	example
O	41483	41484	:
O	41485	41490	Using
B-api_mention	41491	41508	DateTimeFormatter
I-api_mention	41508	41509	.
I-api_mention	41509	41512	ISO
I-api_mention	41512	41513	_
I-api_mention	41513	41517	DATE
I-api_mention	41517	41518	_
I-api_mention	41518	41522	TIME
O	41523	41525	to
O	41526	41532	format
O	41533	41536	the
B-api_mention	41537	41550	LocalDateTime
O	41551	41559	instance
O	41560	41564	from
O	41565	41570	above
O	41571	41576	would
O	41577	41583	result
O	41584	41586	in
O	41587	41590	the
O	41591	41597	string
B-api_mention	41598	41611	StringLiteral
O	41612	41613	.

O	41614	41617	The
B-api_mention	41618	41623	parse
I-api_mention	41623	41624	(
I-api_mention	41624	41628	args
I-api_mention	41628	41629	)
O	41630	41633	and
B-api_mention	41634	41640	format
I-api_mention	41640	41641	(
I-api_mention	41641	41645	args
I-api_mention	41645	41646	)
O	41647	41654	methods
O	41655	41658	are
O	41659	41668	available
O	41669	41672	for
O	41673	41676	all
O	41677	41681	date
O	41681	41682	/
O	41682	41686	time
O	41687	41694	related
O	41695	41702	objects
O	41703	41704	(
O	41704	41705	e
O	41705	41706	.
O	41706	41707	g
O	41707	41708	.
B-api_mention	41709	41718	LocalDate
O	41719	41721	or
B-api_mention	41722	41735	ZonedDateTime
O	41736	41737	)

O	41739	41747	Question
O	41747	41748	-
O	41748	41756	22463062
O	41756	41757	,
O	41758	41764	answer
O	41764	41765	-
O	41765	41773	28324294

O	41774	41777	You
O	41778	41781	can
O	41782	41786	also
O	41787	41790	use
B-api_mention	41791	41800	LocalDate
I-api_mention	41800	41801	.
I-api_mention	41801	41806	parse
I-api_mention	41806	41807	(
I-api_mention	41807	41811	args
I-api_mention	41811	41812	)
O	41813	41815	or
B-api_mention	41816	41829	LocalDateTime
I-api_mention	41829	41830	.
I-api_mention	41830	41835	parse
I-api_mention	41835	41836	(
I-api_mention	41836	41840	args
I-api_mention	41840	41841	)
O	41842	41844	on
O	41845	41846	a
B-api_mention	41847	41853	String
O	41854	41861	without
O	41862	41871	providing
O	41872	41874	it
O	41875	41879	with
O	41880	41881	a
O	41882	41889	pattern
O	41889	41890	,
O	41891	41893	if
O	41894	41897	the
B-api_mention	41898	41904	String
O	41905	41907	is
O	41908	41910	in
O	41911	41914	ISO
O	41914	41915	-
O	41915	41919	8601
O	41920	41926	format
O	41927	41928	.
O	41929	41932	for
O	41933	41940	example
O	41940	41941	,
O	41942	41943	#
O	41943	41946	pre
O	41947	41953	Output
O	41954	41955	,
O	41956	41957	#
O	41957	41960	pre
O	41961	41964	and
O	41965	41968	use
B-api_mention	41969	41986	DateTimeFormatter
O	41987	41991	only
O	41992	41994	if
O	41995	41998	you
O	41999	42003	have
O	42004	42006	to
O	42007	42011	deal
O	42012	42016	with
O	42017	42022	other
O	42023	42027	date
O	42028	42036	patterns
O	42036	42037	,
O	42038	42041	For
O	42042	42049	example
O	42049	42050	,
O	42051	42053	dd
O	42054	42057	MMM
O	42058	42062	uuuu
O	42063	42073	represents
O	42074	42077	the
O	42078	42081	day
O	42082	42084	of
O	42085	42088	the
O	42089	42094	month
O	42095	42096	(
O	42096	42099	two
O	42100	42106	digits
O	42106	42107	)
O	42107	42108	,
O	42109	42114	three
O	42115	42122	letters
O	42123	42125	of
O	42126	42129	the
O	42130	42134	name
O	42135	42137	of
O	42138	42141	the
O	42142	42147	month
O	42148	42149	(
O	42149	42152	Jan
O	42152	42153	,
O	42154	42157	Feb
O	42157	42158	,
O	42159	42162	Mar
O	42162	42163	,
O	42163	42164	.
O	42164	42165	.
O	42165	42166	.
O	42166	42167	)
O	42167	42168	,
O	42169	42172	and
O	42173	42174	a
O	42175	42179	four
O	42179	42180	-
O	42180	42185	digit
O	42186	42190	year
O	42190	42191	:
O	42192	42193	#
O	42193	42196	pre
O	42197	42203	Output
O	42204	42206	04
O	42207	42210	Aug
O	42211	42215	2015
O	42216	42222	parses
O	42223	42225	to
O	42226	42230	2015
O	42230	42231	-
O	42231	42233	08
O	42233	42234	-
O	42234	42236	04
O	42237	42241	also
O	42242	42250	remember
O	42251	42255	that
O	42256	42259	the
B-api_mention	42260	42277	DateTimeFormatter
O	42278	42284	object
O	42285	42287	is
O	42288	42301	bidirectional
O	42301	42302	;
O	42303	42305	it
O	42306	42309	can
O	42310	42314	both
O	42315	42320	parse
O	42321	42326	input
O	42327	42330	and
O	42331	42337	format
O	42338	42344	output
O	42344	42345	.

O	42346	42347	#
O	42347	42350	pre
O	42351	42357	Output
O	42358	42362	2015
O	42362	42363	-
O	42363	42365	08
O	42365	42366	-
O	42366	42368	04
O	42369	42376	formats
O	42377	42379	as
O	42380	42382	04
O	42383	42386	Aug
O	42387	42391	2015
O	42392	42393	(
O	42393	42396	see
O	42397	42405	complete
O	42406	42410	list
O	42411	42413	of
O	42414	42422	Patterns
O	42423	42426	for
O	42427	42437	Formatting
O	42438	42441	and
O	42442	42449	Parsing
B-api_mention	42450	42463	DateFormatter
O	42464	42465	)
O	42466	42467	#
O	42467	42470	pre

O	42472	42480	Question
O	42480	42481	-
O	42481	42489	21488056
O	42489	42490	,
O	42491	42497	answer
O	42497	42498	-
O	42498	42506	30506585

B-api_mention	42507	42516	Predicate
O	42517	42520	has
O	42521	42528	methods
O	42529	42532	and
O	42533	42534	,
O	42535	42537	or
O	42538	42541	and
O	42542	42548	negate
O	42549	42550	.

O	42551	42558	However
O	42558	42559	,
B-api_mention	42560	42566	String
I-api_mention	42566	42567	:
I-api_mention	42567	42568	:
I-api_mention	42568	42575	isEmpty
O	42576	42578	is
O	42579	42582	not
O	42583	42584	a
B-api_mention	42585	42594	Predicate
O	42595	42596	.

O	42597	42599	It
O	42600	42605	could
O	42606	42608	as
O	42609	42613	well
O	42614	42616	be
B-api_mention	42617	42625	Function
I-api_mention	42625	42626	<
I-api_mention	42626	42627	T
I-api_mention	42627	42628	>
O	42629	42631	or
B-api_mention	42632	42650	MyProprietaryClass
O	42651	42652	.

O	42653	42656	The
O	42657	42661	type
O	42662	42673	information
O	42674	42676	is
O	42677	42685	inferred
O	42686	42690	from
O	42691	42694	the
O	42695	42703	variable
O	42704	42706	or
O	42707	42710	the
O	42711	42715	call
O	42715	42716	.

O	42717	42719	So
O	42719	42720	,
O	42721	42724	you
O	42725	42729	need
O	42730	42732	to
O	42733	42737	cast
O	42738	42739	a
O	42740	42746	method
O	42747	42756	reference
O	42757	42767	explicitly
O	42768	42769	(
O	42769	42771	as
O	42772	42773	@
O	42773	42779	axtavt
O	42780	42789	mentioned
O	42789	42790	)
O	42790	42791	:
O	42792	42793	(
O	42793	42794	(
B-api_mention	42794	42803	Predicate
I-api_mention	42803	42804	<
I-api_mention	42804	42805	T
I-api_mention	42805	42806	>
O	42806	42807	)
B-api_mention	42808	42814	String
I-api_mention	42814	42815	:
I-api_mention	42815	42816	:
I-api_mention	42816	42823	isEmpty
O	42823	42824	)
B-api_mention	42824	42825	.
I-api_mention	42825	42831	negate
I-api_mention	42831	42832	(
I-api_mention	42832	42836	args
I-api_mention	42836	42837	)
O	42838	42841	But
O	42842	42844	it
O	42844	42845	'
O	42845	42846	s
O	42847	42857	absolutely
O	42858	42862	ugly
O	42863	42866	and
B-api_mention	42867	42876	Predicate
O	42877	42882	seems
O	42883	42885	to
O	42886	42889	use
O	42890	42897	lambdas
O	42898	42903	under
O	42904	42907	the
O	42908	42912	hood
O	42913	42919	anyway
O	42919	42920	.

O	42921	42923	So
O	42924	42925	I
O	42926	42931	think
O	42932	42935	you
O	42936	42939	are
O	42940	42946	better
O	42947	42950	off
O	42951	42958	writing
O	42959	42960	a
O	42961	42967	lambda
O	42968	42970	or
O	42971	42975	even
O	42976	42980	your
O	42981	42984	own
B-api_mention	42985	42988	not
I-api_mention	42988	42989	(
I-api_mention	42989	42993	args
I-api_mention	42993	42994	)
O	42995	43001	method
O	43002	43003	(
O	43003	43004	e
O	43004	43005	.
O	43005	43006	g
O	43006	43007	.
O	43008	43010	in
O	43011	43018	utility
O	43018	43019	,
O	43020	43026	static
O	43027	43033	import
O	43033	43034	)
O	43034	43035	.

O	43037	43045	Question
O	43045	43046	-
O	43046	43054	21488056
O	43054	43055	,
O	43056	43062	answer
O	43062	43063	-
O	43063	43071	35074360

O	43072	43073	I
O	43074	43078	have
O	43079	43086	written
O	43087	43088	a
O	43089	43097	complete
O	43098	43105	utility
O	43106	43111	class
O	43112	43113	(
O	43113	43121	inspired
O	43122	43124	by
O	43125	43130	Askar
O	43130	43131	'
O	43131	43132	s
O	43133	43141	proposal
O	43141	43142	)
O	43143	43147	that
O	43148	43151	can
O	43152	43156	take
O	43157	43161	Java
O	43162	43163	8
O	43164	43170	lambda
O	43171	43181	expression
O	43182	43185	and
O	43186	43190	turn
O	43191	43195	them
O	43196	43197	(
O	43197	43199	if
O	43200	43210	applicable
O	43210	43211	)
O	43212	43216	into
O	43217	43220	any
O	43221	43226	typed
O	43227	43235	standard
O	43236	43240	Java
O	43241	43242	8
O	43243	43249	lambda
O	43250	43257	defined
O	43258	43260	in
O	43261	43264	the
O	43265	43272	package
B-api_mention	43273	43277	java
I-api_mention	43277	43278	.
I-api_mention	43278	43282	util
I-api_mention	43282	43283	.
I-api_mention	43283	43291	function
O	43292	43293	.

O	43294	43297	You
O	43298	43301	can
O	43302	43305	for
O	43306	43313	example
O	43314	43316	do
O	43316	43317	:
O	43318	43319	#
O	43319	43321	li
B-api_mention	43322	43333	asPredicate
I-api_mention	43333	43334	(
I-api_mention	43334	43338	args
I-api_mention	43338	43339	)
I-api_mention	43339	43340	.
I-api_mention	43340	43346	negate
I-api_mention	43346	43347	(
I-api_mention	43347	43351	args
I-api_mention	43351	43352	)
O	43353	43354	#
O	43354	43356	li
B-api_mention	43357	43370	asBiPredicate
I-api_mention	43370	43371	(
I-api_mention	43371	43375	args
I-api_mention	43375	43376	)
I-api_mention	43376	43377	.
I-api_mention	43377	43383	negate
I-api_mention	43383	43384	(
I-api_mention	43384	43388	args
I-api_mention	43388	43389	)
O	43390	43397	Because
O	43398	43403	there
O	43404	43409	would
O	43410	43412	be
O	43413	43421	numerous
O	43422	43433	ambiguities
O	43434	43436	if
O	43437	43440	all
O	43441	43444	the
O	43445	43451	static
O	43452	43459	methods
O	43460	43465	would
O	43466	43468	be
O	43469	43474	named
O	43475	43479	just
B-api_mention	43480	43482	as
I-api_mention	43482	43483	(
I-api_mention	43483	43487	args
I-api_mention	43487	43488	)
O	43489	43490	,
O	43491	43492	I
O	43493	43498	opted
O	43499	43501	to
O	43502	43506	call
O	43507	43510	the
O	43511	43517	method
O	43518	43519	"
O	43519	43521	as
O	43521	43522	"
O	43523	43531	followed
O	43532	43534	by
O	43535	43538	the
O	43539	43547	returned
O	43548	43552	type
O	43552	43553	.

O	43554	43558	This
O	43559	43564	gives
O	43565	43567	us
O	43568	43572	full
O	43573	43580	control
O	43581	43583	of
O	43584	43587	the
O	43588	43594	lambda
O	43595	43609	interpretation
O	43609	43610	.

O	43611	43616	Below
O	43617	43619	is
O	43620	43623	the
O	43624	43629	first
O	43630	43634	part
O	43635	43637	of
O	43638	43641	the
O	43642	43643	(
O	43643	43651	somewhat
O	43652	43657	large
O	43657	43658	)
O	43659	43666	utility
O	43667	43672	class
O	43673	43682	revealing
O	43683	43686	the
O	43687	43694	pattern
O	43695	43699	used
O	43699	43700	.

O	43701	43705	Have
O	43706	43707	a
O	43708	43712	look
O	43713	43715	at
O	43716	43719	the
O	43720	43728	complete
O	43729	43734	class
O	43735	43739	here
O	43740	43741	(
O	43741	43743	at
O	43744	43748	gist
O	43748	43749	)
O	43749	43750	.

O	43751	43752	#
O	43752	43755	pre

O	43757	43765	Question
O	43765	43766	-
O	43766	43774	21488056
O	43774	43775	,
O	43776	43782	answer
O	43782	43783	-
O	43783	43791	36242382

O	43792	43795	You
O	43796	43799	can
O	43800	43803	use
O	43804	43814	Predicates
O	43815	43819	from
O	43820	43827	Eclipse
O	43828	43839	Collections
O	43840	43841	#
O	43841	43844	pre
O	43845	43847	If
O	43848	43851	you
O	43852	43855	can
O	43855	43856	'
O	43856	43857	t
O	43858	43864	change
O	43865	43868	the
O	43869	43876	strings
O	43877	43881	from
B-api_mention	43882	43886	List
O	43887	43888	:
O	43889	43890	#
O	43890	43893	pre
O	43894	43896	If
O	43897	43900	you
O	43901	43905	only
O	43906	43910	need
O	43911	43912	a
O	43913	43921	negation
O	43922	43924	of
B-api_mention	43925	43931	String
I-api_mention	43931	43932	.
I-api_mention	43932	43939	isEmpty
I-api_mention	43939	43940	(
I-api_mention	43940	43944	args
I-api_mention	43944	43945	)
O	43946	43949	you
O	43950	43953	can
O	43954	43958	also
O	43959	43962	use
B-api_mention	43963	43979	StringPredicates
I-api_mention	43979	43980	.
I-api_mention	43980	43988	notEmpty
I-api_mention	43988	43989	(
I-api_mention	43989	43993	args
I-api_mention	43993	43994	)
O	43995	43996	.

O	43997	44001	Note
O	44001	44002	:
O	44003	44004	I
O	44005	44007	am
O	44008	44009	a
O	44010	44021	contributor
O	44022	44024	to
O	44025	44032	Eclipse
O	44033	44044	Collections
O	44044	44045	.

O	44047	44055	Question
O	44055	44056	-
O	44056	44064	23699371
O	44064	44065	,
O	44066	44072	answer
O	44072	44073	-
O	44073	44081	23733628

O	44082	44085	The
O	44086	44093	easiest
O	44094	44097	way
O	44098	44100	to
O	44101	44110	implement
O	44111	44115	this
O	44116	44118	is
O	44119	44121	to
O	44122	44126	jump
O	44127	44129	on
O	44130	44133	the
O	44134	44138	sort
O	44139	44146	feature
O	44147	44149	as
O	44150	44152	it
O	44153	44160	already
O	44161	44169	provides
O	44170	44172	an
O	44173	44181	optional
B-api_mention	44182	44192	Comparator
O	44193	44198	which
O	44199	44202	can
O	44203	44205	be
O	44206	44213	created
O	44214	44219	using
O	44220	44222	an
O	44223	44230	element
O	44230	44231	’
O	44231	44232	s
O	44233	44241	property
O	44241	44242	.

O	44243	44247	Then
O	44248	44251	you
O	44252	44256	have
O	44257	44259	to
O	44260	44266	filter
O	44267	44277	duplicates
O	44278	44281	out
O	44282	44287	which
O	44288	44291	can
O	44292	44294	be
O	44295	44299	done
O	44300	44305	using
O	44306	44307	a
O	44308	44317	statefull
B-api_mention	44318	44327	Predicate
O	44328	44333	which
O	44334	44338	uses
O	44339	44342	the
O	44343	44347	fact
O	44348	44352	that
O	44353	44356	for
O	44357	44358	a
O	44359	44365	sorted
O	44366	44372	stream
O	44373	44376	all
O	44377	44382	equal
O	44383	44391	elements
O	44392	44395	are
O	44396	44404	adjacent
O	44404	44405	:
O	44406	44407	#
O	44407	44410	pre
O	44411	44413	Of
O	44414	44420	course
O	44420	44421	,
O	44422	44423	a
O	44424	44433	statefull
B-api_mention	44434	44443	Predicate
O	44444	44446	is
O	44447	44450	not
O	44451	44457	thread
O	44457	44458	-
O	44458	44462	safe
O	44462	44463	,
O	44464	44471	however
O	44472	44474	if
O	44475	44479	that
O	44479	44480	’
O	44480	44481	s
O	44482	44486	your
O	44487	44491	need
O	44492	44495	you
O	44496	44499	can
O	44500	44504	move
O	44505	44509	this
O	44510	44515	logic
O	44516	44520	into
O	44521	44522	a
B-api_mention	44523	44532	Collector
O	44533	44536	and
O	44537	44540	let
O	44541	44544	the
O	44545	44551	stream
O	44552	44556	take
O	44557	44561	care
O	44562	44564	of
O	44565	44568	the
O	44569	44575	thread
O	44575	44576	-
O	44576	44582	safety
O	44583	44587	when
O	44588	44593	using
O	44594	44598	your
B-api_mention	44599	44608	Collector
O	44609	44610	.

O	44611	44615	This
O	44616	44623	depends
O	44624	44626	on
O	44627	44631	what
O	44632	44635	you
O	44636	44640	want
O	44641	44643	to
O	44644	44646	do
O	44647	44651	with
O	44652	44655	the
O	44656	44662	stream
O	44663	44665	of
O	44666	44674	distinct
O	44675	44683	elements
O	44684	44689	which
O	44690	44693	you
O	44694	44698	didn
O	44698	44699	’
O	44699	44700	t
O	44701	44705	tell
O	44706	44708	us
O	44709	44711	in
O	44712	44716	your
O	44717	44725	question
O	44725	44726	.

O	44728	44736	Question
O	44736	44737	-
O	44737	44745	23699371
O	44745	44746	,
O	44747	44753	answer
O	44753	44754	-
O	44754	44762	34731808

O	44763	44766	You
O	44767	44770	can
O	44771	44774	use
O	44775	44778	the
B-api_mention	44779	44787	distinct
I-api_mention	44787	44788	(
I-api_mention	44788	44792	args
I-api_mention	44792	44793	)
O	44794	44800	method
O	44801	44803	in
O	44804	44811	Eclipse
O	44812	44823	Collections
O	44824	44825	.

O	44826	44827	#
O	44827	44830	pre
O	44831	44833	If
O	44834	44837	you
O	44838	44841	can
O	44842	44850	refactor
O	44851	44858	persons
O	44859	44861	to
O	44862	44871	implement
O	44872	44874	an
O	44875	44882	Eclipse
O	44883	44894	Collections
O	44895	44904	interface
O	44904	44905	,
O	44906	44909	you
O	44910	44913	can
O	44914	44918	call
O	44919	44922	the
O	44923	44929	method
O	44930	44938	directly
O	44939	44941	on
O	44942	44945	the
O	44946	44950	list
O	44950	44951	.

O	44952	44953	#
O	44953	44956	pre
O	44957	44972	HashingStrategy
O	44973	44975	is
O	44976	44982	simply
O	44983	44984	a
O	44985	44993	strategy
O	44994	45003	interface
O	45004	45008	that
O	45009	45015	allows
O	45016	45019	you
O	45020	45022	to
O	45023	45029	define
O	45030	45036	custom
O	45037	45052	implementations
O	45053	45055	of
O	45056	45062	equals
O	45063	45066	and
O	45067	45075	hashcode
O	45075	45076	.

O	45077	45078	#
O	45078	45081	pre
O	45082	45086	Note
O	45086	45087	:
O	45088	45089	I
O	45090	45092	am
O	45093	45094	a
O	45095	45104	committer
O	45105	45108	for
O	45109	45116	Eclipse
O	45117	45128	Collections
O	45128	45129	.

O	45131	45139	Question
O	45139	45140	-
O	45140	45148	22725537
O	45148	45149	,
O	45150	45156	answer
O	45156	45157	-
O	45157	45165	22735184

O	45166	45169	You
O	45170	45176	cannot
O	45177	45179	do
O	45180	45182	it
O	45183	45187	more
O	45188	45195	concise
O	45196	45198	as
O	45199	45202	you
O	45203	45206	are
O	45207	45214	already
O	45215	45220	doing
O	45220	45221	.

O	45222	45225	You
O	45226	45231	claim
O	45232	45236	that
O	45237	45240	you
O	45241	45243	do
O	45244	45247	not
O	45248	45252	want
B-api_mention	45253	45254	.
I-api_mention	45254	45260	filter
I-api_mention	45260	45261	(
I-api_mention	45261	45265	args
I-api_mention	45265	45266	)
O	45267	45270	and
B-api_mention	45271	45272	.
I-api_mention	45272	45275	map
I-api_mention	45275	45276	(
I-api_mention	45276	45280	args
I-api_mention	45280	45281	)
O	45282	45283	.

O	45284	45288	This
O	45289	45292	has
O	45293	45297	been
O	45298	45306	resolved
O	45307	45309	by
O	45310	45313	the
O	45314	45320	method
O	45321	45322	@
O	45322	45333	StuartMarks
O	45334	45343	describes
O	45343	45344	,
O	45345	45352	however
O	45353	45355	as
O	45356	45357	a
O	45358	45364	result
O	45365	45368	you
O	45369	45372	now
O	45373	45376	map
O	45377	45379	it
O	45380	45382	to
O	45383	45385	an
B-api_mention	45386	45394	Optional
I-api_mention	45394	45395	<
I-api_mention	45395	45396	T
I-api_mention	45396	45397	>
O	45398	45399	,
O	45400	45402	so
O	45403	45406	now
O	45407	45410	you
O	45411	45415	need
O	45416	45418	to
O	45419	45422	use
B-api_mention	45423	45424	.
I-api_mention	45424	45431	flatMap
I-api_mention	45431	45432	(
I-api_mention	45432	45436	args
I-api_mention	45436	45437	)
O	45438	45441	and
O	45442	45443	a
B-api_mention	45444	45447	get
I-api_mention	45447	45448	(
I-api_mention	45448	45452	args
I-api_mention	45452	45453	)
O	45454	45456	in
O	45457	45460	the
O	45461	45464	end
O	45464	45465	.

O	45466	45468	So
O	45469	45471	it
O	45472	45477	still
O	45478	45486	consists
O	45487	45489	of
O	45490	45493	two
O	45494	45504	statements
O	45505	45508	and
O	45509	45512	you
O	45513	45516	can
O	45517	45520	now
O	45521	45524	get
O	45525	45535	exceptions
O	45536	45540	with
O	45541	45544	the
O	45545	45548	new
O	45549	45555	method
O	45555	45556	!

O	45557	45564	Because
O	45564	45565	,
O	45566	45570	what
O	45571	45573	if
O	45574	45579	every
O	45580	45588	optional
O	45589	45591	is
O	45592	45597	empty
O	45597	45598	?

O	45599	45603	Then
O	45604	45607	the
B-api_mention	45608	45617	findFirst
I-api_mention	45617	45618	(
I-api_mention	45618	45622	args
I-api_mention	45622	45623	)
O	45624	45628	will
O	45629	45635	return
O	45636	45638	an
O	45639	45644	empty
O	45645	45653	optional
O	45654	45657	and
O	45658	45662	your
B-api_mention	45663	45666	get
I-api_mention	45666	45667	(
I-api_mention	45667	45671	args
I-api_mention	45671	45672	)
O	45673	45677	will
O	45678	45682	fail
O	45682	45683	!

O	45684	45686	So
O	45687	45691	what
O	45692	45695	you
O	45696	45700	have
O	45700	45701	:
B-api_mention	45702	45708	things
I-api_mention	45708	45709	.
I-api_mention	45709	45715	stream
I-api_mention	45715	45716	(
I-api_mention	45716	45720	args
I-api_mention	45720	45721	)
I-api_mention	45722	45723	.
I-api_mention	45723	45726	map
I-api_mention	45726	45727	(
I-api_mention	45727	45731	args
I-api_mention	45731	45732	)
I-api_mention	45733	45734	.
I-api_mention	45734	45740	filter
I-api_mention	45740	45741	(
I-api_mention	45741	45745	args
I-api_mention	45745	45746	)
I-api_mention	45747	45748	.
I-api_mention	45748	45751	map
I-api_mention	45751	45752	(
I-api_mention	45752	45756	args
I-api_mention	45756	45757	)
I-api_mention	45758	45759	.
I-api_mention	45759	45768	findFirst
I-api_mention	45768	45769	(
I-api_mention	45769	45773	args
I-api_mention	45773	45774	)
O	45774	45775	;
O	45776	45778	is
O	45779	45787	actually
O	45788	45791	the
O	45792	45796	best
O	45797	45800	way
O	45801	45803	to
O	45804	45814	accomplish
O	45815	45819	what
O	45820	45823	you
O	45824	45828	want
O	45828	45829	,
O	45830	45833	and
O	45834	45838	that
O	45839	45841	is
O	45842	45845	you
O	45846	45850	want
O	45851	45853	to
O	45854	45858	save
O	45859	45862	the
O	45863	45869	result
O	45870	45872	as
O	45873	45874	a
B-api_mention	45875	45876	T
O	45877	45878	,
O	45879	45882	not
O	45883	45885	as
O	45886	45888	an
B-api_mention	45889	45897	Optional
I-api_mention	45897	45898	<
I-api_mention	45898	45899	T
I-api_mention	45899	45900	>
O	45901	45902	.

O	45903	45904	I
O	45905	45909	took
O	45910	45913	the
O	45914	45921	liberty
O	45922	45924	of
O	45925	45933	creating
O	45934	45935	a
B-api_mention	45936	45950	CustomOptional
I-api_mention	45950	45951	<
I-api_mention	45951	45952	T
I-api_mention	45952	45953	>
O	45954	45959	class
O	45960	45964	that
O	45965	45970	wraps
O	45971	45974	the
B-api_mention	45975	45983	Optional
I-api_mention	45983	45984	<
I-api_mention	45984	45985	T
I-api_mention	45985	45986	>
O	45987	45990	and
O	45991	45999	provides
O	46000	46002	an
O	46003	46008	extra
O	46009	46015	method
O	46015	46016	,
B-api_mention	46017	46027	flatStream
I-api_mention	46027	46028	(
I-api_mention	46028	46032	args
I-api_mention	46032	46033	)
O	46034	46035	.

O	46036	46040	Note
O	46041	46045	that
O	46046	46049	you
O	46050	46056	cannot
O	46057	46063	extend
B-api_mention	46064	46072	Optional
I-api_mention	46072	46073	<
I-api_mention	46073	46074	T
I-api_mention	46074	46075	>
O	46076	46077	:
O	46078	46079	#
O	46079	46082	pre
O	46083	46086	You
O	46087	46091	will
O	46092	46095	see
O	46096	46100	that
O	46101	46102	I
O	46103	46108	added
B-api_mention	46109	46119	flatStream
I-api_mention	46119	46120	(
I-api_mention	46120	46124	args
I-api_mention	46124	46125	)
O	46126	46127	,
O	46128	46130	as
O	46131	46135	here
O	46135	46136	:
O	46137	46138	#
O	46138	46141	pre
O	46142	46146	Used
O	46147	46149	as
O	46149	46150	:
B-api_mention	46151	46157	String
O	46158	46164	result
O	46165	46166	=
B-api_mention	46167	46173	Stream
I-api_mention	46173	46174	.
I-api_mention	46174	46176	of
I-api_mention	46176	46177	(
I-api_mention	46177	46181	args
I-api_mention	46181	46182	)
O	46183	46184	.
B-api_mention	46184	46187	map
I-api_mention	46187	46188	(
I-api_mention	46188	46192	args
I-api_mention	46192	46193	)
I-api_mention	46194	46195	.
I-api_mention	46195	46202	flatMap
I-api_mention	46202	46203	(
I-api_mention	46203	46207	args
I-api_mention	46207	46208	)
I-api_mention	46209	46210	.
I-api_mention	46210	46219	findFirst
I-api_mention	46219	46220	(
I-api_mention	46220	46224	args
I-api_mention	46224	46225	)
I-api_mention	46226	46227	.
I-api_mention	46227	46230	get
I-api_mention	46230	46231	(
I-api_mention	46231	46235	args
I-api_mention	46235	46236	)
O	46236	46237	;
O	46238	46241	You
O	46242	46247	still
O	46248	46252	will
O	46253	46257	need
O	46258	46260	to
O	46261	46267	return
O	46268	46269	a
B-api_mention	46270	46276	Stream
I-api_mention	46276	46277	<
I-api_mention	46277	46278	T
I-api_mention	46278	46279	>
O	46280	46284	here
O	46284	46285	,
O	46286	46288	as
O	46289	46292	you
O	46293	46299	cannot
O	46300	46306	return
B-api_mention	46307	46308	T
O	46309	46310	,
O	46311	46318	because
O	46319	46321	if
O	46322	46323	!
O	46323	46331	optional
B-api_mention	46331	46332	.
I-api_mention	46332	46341	isPresent
I-api_mention	46341	46342	(
I-api_mention	46342	46346	args
I-api_mention	46346	46347	)
O	46348	46349	,
O	46350	46354	then
O	46355	46356	T
O	46357	46358	=
O	46358	46359	=
O	46360	46364	null
O	46365	46367	if
O	46368	46371	you
O	46372	46379	declare
O	46380	46382	it
O	46383	46387	such
O	46387	46388	,
O	46389	46392	but
O	46393	46397	then
O	46398	46402	your
B-api_mention	46403	46404	.
I-api_mention	46404	46411	flatMap
I-api_mention	46411	46412	(
I-api_mention	46412	46416	args
I-api_mention	46416	46417	)
O	46418	46423	would
O	46424	46431	attempt
O	46432	46434	to
O	46435	46438	add
O	46439	46443	null
O	46444	46446	to
O	46447	46448	a
O	46449	46455	stream
O	46456	46459	and
O	46460	46464	that
O	46465	46467	is
O	46468	46471	not
O	46472	46480	possible
O	46480	46481	.

O	46482	46484	As
O	46485	46492	example
O	46492	46493	:
O	46494	46495	#
O	46495	46498	pre
O	46499	46503	Used
O	46504	46506	as
O	46506	46507	:
B-api_mention	46508	46514	String
O	46515	46521	result
O	46522	46523	=
B-api_mention	46524	46530	Stream
I-api_mention	46530	46531	.
I-api_mention	46531	46533	of
I-api_mention	46533	46534	(
I-api_mention	46534	46538	args
I-api_mention	46538	46539	)
I-api_mention	46540	46541	.
I-api_mention	46541	46544	map
I-api_mention	46544	46545	(
I-api_mention	46545	46549	args
I-api_mention	46549	46550	)
I-api_mention	46551	46552	.
I-api_mention	46552	46555	map
I-api_mention	46555	46556	(
I-api_mention	46556	46560	args
I-api_mention	46560	46561	)
I-api_mention	46562	46563	.
I-api_mention	46563	46572	findFirst
I-api_mention	46572	46573	(
I-api_mention	46573	46577	args
I-api_mention	46577	46578	)
I-api_mention	46579	46580	.
I-api_mention	46580	46583	get
I-api_mention	46583	46584	(
I-api_mention	46584	46588	args
I-api_mention	46588	46589	)
O	46589	46590	;
O	46591	46595	Will
O	46596	46599	now
O	46600	46605	throw
O	46606	46607	a
B-api_mention	46608	46628	NullPointerException
O	46629	46635	inside
O	46636	46639	the
O	46640	46646	stream
O	46647	46657	operations
O	46657	46658	.

O	46659	46669	Conclusion
O	46670	46673	The
O	46674	46680	method
O	46681	46684	you
O	46685	46689	used
O	46689	46690	,
O	46691	46693	is
O	46694	46702	actually
O	46703	46706	the
O	46707	46711	best
O	46712	46718	method
O	46718	46719	.

O	46721	46729	Question
O	46729	46730	-
O	46730	46738	22725537
O	46738	46739	,
O	46740	46746	answer
O	46746	46747	-
O	46747	46755	27215810

O	46756	46757	A
O	46758	46766	slightly
O	46767	46774	shorter
O	46775	46782	version
O	46783	46788	using
B-api_mention	46789	46795	reduce
O	46796	46797	:
O	46798	46804	things
B-api_mention	46804	46805	.
I-api_mention	46805	46811	stream
I-api_mention	46811	46812	(
I-api_mention	46812	46816	args
I-api_mention	46816	46817	)
I-api_mention	46818	46819	.
I-api_mention	46819	46822	map
I-api_mention	46822	46823	(
I-api_mention	46823	46827	args
I-api_mention	46827	46828	)
I-api_mention	46829	46830	.
I-api_mention	46830	46836	reduce
I-api_mention	46836	46837	(
I-api_mention	46837	46841	args
I-api_mention	46841	46842	)
I-api_mention	46842	46843	;
O	46844	46847	You
O	46848	46853	could
O	46854	46858	also
O	46859	46863	move
O	46864	46867	the
B-api_mention	46868	46874	reduce
O	46875	46883	function
O	46884	46886	to
O	46887	46888	a
O	46889	46895	static
O	46896	46903	utility
O	46904	46910	method
O	46911	46914	and
O	46915	46919	then
O	46920	46922	it
O	46923	46930	becomes
O	46930	46931	:
B-api_mention	46932	46933	.
I-api_mention	46933	46939	reduce
I-api_mention	46939	46940	(
I-api_mention	46940	46944	args
I-api_mention	46944	46945	)
O	46945	46946	;

O	46948	46956	Question
O	46956	46957	-
O	46957	46965	22725537
O	46965	46966	,
O	46967	46973	answer
O	46973	46974	-
O	46974	46982	36334855

O	46983	46985	As
O	46986	46988	my
O	46989	46997	previous
O	46998	47004	answer
O	47005	47013	appeared
O	47014	47017	not
O	47018	47020	to
O	47021	47023	be
O	47024	47028	very
O	47029	47036	popular
O	47036	47037	,
O	47038	47039	I
O	47040	47044	will
O	47045	47049	give
O	47050	47054	this
O	47055	47062	another
O	47063	47065	go
O	47065	47066	.

O	47067	47068	A
O	47069	47074	short
O	47075	47081	answer
O	47081	47082	:
O	47083	47086	You
O	47087	47090	are
O	47091	47097	mostly
O	47098	47100	on
O	47101	47102	a
O	47103	47108	right
O	47109	47114	track
O	47114	47115	.

O	47116	47119	The
O	47120	47128	shortest
O	47129	47133	code
O	47134	47136	to
O	47137	47140	get
O	47141	47143	to
O	47144	47148	your
O	47149	47156	desired
O	47157	47163	output
O	47164	47165	I
O	47166	47171	could
O	47172	47176	come
O	47177	47179	up
O	47180	47184	with
O	47185	47187	is
O	47188	47192	this
O	47192	47193	:
O	47194	47200	things
B-api_mention	47200	47201	.
I-api_mention	47201	47207	stream
I-api_mention	47207	47208	(
I-api_mention	47208	47212	args
I-api_mention	47212	47213	)
I-api_mention	47214	47215	.
I-api_mention	47215	47218	map
I-api_mention	47218	47219	(
I-api_mention	47219	47223	args
I-api_mention	47223	47224	)
I-api_mention	47225	47226	.
I-api_mention	47226	47232	filter
I-api_mention	47232	47233	(
I-api_mention	47233	47237	args
I-api_mention	47237	47238	)
I-api_mention	47239	47240	.
I-api_mention	47240	47249	findFirst
I-api_mention	47249	47250	(
I-api_mention	47250	47254	args
I-api_mention	47254	47255	)
I-api_mention	47256	47257	.
I-api_mention	47257	47264	flatMap
I-api_mention	47264	47265	(
I-api_mention	47265	47269	args
I-api_mention	47269	47270	)
O	47270	47271	;
O	47272	47276	This
O	47277	47281	will
O	47282	47285	fit
O	47286	47289	all
O	47290	47294	your
O	47295	47307	requirements
O	47307	47308	:
O	47309	47310	#
O	47310	47312	li
O	47313	47315	It
O	47316	47320	will
O	47321	47325	find
O	47326	47331	first
O	47332	47340	response
O	47341	47345	that
O	47346	47354	resolves
O	47355	47357	to
O	47358	47359	a
O	47360	47368	nonempty
B-api_mention	47369	47377	Optional
I-api_mention	47377	47378	<
I-api_mention	47378	47379	T
I-api_mention	47379	47380	>
O	47381	47382	#
O	47382	47384	li
O	47385	47387	It
O	47388	47393	calls
B-api_mention	47394	47398	this
I-api_mention	47398	47399	:
I-api_mention	47399	47400	:
I-api_mention	47400	47407	resolve
O	47408	47414	lazily
O	47415	47417	as
O	47418	47424	needed
O	47425	47426	#
O	47426	47428	li
B-api_mention	47429	47433	this
I-api_mention	47433	47434	:
I-api_mention	47434	47435	:
I-api_mention	47435	47442	resolve
O	47443	47447	will
O	47448	47451	not
O	47452	47454	be
O	47455	47461	called
O	47462	47467	after
O	47468	47473	first
O	47474	47477	non
O	47477	47478	-
O	47478	47483	empty
O	47484	47490	result
O	47491	47492	#
O	47492	47494	li
O	47495	47497	It
O	47498	47502	will
O	47503	47509	return
B-api_mention	47510	47518	Optional
I-api_mention	47518	47519	<
I-api_mention	47519	47520	T
I-api_mention	47520	47521	>
O	47522	47528	Longer
O	47529	47535	answer
O	47536	47539	The
O	47540	47544	only
O	47545	47557	modification
O	47558	47566	compared
O	47567	47569	to
O	47570	47572	OP
O	47573	47580	initial
O	47581	47588	version
O	47589	47592	was
O	47593	47597	that
O	47598	47599	I
O	47600	47607	removed
B-api_mention	47608	47609	.
I-api_mention	47609	47612	map
I-api_mention	47612	47613	(
I-api_mention	47613	47617	args
I-api_mention	47617	47618	)
O	47619	47625	before
O	47626	47630	call
O	47631	47633	to
B-api_mention	47634	47635	.
I-api_mention	47635	47644	findFirst
I-api_mention	47644	47645	(
I-api_mention	47645	47649	args
I-api_mention	47649	47650	)
O	47651	47654	and
O	47655	47660	added
B-api_mention	47661	47662	.
I-api_mention	47662	47669	flatMap
I-api_mention	47669	47670	(
I-api_mention	47670	47674	args
I-api_mention	47674	47675	)
O	47676	47678	as
O	47679	47682	the
O	47683	47687	last
O	47688	47692	call
O	47693	47695	in
O	47696	47699	the
O	47700	47705	chain
O	47705	47706	.

O	47707	47711	This
O	47712	47715	has
O	47716	47717	a
O	47718	47722	nice
O	47723	47729	effect
O	47730	47732	of
O	47733	47740	getting
O	47741	47744	rid
O	47745	47747	of
O	47748	47751	the
O	47752	47758	double
O	47758	47759	-
O	47759	47767	Optional
O	47767	47768	,
O	47769	47777	whenever
O	47778	47784	stream
O	47785	47790	finds
O	47791	47793	an
O	47794	47800	actual
O	47801	47807	result
O	47807	47808	.

O	47809	47812	You
O	47813	47816	can
O	47816	47817	'
O	47817	47818	t
O	47819	47825	really
O	47826	47828	go
O	47829	47832	any
O	47833	47840	shorter
O	47841	47845	than
O	47846	47850	this
O	47851	47853	in
O	47854	47858	Java
O	47858	47859	.

O	47860	47863	The
O	47864	47875	alternative
O	47876	47883	snippet
O	47884	47886	of
O	47887	47891	code
O	47892	47897	using
O	47898	47901	the
O	47902	47906	more
O	47907	47919	conventional
O	47920	47923	for
O	47924	47928	loop
O	47929	47938	technique
O	47939	47941	is
O	47942	47947	going
O	47948	47950	to
O	47951	47953	be
O	47954	47959	about
O	47960	47964	same
O	47965	47971	number
O	47972	47974	of
O	47975	47980	lines
O	47981	47983	of
O	47984	47988	code
O	47989	47992	and
O	47993	47997	have
O	47998	48002	more
O	48003	48005	or
O	48006	48010	less
O	48011	48015	same
O	48016	48021	order
O	48022	48025	and
O	48026	48032	number
O	48033	48035	of
O	48036	48046	operations
O	48047	48050	you
O	48051	48055	need
O	48056	48058	to
O	48059	48066	perform
O	48066	48067	:
O	48068	48069	#
O	48069	48071	li
O	48072	48079	Calling
O	48080	48084	this
B-api_mention	48084	48085	.
I-api_mention	48085	48092	resolve
O	48093	48094	,
O	48095	48096	#
O	48096	48098	li
O	48099	48108	filtering
O	48109	48114	based
O	48115	48117	on
B-api_mention	48118	48126	Optional
I-api_mention	48126	48127	.
I-api_mention	48127	48136	isPresent
O	48137	48138	#
O	48138	48140	li
O	48141	48150	returning
O	48151	48154	the
O	48155	48161	result
O	48162	48165	and
O	48166	48167	#
O	48167	48169	li
O	48170	48174	some
O	48175	48178	way
O	48179	48181	of
O	48182	48189	dealing
O	48190	48194	with
O	48195	48203	negative
O	48204	48210	result
O	48211	48212	(
O	48212	48216	when
O	48217	48224	nothing
O	48225	48228	was
O	48229	48234	found
O	48234	48235	)
O	48236	48240	Just
O	48241	48243	to
O	48244	48249	prove
O	48250	48254	that
O	48255	48257	my
O	48258	48266	solution
O	48267	48272	works
O	48273	48275	as
O	48276	48286	advertised
O	48286	48287	,
O	48288	48289	I
O	48290	48295	wrote
O	48296	48297	a
O	48298	48303	small
O	48304	48308	test
O	48309	48316	program
O	48316	48317	:
O	48318	48319	#
O	48319	48322	pre
O	48323	48324	(
O	48324	48326	It
O	48327	48331	does
O	48332	48336	have
O	48337	48340	few
O	48341	48346	extra
O	48347	48352	lines
O	48353	48356	for
O	48357	48366	debugging
O	48367	48370	and
O	48371	48380	verifying
O	48381	48385	that
O	48386	48390	only
O	48391	48393	as
O	48394	48398	many
O	48399	48404	calls
O	48405	48407	to
O	48408	48415	resolve
O	48416	48418	as
O	48419	48425	needed
O	48425	48426	.
O	48426	48427	.
O	48427	48428	.
O	48428	48429	)
O	48430	48439	Executing
O	48440	48444	this
O	48445	48447	on
O	48448	48449	a
O	48450	48457	command
O	48458	48462	line
O	48462	48463	,
O	48464	48465	I
O	48466	48469	got
O	48470	48473	the
O	48474	48483	following
O	48484	48491	results
O	48491	48492	:
O	48493	48494	#
O	48494	48497	pre

O	48499	48507	Question
O	48507	48508	-
O	48508	48516	23674624
O	48516	48517	,
O	48518	48524	answer
O	48524	48525	-
O	48525	48533	23674719

B-api_mention	48534	48543	IntStream
I-api_mention	48543	48544	.
I-api_mention	48544	48549	boxed
O	48550	48555	turns
O	48556	48558	an
B-api_mention	48559	48568	IntStream
O	48569	48573	into
O	48574	48575	a
B-api_mention	48576	48582	Stream
I-api_mention	48582	48583	<
I-api_mention	48583	48584	T
I-api_mention	48584	48585	>
O	48586	48587	,
O	48588	48593	which
O	48594	48597	you
O	48598	48601	can
O	48602	48606	then
O	48607	48614	collect
O	48615	48619	into
O	48620	48621	a
O	48622	48626	list
O	48626	48627	:
O	48628	48640	theIntStream
B-api_mention	48640	48641	.
I-api_mention	48641	48646	boxed
I-api_mention	48646	48647	(
I-api_mention	48647	48651	args
I-api_mention	48651	48652	)
I-api_mention	48652	48653	.
I-api_mention	48653	48660	collect
I-api_mention	48660	48661	(
I-api_mention	48661	48665	args
I-api_mention	48665	48666	)

O	48668	48676	Question
O	48676	48677	-
O	48677	48685	23308193
O	48685	48686	,
O	48687	48693	answer
O	48693	48694	-
O	48694	48702	32566745

O	48703	48707	This
O	48708	48710	is
O	48711	48719	possible
O	48720	48723	for
B-api_mention	48724	48731	forEach
I-api_mention	48731	48732	(
I-api_mention	48732	48736	args
I-api_mention	48736	48737	)
O	48738	48739	.

O	48740	48743	The
O	48744	48752	solution
O	48753	48755	is
O	48756	48759	not
O	48760	48764	nice
O	48764	48765	,
O	48766	48769	but
O	48770	48772	it
O	48773	48775	is
O	48776	48784	possible
O	48784	48785	.

O	48786	48793	WARNING
O	48794	48795	:
O	48796	48799	You
O	48800	48806	should
O	48807	48810	not
O	48811	48814	use
O	48815	48817	it
O	48818	48821	for
O	48822	48833	controlling
O	48834	48842	business
O	48843	48848	logic
O	48848	48849	,
O	48850	48853	but
O	48854	48860	purely
O	48861	48864	for
O	48865	48873	handling
O	48874	48876	an
O	48877	48888	exceptional
O	48889	48898	situation
O	48899	48904	which
O	48905	48911	occurs
O	48912	48918	during
O	48919	48922	the
O	48923	48932	execution
O	48933	48935	of
O	48936	48939	the
B-api_mention	48940	48947	forEach
I-api_mention	48947	48948	(
I-api_mention	48948	48952	args
I-api_mention	48952	48953	)
O	48954	48955	.

O	48956	48960	Such
O	48961	48963	as
O	48964	48965	a
O	48966	48974	resource
O	48975	48983	suddenly
O	48984	48989	stops
O	48990	48995	being
O	48996	49006	accessible
O	49006	49007	,
O	49008	49011	one
O	49012	49014	of
O	49015	49018	the
O	49019	49028	processed
O	49029	49036	objects
O	49037	49039	is
O	49040	49049	violating
O	49050	49051	a
O	49052	49060	contract
O	49061	49062	(
O	49062	49063	e
O	49063	49064	.
O	49064	49065	g
O	49065	49066	.
O	49067	49075	contract
O	49076	49080	says
O	49081	49085	that
O	49086	49089	all
O	49090	49093	the
O	49094	49102	elements
O	49103	49105	in
O	49106	49109	the
O	49110	49116	stream
O	49117	49121	must
O	49122	49125	not
O	49126	49128	be
O	49129	49133	null
O	49134	49137	but
O	49138	49146	suddenly
O	49147	49150	and
O	49151	49163	unexpectedly
O	49164	49167	one
O	49168	49170	of
O	49171	49175	them
O	49176	49178	is
O	49179	49183	null
O	49184	49185	)
O	49186	49189	etc
O	49189	49190	.

O	49191	49200	According
O	49201	49203	to
O	49204	49207	the
O	49208	49221	documentation
O	49222	49225	for
B-api_mention	49226	49234	Iterable
I-api_mention	49234	49235	.
I-api_mention	49235	49242	forEach
I-api_mention	49242	49243	(
I-api_mention	49243	49244	)
O	49245	49246	:
O	49247	49248	#
O	49248	49258	blockquote
O	49259	49261	So
O	49262	49265	you
O	49266	49271	throw
O	49272	49274	an
O	49275	49284	exception
O	49285	49290	which
O	49291	49295	will
O	49296	49307	immediately
O	49308	49313	break
O	49314	49317	the
O	49318	49326	internal
O	49327	49331	loop
O	49331	49332	.

O	49333	49336	The
O	49337	49341	code
O	49342	49346	will
O	49347	49349	be
O	49350	49359	something
O	49360	49364	like
O	49365	49369	this
O	49370	49371	-
O	49372	49373	I
O	49374	49380	cannot
O	49381	49384	say
O	49385	49386	I
O	49387	49391	like
O	49392	49394	it
O	49395	49398	but
O	49399	49401	it
O	49402	49407	works
O	49407	49408	.

O	49409	49412	You
O	49413	49419	create
O	49420	49424	your
O	49425	49428	own
O	49429	49434	class
B-api_mention	49435	49449	BreakException
O	49450	49455	which
O	49456	49463	extends
B-api_mention	49464	49480	RuntimeException
O	49481	49482	.

O	49483	49484	#
O	49484	49487	pre
O	49488	49494	Notice
O	49495	49499	that
O	49500	49503	the
O	49504	49507	try
O	49507	49508	.
O	49508	49509	.
O	49509	49510	.
O	49510	49515	catch
O	49516	49518	is
O	49519	49522	not
O	49523	49529	around
O	49530	49533	the
O	49534	49540	lambda
O	49541	49551	expression
O	49551	49552	,
O	49553	49556	but
O	49557	49563	rather
O	49564	49570	around
O	49571	49574	the
O	49575	49580	whole
B-api_mention	49581	49588	forEach
I-api_mention	49588	49589	(
I-api_mention	49589	49593	args
I-api_mention	49593	49594	)
O	49595	49601	method
O	49601	49602	.

O	49603	49605	To
O	49606	49610	make
O	49611	49613	it
O	49614	49618	more
O	49619	49626	visible
O	49626	49627	,
O	49628	49631	see
O	49632	49635	the
O	49636	49645	following
O	49646	49659	transcription
O	49660	49662	of
O	49663	49666	the
O	49667	49671	code
O	49672	49677	which
O	49678	49683	shows
O	49684	49686	it
O	49687	49691	more
O	49692	49699	clearly
O	49699	49700	:
O	49701	49702	#
O	49702	49705	pre

O	49707	49715	Question
O	49715	49716	-
O	49716	49724	22929237
O	49724	49725	,
O	49726	49732	answer
O	49732	49733	-
O	49733	49741	28564046

O	49742	49745	You
O	49746	49749	can
O	49750	49753	use
B-api_mention	49754	49758	java
I-api_mention	49758	49759	.
I-api_mention	49759	49762	sql
I-api_mention	49762	49763	.
I-api_mention	49763	49767	Date
I-api_mention	49767	49768	.
I-api_mention	49768	49775	valueOf
I-api_mention	49775	49776	(
I-api_mention	49776	49780	args
I-api_mention	49780	49781	)
O	49782	49788	method
O	49789	49791	as
O	49791	49792	:
B-api_mention	49793	49797	Date
O	49798	49802	date
O	49803	49804	=
B-api_mention	49805	49809	java
I-api_mention	49809	49810	.
I-api_mention	49810	49813	sql
I-api_mention	49813	49814	.
I-api_mention	49814	49818	Date
I-api_mention	49818	49819	.
I-api_mention	49819	49826	valueOf
I-api_mention	49826	49827	(
I-api_mention	49827	49831	args
I-api_mention	49831	49832	)
O	49832	49833	;
O	49834	49836	No
O	49837	49841	need
O	49842	49844	to
O	49845	49848	add
O	49849	49853	time
O	49854	49857	and
O	49858	49862	time
O	49863	49867	zone
O	49868	49872	info
O	49873	49877	here
O	49878	49885	because
O	49886	49890	they
O	49891	49894	are
O	49895	49900	taken
O	49901	49911	implicitly
O	49911	49912	.

O	49913	49916	See
O	49917	49926	Simpliest
O	49927	49932	java8
B-api_mention	49933	49942	LocalDate
O	49943	49945	to
B-api_mention	49946	49950	java
I-api_mention	49950	49951	.
I-api_mention	49951	49955	util
I-api_mention	49955	49956	.
I-api_mention	49956	49960	Date
O	49961	49971	conversion
O	49972	49975	and
O	49976	49980	vice
O	49981	49986	versa
O	49986	49987	?

O	49989	49997	Question
O	49997	49998	-
O	49998	50006	23218874
O	50006	50007	,
O	50008	50014	answer
O	50014	50015	-
O	50015	50023	23232560

O	50024	50027	For
O	50028	50034	simple
O	50035	50040	cases
O	50041	50045	such
O	50046	50048	as
O	50049	50052	the
O	50053	50056	one
O	50057	50068	illustrated
O	50068	50069	,
O	50070	50074	they
O	50075	50078	are
O	50079	50085	mostly
O	50086	50089	the
O	50090	50094	same
O	50094	50095	.

O	50096	50103	However
O	50103	50104	,
O	50105	50110	there
O	50111	50114	are
O	50115	50116	a
O	50117	50123	number
O	50124	50126	of
O	50127	50133	subtle
O	50134	50145	differences
O	50146	50150	that
O	50151	50156	might
O	50157	50159	be
O	50160	50171	significant
O	50171	50172	.

O	50173	50176	One
O	50177	50182	issue
O	50183	50185	is
O	50186	50190	with
O	50191	50199	ordering
O	50199	50200	.

O	50201	50205	With
B-api_mention	50206	50212	Stream
I-api_mention	50212	50213	.
I-api_mention	50213	50220	forEach
O	50221	50222	,
O	50223	50226	the
O	50227	50232	order
O	50233	50235	is
O	50236	50245	undefined
O	50246	50247	.

O	50248	50250	It
O	50250	50251	'
O	50251	50252	s
O	50253	50261	unlikely
O	50262	50264	to
O	50265	50270	occur
O	50271	50275	with
O	50276	50286	sequential
O	50287	50294	streams
O	50294	50295	,
O	50296	50301	still
O	50301	50302	,
O	50303	50305	it
O	50305	50306	'
O	50306	50307	s
O	50308	50314	within
O	50315	50318	the
O	50319	50332	specification
O	50333	50336	for
B-api_mention	50337	50343	Stream
I-api_mention	50343	50344	.
I-api_mention	50344	50351	forEach
O	50352	50354	to
O	50355	50362	execute
O	50363	50365	in
O	50366	50370	some
O	50371	50380	arbitrary
O	50381	50386	order
O	50386	50387	.

O	50388	50392	This
O	50393	50397	does
O	50398	50403	occur
O	50404	50414	frequently
O	50415	50417	in
O	50418	50426	parallel
O	50427	50434	streams
O	50434	50435	.

O	50436	50438	By
O	50439	50447	contrast
O	50447	50448	,
B-api_mention	50449	50457	Iterable
I-api_mention	50457	50458	.
I-api_mention	50458	50465	forEach
O	50466	50468	is
O	50469	50475	always
O	50476	50484	executed
O	50485	50487	in
O	50488	50491	the
O	50492	50501	iteration
O	50502	50507	order
O	50508	50510	of
O	50511	50514	the
B-api_mention	50515	50523	Iterable
O	50524	50525	,
O	50526	50528	if
O	50529	50532	one
O	50533	50535	is
O	50536	50545	specified
O	50545	50546	.

O	50547	50554	Another
O	50555	50560	issue
O	50561	50563	is
O	50564	50568	with
O	50569	50573	side
O	50574	50581	effects
O	50581	50582	.

O	50583	50586	The
O	50587	50593	action
O	50594	50603	specified
O	50604	50606	in
B-api_mention	50607	50613	Stream
I-api_mention	50613	50614	.
I-api_mention	50614	50621	forEach
O	50622	50624	is
O	50625	50633	required
O	50634	50636	to
O	50637	50639	be
O	50640	50643	non
O	50643	50644	-
O	50644	50655	interfering
O	50656	50657	.

O	50658	50659	(
O	50659	50662	See
O	50663	50666	the
B-api_mention	50667	50671	java
I-api_mention	50671	50672	.
I-api_mention	50672	50676	util
I-api_mention	50676	50677	.
I-api_mention	50677	50683	stream
O	50684	50691	package
O	50692	50695	doc
O	50696	50697	.
O	50697	50698	)
B-api_mention	50699	50707	Iterable
I-api_mention	50707	50708	.
I-api_mention	50708	50715	forEach
O	50716	50727	potentially
O	50728	50731	has
O	50732	50737	fewer
O	50738	50750	restrictions
O	50750	50751	.

O	50752	50755	For
O	50756	50759	the
O	50760	50771	collections
O	50772	50774	in
B-api_mention	50775	50779	java
I-api_mention	50779	50780	.
I-api_mention	50780	50784	util
O	50785	50786	,
B-api_mention	50787	50795	Iterable
I-api_mention	50795	50796	.
I-api_mention	50796	50803	forEach
O	50804	50808	will
O	50809	50818	generally
O	50819	50822	use
O	50823	50827	that
O	50828	50838	collection
O	50838	50839	'
O	50839	50840	s
B-api_mention	50841	50849	Iterator
O	50850	50851	,
O	50852	50856	most
O	50857	50859	of
O	50860	50865	which
O	50866	50869	are
O	50870	50878	designed
O	50879	50881	to
O	50882	50884	be
O	50885	50889	fail
O	50889	50890	-
O	50890	50894	fast
O	50895	50898	and
O	50899	50904	which
O	50905	50909	will
O	50910	50915	throw
B-api_mention	50916	50947	ConcurrentModificationException
O	50948	50950	if
O	50951	50954	the
O	50955	50965	collection
O	50966	50968	is
O	50969	50981	structurally
O	50982	50990	modified
O	50991	50997	during
O	50998	51001	the
O	51002	51011	iteration
O	51011	51012	.

O	51013	51020	However
O	51020	51021	,
O	51022	51035	modifications
O	51036	51040	that
O	51041	51045	aren
O	51045	51046	'
O	51046	51047	t
O	51048	51058	structural
O	51059	51062	are
O	51063	51070	allowed
O	51071	51077	during
O	51078	51087	iteration
O	51087	51088	.

O	51089	51092	For
O	51093	51100	example
O	51100	51101	,
O	51102	51105	the
B-api_mention	51106	51115	ArrayList
O	51116	51121	class
O	51122	51135	documentation
O	51136	51140	says
O	51141	51142	"
O	51142	51148	merely
O	51149	51156	setting
O	51157	51160	the
O	51161	51166	value
O	51167	51169	of
O	51170	51172	an
O	51173	51180	element
O	51181	51183	is
O	51184	51187	not
O	51188	51189	a
O	51190	51200	structural
O	51201	51213	modification
O	51213	51214	.
O	51214	51215	"
O	51216	51220	Thus
O	51220	51221	,
O	51222	51225	the
O	51226	51232	action
O	51233	51236	for
B-api_mention	51237	51246	ArrayList
I-api_mention	51246	51247	.
I-api_mention	51247	51254	forEach
O	51255	51257	is
O	51258	51265	allowed
O	51266	51268	to
O	51269	51272	set
O	51273	51279	values
O	51280	51282	in
O	51283	51286	the
O	51287	51297	underlying
B-api_mention	51298	51307	ArrayList
O	51308	51315	without
O	51316	51324	problems
O	51324	51325	.

O	51326	51329	The
O	51330	51340	concurrent
O	51341	51352	collections
O	51353	51356	are
O	51357	51360	yet
O	51361	51366	again
O	51367	51376	different
O	51376	51377	.

O	51378	51385	Instead
O	51386	51388	of
O	51389	51393	fail
O	51393	51394	-
O	51394	51398	fast
O	51398	51399	,
O	51400	51404	they
O	51405	51408	are
O	51409	51417	designed
O	51418	51420	to
O	51421	51423	be
O	51424	51430	weakly
O	51431	51441	consistent
O	51442	51443	.

O	51444	51447	The
O	51448	51452	full
O	51453	51463	definition
O	51464	51466	is
O	51467	51469	at
O	51470	51474	that
O	51475	51479	link
O	51479	51480	.

O	51481	51488	Briefly
O	51488	51489	,
O	51490	51496	though
O	51496	51497	,
O	51498	51506	consider
B-api_mention	51507	51528	ConcurrentLinkedDeque
O	51529	51530	.

O	51531	51534	The
O	51535	51541	action
O	51542	51548	passed
O	51549	51551	to
O	51552	51555	its
B-api_mention	51556	51563	forEach
O	51564	51570	method
O	51571	51573	is
O	51574	51581	allowed
O	51582	51584	to
O	51585	51591	modify
O	51592	51595	the
O	51596	51606	underlying
O	51607	51612	deque
O	51612	51613	,
O	51614	51618	even
O	51619	51631	structurally
O	51631	51632	,
O	51633	51636	and
B-api_mention	51637	51668	ConcurrentModificationException
O	51669	51671	is
O	51672	51677	never
O	51678	51684	thrown
O	51684	51685	.

O	51686	51693	However
O	51693	51694	,
O	51695	51698	the
O	51699	51711	modification
O	51712	51716	that
O	51717	51723	occurs
O	51724	51729	might
O	51730	51732	or
O	51733	51738	might
O	51739	51742	not
O	51743	51745	be
O	51746	51753	visible
O	51754	51756	in
O	51757	51761	this
O	51762	51771	iteration
O	51771	51772	.

O	51773	51774	(
O	51774	51779	Hence
O	51780	51783	the
O	51784	51785	"
O	51785	51789	weak
O	51789	51790	"
O	51791	51802	consistency
O	51802	51803	.
O	51803	51804	)
O	51805	51810	Still
O	51811	51818	another
O	51819	51829	difference
O	51830	51832	is
O	51833	51840	visible
O	51841	51843	if
B-api_mention	51844	51852	Iterable
I-api_mention	51852	51853	.
I-api_mention	51853	51860	forEach
O	51861	51863	is
O	51864	51873	iterating
O	51874	51878	over
O	51879	51880	a
O	51881	51893	synchronized
O	51894	51904	collection
O	51904	51905	.

O	51906	51908	On
O	51909	51913	such
O	51914	51915	a
O	51916	51926	collection
O	51926	51927	,
B-api_mention	51928	51936	Iterable
I-api_mention	51936	51937	.
I-api_mention	51937	51944	forEach
O	51945	51950	takes
O	51951	51954	the
O	51955	51965	collection
O	51965	51966	'
O	51966	51967	s
O	51968	51972	lock
O	51973	51977	once
O	51978	51981	and
O	51982	51987	holds
O	51988	51990	it
O	51991	51997	across
O	51998	52001	all
O	52002	52005	the
O	52006	52011	calls
O	52012	52014	to
O	52015	52018	the
O	52019	52025	action
O	52026	52032	method
O	52032	52033	.

O	52034	52037	The
B-api_mention	52038	52044	Stream
I-api_mention	52044	52045	.
I-api_mention	52045	52052	forEach
O	52053	52057	call
O	52058	52062	uses
O	52063	52066	the
O	52067	52077	collection
O	52077	52078	'
O	52078	52079	s
O	52080	52091	spliterator
O	52091	52092	,
O	52093	52098	which
O	52099	52103	does
O	52104	52107	not
O	52108	52112	lock
O	52112	52113	,
O	52114	52117	and
O	52118	52123	which
O	52124	52130	relies
O	52131	52133	on
O	52134	52137	the
O	52138	52148	prevailing
O	52149	52153	rule
O	52154	52156	of
O	52157	52160	non
O	52160	52161	-
O	52161	52173	interference
O	52173	52174	.

O	52175	52178	The
O	52179	52189	collection
O	52190	52197	backing
O	52198	52201	the
O	52202	52208	stream
O	52209	52214	could
O	52215	52217	be
O	52218	52226	modified
O	52227	52233	during
O	52234	52243	iteration
O	52243	52244	,
O	52245	52248	and
O	52249	52251	if
O	52252	52254	it
O	52255	52257	is
O	52257	52258	,
O	52259	52260	a
B-api_mention	52261	52292	ConcurrentModificationException
O	52293	52295	or
O	52296	52308	inconsistent
O	52309	52317	behavior
O	52318	52323	could
O	52324	52330	result
O	52330	52331	.

O	52333	52341	Question
O	52341	52342	-
O	52342	52350	22435833
O	52350	52351	,
O	52352	52358	answer
O	52358	52359	-
O	52359	52367	22497858

O	52368	52371	The
O	52372	52378	answer
O	52379	52383	from
O	52384	52389	skiwi
O	52390	52397	covered
O	52398	52402	many
O	52403	52405	of
O	52406	52409	the
O	52410	52415	major
O	52416	52422	points
O	52423	52430	already
O	52430	52431	.

O	52432	52433	I
O	52433	52434	'
O	52434	52436	ll
O	52437	52441	fill
O	52442	52444	in
O	52445	52446	a
O	52447	52450	bit
O	52451	52455	more
O	52456	52466	background
O	52466	52467	.

O	52468	52471	The
O	52472	52478	design
O	52479	52481	of
O	52482	52485	any
O	52486	52489	API
O	52490	52492	is
O	52493	52494	a
O	52495	52501	series
O	52502	52504	of
O	52505	52514	tradeoffs
O	52514	52515	.

O	52516	52518	In
O	52519	52523	Java
O	52523	52524	,
O	52525	52528	one
O	52529	52531	of
O	52532	52535	the
O	52536	52545	difficult
O	52546	52552	issues
O	52553	52555	is
O	52556	52563	dealing
O	52564	52568	with
O	52569	52575	design
O	52576	52585	decisions
O	52586	52590	that
O	52591	52595	were
O	52596	52600	made
O	52601	52605	long
O	52606	52609	ago
O	52609	52610	.

O	52611	52621	Primitives
O	52622	52626	have
O	52627	52631	been
O	52632	52634	in
O	52635	52639	Java
O	52640	52645	since
O	52646	52647	1
O	52647	52648	.
O	52648	52649	0
O	52649	52650	.

O	52651	52655	They
O	52656	52660	make
O	52661	52665	Java
O	52666	52668	an
O	52669	52670	"
O	52670	52676	impure
O	52676	52677	"
O	52678	52684	object
O	52684	52685	-
O	52685	52693	oriented
O	52694	52702	language
O	52702	52703	,
O	52704	52709	since
O	52710	52713	the
O	52714	52724	primitives
O	52725	52728	are
O	52729	52732	not
O	52733	52740	objects
O	52740	52741	.

O	52742	52745	The
O	52746	52754	addition
O	52755	52757	of
O	52758	52768	primitives
O	52769	52772	was
O	52772	52773	,
O	52774	52775	I
O	52776	52783	believe
O	52783	52784	,
O	52785	52786	a
O	52787	52796	pragmatic
O	52797	52805	decision
O	52806	52808	to
O	52809	52816	improve
O	52817	52828	performance
O	52829	52831	at
O	52832	52835	the
O	52836	52843	expense
O	52844	52846	of
O	52847	52853	object
O	52853	52854	-
O	52854	52862	oriented
O	52863	52869	purity
O	52869	52870	.

O	52871	52875	This
O	52876	52878	is
O	52879	52880	a
O	52881	52889	tradeoff
O	52890	52892	we
O	52892	52893	'
O	52893	52895	re
O	52896	52901	still
O	52902	52908	living
O	52909	52913	with
O	52914	52919	today
O	52919	52920	,
O	52921	52927	nearly
O	52928	52930	20
O	52931	52936	years
O	52937	52942	later
O	52942	52943	.

O	52944	52947	The
O	52948	52958	autoboxing
O	52959	52966	feature
O	52967	52972	added
O	52973	52975	in
O	52976	52980	Java
O	52981	52982	5
O	52983	52989	mostly
O	52990	53000	eliminated
O	53001	53004	the
O	53005	53009	need
O	53010	53012	to
O	53013	53020	clutter
O	53021	53027	source
O	53028	53032	code
O	53033	53037	with
O	53038	53044	boxing
O	53045	53048	and
O	53049	53057	unboxing
O	53058	53064	method
O	53065	53070	calls
O	53070	53071	,
O	53072	53075	but
O	53076	53079	the
O	53080	53088	overhead
O	53089	53091	is
O	53092	53097	still
O	53098	53103	there
O	53103	53104	.

O	53105	53107	In
O	53108	53112	many
O	53113	53118	cases
O	53119	53121	it
O	53121	53122	'
O	53122	53123	s
O	53124	53127	not
O	53128	53138	noticeable
O	53138	53139	.

O	53140	53147	However
O	53147	53148	,
O	53149	53151	if
O	53152	53155	you
O	53156	53160	were
O	53161	53163	to
O	53164	53171	perform
O	53172	53178	boxing
O	53179	53181	or
O	53182	53190	unboxing
O	53191	53197	within
O	53198	53200	an
O	53201	53206	inner
O	53207	53211	loop
O	53211	53212	,
O	53213	53216	you
O	53216	53217	'
O	53217	53218	d
O	53219	53222	see
O	53223	53227	that
O	53228	53230	it
O	53231	53234	can
O	53235	53241	impose
O	53242	53253	significant
O	53254	53257	CPU
O	53258	53261	and
O	53262	53269	garbage
O	53270	53280	collection
O	53281	53289	overhead
O	53289	53290	.

O	53291	53295	When
O	53296	53305	designing
O	53306	53309	the
B-api_mention	53310	53317	Streams
O	53318	53321	API
O	53321	53322	,
O	53323	53325	it
O	53326	53329	was
O	53330	53335	clear
O	53336	53340	that
O	53341	53343	we
O	53344	53347	had
O	53348	53350	to
O	53351	53358	support
O	53359	53369	primitives
O	53369	53370	.

O	53371	53374	The
O	53375	53381	boxing
O	53381	53382	/
O	53382	53390	unboxing
O	53391	53399	overhead
O	53400	53405	would
O	53406	53410	kill
O	53411	53414	any
O	53415	53426	performance
O	53427	53434	benefit
O	53435	53439	from
O	53440	53451	parallelism
O	53451	53452	.

O	53453	53455	We
O	53456	53460	didn
O	53460	53461	'
O	53461	53462	t
O	53463	53467	want
O	53468	53470	to
O	53471	53478	support
O	53479	53482	all
O	53483	53485	of
O	53486	53489	the
O	53490	53500	primitives
O	53500	53501	,
O	53502	53508	though
O	53508	53509	,
O	53510	53515	since
O	53516	53520	that
O	53521	53526	would
O	53527	53531	have
O	53532	53537	added
O	53538	53539	a
O	53540	53544	huge
O	53545	53551	amount
O	53552	53554	of
O	53555	53562	clutter
O	53563	53565	to
O	53566	53569	the
O	53570	53573	API
O	53573	53574	.

O	53575	53576	(
O	53576	53579	Can
O	53580	53583	you
O	53584	53590	really
O	53591	53594	see
O	53595	53596	a
O	53597	53600	use
O	53601	53604	for
O	53605	53606	a
B-api_mention	53607	53618	ShortStream
O	53619	53620	?
O	53620	53621	)
O	53622	53623	"
O	53623	53626	All
O	53626	53627	"
O	53628	53630	or
O	53631	53632	"
O	53632	53636	none
O	53636	53637	"
O	53638	53641	are
O	53642	53653	comfortable
O	53654	53660	places
O	53661	53664	for
O	53665	53666	a
O	53667	53673	design
O	53674	53676	to
O	53677	53679	be
O	53679	53680	,
O	53681	53684	yet
O	53685	53692	neither
O	53693	53696	was
O	53697	53707	acceptable
O	53707	53708	.

O	53709	53711	So
O	53712	53714	we
O	53715	53718	had
O	53719	53721	to
O	53722	53726	find
O	53727	53728	a
O	53729	53739	reasonable
O	53740	53745	value
O	53746	53748	of
O	53749	53750	"
O	53750	53754	some
O	53754	53755	"
O	53755	53756	.

O	53757	53759	We
O	53760	53765	ended
O	53766	53768	up
O	53769	53773	with
O	53774	53783	primitive
O	53784	53799	specializations
O	53800	53803	for
O	53804	53807	int
O	53808	53809	,
O	53810	53814	long
O	53815	53816	,
O	53817	53820	and
O	53821	53827	double
O	53828	53829	.

O	53830	53831	(
O	53831	53841	Personally
O	53842	53843	I
O	53844	53849	would
O	53850	53854	have
O	53855	53859	left
O	53860	53863	out
O	53864	53867	int
O	53868	53871	but
O	53872	53876	that
O	53876	53877	'
O	53877	53878	s
O	53879	53883	just
O	53884	53886	me
O	53886	53887	.
O	53887	53888	)
O	53889	53892	For
B-api_mention	53893	53905	CharSequence
I-api_mention	53905	53906	.
I-api_mention	53906	53911	chars
I-api_mention	53911	53912	(
I-api_mention	53912	53916	args
I-api_mention	53916	53917	)
O	53918	53920	we
O	53921	53931	considered
O	53932	53941	returning
B-api_mention	53942	53948	Stream
I-api_mention	53948	53949	<
I-api_mention	53949	53950	T
I-api_mention	53950	53951	>
O	53952	53953	(
O	53953	53955	an
O	53956	53961	early
O	53962	53971	prototype
O	53972	53977	might
O	53978	53982	have
O	53983	53994	implemented
O	53995	53999	this
O	53999	54000	)
O	54001	54004	but
O	54005	54007	it
O	54008	54011	was
O	54012	54020	rejected
O	54021	54028	because
O	54029	54031	of
O	54032	54038	boxing
O	54039	54047	overhead
O	54047	54048	.

O	54049	54060	Considering
O	54061	54065	that
O	54066	54067	a
B-api_mention	54068	54074	String
O	54075	54078	has
O	54079	54083	char
O	54084	54090	values
O	54091	54093	as
O	54094	54104	primitives
O	54104	54105	,
O	54106	54108	it
O	54109	54114	would
O	54115	54119	seem
O	54120	54122	to
O	54123	54125	be
O	54126	54127	a
O	54128	54135	mistake
O	54136	54138	to
O	54139	54145	impose
O	54146	54152	boxing
O	54153	54168	unconditionally
O	54169	54173	when
O	54174	54177	the
O	54178	54184	caller
O	54185	54190	would
O	54191	54199	probably
O	54200	54204	just
O	54205	54207	do
O	54208	54209	a
O	54210	54213	bit
O	54214	54216	of
O	54217	54227	processing
O	54228	54230	on
O	54231	54234	the
O	54235	54240	value
O	54241	54244	and
O	54245	54250	unbox
O	54251	54253	it
O	54254	54259	right
O	54260	54264	back
O	54265	54269	into
O	54270	54271	a
O	54272	54278	string
O	54278	54279	.

O	54280	54282	We
O	54283	54287	also
O	54288	54298	considered
O	54299	54300	a
B-api_mention	54301	54311	CharStream
O	54312	54321	primitive
O	54322	54336	specialization
O	54336	54337	,
O	54338	54341	but
O	54342	54345	its
O	54346	54349	use
O	54350	54355	would
O	54356	54360	seem
O	54361	54363	to
O	54364	54366	be
O	54367	54372	quite
O	54373	54379	narrow
O	54380	54388	compared
O	54389	54391	to
O	54392	54395	the
O	54396	54402	amount
O	54403	54405	of
O	54406	54410	bulk
O	54411	54413	it
O	54414	54419	would
O	54420	54423	add
O	54424	54426	to
O	54427	54430	the
O	54431	54434	API
O	54434	54435	.

O	54436	54438	It
O	54439	54443	didn
O	54443	54444	'
O	54444	54445	t
O	54446	54450	seem
O	54451	54461	worthwhile
O	54462	54464	to
O	54465	54468	add
O	54469	54471	it
O	54471	54472	.

O	54473	54476	The
O	54477	54484	penalty
O	54485	54489	this
O	54490	54497	imposes
O	54498	54500	on
O	54501	54508	callers
O	54509	54511	is
O	54512	54516	that
O	54517	54521	they
O	54522	54526	have
O	54527	54529	to
O	54530	54534	know
O	54535	54539	that
O	54540	54543	the
B-api_mention	54544	54553	IntStream
O	54554	54562	contains
O	54563	54567	char
O	54568	54574	values
O	54575	54586	represented
O	54587	54589	as
O	54590	54594	ints
O	54595	54598	and
O	54599	54603	that
O	54604	54611	casting
O	54612	54616	must
O	54617	54619	be
O	54620	54624	done
O	54625	54627	at
O	54628	54631	the
O	54632	54638	proper
O	54639	54644	place
O	54644	54645	.

O	54646	54650	This
O	54651	54653	is
O	54654	54660	doubly
O	54661	54670	confusing
O	54671	54678	because
O	54679	54684	there
O	54685	54688	are
O	54689	54699	overloaded
O	54700	54703	API
O	54704	54709	calls
O	54710	54714	like
B-api_mention	54715	54726	PrintStream
I-api_mention	54726	54727	.
I-api_mention	54727	54732	print
I-api_mention	54732	54733	(
I-api_mention	54733	54737	args
I-api_mention	54737	54738	)
O	54739	54742	and
B-api_mention	54743	54754	PrintStream
I-api_mention	54754	54755	.
I-api_mention	54755	54760	print
I-api_mention	54760	54761	(
I-api_mention	54761	54765	args
I-api_mention	54765	54766	)
O	54767	54771	that
O	54772	54778	differ
O	54779	54787	markedly
O	54788	54790	in
O	54791	54796	their
O	54797	54805	behavior
O	54805	54806	.

O	54807	54809	An
O	54810	54820	additional
O	54821	54826	point
O	54827	54829	of
O	54830	54839	confusion
O	54840	54848	possibly
O	54849	54855	arises
O	54856	54863	because
O	54864	54867	the
B-api_mention	54868	54878	codePoints
I-api_mention	54878	54879	(
I-api_mention	54879	54883	args
I-api_mention	54883	54884	)
O	54885	54889	call
O	54890	54894	also
O	54895	54902	returns
O	54903	54905	an
B-api_mention	54906	54915	IntStream
O	54916	54919	but
O	54920	54923	the
O	54924	54930	values
O	54931	54933	it
O	54934	54942	contains
O	54943	54946	are
O	54947	54952	quite
O	54953	54962	different
O	54962	54963	.

O	54964	54966	So
O	54966	54967	,
O	54968	54972	this
O	54973	54978	boils
O	54979	54983	down
O	54984	54986	to
O	54987	54995	choosing
O	54996	55009	pragmatically
O	55010	55015	among
O	55016	55023	several
O	55024	55036	alternatives
O	55036	55037	:
O	55038	55039	#
O	55039	55041	li
O	55042	55044	We
O	55045	55050	could
O	55051	55058	provide
O	55059	55061	no
O	55062	55071	primitive
O	55072	55087	specializations
O	55087	55088	,
O	55089	55098	resulting
O	55099	55101	in
O	55102	55103	a
O	55104	55110	simple
O	55110	55111	,
O	55112	55119	elegant
O	55119	55120	,
O	55121	55131	consistent
O	55132	55135	API
O	55135	55136	,
O	55137	55140	but
O	55141	55146	which
O	55147	55154	imposes
O	55155	55156	a
O	55157	55161	high
O	55162	55173	performance
O	55174	55177	and
O	55178	55180	GC
O	55181	55189	overhead
O	55189	55190	;
O	55191	55192	#
O	55192	55194	li
O	55195	55197	we
O	55198	55203	could
O	55204	55211	provide
O	55212	55213	a
O	55214	55222	complete
O	55223	55226	set
O	55227	55229	of
O	55230	55239	primitive
O	55240	55255	specializations
O	55255	55256	,
O	55257	55259	at
O	55260	55263	the
O	55264	55268	cost
O	55269	55271	of
O	55272	55282	cluttering
O	55283	55285	up
O	55286	55289	the
O	55290	55293	API
O	55294	55297	and
O	55298	55306	imposing
O	55307	55308	a
O	55309	55320	maintenance
O	55321	55327	burden
O	55328	55330	on
O	55331	55334	JDK
O	55335	55345	developers
O	55345	55346	;
O	55347	55349	or
O	55350	55351	#
O	55351	55353	li
O	55354	55356	we
O	55357	55362	could
O	55363	55370	provide
O	55371	55372	a
O	55373	55379	subset
O	55380	55382	of
O	55383	55392	primitive
O	55393	55408	specializations
O	55408	55409	,
O	55410	55416	giving
O	55417	55418	a
O	55419	55429	moderately
O	55430	55435	sized
O	55435	55436	,
O	55437	55441	high
O	55442	55452	performing
O	55453	55456	API
O	55457	55461	that
O	55462	55469	imposes
O	55470	55471	a
O	55472	55482	relatively
O	55483	55488	small
O	55489	55495	burden
O	55496	55498	on
O	55499	55506	callers
O	55507	55509	in
O	55510	55511	a
O	55512	55518	fairly
O	55519	55525	narrow
O	55526	55531	range
O	55532	55534	of
O	55535	55538	use
O	55539	55544	cases
O	55545	55546	(
O	55546	55550	char
O	55551	55561	processing
O	55561	55562	)
O	55562	55563	.

O	55564	55566	We
O	55567	55572	chose
O	55573	55576	the
O	55577	55581	last
O	55582	55585	one
O	55585	55586	.

O	55588	55596	Question
O	55596	55597	-
O	55597	55605	22718744
O	55605	55606	,
O	55607	55613	answer
O	55613	55614	-
O	55614	55622	22718904

O	55623	55627	This
O	55628	55631	has
O	55632	55636	been
O	55637	55646	specified
O	55647	55649	in
O	55650	55653	the
O	55654	55667	documentation
O	55668	55670	of
B-api_mention	55671	55676	split
I-api_mention	55676	55677	(
I-api_mention	55677	55683	String
I-api_mention	55684	55689	regex
I-api_mention	55689	55690	,
I-api_mention	55691	55696	limit
I-api_mention	55696	55697	)
O	55698	55699	.

O	55700	55701	#
O	55701	55711	blockquote
O	55712	55714	In
B-api_mention	55715	55728	StringLiteral
I-api_mention	55728	55729	.
I-api_mention	55729	55734	split
I-api_mention	55734	55735	(
I-api_mention	55735	55739	args
I-api_mention	55739	55740	)
O	55741	55744	you
O	55745	55748	got
O	55749	55750	a
O	55751	55755	zero
O	55755	55756	-
O	55756	55761	width
O	55762	55767	match
O	55768	55770	at
O	55771	55774	the
O	55775	55784	beginning
O	55785	55787	so
O	55788	55791	the
O	55792	55799	leading
O	55800	55805	empty
O	55806	55815	substring
O	55816	55818	is
O	55819	55822	not
O	55823	55831	included
O	55832	55834	in
O	55835	55838	the
O	55839	55848	resulting
O	55849	55854	array
O	55854	55855	.

O	55856	55863	However
O	55864	55866	in
O	55867	55871	your
O	55872	55878	second
O	55879	55886	snippet
O	55887	55891	when
O	55892	55895	you
O	55896	55901	split
O	55902	55904	on
B-api_mention	55905	55918	StringLiteral
O	55919	55922	you
O	55923	55926	got
O	55927	55928	a
O	55929	55937	positive
O	55938	55943	width
O	55944	55949	match
O	55950	55951	(
O	55951	55952	1
O	55953	55955	in
O	55956	55960	this
O	55961	55965	case
O	55965	55966	)
O	55966	55967	,
O	55968	55970	so
O	55971	55974	the
O	55975	55980	empty
O	55981	55988	leading
O	55989	55998	substring
O	55999	56001	is
O	56002	56010	included
O	56011	56013	as
O	56014	56022	expected
O	56022	56023	.

O	56024	56025	(
O	56025	56032	Removed
O	56033	56043	irrelevant
O	56044	56050	source
O	56051	56055	code
O	56055	56056	)

O	56058	56066	Question
O	56066	56067	-
O	56067	56075	22718744
O	56075	56076	,
O	56077	56083	answer
O	56083	56084	-
O	56084	56092	27477312

O	56093	56096	The
O	56097	56105	behavior
O	56106	56108	of
B-api_mention	56109	56115	String
I-api_mention	56115	56116	.
I-api_mention	56116	56121	split
O	56122	56123	(
O	56123	56128	which
O	56129	56134	calls
B-api_mention	56135	56142	Pattern
I-api_mention	56142	56143	.
I-api_mention	56143	56148	split
O	56149	56150	)
O	56151	56158	changes
O	56159	56166	between
O	56167	56171	Java
O	56172	56173	7
O	56174	56177	and
O	56178	56182	Java
O	56183	56184	8
O	56184	56185	.

O	56186	56199	Documentation
O	56200	56209	Comparing
O	56210	56217	between
O	56218	56221	the
O	56222	56235	documentation
O	56236	56238	of
B-api_mention	56239	56246	Pattern
I-api_mention	56246	56247	.
I-api_mention	56247	56252	split
O	56253	56255	in
O	56256	56260	Java
O	56261	56262	7
O	56263	56266	and
O	56267	56271	Java
O	56272	56273	8
O	56274	56275	,
O	56276	56278	we
O	56279	56286	observe
O	56287	56290	the
O	56291	56300	following
O	56301	56307	clause
O	56308	56313	being
O	56314	56319	added
O	56319	56320	:
O	56321	56322	#
O	56322	56332	blockquote
O	56333	56336	The
O	56337	56341	same
O	56342	56348	clause
O	56349	56351	is
O	56352	56356	also
O	56357	56362	added
O	56363	56365	to
B-api_mention	56366	56372	String
I-api_mention	56372	56373	.
I-api_mention	56373	56378	split
O	56379	56381	in
O	56382	56386	Java
O	56387	56388	8
O	56389	56390	,
O	56391	56399	compared
O	56400	56402	to
O	56403	56407	Java
O	56408	56409	7
O	56410	56411	.

O	56412	56421	Reference
O	56422	56436	implementation
O	56437	56440	Let
O	56441	56443	us
O	56444	56451	compare
O	56452	56455	the
O	56456	56460	code
O	56461	56463	of
B-api_mention	56464	56471	Pattern
I-api_mention	56471	56472	.
I-api_mention	56472	56477	split
O	56478	56480	of
O	56481	56484	the
O	56485	56494	reference
O	56495	56508	implemetation
O	56509	56511	in
O	56512	56516	Java
O	56517	56518	7
O	56519	56522	and
O	56523	56527	Java
O	56528	56529	8
O	56529	56530	.

O	56531	56534	The
O	56535	56539	code
O	56540	56542	is
O	56543	56552	retrieved
O	56553	56557	from
O	56558	56566	grepcode
O	56566	56567	,
O	56568	56571	for
O	56572	56579	version
O	56580	56584	7u40
O	56584	56585	-
O	56585	56588	b43
O	56589	56592	and
O	56593	56594	8
O	56594	56595	-
O	56595	56599	b132
O	56599	56600	.

O	56601	56605	Java
O	56606	56607	7
O	56608	56609	#
O	56609	56612	pre
O	56613	56617	Java
O	56618	56619	8
O	56620	56621	#
O	56621	56624	pre
O	56625	56628	The
O	56629	56637	addition
O	56638	56640	of
O	56641	56644	the
O	56645	56654	following
O	56655	56659	code
O	56660	56662	in
O	56663	56667	Java
O	56668	56669	8
O	56670	56678	excludes
O	56679	56682	the
O	56683	56687	zero
O	56687	56688	-
O	56688	56694	length
O	56695	56700	match
O	56701	56703	at
O	56704	56707	the
O	56708	56717	beginning
O	56718	56720	of
O	56721	56724	the
O	56725	56730	input
O	56731	56737	string
O	56737	56738	,
O	56739	56744	which
O	56745	56753	explains
O	56754	56757	the
O	56758	56766	behavior
O	56767	56772	above
O	56772	56773	.

O	56774	56775	#
O	56775	56778	pre
O	56779	56790	Maintaining
O	56791	56804	compatibility
O	56805	56814	Following
O	56815	56823	behavior
O	56824	56826	in
O	56827	56831	Java
O	56832	56833	8
O	56834	56837	and
O	56838	56843	above
O	56844	56846	To
O	56847	56851	make
B-api_mention	56852	56857	split
O	56858	56865	behaves
O	56866	56878	consistently
O	56879	56885	across
O	56886	56894	versions
O	56895	56898	and
O	56899	56909	compatible
O	56910	56914	with
O	56915	56918	the
O	56919	56927	behavior
O	56928	56930	in
O	56931	56935	Java
O	56936	56937	8
O	56937	56938	:
O	56939	56940	#
O	56940	56942	li
O	56943	56945	If
O	56946	56950	your
O	56951	56956	regex
O	56957	56960	can
O	56961	56966	match
O	56967	56971	zero
O	56971	56972	-
O	56972	56978	length
O	56979	56985	string
O	56985	56986	,
O	56987	56991	just
O	56992	56995	add
O	56996	56997	(
O	56997	56998	?
O	56998	56999	!
O	56999	57000	\
O	57000	57001	A
O	57001	57002	)
O	57003	57005	at
O	57006	57009	the
O	57010	57013	end
O	57014	57016	of
O	57017	57020	the
O	57021	57026	regex
O	57027	57030	and
O	57031	57035	wrap
O	57036	57039	the
O	57040	57048	original
O	57049	57054	regex
O	57055	57057	in
O	57058	57061	non
O	57061	57062	-
O	57062	57071	capturing
O	57072	57077	group
O	57078	57079	(
O	57079	57080	?
O	57080	57081	:
O	57081	57082	.
O	57082	57083	.
O	57083	57084	.
O	57084	57085	)
O	57086	57087	(
O	57087	57089	if
O	57090	57099	necessary
O	57099	57100	)
O	57100	57101	.

O	57102	57103	#
O	57103	57105	li
O	57106	57108	If
O	57109	57113	your
O	57114	57119	regex
O	57120	57123	can
O	57123	57124	'
O	57124	57125	t
O	57126	57131	match
O	57132	57136	zero
O	57136	57137	-
O	57137	57143	length
O	57144	57150	string
O	57150	57151	,
O	57152	57155	you
O	57156	57159	don
O	57159	57160	'
O	57160	57161	t
O	57162	57166	need
O	57167	57169	to
O	57170	57172	do
O	57173	57181	anything
O	57181	57182	.

O	57183	57184	#
O	57184	57186	li
O	57187	57189	If
O	57190	57193	you
O	57194	57197	don
O	57197	57198	'
O	57198	57199	t
O	57200	57204	know
O	57205	57212	whether
O	57213	57216	the
O	57217	57222	regex
O	57223	57226	can
O	57227	57232	match
O	57233	57237	zero
O	57237	57238	-
O	57238	57244	length
O	57245	57251	string
O	57252	57254	or
O	57255	57258	not
O	57258	57259	,
O	57260	57262	do
O	57263	57267	both
O	57268	57271	the
O	57272	57279	actions
O	57280	57282	in
O	57283	57287	step
O	57288	57289	1
O	57289	57290	.

O	57291	57292	(
O	57292	57293	?
O	57293	57294	!
O	57294	57295	\
O	57295	57296	A
O	57296	57297	)
O	57298	57304	checks
O	57305	57309	that
O	57310	57313	the
O	57314	57320	string
O	57321	57325	does
O	57326	57329	not
O	57330	57333	end
O	57334	57336	at
O	57337	57340	the
O	57341	57350	beginning
O	57351	57353	of
O	57354	57357	the
O	57358	57364	string
O	57364	57365	,
O	57366	57371	which
O	57372	57379	implies
O	57380	57384	that
O	57385	57388	the
O	57389	57394	match
O	57395	57397	is
O	57398	57400	an
O	57401	57406	empty
O	57407	57412	match
O	57413	57415	at
O	57416	57419	the
O	57420	57429	beginning
O	57430	57432	of
O	57433	57436	the
O	57437	57443	string
O	57443	57444	.

O	57445	57454	Following
O	57455	57463	behavior
O	57464	57466	in
O	57467	57471	Java
O	57472	57473	7
O	57474	57477	and
O	57478	57483	prior
O	57484	57489	There
O	57490	57492	is
O	57493	57495	no
O	57496	57503	general
O	57504	57512	solution
O	57513	57515	to
O	57516	57520	make
B-api_mention	57521	57526	split
O	57527	57535	backward
O	57535	57536	-
O	57536	57546	compatible
O	57547	57551	with
O	57552	57556	Java
O	57557	57558	7
O	57559	57562	and
O	57563	57568	prior
O	57568	57569	,
O	57570	57575	short
O	57576	57578	of
O	57579	57588	replacing
O	57589	57592	all
O	57593	57601	instance
O	57602	57604	of
B-api_mention	57605	57610	split
O	57611	57613	to
O	57614	57619	point
O	57620	57622	to
O	57623	57627	your
O	57628	57631	own
O	57632	57638	custom
O	57639	57653	implementation
O	57653	57654	.

O	57656	57664	Question
O	57664	57665	-
O	57665	57673	23653778
O	57673	57674	,
O	57675	57681	answer
O	57681	57682	-
O	57682	57690	25564062

O	57691	57694	Try
B-api_mention	57695	57702	OnStart
I-api_mention	57702	57703	(
I-api_mention	57703	57707	args
I-api_mention	57707	57708	)
O	57709	57715	method
O	57716	57719	and
O	57720	57724	just
O	57725	57728	use
B-api_mention	57729	57733	View
O	57734	57738	view
O	57739	57740	=
B-api_mention	57741	57748	getView
I-api_mention	57748	57749	(
I-api_mention	57749	57753	args
I-api_mention	57753	57754	)
I-api_mention	57754	57755	.
I-api_mention	57755	57767	findViewById
I-api_mention	57767	57768	(
I-api_mention	57768	57772	args
I-api_mention	57772	57773	)
O	57773	57774	;
O	57775	57777	or
O	57778	57785	Declare
O	57786	57789	any
B-api_mention	57790	57794	View
O	57795	57800	using
B-api_mention	57801	57808	getView
I-api_mention	57808	57809	(
I-api_mention	57809	57813	args
I-api_mention	57813	57814	)
I-api_mention	57814	57815	.
I-api_mention	57815	57827	findViewById
O	57828	57834	method
O	57835	57837	in
B-api_mention	57838	57845	onStart
I-api_mention	57845	57846	(
I-api_mention	57846	57850	args
I-api_mention	57850	57851	)
O	57852	57859	Declare
O	57860	57865	click
O	57866	57874	listener
O	57875	57877	on
O	57878	57882	view
O	57883	57885	by
B-api_mention	57886	57893	anyView
I-api_mention	57893	57894	.
I-api_mention	57894	57912	setOnClickListener
I-api_mention	57912	57913	(
I-api_mention	57913	57917	args
I-api_mention	57917	57918	)
O	57918	57919	;

O	57921	57929	Question
O	57929	57930	-
O	57930	57938	21375659
O	57938	57939	,
O	57940	57946	answer
O	57946	57947	-
O	57947	57955	21375716

B-api_mention	57956	57962	String
O	57963	57965	is
O	57966	57975	immutable
O	57976	57988	irrespective
O	57989	57991	of
O	57992	57995	how
O	57996	57998	it
O	57999	58001	is
O	58002	58014	instantiated
O	58015	58016	1
O	58016	58017	)
O	58018	58023	Short
O	58024	58030	answer
O	58031	58033	is
O	58034	58037	yes
O	58038	58039	,
O	58040	58043	new
B-api_mention	58044	58050	String
I-api_mention	58050	58051	(
I-api_mention	58051	58055	args
I-api_mention	58055	58056	)
O	58057	58059	is
O	58060	58069	immutable
O	58070	58073	too
O	58073	58074	.

O	58075	58082	Because
O	58083	58088	every
O	58089	58097	possible
O	58098	58105	mutable
O	58106	58115	operation
O	58116	58117	(
O	58117	58121	like
O	58122	58129	replace
O	58130	58131	,
B-api_mention	58132	58143	toLowerCase
O	58144	58151	etcetra
O	58151	58152	)
O	58153	58157	that
O	58158	58161	you
O	58162	58169	perform
O	58170	58172	on
B-api_mention	58173	58179	String
O	58180	58184	does
O	58185	58188	not
O	58189	58195	affect
O	58196	58199	the
O	58200	58208	original
B-api_mention	58209	58215	String
O	58216	58224	instance
O	58225	58228	and
O	58229	58236	returns
O	58237	58240	you
O	58241	58242	a
O	58243	58246	new
O	58247	58255	instance
O	58256	58257	.

O	58258	58261	You
O	58262	58265	may
O	58266	58271	check
O	58272	58276	this
O	58277	58279	in
O	58280	58287	Javadoc
O	58288	58291	for
B-api_mention	58292	58298	String
O	58299	58300	.

O	58301	58305	Each
O	58306	58312	public
O	58313	58319	method
O	58320	58322	of
B-api_mention	58323	58329	String
O	58330	58334	that
O	58335	58337	is
O	58338	58345	exposed
O	58346	58353	returns
O	58354	58355	a
O	58356	58359	new
B-api_mention	58360	58366	String
O	58367	58375	instance
O	58376	58379	and
O	58380	58384	does
O	58385	58388	not
O	58389	58394	alter
O	58395	58398	the
O	58399	58406	present
O	58407	58415	instance
O	58416	58418	on
O	58419	58424	which
O	58425	58428	you
O	58429	58435	called
O	58436	58439	the
O	58440	58446	method
O	58446	58447	.

O	58448	58452	This
O	58453	58455	is
O	58456	58460	very
O	58461	58468	helpful
O	58469	58471	in
O	58472	58477	Multi
O	58477	58478	-
O	58478	58486	threaded
O	58487	58498	environment
O	58499	58501	as
O	58502	58505	you
O	58506	58509	don
O	58509	58510	'
O	58510	58511	t
O	58512	58516	have
O	58517	58519	to
O	58520	58525	think
O	58526	58531	about
O	58532	58542	mutability
O	58543	58544	(
O	58545	58552	someone
O	58553	58557	will
O	58558	58564	change
O	58565	58568	the
O	58569	58574	value
O	58575	58576	)
O	58577	58582	every
O	58583	58587	time
O	58588	58591	you
O	58592	58596	pass
O	58597	58599	or
O	58600	58605	share
O	58606	58609	the
B-api_mention	58610	58616	String
O	58617	58623	around
O	58623	58624	.

B-api_mention	58625	58631	String
O	58632	58635	can
O	58636	58642	easily
O	58643	58645	be
O	58646	58649	the
O	58650	58654	most
O	58655	58659	used
O	58660	58664	data
O	58665	58669	type
O	58669	58670	,
O	58671	58673	so
O	58674	58677	the
O	58678	58687	designers
O	58688	58692	have
O	58693	58700	blessed
O	58701	58703	us
O	58704	58707	all
O	58708	58710	to
O	58711	58714	not
O	58715	58720	think
O	58721	58726	about
O	58727	58737	mutability
O	58738	58747	everytime
O	58748	58751	and
O	58752	58757	saved
O	58758	58760	us
O	58761	58762	a
O	58763	58766	lot
O	58767	58769	of
O	58770	58774	pain
O	58774	58775	.

O	58776	58788	Immutability
O	58789	58796	allowed
B-api_mention	58797	58803	String
O	58804	58808	pool
O	58809	58811	or
O	58812	58819	caching
O	58820	58822	It
O	58823	58825	is
O	58826	58833	because
O	58834	58836	of
O	58837	58849	immutability
O	58850	58858	property
O	58859	58863	that
O	58864	58867	the
O	58868	58876	internal
O	58877	58881	pool
O	58882	58884	of
O	58885	58891	string
O	58892	58895	was
O	58896	58904	possible
O	58904	58905	,
O	58906	58908	as
O	58909	58913	when
O	58914	58918	same
B-api_mention	58919	58925	String
O	58926	58931	value
O	58932	58934	is
O	58935	58943	required
O	58944	58946	at
O	58947	58951	some
O	58952	58957	other
O	58958	58963	place
O	58964	58968	then
O	58969	58973	that
O	58974	58983	immutable
O	58984	58993	reference
O	58994	58996	is
O	58997	59005	returned
O	59005	59006	.

O	59007	59009	If
B-api_mention	59010	59016	String
O	59017	59022	would
O	59023	59027	have
O	59028	59032	been
O	59033	59040	mutable
O	59041	59045	then
O	59046	59048	it
O	59049	59054	would
O	59055	59058	not
O	59059	59063	have
O	59064	59068	been
O	59069	59077	possible
O	59078	59080	to
O	59081	59086	share
B-api_mention	59087	59093	String
O	59094	59095	s
O	59096	59100	like
O	59101	59105	this
O	59106	59108	to
O	59109	59113	save
O	59114	59120	memory
O	59120	59121	.

B-api_mention	59122	59128	String
O	59129	59140	immutablity
O	59141	59144	was
O	59145	59148	not
O	59149	59156	because
O	59157	59159	of
O	59160	59167	pooling
O	59167	59168	,
O	59169	59172	but
O	59173	59185	immutability
O	59186	59189	has
O	59190	59194	more
O	59195	59203	benefits
O	59204	59212	attached
O	59213	59215	to
O	59216	59218	it
O	59218	59219	.

B-api_mention	59220	59226	String
O	59227	59236	interning
O	59237	59239	or
O	59240	59247	pooling
O	59248	59250	is
O	59251	59253	an
O	59254	59261	example
O	59262	59264	of
O	59265	59274	Flyweight
O	59275	59281	Design
O	59282	59289	pattern
O	59290	59291	2
O	59291	59292	)
O	59293	59296	Yes
O	59297	59299	it
O	59300	59304	will
O	59305	59307	be
O	59308	59316	interned
O	59317	59321	like
O	59322	59325	any
O	59326	59331	other
B-api_mention	59332	59338	String
O	59339	59341	as
O	59342	59343	a
O	59344	59349	blank
B-api_mention	59350	59356	String
O	59357	59359	is
O	59360	59364	also
O	59365	59367	as
O	59368	59372	much
O	59373	59374	a
B-api_mention	59375	59381	String
O	59382	59384	as
O	59385	59390	other
B-api_mention	59391	59397	String
O	59398	59407	instances
O	59407	59408	.

O	59409	59419	References
O	59419	59420	:
O	59421	59422	#
O	59422	59424	li
O	59425	59437	Immutability
O	59438	59446	benefits
O	59447	59449	of
B-api_mention	59450	59456	String

O	59458	59466	Question
O	59466	59467	-
O	59467	59475	21375659
O	59475	59476	,
O	59477	59483	answer
O	59483	59484	-
O	59484	59492	21375818

O	59493	59497	This
O	59498	59501	isn
O	59501	59502	'
O	59502	59503	t
O	59504	59512	strictly
O	59513	59515	an
O	59516	59522	answer
O	59523	59525	to
O	59526	59530	your
O	59531	59539	question
O	59539	59540	,
O	59541	59544	but
O	59545	59547	if
O	59548	59554	behind
O	59555	59559	your
O	59560	59568	question
O	59569	59571	is
O	59572	59573	a
O	59574	59578	wish
O	59579	59581	to
O	59582	59586	have
O	59587	59594	mutable
O	59595	59602	strings
O	59603	59607	that
O	59608	59611	you
O	59612	59615	can
O	59616	59626	manipulate
O	59626	59627	,
O	59628	59631	you
O	59632	59638	should
O	59639	59644	check
O	59645	59648	out
O	59649	59652	the
B-api_mention	59653	59666	StringBuilder
O	59667	59672	class
O	59672	59673	,
O	59674	59679	which
O	59680	59690	implements
O	59691	59695	many
O	59696	59698	of
O	59699	59702	the
O	59703	59708	exact
O	59709	59713	same
O	59714	59721	methods
O	59722	59726	that
B-api_mention	59727	59733	String
O	59734	59737	has
O	59738	59741	but
O	59742	59746	also
O	59747	59751	adds
O	59752	59759	methods
O	59760	59762	to
O	59763	59769	change
O	59770	59773	the
O	59774	59781	current
O	59782	59790	contents
O	59790	59791	.

O	59792	59796	Once
O	59797	59800	you
O	59800	59801	'
O	59801	59803	ve
O	59804	59809	built
O	59810	59814	your
O	59815	59821	string
O	59822	59824	in
O	59825	59829	such
O	59830	59831	a
O	59832	59835	way
O	59836	59840	that
O	59841	59844	you
O	59844	59845	'
O	59845	59847	re
O	59848	59855	content
O	59856	59860	with
O	59861	59863	it
O	59863	59864	,
O	59865	59868	you
O	59869	59875	simply
O	59876	59880	call
B-api_mention	59881	59889	toString
I-api_mention	59889	59890	(
I-api_mention	59890	59894	args
I-api_mention	59894	59895	)
O	59896	59898	on
O	59899	59901	it
O	59902	59904	in
O	59905	59910	order
O	59911	59913	to
O	59914	59921	convert
O	59922	59924	it
O	59925	59927	to
O	59928	59930	an
O	59931	59939	ordinary
B-api_mention	59940	59946	String
O	59947	59951	that
O	59952	59955	you
O	59956	59959	can
O	59960	59964	pass
O	59965	59967	to
O	59968	59975	library
O	59976	59984	routines
O	59985	59988	and
O	59989	59994	other
O	59995	60004	functions
O	60005	60009	that
O	60010	60014	only
O	60015	60019	take
B-api_mention	60020	60026	String
O	60027	60028	s
O	60028	60029	.

O	60030	60034	Also
O	60034	60035	,
O	60036	60040	both
B-api_mention	60041	60054	StringBuilder
O	60055	60058	and
B-api_mention	60059	60065	String
O	60066	60076	implements
O	60077	60080	the
B-api_mention	60081	60093	CharSequence
O	60094	60103	interface
O	60103	60104	,
O	60105	60107	so
O	60108	60110	if
O	60111	60114	you
O	60115	60119	want
O	60120	60122	to
O	60123	60128	write
O	60129	60138	functions
O	60139	60141	in
O	60142	60146	your
O	60147	60150	own
O	60151	60155	code
O	60156	60160	that
O	60161	60164	can
O	60165	60168	use
O	60169	60173	both
O	60174	60181	mutable
O	60182	60185	and
O	60186	60195	immutable
O	60196	60203	strings
O	60203	60204	,
O	60205	60208	you
O	60209	60212	can
O	60213	60220	declare
O	60221	60225	them
O	60226	60228	to
O	60229	60233	take
O	60234	60237	any
B-api_mention	60238	60250	CharSequence
O	60251	60257	object
O	60257	60258	.

O	60260	60268	Question
O	60268	60269	-
O	60269	60277	22740464
O	60277	60278	,
O	60279	60285	answer
O	60285	60286	-
O	60286	60294	22741520

O	60295	60308	Unfortunately
O	60309	60313	this
O	60314	60320	answer
O	60321	60323	is
O	60324	60332	probably
O	60333	60335	of
O	60336	60342	little
O	60343	60345	or
O	60346	60348	no
O	60349	60353	help
O	60354	60364	whatsoever
O	60364	60365	,
O	60366	60369	but
O	60370	60371	I
O	60372	60375	did
O	60376	60377	a
O	60378	60387	forensics
O	60388	60396	analysis
O	60397	60399	of
O	60400	60403	the
O	60404	60408	Java
O	60409	60415	Lambda
O	60416	60423	Mailing
O	60424	60428	list
O	60429	60431	to
O	60432	60435	see
O	60436	60438	if
O	60439	60440	I
O	60441	60446	could
O	60447	60451	find
O	60452	60455	the
O	60456	60461	cause
O	60462	60464	of
O	60465	60469	this
O	60470	60476	design
O	60476	60477	.

O	60478	60482	This
O	60483	60485	is
O	60486	60490	what
O	60491	60492	I
O	60493	60498	found
O	60499	60502	out
O	60502	60503	.

O	60504	60506	In
O	60507	60510	the
O	60511	60520	beginning
O	60521	60526	there
O	60527	60530	was
O	60531	60533	an
O	60534	60542	instance
O	60543	60549	method
O	60550	60553	for
B-api_mention	60554	60560	Stream
I-api_mention	60560	60561	.
I-api_mention	60561	60567	concat
I-api_mention	60567	60568	(
I-api_mention	60568	60574	Stream
I-api_mention	60574	60575	)
O	60576	60578	In
O	60579	60582	the
O	60583	60590	mailing
O	60591	60595	list
O	60596	60597	I
O	60598	60601	can
O	60602	60609	clearly
O	60610	60613	see
O	60614	60617	the
O	60618	60624	method
O	60625	60628	was
O	60629	60639	originally
O	60640	60651	implemented
O	60652	60654	as
O	60655	60657	an
O	60658	60666	instance
O	60667	60673	method
O	60673	60674	,
O	60675	60677	as
O	60678	60681	you
O	60682	60685	can
O	60686	60690	read
O	60691	60693	in
O	60694	60698	this
O	60699	60705	thread
O	60706	60708	by
O	60709	60713	Paul
O	60714	60720	Sandoz
O	60720	60721	,
O	60722	60727	about
O	60728	60731	the
B-api_mention	60732	60738	concat
O	60739	60748	operation
O	60748	60749	.

O	60750	60752	In
O	60753	60755	it
O	60756	60760	they
O	60761	60768	discuss
O	60769	60772	the
O	60773	60779	issues
O	60780	60784	that
O	60785	60790	could
O	60791	60796	arise
O	60797	60801	from
O	60802	60807	those
O	60808	60813	cases
O	60814	60816	in
O	60817	60822	which
O	60823	60826	the
O	60827	60833	stream
O	60834	60839	could
O	60840	60842	be
O	60843	60851	infinite
O	60852	60855	and
O	60856	60860	what
O	60861	60874	concatenation
O	60875	60880	would
O	60881	60885	mean
O	60886	60888	in
O	60889	60894	those
O	60895	60900	cases
O	60900	60901	,
O	60902	60905	but
O	60906	60907	I
O	60908	60910	do
O	60911	60914	not
O	60915	60920	think
O	60921	60925	that
O	60926	60929	was
O	60930	60933	the
O	60934	60940	reason
O	60941	60944	for
O	60945	60948	the
O	60949	60961	modification
O	60961	60962	.

O	60963	60966	You
O	60967	60970	see
O	60971	60973	in
O	60974	60978	this
O	60979	60984	other
O	60985	60991	thread
O	60992	60996	that
O	60997	61001	some
O	61002	61007	early
O	61008	61013	users
O	61014	61016	of
O	61017	61020	the
O	61021	61024	JDK
O	61025	61026	8
O	61027	61037	questioned
O	61038	61043	about
O	61044	61047	the
O	61048	61056	behavior
O	61057	61059	of
O	61060	61063	the
O	61064	61070	concat
O	61071	61079	instance
O	61080	61086	method
O	61087	61091	when
O	61092	61096	used
O	61097	61101	with
O	61102	61106	null
O	61107	61116	arguments
O	61116	61117	.

O	61118	61122	This
O	61123	61128	other
O	61129	61135	thread
O	61136	61143	reveals
O	61143	61144	,
O	61145	61151	though
O	61151	61152	,
O	61153	61157	that
O	61158	61161	the
O	61162	61168	design
O	61169	61171	of
O	61172	61175	the
O	61176	61182	concat
O	61183	61189	method
O	61190	61193	was
O	61194	61199	under
O	61200	61210	discussion
O	61210	61211	.

O	61212	61222	Refactored
O	61223	61225	to
B-api_mention	61226	61233	Streams
I-api_mention	61233	61234	.
I-api_mention	61234	61240	concat
I-api_mention	61240	61241	(
I-api_mention	61241	61247	Stream
I-api_mention	61247	61248	,
I-api_mention	61248	61254	Stream
I-api_mention	61254	61255	)
O	61256	61259	But
O	61260	61267	without
O	61268	61271	any
O	61272	61283	explanation
O	61283	61284	,
O	61285	61293	suddenly
O	61293	61294	,
O	61295	61298	the
O	61299	61306	methods
O	61307	61311	were
O	61312	61319	changed
O	61320	61322	to
O	61323	61329	static
O	61330	61337	methods
O	61337	61338	,
O	61339	61341	as
O	61342	61345	you
O	61346	61349	can
O	61350	61353	see
O	61354	61356	in
O	61357	61361	this
O	61362	61368	thread
O	61369	61374	about
O	61375	61384	combining
O	61385	61392	streams
O	61393	61394	.

O	61395	61399	This
O	61400	61402	is
O	61403	61410	perhaps
O	61411	61414	the
O	61415	61419	only
O	61420	61424	mail
O	61425	61431	thread
O	61432	61436	that
O	61437	61442	sheds
O	61443	61444	a
O	61445	61448	bit
O	61449	61451	of
O	61452	61457	light
O	61458	61463	about
O	61464	61468	this
O	61469	61475	change
O	61475	61476	,
O	61477	61480	but
O	61481	61483	it
O	61484	61487	was
O	61488	61491	not
O	61492	61497	clear
O	61498	61504	enough
O	61505	61508	for
O	61509	61511	me
O	61512	61514	to
O	61515	61524	determine
O	61525	61528	the
O	61529	61535	reason
O	61536	61539	for
O	61540	61543	the
O	61544	61555	refactoring
O	61555	61556	.

O	61557	61560	But
O	61561	61563	we
O	61564	61567	can
O	61568	61571	see
O	61572	61576	they
O	61577	61580	did
O	61581	61582	a
O	61583	61589	commit
O	61590	61592	in
O	61593	61598	which
O	61599	61603	they
O	61604	61613	suggested
O	61614	61616	to
O	61617	61621	move
O	61622	61625	the
O	61626	61632	concat
O	61633	61639	method
O	61640	61643	out
O	61644	61646	of
B-api_mention	61647	61653	Stream
O	61654	61657	and
O	61658	61662	into
O	61663	61666	the
O	61667	61673	helper
O	61674	61679	class
B-api_mention	61680	61687	Streams
O	61688	61689	.

O	61690	61700	Refactored
O	61701	61703	to
B-api_mention	61704	61710	Stream
I-api_mention	61710	61711	.
I-api_mention	61711	61717	concat
I-api_mention	61717	61718	(
I-api_mention	61718	61724	Stream
I-api_mention	61724	61725	,
I-api_mention	61725	61731	Stream
I-api_mention	61731	61732	)
O	61733	61738	Later
O	61738	61739	,
O	61740	61742	it
O	61743	61746	was
O	61747	61752	moved
O	61753	61758	again
O	61759	61763	from
B-api_mention	61764	61771	Streams
O	61772	61774	to
B-api_mention	61775	61781	Stream
O	61782	61783	,
O	61784	61787	but
O	61788	61791	yet
O	61792	61797	again
O	61797	61798	,
O	61799	61801	no
O	61802	61813	explanation
O	61814	61817	for
O	61818	61822	that
O	61822	61823	.

O	61824	61826	So
O	61826	61827	,
O	61828	61834	bottom
O	61835	61839	line
O	61839	61840	,
O	61841	61844	the
O	61845	61851	reason
O	61852	61855	for
O	61856	61859	the
O	61860	61866	design
O	61867	61869	is
O	61870	61873	not
O	61874	61882	entirely
O	61883	61888	clear
O	61889	61892	for
O	61893	61895	me
O	61896	61899	and
O	61900	61901	I
O	61902	61907	could
O	61908	61911	not
O	61912	61916	find
O	61917	61918	a
O	61919	61923	good
O	61924	61935	explanation
O	61935	61936	.

O	61937	61938	I
O	61939	61944	guess
O	61945	61948	you
O	61949	61954	could
O	61955	61960	still
O	61961	61964	ask
O	61965	61968	the
O	61969	61977	question
O	61978	61980	in
O	61981	61984	the
O	61985	61992	mailing
O	61993	61997	list
O	61997	61998	.

O	61999	62003	Some
O	62004	62016	Alternatives
O	62017	62020	for
O	62021	62027	Stream
O	62028	62041	Concatenation
O	62042	62046	This
O	62047	62052	other
O	62053	62059	thread
O	62060	62062	by
O	62063	62070	Michael
O	62071	62077	Hixson
O	62078	62087	discusses
O	62087	62088	/
O	62088	62092	asks
O	62093	62098	about
O	62099	62104	other
O	62105	62109	ways
O	62110	62112	to
O	62113	62120	combine
O	62120	62121	/
O	62121	62127	concat
O	62128	62135	streams
O	62136	62137	#
O	62137	62147	blockquote

O	62149	62157	Question
O	62157	62158	-
O	62158	62166	22740464
O	62166	62167	,
O	62168	62174	answer
O	62174	62175	-
O	62175	62183	37436520

O	62184	62188	Just
O	62189	62191	do
O	62191	62192	:
B-api_mention	62193	62199	Stream
I-api_mention	62199	62200	.
I-api_mention	62200	62202	of
I-api_mention	62202	62203	(
I-api_mention	62203	62207	args
I-api_mention	62207	62208	)
I-api_mention	62208	62209	.
I-api_mention	62209	62216	flatMap
I-api_mention	62216	62217	(
I-api_mention	62217	62221	args
I-api_mention	62221	62222	)
O	62222	62223	;
O	62224	62229	where
B-api_mention	62230	62238	identity
I-api_mention	62238	62239	(
I-api_mention	62239	62243	args
I-api_mention	62243	62244	)
O	62245	62247	is
O	62248	62249	a
O	62250	62256	static
O	62257	62263	import
O	62264	62266	of
B-api_mention	62267	62275	Function
I-api_mention	62275	62276	.
I-api_mention	62276	62284	identity
I-api_mention	62284	62285	(
I-api_mention	62285	62289	args
I-api_mention	62289	62290	)
O	62291	62292	.

O	62293	62306	Concatenating
O	62307	62315	multiple
O	62316	62323	streams
O	62324	62328	into
O	62329	62332	one
O	62333	62339	stream
O	62340	62342	is
O	62343	62346	the
O	62347	62351	same
O	62352	62354	as
O	62355	62365	flattening
O	62366	62367	a
O	62368	62374	stream
O	62374	62375	.

O	62376	62383	However
O	62383	62384	,
O	62385	62398	unfortunately
O	62398	62399	,
O	62400	62403	for
O	62404	62408	some
O	62409	62415	reason
O	62416	62421	there
O	62422	62424	is
O	62425	62427	no
B-api_mention	62428	62435	flatten
I-api_mention	62435	62436	(
I-api_mention	62436	62440	args
I-api_mention	62440	62441	)
O	62442	62448	method
O	62449	62451	on
B-api_mention	62452	62458	Stream
O	62459	62460	,
O	62461	62463	so
O	62464	62467	you
O	62468	62472	have
O	62473	62475	to
O	62476	62479	use
B-api_mention	62480	62487	flatMap
I-api_mention	62487	62488	(
I-api_mention	62488	62492	args
I-api_mention	62492	62493	)
O	62494	62498	with
O	62499	62502	the
O	62503	62511	identity
O	62512	62520	function
O	62520	62521	.
