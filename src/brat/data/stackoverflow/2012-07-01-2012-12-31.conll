O	0	8	Question
O	8	9	-
O	9	17	13102045

O	18	19	I
O	20	22	am
O	23	28	using
B-api_mention	29	36	Scanner
O	37	44	methods
B-api_mention	45	52	nextInt
I-api_mention	52	53	(
I-api_mention	53	57	args
I-api_mention	57	58	)
O	59	62	and
B-api_mention	63	71	nextLine
I-api_mention	71	72	(
I-api_mention	72	76	args
I-api_mention	76	77	)
O	78	81	for
O	82	89	reading
O	90	95	input
O	95	96	.

O	97	106	Basically
O	106	107	,
O	108	110	it
O	111	116	looks
O	117	121	like
O	122	126	this
O	126	127	:
O	128	129	#
O	129	132	pre
O	133	136	The
O	137	144	problem
O	145	147	is
O	148	152	that
O	153	158	after
O	159	167	entering
O	168	171	the
O	172	181	numerical
O	182	187	value
O	187	188	,
O	189	192	the
O	193	198	first
O	199	204	input
B-api_mention	204	205	.
I-api_mention	205	213	nextLine
I-api_mention	213	214	(
I-api_mention	214	218	args
I-api_mention	218	219	)
O	220	222	is
O	223	230	skipped
O	231	234	and
O	235	238	the
O	239	245	second
O	246	251	input
B-api_mention	251	252	.
I-api_mention	252	260	nextLine
I-api_mention	260	261	(
I-api_mention	261	265	args
I-api_mention	265	266	)
O	267	269	is
O	270	278	executed
O	278	279	,
O	280	282	so
O	283	287	that
O	288	290	my
O	291	297	output
O	298	303	looks
O	304	308	like
O	309	313	this
O	313	314	:
O	315	316	#
O	316	319	pre
O	320	321	I
O	322	328	tested
O	329	331	my
O	332	343	application
O	344	347	and
O	348	350	it
O	351	356	looks
O	357	361	like
O	362	365	the
O	366	373	problem
O	374	378	lies
O	379	381	in
O	382	387	using
O	388	393	input
B-api_mention	393	394	.
I-api_mention	394	401	nextInt
I-api_mention	401	402	(
I-api_mention	402	406	args
I-api_mention	406	407	)
O	408	409	.

O	410	412	If
O	413	414	I
O	415	421	delete
O	422	424	it
O	424	425	,
O	426	430	then
O	431	435	both
O	436	443	string1
O	444	445	=
O	446	451	input
B-api_mention	451	452	.
I-api_mention	452	460	nextLine
I-api_mention	460	461	(
I-api_mention	461	465	args
I-api_mention	465	466	)
O	467	470	and
O	471	478	string2
O	479	480	=
O	481	486	input
B-api_mention	486	487	.
I-api_mention	487	495	nextLine
I-api_mention	495	496	(
I-api_mention	496	500	args
I-api_mention	500	501	)
O	502	505	are
O	506	514	executed
O	515	517	as
O	518	519	I
O	520	524	want
O	525	529	them
O	530	532	to
O	533	535	be
O	535	536	.

O	538	546	Question
O	546	547	-
O	547	555	11359187

O	556	559	For
O	560	563	the
O	564	569	first
O	570	574	time
O	575	577	in
O	578	580	my
O	581	585	life
O	586	587	I
O	588	592	find
O	593	599	myself
O	600	602	in
O	603	604	a
O	605	613	position
O	614	619	where
O	620	621	I
O	621	622	'
O	622	623	m
O	624	631	writing
O	632	633	a
O	634	638	Java
O	639	642	API
O	643	647	that
O	648	652	will
O	653	655	be
O	656	660	open
O	661	668	sourced
O	668	669	.

O	670	679	Hopefully
O	680	682	to
O	683	685	be
O	686	694	included
O	695	697	in
O	698	702	many
O	703	708	other
O	709	717	projects
O	717	718	.

O	719	722	For
O	723	730	logging
O	731	732	I
O	733	734	(
O	734	737	and
O	738	744	indeed
O	745	748	the
O	749	755	people
O	756	757	I
O	758	762	work
O	763	767	with
O	767	768	)
O	769	773	have
O	774	780	always
O	781	785	used
B-api_mention	786	789	JUL
O	790	791	(
B-api_mention	791	795	java
I-api_mention	795	796	.
I-api_mention	796	800	util
I-api_mention	800	801	.
I-api_mention	801	808	logging
O	808	809	)
O	810	813	and
O	814	819	never
O	820	823	had
O	824	827	any
O	828	834	issues
O	835	839	with
O	840	842	it
O	842	843	.

O	844	851	However
O	852	855	now
O	856	857	I
O	858	862	need
O	863	865	to
O	866	876	understand
O	877	879	in
O	880	884	more
O	885	891	detail
O	892	896	what
O	897	898	I
O	899	905	should
O	906	908	do
O	909	912	for
O	913	915	my
O	916	919	API
O	920	931	development
O	931	932	.

O	933	934	I
O	934	935	'
O	935	937	ve
O	938	942	done
O	943	947	some
O	948	956	research
O	957	959	on
O	960	964	this
O	965	968	and
O	969	973	with
O	974	977	the
O	978	989	information
O	990	991	I
O	991	992	'
O	992	994	ve
O	995	998	got
O	999	1000	I
O	1001	1005	just
O	1006	1009	get
O	1010	1014	more
O	1015	1023	confused
O	1023	1024	.

O	1025	1030	Hence
O	1031	1035	this
O	1036	1040	post
O	1040	1041	.

O	1042	1047	Since
O	1048	1049	I
O	1050	1054	come
O	1055	1059	from
B-api_mention	1060	1063	JUL
O	1064	1065	I
O	1065	1066	'
O	1066	1067	m
O	1068	1074	biased
O	1075	1077	on
O	1078	1082	that
O	1082	1083	.

O	1084	1086	My
O	1087	1096	knowledge
O	1097	1099	of
O	1100	1103	the
O	1104	1108	rest
O	1109	1111	is
O	1112	1115	not
O	1116	1120	that
O	1121	1124	big
O	1124	1125	.

O	1126	1130	From
O	1131	1134	the
O	1135	1143	research
O	1144	1145	I
O	1145	1146	'
O	1146	1148	ve
O	1149	1153	done
O	1154	1155	I
O	1155	1156	'
O	1156	1158	ve
O	1159	1163	come
O	1164	1166	up
O	1167	1171	with
O	1172	1177	these
O	1178	1185	reasons
O	1186	1189	why
O	1190	1196	people
O	1197	1199	do
O	1200	1203	not
O	1204	1208	like
B-api_mention	1209	1212	JUL
O	1212	1213	:
O	1214	1215	#
O	1215	1217	li
O	1218	1219	"
O	1219	1220	I
O	1221	1228	started
O	1229	1239	developing
O	1240	1242	in
O	1243	1247	Java
O	1248	1252	long
O	1253	1259	before
O	1260	1263	Sun
O	1264	1272	released
O	1273	1276	JUL
O	1277	1280	and
O	1281	1283	it
O	1284	1287	was
O	1288	1292	just
O	1293	1299	easier
O	1300	1303	for
O	1304	1306	me
O	1307	1309	to
O	1310	1318	continue
O	1319	1323	with
O	1324	1331	logging
O	1331	1332	-
O	1332	1341	framework
O	1341	1342	-
O	1342	1343	X
O	1344	1350	rather
O	1351	1355	than
O	1356	1358	to
O	1359	1364	learn
O	1365	1374	something
O	1375	1378	new
O	1378	1379	"
O	1380	1381	.

O	1382	1385	Hmm
O	1385	1386	.

O	1387	1388	I
O	1388	1389	'
O	1389	1390	m
O	1391	1394	not
O	1395	1402	kidding
O	1402	1403	,
O	1404	1408	this
O	1409	1411	is
O	1412	1420	actually
O	1421	1425	what
O	1426	1432	people
O	1433	1436	say
O	1436	1437	.

O	1438	1442	With
O	1443	1447	this
O	1448	1456	argument
O	1457	1459	we
O	1460	1465	could
O	1466	1469	all
O	1470	1472	be
O	1473	1478	doing
O	1479	1484	COBOL
O	1484	1485	.

O	1486	1487	(
O	1487	1494	however
O	1495	1496	I
O	1497	1500	can
O	1501	1510	certainly
O	1511	1517	relate
O	1518	1520	to
O	1521	1525	this
O	1526	1531	being
O	1532	1533	a
O	1534	1538	lazy
O	1539	1543	dude
O	1544	1550	myself
O	1550	1551	)
O	1552	1553	#
O	1553	1555	li
O	1556	1557	"
O	1557	1558	I
O	1559	1562	don
O	1562	1563	'
O	1563	1564	t
O	1565	1569	like
O	1570	1573	the
O	1574	1579	names
O	1580	1582	of
O	1583	1586	the
O	1587	1594	logging
O	1595	1601	levels
O	1602	1604	in
O	1605	1608	JUL
O	1608	1609	"
O	1610	1611	.

O	1612	1614	Ok
O	1614	1615	,
O	1616	1625	seriously
O	1625	1626	,
O	1627	1631	this
O	1632	1634	is
O	1635	1639	just
O	1640	1643	not
O	1644	1650	enough
O	1651	1653	of
O	1654	1655	a
O	1656	1662	reason
O	1663	1665	to
O	1666	1675	introduce
O	1676	1677	a
O	1678	1681	new
O	1682	1692	dependency
O	1692	1693	.

O	1694	1695	#
O	1695	1697	li
O	1698	1699	"
O	1699	1700	I
O	1701	1704	don
O	1704	1705	'
O	1705	1706	t
O	1707	1711	like
O	1712	1715	the
O	1716	1724	standard
O	1725	1731	format
O	1732	1734	of
O	1735	1738	the
O	1739	1745	output
O	1746	1750	from
B-api_mention	1751	1754	JUL
O	1754	1755	"
O	1756	1757	.

O	1758	1761	Hmm
O	1761	1762	.

O	1763	1767	This
O	1768	1770	is
O	1771	1775	just
O	1776	1789	configuration
O	1789	1790	.

O	1791	1794	You
O	1795	1797	do
O	1798	1801	not
O	1802	1806	even
O	1807	1811	have
O	1812	1814	to
O	1815	1817	do
O	1818	1826	anything
O	1827	1831	code
O	1831	1832	-
O	1832	1836	wise
O	1836	1837	.

O	1838	1839	(
O	1839	1843	true
O	1843	1844	,
O	1845	1849	back
O	1850	1852	in
O	1853	1856	old
O	1857	1861	days
O	1862	1865	you
O	1866	1869	may
O	1870	1874	have
O	1875	1878	had
O	1879	1881	to
O	1882	1888	create
O	1889	1893	your
O	1894	1897	own
O	1898	1907	Formatter
O	1908	1913	class
O	1914	1916	to
O	1917	1920	get
O	1921	1923	it
O	1924	1929	right
O	1929	1930	)
O	1930	1931	.

O	1932	1933	#
O	1933	1935	li
O	1936	1937	"
O	1937	1938	I
O	1939	1942	use
O	1943	1948	other
O	1949	1958	libraries
O	1959	1963	that
O	1964	1968	also
O	1969	1972	use
O	1973	1980	logging
O	1980	1981	-
O	1981	1990	framework
O	1990	1991	-
O	1991	1992	X
O	1993	1995	so
O	1996	1997	I
O	1998	2005	thought
O	2006	2008	it
O	2009	2015	easier
O	2016	2020	just
O	2021	2023	to
O	2024	2027	use
O	2028	2032	that
O	2033	2036	one
O	2036	2037	"
O	2038	2039	.

O	2040	2044	This
O	2045	2047	is
O	2048	2049	a
O	2050	2056	cyclic
O	2057	2065	argument
O	2065	2066	,
O	2067	2070	isn
O	2070	2071	'
O	2071	2072	t
O	2073	2074	?

O	2075	2078	Why
O	2079	2083	does
O	2084	2085	'
O	2085	2094	everybody
O	2094	2095	'
O	2096	2099	use
O	2100	2107	logging
O	2107	2108	-
O	2108	2117	framework
O	2117	2118	-
O	2118	2119	X
O	2120	2123	and
O	2124	2127	not
B-api_mention	2128	2131	JUL
O	2131	2132	?

O	2133	2134	#
O	2134	2136	li
O	2137	2138	"
O	2138	2147	Everybody
O	2148	2152	else
O	2153	2155	is
O	2156	2161	using
O	2162	2169	logging
O	2169	2170	-
O	2170	2179	framework
O	2179	2180	-
O	2180	2181	X
O	2181	2182	"
O	2183	2184	.

O	2185	2189	This
O	2190	2192	to
O	2193	2195	me
O	2196	2198	is
O	2199	2203	just
O	2204	2205	a
O	2206	2213	special
O	2214	2218	case
O	2219	2221	of
O	2222	2225	the
O	2226	2231	above
O	2231	2232	.

O	2233	2241	Majority
O	2242	2244	is
O	2245	2248	not
O	2249	2255	always
O	2256	2261	right
O	2261	2262	.

O	2263	2265	So
O	2266	2269	the
O	2270	2274	real
O	2275	2278	big
O	2279	2287	question
O	2288	2290	is
O	2291	2294	why
O	2295	2298	not
B-api_mention	2299	2302	JUL
O	2302	2303	?

O	2304	2305	.
O	2306	2310	What
O	2311	2313	is
O	2314	2316	it
O	2317	2318	I
O	2319	2323	have
O	2324	2330	missed
O	2331	2332	?

O	2333	2336	The
O	2337	2343	raison
O	2344	2345	d
O	2345	2346	'
O	2346	2347	Ãª
O	2347	2350	tre
O	2351	2354	for
O	2355	2362	logging
O	2363	2370	facades
O	2371	2372	(
B-api_mention	2372	2377	SLF4J
O	2377	2378	,
B-api_mention	2379	2382	JCL
O	2382	2383	)
O	2384	2386	is
O	2387	2391	that
O	2392	2400	multiple
O	2401	2408	logging
O	2409	2424	implementations
O	2425	2429	have
O	2430	2437	existed
O	2438	2450	historically
O	2451	2454	and
O	2455	2458	the
O	2459	2465	reason
O	2466	2469	for
O	2470	2474	that
O	2475	2481	really
O	2482	2486	goes
O	2487	2491	back
O	2492	2494	to
O	2495	2498	the
O	2499	2502	era
O	2503	2509	before
B-api_mention	2510	2513	JUL
O	2514	2516	as
O	2517	2518	I
O	2519	2522	see
O	2523	2525	it
O	2525	2526	.

O	2527	2529	If
B-api_mention	2530	2533	JUL
O	2534	2537	was
O	2538	2545	perfect
O	2546	2550	then
O	2551	2558	logging
O	2559	2566	facades
O	2567	2573	wouldn
O	2573	2574	'
O	2574	2575	t
O	2576	2581	exist
O	2581	2582	,
O	2583	2585	or
O	2586	2590	what
O	2590	2591	?

O	2592	2598	Rather
O	2599	2603	than
O	2604	2613	embracing
O	2614	2618	them
O	2619	2626	shouldn
O	2626	2627	'
O	2627	2628	t
O	2629	2631	we
O	2632	2640	question
O	2641	2644	why
O	2645	2649	they
O	2650	2654	were
O	2655	2664	necessary
O	2665	2667	in
O	2668	2671	the
O	2672	2677	first
O	2678	2683	place
O	2683	2684	?

O	2685	2686	(
O	2686	2689	and
O	2690	2693	see
O	2694	2696	if
O	2697	2702	those
O	2703	2710	reasons
O	2711	2716	still
O	2717	2722	exist
O	2722	2723	)
O	2724	2726	Ok
O	2726	2727	,
O	2728	2730	my
O	2731	2739	research
O	2740	2742	so
O	2743	2746	far
O	2747	2750	has
O	2751	2754	led
O	2755	2757	to
O	2758	2759	a
O	2760	2766	couple
O	2767	2769	of
O	2770	2776	things
O	2777	2781	that
O	2782	2783	I
O	2784	2787	can
O	2788	2791	see
O	2792	2795	may
O	2796	2798	be
O	2799	2803	real
O	2804	2810	issues
O	2811	2815	with
B-api_mention	2816	2819	JUL
O	2819	2820	:
O	2821	2822	#
O	2822	2824	li
O	2825	2836	Performance
O	2837	2838	.

O	2839	2843	Some
O	2844	2847	say
O	2848	2852	that
O	2853	2864	performance
O	2865	2867	in
B-api_mention	2868	2873	SLF4J
O	2874	2876	is
O	2877	2885	superior
O	2886	2888	to
O	2889	2892	the
O	2893	2897	rest
O	2897	2898	.

O	2899	2903	This
O	2904	2909	seems
O	2910	2912	to
O	2913	2915	me
O	2916	2918	to
O	2919	2921	be
O	2922	2923	a
O	2924	2928	case
O	2929	2931	of
O	2932	2941	premature
O	2942	2954	optimization
O	2954	2955	.

O	2956	2958	If
O	2959	2962	you
O	2963	2967	need
O	2968	2970	to
O	2971	2974	log
O	2975	2983	hundreds
O	2984	2986	of
O	2987	2996	megabytes
O	2997	3000	per
O	3001	3007	second
O	3008	3012	then
O	3013	3014	I
O	3014	3015	'
O	3015	3016	m
O	3017	3020	not
O	3021	3025	sure
O	3026	3029	you
O	3030	3033	are
O	3034	3036	on
O	3037	3040	the
O	3041	3046	right
O	3047	3051	path
O	3052	3058	anyway
O	3058	3059	.

B-api_mention	3060	3063	JUL
O	3064	3067	has
O	3068	3072	also
O	3073	3080	evolved
O	3081	3084	and
O	3085	3088	the
O	3089	3094	tests
O	3095	3098	you
O	3099	3102	did
O	3103	3105	on
O	3106	3110	Java
O	3111	3112	1
O	3112	3113	.
O	3113	3114	4
O	3115	3118	may
O	3119	3121	no
O	3122	3128	longer
O	3129	3131	be
O	3132	3136	true
O	3136	3137	.

O	3138	3141	You
O	3142	3145	can
O	3146	3150	read
O	3151	3156	about
O	3157	3159	it
O	3160	3164	here
O	3165	3168	and
O	3169	3173	this
O	3174	3177	fix
O	3178	3181	has
O	3182	3186	made
O	3187	3189	it
O	3190	3194	into
O	3195	3199	Java
O	3200	3201	7
O	3201	3202	.

O	3203	3207	Many
O	3208	3212	also
O	3213	3217	talk
O	3218	3223	about
O	3224	3227	the
O	3228	3236	overhead
O	3237	3239	of
O	3240	3246	string
O	3247	3260	concatenation
O	3261	3263	in
O	3264	3271	logging
O	3272	3279	methods
O	3279	3280	.

O	3281	3288	However
O	3289	3297	template
O	3298	3303	based
O	3304	3311	logging
O	3312	3318	avoids
O	3319	3323	this
O	3324	3328	cost
O	3329	3332	and
O	3333	3335	it
O	3336	3341	exist
O	3342	3346	also
O	3347	3349	in
B-api_mention	3350	3353	JUL
O	3353	3354	.

O	3355	3365	Personally
O	3366	3367	I
O	3368	3373	never
O	3374	3380	really
O	3381	3386	write
O	3387	3395	template
O	3396	3401	based
O	3402	3409	logging
O	3409	3410	.

O	3411	3414	Too
O	3415	3419	lazy
O	3420	3423	for
O	3424	3428	that
O	3428	3429	.

O	3430	3433	For
O	3434	3441	example
O	3442	3444	if
O	3445	3446	I
O	3447	3449	do
O	3450	3454	this
O	3455	3459	with
B-api_mention	3460	3463	JUL
O	3463	3464	:
B-api_mention	3465	3468	log
I-api_mention	3468	3469	.
I-api_mention	3469	3475	finest
I-api_mention	3475	3476	(
I-api_mention	3476	3480	args
I-api_mention	3480	3481	)
O	3481	3482	)
O	3482	3483	;
O	3484	3486	my
O	3487	3490	IDE
O	3491	3495	will
O	3496	3500	warn
O	3501	3503	me
O	3504	3507	and
O	3508	3511	ask
O	3512	3522	permission
O	3523	3527	that
O	3528	3530	it
O	3531	3537	should
O	3538	3544	change
O	3545	3547	it
O	3548	3550	to
O	3550	3551	:
B-api_mention	3552	3555	log
I-api_mention	3555	3556	.
I-api_mention	3556	3559	log
I-api_mention	3559	3560	(
I-api_mention	3560	3564	args
I-api_mention	3564	3565	)
O	3565	3566	;
O	3567	3568	.
O	3568	3569	.
O	3570	3575	which
O	3576	3577	I
O	3578	3582	will
O	3583	3585	of
O	3586	3592	course
O	3593	3599	accept
O	3599	3600	.

O	3601	3611	Permission
O	3612	3619	granted
O	3620	3621	!

O	3622	3627	Thank
O	3628	3631	you
O	3632	3635	for
O	3636	3640	your
O	3641	3645	help
O	3645	3646	.

O	3647	3649	So
O	3650	3651	I
O	3652	3655	don
O	3655	3656	'
O	3656	3657	t
O	3658	3666	actually
O	3667	3672	write
O	3673	3677	such
O	3678	3688	statements
O	3689	3695	myself
O	3695	3696	,
O	3697	3701	that
O	3702	3704	is
O	3705	3709	done
O	3710	3712	by
O	3713	3716	the
O	3717	3720	IDE
O	3720	3721	.

O	3722	3724	In
O	3725	3735	conclusion
O	3736	3738	on
O	3739	3742	the
O	3743	3748	issue
O	3749	3751	of
O	3752	3763	performance
O	3764	3765	I
O	3766	3771	haven
O	3771	3772	'
O	3772	3773	t
O	3774	3779	found
O	3780	3788	anything
O	3789	3793	that
O	3794	3799	would
O	3800	3807	suggest
O	3808	3812	that
B-api_mention	3813	3816	JUL
O	3816	3817	'
O	3817	3818	s
O	3819	3830	performance
O	3831	3833	is
O	3834	3837	not
O	3838	3840	ok
O	3841	3849	compared
O	3850	3852	to
O	3853	3856	the
O	3857	3868	competition
O	3868	3869	.

O	3870	3871	#
O	3871	3873	li
O	3874	3887	Configuration
O	3888	3892	from
O	3893	3902	classpath
O	3903	3904	.

O	3905	3908	Out
O	3908	3909	-
O	3909	3911	of
O	3911	3912	-
O	3912	3915	the
O	3915	3916	-
O	3916	3919	box
B-api_mention	3920	3923	JUL
O	3924	3930	cannot
O	3931	3935	load
O	3936	3937	a
O	3938	3951	configuration
O	3952	3956	file
O	3957	3961	from
O	3962	3965	the
O	3966	3975	classpath
O	3975	3976	.

O	3977	3979	It
O	3980	3982	is
O	3983	3984	a
O	3985	3988	few
O	3989	3994	lines
O	3995	3997	of
O	3998	4002	code
O	4003	4005	to
O	4006	4010	make
O	4011	4013	it
O	4014	4016	do
O	4017	4019	so
O	4019	4020	.

O	4021	4022	I
O	4023	4026	can
O	4027	4030	see
O	4031	4034	why
O	4035	4039	this
O	4040	4043	may
O	4044	4046	be
O	4047	4055	annoying
O	4056	4059	but
O	4060	4063	the
O	4064	4072	solution
O	4073	4075	is
O	4076	4081	short
O	4082	4085	and
O	4086	4092	simple
O	4092	4093	.

O	4094	4095	#
O	4095	4097	li
O	4098	4110	Availability
O	4111	4113	of
O	4114	4120	output
O	4121	4129	handlers
O	4130	4131	.

B-api_mention	4132	4135	JUL
O	4136	4141	comes
O	4142	4146	with
O	4147	4148	5
O	4149	4155	output
O	4156	4164	handlers
O	4165	4168	out
O	4168	4169	-
O	4169	4171	of
O	4171	4172	-
O	4172	4175	the
O	4175	4176	-
O	4176	4179	box
O	4179	4180	:
O	4181	4188	console
O	4188	4189	,
O	4190	4194	file
O	4195	4201	stream
O	4201	4202	,
O	4203	4209	socket
O	4210	4213	and
O	4214	4220	memory
O	4220	4221	.

O	4222	4227	These
O	4228	4231	can
O	4232	4234	be
O	4235	4243	extended
O	4244	4246	or
O	4247	4250	new
O	4251	4255	ones
O	4256	4259	can
O	4260	4262	be
O	4263	4270	written
O	4270	4271	.

O	4272	4276	This
O	4277	4280	may
O	4281	4284	for
O	4285	4292	example
O	4293	4295	be
O	4296	4303	writing
O	4304	4306	to
O	4307	4311	UNIX
O	4311	4312	/
O	4312	4317	Linux
O	4318	4324	Syslog
O	4325	4328	and
O	4329	4336	Windows
O	4337	4342	Event
O	4343	4346	Log
O	4346	4347	.

O	4348	4349	I
O	4350	4354	have
O	4355	4365	personally
O	4366	4371	never
O	4372	4375	had
O	4376	4380	this
O	4381	4392	requirement
O	4393	4396	nor
O	4397	4401	have
O	4402	4403	I
O	4404	4408	seen
O	4409	4411	it
O	4412	4416	used
O	4417	4420	but
O	4421	4422	I
O	4423	4426	can
O	4427	4436	certainly
O	4437	4443	relate
O	4444	4446	to
O	4447	4450	why
O	4451	4453	it
O	4454	4457	may
O	4458	4460	be
O	4461	4462	a
O	4463	4469	useful
O	4470	4477	feature
O	4477	4478	.

B-api_mention	4479	4486	Logback
O	4487	4492	comes
O	4493	4497	with
O	4498	4500	an
O	4501	4509	appender
O	4510	4513	for
O	4514	4520	Syslog
O	4521	4524	for
O	4525	4532	example
O	4532	4533	.

O	4534	4539	Still
O	4540	4541	I
O	4542	4547	would
O	4548	4553	argue
O	4554	4558	that
O	4559	4560	#
O	4560	4562	li
O	4563	4565	99
O	4565	4566	.
O	4566	4567	5
O	4567	4568	%
O	4569	4571	of
O	4572	4575	the
O	4576	4581	needs
O	4582	4585	for
O	4586	4592	output
O	4593	4605	destinations
O	4606	4609	are
O	4610	4617	covered
O	4618	4620	by
O	4621	4625	what
O	4626	4628	is
O	4629	4631	in
B-api_mention	4632	4635	JUL
O	4636	4639	out
O	4639	4640	-
O	4640	4642	of
O	4642	4643	-
O	4643	4646	the
O	4646	4647	-
O	4647	4650	box
O	4650	4651	.

O	4652	4653	#
O	4653	4655	li
O	4656	4663	Special
O	4664	4669	needs
O	4670	4675	could
O	4676	4678	be
O	4679	4686	catered
O	4687	4690	for
O	4691	4693	by
O	4694	4700	custom
O	4701	4709	handlers
O	4710	4712	on
O	4713	4716	top
O	4717	4719	of
B-api_mention	4720	4723	JUL
O	4724	4730	rather
O	4731	4735	than
O	4736	4738	on
O	4739	4742	top
O	4743	4745	of
O	4746	4755	something
O	4756	4760	else
O	4760	4761	.

O	4762	4767	There
O	4767	4768	'
O	4768	4769	s
O	4770	4777	nothing
O	4778	4780	to
O	4781	4783	me
O	4784	4788	that
O	4789	4797	suggests
O	4798	4802	that
O	4803	4805	it
O	4806	4811	takes
O	4812	4816	more
O	4817	4821	time
O	4822	4824	to
O	4825	4830	write
O	4831	4832	a
O	4833	4839	Syslog
O	4840	4846	output
O	4847	4854	handler
O	4855	4858	for
B-api_mention	4859	4862	JUL
O	4863	4867	than
O	4868	4870	it
O	4871	4875	does
O	4876	4879	for
O	4880	4887	another
O	4888	4895	logging
O	4896	4905	framework
O	4905	4906	.

O	4907	4908	I
O	4908	4909	'
O	4909	4910	m
O	4911	4917	really
O	4918	4927	concerned
O	4928	4932	that
O	4933	4938	there
O	4938	4939	'
O	4939	4940	s
O	4941	4950	something
O	4951	4952	I
O	4952	4953	'
O	4953	4955	ve
O	4956	4966	overlooked
O	4966	4967	.

O	4968	4971	The
O	4972	4975	use
O	4976	4978	of
O	4979	4986	logging
O	4987	4994	facades
O	4995	4998	and
O	4999	5006	logging
O	5007	5022	implementations
O	5023	5028	other
O	5029	5033	than
B-api_mention	5034	5037	JUL
O	5038	5040	is
O	5041	5043	so
O	5044	5054	widespread
O	5055	5059	that
O	5060	5061	I
O	5062	5066	have
O	5067	5069	to
O	5070	5074	come
O	5075	5077	to
O	5078	5081	the
O	5082	5092	conclusion
O	5093	5097	that
O	5098	5100	it
O	5100	5101	'
O	5101	5102	s
O	5103	5105	me
O	5106	5109	who
O	5110	5114	just
O	5115	5120	doesn
O	5120	5121	'
O	5121	5122	t
O	5123	5133	understand
O	5133	5134	.

O	5135	5139	That
O	5140	5146	wouldn
O	5146	5147	'
O	5147	5148	t
O	5149	5151	be
O	5152	5155	the
O	5156	5161	first
O	5162	5166	time
O	5166	5167	,
O	5168	5169	I
O	5169	5170	'
O	5170	5171	m
O	5172	5178	afraid
O	5178	5179	.

O	5180	5181	:
O	5181	5182	-
O	5182	5183	)
O	5184	5186	So
O	5187	5191	what
O	5192	5198	should
O	5199	5200	I
O	5201	5203	do
O	5204	5208	with
O	5209	5211	my
O	5212	5215	API
O	5215	5216	?

O	5217	5218	I
O	5219	5223	want
O	5224	5226	it
O	5227	5229	to
O	5230	5236	become
O	5237	5247	successful
O	5247	5248	.

O	5249	5250	I
O	5251	5254	can
O	5255	5257	of
O	5258	5264	course
O	5265	5269	just
O	5270	5271	"
O	5271	5273	go
O	5274	5278	with
O	5279	5282	the
O	5283	5287	flow
O	5287	5288	"
O	5289	5292	and
O	5293	5302	implement
B-api_mention	5303	5308	SLF4J
O	5309	5310	(
O	5310	5315	which
O	5316	5321	seems
O	5322	5325	the
O	5326	5330	most
O	5331	5338	popular
O	5339	5344	these
O	5345	5349	days
O	5349	5350	)
O	5351	5354	but
O	5355	5358	for
O	5359	5361	my
O	5362	5365	own
O	5366	5370	sake
O	5371	5372	I
O	5373	5378	still
O	5379	5383	need
O	5384	5386	to
O	5387	5397	understand
O	5398	5405	exactly
O	5406	5410	what
O	5411	5413	is
O	5414	5419	wrong
O	5420	5424	with
O	5425	5428	the
B-api_mention	5429	5432	JUL
O	5433	5435	of
O	5436	5441	today
O	5442	5446	that
O	5447	5455	warrants
O	5456	5459	all
O	5460	5463	the
O	5464	5468	fuzz
O	5468	5469	?

O	5470	5474	Will
O	5475	5476	I
O	5477	5485	sabotage
O	5486	5492	myself
O	5493	5495	by
O	5496	5504	choosing
B-api_mention	5505	5508	JUL
O	5509	5512	for
O	5513	5515	my
O	5516	5523	library
O	5524	5525	?

O	5526	5533	Testing
O	5534	5545	performance
O	5546	5547	(
O	5547	5554	section
O	5555	5560	added
O	5561	5563	by
O	5564	5572	nolan600
O	5573	5575	on
O	5576	5578	07
O	5578	5579	-
O	5579	5582	JUL
O	5582	5583	-
O	5583	5587	2012
O	5587	5588	)
O	5589	5594	There
O	5594	5595	'
O	5595	5596	s
O	5597	5598	a
O	5599	5608	reference
O	5609	5614	below
O	5615	5619	from
O	5620	5624	Ceki
O	5625	5630	about
B-api_mention	5631	5636	SLF4J
O	5636	5637	'
O	5637	5638	s
O	5639	5654	parametrization
O	5655	5660	being
O	5661	5663	10
O	5664	5669	times
O	5670	5672	or
O	5673	5677	more
O	5678	5684	faster
O	5685	5689	than
B-api_mention	5690	5693	JUL
O	5693	5694	'
O	5694	5695	s
O	5695	5696	.

O	5697	5699	So
O	5700	5701	I
O	5701	5702	'
O	5702	5704	ve
O	5705	5712	started
O	5713	5718	doing
O	5719	5723	some
O	5724	5730	simple
O	5731	5736	tests
O	5736	5737	.

O	5738	5740	At
O	5741	5746	first
O	5747	5753	glance
O	5754	5757	the
O	5758	5763	claim
O	5764	5766	is
O	5767	5776	certainly
O	5777	5784	correct
O	5784	5785	.

O	5786	5790	Here
O	5791	5794	are
O	5795	5798	the
O	5799	5810	preliminary
O	5811	5818	results
O	5819	5820	(
O	5820	5823	but
O	5824	5828	read
O	5829	5831	on
O	5831	5832	!
O	5832	5833	)
O	5833	5834	:
O	5835	5836	#
O	5836	5838	li
O	5839	5848	Execution
O	5849	5853	time
B-api_mention	5854	5859	SLF4J
O	5859	5860	,
O	5861	5868	backend
O	5869	5876	Logback
O	5876	5877	:
O	5878	5882	1515
O	5883	5884	#
O	5884	5886	li
O	5887	5896	Execution
O	5897	5901	time
B-api_mention	5902	5907	SLF4J
O	5907	5908	,
O	5909	5916	backend
B-api_mention	5917	5920	JUL
O	5920	5921	:
O	5922	5927	12938
O	5928	5929	#
O	5929	5931	li
O	5932	5941	Execution
O	5942	5946	time
B-api_mention	5947	5950	JUL
O	5950	5951	:
O	5952	5957	16911
O	5958	5961	The
O	5962	5969	numbers
O	5970	5975	above
O	5976	5979	are
O	5980	5985	msecs
O	5986	5988	so
O	5989	5993	less
O	5994	5996	is
O	5997	6003	better
O	6003	6004	.

O	6005	6007	So
O	6008	6010	10
O	6011	6016	times
O	6017	6028	performance
O	6029	6039	difference
O	6040	6042	is
O	6043	6045	by
O	6046	6051	first
O	6052	6060	actually
O	6061	6067	pretty
O	6068	6073	close
O	6073	6074	.

O	6075	6077	My
O	6078	6085	initial
O	6086	6094	reaction
O	6094	6095	:
O	6096	6100	That
O	6101	6103	is
O	6104	6105	a
O	6106	6109	lot
O	6110	6111	!

O	6112	6116	Here
O	6117	6119	is
O	6120	6123	the
O	6124	6128	core
O	6129	6131	of
O	6132	6135	the
O	6136	6140	test
O	6140	6141	.

O	6142	6144	As
O	6145	6148	can
O	6149	6151	be
O	6152	6156	seen
O	6157	6159	an
O	6160	6167	integer
O	6168	6171	and
O	6172	6173	a
O	6174	6180	string
O	6181	6183	is
O	6184	6194	construted
O	6195	6197	in
O	6198	6199	a
O	6200	6204	loop
O	6205	6210	which
O	6211	6213	is
O	6214	6218	then
O	6219	6223	used
O	6224	6226	in
O	6227	6230	the
O	6231	6234	log
O	6235	6244	statement
O	6244	6245	:
O	6246	6247	#
O	6247	6250	pre
O	6251	6252	(
O	6252	6253	I
O	6254	6260	wanted
O	6261	6264	the
O	6265	6268	log
O	6269	6278	statement
O	6279	6281	to
O	6282	6286	have
O	6287	6291	both
O	6292	6293	a
O	6294	6303	primitive
O	6304	6308	data
O	6309	6313	type
O	6314	6315	(
O	6315	6317	in
O	6318	6322	this
O	6323	6327	case
O	6328	6330	an
O	6331	6334	int
O	6334	6335	)
O	6336	6339	and
O	6340	6341	a
O	6342	6346	more
O	6347	6354	complex
O	6355	6359	data
O	6360	6364	type
O	6365	6366	(
O	6366	6368	in
O	6369	6373	this
O	6374	6378	case
O	6379	6380	a
B-api_mention	6381	6387	String
O	6387	6388	)
O	6388	6389	.
O	6390	6393	Not
O	6394	6398	sure
O	6399	6401	it
O	6402	6409	matters
O	6410	6413	but
O	6414	6419	there
O	6420	6423	you
O	6424	6428	have
O	6429	6431	it
O	6431	6432	.
O	6432	6433	)
O	6434	6437	The
O	6438	6441	log
O	6442	6451	statement
O	6452	6455	for
B-api_mention	6456	6461	SLF4J
O	6461	6462	:
B-api_mention	6463	6469	logger
I-api_mention	6469	6470	.
I-api_mention	6470	6474	info
I-api_mention	6474	6475	(
I-api_mention	6475	6479	args
I-api_mention	6479	6480	)
O	6480	6481	;
O	6482	6485	The
O	6486	6489	log
O	6490	6499	statement
O	6500	6503	for
B-api_mention	6504	6507	JUL
O	6507	6508	:
B-api_mention	6509	6515	logger
I-api_mention	6515	6516	.
I-api_mention	6516	6519	log
I-api_mention	6519	6520	(
I-api_mention	6520	6524	args
I-api_mention	6524	6525	)
O	6525	6526	;
O	6527	6530	The
O	6531	6534	JVM
O	6535	6538	was
O	6539	6540	'
O	6540	6546	warmed
O	6547	6549	up
O	6549	6550	'
O	6551	6555	with
O	6556	6559	the
O	6560	6564	same
O	6565	6569	test
O	6570	6578	executed
O	6579	6583	once
O	6584	6590	before
O	6591	6594	the
O	6595	6601	actual
O	6602	6613	measurement
O	6614	6617	was
O	6618	6622	done
O	6622	6623	.

O	6624	6628	Java
O	6629	6630	1
O	6630	6631	.
O	6631	6632	7
O	6632	6633	.
O	6633	6635	03
O	6636	6639	was
O	6640	6644	used
O	6645	6647	on
O	6648	6655	Windows
O	6656	6657	7
O	6657	6658	.

O	6659	6665	Latest
O	6666	6674	versions
O	6675	6677	of
B-api_mention	6678	6683	SLF4J
O	6684	6685	(
O	6685	6687	v1
O	6687	6688	.
O	6688	6689	6
O	6689	6690	.
O	6690	6691	6
O	6691	6692	)
O	6693	6696	and
B-api_mention	6697	6704	Logback
O	6705	6706	(
O	6706	6708	v1
O	6708	6709	.
O	6709	6710	0
O	6710	6711	.
O	6711	6712	6
O	6712	6713	)
O	6714	6717	was
O	6718	6722	used
O	6722	6723	.

O	6724	6730	Stdout
O	6731	6734	and
O	6735	6741	stderr
O	6742	6745	was
O	6746	6756	redirected
O	6757	6759	to
O	6760	6764	null
O	6765	6771	device
O	6771	6772	.

O	6773	6780	However
O	6780	6781	,
O	6782	6789	careful
O	6790	6793	now
O	6793	6794	,
O	6795	6797	it
O	6798	6803	turns
O	6804	6807	out
O	6808	6811	JUL
O	6812	6814	is
O	6815	6823	spending
O	6824	6828	most
O	6829	6831	of
O	6832	6835	its
O	6836	6840	time
O	6841	6843	in
B-api_mention	6844	6862	getSourceClassName
I-api_mention	6862	6863	(
I-api_mention	6863	6867	args
I-api_mention	6867	6868	)
O	6869	6876	because
B-api_mention	6877	6880	JUL
O	6881	6883	by
O	6884	6891	default
O	6892	6898	prints
O	6899	6902	the
O	6903	6909	source
O	6910	6915	class
O	6916	6920	name
O	6921	6923	in
O	6924	6927	the
O	6928	6934	output
O	6934	6935	,
O	6936	6941	while
B-api_mention	6942	6949	Logback
O	6950	6955	doesn
O	6955	6956	'
O	6956	6957	t
O	6957	6958	.

O	6959	6961	So
O	6962	6964	we
O	6965	6968	are
O	6969	6978	comparing
O	6979	6985	apples
O	6986	6989	and
O	6990	6997	oranges
O	6997	6998	.

O	6999	7000	I
O	7001	7005	have
O	7006	7008	to
O	7009	7011	do
O	7012	7015	the
O	7016	7020	test
O	7021	7026	again
O	7027	7030	and
O	7031	7040	configure
O	7041	7044	the
O	7045	7052	logging
O	7053	7068	implementations
O	7069	7071	in
O	7072	7073	a
O	7074	7081	similar
O	7082	7088	manner
O	7089	7091	so
O	7092	7096	that
O	7097	7101	they
O	7102	7110	actually
O	7111	7117	output
O	7118	7121	the
O	7122	7126	same
O	7127	7132	stuff
O	7132	7133	.

O	7134	7135	I
O	7136	7138	do
O	7139	7146	however
O	7147	7154	suspect
O	7155	7159	that
B-api_mention	7160	7165	SLF4J
O	7165	7166	+
B-api_mention	7166	7173	Logback
O	7174	7178	will
O	7179	7184	still
O	7185	7189	come
O	7190	7193	out
O	7194	7196	on
O	7197	7200	top
O	7201	7204	but
O	7205	7208	far
O	7209	7213	from
O	7214	7217	the
O	7218	7225	initial
O	7226	7233	numbers
O	7234	7236	as
O	7237	7242	given
O	7243	7248	above
O	7248	7249	.

O	7250	7254	Stay
O	7255	7260	tuned
O	7260	7261	.

O	7262	7265	Btw
O	7265	7266	:
O	7267	7270	The
O	7271	7275	test
O	7276	7279	was
O	7280	7285	first
O	7286	7290	time
O	7291	7292	I
O	7292	7293	'
O	7293	7295	ve
O	7296	7304	actually
O	7305	7311	worked
O	7312	7316	with
B-api_mention	7317	7322	SLF4J
O	7323	7325	or
B-api_mention	7326	7333	Logback
O	7333	7334	.

O	7335	7336	A
O	7337	7345	pleasant
O	7346	7356	experience
O	7356	7357	.

B-api_mention	7358	7361	JUL
O	7362	7364	is
O	7365	7374	certainly
O	7375	7376	a
O	7377	7380	lot
O	7381	7385	less
O	7386	7395	welcoming
O	7396	7400	when
O	7401	7404	you
O	7405	7408	are
O	7409	7417	starting
O	7418	7421	out
O	7421	7422	.

O	7423	7430	Testing
O	7431	7442	performance
O	7443	7444	(
O	7444	7448	part
O	7449	7450	2
O	7450	7451	)
O	7452	7453	(
O	7453	7460	section
O	7461	7466	added
O	7467	7469	by
O	7470	7478	nolan600
O	7479	7481	on
O	7482	7484	08
O	7484	7485	-
O	7485	7488	JUL
O	7488	7489	-
O	7489	7493	2012
O	7493	7494	)
O	7495	7497	As
O	7498	7500	it
O	7501	7506	turns
O	7507	7510	out
O	7511	7513	it
O	7514	7519	doesn
O	7519	7520	'
O	7520	7521	t
O	7522	7528	really
O	7529	7535	matter
O	7536	7539	for
O	7540	7551	performance
O	7552	7555	how
O	7556	7559	you
O	7560	7569	configure
O	7570	7574	your
O	7575	7582	pattern
O	7583	7585	in
B-api_mention	7586	7589	JUL
O	7589	7590	,
O	7591	7592	i
O	7592	7593	.
O	7593	7594	e
O	7594	7595	.
O	7596	7603	whether
O	7604	7606	or
O	7607	7610	not
O	7611	7613	it
O	7614	7622	includes
O	7623	7626	the
O	7627	7633	source
O	7634	7638	name
O	7639	7641	or
O	7642	7645	not
O	7645	7646	.

O	7647	7648	I
O	7649	7654	tried
O	7655	7659	with
O	7660	7661	a
O	7662	7666	very
O	7667	7673	simple
O	7674	7681	pattern
O	7681	7682	:
B-api_mention	7683	7687	java
I-api_mention	7687	7688	.
I-api_mention	7688	7692	util
I-api_mention	7692	7693	.
I-api_mention	7693	7700	logging
I-api_mention	7700	7701	.
I-api_mention	7701	7716	SimpleFormatter
I-api_mention	7716	7717	.
I-api_mention	7717	7723	format
O	7723	7724	=
O	7724	7737	StringLiteral
O	7738	7741	and
O	7742	7746	that
O	7747	7750	did
O	7751	7754	not
O	7755	7761	change
O	7762	7765	the
O	7766	7771	above
O	7772	7779	timings
O	7780	7782	at
O	7783	7786	all
O	7786	7787	.

O	7788	7790	My
O	7791	7799	profiler
O	7800	7808	revealed
O	7809	7813	that
O	7814	7817	the
O	7818	7824	logger
O	7825	7830	still
O	7831	7836	spent
O	7837	7838	a
O	7839	7842	lot
O	7843	7845	of
O	7846	7850	time
O	7851	7853	in
O	7854	7859	calls
O	7860	7862	to
B-api_mention	7863	7881	getSourceClassName
I-api_mention	7881	7882	(
I-api_mention	7882	7886	args
I-api_mention	7886	7887	)
O	7888	7892	even
O	7893	7895	if
O	7896	7900	this
O	7901	7904	was
O	7905	7908	not
O	7909	7913	part
O	7914	7916	of
O	7917	7919	my
O	7920	7927	pattern
O	7927	7928	.

O	7929	7932	The
O	7933	7940	pattern
O	7941	7946	doesn
O	7946	7947	'
O	7947	7948	t
O	7949	7955	matter
O	7955	7956	.

O	7957	7958	I
O	7958	7959	'
O	7959	7960	m
O	7961	7970	therefore
O	7971	7981	concluding
O	7982	7984	on
O	7985	7988	the
O	7989	7994	issue
O	7995	7997	of
O	7998	8009	performance
O	8010	8014	that
O	8015	8017	at
O	8018	8023	least
O	8024	8027	for
O	8028	8031	the
O	8032	8038	tested
O	8039	8047	template
O	8048	8053	based
O	8054	8057	log
O	8058	8067	statement
O	8068	8073	there
O	8074	8079	seems
O	8080	8082	to
O	8083	8085	be
O	8086	8093	roughly
O	8094	8095	a
O	8096	8102	factor
O	8103	8105	of
O	8106	8108	10
O	8109	8111	in
O	8112	8116	real
O	8117	8128	performance
O	8129	8139	difference
O	8140	8147	between
B-api_mention	8148	8151	JUL
O	8152	8153	(
O	8153	8157	slow
O	8157	8158	)
O	8159	8162	and
B-api_mention	8163	8168	SLF4J
O	8168	8169	+
B-api_mention	8169	8176	Logback
O	8177	8178	(
O	8178	8183	quick
O	8183	8184	)
O	8184	8185	.

O	8186	8190	Just
O	8191	8195	like
O	8196	8200	Ceki
O	8201	8205	said
O	8205	8206	.

O	8207	8208	I
O	8209	8212	can
O	8213	8217	also
O	8218	8221	see
O	8222	8229	another
O	8230	8235	thing
O	8236	8242	namely
O	8243	8247	that
B-api_mention	8248	8253	SLF4J
O	8253	8254	'
O	8254	8255	s
B-api_mention	8256	8265	getLogger
I-api_mention	8265	8266	(
I-api_mention	8266	8270	args
I-api_mention	8270	8271	)
O	8272	8276	call
O	8277	8279	is
O	8280	8281	a
O	8282	8285	lot
O	8286	8290	more
O	8291	8300	expensive
O	8301	8305	than
B-api_mention	8306	8309	JUL
O	8309	8310	'
O	8310	8311	s
O	8312	8317	ditto
O	8317	8318	.

O	8319	8320	(
O	8320	8322	95
O	8323	8325	ms
O	8326	8328	vs
O	8329	8330	0
O	8330	8331	.
O	8331	8332	3
O	8333	8335	ms
O	8336	8338	if
O	8339	8341	my
O	8342	8350	profiler
O	8351	8353	is
O	8354	8362	accurate
O	8362	8363	)
O	8363	8364	.

O	8365	8369	This
O	8370	8375	makes
O	8376	8381	sense
O	8381	8382	.

B-api_mention	8383	8388	SLF4J
O	8389	8392	has
O	8393	8395	to
O	8396	8398	do
O	8399	8403	some
O	8404	8408	time
O	8409	8411	on
O	8412	8415	the
O	8416	8423	binding
O	8424	8426	of
O	8427	8430	the
O	8431	8441	underlying
O	8442	8449	logging
O	8450	8464	implementation
O	8464	8465	.

O	8466	8470	This
O	8471	8476	doesn
O	8476	8477	'
O	8477	8478	t
O	8479	8484	scare
O	8485	8487	me
O	8487	8488	.

O	8489	8494	These
O	8495	8500	calls
O	8501	8507	should
O	8508	8510	be
O	8511	8519	somewhat
O	8520	8524	rare
O	8525	8527	in
O	8528	8531	the
O	8532	8540	lifetime
O	8541	8543	of
O	8544	8546	an
O	8547	8558	application
O	8558	8559	.

O	8560	8563	The
O	8564	8572	fastness
O	8573	8579	should
O	8580	8582	be
O	8583	8585	in
O	8586	8589	the
O	8590	8596	actual
O	8597	8600	log
O	8601	8606	calls
O	8606	8607	.

O	8608	8613	Final
O	8614	8624	conclusion
O	8625	8626	(
O	8626	8633	section
O	8634	8639	added
O	8640	8642	by
O	8643	8651	nolan600
O	8652	8654	on
O	8655	8657	08
O	8657	8658	-
O	8658	8661	JUL
O	8661	8662	-
O	8662	8666	2012
O	8666	8667	)
O	8668	8673	Thank
O	8674	8677	you
O	8678	8681	for
O	8682	8685	all
O	8686	8690	your
O	8691	8698	answers
O	8698	8699	.

O	8700	8708	Contrary
O	8709	8711	to
O	8712	8716	what
O	8717	8718	I
O	8719	8728	initially
O	8729	8736	thought
O	8737	8738	I
O	8738	8739	'
O	8739	8741	ve
O	8742	8747	ended
O	8748	8750	up
O	8751	8759	deciding
O	8760	8762	to
O	8763	8766	use
B-api_mention	8767	8772	SLF4J
O	8773	8776	for
O	8777	8779	my
O	8780	8783	API
O	8783	8784	.

O	8785	8789	This
O	8790	8792	is
O	8793	8798	based
O	8799	8801	on
O	8802	8803	a
O	8804	8810	number
O	8811	8813	of
O	8814	8820	things
O	8821	8824	and
O	8825	8829	your
O	8830	8835	input
O	8835	8836	:
O	8837	8838	#
O	8838	8840	li
O	8841	8843	It
O	8844	8849	gives
O	8850	8861	flexibility
O	8862	8864	to
O	8865	8871	choose
O	8872	8875	log
O	8876	8890	implementation
O	8891	8893	at
O	8894	8904	deployment
O	8905	8909	time
O	8909	8910	.

O	8911	8912	#
O	8912	8914	li
O	8915	8921	Issues
O	8922	8926	with
O	8927	8931	lack
O	8932	8934	of
O	8935	8946	flexibility
O	8947	8949	of
B-api_mention	8950	8953	JUL
O	8953	8954	'
O	8954	8955	s
O	8956	8969	configuration
O	8970	8974	when
O	8975	8978	run
O	8979	8985	inside
O	8986	8988	an
O	8989	9000	application
O	9001	9007	server
O	9007	9008	.

O	9009	9010	#
O	9010	9012	li
B-api_mention	9013	9018	SLF4J
O	9019	9021	is
O	9022	9031	certainly
O	9032	9033	a
O	9034	9037	lot
O	9038	9044	faster
O	9045	9047	as
O	9048	9056	detailed
O	9057	9062	above
O	9063	9065	in
O	9066	9076	particular
O	9077	9079	if
O	9080	9083	you
O	9084	9090	couple
O	9091	9093	it
O	9094	9098	with
B-api_mention	9099	9106	Logback
O	9106	9107	.

O	9108	9112	Even
O	9113	9115	if
O	9116	9120	this
O	9121	9124	was
O	9125	9129	just
O	9130	9131	a
O	9132	9137	rough
O	9138	9142	test
O	9143	9144	I
O	9145	9149	have
O	9150	9156	reason
O	9157	9159	to
O	9160	9167	believe
O	9168	9172	that
O	9173	9174	a
O	9175	9178	lot
O	9179	9183	more
O	9184	9190	effort
O	9191	9194	has
O	9195	9199	gone
O	9200	9204	into
O	9205	9217	optimization
O	9218	9220	on
B-api_mention	9221	9226	SLF4J
O	9226	9227	+
B-api_mention	9227	9234	Logback
O	9235	9239	than
O	9240	9242	on
B-api_mention	9243	9246	JUL
O	9246	9247	.

O	9248	9249	#
O	9249	9251	li
O	9252	9265	Documentation
O	9265	9266	.

O	9267	9270	The
O	9271	9284	documentation
O	9285	9288	for
B-api_mention	9289	9294	SLF4J
O	9295	9297	is
O	9298	9304	simply
O	9305	9306	a
O	9307	9310	lot
O	9311	9315	more
O	9316	9329	comprehensive
O	9330	9333	and
O	9334	9341	precise
O	9341	9342	.

O	9343	9344	#
O	9344	9346	li
O	9347	9354	Pattern
O	9355	9366	flexibility
O	9366	9367	.

O	9368	9370	As
O	9371	9372	I
O	9373	9376	did
O	9377	9380	the
O	9381	9386	tests
O	9387	9388	I
O	9389	9392	set
O	9393	9396	out
O	9397	9399	to
O	9400	9404	have
B-api_mention	9405	9408	JUL
O	9409	9414	mimic
O	9415	9418	the
O	9419	9426	default
O	9427	9434	pattern
O	9435	9439	from
B-api_mention	9440	9447	Logback
O	9447	9448	.

O	9449	9453	This
O	9454	9461	pattern
O	9462	9470	includes
O	9471	9474	the
O	9475	9479	name
O	9480	9482	of
O	9483	9486	the
O	9487	9493	thread
O	9493	9494	.

O	9495	9497	It
O	9498	9503	turns
O	9504	9507	out
B-api_mention	9508	9511	JUL
O	9512	9518	cannot
O	9519	9521	do
O	9522	9526	this
O	9527	9530	out
O	9531	9533	of
O	9534	9537	the
O	9538	9541	box
O	9541	9542	.

O	9543	9545	Ok
O	9545	9546	,
O	9547	9548	I
O	9549	9554	haven
O	9554	9555	'
O	9555	9556	t
O	9557	9563	missed
O	9564	9566	it
O	9567	9572	until
O	9573	9576	now
O	9576	9577	,
O	9578	9581	but
O	9582	9583	I
O	9584	9587	don
O	9587	9588	'
O	9588	9589	t
O	9590	9595	think
O	9596	9598	it
O	9599	9601	is
O	9602	9603	a
O	9604	9609	thing
O	9610	9614	that
O	9615	9621	should
O	9622	9624	be
O	9625	9632	missing
O	9633	9637	from
O	9638	9639	a
O	9640	9643	log
O	9644	9653	framework
O	9653	9654	.

O	9655	9661	Period
O	9661	9662	!

O	9663	9664	#
O	9664	9666	li
O	9667	9671	Most
O	9672	9673	(
O	9673	9675	or
O	9676	9680	many
O	9680	9681	)
O	9682	9686	Java
O	9687	9695	projects
O	9696	9701	today
O	9702	9705	use
O	9706	9711	Maven
O	9712	9714	so
O	9715	9721	adding
O	9722	9723	a
O	9724	9734	dependency
O	9735	9737	is
O	9738	9741	not
O	9742	9746	that
O	9747	9750	big
O	9751	9752	a
O	9753	9758	thing
O	9759	9769	especially
O	9770	9772	if
O	9773	9777	that
O	9778	9788	dependency
O	9789	9791	is
O	9792	9798	rather
O	9799	9805	stable
O	9805	9806	,
O	9807	9808	i
O	9808	9809	.
O	9809	9810	e
O	9810	9811	.
O	9812	9817	doesn
O	9817	9818	'
O	9818	9819	t
O	9820	9830	constantly
O	9831	9837	change
O	9838	9841	its
O	9842	9845	API
O	9845	9846	.

O	9847	9851	This
O	9852	9857	seems
O	9858	9860	to
O	9861	9863	be
O	9864	9868	true
O	9869	9872	for
B-api_mention	9873	9878	SLF4J
O	9878	9879	.

O	9880	9884	Also
O	9885	9888	the
B-api_mention	9889	9894	SLF4J
O	9895	9898	jar
O	9899	9902	and
O	9903	9910	friends
O	9911	9914	are
O	9915	9920	small
O	9921	9923	in
O	9924	9928	size
O	9928	9929	.

O	9930	9932	So
O	9933	9936	the
O	9937	9944	strange
O	9945	9950	thing
O	9951	9955	that
O	9956	9964	happened
O	9965	9968	was
O	9969	9973	that
O	9974	9975	I
O	9976	9984	actually
O	9985	9988	got
O	9989	9994	quite
O	9995	10000	upset
O	10001	10005	with
B-api_mention	10006	10009	JUL
O	10010	10015	after
O	10016	10022	having
O	10023	10029	worked
O	10030	10031	a
O	10032	10035	bit
O	10036	10040	with
B-api_mention	10041	10046	SLF4J
O	10046	10047	.

O	10048	10049	I
O	10050	10055	still
O	10056	10062	regret
O	10063	10067	that
O	10068	10070	it
O	10071	10074	has
O	10075	10077	to
O	10078	10080	be
O	10081	10085	this
O	10086	10089	way
O	10090	10094	with
B-api_mention	10095	10098	JUL
O	10098	10099	.

B-api_mention	10100	10103	JUL
O	10104	10106	is
O	10107	10110	far
O	10111	10115	from
O	10116	10123	perfect
O	10124	10127	but
O	10128	10132	kind
O	10133	10135	of
O	10136	10140	does
O	10141	10144	the
O	10145	10148	job
O	10148	10149	.

O	10150	10154	Just
O	10155	10158	not
O	10159	10164	quite
O	10165	10169	well
O	10170	10176	enough
O	10176	10177	.

O	10178	10181	The
O	10182	10186	same
O	10187	10190	can
O	10191	10193	be
O	10194	10198	said
O	10199	10204	about
O	10205	10215	Properties
O	10216	10218	as
O	10219	10221	an
O	10222	10229	example
O	10230	10233	but
O	10234	10236	we
O	10237	10239	do
O	10240	10243	not
O	10244	10249	think
O	10250	10255	about
O	10256	10267	abstracting
O	10268	10272	that
O	10273	10275	so
O	10276	10282	people
O	10283	10286	can
O	10287	10291	plug
O	10292	10294	in
O	10295	10300	their
O	10301	10304	own
O	10305	10318	configuration
O	10319	10326	library
O	10327	10330	and
O	10331	10335	what
O	10336	10340	have
O	10341	10344	you
O	10344	10345	.

O	10346	10347	I
O	10348	10353	think
O	10354	10357	the
O	10358	10364	reason
O	10365	10367	is
O	10368	10372	that
O	10373	10383	Properties
O	10384	10389	comes
O	10390	10392	in
O	10393	10397	just
O	10398	10403	above
O	10404	10407	the
O	10408	10411	bar
O	10412	10417	while
O	10418	10421	the
O	10422	10430	opposite
O	10431	10433	is
O	10434	10438	true
O	10439	10442	for
B-api_mention	10443	10446	JUL
O	10447	10449	of
O	10450	10455	today
O	10456	10457	.
O	10457	10458	.
O	10458	10459	.
O	10460	10463	and
O	10464	10466	in
O	10467	10470	the
O	10471	10475	past
O	10476	10478	it
O	10479	10483	came
O	10484	10486	in
O	10487	10489	at
O	10490	10494	zero
O	10495	10502	because
O	10503	10505	it
O	10506	10510	didn
O	10510	10511	'
O	10511	10512	t
O	10513	10518	exist
O	10518	10519	.

O	10521	10529	Question
O	10529	10530	-
O	10530	10538	12317668

O	10539	10548	According
O	10549	10551	to
O	10552	10555	the
O	10556	10559	JLS
O	10559	10560	,
O	10561	10563	an
O	10564	10567	int
O	10568	10573	array
O	10574	10580	should
O	10581	10583	be
O	10584	10590	filled
O	10591	10593	by
O	10594	10599	zeros
O	10600	10604	just
O	10605	10610	after
O	10611	10625	initialization
O	10625	10626	.

O	10627	10634	However
O	10634	10635	,
O	10636	10637	I
O	10638	10640	am
O	10641	10646	faced
O	10647	10651	with
O	10652	10653	a
O	10654	10663	situation
O	10664	10669	where
O	10670	10672	it
O	10673	10675	is
O	10676	10679	not
O	10679	10680	.

O	10681	10685	Such
O	10686	10687	a
O	10688	10696	behavior
O	10697	10703	occurs
O	10704	10709	first
O	10710	10712	in
O	10713	10716	JDK
O	10717	10720	7u4
O	10721	10724	and
O	10725	10729	also
O	10730	10736	occurs
O	10737	10739	in
O	10740	10743	all
O	10744	10749	later
O	10750	10757	updates
O	10758	10759	(
O	10759	10760	I
O	10761	10764	use
O	10765	10767	64
O	10767	10768	-
O	10768	10771	bit
O	10772	10786	implementation
O	10786	10787	)
O	10787	10788	.

O	10789	10792	The
O	10793	10802	following
O	10803	10807	code
O	10808	10814	throws
O	10815	10824	exception
O	10824	10825	:
O	10826	10827	#
O	10827	10830	pre
O	10831	10834	The
O	10835	10844	exception
O	10845	10851	occurs
O	10852	10857	after
O	10858	10861	the
O	10862	10865	JVM
O	10866	10874	performs
O	10875	10886	compilation
O	10887	10889	of
O	10890	10893	the
O	10894	10898	code
O	10899	10904	block
O	10905	10908	and
O	10909	10913	does
O	10914	10917	not
O	10918	10923	arise
O	10924	10928	with
O	10929	10930	-
O	10930	10934	Xint
O	10935	10939	flag
O	10939	10940	.

O	10941	10953	Additionally
O	10953	10954	,
O	10955	10958	the
B-api_mention	10959	10965	Arrays
I-api_mention	10965	10966	.
I-api_mention	10966	10970	fill
I-api_mention	10970	10971	(
I-api_mention	10971	10975	args
I-api_mention	10975	10976	)
O	10977	10986	statement
O	10987	10988	(
O	10988	10990	as
O	10991	10994	all
O	10995	11000	other
O	11001	11011	statements
O	11012	11014	in
O	11015	11019	this
O	11020	11024	code
O	11024	11025	)
O	11026	11028	is
O	11029	11038	necessary
O	11038	11039	,
O	11040	11043	and
O	11044	11047	the
O	11048	11057	exception
O	11058	11062	does
O	11063	11066	not
O	11067	11073	occurs
O	11074	11076	if
O	11077	11079	it
O	11080	11082	is
O	11083	11089	absent
O	11089	11090	.

O	11091	11093	It
O	11094	11096	is
O	11097	11102	clear
O	11103	11107	that
O	11108	11112	this
O	11113	11121	possible
O	11122	11125	bug
O	11126	11128	is
O	11129	11136	bounded
O	11137	11141	with
O	11142	11146	some
O	11147	11150	JVM
O	11151	11163	optimization
O	11163	11164	.

O	11165	11168	Any
O	11169	11174	ideas
O	11175	11178	for
O	11179	11182	the
O	11183	11189	reason
O	11190	11192	of
O	11193	11197	such
O	11198	11199	a
O	11200	11208	behavior
O	11208	11209	?

O	11210	11216	Update
O	11216	11217	:
O	11218	11219	I
O	11220	11223	see
O	11224	11228	this
O	11229	11237	behavior
O	11238	11240	on
O	11241	11248	HotSpot
O	11249	11251	64
O	11251	11252	-
O	11252	11255	bit
O	11256	11262	server
O	11263	11265	VM
O	11265	11266	,
O	11267	11271	Java
O	11272	11279	version
O	11280	11284	from
O	11285	11286	1
O	11286	11287	.
O	11287	11288	7
O	11288	11289	.
O	11289	11290	0
O	11290	11291	_
O	11291	11293	04
O	11294	11296	to
O	11297	11298	1
O	11298	11299	.
O	11299	11300	7
O	11300	11301	.
O	11301	11302	0
O	11302	11303	_
O	11303	11305	10
O	11306	11308	on
O	11309	11315	Gentoo
O	11316	11321	Linux
O	11321	11322	,
O	11323	11329	Debian
O	11330	11335	Linux
O	11336	11337	(
O	11337	11341	both
O	11342	11348	kernel
O	11349	11350	3
O	11350	11351	.
O	11351	11352	0
O	11353	11360	version
O	11360	11361	)
O	11362	11365	and
O	11366	11371	MacOS
O	11372	11376	Lion
O	11376	11377	.

O	11378	11382	This
O	11383	11388	error
O	11389	11392	can
O	11393	11399	always
O	11400	11402	be
O	11403	11413	reproduced
O	11414	11418	with
O	11419	11422	the
O	11423	11427	code
O	11428	11433	above
O	11433	11434	.

O	11435	11436	I
O	11437	11440	did
O	11441	11444	not
O	11445	11449	test
O	11450	11454	this
O	11455	11462	problem
O	11463	11467	with
O	11468	11469	a
O	11470	11472	32
O	11472	11473	-
O	11473	11476	bit
O	11477	11480	JDK
O	11481	11483	or
O	11484	11486	on
O	11487	11494	Windows
O	11494	11495	.

O	11496	11497	I
O	11498	11505	already
O	11506	11510	sent
O	11511	11512	a
O	11513	11516	bug
O	11517	11523	report
O	11524	11526	to
O	11527	11530	the
O	11531	11537	Oracle
O	11538	11539	(
O	11539	11542	bug
O	11543	11545	id
O	11546	11553	7196857
O	11553	11554	)
O	11555	11558	and
O	11559	11561	it
O	11562	11566	will
O	11567	11573	appear
O	11574	11576	in
O	11577	11583	public
O	11584	11590	Oracle
O	11591	11594	bug
O	11595	11603	database
O	11604	11606	in
O	11607	11610	few
O	11611	11615	days
O	11615	11616	.

O	11617	11623	Update
O	11623	11624	:
O	11625	11631	Oracle
O	11632	11641	published
O	11642	11646	this
O	11647	11650	bug
O	11651	11653	at
O	11654	11659	their
O	11660	11666	public
O	11667	11670	bug
O	11671	11679	database
O	11679	11680	:
O	11681	11682	#
O	11682	11683	a

O	11685	11693	Question
O	11693	11694	-
O	11694	11702	12146298

O	11703	11704	I
O	11705	11710	would
O	11711	11715	like
O	11716	11718	to
O	11719	11723	know
O	11724	11728	what
O	11729	11731	is
O	11732	11735	the
O	11736	11744	cleanest
O	11745	11748	and
O	11749	11753	best
O	11754	11757	way
O	11758	11760	to
O	11761	11768	perform
O	11769	11773	form
O	11774	11784	validation
O	11785	11787	of
O	11788	11792	user
O	11793	11799	inputs
O	11799	11800	.

O	11801	11802	I
O	11803	11807	have
O	11808	11812	seen
O	11813	11817	some
O	11818	11828	developers
O	11829	11838	implement
B-api_mention	11839	11842	org
I-api_mention	11842	11843	.
I-api_mention	11843	11858	springframework
I-api_mention	11858	11859	.
I-api_mention	11859	11869	validation
I-api_mention	11869	11870	.
I-api_mention	11870	11879	Validator
O	11880	11881	.

O	11882	11883	A
O	11884	11892	question
O	11893	11898	about
O	11899	11903	that
O	11903	11904	:
O	11905	11906	I
O	11907	11910	saw
O	11911	11913	it
O	11914	11923	validates
O	11924	11925	a
O	11926	11931	class
O	11931	11932	.

O	11933	11937	Does
O	11938	11941	the
O	11942	11947	class
O	11948	11952	have
O	11953	11955	to
O	11956	11958	be
O	11959	11965	filled
O	11966	11974	manually
O	11975	11979	with
O	11980	11983	the
O	11984	11990	values
O	11991	11995	from
O	11996	11999	the
O	12000	12004	user
O	12005	12010	input
O	12010	12011	,
O	12012	12015	and
O	12016	12020	then
O	12021	12027	passed
O	12028	12030	to
O	12031	12034	the
O	12035	12044	validator
O	12044	12045	?

O	12046	12047	I
O	12048	12050	am
O	12051	12059	confused
O	12060	12065	about
O	12066	12069	the
O	12070	12078	cleanest
O	12079	12082	and
O	12083	12087	best
O	12088	12091	way
O	12092	12094	to
O	12095	12103	validate
O	12104	12107	the
O	12108	12112	user
O	12113	12118	input
O	12118	12119	.

O	12120	12121	I
O	12122	12126	know
O	12127	12132	about
O	12133	12136	the
O	12137	12148	traditional
O	12149	12155	method
O	12156	12158	of
O	12159	12164	using
B-api_mention	12165	12172	request
I-api_mention	12172	12173	.
I-api_mention	12173	12185	getParameter
I-api_mention	12185	12186	(
I-api_mention	12186	12190	args
I-api_mention	12190	12191	)
O	12192	12195	and
O	12196	12200	then
O	12201	12209	manually
O	12210	12218	checking
O	12219	12222	for
O	12223	12228	nulls
O	12229	12230	,
O	12231	12234	but
O	12235	12236	I
O	12237	12240	don
O	12240	12241	'
O	12241	12242	t
O	12243	12247	want
O	12248	12250	to
O	12251	12253	do
O	12254	12257	all
O	12258	12261	the
O	12262	12272	validation
O	12273	12275	in
O	12276	12278	my
O	12279	12289	Controller
O	12290	12291	.

O	12292	12296	Some
O	12297	12301	good
O	12302	12308	advice
O	12309	12311	on
O	12312	12316	this
O	12317	12321	area
O	12322	12326	will
O	12327	12329	be
O	12330	12337	greatly
O	12338	12349	appreciated
O	12349	12350	.

O	12351	12352	I
O	12353	12355	am
O	12356	12359	not
O	12360	12365	using
O	12366	12375	Hibernate
O	12376	12378	in
O	12379	12383	this
O	12384	12395	application
O	12395	12396	.

O	12398	12406	Question
O	12406	12407	-
O	12407	12415	12539365

O	12416	12417	I
O	12418	12423	write
O	12424	12429	jUnit
O	12430	12434	test
O	12435	12440	cases
O	12441	12444	for
O	12445	12446	3
O	12447	12455	purposes
O	12455	12456	:
O	12457	12458	#
O	12458	12460	li
O	12461	12463	To
O	12464	12470	ensure
O	12471	12475	that
O	12476	12478	my
O	12479	12483	code
O	12484	12493	satisfies
O	12494	12497	all
O	12498	12500	of
O	12501	12504	the
O	12505	12513	required
O	12514	12527	functionality
O	12527	12528	,
O	12529	12534	under
O	12535	12538	all
O	12539	12540	(
O	12540	12542	or
O	12543	12547	most
O	12548	12550	of
O	12550	12551	)
O	12552	12555	the
O	12556	12561	input
O	12562	12574	combinations
O	12574	12575	/
O	12575	12581	values
O	12581	12582	.

O	12583	12584	#
O	12584	12586	li
O	12587	12589	To
O	12590	12596	ensure
O	12597	12601	that
O	12602	12603	I
O	12604	12607	can
O	12608	12614	change
O	12615	12618	the
O	12619	12633	implementation
O	12633	12634	,
O	12635	12638	and
O	12639	12643	rely
O	12644	12646	on
O	12647	12652	JUnit
O	12653	12657	test
O	12658	12663	cases
O	12664	12666	to
O	12667	12671	tell
O	12672	12674	me
O	12675	12679	that
O	12680	12683	all
O	12684	12686	my
O	12687	12700	functionality
O	12701	12703	is
O	12704	12709	still
O	12710	12719	satisfied
O	12719	12720	.

O	12721	12722	#
O	12722	12724	li
O	12725	12727	As
O	12728	12729	a
O	12730	12743	documentation
O	12744	12746	of
O	12747	12750	all
O	12751	12754	the
O	12755	12758	use
O	12759	12764	cases
O	12765	12767	my
O	12768	12772	code
O	12773	12780	handles
O	12780	12781	,
O	12782	12785	and
O	12786	12789	act
O	12790	12792	as
O	12793	12794	a
O	12795	12799	spec
O	12800	12803	for
O	12804	12815	refactoring
O	12816	12817	-
O	12818	12824	should
O	12825	12828	the
O	12829	12833	code
O	12834	12838	ever
O	12839	12843	need
O	12844	12846	to
O	12847	12849	be
O	12850	12859	rewritten
O	12859	12860	.

O	12861	12862	(
O	12862	12870	Refactor
O	12871	12874	the
O	12875	12879	code
O	12879	12880	,
O	12881	12884	and
O	12885	12887	if
O	12888	12890	my
O	12891	12896	jUnit
O	12897	12902	tests
O	12903	12907	fail
O	12908	12909	-
O	12910	12913	you
O	12914	12922	probably
O	12923	12929	missed
O	12930	12934	some
O	12935	12938	use
O	12939	12943	case
O	12943	12944	)
O	12944	12945	.

O	12946	12947	I
O	12948	12950	do
O	12951	12954	not
O	12955	12965	understand
O	12966	12969	why
O	12970	12972	or
O	12973	12977	when
B-api_mention	12978	12985	Mockito
I-api_mention	12985	12986	.
I-api_mention	12986	12992	verify
I-api_mention	12992	12993	(
I-api_mention	12993	12997	args
I-api_mention	12997	12998	)
O	12999	13005	should
O	13006	13008	be
O	13009	13013	used
O	13013	13014	.

O	13015	13019	When
O	13020	13021	I
O	13022	13025	see
B-api_mention	13026	13032	verify
I-api_mention	13032	13033	(
I-api_mention	13033	13037	args
I-api_mention	13037	13038	)
O	13039	13044	being
O	13045	13051	called
O	13051	13052	,
O	13053	13055	it
O	13056	13058	is
O	13059	13066	telling
O	13067	13069	me
O	13070	13074	that
O	13075	13077	my
O	13078	13083	jUnit
O	13084	13086	is
O	13087	13095	becoming
O	13096	13101	aware
O	13102	13104	of
O	13105	13108	the
O	13109	13123	implementation
O	13123	13124	.

O	13125	13126	(
O	13126	13130	Thus
O	13131	13139	changing
O	13140	13142	my
O	13143	13157	implementation
O	13158	13163	would
O	13164	13169	break
O	13170	13172	my
O	13173	13179	jUnits
O	13179	13180	,
O	13181	13185	even
O	13186	13192	though
O	13193	13195	my
O	13196	13209	functionality
O	13210	13213	was
O	13214	13224	unaffected
O	13224	13225	)
O	13225	13226	.

O	13227	13228	I
O	13228	13229	'
O	13229	13230	m
O	13231	13238	looking
O	13239	13242	for
O	13242	13243	:
O	13244	13245	#
O	13245	13247	li
O	13248	13252	What
O	13253	13259	should
O	13260	13262	be
O	13263	13266	the
O	13267	13277	guidelines
O	13278	13281	for
O	13282	13293	appropriate
O	13294	13299	usage
O	13300	13302	of
B-api_mention	13303	13310	Mockito
I-api_mention	13310	13311	.
I-api_mention	13311	13317	verify
I-api_mention	13317	13318	(
I-api_mention	13318	13322	args
I-api_mention	13322	13323	)
O	13324	13325	?

O	13326	13327	#
O	13327	13329	li
O	13330	13332	Is
O	13333	13335	it
O	13336	13349	fundamentally
O	13350	13357	correct
O	13358	13361	for
O	13362	13368	jUnits
O	13369	13371	to
O	13372	13374	be
O	13375	13380	aware
O	13381	13383	of
O	13383	13384	,
O	13385	13387	or
O	13388	13395	tightly
O	13396	13403	coupled
O	13404	13406	to
O	13406	13407	,
O	13408	13411	the
O	13412	13426	implementation
O	13427	13429	of
O	13430	13433	the
O	13434	13439	class
O	13440	13445	under
O	13446	13450	test
O	13450	13451	?

O	13453	13461	Question
O	13461	13462	-
O	13462	13470	12552863

O	13471	13474	The
O	13475	13479	Java
O	13480	13481	7
O	13482	13485	try
O	13485	13486	-
O	13486	13490	with
O	13490	13491	-
O	13491	13500	resources
O	13501	13507	syntax
O	13508	13509	(
O	13509	13513	also
O	13514	13519	known
O	13520	13522	as
O	13523	13526	ARM
O	13527	13532	block
O	13533	13534	(
O	13535	13544	Automatic
O	13545	13553	Resource
O	13554	13564	Management
O	13565	13566	)
O	13566	13567	)
O	13568	13570	is
O	13571	13575	nice
O	13575	13576	,
O	13577	13582	short
O	13583	13586	and
O	13587	13602	straightforward
O	13603	13607	when
O	13608	13613	using
O	13614	13618	only
O	13619	13622	one
B-api_mention	13623	13636	AutoCloseable
O	13637	13645	resource
O	13645	13646	.

O	13647	13654	However
O	13654	13655	,
O	13656	13657	I
O	13658	13660	am
O	13661	13664	not
O	13665	13669	sure
O	13670	13674	what
O	13675	13677	is
O	13678	13681	the
O	13682	13689	correct
O	13690	13695	idiom
O	13696	13700	when
O	13701	13702	I
O	13703	13707	need
O	13708	13710	to
O	13711	13718	declare
O	13719	13727	multiple
O	13728	13737	resources
O	13738	13742	that
O	13743	13746	are
O	13747	13756	dependent
O	13757	13759	on
O	13760	13764	each
O	13765	13770	other
O	13770	13771	,
O	13772	13775	for
O	13776	13783	example
O	13784	13785	a
B-api_mention	13786	13796	FileWriter
O	13797	13800	and
O	13801	13802	a
B-api_mention	13803	13817	BufferedWriter
O	13818	13822	that
O	13823	13828	wraps
O	13829	13831	it
O	13831	13832	.

O	13833	13835	Of
O	13836	13842	course
O	13842	13843	,
O	13844	13848	this
O	13849	13857	question
O	13858	13866	concerns
O	13867	13870	any
O	13871	13875	case
O	13876	13880	when
O	13881	13885	some
B-api_mention	13886	13899	AutoCloseable
O	13900	13909	resources
O	13910	13913	are
O	13914	13921	wrapped
O	13921	13922	,
O	13923	13926	not
O	13927	13931	only
O	13932	13937	these
O	13938	13941	two
O	13942	13950	specific
O	13951	13958	classes
O	13958	13959	.

O	13960	13961	I
O	13962	13966	came
O	13967	13969	up
O	13970	13974	with
O	13975	13978	the
O	13979	13984	three
O	13985	13994	following
O	13995	14007	alternatives
O	14007	14008	:
O	14009	14010	1
O	14010	14011	)
O	14012	14015	The
O	14016	14021	naive
O	14022	14027	idiom
O	14028	14029	I
O	14030	14034	have
O	14035	14039	seen
O	14040	14042	is
O	14043	14045	to
O	14046	14053	declare
O	14054	14058	only
O	14059	14062	the
O	14063	14066	top
O	14066	14067	-
O	14067	14072	level
O	14073	14080	wrapper
O	14081	14083	in
O	14084	14087	the
O	14088	14091	ARM
O	14091	14092	-
O	14092	14099	managed
O	14100	14108	variable
O	14108	14109	:
O	14110	14111	#
O	14111	14114	pre
O	14115	14119	This
O	14120	14122	is
O	14123	14127	nice
O	14128	14131	and
O	14132	14137	short
O	14137	14138	,
O	14139	14142	but
O	14143	14145	it
O	14146	14148	is
O	14149	14155	broken
O	14155	14156	.

O	14157	14164	Because
O	14165	14168	the
O	14169	14179	underlying
B-api_mention	14180	14190	FileWriter
O	14191	14193	is
O	14194	14197	not
O	14198	14206	declared
O	14207	14209	in
O	14210	14211	a
O	14212	14220	variable
O	14220	14221	,
O	14222	14224	it
O	14225	14229	will
O	14230	14235	never
O	14236	14238	be
O	14239	14245	closed
O	14246	14254	directly
O	14255	14257	in
O	14258	14261	the
O	14262	14271	generated
O	14272	14279	finally
O	14280	14285	block
O	14285	14286	.

O	14287	14289	It
O	14290	14294	will
O	14295	14297	be
O	14298	14304	closed
O	14305	14309	only
O	14310	14317	through
O	14318	14321	the
O	14322	14327	close
O	14328	14334	method
O	14335	14337	of
O	14338	14341	the
O	14342	14350	wrapping
B-api_mention	14351	14365	BufferedWriter
O	14366	14367	.

O	14368	14371	The
O	14372	14379	problem
O	14380	14382	is
O	14382	14383	,
O	14384	14388	that
O	14389	14391	if
O	14392	14394	an
O	14395	14404	exception
O	14405	14407	is
O	14408	14414	thrown
O	14415	14419	from
O	14420	14423	the
O	14424	14426	bw
O	14427	14428	'
O	14428	14429	s
O	14430	14441	constructor
O	14441	14442	,
O	14443	14445	it
O	14445	14446	'
O	14446	14447	s
B-api_mention	14448	14453	close
O	14454	14458	will
O	14459	14462	not
O	14463	14465	be
O	14466	14472	called
O	14473	14476	and
O	14477	14486	therefore
O	14487	14490	the
O	14491	14501	underlying
B-api_mention	14502	14512	FileWriter
O	14513	14517	will
O	14518	14521	not
O	14522	14524	be
O	14525	14531	closed
O	14532	14533	.

O	14534	14535	2
O	14535	14536	)
O	14537	14538	#
O	14538	14541	pre
O	14542	14546	Here
O	14546	14547	,
O	14548	14552	both
O	14553	14556	the
O	14557	14567	underlying
O	14568	14571	and
O	14572	14575	the
O	14576	14584	wrapping
O	14585	14593	resource
O	14594	14597	are
O	14598	14606	declared
O	14607	14609	in
O	14610	14613	the
O	14614	14617	ARM
O	14617	14618	-
O	14618	14625	managed
O	14626	14635	variables
O	14635	14636	,
O	14637	14639	so
O	14640	14644	both
O	14645	14647	of
O	14648	14652	them
O	14653	14657	will
O	14658	14660	be
O	14661	14670	certainly
O	14671	14677	closed
O	14677	14678	,
O	14679	14681	so
O	14682	14691	certainly
O	14692	14696	that
O	14697	14700	the
O	14701	14711	underlying
O	14712	14714	fw
B-api_mention	14714	14715	.
I-api_mention	14715	14720	close
I-api_mention	14720	14721	(
I-api_mention	14721	14725	args
I-api_mention	14725	14726	)
O	14727	14731	will
O	14732	14734	be
O	14735	14741	called
O	14742	14747	twice
O	14748	14749	,
O	14750	14755	first
O	14756	14764	directly
O	14765	14768	and
O	14769	14772	for
O	14773	14776	the
O	14777	14783	second
O	14784	14788	time
O	14789	14796	through
O	14797	14800	the
O	14801	14809	wrapping
O	14810	14812	bw
B-api_mention	14812	14813	.
I-api_mention	14813	14818	close
I-api_mention	14818	14819	(
I-api_mention	14819	14823	args
I-api_mention	14823	14824	)
O	14825	14826	.

O	14827	14831	This
O	14832	14838	should
O	14839	14842	not
O	14843	14845	be
O	14846	14847	a
O	14848	14855	problem
O	14856	14859	for
O	14860	14865	these
O	14866	14869	two
O	14870	14878	specific
O	14879	14886	classes
O	14887	14891	that
O	14892	14896	both
O	14897	14906	implement
B-api_mention	14907	14916	Closeable
O	14917	14918	(
O	14918	14923	which
O	14924	14926	is
O	14927	14928	a
O	14929	14936	subtype
O	14937	14939	of
B-api_mention	14940	14953	AutoCloseable
O	14954	14955	)
O	14955	14956	,
O	14957	14962	whose
O	14963	14971	contract
O	14972	14978	states
O	14979	14983	that
O	14984	14992	multiple
O	14993	14998	calls
O	14999	15001	to
O	15002	15007	close
O	15008	15011	are
O	15012	15021	permitted
O	15021	15022	:
O	15023	15024	#
O	15024	15034	blockquote
O	15035	15042	However
O	15042	15043	,
O	15044	15046	in
O	15047	15048	a
O	15049	15056	general
O	15057	15061	case
O	15061	15062	,
O	15063	15064	I
O	15065	15068	can
O	15069	15073	have
O	15074	15083	resources
O	15084	15088	that
O	15089	15091	do
O	15092	15101	implement
O	15102	15106	only
B-api_mention	15107	15120	AutoCloseable
O	15121	15122	(
O	15122	15125	and
O	15126	15129	not
B-api_mention	15130	15139	Closeable
O	15140	15141	)
O	15141	15142	,
O	15143	15148	which
O	15149	15154	doesn
O	15154	15155	'
O	15155	15156	t
O	15157	15166	guarantee
O	15167	15171	that
O	15172	15175	the
B-api_mention	15176	15181	close
O	15182	15185	can
O	15186	15188	be
O	15189	15195	called
O	15196	15204	multiple
O	15205	15210	times
O	15210	15211	:
O	15212	15213	#
O	15213	15223	blockquote
O	15224	15225	3
O	15225	15226	)
O	15227	15228	#
O	15228	15231	pre
O	15232	15236	This
O	15237	15244	version
O	15245	15251	should
O	15252	15254	be
O	15255	15268	theoretically
O	15269	15276	correct
O	15276	15277	,
O	15278	15285	because
O	15286	15290	only
O	15291	15294	the
O	15295	15297	fw
O	15298	15308	represents
O	15309	15310	a
O	15311	15315	real
O	15316	15324	resource
O	15325	15329	that
O	15330	15335	needs
O	15336	15338	to
O	15339	15341	be
O	15342	15349	cleaned
O	15350	15352	up
O	15352	15353	.

O	15354	15357	The
O	15358	15360	bw
O	15361	15365	does
O	15365	15366	'
O	15366	15367	t
O	15368	15374	itself
O	15375	15379	hold
O	15380	15383	any
O	15384	15392	resource
O	15392	15393	,
O	15394	15396	it
O	15397	15401	only
O	15402	15411	delegates
O	15412	15414	to
O	15415	15418	the
O	15419	15421	fw
O	15422	15423	,
O	15424	15426	so
O	15427	15429	it
O	15430	15436	should
O	15437	15439	be
O	15440	15450	sufficient
O	15451	15453	to
O	15454	15458	only
O	15459	15464	close
O	15465	15468	the
O	15469	15479	underlying
O	15480	15482	fw
O	15483	15484	.

O	15485	15487	On
O	15488	15491	the
O	15492	15497	other
O	15498	15502	hand
O	15502	15503	,
O	15504	15507	the
O	15508	15514	syntax
O	15515	15517	is
O	15518	15519	a
O	15520	15523	bit
O	15524	15533	irregular
O	15534	15537	and
O	15538	15542	also
O	15542	15543	,
O	15544	15551	Eclipse
O	15552	15558	issues
O	15559	15560	a
O	15561	15568	warning
O	15568	15569	,
O	15570	15575	which
O	15576	15577	I
O	15578	15585	believe
O	15586	15588	is
O	15589	15590	a
O	15591	15596	false
O	15597	15602	alarm
O	15602	15603	,
O	15604	15607	but
O	15608	15610	it
O	15611	15613	is
O	15614	15619	still
O	15620	15621	a
O	15622	15629	warning
O	15630	15634	that
O	15635	15638	one
O	15639	15642	has
O	15643	15645	to
O	15646	15650	deal
O	15651	15655	with
O	15655	15656	:
O	15657	15658	#
O	15658	15668	blockquote
O	15669	15671	So
O	15671	15672	,
O	15673	15678	which
O	15679	15687	approach
O	15688	15690	to
O	15691	15693	go
O	15694	15697	for
O	15697	15698	?

O	15699	15701	Or
O	15702	15706	have
O	15707	15708	I
O	15709	15715	missed
O	15716	15720	some
O	15721	15726	other
O	15727	15732	idiom
O	15733	15737	that
O	15738	15740	is
O	15741	15744	the
O	15745	15752	correct
O	15753	15756	one
O	15756	15757	?

O	15759	15767	Question
O	15767	15768	-
O	15768	15776	13195797

O	15777	15778	I
O	15779	15783	want
O	15784	15786	to
O	15787	15793	delete
O	15794	15797	all
O	15798	15803	files
O	15804	15810	inside
O	15811	15814	ABC
O	15815	15824	directory
O	15824	15825	.

O	15826	15830	When
O	15831	15832	I
O	15833	15838	tried
O	15839	15843	with
B-api_mention	15844	15853	FileUtils
I-api_mention	15853	15854	.
I-api_mention	15854	15869	deleteDirectory
I-api_mention	15869	15870	(
I-api_mention	15870	15874	args
O	15874	15875	)
O	15875	15876	;
O	15877	15879	it
O	15880	15884	also
O	15885	15892	deletes
O	15893	15899	folder
O	15900	15903	ABC
O	15903	15904	.

O	15905	15907	Is
O	15908	15913	there
O	15914	15915	a
O	15916	15919	one
O	15920	15925	liner
O	15926	15934	solution
O	15935	15940	where
O	15941	15942	I
O	15943	15946	can
O	15947	15953	delete
O	15954	15959	files
O	15960	15966	inside
O	15967	15976	directory
O	15977	15980	but
O	15981	15984	not
O	15985	15994	directory
O	15994	15995	?

O	15997	16005	Question
O	16005	16006	-
O	16006	16014	12544479

O	16015	16016	I
O	16017	16019	am
O	16020	16027	looking
O	16028	16031	for
O	16032	16035	the
O	16036	16043	easiest
O	16044	16047	and
O	16048	16056	simplest
O	16057	16060	way
O	16061	16063	to
O	16064	16068	bind
O	16069	16072	and
O	16073	16080	convert
O	16081	16085	data
O	16086	16088	in
B-api_mention	16089	16095	Spring
O	16096	16099	MVC
O	16099	16100	.

O	16101	16103	If
O	16104	16112	possible
O	16112	16113	,
O	16114	16121	without
O	16122	16127	doing
O	16128	16131	any
O	16132	16135	xml
O	16136	16149	configuration
O	16149	16150	.

O	16151	16153	So
O	16154	16157	far
O	16158	16159	I
O	16159	16160	'
O	16160	16162	ve
O	16163	16167	been
O	16168	16173	using
B-api_mention	16174	16189	PropertyEditors
O	16190	16194	like
O	16195	16197	so
O	16198	16199	:
O	16200	16201	#
O	16201	16204	pre
O	16205	16208	and
O	16209	16210	#
O	16210	16213	pre
O	16214	16216	It
O	16217	16219	is
O	16220	16226	simple
O	16227	16228	:
O	16229	16233	both
O	16234	16244	conversion
O	16245	16248	are
O	16249	16256	defined
O	16257	16259	in
O	16260	16263	the
O	16264	16268	same
O	16269	16274	class
O	16274	16275	,
O	16276	16279	and
O	16280	16283	the
O	16284	16291	binding
O	16292	16294	is
O	16295	16310	straightforward
O	16310	16311	.

O	16312	16314	If
O	16315	16316	I
O	16317	16323	wanted
O	16324	16326	to
O	16327	16329	do
O	16330	16331	a
O	16332	16339	general
O	16340	16347	binding
O	16348	16354	across
O	16355	16358	all
O	16359	16361	my
O	16362	16373	controllers
O	16373	16374	,
O	16375	16376	I
O	16377	16382	could
O	16383	16388	still
O	16389	16392	add
O	16393	16394	3
O	16395	16400	lines
O	16401	16403	in
O	16404	16406	my
O	16407	16410	xml
O	16411	16417	config
O	16418	16419	.

O	16420	16423	But
O	16424	16430	Spring
O	16431	16432	3
O	16432	16433	.
O	16433	16434	x
O	16435	16445	introduced
O	16446	16447	a
O	16448	16451	new
O	16452	16455	way
O	16456	16458	to
O	16459	16461	do
O	16462	16464	it
O	16464	16465	,
O	16466	16471	using
B-api_mention	16472	16482	Converters
O	16483	16484	:
O	16485	16486	#
O	16486	16496	blockquote
O	16497	16499	So
O	16500	16503	let
O	16503	16504	'
O	16504	16505	s
O	16506	16509	say
O	16510	16511	I
O	16512	16516	want
O	16517	16519	to
O	16520	16523	use
B-api_mention	16524	16534	Converters
O	16535	16542	because
O	16543	16545	it
O	16546	16548	is
O	16549	16550	"
O	16550	16553	the
O	16554	16560	latest
O	16561	16572	alternative
O	16572	16573	"
O	16573	16574	.

O	16575	16576	I
O	16577	16582	would
O	16583	16587	have
O	16588	16590	to
O	16591	16597	create
O	16598	16601	two
O	16602	16612	converters
O	16613	16614	:
O	16615	16616	#
O	16616	16619	pre
O	16620	16625	First
O	16626	16634	drawback
O	16635	16636	:
O	16637	16638	I
O	16639	16643	have
O	16644	16646	to
O	16647	16651	make
O	16652	16655	two
O	16656	16663	classes
O	16663	16664	.

O	16665	16672	Benefit
O	16673	16674	:
O	16675	16677	no
O	16678	16682	need
O	16683	16685	to
O	16686	16690	cast
O	16691	16697	thanks
O	16698	16700	to
O	16701	16711	genericity
O	16711	16712	.

O	16713	16717	Then
O	16717	16718	,
O	16719	16722	how
O	16723	16725	do
O	16726	16727	I
O	16728	16734	simply
O	16735	16739	data
O	16740	16744	bind
O	16745	16748	the
B-api_mention	16749	16759	converters
O	16760	16761	?

O	16762	16768	Second
O	16769	16777	drawback
O	16778	16779	:
O	16780	16781	I
O	16782	16787	haven
O	16787	16788	'
O	16788	16789	t
O	16790	16795	found
O	16796	16799	any
O	16800	16806	simple
O	16807	16810	way
O	16811	16812	(
O	16812	16823	annotations
O	16824	16826	or
O	16827	16832	other
O	16833	16845	programmatic
O	16846	16856	facilities
O	16856	16857	)
O	16858	16860	to
O	16861	16863	do
O	16864	16866	it
O	16867	16869	in
O	16870	16871	a
O	16872	16882	controller
O	16883	16884	:
O	16885	16892	nothing
O	16893	16897	like
O	16898	16914	someSpringObject
B-api_mention	16914	16915	.
I-api_mention	16915	16938	registerCustomConverter
I-api_mention	16938	16939	(
I-api_mention	16939	16943	args
I-api_mention	16943	16944	)
O	16944	16945	;
O	16946	16947	.

O	16948	16951	The
O	16952	16956	only
O	16957	16961	ways
O	16962	16963	I
O	16963	16964	'
O	16964	16966	ve
O	16967	16972	found
O	16973	16978	would
O	16979	16981	be
O	16982	16989	tedious
O	16989	16990	,
O	16991	16994	not
O	16995	17001	simple
O	17001	17002	,
O	17003	17006	and
O	17007	17011	only
O	17012	17017	about
O	17018	17025	general
O	17026	17031	cross
O	17031	17032	-
O	17032	17042	controller
O	17043	17050	binding
O	17051	17052	:
O	17053	17054	#
O	17054	17056	li
O	17057	17060	XML
O	17061	17067	config
O	17068	17069	:
O	17070	17071	#
O	17071	17074	pre
O	17075	17076	#
O	17076	17078	li
O	17079	17083	Java
O	17084	17090	config
O	17091	17092	(
O	17093	17097	only
O	17098	17100	in
O	17101	17107	Spring
O	17108	17109	3
O	17109	17110	.
O	17110	17111	1
O	17111	17112	+
O	17113	17114	)
O	17115	17116	:
O	17117	17118	#
O	17118	17121	pre
O	17122	17126	With
O	17127	17130	all
O	17131	17136	these
O	17137	17146	drawbacks
O	17146	17147	,
O	17148	17151	why
O	17152	17157	using
B-api_mention	17158	17168	Converters
O	17169	17170	?

O	17171	17173	Am
O	17174	17175	I
O	17176	17183	missing
O	17184	17193	something
O	17194	17195	?

O	17196	17199	Are
O	17200	17205	there
O	17206	17211	other
O	17212	17218	tricks
O	17219	17223	that
O	17224	17225	I
O	17226	17228	am
O	17229	17232	not
O	17233	17238	aware
O	17239	17241	of
O	17242	17243	?

O	17244	17245	I
O	17246	17248	am
O	17249	17256	tempted
O	17257	17259	to
O	17260	17262	go
O	17263	17265	on
O	17266	17271	using
B-api_mention	17272	17287	PropertyEditors
O	17287	17288	.
O	17288	17289	.
O	17289	17290	.

O	17291	17298	Binding
O	17299	17301	is
O	17302	17306	much
O	17307	17313	easier
O	17314	17317	and
O	17318	17325	quicker
O	17325	17326	.

O	17328	17336	Question
O	17336	17337	-
O	17337	17345	13291076

O	17346	17348	If
O	17349	17352	you
O	17353	17357	look
O	17358	17360	in
O	17361	17364	the
O	17365	17369	enum
O	17370	17373	api
O	17374	17376	at
O	17377	17380	the
O	17381	17387	method
B-api_mention	17388	17392	name
I-api_mention	17392	17393	(
I-api_mention	17393	17397	args
I-api_mention	17397	17398	)
O	17399	17401	it
O	17402	17406	says
O	17407	17411	that
O	17411	17412	:
O	17413	17414	#
O	17414	17424	blockquote
O	17425	17428	Why
O	17429	17431	is
O	17432	17438	better
O	17439	17441	to
O	17442	17445	use
B-api_mention	17446	17454	toString
I-api_mention	17454	17455	(
I-api_mention	17455	17459	args
I-api_mention	17459	17460	)
O	17461	17462	?

O	17463	17464	I
O	17465	17469	mean
B-api_mention	17470	17478	toString
O	17479	17482	may
O	17483	17485	be
O	17486	17496	overridden
O	17497	17501	when
B-api_mention	17502	17506	name
I-api_mention	17506	17507	(
I-api_mention	17507	17508	)
O	17509	17511	is
O	17512	17519	already
O	17520	17525	final
O	17525	17526	.

O	17527	17529	So
O	17530	17532	if
O	17533	17536	you
O	17537	17540	use
B-api_mention	17541	17549	toString
O	17550	17553	and
O	17554	17561	someone
O	17562	17571	overrides
O	17572	17574	it
O	17575	17577	to
O	17578	17584	return
O	17585	17586	a
O	17587	17591	hard
O	17591	17592	-
O	17592	17597	coded
O	17598	17603	value
O	17604	17608	your
O	17609	17614	whole
O	17615	17626	application
O	17627	17629	is
O	17630	17634	down
O	17634	17635	.
O	17635	17636	.
O	17636	17637	.

O	17638	17642	Also
O	17643	17645	if
O	17646	17649	you
O	17650	17654	look
O	17655	17657	in
O	17658	17661	the
O	17662	17669	sources
O	17670	17673	the
B-api_mention	17674	17682	toString
I-api_mention	17682	17683	(
I-api_mention	17683	17684	)
O	17685	17691	method
O	17692	17699	returns
O	17700	17707	exactly
O	17708	17711	and
O	17712	17716	just
O	17717	17720	the
O	17721	17725	name
O	17725	17726	.

O	17727	17729	It
O	17729	17730	'
O	17730	17731	s
O	17732	17735	the
O	17736	17740	same
O	17741	17746	thing
O	17746	17747	.

O	17749	17757	Question
O	17757	17758	-
O	17758	17766	13744450

O	17767	17770	The
O	17771	17782	interviewer
O	17783	17788	asked
O	17789	17791	me
O	17791	17792	:
O	17793	17794	#
O	17794	17804	blockquote
O	17805	17806	I
O	17807	17811	wasn
O	17811	17812	'
O	17812	17813	t
O	17814	17819	aware
O	17820	17822	of
O	17823	17828	these
O	17829	17834	terms
O	17834	17835	.

O	17836	17838	So
O	17838	17839	,
O	17840	17844	when
O	17845	17846	I
O	17847	17851	came
O	17852	17856	back
O	17857	17859	to
O	17860	17864	home
O	17864	17865	,
O	17866	17870	then
O	17871	17872	I
O	17873	17880	started
O	17881	17888	looking
O	17889	17893	into
O	17894	17900	Google
O	17901	17906	about
B-api_mention	17907	17915	Observer
O	17916	17919	and
B-api_mention	17920	17930	Observable
O	17931	17934	and
O	17935	17940	found
O	17941	17945	some
O	17946	17951	point
O	17952	17956	from
O	17957	17966	different
O	17967	17976	resources
O	17977	17978	:
O	17979	17980	#
O	17980	17990	blockquote
O	17991	17992	I
O	17993	17998	found
O	17999	18003	this
O	18004	18011	example
O	18011	18012	:
O	18013	18014	#
O	18014	18017	pre
O	18018	18021	But
O	18022	18023	I
O	18023	18024	'
O	18024	18025	m
O	18026	18031	still
O	18032	18038	unable
O	18039	18041	to
O	18042	18048	figure
O	18049	18052	out
O	18053	18056	why
O	18057	18059	do
O	18060	18062	we
O	18063	18067	need
B-api_mention	18068	18076	Observer
O	18077	18080	and
B-api_mention	18081	18091	Observable
O	18092	18093	?

O	18094	18098	What
O	18099	18102	are
O	18103	18106	the
B-api_mention	18107	18117	setChanged
I-api_mention	18117	18118	(
I-api_mention	18118	18122	args
I-api_mention	18122	18123	)
O	18124	18127	and
B-api_mention	18128	18143	notifyObservers
I-api_mention	18143	18144	(
I-api_mention	18144	18148	args
I-api_mention	18148	18149	)
O	18150	18157	methods
O	18158	18161	for
O	18161	18162	?

O	18164	18172	Question
O	18172	18173	-
O	18173	18181	12732422

O	18182	18183	I
O	18183	18184	'
O	18184	18185	m
O	18186	18192	trying
O	18193	18195	to
O	18196	18199	add
O	18200	18206	header
O	18207	18210	for
O	18211	18213	my
O	18214	18221	request
O	18222	18227	using
B-api_mention	18228	18245	HttpUrlConnection
O	18246	18249	but
O	18250	18253	the
O	18254	18260	method
B-api_mention	18261	18279	setRequestProperty
I-api_mention	18279	18280	(
I-api_mention	18280	18284	args
I-api_mention	18284	18285	)
O	18286	18291	doesn
O	18291	18292	'
O	18292	18293	t
O	18294	18298	seem
O	18299	18306	working
O	18306	18307	.

O	18308	18311	The
O	18312	18318	server
O	18319	18323	side
O	18324	18329	doesn
O	18329	18330	'
O	18330	18331	t
O	18332	18339	receive
O	18340	18343	any
O	18344	18351	request
O	18352	18356	with
O	18357	18359	my
O	18360	18366	header
O	18366	18367	.

O	18368	18371	Can
O	18372	18378	anyone
O	18379	18383	help
O	18384	18386	me
O	18386	18387	?

O	18388	18394	Thanks
O	18395	18397	in
O	18398	18405	advance
O	18405	18406	.

O	18407	18408	#
O	18408	18411	pre

O	18413	18421	Question
O	18421	18422	-
O	18422	18430	11821801

O	18431	18432	I
O	18432	18433	'
O	18433	18434	m
O	18435	18441	trying
O	18442	18444	to
O	18445	18455	understand
O	18456	18460	what
O	18461	18466	makes
O	18467	18470	the
O	18471	18475	lock
O	18476	18478	in
O	18479	18490	concurrency
O	18491	18493	so
O	18494	18503	important
O	18504	18506	if
O	18507	18510	one
O	18511	18514	can
O	18515	18518	use
O	18519	18531	synchronized
O	18531	18532	(
O	18532	18536	args
O	18536	18537	)
O	18538	18539	.

O	18540	18542	In
O	18543	18546	the
O	18547	18552	dummy
O	18553	18557	code
O	18558	18563	below
O	18563	18564	,
O	18565	18566	I
O	18567	18570	can
O	18571	18573	do
O	18574	18580	either
O	18580	18581	:
O	18582	18583	#
O	18583	18585	li
O	18586	18598	synchronized
O	18599	18602	the
O	18603	18609	entire
O	18610	18616	method
O	18617	18619	or
O	18620	18631	synchronize
O	18632	18635	the
O	18636	18646	vulnerable
O	18647	18651	area
O	18652	18653	(
O	18653	18665	synchronized
O	18665	18666	(
O	18666	18670	this
O	18670	18671	)
O	18671	18672	{
O	18672	18673	.
O	18673	18674	.
O	18674	18675	.
O	18675	18676	}
O	18676	18677	)
O	18678	18679	#
O	18679	18681	li
O	18682	18684	OR
O	18685	18689	lock
O	18690	18693	the
O	18694	18704	vulnerable
O	18705	18709	code
O	18710	18714	area
O	18715	18719	with
O	18720	18721	a
B-api_mention	18722	18735	ReentrantLock
O	18736	18737	.

O	18738	18742	Code
O	18742	18743	:
O	18744	18745	#
O	18745	18748	pre

O	18750	18758	Question
O	18758	18759	-
O	18759	18767	13659217

O	18768	18769	I
O	18770	18777	declare
O	18778	18780	an
O	18781	18785	enum
O	18786	18788	as
O	18789	18790	:
O	18791	18795	enum
O	18796	18799	Sex
O	18800	18801	{
O	18801	18805	MALE
O	18805	18806	,
O	18806	18812	FEMALE
O	18812	18813	}
O	18813	18814	;
O	18815	18818	And
O	18819	18823	then
O	18823	18824	,
O	18825	18832	iterate
O	18833	18837	enum
O	18838	18840	as
O	18841	18846	shown
O	18847	18852	below
O	18853	18854	:
O	18855	18856	#
O	18856	18859	pre
O	18860	18861	I
O	18862	18869	checked
O	18870	18873	the
O	18874	18878	Java
O	18879	18882	API
O	18883	18886	but
O	18887	18890	can
O	18890	18891	'
O	18891	18892	t
O	18893	18897	find
O	18898	18901	the
B-api_mention	18902	18908	values
I-api_mention	18908	18909	(
I-api_mention	18909	18910	)
O	18911	18917	method
O	18917	18918	?

O	18919	18920	I
O	18920	18921	'
O	18921	18922	m
O	18923	18930	curious
O	18931	18933	as
O	18934	18936	to
O	18937	18942	where
O	18943	18947	this
O	18948	18954	method
O	18955	18960	comes
O	18961	18965	from
O	18965	18966	?

O	18967	18970	API
O	18971	18975	link
O	18976	18977	:
O	18978	18979	#
O	18979	18980	a

O	18982	18990	Question
O	18990	18991	-
O	18991	18999	14014086
O	18999	19000	,
O	19001	19007	answer
O	19007	19008	-
O	19008	19016	20784007

O	19017	19020	Ken
O	19020	19021	'
O	19021	19022	s
O	19023	19029	answer
O	19030	19032	is
O	19033	19042	basically
O	19043	19048	right
O	19049	19052	but
O	19053	19054	I
O	19054	19055	'
O	19055	19056	d
O	19057	19061	like
O	19062	19064	to
O	19065	19070	chime
O	19071	19073	in
O	19074	19076	on
O	19077	19080	the
O	19081	19082	"
O	19082	19085	why
O	19086	19091	would
O	19092	19095	you
O	19096	19100	want
O	19101	19103	to
O	19104	19107	use
O	19108	19111	one
O	19112	19116	over
O	19117	19120	the
O	19121	19126	other
O	19126	19127	?
O	19127	19128	"
O	19129	19133	part
O	19134	19136	of
O	19137	19141	your
O	19142	19150	question
O	19150	19151	.

O	19152	19158	Basics
O	19159	19162	The
O	19163	19167	base
O	19168	19177	interface
O	19178	19181	you
O	19182	19188	choose
O	19189	19192	for
O	19193	19197	your
O	19198	19208	repository
O	19209	19212	has
O	19213	19216	two
O	19217	19221	main
O	19222	19230	purposes
O	19230	19231	.

O	19232	19237	First
O	19237	19238	,
O	19239	19242	you
O	19243	19248	allow
O	19249	19252	the
O	19253	19259	Spring
O	19260	19264	Data
O	19265	19275	repository
O	19276	19290	infrastructure
O	19291	19293	to
O	19294	19298	find
O	19299	19303	your
O	19304	19313	interface
O	19314	19317	and
O	19318	19325	trigger
O	19326	19329	the
O	19330	19335	proxy
O	19336	19344	creation
O	19345	19347	so
O	19348	19352	that
O	19353	19356	you
O	19357	19363	inject
O	19364	19373	instances
O	19374	19376	of
O	19377	19380	the
O	19381	19390	interface
O	19391	19395	into
O	19396	19403	clients
O	19403	19404	.

O	19405	19408	The
O	19409	19415	second
O	19416	19423	purpose
O	19424	19426	is
O	19427	19429	to
O	19430	19434	pull
O	19435	19437	in
O	19438	19440	as
O	19441	19445	much
O	19446	19459	functionality
O	19460	19462	as
O	19463	19469	needed
O	19470	19474	into
O	19475	19478	the
O	19479	19488	interface
O	19489	19496	without
O	19497	19503	having
O	19504	19506	to
O	19507	19514	declare
O	19515	19520	extra
O	19521	19528	methods
O	19528	19529	.

O	19530	19533	The
O	19534	19540	common
O	19541	19551	interfaces
O	19552	19555	The
O	19556	19562	Spring
O	19563	19567	Data
O	19568	19572	core
O	19573	19580	library
O	19581	19586	ships
O	19587	19591	with
O	19592	19595	two
O	19596	19600	base
O	19601	19611	interfaces
O	19612	19616	that
O	19617	19623	expose
O	19624	19625	a
O	19626	19635	dedicated
O	19636	19639	set
O	19640	19642	of
O	19643	19658	functionalities
O	19658	19659	:
O	19660	19661	#
O	19661	19663	li
B-api_mention	19664	19678	CrudRepository
O	19679	19680	-
O	19681	19685	CRUD
O	19686	19693	methods
O	19694	19695	#
O	19695	19697	li
B-api_mention	19698	19724	PagingAndSortingRepository
O	19725	19726	-
O	19727	19734	methods
O	19735	19738	for
O	19739	19749	pagination
O	19750	19753	and
O	19754	19761	sorting
O	19762	19763	(
O	19763	19770	extends
B-api_mention	19771	19785	CrudRepository
O	19786	19787	)
O	19788	19793	Store
O	19793	19794	-
O	19794	19802	specific
O	19803	19813	interfaces
O	19814	19817	The
O	19818	19828	individual
O	19829	19834	store
O	19835	19842	modules
O	19843	19844	(
O	19844	19845	e
O	19845	19846	.
O	19846	19847	g
O	19847	19848	.
O	19849	19852	for
O	19853	19856	JPA
O	19857	19859	or
O	19860	19867	MongoDB
O	19867	19868	)
O	19869	19875	expose
O	19876	19881	store
O	19881	19882	-
O	19882	19890	specific
O	19891	19901	extensions
O	19902	19904	of
O	19905	19910	these
O	19911	19915	base
O	19916	19926	interfaces
O	19927	19929	to
O	19930	19935	allow
O	19936	19942	access
O	19943	19945	to
O	19946	19951	store
O	19951	19952	-
O	19952	19960	specific
O	19961	19974	functionality
O	19975	19979	like
O	19980	19988	flushing
O	19989	19991	or
O	19992	20001	dedicated
O	20002	20010	batching
O	20011	20015	that
O	20016	20020	take
O	20021	20025	some
O	20026	20031	store
O	20032	20041	specifics
O	20042	20046	into
O	20047	20054	account
O	20054	20055	.

O	20056	20058	An
O	20059	20066	example
O	20067	20070	for
O	20071	20075	this
O	20076	20078	is
B-api_mention	20079	20092	deleteInBatch
I-api_mention	20092	20093	(
I-api_mention	20093	20097	args
I-api_mention	20097	20098	)
O	20099	20101	of
B-api_mention	20102	20115	JpaRepository
O	20116	20121	which
O	20122	20124	is
O	20125	20134	different
O	20135	20139	from
B-api_mention	20140	20146	delete
I-api_mention	20146	20147	(
I-api_mention	20147	20151	args
I-api_mention	20151	20152	)
O	20153	20155	as
O	20156	20158	it
O	20159	20163	uses
O	20164	20165	a
O	20166	20171	query
O	20172	20174	to
O	20175	20181	delete
O	20182	20185	the
O	20186	20191	given
O	20192	20200	entities
O	20201	20206	which
O	20207	20209	is
O	20210	20214	more
O	20215	20225	performant
O	20226	20229	but
O	20230	20235	comes
O	20236	20240	with
O	20241	20244	the
O	20245	20249	side
O	20250	20256	effect
O	20257	20259	of
O	20260	20263	not
O	20264	20274	triggering
O	20275	20278	the
O	20279	20282	JPA
O	20282	20283	-
O	20283	20290	defined
O	20291	20299	cascades
O	20300	20301	(
O	20301	20303	as
O	20304	20307	the
O	20308	20312	spec
O	20313	20320	defines
O	20321	20323	it
O	20323	20324	)
O	20324	20325	.

O	20326	20328	We
O	20329	20338	generally
O	20339	20348	recommend
O	20349	20352	not
O	20353	20355	to
O	20356	20359	use
O	20360	20365	these
O	20366	20370	base
O	20371	20381	interfaces
O	20382	20384	as
O	20385	20389	they
O	20390	20396	expose
O	20397	20400	the
O	20401	20411	underlying
O	20412	20423	persistence
O	20424	20434	technology
O	20435	20437	to
O	20438	20441	the
O	20442	20449	clients
O	20450	20453	and
O	20454	20458	thus
O	20459	20466	tighten
O	20467	20470	the
O	20471	20479	coupling
O	20480	20487	between
O	20488	20492	them
O	20493	20496	and
O	20497	20500	the
O	20501	20511	repository
O	20511	20512	.

O	20513	20517	Plus
O	20517	20518	,
O	20519	20522	you
O	20523	20526	get
O	20527	20528	a
O	20529	20532	bit
O	20533	20537	away
O	20538	20542	from
O	20543	20546	the
O	20547	20555	original
O	20556	20566	definition
O	20567	20569	of
O	20570	20571	a
O	20572	20582	repository
O	20583	20588	which
O	20589	20591	is
O	20592	20601	basically
O	20602	20603	"
O	20603	20604	a
O	20605	20615	collection
O	20616	20618	of
O	20619	20627	entities
O	20627	20628	"
O	20628	20629	.

O	20630	20632	So
O	20633	20635	if
O	20636	20639	you
O	20640	20643	can
O	20643	20644	,
O	20645	20649	stay
O	20650	20654	with
B-api_mention	20655	20681	PagingAndSortingRepository
O	20682	20683	.

O	20684	20690	Custom
O	20691	20701	repository
O	20702	20706	base
O	20707	20717	interfaces
O	20718	20721	The
O	20722	20730	downside
O	20731	20733	of
O	20734	20742	directly
O	20743	20752	depending
O	20753	20755	on
O	20756	20759	one
O	20760	20762	of
O	20763	20766	the
O	20767	20775	provided
O	20776	20780	base
O	20781	20791	interfaces
O	20792	20794	is
O	20795	20798	two
O	20798	20799	-
O	20799	20803	fold
O	20803	20804	.

O	20805	20809	Both
O	20810	20812	of
O	20813	20817	them
O	20818	20823	might
O	20824	20826	be
O	20827	20837	considered
O	20838	20840	as
O	20841	20852	theoretical
O	20853	20856	but
O	20857	20858	I
O	20859	20864	think
O	20865	20869	they
O	20869	20870	'
O	20870	20872	re
O	20873	20882	important
O	20883	20885	to
O	20886	20888	be
O	20889	20894	aware
O	20895	20897	of
O	20897	20898	:
O	20899	20900	#
O	20900	20902	li
O	20903	20912	Depending
O	20913	20915	on
O	20916	20917	a
O	20918	20919	a
O	20920	20926	Spring
O	20927	20931	Data
O	20932	20942	repository
O	20943	20952	interface
O	20953	20960	couples
O	20961	20965	your
O	20966	20976	repository
O	20977	20986	interface
O	20987	20989	to
O	20990	20993	the
O	20994	21001	library
O	21001	21002	.

O	21003	21004	I
O	21005	21008	don
O	21008	21009	'
O	21009	21010	t
O	21011	21016	think
O	21017	21021	this
O	21022	21024	is
O	21025	21026	a
O	21027	21037	particular
O	21038	21043	issue
O	21044	21046	as
O	21047	21050	you
O	21050	21051	'
O	21051	21053	ll
O	21054	21062	probably
O	21063	21066	use
O	21067	21079	abstractions
O	21080	21084	like
B-api_mention	21085	21089	Page
O	21090	21092	or
B-api_mention	21093	21101	Pageable
O	21102	21104	in
O	21105	21109	your
O	21110	21114	code
O	21115	21121	anyway
O	21121	21122	.

O	21123	21129	Spring
O	21130	21134	Data
O	21135	21137	is
O	21138	21141	not
O	21142	21145	any
O	21146	21155	different
O	21156	21160	from
O	21161	21164	any
O	21165	21170	other
O	21171	21178	general
O	21179	21186	purpose
O	21187	21194	library
O	21195	21199	like
O	21200	21207	commons
O	21207	21208	-
O	21208	21212	lang
O	21213	21215	or
O	21216	21221	Guava
O	21221	21222	.

O	21223	21225	As
O	21226	21230	long
O	21231	21233	as
O	21234	21236	it
O	21237	21245	provides
O	21246	21256	reasonable
O	21257	21264	benefit
O	21264	21265	,
O	21266	21268	it
O	21268	21269	'
O	21269	21270	s
O	21271	21275	just
O	21276	21280	fine
O	21280	21281	.

O	21282	21283	#
O	21283	21285	li
O	21286	21288	By
O	21289	21298	extending
O	21299	21300	e
O	21300	21301	.
O	21301	21302	g
O	21302	21303	.
B-api_mention	21304	21318	CrudRepository
O	21319	21320	,
O	21321	21324	you
O	21325	21331	expose
O	21332	21333	a
O	21334	21342	complete
O	21343	21346	set
O	21347	21349	of
O	21350	21361	persistence
O	21362	21368	method
O	21369	21371	at
O	21372	21376	once
O	21376	21377	.

O	21378	21382	This
O	21383	21385	is
O	21386	21394	probably
O	21395	21399	fine
O	21400	21402	in
O	21403	21407	most
O	21408	21421	circumstances
O	21422	21424	as
O	21425	21429	well
O	21430	21433	but
O	21434	21437	you
O	21438	21443	might
O	21444	21447	run
O	21448	21452	into
O	21453	21463	situations
O	21464	21469	where
O	21470	21473	you
O	21473	21474	'
O	21474	21475	d
O	21476	21480	like
O	21481	21483	to
O	21484	21488	gain
O	21489	21493	more
O	21494	21498	fine
O	21498	21499	-
O	21499	21506	grained
O	21507	21514	control
O	21515	21519	over
O	21520	21523	the
O	21524	21531	methods
O	21532	21538	expose
O	21538	21539	,
O	21540	21541	e
O	21541	21542	.
O	21542	21543	g
O	21543	21544	.
O	21545	21547	to
O	21548	21554	create
O	21555	21556	a
B-api_mention	21557	21575	ReadOnlyRepository
O	21576	21580	that
O	21581	21586	doesn
O	21586	21587	'
O	21587	21588	t
O	21589	21596	include
O	21597	21600	the
B-api_mention	21601	21605	save
I-api_mention	21605	21606	(
I-api_mention	21606	21610	args
I-api_mention	21610	21611	)
O	21612	21615	and
B-api_mention	21616	21622	delete
I-api_mention	21622	21623	(
I-api_mention	21623	21627	args
I-api_mention	21627	21628	)
O	21629	21636	methods
O	21637	21639	of
B-api_mention	21640	21654	CrudRepository
O	21655	21656	.

O	21657	21660	The
O	21661	21669	solution
O	21670	21672	to
O	21673	21677	both
O	21678	21680	of
O	21681	21686	these
O	21687	21696	downsides
O	21697	21699	is
O	21700	21702	to
O	21703	21708	craft
O	21709	21713	your
O	21714	21717	own
O	21718	21722	base
O	21723	21733	repository
O	21734	21743	interface
O	21744	21746	or
O	21747	21751	even
O	21752	21753	a
O	21754	21757	set
O	21758	21760	of
O	21761	21765	them
O	21765	21766	.

O	21767	21769	In
O	21770	21771	a
O	21772	21775	lot
O	21776	21778	of
O	21779	21791	applications
O	21792	21794	we
O	21794	21795	'
O	21795	21797	ve
O	21798	21802	seen
O	21803	21812	something
O	21813	21817	like
O	21818	21822	this
O	21822	21823	:
O	21824	21825	#
O	21825	21828	pre
O	21829	21832	The
O	21833	21838	first
O	21839	21849	repository
O	21850	21859	interface
O	21860	21862	is
O	21863	21867	some
O	21868	21875	general
O	21876	21883	purpose
O	21884	21888	base
O	21889	21898	interface
O	21899	21903	that
O	21904	21912	actually
O	21913	21917	only
O	21918	21923	fixes
O	21924	21929	point
O	21930	21931	1
O	21932	21935	but
O	21936	21940	also
O	21941	21945	ties
O	21946	21949	the
O	21950	21952	ID
O	21953	21957	type
O	21958	21960	to
O	21961	21963	be
B-api_mention	21964	21968	Long
O	21969	21972	for
O	21973	21984	consistency
O	21984	21985	.

O	21986	21989	The
O	21990	21996	second
O	21997	22006	interface
O	22007	22014	usually
O	22015	22018	has
O	22019	22022	all
O	22023	22026	the
O	22027	22031	find
O	22031	22032	â¦
O	22032	22033	(
O	22033	22034	â¦
O	22034	22035	)
O	22036	22043	methods
O	22044	22050	copied
O	22051	22055	from
B-api_mention	22056	22070	CrudRepository
O	22071	22074	and
B-api_mention	22075	22101	PagingAndSortingRepository
O	22102	22105	but
O	22106	22110	does
O	22111	22114	not
O	22115	22121	expose
O	22122	22125	the
O	22126	22138	manipulating
O	22139	22143	ones
O	22143	22144	.

O	22145	22149	Read
O	22150	22154	more
O	22155	22157	on
O	22158	22162	that
O	22163	22171	approach
O	22172	22174	in
O	22175	22178	the
O	22179	22188	reference
O	22189	22202	documentation
O	22203	22204	.

O	22205	22212	Summary
O	22213	22214	-
O	22215	22217	tl
O	22217	22218	;
O	22218	22220	dr
O	22221	22224	The
O	22225	22235	repository
O	22236	22247	abstraction
O	22248	22254	allows
O	22255	22258	you
O	22259	22261	to
O	22262	22267	pickt
O	22268	22271	the
O	22272	22276	base
O	22277	22287	repository
O	22288	22295	totally
O	22296	22302	driven
O	22303	22305	by
O	22306	22309	you
O	22310	22323	architectural
O	22324	22327	and
O	22328	22338	functional
O	22339	22344	needs
O	22344	22345	.

O	22346	22349	Use
O	22350	22353	the
O	22354	22358	ones
O	22359	22367	provided
O	22368	22371	out
O	22372	22374	of
O	22375	22378	the
O	22379	22382	box
O	22383	22385	if
O	22386	22390	they
O	22391	22395	suit
O	22395	22396	,
O	22397	22402	craft
O	22403	22407	your
O	22408	22411	own
O	22412	22422	repository
O	22423	22427	base
O	22428	22438	interfaces
O	22439	22441	if
O	22442	22451	necessary
O	22451	22452	.

O	22453	22457	Stay
O	22458	22462	away
O	22463	22467	from
O	22468	22471	the
O	22472	22477	store
O	22478	22486	specific
O	22487	22497	repository
O	22498	22508	interfaces
O	22509	22515	unless
O	22516	22527	unavoidable
O	22527	22528	.

O	22530	22538	Question
O	22538	22539	-
O	22539	22547	12317668
O	22547	22548	,
O	22549	22555	answer
O	22555	22556	-
O	22556	22564	12375312

O	22565	22569	Here
O	22570	22572	we
O	22573	22576	are
O	22577	22582	faced
O	22583	22587	with
O	22588	22589	a
O	22590	22593	bug
O	22594	22596	in
O	22597	22600	the
O	22601	22604	JIT
O	22604	22605	-
O	22605	22613	compiler
O	22613	22614	.

O	22615	22623	Compiler
O	22624	22634	determines
O	22635	22639	that
O	22640	22643	the
O	22644	22653	allocated
O	22654	22659	array
O	22660	22662	is
O	22663	22669	filled
O	22670	22675	after
O	22676	22686	allocation
O	22687	22689	in
B-api_mention	22690	22696	Arrays
I-api_mention	22696	22697	.
I-api_mention	22697	22701	fill
I-api_mention	22701	22702	(
I-api_mention	22702	22706	args
I-api_mention	22706	22707	)
O	22708	22709	,
O	22710	22713	but
O	22714	22717	the
O	22718	22723	check
O	22724	22727	for
O	22728	22732	uses
O	22733	22740	between
O	22741	22744	the
O	22745	22755	allocation
O	22756	22759	and
O	22760	22763	the
O	22764	22768	fill
O	22769	22771	is
O	22772	22778	faulty
O	22778	22779	.

O	22780	22782	So
O	22782	22783	,
O	22784	22792	compiler
O	22793	22801	performs
O	22802	22804	an
O	22805	22812	illegal
O	22813	22825	optimization
O	22826	22827	-
O	22828	22830	it
O	22831	22836	skips
O	22837	22844	zeroing
O	22845	22847	of
O	22848	22857	allocated
O	22858	22863	array
O	22863	22864	.

O	22865	22869	This
O	22870	22873	bug
O	22874	22876	is
O	22877	22883	placed
O	22884	22886	in
O	22887	22893	Oracle
O	22894	22897	bug
O	22898	22905	tracker
O	22906	22907	(
O	22908	22911	bug
O	22912	22914	id
O	22915	22922	7196857
O	22923	22924	)
O	22924	22925	.

O	22926	22939	Unfortunately
O	22939	22940	,
O	22941	22942	I
O	22943	22946	did
O	22947	22950	not
O	22951	22955	wait
O	22956	22959	for
O	22960	22963	any
O	22964	22978	clarifications
O	22979	22983	from
O	22984	22990	Oracle
O	22991	22996	about
O	22997	23000	the
O	23001	23010	following
O	23011	23017	points
O	23017	23018	.

O	23019	23021	As
O	23022	23023	I
O	23024	23027	see
O	23027	23028	,
O	23029	23033	this
O	23034	23037	bug
O	23038	23040	is
O	23041	23043	OS
O	23043	23044	-
O	23044	23052	specific
O	23052	23053	:
O	23054	23056	it
O	23057	23067	absolutely
O	23068	23080	reproducible
O	23081	23083	on
O	23084	23086	64
O	23086	23087	-
O	23087	23090	bit
O	23091	23096	Linux
O	23097	23100	and
O	23101	23104	Mac
O	23104	23105	,
O	23106	23109	but
O	23109	23110	,
O	23111	23113	as
O	23114	23115	I
O	23116	23119	see
O	23120	23124	from
O	23125	23133	comments
O	23133	23134	,
O	23135	23137	it
O	23138	23148	reproduces
O	23149	23152	not
O	23153	23162	regularly
O	23163	23165	on
O	23166	23173	Windows
O	23174	23175	(
O	23175	23178	for
O	23179	23186	similar
O	23187	23195	versions
O	23196	23198	of
O	23199	23202	JDK
O	23202	23203	)
O	23203	23204	.

O	23205	23217	Additionally
O	23218	23220	it
O	23221	23226	would
O	23227	23229	be
O	23230	23234	nice
O	23235	23237	to
O	23238	23242	know
O	23243	23247	when
O	23248	23252	this
O	23253	23256	bug
O	23257	23261	will
O	23262	23264	be
O	23265	23270	fixed
O	23270	23271	.

O	23272	23277	There
O	23278	23280	is
O	23281	23285	only
O	23286	23292	advice
O	23293	23295	at
O	23296	23299	the
O	23300	23306	moment
O	23306	23307	:
O	23308	23310	do
O	23311	23314	not
O	23315	23318	use
O	23319	23323	JDK1
O	23323	23324	.
O	23324	23325	7
O	23325	23326	.
O	23326	23327	0
O	23327	23328	_
O	23328	23330	04
O	23331	23333	or
O	23334	23339	later
O	23340	23342	if
O	23343	23346	you
O	23347	23353	depend
O	23354	23356	on
O	23357	23360	JLS
O	23361	23364	for
O	23365	23370	newly
O	23371	23379	declared
O	23380	23386	arrays
O	23386	23387	.

O	23388	23394	Update
O	23395	23397	at
O	23398	23405	October
O	23406	23407	5
O	23407	23408	:
O	23409	23411	In
O	23412	23415	the
O	23416	23419	new
O	23420	23425	Build
O	23426	23428	10
O	23429	23431	of
O	23432	23435	the
O	23436	23439	JDK
O	23440	23444	7u10
O	23445	23446	(
O	23446	23451	early
O	23452	23458	access
O	23458	23459	)
O	23460	23468	released
O	23469	23471	at
O	23472	23479	October
O	23480	23482	04
O	23482	23483	,
O	23484	23488	2012
O	23488	23489	,
O	23490	23494	this
O	23495	23498	bug
O	23499	23502	was
O	23503	23508	fixed
O	23509	23511	at
O	23512	23517	least
O	23518	23521	for
O	23522	23527	Linux
O	23528	23530	OS
O	23531	23532	(
O	23532	23533	I
O	23534	23537	did
O	23538	23541	not
O	23542	23546	test
O	23547	23550	for
O	23551	23556	other
O	23556	23557	)
O	23557	23558	.

O	23559	23565	Thanks
O	23566	23568	to
O	23569	23570	@
O	23570	23576	Makoto
O	23576	23577	,
O	23578	23581	who
O	23582	23587	found
O	23588	23592	that
O	23593	23597	this
O	23598	23601	bug
O	23602	23604	is
O	23605	23607	no
O	23608	23614	longer
O	23615	23624	available
O	23625	23628	for
O	23629	23635	public
O	23636	23642	access
O	23643	23645	in
O	23646	23652	Oracle
O	23653	23656	bug
O	23657	23665	database
O	23665	23666	.

O	23667	23680	Unfortunately
O	23680	23681	,
O	23682	23683	I
O	23684	23686	do
O	23687	23690	not
O	23691	23695	know
O	23696	23699	for
O	23700	23703	the
O	23704	23711	reasons
O	23712	23718	Oracle
O	23719	23726	removed
O	23727	23729	it
O	23730	23734	from
O	23735	23741	public
O	23742	23748	access
O	23748	23749	,
O	23750	23753	but
O	23754	23756	it
O	23757	23759	is
O	23760	23769	available
O	23770	23772	in
O	23773	23779	Google
O	23780	23785	cache
O	23786	23787	.

O	23788	23792	Also
O	23792	23793	,
O	23794	23798	this
O	23799	23802	bug
O	23803	23806	has
O	23807	23813	caught
O	23814	23817	the
O	23818	23827	attention
O	23828	23830	of
O	23831	23837	Redhat
O	23837	23838	:
O	23839	23842	the
O	23843	23846	CVE
O	23847	23858	identifiers
O	23859	23862	CVE
O	23862	23863	-
O	23863	23867	2012
O	23867	23868	-
O	23868	23872	4420
O	23873	23874	(
O	23875	23883	bugzilla
O	23884	23885	)
O	23886	23889	and
O	23890	23893	CVE
O	23893	23894	-
O	23894	23898	2012
O	23898	23899	-
O	23899	23903	4416
O	23904	23905	(
O	23906	23914	bugzilla
O	23915	23916	)
O	23917	23921	were
O	23922	23930	assigned
O	23931	23933	to
O	23934	23938	this
O	23939	23943	flaw
O	23943	23944	.

O	23946	23954	Question
O	23954	23955	-
O	23955	23963	13604703
O	23963	23964	,
O	23965	23971	answer
O	23971	23972	-
O	23972	23980	13604748

O	23981	23988	Lambdas
O	23989	23992	are
O	23993	23999	purely
O	24000	24001	a
O	24002	24006	call
O	24006	24007	-
O	24007	24011	site
O	24012	24021	construct
O	24021	24022	:
O	24023	24026	the
O	24027	24036	recipient
O	24037	24039	of
O	24040	24043	the
O	24044	24050	lambda
O	24051	24055	does
O	24056	24059	not
O	24060	24064	need
O	24065	24067	to
O	24068	24072	know
O	24073	24077	that
O	24078	24079	a
O	24080	24086	Lambda
O	24087	24089	is
O	24090	24098	involved
O	24098	24099	,
O	24100	24107	instead
O	24108	24110	it
O	24111	24118	accepts
O	24119	24121	an
O	24122	24131	Interface
O	24132	24136	with
O	24137	24140	the
O	24141	24152	appropriate
O	24153	24159	method
O	24159	24160	.

O	24161	24163	In
O	24164	24169	other
O	24170	24175	words
O	24175	24176	,
O	24177	24180	you
O	24181	24187	define
O	24188	24190	or
O	24191	24194	use
O	24195	24196	a
O	24197	24207	functional
O	24208	24217	interface
O	24218	24219	(
O	24219	24220	i
O	24220	24221	.
O	24221	24222	e
O	24222	24223	.
O	24224	24226	an
O	24227	24236	interface
O	24237	24241	with
O	24242	24243	a
O	24244	24250	single
O	24251	24257	method
O	24257	24258	)
O	24259	24263	that
O	24264	24271	accepts
O	24272	24275	and
O	24276	24283	returns
O	24284	24291	exactly
O	24292	24296	what
O	24297	24300	you
O	24301	24305	want
O	24305	24306	.

O	24307	24310	For
O	24311	24315	this
O	24316	24320	Java
O	24321	24322	8
O	24323	24328	comes
O	24329	24333	with
O	24334	24335	a
O	24336	24339	set
O	24340	24342	of
O	24343	24351	commonly
O	24351	24352	-
O	24352	24356	used
O	24357	24366	interface
O	24367	24372	types
O	24373	24375	in
B-api_mention	24376	24380	java
I-api_mention	24380	24381	.
I-api_mention	24381	24385	util
I-api_mention	24385	24386	.
I-api_mention	24386	24394	function
O	24395	24396	(
O	24396	24402	thanks
O	24403	24405	to
O	24406	24413	Maurice
O	24414	24422	Naftalin
O	24423	24426	for
O	24427	24430	the
O	24431	24435	hint
O	24436	24441	about
O	24442	24445	the
O	24446	24453	JavaDoc
O	24453	24454	)
O	24454	24455	.

O	24456	24459	For
O	24460	24464	this
O	24465	24473	specific
O	24474	24477	use
O	24478	24482	case
O	24483	24488	there
O	24488	24489	'
O	24489	24490	s
B-api_mention	24491	24495	java
I-api_mention	24495	24496	.
I-api_mention	24496	24500	util
I-api_mention	24500	24501	.
I-api_mention	24501	24509	function
I-api_mention	24509	24510	.
I-api_mention	24510	24527	IntBinaryOperator
O	24528	24532	with
O	24533	24534	a
O	24535	24541	single
O	24542	24545	int
B-api_mention	24546	24556	applyAsInt
I-api_mention	24556	24557	(
I-api_mention	24557	24560	int
I-api_mention	24561	24565	left
I-api_mention	24565	24566	,
I-api_mention	24567	24570	int
I-api_mention	24571	24576	right
I-api_mention	24576	24577	)
O	24578	24584	method
O	24585	24586	,
O	24587	24589	so
O	24590	24593	you
O	24594	24599	could
O	24600	24605	write
O	24606	24610	your
O	24611	24617	method
O	24618	24622	like
O	24623	24627	this
O	24627	24628	:
O	24629	24630	#
O	24630	24633	pre
O	24634	24637	But
O	24638	24641	you
O	24642	24645	can
O	24646	24650	just
O	24651	24653	as
O	24654	24658	well
O	24659	24665	define
O	24666	24670	your
O	24671	24674	own
O	24675	24684	interface
O	24685	24688	and
O	24689	24692	use
O	24693	24695	it
O	24696	24700	like
O	24701	24705	this
O	24705	24706	:
O	24707	24708	#
O	24708	24711	pre
O	24712	24717	Using
O	24718	24722	your
O	24723	24726	own
O	24727	24736	interface
O	24737	24740	has
O	24741	24744	the
O	24745	24754	advantage
O	24755	24759	that
O	24760	24763	you
O	24764	24767	can
O	24768	24772	have
O	24773	24778	names
O	24779	24783	that
O	24784	24788	more
O	24789	24796	clearly
O	24797	24805	indicate
O	24806	24809	the
O	24810	24816	intent
O	24816	24817	.

O	24819	24827	Question
O	24827	24828	-
O	24828	24836	13744450
O	24836	24837	,
O	24838	24844	answer
O	24844	24845	-
O	24845	24853	13744816

O	24854	24856	In
O	24857	24861	very
O	24862	24868	simple
O	24869	24874	terms
O	24875	24876	(
O	24876	24883	because
O	24884	24887	the
O	24888	24893	other
O	24894	24901	answers
O	24902	24905	are
O	24906	24915	referring
O	24916	24919	you
O	24920	24922	to
O	24923	24926	all
O	24927	24930	the
O	24931	24939	official
O	24940	24946	design
O	24947	24955	patterns
O	24956	24962	anyway
O	24962	24963	,
O	24964	24966	so
O	24967	24971	look
O	24972	24974	at
O	24975	24979	them
O	24980	24983	for
O	24984	24991	further
O	24992	24999	details
O	24999	25000	)
O	25000	25001	:
O	25002	25004	If
O	25005	25008	you
O	25009	25013	want
O	25014	25016	to
O	25017	25021	have
O	25022	25023	a
O	25024	25029	class
O	25030	25035	which
O	25036	25038	is
O	25039	25048	monitored
O	25049	25051	by
O	25052	25057	other
O	25058	25065	classes
O	25066	25068	in
O	25069	25072	the
O	25073	25082	ecosystem
O	25083	25085	of
O	25086	25090	your
O	25091	25098	program
O	25099	25102	you
O	25103	25106	say
O	25107	25111	that
O	25112	25115	you
O	25116	25120	want
O	25121	25124	the
O	25125	25130	class
O	25131	25133	to
O	25134	25136	be
O	25137	25147	observable
O	25147	25148	.

O	25149	25150	I
O	25150	25151	.
O	25151	25152	e
O	25152	25153	.
O	25154	25159	there
O	25160	25165	might
O	25166	25168	be
O	25169	25173	some
O	25174	25181	changes
O	25182	25184	in
O	25185	25188	its
O	25189	25194	state
O	25195	25200	which
O	25201	25204	you
O	25205	25210	would
O	25211	25215	want
O	25216	25218	to
O	25219	25228	broadcast
O	25229	25231	to
O	25232	25235	the
O	25236	25240	rest
O	25241	25243	of
O	25244	25247	the
O	25248	25255	program
O	25255	25256	.

O	25257	25260	Now
O	25260	25261	,
O	25262	25264	to
O	25265	25267	do
O	25268	25272	this
O	25273	25275	we
O	25276	25280	have
O	25281	25283	to
O	25284	25288	call
O	25289	25293	some
O	25294	25298	kind
O	25299	25301	of
O	25302	25308	method
O	25308	25309	.

O	25310	25312	We
O	25313	25316	don
O	25316	25317	'
O	25317	25318	t
O	25319	25323	want
O	25324	25327	the
B-api_mention	25328	25338	Observable
O	25339	25344	class
O	25345	25347	to
O	25348	25350	be
O	25351	25358	tightly
O	25359	25366	coupled
O	25367	25371	with
O	25372	25375	the
O	25376	25383	classes
O	25384	25388	that
O	25389	25392	are
O	25393	25403	interested
O	25404	25406	in
O	25407	25416	observing
O	25417	25419	it
O	25419	25420	.

O	25421	25423	It
O	25424	25429	doesn
O	25429	25430	'
O	25430	25431	t
O	25432	25436	care
O	25437	25440	who
O	25441	25443	it
O	25444	25446	is
O	25447	25449	as
O	25450	25454	long
O	25455	25457	as
O	25458	25460	it
O	25461	25468	fulfils
O	25469	25476	certain
O	25477	25485	criteria
O	25485	25486	.

O	25487	25488	(
O	25488	25495	Imagine
O	25496	25498	it
O	25499	25501	is
O	25502	25503	a
O	25504	25509	radio
O	25510	25517	station
O	25517	25518	,
O	25519	25521	it
O	25522	25527	doesn
O	25527	25528	'
O	25528	25529	t
O	25530	25534	care
O	25535	25538	who
O	25539	25541	is
O	25542	25551	listening
O	25552	25554	as
O	25555	25559	long
O	25560	25562	as
O	25563	25567	they
O	25568	25572	have
O	25573	25575	an
O	25576	25578	FM
O	25579	25584	radio
O	25585	25590	tuned
O	25591	25593	on
O	25594	25599	their
O	25600	25609	frequency
O	25609	25610	)
O	25610	25611	.

O	25612	25614	To
O	25615	25622	achieve
O	25623	25627	that
O	25628	25630	we
O	25631	25634	use
O	25635	25637	an
O	25638	25647	interface
O	25647	25648	,
O	25649	25657	referred
O	25658	25660	to
O	25661	25663	as
O	25664	25667	the
B-api_mention	25668	25676	Observer
O	25676	25677	.

O	25678	25687	Therefore
O	25687	25688	,
O	25689	25692	the
B-api_mention	25693	25703	Observable
O	25704	25709	class
O	25710	25714	will
O	25715	25719	have
O	25720	25721	a
O	25722	25726	list
O	25727	25729	of
B-api_mention	25730	25739	Observers
O	25740	25741	(
O	25741	25742	i
O	25742	25743	.
O	25743	25744	e
O	25744	25745	.
O	25746	25755	instances
O	25756	25768	implementing
O	25769	25772	the
B-api_mention	25773	25781	Observer
O	25782	25791	interface
O	25792	25799	methods
O	25800	25803	you
O	25804	25809	might
O	25810	25814	have
O	25814	25815	)
O	25815	25816	.

O	25817	25825	Whenever
O	25826	25828	it
O	25829	25834	wants
O	25835	25837	to
O	25838	25847	broadcast
O	25848	25857	something
O	25857	25858	,
O	25859	25861	it
O	25862	25866	just
O	25867	25872	calls
O	25873	25876	the
O	25877	25883	method
O	25884	25886	on
O	25887	25890	all
O	25891	25894	the
O	25895	25904	observers
O	25904	25905	,
O	25906	25909	one
O	25910	25915	after
O	25916	25919	the
O	25920	25925	other
O	25925	25926	.

O	25927	25930	The
O	25931	25935	last
O	25936	25941	thing
O	25942	25944	to
O	25945	25950	close
O	25951	25954	the
O	25955	25961	puzzle
O	25962	25964	is
O	25965	25968	how
O	25969	25973	will
O	25974	25977	the
B-api_mention	25978	25988	Observable
O	25989	25994	class
O	25995	25999	know
O	26000	26003	who
O	26004	26006	is
O	26007	26017	interested
O	26017	26018	?

O	26019	26021	So
O	26022	26025	the
B-api_mention	26026	26036	Observable
O	26037	26042	class
O	26043	26047	must
O	26048	26053	offer
O	26054	26058	some
O	26059	26068	mechanism
O	26069	26071	to
O	26072	26077	allow
B-api_mention	26078	26087	Observers
O	26088	26090	to
O	26091	26099	register
O	26100	26105	their
O	26106	26114	interest
O	26114	26115	.

O	26116	26117	A
O	26118	26124	method
O	26125	26129	such
O	26130	26132	as
B-api_mention	26133	26144	addObserver
I-api_mention	26144	26145	(
I-api_mention	26145	26149	args
I-api_mention	26149	26150	)
O	26151	26161	internally
O	26162	26166	adds
O	26167	26170	the
B-api_mention	26171	26179	Observer
O	26180	26182	to
O	26183	26186	the
O	26187	26191	list
O	26192	26194	of
O	26195	26204	observers
O	26204	26205	,
O	26206	26208	so
O	26209	26213	that
O	26214	26218	when
O	26219	26228	something
O	26229	26238	important
O	26239	26246	happens
O	26246	26247	,
O	26248	26250	it
O	26251	26256	loops
O	26257	26264	through
O	26265	26268	the
O	26269	26273	list
O	26274	26277	and
O	26278	26283	calls
O	26284	26287	the
O	26288	26298	respective
O	26299	26311	notification
O	26312	26318	method
O	26319	26321	of
O	26322	26325	the
B-api_mention	26326	26334	Observer
O	26335	26344	interface
O	26345	26347	of
O	26348	26352	each
O	26353	26361	instance
O	26362	26364	in
O	26365	26368	the
O	26369	26373	list
O	26373	26374	.

O	26375	26377	It
O	26378	26383	might
O	26384	26386	be
O	26387	26391	that
O	26392	26394	in
O	26395	26398	the
O	26399	26408	interview
O	26409	26413	they
O	26414	26417	did
O	26418	26421	not
O	26422	26425	ask
O	26426	26429	you
O	26430	26440	explicitly
O	26441	26446	about
O	26447	26450	the
B-api_mention	26451	26455	java
I-api_mention	26455	26456	.
I-api_mention	26456	26460	util
I-api_mention	26460	26461	.
I-api_mention	26461	26469	Observer
O	26470	26473	and
B-api_mention	26474	26478	java
I-api_mention	26478	26479	.
I-api_mention	26479	26483	util
I-api_mention	26483	26484	.
I-api_mention	26484	26494	Observable
O	26495	26498	but
O	26499	26504	about
O	26505	26508	the
O	26509	26516	generic
O	26517	26524	concept
O	26524	26525	.

O	26526	26529	The
O	26530	26537	concept
O	26538	26540	is
O	26541	26542	a
O	26543	26549	design
O	26550	26557	pattern
O	26557	26558	,
O	26559	26564	which
O	26565	26569	Java
O	26570	26577	happens
O	26578	26580	to
O	26581	26588	provide
O	26589	26596	support
O	26597	26600	for
O	26601	26609	directly
O	26610	26613	out
O	26614	26616	of
O	26617	26620	the
O	26621	26624	box
O	26625	26627	to
O	26628	26632	help
O	26633	26636	you
O	26637	26646	implement
O	26647	26649	it
O	26650	26657	quickly
O	26658	26662	when
O	26663	26666	you
O	26667	26671	need
O	26672	26674	it
O	26674	26675	.

O	26676	26678	So
O	26679	26680	I
O	26681	26686	would
O	26687	26694	suggest
O	26695	26699	that
O	26700	26703	you
O	26704	26714	understand
O	26715	26718	the
O	26719	26726	concept
O	26727	26733	rather
O	26734	26738	than
O	26739	26742	the
O	26743	26749	actual
O	26750	26757	methods
O	26757	26758	/
O	26758	26765	classes
O	26766	26767	(
O	26767	26772	which
O	26773	26776	you
O	26777	26780	can
O	26781	26785	look
O	26786	26788	up
O	26789	26793	when
O	26794	26797	you
O	26798	26802	need
O	26803	26807	them
O	26807	26808	)
O	26808	26809	.

O	26810	26816	UPDATE
O	26817	26819	In
O	26820	26828	response
O	26829	26831	to
O	26832	26836	your
O	26837	26844	comment
O	26844	26845	,
O	26846	26849	the
O	26850	26856	actual
B-api_mention	26857	26861	java
I-api_mention	26861	26862	.
I-api_mention	26862	26866	util
I-api_mention	26866	26867	.
I-api_mention	26867	26877	Observable
O	26878	26883	class
O	26884	26890	offers
O	26891	26894	the
O	26895	26904	following
O	26905	26915	facilities
O	26915	26916	:
O	26917	26918	#
O	26918	26920	li
O	26921	26932	Maintaining
O	26933	26934	a
O	26935	26939	list
O	26940	26942	of
B-api_mention	26943	26947	java
I-api_mention	26947	26948	.
I-api_mention	26948	26952	util
I-api_mention	26952	26953	.
I-api_mention	26953	26961	Observer
O	26962	26971	instances
O	26971	26972	.

O	26973	26976	New
O	26977	26986	instances
O	26987	26997	interested
O	26998	27000	in
O	27001	27006	being
O	27007	27015	notified
O	27016	27019	can
O	27020	27022	be
O	27023	27028	added
O	27029	27036	through
B-api_mention	27037	27048	addObserver
I-api_mention	27048	27049	(
I-api_mention	27049	27053	args
I-api_mention	27053	27054	)
O	27055	27056	,
O	27057	27060	and
O	27061	27068	removed
O	27069	27076	through
B-api_mention	27077	27091	deleteObserver
I-api_mention	27091	27092	(
I-api_mention	27092	27096	args
I-api_mention	27096	27097	)
O	27098	27099	.

O	27100	27101	#
O	27101	27103	li
O	27104	27115	Maintaining
O	27116	27118	an
O	27119	27127	internal
O	27128	27133	state
O	27133	27134	,
O	27135	27145	specifying
O	27146	27153	whether
O	27154	27157	the
O	27158	27164	object
O	27165	27168	has
O	27169	27176	changed
O	27177	27182	since
O	27183	27186	the
O	27187	27191	last
O	27192	27204	notification
O	27205	27207	to
O	27208	27211	the
O	27212	27221	observers
O	27221	27222	.

O	27223	27227	This
O	27228	27230	is
O	27231	27237	useful
O	27238	27245	because
O	27246	27248	it
O	27249	27258	separates
O	27259	27262	the
O	27263	27267	part
O	27268	27273	where
O	27274	27277	you
O	27278	27281	say
O	27282	27286	that
O	27287	27290	the
B-api_mention	27291	27301	Observable
O	27302	27305	has
O	27306	27313	changed
O	27313	27314	,
O	27315	27319	from
O	27320	27323	the
O	27324	27328	part
O	27329	27334	where
O	27335	27338	you
O	27339	27345	notify
O	27346	27349	the
O	27350	27357	changes
O	27357	27358	.

O	27359	27360	(
O	27360	27361	E
O	27361	27362	.
O	27362	27363	g
O	27363	27364	.
O	27365	27368	Its
O	27369	27375	useful
O	27376	27378	if
O	27379	27382	you
O	27383	27387	have
O	27388	27396	multiple
O	27397	27404	changes
O	27405	27414	happening
O	27415	27418	and
O	27419	27422	you
O	27423	27427	only
O	27428	27432	want
O	27433	27435	to
O	27436	27442	notify
O	27443	27445	at
O	27446	27449	the
O	27450	27453	end
O	27454	27456	of
O	27457	27460	the
O	27461	27468	process
O	27469	27475	rather
O	27476	27480	than
O	27481	27483	at
O	27484	27488	each
O	27489	27494	small
O	27495	27499	step
O	27499	27500	)
O	27500	27501	.

O	27502	27506	This
O	27507	27509	is
O	27510	27514	done
O	27515	27522	through
B-api_mention	27523	27533	setChanged
I-api_mention	27533	27534	(
I-api_mention	27534	27538	args
I-api_mention	27538	27539	)
O	27540	27541	.

O	27542	27544	So
O	27545	27548	you
O	27549	27553	just
O	27554	27558	call
O	27559	27561	it
O	27562	27566	when
O	27567	27570	you
O	27571	27578	changed
O	27579	27588	something
O	27589	27591	to
O	27592	27595	the
B-api_mention	27596	27606	Observable
O	27607	27610	and
O	27611	27614	you
O	27615	27619	want
O	27620	27623	the
O	27624	27628	rest
O	27629	27631	of
O	27632	27635	the
B-api_mention	27636	27645	Observers
O	27646	27648	to
O	27649	27659	eventually
O	27660	27664	know
O	27665	27670	about
O	27671	27673	it
O	27673	27674	.

O	27675	27676	#
O	27676	27678	li
O	27679	27688	Notifying
O	27689	27692	all
O	27693	27702	observers
O	27703	27707	that
O	27708	27711	the
O	27712	27720	specific
B-api_mention	27721	27731	Observable
O	27732	27735	has
O	27736	27743	changed
O	27744	27749	state
O	27749	27750	.

O	27751	27755	This
O	27756	27758	is
O	27759	27763	done
O	27764	27771	through
B-api_mention	27772	27787	notifyObservers
I-api_mention	27787	27788	(
I-api_mention	27788	27792	args
I-api_mention	27792	27793	)
O	27794	27795	.

O	27796	27800	This
O	27801	27807	checks
O	27808	27810	if
O	27811	27814	the
O	27815	27821	object
O	27822	27825	has
O	27826	27834	actually
O	27835	27842	changed
O	27843	27844	(
O	27844	27845	i
O	27845	27846	.
O	27846	27847	e
O	27847	27848	.
O	27849	27850	a
O	27851	27855	call
O	27856	27858	to
B-api_mention	27859	27869	setChanged
I-api_mention	27869	27870	(
I-api_mention	27870	27874	args
I-api_mention	27874	27875	)
O	27876	27879	was
O	27880	27884	made
O	27884	27885	)
O	27886	27892	before
O	27893	27903	proceeding
O	27904	27908	with
O	27909	27912	the
O	27913	27925	notification
O	27925	27926	.

O	27927	27932	There
O	27933	27936	are
O	27937	27938	2
O	27939	27947	versions
O	27947	27948	,
O	27949	27952	one
O	27953	27957	with
O	27958	27960	no
O	27961	27970	arguments
O	27971	27974	and
O	27975	27978	one
O	27979	27983	with
O	27984	27986	an
B-api_mention	27987	27993	Object
O	27994	28002	argument
O	28002	28003	,
O	28004	28006	in
O	28007	28011	case
O	28012	28015	you
O	28016	28020	want
O	28021	28023	to
O	28024	28028	pass
O	28029	28033	some
O	28034	28039	extra
O	28040	28051	information
O	28052	28056	with
O	28057	28060	the
O	28061	28073	notification
O	28073	28074	.

O	28075	28085	Internally
O	28086	28090	what
O	28091	28098	happens
O	28099	28101	is
O	28102	28106	that
O	28107	28109	it
O	28110	28114	just
O	28115	28123	iterates
O	28124	28131	through
O	28132	28135	the
O	28136	28140	list
O	28141	28143	of
B-api_mention	28144	28152	Observer
O	28153	28162	instances
O	28163	28166	and
O	28167	28172	calls
O	28173	28176	the
B-api_mention	28177	28183	update
O	28183	28184	(
B-api_mention	28184	28194	Observable
O	28195	28196	o
O	28196	28197	,
B-api_mention	28198	28204	Object
O	28205	28208	arg
O	28208	28209	)
O	28210	28216	method
O	28217	28220	for
O	28221	28225	each
O	28226	28228	of
O	28229	28233	them
O	28233	28234	.

O	28235	28239	This
O	28240	28245	tells
O	28246	28249	the
B-api_mention	28250	28258	Observer
O	28259	28264	which
O	28265	28268	was
O	28269	28272	the
B-api_mention	28273	28283	Observable
O	28284	28290	object
O	28291	28295	that
O	28296	28303	changed
O	28304	28305	(
O	28305	28308	you
O	28309	28314	could
O	28315	28317	be
O	28318	28327	observing
O	28328	28332	more
O	28333	28337	than
O	28338	28341	one
O	28341	28342	)
O	28342	28343	,
O	28344	28347	and
O	28348	28351	the
O	28352	28357	extra
B-api_mention	28358	28364	Object
O	28365	28368	arg
O	28369	28371	to
O	28372	28383	potentially
O	28384	28389	carry
O	28390	28394	some
O	28395	28400	extra
O	28401	28412	information
O	28413	28414	(
O	28414	28420	passed
O	28421	28428	through
B-api_mention	28429	28444	notifyObservers
I-api_mention	28444	28445	(
I-api_mention	28445	28449	args
I-api_mention	28449	28450	)
O	28451	28452	.

O	28454	28462	Question
O	28462	28463	-
O	28463	28471	11408427
O	28471	28472	,
O	28473	28479	answer
O	28479	28480	-
O	28480	28488	11408477

O	28489	28492	The
O	28493	28494	+
O	28495	28503	operator
O	28504	28506	is
O	28507	28514	usually
O	28515	28523	replaced
O	28524	28526	by
O	28527	28528	a
B-api_mention	28529	28542	StringBuilder
O	28543	28545	at
O	28546	28553	compile
O	28554	28558	time
O	28558	28559	.

O	28560	28565	Check
O	28566	28570	this
O	28571	28577	answer
O	28578	28581	for
O	28582	28586	more
O	28587	28594	details
O	28595	28597	on
O	28598	28602	that
O	28603	28609	matter
O	28609	28610	.

O	28612	28620	Question
O	28620	28621	-
O	28621	28629	11408427
O	28629	28630	,
O	28631	28637	answer
O	28637	28638	-
O	28638	28646	11408482

O	28647	28650	The
O	28651	28655	Java
O	28656	28664	language
O	28665	28673	provides
O	28674	28681	special
O	28682	28689	support
O	28690	28693	for
O	28694	28697	the
O	28698	28704	string
O	28705	28718	concatenation
O	28719	28727	operator
O	28728	28729	(
O	28729	28730	+
O	28730	28731	)
O	28732	28735	and
O	28736	28739	for
O	28740	28750	conversion
O	28751	28753	of
O	28754	28759	other
O	28760	28767	objects
O	28768	28770	to
O	28771	28778	strings
O	28778	28779	.

B-api_mention	28780	28786	String
O	28787	28800	concatenation
O	28801	28803	is
O	28804	28815	implemented
O	28816	28823	through
O	28824	28827	the
B-api_mention	28828	28841	StringBuilder
O	28842	28843	(
O	28843	28845	or
B-api_mention	28846	28858	StringBuffer
O	28859	28860	)
O	28861	28866	class
O	28867	28870	and
O	28871	28874	its
O	28875	28881	append
O	28882	28888	method
O	28888	28889	.

O	28891	28899	Question
O	28899	28900	-
O	28900	28908	11408427
O	28908	28909	,
O	28910	28916	answer
O	28916	28917	-
O	28917	28925	11408526

O	28926	28929	Let
O	28929	28930	'
O	28930	28931	s
O	28932	28936	look
O	28937	28939	at
O	28940	28943	the
O	28944	28953	following
O	28954	28960	simple
O	28961	28972	expressions
O	28973	28975	in
O	28976	28980	Java
O	28981	28982	#
O	28982	28985	pre
O	28986	28989	The
O	28990	28998	compiler
O	28999	29007	converts
O	29008	29021	StringLiteral
O	29021	29022	+
O	29022	29023	x
O	29023	29024	;
O	29025	29029	into
O	29030	29031	a
B-api_mention	29032	29045	StringBuilder
O	29046	29056	internally
O	29057	29060	and
O	29061	29065	uses
B-api_mention	29066	29067	.
I-api_mention	29067	29073	append
I-api_mention	29073	29074	(
I-api_mention	29074	29078	args
I-api_mention	29078	29079	)
O	29080	29082	to
O	29083	29084	"
O	29084	29087	add
O	29087	29088	"
O	29089	29092	the
O	29093	29100	integer
O	29101	29103	to
O	29104	29107	the
O	29108	29114	string
O	29114	29115	.

O	29116	29117	5
O	29117	29118	.
O	29118	29119	1
O	29119	29120	.
O	29120	29122	11
O	29122	29123	.

B-api_mention	29124	29130	String
O	29131	29141	Conversion
O	29142	29143	#
O	29143	29153	blockquote
O	29154	29156	15
O	29156	29157	.
O	29157	29159	18
O	29159	29160	.
O	29160	29161	1
O	29161	29162	.

O	29163	29164	#
O	29164	29174	blockquote
O	29175	29178	The
O	29179	29188	optimized
O	29189	29196	version
O	29197	29201	will
O	29202	29205	not
O	29206	29214	actually
O	29215	29217	do
O	29218	29219	a
O	29220	29224	full
O	29225	29232	wrapped
B-api_mention	29233	29239	String
O	29240	29250	conversion
O	29251	29256	first
O	29256	29257	.

O	29258	29262	This
O	29263	29265	is
O	29266	29267	a
O	29268	29272	good
O	29273	29285	illustration
O	29286	29288	of
O	29289	29291	an
O	29292	29301	optimized
O	29302	29309	version
O	29310	29314	used
O	29315	29317	by
O	29318	29321	the
O	29322	29330	compiler
O	29330	29331	,
O	29332	29338	albeit
O	29339	29346	without
O	29347	29350	the
O	29351	29361	conversion
O	29362	29364	of
O	29365	29366	a
O	29367	29376	primitive
O	29376	29377	,
O	29378	29383	where
O	29384	29387	you
O	29388	29391	can
O	29392	29395	see
O	29396	29399	the
O	29400	29408	compiler
O	29409	29417	changing
O	29418	29424	things
O	29425	29429	into
O	29430	29431	a
B-api_mention	29432	29445	StringBuilder
O	29446	29448	in
O	29449	29452	the
O	29453	29463	background
O	29463	29464	:
O	29465	29466	#
O	29466	29467	a
O	29468	29472	This
O	29473	29477	java
O	29478	29482	code
O	29482	29483	:
O	29484	29485	#
O	29485	29488	pre
O	29489	29498	Generates
O	29499	29503	this
O	29504	29505	-
O	29506	29509	see
O	29510	29513	how
O	29514	29517	the
O	29518	29521	two
O	29522	29535	concatenation
O	29536	29542	styles
O	29543	29547	lead
O	29548	29550	to
O	29551	29554	the
O	29555	29559	very
O	29560	29564	same
O	29565	29573	bytecode
O	29573	29574	:
O	29575	29576	#
O	29576	29579	pre
O	29580	29587	Looking
O	29588	29590	at
O	29591	29594	the
O	29595	29602	example
O	29603	29608	above
O	29609	29612	and
O	29613	29616	how
O	29617	29620	the
O	29621	29625	byte
O	29626	29630	code
O	29631	29636	based
O	29637	29639	on
O	29640	29643	the
O	29644	29650	source
O	29651	29655	code
O	29656	29658	in
O	29659	29662	the
O	29663	29668	given
O	29669	29676	example
O	29677	29679	is
O	29680	29689	generated
O	29689	29690	,
O	29691	29694	you
O	29695	29699	will
O	29700	29702	be
O	29703	29707	able
O	29708	29710	to
O	29711	29717	notice
O	29718	29722	that
O	29723	29726	the
O	29727	29735	compiler
O	29736	29739	has
O	29740	29750	internally
O	29751	29762	transformed
O	29763	29766	the
O	29767	29776	following
O	29777	29786	statement
O	29787	29790	cip
O	29790	29791	+
O	29791	29795	ciop
O	29795	29796	;
O	29797	29801	into
O	29802	29805	new
B-api_mention	29806	29819	StringBuilder
I-api_mention	29819	29820	(
I-api_mention	29820	29824	args
I-api_mention	29824	29825	)
I-api_mention	29825	29826	.
I-api_mention	29826	29832	append
I-api_mention	29832	29833	(
I-api_mention	29833	29837	args
I-api_mention	29837	29838	)
I-api_mention	29838	29839	.
I-api_mention	29839	29847	toString
I-api_mention	29847	29848	(
I-api_mention	29848	29852	args
I-api_mention	29852	29853	)
O	29853	29854	;
O	29855	29857	In
O	29858	29863	other
O	29864	29869	words
O	29869	29870	,
O	29871	29874	the
O	29875	29883	operator
O	29884	29885	+
O	29886	29888	in
O	29889	29895	string
O	29896	29909	concatenation
O	29910	29912	is
O	29913	29924	effectively
O	29925	29926	a
O	29927	29936	shorthand
O	29937	29940	for
O	29941	29944	the
O	29945	29949	more
O	29950	29957	verbose
B-api_mention	29958	29971	StringBuilder
O	29972	29977	idiom
O	29977	29978	.

O	29980	29988	Question
O	29988	29989	-
O	29989	29997	13950338
O	29997	29998	,
O	29999	30005	answer
O	30005	30006	-
O	30006	30014	17066803

O	30015	30020	Grant
O	30021	30030	Vibration
O	30031	30041	Permission
O	30042	30048	Before
O	30049	30052	you
O	30053	30058	start
O	30059	30071	implementing
O	30072	30075	any
O	30076	30085	vibration
O	30086	30090	code
O	30090	30091	,
O	30092	30095	you
O	30096	30100	have
O	30101	30103	to
O	30104	30108	give
O	30109	30113	your
O	30114	30125	application
O	30126	30129	the
O	30130	30140	permission
O	30141	30143	to
O	30144	30151	vibrate
O	30151	30152	:
O	30153	30154	<
O	30154	30158	uses
O	30158	30159	-
O	30159	30169	permission
O	30170	30177	android
O	30177	30178	:
O	30178	30182	name
O	30182	30183	=
O	30183	30196	StringLiteral
O	30196	30197	/
O	30197	30198	>
O	30199	30203	Make
O	30204	30208	sure
O	30209	30211	to
O	30212	30219	include
O	30220	30224	this
O	30225	30229	line
O	30230	30232	in
O	30233	30237	your
O	30238	30253	AndroidManifest
O	30253	30254	.
O	30254	30257	xml
O	30258	30262	file
O	30262	30263	.

O	30264	30270	Import
O	30271	30274	the
O	30275	30284	Vibration
O	30285	30292	Library
O	30293	30297	Most
O	30298	30302	IDEs
O	30303	30307	will
O	30308	30310	do
O	30311	30315	this
O	30316	30319	for
O	30320	30323	you
O	30323	30324	,
O	30325	30328	but
O	30329	30333	here
O	30334	30336	is
O	30337	30340	the
O	30341	30347	import
O	30348	30357	statement
O	30358	30360	if
O	30361	30366	yours
O	30367	30372	doesn
O	30372	30373	'
O	30373	30374	t
O	30374	30375	:
O	30376	30382	import
B-api_mention	30383	30390	android
I-api_mention	30390	30391	.
I-api_mention	30391	30393	os
I-api_mention	30393	30394	.
I-api_mention	30394	30402	Vibrator
O	30402	30403	;
O	30404	30408	Make
O	30409	30413	sure
O	30414	30418	this
O	30419	30421	in
O	30422	30425	the
O	30426	30434	activity
O	30435	30440	where
O	30441	30444	you
O	30445	30449	want
O	30450	30453	the
O	30454	30463	vibration
O	30464	30466	to
O	30467	30472	occur
O	30472	30473	.

O	30474	30477	How
O	30478	30480	to
B-api_mention	30481	30488	Vibrate
O	30489	30492	for
O	30493	30494	a
O	30495	30500	Given
O	30501	30505	Time
O	30506	30508	In
O	30509	30513	most
O	30514	30527	circumstances
O	30527	30528	,
O	30529	30532	you
O	30532	30533	'
O	30533	30535	ll
O	30536	30538	be
O	30539	30546	wanting
O	30547	30549	to
O	30550	30557	vibrate
O	30558	30561	the
O	30562	30568	device
O	30569	30572	for
O	30573	30574	a
O	30575	30580	short
O	30580	30581	,
O	30582	30595	predetermined
O	30596	30602	amount
O	30603	30605	of
O	30606	30610	time
O	30610	30611	.

O	30612	30615	You
O	30616	30619	can
O	30620	30627	achieve
O	30628	30632	this
O	30633	30635	by
O	30636	30641	using
O	30642	30645	the
B-api_mention	30646	30653	vibrate
I-api_mention	30653	30654	(
I-api_mention	30654	30658	args
I-api_mention	30658	30659	)
O	30660	30666	method
O	30666	30667	.

O	30668	30672	Here
O	30673	30675	is
O	30676	30677	a
O	30678	30683	quick
O	30684	30691	example
O	30691	30692	:
O	30693	30694	#
O	30694	30697	pre
O	30698	30702	That
O	30702	30703	'
O	30703	30704	s
O	30705	30707	it
O	30707	30708	,
O	30709	30715	simple
O	30715	30716	!

O	30717	30720	How
O	30721	30723	to
O	30724	30731	Vibrate
O	30732	30744	Indefinitely
O	30745	30747	It
O	30748	30751	may
O	30752	30754	be
O	30755	30758	the
O	30759	30763	case
O	30764	30768	that
O	30769	30772	you
O	30773	30777	want
O	30778	30781	the
O	30782	30788	device
O	30789	30791	to
O	30792	30800	continue
O	30801	30810	vibrating
O	30811	30823	indefinitely
O	30823	30824	.

O	30825	30828	For
O	30829	30833	this
O	30833	30834	,
O	30835	30837	we
O	30838	30841	use
O	30842	30845	the
B-api_mention	30846	30853	vibrate
I-api_mention	30853	30854	(
I-api_mention	30854	30858	args
I-api_mention	30858	30859	)
O	30860	30866	method
O	30866	30867	:
O	30868	30869	#
O	30869	30872	pre
O	30873	30877	When
O	30878	30881	you
O	30881	30882	'
O	30882	30884	re
O	30885	30890	ready
O	30891	30893	to
O	30894	30898	stop
O	30899	30902	the
O	30903	30912	vibration
O	30912	30913	,
O	30914	30918	just
O	30919	30923	call
O	30924	30927	the
B-api_mention	30928	30934	cancel
I-api_mention	30934	30935	(
I-api_mention	30935	30939	args
I-api_mention	30939	30940	)
O	30941	30947	method
O	30947	30948	:
O	30949	30950	v
B-api_mention	30950	30951	.
I-api_mention	30951	30957	cancel
I-api_mention	30957	30958	(
I-api_mention	30958	30962	args
I-api_mention	30962	30963	)
O	30963	30964	;
O	30965	30968	How
O	30969	30971	to
O	30972	30975	use
O	30976	30985	Vibration
O	30986	30994	Patterns
O	30995	30997	If
O	30998	31001	you
O	31002	31006	want
O	31007	31008	a
O	31009	31013	more
O	31014	31021	bespoke
O	31022	31031	vibration
O	31031	31032	,
O	31033	31036	you
O	31037	31040	can
O	31041	31048	attempt
O	31049	31051	to
O	31052	31058	create
O	31059	31063	your
O	31064	31067	own
O	31068	31077	vibration
O	31078	31086	patterns
O	31086	31087	:
O	31088	31089	#
O	31089	31092	pre
O	31093	31097	More
O	31098	31105	Complex
O	31106	31116	Vibrations
O	31117	31122	There
O	31123	31126	are
O	31127	31135	multiple
O	31136	31140	SDKs
O	31141	31145	that
O	31146	31151	offer
O	31152	31153	a
O	31154	31158	more
O	31159	31172	comprehensive
O	31173	31178	range
O	31179	31181	of
O	31182	31188	haptic
O	31189	31197	feedback
O	31197	31198	.

O	31199	31202	One
O	31203	31207	that
O	31208	31209	I
O	31210	31213	use
O	31214	31217	for
O	31218	31225	special
O	31226	31233	effects
O	31234	31236	is
O	31237	31246	Immersion
O	31246	31247	'
O	31247	31248	s
O	31249	31255	Haptic
O	31256	31267	Development
O	31268	31276	Platform
O	31277	31280	for
O	31281	31288	Android
O	31289	31290	.

O	31291	31306	Troubleshooting
O	31307	31309	If
O	31310	31314	your
O	31315	31321	device
O	31322	31325	won
O	31325	31326	'
O	31326	31327	t
O	31328	31335	vibrate
O	31335	31336	,
O	31337	31342	first
O	31343	31347	make
O	31348	31352	sure
O	31353	31357	that
O	31358	31360	it
O	31361	31364	can
O	31365	31372	vibrate
O	31372	31373	:
O	31374	31375	#
O	31375	31378	pre
O	31379	31387	Secondly
O	31387	31388	,
O	31389	31395	please
O	31396	31402	ensure
O	31403	31407	that
O	31408	31411	you
O	31411	31412	'
O	31412	31414	ve
O	31415	31420	given
O	31421	31425	your
O	31426	31437	application
O	31438	31441	the
O	31442	31452	permission
O	31453	31455	to
O	31456	31463	vibrate
O	31463	31464	!

O	31465	31470	Refer
O	31471	31475	back
O	31476	31478	to
O	31479	31482	the
O	31483	31488	first
O	31489	31494	point
O	31494	31495	.

O	31497	31505	Question
O	31505	31506	-
O	31506	31514	13291076
O	31514	31515	,
O	31516	31522	answer
O	31522	31523	-
O	31523	31531	13291108

O	31532	31535	Use
B-api_mention	31536	31540	name
I-api_mention	31540	31541	(
I-api_mention	31541	31545	args
I-api_mention	31545	31546	)
O	31547	31551	when
O	31552	31555	you
O	31556	31560	want
O	31561	31563	to
O	31564	31568	make
O	31569	31570	a
O	31571	31581	comparison
O	31582	31584	or
O	31585	31588	use
O	31589	31592	the
O	31593	31602	hardcoded
O	31603	31608	value
O	31609	31612	for
O	31613	31617	some
O	31618	31626	internal
O	31627	31630	use
O	31631	31633	in
O	31634	31638	your
O	31639	31643	code
O	31643	31644	.

O	31645	31648	Use
B-api_mention	31649	31657	toString
I-api_mention	31657	31658	(
I-api_mention	31658	31662	args
I-api_mention	31662	31663	)
O	31664	31668	when
O	31669	31672	you
O	31673	31677	want
O	31678	31680	to
O	31681	31688	present
O	31689	31700	information
O	31701	31703	to
O	31704	31705	a
O	31706	31710	user
O	31711	31712	(
O	31712	31721	including
O	31722	31723	a
O	31724	31734	developper
O	31735	31742	looking
O	31743	31745	at
O	31746	31747	a
O	31748	31751	log
O	31751	31752	)
O	31752	31753	.

O	31754	31759	Never
O	31760	31764	rely
O	31765	31767	in
O	31768	31772	your
O	31773	31777	code
O	31778	31780	on
B-api_mention	31781	31789	toString
I-api_mention	31789	31790	(
I-api_mention	31790	31794	args
I-api_mention	31794	31795	)
O	31796	31802	giving
O	31803	31804	a
O	31805	31813	specific
O	31814	31819	value
O	31819	31820	.

O	31821	31826	Never
O	31827	31831	test
O	31832	31834	it
O	31835	31842	against
O	31843	31844	a
O	31845	31853	specific
O	31854	31860	string
O	31860	31861	.

O	31862	31864	If
O	31865	31869	your
O	31870	31874	code
O	31875	31881	breaks
O	31882	31886	when
O	31887	31894	someone
O	31895	31904	correctly
O	31905	31912	changes
O	31913	31916	the
B-api_mention	31917	31925	toString
I-api_mention	31925	31926	(
I-api_mention	31926	31930	args
I-api_mention	31930	31931	)
O	31932	31938	return
O	31938	31939	,
O	31940	31944	then
O	31945	31947	it
O	31948	31951	was
O	31952	31959	already
O	31960	31966	broken
O	31966	31967	.

O	31968	31972	From
O	31973	31976	the
O	31977	31984	javadoc
O	31985	31986	(
O	31986	31994	emphasis
O	31995	31999	mine
O	31999	32000	)
O	32001	32002	:
O	32003	32004	#
O	32004	32014	blockquote

O	32016	32024	Question
O	32024	32025	-
O	32025	32033	13291076
O	32033	32034	,
O	32035	32041	answer
O	32041	32042	-
O	32042	32050	13291109

O	32051	32053	It
O	32054	32060	really
O	32061	32068	depends
O	32069	32071	on
O	32072	32076	what
O	32077	32080	you
O	32081	32085	want
O	32086	32088	to
O	32089	32091	do
O	32092	32096	with
O	32097	32100	the
O	32101	32109	returned
O	32110	32115	value
O	32115	32116	:
O	32117	32118	#
O	32118	32120	li
O	32121	32123	If
O	32124	32127	you
O	32128	32132	need
O	32133	32135	to
O	32136	32139	get
O	32140	32143	the
O	32144	32149	exact
O	32150	32154	name
O	32155	32159	used
O	32160	32162	to
O	32163	32170	declare
O	32171	32174	the
O	32175	32179	enum
O	32180	32188	constant
O	32188	32189	,
O	32190	32193	you
O	32194	32200	should
O	32201	32204	use
B-api_mention	32205	32209	name
I-api_mention	32209	32210	(
I-api_mention	32210	32214	args
I-api_mention	32214	32215	)
O	32216	32218	as
B-api_mention	32219	32227	toString
O	32228	32231	may
O	32232	32236	have
O	32237	32241	been
O	32242	32251	overriden
O	32252	32253	#
O	32253	32255	li
O	32256	32258	If
O	32259	32262	you
O	32263	32267	want
O	32268	32270	to
O	32271	32276	print
O	32277	32280	the
O	32281	32285	enum
O	32286	32294	constant
O	32295	32297	in
O	32298	32299	a
O	32300	32304	user
O	32305	32313	friendly
O	32314	32317	way
O	32317	32318	,
O	32319	32322	you
O	32323	32329	should
O	32330	32333	use
B-api_mention	32334	32342	toString
O	32343	32348	which
O	32349	32352	may
O	32353	32357	have
O	32358	32362	been
O	32363	32372	overriden
O	32373	32374	(
O	32374	32376	or
O	32377	32380	not
O	32380	32381	!
O	32381	32382	)
O	32382	32383	.

O	32384	32388	When
O	32389	32390	I
O	32391	32395	feel
O	32396	32400	that
O	32401	32403	it
O	32404	32409	might
O	32410	32412	be
O	32413	32422	confusing
O	32422	32423	,
O	32424	32425	I
O	32426	32433	provide
O	32434	32435	a
O	32436	32440	more
O	32441	32449	specific
O	32450	32456	getXXX
O	32457	32463	method
O	32463	32464	,
O	32465	32468	for
O	32469	32476	example
O	32476	32477	:
O	32478	32479	#
O	32479	32482	pre

O	32484	32492	Question
O	32492	32493	-
O	32493	32501	13291076
O	32501	32502	,
O	32503	32509	answer
O	32509	32510	-
O	32510	32518	13291166

B-api_mention	32519	32523	name
I-api_mention	32523	32524	(
I-api_mention	32524	32528	args
I-api_mention	32528	32529	)
O	32530	32532	is
O	32533	32534	a
O	32535	32536	"
O	32536	32541	built
O	32541	32542	-
O	32542	32544	in
O	32544	32545	"
O	32546	32552	method
O	32553	32555	of
O	32556	32560	enum
O	32561	32562	.

O	32563	32565	It
O	32566	32568	is
O	32569	32574	final
O	32575	32578	and
O	32579	32582	you
O	32583	32589	cannot
O	32590	32596	change
O	32597	32600	its
O	32601	32615	implementation
O	32615	32616	.

O	32617	32619	It
O	32620	32627	returns
O	32628	32631	the
O	32632	32636	name
O	32637	32639	of
O	32640	32644	enum
O	32645	32653	constant
O	32654	32656	as
O	32657	32659	it
O	32660	32662	is
O	32663	32670	written
O	32670	32671	,
O	32672	32673	e
O	32673	32674	.
O	32674	32675	g
O	32675	32676	.
O	32677	32679	in
O	32680	32685	upper
O	32686	32690	case
O	32690	32691	,
O	32692	32699	without
O	32700	32706	spaces
O	32707	32710	etc
O	32710	32711	.

O	32712	32719	Compare
O	32720	32726	MOBILE
O	32726	32727	_
O	32727	32732	PHONE
O	32732	32733	_
O	32733	32739	NUMBER
O	32740	32743	and
O	32744	32750	Mobile
O	32751	32756	phone
O	32757	32763	number
O	32764	32765	.

O	32766	32771	Which
O	32772	32779	version
O	32780	32782	is
O	32783	32787	more
O	32788	32796	readable
O	32796	32797	?

O	32798	32799	I
O	32800	32807	believe
O	32808	32811	the
O	32812	32818	second
O	32819	32822	one
O	32822	32823	.

O	32824	32828	This
O	32829	32831	is
O	32832	32835	the
O	32836	32846	difference
O	32846	32847	:
B-api_mention	32848	32852	name
I-api_mention	32852	32853	(
I-api_mention	32853	32857	args
O	32857	32858	)
O	32859	32865	always
O	32866	32873	returns
O	32874	32880	MOBILE
O	32880	32881	_
O	32881	32886	PHONE
O	32886	32887	_
O	32887	32893	NUMBER
O	32894	32895	,
B-api_mention	32896	32904	toString
I-api_mention	32904	32905	(
I-api_mention	32905	32909	args
I-api_mention	32909	32910	)
O	32911	32914	may
O	32915	32917	be
O	32918	32927	overriden
O	32928	32930	to
O	32931	32937	return
O	32938	32944	Mobile
O	32945	32950	phone
O	32951	32957	number
O	32958	32959	.

O	32961	32969	Question
O	32969	32970	-
O	32970	32978	13291076
O	32978	32979	,
O	32980	32986	answer
O	32986	32987	-
O	32987	32995	31886637

B-api_mention	32996	33000	name
I-api_mention	33000	33001	(
I-api_mention	33001	33002	)
O	33003	33005	is
O	33006	33015	literally
O	33016	33019	the
O	33020	33027	textual
O	33028	33032	name
O	33033	33035	in
O	33036	33039	the
O	33040	33044	java
O	33045	33049	code
O	33050	33052	of
O	33053	33056	the
O	33057	33061	enum
O	33061	33062	.

O	33063	33067	That
O	33068	33073	means
O	33074	33076	it
O	33077	33079	is
O	33080	33087	limited
O	33088	33090	to
O	33091	33098	strings
O	33099	33103	that
O	33104	33107	can
O	33108	33116	actually
O	33117	33123	appear
O	33124	33126	in
O	33127	33131	your
O	33132	33136	java
O	33137	33141	code
O	33141	33142	,
O	33143	33146	but
O	33147	33150	not
O	33151	33154	all
O	33155	33164	desirable
O	33165	33172	strings
O	33173	33176	are
O	33177	33188	expressible
O	33189	33191	in
O	33192	33196	code
O	33196	33197	.

O	33198	33201	For
O	33202	33209	example
O	33209	33210	,
O	33211	33214	you
O	33215	33218	may
O	33219	33223	need
O	33224	33225	a
O	33226	33232	string
O	33233	33237	that
O	33238	33244	begins
O	33245	33249	with
O	33250	33251	a
O	33252	33258	number
O	33258	33259	.

B-api_mention	33260	33264	name
I-api_mention	33264	33265	(
I-api_mention	33265	33266	)
O	33267	33271	will
O	33272	33277	never
O	33278	33280	be
O	33281	33285	able
O	33286	33288	to
O	33289	33295	obtain
O	33296	33300	that
O	33301	33307	string
O	33308	33311	for
O	33312	33315	you
O	33315	33316	.

O	33318	33326	Question
O	33326	33327	-
O	33327	33335	12576156
O	33335	33336	,
O	33337	33343	answer
O	33343	33344	-
O	33344	33352	12576308

O	33353	33357	Have
O	33358	33361	you
O	33362	33372	considered
O	33373	33374	@
O	33374	33383	Autowired
O	33384	33387	ing
O	33388	33391	the
O	33392	33403	constructor
O	33404	33406	or
O	33407	33408	a
O	33409	33415	setter
O	33416	33419	and
B-api_mention	33420	33426	String
I-api_mention	33426	33427	.
I-api_mention	33427	33432	split
I-api_mention	33432	33433	(
I-api_mention	33433	33437	args
I-api_mention	33437	33438	)
O	33439	33442	ing
O	33443	33445	in
O	33446	33449	the
O	33450	33454	body
O	33454	33455	?

O	33456	33457	#
O	33457	33460	pre
O	33461	33462	I
O	33463	33467	tend
O	33468	33470	to
O	33471	33477	prefer
O	33478	33483	doing
O	33484	33486	my
O	33487	33497	autowiring
O	33498	33500	in
O	33501	33504	one
O	33505	33507	of
O	33508	33513	these
O	33514	33518	ways
O	33519	33521	to
O	33522	33529	enhance
O	33530	33533	the
O	33534	33545	testability
O	33546	33548	of
O	33549	33551	my
O	33552	33556	code
O	33556	33557	.

O	33559	33567	Question
O	33567	33568	-
O	33568	33576	12576156
O	33576	33577	,
O	33578	33584	answer
O	33584	33585	-
O	33585	33593	12576394

O	33594	33596	By
O	33597	33607	specifying
O	33608	33611	the
O	33612	33615	the
O	33616	33618	my
O	33618	33619	.
O	33619	33623	list
O	33623	33624	.
O	33624	33626	of
O	33626	33627	.
O	33627	33634	strings
O	33634	33635	=
O	33635	33638	ABC
O	33638	33639	,
O	33639	33642	CDE
O	33642	33643	,
O	33643	33646	EFG
O	33647	33649	in
O	33650	33651	.
O	33651	33661	properties
O	33662	33666	file
O	33667	33670	and
O	33671	33676	using
O	33677	33678	@
O	33678	33683	Value
O	33683	33684	(
O	33684	33688	args
O	33688	33689	)
O	33690	33697	private
O	33698	33704	String
O	33704	33705	[
O	33705	33706	]
O	33707	33715	myString
O	33715	33716	;
O	33717	33720	You
O	33721	33724	can
O	33725	33728	get
O	33729	33732	the
O	33733	33739	arrays
O	33740	33742	of
O	33743	33750	strings
O	33750	33751	.

O	33752	33755	And
O	33756	33761	using
B-api_mention	33762	33777	CollectionUtils
I-api_mention	33777	33778	.
I-api_mention	33778	33784	addAll
I-api_mention	33784	33785	(
I-api_mention	33785	33789	args
I-api_mention	33789	33790	)
O	33791	33792	,
O	33793	33796	you
O	33797	33800	can
O	33801	33804	get
O	33805	33808	the
O	33809	33813	list
O	33814	33816	of
O	33817	33824	strings
O	33824	33825	.

O	33827	33835	Question
O	33835	33836	-
O	33836	33844	12539365
O	33844	33845	,
O	33846	33852	answer
O	33852	33853	-
O	33853	33861	12562433

O	33862	33866	This
O	33867	33869	is
O	33870	33875	great
O	33876	33884	question
O	33884	33885	!

O	33886	33887	I
O	33888	33893	think
O	33894	33897	the
O	33898	33902	root
O	33903	33908	cause
O	33909	33911	of
O	33912	33914	it
O	33915	33917	is
O	33918	33921	the
O	33922	33931	following
O	33931	33932	,
O	33933	33935	we
O	33936	33939	are
O	33940	33945	using
O	33946	33951	JUnit
O	33952	33955	not
O	33956	33960	only
O	33961	33964	for
O	33965	33969	unit
O	33970	33977	testing
O	33977	33978	.

O	33979	33981	So
O	33982	33985	the
O	33986	33994	question
O	33995	34001	should
O	34002	34004	be
O	34005	34012	splited
O	34013	34015	up
O	34015	34016	:
O	34017	34018	#
O	34018	34020	li
O	34021	34027	Should
O	34028	34029	I
O	34030	34033	use
B-api_mention	34034	34041	Mockito
I-api_mention	34041	34042	.
I-api_mention	34042	34048	verify
I-api_mention	34048	34049	(
I-api_mention	34049	34050	)
O	34051	34053	in
O	34054	34056	my
O	34057	34068	integration
O	34069	34070	(
O	34070	34072	or
O	34073	34076	any
O	34077	34082	other
O	34083	34089	higher
O	34089	34090	-
O	34090	34094	than
O	34094	34095	-
O	34095	34099	unit
O	34100	34107	testing
O	34107	34108	)
O	34109	34116	testing
O	34116	34117	?

O	34118	34119	#
O	34119	34121	li
O	34122	34128	Should
O	34129	34130	I
O	34131	34134	use
B-api_mention	34135	34142	Mockito
I-api_mention	34142	34143	.
I-api_mention	34143	34149	verify
I-api_mention	34149	34150	(
I-api_mention	34150	34151	)
O	34152	34154	in
O	34155	34157	my
O	34158	34163	black
O	34163	34164	-
O	34164	34167	box
O	34168	34172	unit
O	34172	34173	-
O	34173	34180	testing
O	34180	34181	?

O	34182	34183	#
O	34183	34185	li
O	34186	34192	Should
O	34193	34194	I
O	34195	34198	use
B-api_mention	34199	34206	Mockito
I-api_mention	34206	34207	.
I-api_mention	34207	34213	verify
I-api_mention	34213	34214	(
I-api_mention	34214	34215	)
O	34216	34218	in
O	34219	34221	my
O	34222	34227	white
O	34227	34228	-
O	34228	34231	box
O	34232	34236	unit
O	34236	34237	-
O	34237	34244	testing
O	34244	34245	?

O	34246	34248	so
O	34249	34251	if
O	34252	34254	we
O	34255	34259	will
O	34260	34266	ignore
O	34267	34273	higher
O	34273	34274	-
O	34274	34278	than
O	34278	34279	-
O	34279	34283	unit
O	34284	34291	testing
O	34291	34292	,
O	34293	34296	the
O	34297	34305	question
O	34306	34309	can
O	34310	34312	be
O	34313	34322	rephrased
O	34323	34324	"
O	34325	34330	Using
O	34331	34336	white
O	34336	34337	-
O	34337	34340	box
O	34341	34345	unit
O	34345	34346	-
O	34346	34353	testing
O	34354	34358	with
B-api_mention	34359	34366	Mockito
I-api_mention	34366	34367	.
I-api_mention	34367	34373	verify
I-api_mention	34373	34374	(
I-api_mention	34374	34375	)
O	34376	34383	creates
O	34384	34389	great
O	34390	34396	couple
O	34397	34404	between
O	34405	34409	unit
O	34410	34414	test
O	34415	34418	and
O	34419	34421	my
O	34422	34427	could
O	34428	34442	implementation
O	34442	34443	,
O	34444	34447	can
O	34448	34449	I
O	34450	34454	make
O	34455	34459	some
O	34460	34461	"
O	34461	34465	grey
O	34465	34466	-
O	34466	34469	box
O	34469	34470	"
O	34471	34475	unit
O	34475	34476	-
O	34476	34483	testing
O	34484	34487	and
O	34488	34492	what
O	34493	34498	rules
O	34499	34501	of
O	34502	34507	thumb
O	34508	34509	I
O	34510	34516	should
O	34517	34520	use
O	34521	34524	for
O	34525	34529	this
O	34530	34531	"
O	34531	34532	.

O	34533	34536	Now
O	34536	34537	,
O	34538	34541	let
O	34541	34542	'
O	34542	34543	s
O	34544	34546	go
O	34547	34554	through
O	34555	34558	all
O	34559	34561	of
O	34562	34566	this
O	34567	34571	step
O	34571	34572	-
O	34572	34574	by
O	34574	34575	-
O	34575	34579	step
O	34579	34580	.

O	34581	34582	*
O	34582	34583	-
O	34584	34590	Should
O	34591	34592	I
O	34593	34596	use
B-api_mention	34597	34604	Mockito
I-api_mention	34604	34605	.
I-api_mention	34605	34611	verify
I-api_mention	34611	34612	(
I-api_mention	34612	34613	)
O	34614	34616	in
O	34617	34619	my
O	34620	34631	integration
O	34632	34633	(
O	34633	34635	or
O	34636	34639	any
O	34640	34645	other
O	34646	34652	higher
O	34652	34653	-
O	34653	34657	than
O	34657	34658	-
O	34658	34662	unit
O	34663	34670	testing
O	34670	34671	)
O	34672	34679	testing
O	34679	34680	?
O	34680	34681	*
O	34682	34683	I
O	34684	34689	think
O	34690	34693	the
O	34694	34700	answer
O	34701	34703	is
O	34704	34711	clearly
O	34712	34714	no
O	34714	34715	,
O	34716	34724	moreover
O	34725	34728	you
O	34729	34736	shouldn
O	34736	34737	'
O	34737	34738	t
O	34739	34742	use
O	34743	34748	mocks
O	34749	34752	for
O	34753	34757	this
O	34757	34758	.

O	34759	34763	Your
O	34764	34768	test
O	34769	34775	should
O	34776	34778	be
O	34779	34781	as
O	34782	34787	close
O	34788	34790	to
O	34791	34795	real
O	34796	34807	application
O	34808	34810	as
O	34811	34819	possible
O	34819	34820	.

O	34821	34824	You
O	34825	34828	are
O	34829	34836	testing
O	34837	34845	complete
O	34846	34849	use
O	34850	34854	case
O	34854	34855	,
O	34856	34859	not
O	34860	34868	isolated
O	34869	34873	part
O	34874	34876	of
O	34877	34880	the
O	34881	34892	application
O	34892	34893	.

O	34894	34895	*
O	34896	34901	black
O	34901	34902	-
O	34902	34905	box
O	34906	34908	vs
O	34909	34914	white
O	34914	34915	-
O	34915	34918	box
O	34919	34923	unit
O	34923	34924	-
O	34924	34931	testing
O	34932	34937	black
O	34937	34938	-
O	34938	34941	box
O	34942	34947	state
O	34948	34950	If
O	34951	34954	you
O	34955	34958	are
O	34959	34964	using
O	34965	34970	white
O	34970	34971	-
O	34971	34974	box
O	34975	34983	approach
O	34984	34988	what
O	34989	34991	is
O	34992	34995	you
O	34996	35002	really
O	35003	35008	doing
O	35008	35009	,
O	35010	35013	you
O	35013	35014	'
O	35014	35016	re
O	35017	35024	testing
O	35025	35028	the
O	35029	35038	behaviour
O	35039	35041	of
O	35042	35046	your
O	35047	35051	unit
O	35051	35052	.

O	35053	35055	In
O	35056	35060	this
O	35061	35069	approach
O	35070	35077	calling
O	35078	35080	to
B-api_mention	35081	35088	Mockito
I-api_mention	35088	35089	.
I-api_mention	35089	35095	verify
I-api_mention	35095	35096	(
I-api_mention	35096	35097	)
O	35098	35100	is
O	35101	35110	essential
O	35110	35111	,
O	35112	35115	you
O	35116	35122	should
O	35123	35129	verify
O	35130	35134	that
O	35135	35139	your
O	35140	35144	unit
O	35145	35152	behaves
O	35153	35155	as
O	35156	35159	you
O	35159	35160	'
O	35160	35162	re
O	35163	35172	expecting
O	35173	35175	to
O	35175	35176	.
O	35177	35182	rules
O	35183	35185	of
O	35186	35192	thumbs
O	35193	35196	for
O	35197	35201	grey
O	35201	35202	-
O	35202	35205	box
O	35205	35206	-
O	35206	35213	testing
O	35214	35217	The
O	35218	35225	problem
O	35226	35230	with
O	35231	35236	white
O	35236	35237	-
O	35237	35240	box
O	35241	35248	testing
O	35249	35251	is
O	35252	35254	it
O	35255	35262	creates
O	35263	35264	a
O	35265	35269	high
O	35270	35278	coupling
O	35278	35279	.

O	35280	35283	One
O	35284	35292	possible
O	35293	35301	solution
O	35302	35304	is
O	35305	35307	to
O	35308	35310	do
O	35311	35315	grey
O	35315	35316	-
O	35316	35319	box
O	35319	35320	-
O	35320	35327	testing
O	35327	35328	,
O	35329	35332	not
O	35333	35338	white
O	35338	35339	-
O	35339	35342	box
O	35342	35343	-
O	35343	35350	testing
O	35350	35351	.

O	35352	35356	This
O	35357	35359	is
O	35360	35364	sort
O	35365	35367	of
O	35368	35379	combination
O	35380	35382	of
O	35383	35388	black
O	35388	35389	&
O	35389	35394	white
O	35395	35398	box
O	35399	35406	testing
O	35406	35407	.

O	35408	35411	You
O	35412	35415	are
O	35416	35422	really
O	35423	35430	testing
O	35431	35434	the
O	35435	35444	behaviour
O	35445	35447	of
O	35448	35452	your
O	35453	35457	unit
O	35458	35462	like
O	35463	35465	in
O	35466	35471	white
O	35471	35472	-
O	35472	35475	box
O	35476	35483	testing
O	35483	35484	,
O	35485	35488	but
O	35489	35491	in
O	35492	35499	general
O	35500	35503	you
O	35504	35508	make
O	35509	35511	it
O	35512	35526	implementation
O	35526	35527	-
O	35527	35535	agnostic
O	35536	35540	when
O	35541	35549	possible
O	35550	35551	.

O	35552	35556	When
O	35557	35559	it
O	35560	35562	is
O	35563	35571	possible
O	35571	35572	,
O	35573	35576	you
O	35577	35581	will
O	35582	35586	just
O	35587	35591	make
O	35592	35593	a
O	35594	35599	check
O	35600	35604	like
O	35605	35607	in
O	35608	35613	black
O	35613	35614	-
O	35614	35617	box
O	35618	35622	case
O	35622	35623	,
O	35624	35628	just
O	35629	35636	asserts
O	35637	35641	that
O	35642	35648	output
O	35649	35651	is
O	35652	35656	what
O	35657	35659	is
O	35660	35664	your
O	35665	35673	expected
O	35674	35676	to
O	35677	35679	be
O	35679	35680	.

O	35681	35683	So
O	35683	35684	,
O	35685	35688	the
O	35689	35696	essence
O	35697	35699	of
O	35700	35704	your
O	35705	35713	question
O	35714	35716	is
O	35717	35721	when
O	35722	35724	it
O	35725	35727	is
O	35728	35736	possible
O	35736	35737	.

O	35738	35742	This
O	35743	35745	is
O	35746	35752	really
O	35753	35757	hard
O	35757	35758	.

O	35759	35760	I
O	35761	35764	don
O	35764	35765	'
O	35765	35766	t
O	35767	35771	have
O	35772	35773	a
O	35774	35778	good
O	35779	35786	example
O	35786	35787	,
O	35788	35791	but
O	35792	35793	I
O	35794	35797	can
O	35798	35802	give
O	35803	35806	you
O	35807	35809	to
O	35810	35818	examples
O	35818	35819	.

O	35820	35822	In
O	35823	35826	the
O	35827	35831	case
O	35832	35836	that
O	35837	35840	was
O	35841	35850	mentioned
O	35851	35856	above
O	35857	35861	with
B-api_mention	35862	35868	equals
I-api_mention	35868	35869	(
I-api_mention	35869	35870	)
O	35871	35873	vs
B-api_mention	35874	35890	equalsIgnoreCase
I-api_mention	35890	35891	(
I-api_mention	35891	35892	)
O	35893	35896	you
O	35897	35904	shouldn
O	35904	35905	'
O	35905	35906	t
O	35907	35911	call
B-api_mention	35912	35919	Mockito
I-api_mention	35919	35920	.
I-api_mention	35920	35926	verify
I-api_mention	35926	35927	(
I-api_mention	35927	35928	)
O	35928	35929	,
O	35930	35934	just
O	35935	35941	assert
O	35942	35945	the
O	35946	35952	output
O	35952	35953	.

O	35954	35956	If
O	35957	35960	you
O	35961	35967	couldn
O	35967	35968	'
O	35968	35969	t
O	35970	35972	do
O	35973	35975	it
O	35975	35976	,
O	35977	35982	break
O	35983	35987	down
O	35988	35992	your
O	35993	35997	code
O	35998	36000	to
O	36001	36004	the
O	36005	36012	smaller
O	36013	36017	unit
O	36017	36018	,
O	36019	36024	until
O	36025	36028	you
O	36029	36032	can
O	36033	36035	do
O	36036	36038	it
O	36038	36039	.

O	36040	36042	On
O	36043	36046	the
O	36047	36052	other
O	36053	36057	hand
O	36057	36058	,
O	36059	36066	suppose
O	36067	36070	you
O	36071	36075	have
O	36076	36080	some
O	36081	36082	@
O	36082	36089	Service
O	36090	36093	and
O	36094	36097	you
O	36098	36101	are
O	36102	36110	writting
O	36111	36112	@
O	36112	36115	Web
O	36115	36116	-
O	36116	36123	Service
O	36124	36128	that
O	36129	36131	is
O	36132	36143	essentially
O	36144	36151	wrapper
O	36152	36156	upon
O	36157	36161	your
O	36162	36163	@
O	36163	36170	Service
O	36171	36172	-
O	36173	36175	it
O	36176	36185	delegates
O	36186	36189	all
O	36190	36195	calls
O	36196	36198	to
O	36199	36202	the
O	36203	36204	@
O	36204	36211	Service
O	36212	36213	(
O	36213	36216	and
O	36217	36223	making
O	36224	36228	some
O	36229	36234	extra
O	36235	36240	error
O	36241	36249	handling
O	36249	36250	)
O	36250	36251	.

O	36252	36254	In
O	36255	36259	this
O	36260	36264	case
O	36265	36272	calling
O	36273	36275	to
B-api_mention	36276	36283	Mockito
I-api_mention	36283	36284	.
I-api_mention	36284	36290	verify
I-api_mention	36290	36291	(
I-api_mention	36291	36292	)
O	36293	36295	is
O	36296	36305	essential
O	36305	36306	,
O	36307	36310	you
O	36311	36318	shouldn
O	36318	36319	'
O	36319	36320	t
O	36321	36330	duplicate
O	36331	36334	all
O	36335	36337	of
O	36338	36342	your
O	36343	36349	checks
O	36350	36354	that
O	36355	36358	you
O	36359	36362	did
O	36363	36366	for
O	36367	36370	the
O	36371	36372	@
O	36372	36378	Serive
O	36378	36379	,
O	36380	36389	verifying
O	36390	36394	that
O	36395	36398	you
O	36398	36399	'
O	36399	36401	re
O	36402	36409	calling
O	36410	36412	to
O	36413	36414	@
O	36414	36421	Service
O	36422	36426	with
O	36427	36434	correct
O	36435	36445	parammeter
O	36446	36450	list
O	36451	36453	is
O	36454	36464	sufficient
O	36464	36465	.

O	36467	36475	Question
O	36475	36476	-
O	36476	36484	12539365
O	36484	36485	,
O	36486	36492	answer
O	36492	36493	-
O	36493	36501	29349910

O	36502	36503	I
O	36504	36508	must
O	36509	36512	say
O	36512	36513	,
O	36514	36518	that
O	36519	36522	you
O	36523	36526	are
O	36527	36537	absolutely
O	36538	36543	right
O	36544	36548	from
O	36549	36550	a
O	36551	36560	classical
O	36561	36569	approach
O	36569	36570	'
O	36570	36571	s
O	36572	36577	point
O	36578	36580	of
O	36581	36585	view
O	36585	36586	:
O	36587	36588	#
O	36588	36590	li
O	36591	36593	If
O	36594	36597	you
O	36598	36603	first
O	36604	36610	create
O	36611	36612	(
O	36612	36614	or
O	36615	36621	change
O	36621	36622	)
O	36623	36631	business
O	36632	36637	logic
O	36638	36640	of
O	36641	36645	your
O	36646	36657	application
O	36658	36661	and
O	36662	36666	then
O	36667	36672	cover
O	36673	36675	it
O	36676	36680	with
O	36681	36682	(
O	36682	36687	adopt
O	36687	36688	)
O	36689	36694	tests
O	36695	36696	(
O	36697	36701	Test
O	36701	36702	-
O	36702	36706	Last
O	36707	36715	approach
O	36716	36717	)
O	36717	36718	,
O	36719	36723	then
O	36724	36726	it
O	36727	36731	will
O	36732	36734	be
O	36735	36739	very
O	36740	36747	painful
O	36748	36751	and
O	36752	36761	dangerous
O	36762	36764	to
O	36765	36768	let
O	36769	36774	tests
O	36775	36779	know
O	36780	36788	anything
O	36789	36794	about
O	36795	36798	how
O	36799	36803	your
O	36804	36812	software
O	36813	36818	works
O	36818	36819	,
O	36820	36825	other
O	36826	36830	than
O	36831	36839	checking
O	36840	36846	inputs
O	36847	36850	and
O	36851	36858	outputs
O	36858	36859	.

O	36860	36861	#
O	36861	36863	li
O	36864	36866	If
O	36867	36870	you
O	36871	36874	are
O	36875	36885	practicing
O	36886	36887	a
O	36888	36892	Test
O	36892	36893	-
O	36893	36899	Driven
O	36900	36908	approach
O	36909	36910	,
O	36911	36915	then
O	36916	36920	your
O	36921	36926	tests
O	36927	36930	are
O	36931	36934	the
O	36935	36940	first
O	36941	36943	to
O	36944	36946	be
O	36947	36954	written
O	36954	36955	,
O	36956	36958	to
O	36959	36961	be
O	36962	36969	changed
O	36970	36973	and
O	36974	36976	to
O	36977	36984	reflect
O	36985	36988	the
O	36989	36992	use
O	36993	36998	cases
O	36999	37001	of
O	37002	37006	your
O	37007	37015	software
O	37015	37016	'
O	37016	37017	s
O	37018	37031	functionality
O	37031	37032	.

O	37033	37036	The
O	37037	37051	implementation
O	37052	37059	depends
O	37060	37062	on
O	37063	37068	tests
O	37068	37069	.

O	37070	37074	That
O	37075	37084	sometimes
O	37085	37089	mean
O	37089	37090	,
O	37091	37095	that
O	37096	37099	you
O	37100	37104	want
O	37105	37109	your
O	37110	37118	software
O	37119	37121	to
O	37122	37124	be
O	37125	37136	implemented
O	37137	37139	in
O	37140	37144	some
O	37145	37155	particular
O	37156	37159	way
O	37159	37160	,
O	37161	37162	e
O	37162	37163	.
O	37163	37164	g
O	37164	37165	.
O	37166	37170	rely
O	37171	37173	on
O	37174	37178	some
O	37179	37184	other
O	37185	37194	component
O	37194	37195	'
O	37195	37196	s
O	37197	37203	method
O	37204	37206	or
O	37207	37211	even
O	37212	37216	call
O	37217	37219	it
O	37220	37221	a
O	37222	37232	particular
O	37233	37239	amount
O	37240	37242	of
O	37243	37248	times
O	37248	37249	.

O	37250	37254	That
O	37255	37257	is
O	37258	37263	where
B-api_mention	37264	37271	Mockito
I-api_mention	37271	37272	.
I-api_mention	37272	37278	verify
I-api_mention	37278	37279	(
I-api_mention	37279	37280	)
O	37281	37286	comes
O	37287	37289	in
O	37290	37295	handy
O	37295	37296	!

O	37297	37299	It
O	37300	37302	is
O	37303	37312	important
O	37313	37315	to
O	37316	37324	remember
O	37324	37325	,
O	37326	37330	that
O	37331	37336	there
O	37337	37340	are
O	37341	37343	no
O	37344	37353	universal
O	37354	37359	tools
O	37359	37360	.

O	37361	37364	The
O	37365	37369	type
O	37370	37372	of
O	37373	37381	software
O	37381	37382	,
O	37383	37385	it
O	37385	37386	'
O	37386	37387	s
O	37388	37392	size
O	37392	37393	,
O	37394	37401	company
O	37402	37407	goals
O	37408	37411	and
O	37412	37418	market
O	37419	37428	situation
O	37428	37429	,
O	37430	37434	team
O	37435	37441	skills
O	37442	37445	and
O	37446	37450	many
O	37451	37456	other
O	37457	37463	things
O	37464	37473	influence
O	37474	37477	the
O	37478	37486	decision
O	37487	37489	on
O	37490	37495	which
O	37496	37504	approach
O	37505	37507	to
O	37508	37511	use
O	37512	37514	at
O	37515	37519	your
O	37520	37530	particular
O	37531	37535	case
O	37535	37536	.

O	37538	37546	Question
O	37546	37547	-
O	37547	37555	12862659
O	37555	37556	,
O	37557	37563	answer
O	37563	37564	-
O	37564	37572	12862662

O	37573	37576	use
O	37577	37580	the
O	37581	37587	second
O	37588	37596	argument
O	37597	37599	on
O	37600	37603	the
B-api_mention	37604	37611	Mockito
I-api_mention	37611	37612	.
I-api_mention	37612	37618	verify
O	37619	37625	method
O	37625	37626	,
O	37627	37629	as
O	37630	37632	in
O	37632	37633	:
B-api_mention	37634	37640	verify
I-api_mention	37640	37641	(
I-api_mention	37641	37645	args
I-api_mention	37645	37646	)
O	37646	37647	.
O	37647	37657	someMethod
O	37657	37658	(
O	37658	37662	args
O	37662	37663	)

O	37665	37673	Question
O	37673	37674	-
O	37674	37682	13102045
O	37682	37683	,
O	37684	37690	answer
O	37690	37691	-
O	37691	37698	7056786

O	37699	37701	It
O	37701	37702	'
O	37702	37703	s
O	37704	37711	because
O	37712	37716	when
O	37717	37720	you
O	37721	37726	enter
O	37727	37728	a
O	37729	37735	number
O	37736	37740	then
O	37741	37746	press
O	37747	37752	Enter
O	37753	37754	,
O	37755	37760	input
B-api_mention	37760	37761	.
I-api_mention	37761	37768	nextInt
I-api_mention	37768	37769	(
I-api_mention	37769	37773	args
I-api_mention	37773	37774	)
O	37775	37783	consumes
O	37784	37788	only
O	37789	37792	the
O	37793	37799	number
O	37799	37800	,
O	37801	37804	not
O	37805	37808	the
O	37809	37810	"
O	37810	37813	end
O	37814	37816	of
O	37817	37821	line
O	37821	37822	"
O	37822	37823	.

O	37824	37828	When
O	37829	37834	input
B-api_mention	37834	37835	.
I-api_mention	37835	37843	nextLine
I-api_mention	37843	37844	(
I-api_mention	37844	37848	args
I-api_mention	37848	37849	)
O	37850	37858	executes
O	37858	37859	,
O	37860	37862	it
O	37863	37871	consumes
O	37872	37875	the
O	37876	37877	"
O	37877	37880	end
O	37881	37883	of
O	37884	37888	line
O	37888	37889	"
O	37890	37895	still
O	37896	37898	in
O	37899	37902	the
O	37903	37909	buffer
O	37910	37914	from
O	37915	37918	the
O	37919	37924	first
O	37925	37930	input
O	37930	37931	.

O	37932	37939	Instead
O	37939	37940	,
O	37941	37944	use
O	37945	37950	input
B-api_mention	37950	37951	.
I-api_mention	37951	37959	nextLine
I-api_mention	37959	37960	(
I-api_mention	37960	37964	args
I-api_mention	37964	37965	)
O	37966	37977	immediately
O	37978	37983	after
O	37984	37989	input
B-api_mention	37989	37990	.
I-api_mention	37990	37997	nextInt
I-api_mention	37997	37998	(
I-api_mention	37998	38002	args
I-api_mention	38002	38003	)

O	38005	38013	Question
O	38013	38014	-
O	38014	38022	13102045
O	38022	38023	,
O	38024	38030	answer
O	38030	38031	-
O	38031	38039	15046253

O	38040	38042	It
O	38043	38047	does
O	38048	38052	that
O	38053	38060	because
O	38061	38066	input
B-api_mention	38066	38067	.
I-api_mention	38067	38074	nextInt
I-api_mention	38074	38075	(
I-api_mention	38075	38079	args
I-api_mention	38079	38080	)
O	38080	38081	;
O	38082	38087	doesn
O	38087	38088	'
O	38088	38089	t
O	38090	38097	capture
O	38098	38101	the
O	38102	38109	newline
O	38109	38110	.
O	38111	38114	you
O	38115	38120	could
O	38121	38123	do
O	38124	38128	like
O	38129	38132	the
O	38133	38139	others
O	38140	38148	proposed
O	38149	38151	by
O	38152	38158	adding
O	38159	38161	an
O	38162	38167	input
B-api_mention	38167	38168	.
I-api_mention	38168	38176	nextLine
I-api_mention	38176	38177	(
I-api_mention	38177	38181	args
I-api_mention	38181	38182	)
O	38182	38183	;
O	38184	38194	underneath
O	38194	38195	.

O	38196	38209	Alternatively
O	38210	38213	you
O	38214	38217	can
O	38218	38220	do
O	38221	38223	it
O	38224	38225	C
O	38225	38226	#
O	38227	38232	style
O	38233	38236	and
O	38237	38242	parse
O	38243	38244	a
B-api_mention	38245	38253	nextLine
O	38254	38256	to
O	38257	38259	an
O	38260	38267	integer
O	38268	38272	like
O	38273	38275	so
O	38275	38276	:
O	38277	38280	int
O	38281	38287	number
O	38288	38289	=
B-api_mention	38290	38297	Integer
I-api_mention	38297	38298	.
I-api_mention	38298	38306	parseInt
I-api_mention	38306	38307	(
I-api_mention	38307	38311	args
I-api_mention	38311	38312	)
O	38312	38313	;
O	38314	38319	Doing
O	38320	38324	this
O	38325	38330	works
O	38331	38335	just
O	38336	38338	as
O	38339	38343	well
O	38343	38344	,
O	38345	38348	and
O	38349	38351	it
O	38352	38357	saves
O	38358	38361	you
O	38362	38363	a
O	38364	38368	line
O	38369	38371	of
O	38372	38376	code
O	38376	38377	.

O	38379	38387	Question
O	38387	38388	-
O	38388	38396	13102045
O	38396	38397	,
O	38398	38404	answer
O	38404	38405	-
O	38405	38413	22593693

O	38414	38419	There
O	38420	38424	seem
O	38425	38427	to
O	38428	38430	be
O	38431	38435	many
O	38436	38445	questions
O	38446	38451	about
O	38452	38456	this
O	38457	38462	issue
O	38463	38467	with
B-api_mention	38468	38472	java
I-api_mention	38472	38473	.
I-api_mention	38473	38477	util
I-api_mention	38477	38478	.
I-api_mention	38478	38485	Scanner
O	38486	38487	.

O	38488	38489	I
O	38490	38495	think
O	38496	38497	a
O	38498	38502	more
O	38503	38511	readable
O	38511	38512	/
O	38512	38521	idiomatic
O	38522	38530	solution
O	38531	38536	would
O	38537	38539	be
O	38540	38542	to
O	38543	38547	call
O	38548	38555	scanner
B-api_mention	38555	38556	.
I-api_mention	38556	38560	skip
I-api_mention	38560	38561	(
I-api_mention	38561	38565	args
I-api_mention	38565	38566	)
O	38567	38569	to
O	38570	38574	drop
O	38575	38578	any
O	38579	38586	newline
O	38587	38597	characters
O	38598	38603	after
O	38604	38611	calling
B-api_mention	38612	38619	nextInt
I-api_mention	38619	38620	(
I-api_mention	38620	38624	args
I-api_mention	38624	38625	)
O	38626	38627	.

O	38629	38637	Question
O	38637	38638	-
O	38638	38646	13102045
O	38646	38647	,
O	38648	38654	answer
O	38654	38655	-
O	38655	38663	24907860

O	38664	38671	Instead
O	38672	38674	of
O	38675	38680	input
B-api_mention	38680	38681	.
I-api_mention	38681	38689	nextLine
I-api_mention	38689	38690	(
I-api_mention	38690	38694	args
I-api_mention	38694	38695	)
O	38696	38699	use
O	38700	38705	input
B-api_mention	38705	38706	.
I-api_mention	38706	38710	next
I-api_mention	38710	38711	(
I-api_mention	38711	38715	args
I-api_mention	38715	38716	)
O	38717	38718	,
O	38719	38723	that
O	38724	38730	should
O	38731	38736	solve
O	38737	38740	the
O	38741	38748	problem
O	38748	38749	.

O	38750	38758	Modified
O	38759	38763	code
O	38763	38764	:
O	38765	38766	#
O	38766	38769	pre

O	38771	38779	Question
O	38779	38780	-
O	38780	38788	11774099
O	38788	38789	,
O	38790	38796	answer
O	38796	38797	-
O	38797	38805	11774137

O	38806	38813	iterate
O	38814	38821	through
O	38822	38825	the
O	38826	38831	whole
O	38832	38835	65k
O	38836	38841	chars
O	38842	38845	and
O	38846	38849	ask
B-api_mention	38850	38859	Character
I-api_mention	38859	38860	.
I-api_mention	38860	38881	isJavaIdentifierStart
I-api_mention	38881	38882	(
I-api_mention	38882	38886	args
I-api_mention	38886	38887	)
O	38888	38889	.

O	38890	38893	The
O	38894	38900	answer
O	38901	38903	is
O	38904	38905	:
O	38906	38907	"
O	38907	38915	undertie
O	38915	38916	"
O	38917	38924	decimal
O	38925	38929	8255

O	38931	38939	Question
O	38939	38940	-
O	38940	38948	11411022
O	38948	38949	,
O	38950	38956	answer
O	38956	38957	-
O	38957	38965	34052602

O	38966	38969	The
O	38970	38974	best
O	38975	38978	way
O	38979	38981	is
O	38982	38985	the
O	38986	38994	clearest
O	38995	38998	way
O	38998	38999	:
O	39000	39001	*
B-api_mention	39002	39008	Thread
I-api_mention	39008	39009	.
I-api_mention	39009	39022	currentThread
I-api_mention	39022	39023	(
I-api_mention	39023	39027	args
I-api_mention	39027	39028	)
O	39029	39030	=
O	39030	39031	=
B-api_mention	39032	39038	Looper
I-api_mention	39038	39039	.
I-api_mention	39039	39052	getMainLooper
I-api_mention	39052	39053	(
I-api_mention	39053	39057	args
I-api_mention	39057	39058	)
I-api_mention	39058	39059	.
I-api_mention	39059	39068	getThread
I-api_mention	39068	39069	(
I-api_mention	39069	39073	args
I-api_mention	39073	39074	)
O	39075	39077	Or
O	39077	39078	,
O	39079	39081	if
O	39082	39085	the
O	39086	39093	runtime
O	39094	39102	platform
O	39103	39105	is
O	39106	39109	API
O	39110	39115	level
O	39116	39118	23
O	39119	39120	(
O	39120	39131	Marshmallow
O	39132	39133	6
O	39133	39134	.
O	39134	39135	0
O	39135	39136	)
O	39137	39139	or
O	39140	39146	higher
O	39146	39147	:
B-api_mention	39148	39154	Looper
I-api_mention	39154	39155	.
I-api_mention	39155	39168	getMainLooper
I-api_mention	39168	39169	(
I-api_mention	39169	39173	args
I-api_mention	39173	39174	)
I-api_mention	39174	39175	.
I-api_mention	39175	39190	isCurrentThread
I-api_mention	39190	39191	(
I-api_mention	39191	39195	args
I-api_mention	39195	39196	)
O	39197	39200	See
O	39201	39204	the
B-api_mention	39205	39211	Looper
O	39212	39215	API
O	39216	39217	.

O	39218	39222	Note
O	39223	39227	that
O	39228	39235	calling
B-api_mention	39236	39242	Looper
I-api_mention	39242	39243	.
I-api_mention	39243	39256	getMainLooper
I-api_mention	39256	39257	(
I-api_mention	39257	39261	args
I-api_mention	39261	39262	)
O	39263	39271	involves
O	39272	39286	synchonization
O	39287	39288	(
O	39288	39291	see
O	39292	39295	the
O	39296	39302	source
O	39303	39304	)
O	39304	39305	.

O	39306	39309	You
O	39310	39315	might
O	39316	39320	want
O	39321	39323	to
O	39324	39329	avoid
O	39330	39333	the
O	39334	39342	overhead
O	39343	39345	by
O	39346	39353	storing
O	39354	39357	the
O	39358	39364	return
O	39365	39370	value
O	39371	39374	and
O	39375	39382	reusing
O	39383	39385	it
O	39385	39386	.

O	39387	39388	*
O	39389	39395	credit
O	39396	39404	greg7gkb

O	39406	39414	Question
O	39414	39415	-
O	39415	39423	12552863
O	39423	39424	,
O	39425	39431	answer
O	39431	39432	-
O	39432	39440	12619799

O	39441	39442	I
O	39443	39448	would
O	39449	39452	say
O	39453	39456	don
O	39456	39457	'
O	39457	39458	t
O	39459	39462	use
O	39463	39466	ARM
O	39467	39470	and
O	39471	39473	go
O	39474	39476	on
O	39477	39481	with
B-api_mention	39482	39491	Closeable
O	39491	39492	.

O	39493	39496	Use
O	39497	39503	method
O	39504	39508	like
O	39508	39509	,
O	39510	39511	#
O	39511	39514	pre
O	39515	39519	Also
O	39520	39523	you
O	39524	39530	should
O	39531	39539	consider
O	39540	39547	calling
O	39548	39553	close
O	39554	39556	of
B-api_mention	39557	39571	BufferedWriter
O	39572	39574	as
O	39575	39577	it
O	39578	39580	is
O	39581	39584	not
O	39585	39589	just
O	39590	39600	delegating
O	39601	39604	the
O	39605	39610	close
O	39611	39613	to
B-api_mention	39614	39624	FileWriter
O	39625	39626	,
O	39627	39630	but
O	39631	39633	it
O	39634	39638	does
O	39639	39643	some
O	39644	39651	cleanup
O	39652	39656	like
B-api_mention	39657	39668	flushBuffer
O	39669	39670	.

O	39672	39680	Question
O	39680	39681	-
O	39681	39689	12552863
O	39689	39690	,
O	39691	39697	answer
O	39697	39698	-
O	39698	39706	12665271

O	39707	39711	Here
O	39711	39712	'
O	39712	39713	s
O	39714	39716	my
O	39717	39721	take
O	39722	39724	on
O	39725	39728	the
O	39729	39741	alternatives
O	39741	39742	:
O	39743	39744	1
O	39744	39745	)
O	39746	39747	#
O	39747	39750	pre
O	39751	39754	For
O	39755	39757	me
O	39757	39758	,
O	39759	39762	the
O	39763	39767	best
O	39768	39773	thing
O	39774	39780	coming
O	39781	39783	to
O	39784	39788	Java
O	39789	39793	from
O	39794	39805	traditional
O	39806	39807	C
O	39807	39808	+
O	39808	39809	+
O	39810	39812	15
O	39813	39818	years
O	39819	39822	ago
O	39823	39826	was
O	39827	39831	that
O	39832	39835	you
O	39836	39841	could
O	39842	39847	trust
O	39848	39852	your
O	39853	39860	program
O	39860	39861	.

O	39862	39866	Even
O	39867	39869	if
O	39870	39876	things
O	39877	39880	are
O	39881	39883	in
O	39884	39887	the
O	39888	39892	muck
O	39893	39896	and
O	39897	39902	going
O	39903	39908	wrong
O	39908	39909	,
O	39910	39915	which
O	39916	39920	they
O	39921	39926	often
O	39927	39929	do
O	39929	39930	,
O	39931	39932	I
O	39933	39937	want
O	39938	39941	the
O	39942	39946	rest
O	39947	39949	of
O	39950	39953	the
O	39954	39958	code
O	39959	39961	to
O	39962	39964	be
O	39965	39967	on
O	39968	39972	best
O	39973	39982	behaviour
O	39983	39986	and
O	39987	39995	smelling
O	39996	39998	of
O	39999	40004	roses
O	40004	40005	.

O	40006	40012	Indeed
O	40012	40013	,
O	40014	40017	the
B-api_mention	40018	40032	BufferedWriter
O	40033	40038	might
O	40039	40044	throw
O	40045	40047	an
O	40048	40057	exception
O	40058	40062	here
O	40062	40063	.

O	40064	40071	Running
O	40072	40075	out
O	40076	40078	of
O	40079	40085	memory
O	40086	40092	wouldn
O	40092	40093	'
O	40093	40094	t
O	40095	40097	be
O	40098	40105	unusual
O	40105	40106	,
O	40107	40110	for
O	40111	40119	instance
O	40119	40120	.

O	40121	40124	For
O	40125	40130	other
O	40131	40141	decorators
O	40141	40142	,
O	40143	40145	do
O	40146	40149	you
O	40150	40154	know
O	40155	40160	which
O	40161	40163	of
O	40164	40167	the
B-api_mention	40168	40172	java
I-api_mention	40172	40173	.
I-api_mention	40173	40175	io
O	40176	40183	wrapper
O	40184	40191	classes
O	40192	40197	throw
O	40198	40199	a
O	40200	40207	checked
O	40208	40217	exception
O	40218	40222	from
O	40223	40228	their
O	40229	40241	constructors
O	40241	40242	?

O	40243	40244	I
O	40245	40248	don
O	40248	40249	'
O	40249	40250	t
O	40250	40251	.

O	40252	40257	Doesn
O	40257	40258	'
O	40258	40259	t
O	40260	40262	do
O	40263	40267	code
O	40268	40285	understandability
O	40286	40290	much
O	40291	40295	good
O	40296	40298	if
O	40299	40302	you
O	40303	40307	rely
O	40308	40312	upon
O	40313	40317	that
O	40318	40322	sort
O	40323	40325	of
O	40326	40333	obscure
O	40334	40343	knowledge
O	40343	40344	.

O	40345	40349	Also
O	40350	40355	there
O	40355	40356	'
O	40356	40357	s
O	40358	40361	the
O	40362	40363	"
O	40363	40374	destruction
O	40374	40375	"
O	40375	40376	.

O	40377	40379	If
O	40380	40385	there
O	40386	40388	is
O	40389	40391	an
O	40392	40397	error
O	40398	40407	condition
O	40407	40408	,
O	40409	40413	then
O	40414	40417	you
O	40418	40426	probably
O	40427	40430	don
O	40430	40431	'
O	40431	40432	t
O	40433	40437	want
O	40438	40440	to
O	40441	40443	be
O	40444	40452	flushing
O	40453	40460	rubbish
O	40461	40463	to
O	40464	40465	a
O	40466	40470	file
O	40471	40475	that
O	40476	40481	needs
O	40482	40490	deleting
O	40491	40492	(
O	40492	40496	code
O	40497	40500	for
O	40501	40505	that
O	40506	40509	not
O	40510	40515	shown
O	40515	40516	)
O	40516	40517	.

O	40518	40526	Although
O	40526	40527	,
O	40528	40530	of
O	40531	40537	course
O	40537	40538	,
O	40539	40547	deleting
O	40548	40551	the
O	40552	40556	file
O	40557	40559	is
O	40560	40564	also
O	40565	40572	another
O	40573	40584	interesting
O	40585	40594	operation
O	40595	40597	to
O	40598	40600	do
O	40601	40603	as
O	40604	40609	error
O	40610	40618	handling
O	40618	40619	.

O	40620	40629	Generally
O	40630	40633	you
O	40634	40638	want
O	40639	40646	finally
O	40647	40653	blocks
O	40654	40656	to
O	40657	40659	be
O	40660	40662	as
O	40663	40668	short
O	40669	40672	and
O	40673	40681	reliable
O	40682	40684	as
O	40685	40693	possible
O	40693	40694	.

O	40695	40701	Adding
O	40702	40709	flushes
O	40710	40714	does
O	40715	40718	not
O	40719	40723	help
O	40724	40728	this
O	40729	40733	goal
O	40733	40734	.

O	40735	40738	For
O	40739	40743	many
O	40744	40752	releases
O	40753	40757	some
O	40758	40760	of
O	40761	40764	the
O	40765	40774	buffering
O	40775	40782	classes
O	40783	40785	in
O	40786	40789	the
O	40790	40793	JDK
O	40794	40797	had
O	40798	40799	a
O	40800	40803	bug
O	40804	40809	where
O	40810	40812	an
O	40813	40822	exception
O	40823	40827	from
B-api_mention	40828	40833	flush
O	40834	40840	within
B-api_mention	40841	40846	close
O	40847	40853	caused
B-api_mention	40854	40859	close
O	40860	40862	on
O	40863	40866	the
O	40867	40876	decorated
O	40877	40883	object
O	40884	40887	not
O	40888	40890	be
O	40891	40897	called
O	40897	40898	.

O	40899	40905	Whilst
O	40906	40910	that
O	40911	40914	has
O	40915	40919	been
O	40920	40925	fixed
O	40926	40929	for
O	40930	40934	some
O	40935	40939	time
O	40939	40940	,
O	40941	40947	expect
O	40948	40950	it
O	40951	40955	from
O	40956	40961	other
O	40962	40977	implementations
O	40977	40978	.

O	40979	40980	2
O	40980	40981	)
O	40982	40983	#
O	40983	40986	pre
O	40987	40989	We
O	40989	40990	'
O	40990	40992	re
O	40993	40998	still
O	40999	41007	flushing
O	41008	41010	in
O	41011	41014	the
O	41015	41023	implicit
O	41024	41031	finally
O	41032	41037	block
O	41038	41039	(
O	41039	41042	now
O	41043	41047	with
O	41048	41056	repeated
B-api_mention	41057	41062	close
O	41063	41064	-
O	41065	41069	this
O	41070	41074	gets
O	41075	41080	worse
O	41081	41083	as
O	41084	41087	you
O	41088	41091	add
O	41092	41096	more
O	41097	41107	decorators
O	41107	41108	)
O	41108	41109	,
O	41110	41113	but
O	41114	41117	the
O	41118	41130	construction
O	41131	41133	is
O	41134	41138	safe
O	41139	41142	and
O	41143	41145	we
O	41146	41150	have
O	41151	41153	to
O	41154	41162	implicit
O	41163	41170	finally
O	41171	41177	blocks
O	41178	41180	so
O	41181	41185	even
O	41186	41187	a
O	41188	41194	failed
B-api_mention	41195	41200	flush
O	41201	41206	doesn
O	41206	41207	'
O	41207	41208	t
O	41209	41216	prevent
O	41217	41225	resource
O	41226	41233	release
O	41233	41234	.

O	41235	41236	3
O	41236	41237	)
O	41238	41239	#
O	41239	41242	pre
O	41243	41248	There
O	41248	41249	'
O	41249	41250	s
O	41251	41252	a
O	41253	41256	bug
O	41257	41261	here
O	41261	41262	.

O	41263	41269	Should
O	41270	41272	be
O	41272	41273	:
O	41274	41275	#
O	41275	41278	pre
O	41279	41283	Some
O	41284	41290	poorly
O	41291	41302	implemented
O	41303	41313	decorators
O	41314	41317	are
O	41318	41320	in
O	41321	41325	fact
O	41326	41334	resource
O	41335	41338	and
O	41339	41343	will
O	41344	41348	need
O	41349	41351	to
O	41352	41354	be
O	41355	41361	closed
O	41362	41370	reliably
O	41370	41371	.

O	41372	41376	Also
O	41377	41381	some
O	41382	41389	streams
O	41390	41393	may
O	41394	41398	need
O	41399	41401	to
O	41402	41404	be
O	41405	41411	closed
O	41412	41414	in
O	41415	41416	a
O	41417	41427	particular
O	41428	41431	way
O	41432	41433	(
O	41433	41440	perhaps
O	41441	41445	they
O	41446	41449	are
O	41450	41455	doing
O	41456	41467	compression
O	41468	41471	and
O	41472	41476	need
O	41477	41479	to
O	41480	41485	write
O	41486	41490	bits
O	41491	41493	to
O	41494	41500	finish
O	41501	41504	off
O	41504	41505	,
O	41506	41509	and
O	41510	41513	can
O	41513	41514	'
O	41514	41515	t
O	41516	41520	just
O	41521	41526	flush
O	41527	41537	everything
O	41537	41538	.

O	41539	41546	Verdict
O	41547	41555	Although
O	41556	41557	3
O	41558	41560	is
O	41561	41562	a
O	41563	41574	technically
O	41575	41583	superior
O	41584	41592	solution
O	41592	41593	,
O	41594	41602	software
O	41603	41614	development
O	41615	41622	reasons
O	41623	41627	make
O	41628	41629	2
O	41630	41633	the
O	41634	41640	better
O	41641	41647	choice
O	41647	41648	.

O	41649	41656	However
O	41656	41657	,
O	41658	41661	try
O	41661	41662	-
O	41662	41666	with
O	41666	41667	-
O	41667	41675	resource
O	41676	41678	is
O	41679	41684	still
O	41685	41687	an
O	41688	41698	inadequate
O	41699	41702	fix
O	41703	41706	and
O	41707	41710	you
O	41711	41717	should
O	41718	41723	stick
O	41724	41728	with
O	41729	41732	the
O	41733	41740	Execute
O	41741	41747	Around
O	41748	41753	idiom
O	41753	41754	,
O	41755	41760	which
O	41761	41767	should
O	41768	41772	have
O	41773	41774	a
O	41775	41782	clearer
O	41783	41789	syntax
O	41790	41794	with
O	41795	41803	closures
O	41804	41806	in
O	41807	41811	Java
O	41812	41814	SE
O	41815	41816	8
O	41816	41817	.

O	41819	41827	Question
O	41827	41828	-
O	41828	41836	12552863
O	41836	41837	,
O	41838	41844	answer
O	41844	41845	-
O	41845	41853	16229988

O	41854	41856	My
O	41857	41865	solution
O	41866	41868	is
O	41869	41871	to
O	41872	41874	do
O	41875	41876	a
O	41877	41878	"
O	41878	41885	extract
O	41886	41892	method
O	41892	41893	"
O	41894	41905	refactoring
O	41905	41906	,
O	41907	41909	as
O	41910	41919	following
O	41919	41920	:
O	41921	41922	#
O	41922	41925	pre
B-api_mention	41926	41937	printToFile
O	41938	41941	can
O	41942	41944	be
O	41945	41952	written
O	41953	41959	either
O	41960	41961	#
O	41961	41964	pre
O	41965	41967	or
O	41968	41969	#
O	41969	41972	pre
O	41973	41976	For
O	41977	41982	class
O	41983	41986	lib
O	41987	41996	designers
O	41996	41997	,
O	41998	41999	I
O	42000	42004	will
O	42005	42012	suggest
O	42013	42017	them
O	42018	42024	extend
O	42025	42028	the
B-api_mention	42029	42041	AutoClosable
O	42042	42051	interface
O	42052	42056	with
O	42057	42059	an
O	42060	42070	additional
O	42071	42077	method
O	42078	42080	to
O	42081	42089	suppress
O	42090	42093	the
O	42094	42099	close
O	42099	42100	.

O	42101	42103	In
O	42104	42108	this
O	42109	42113	case
O	42114	42116	we
O	42117	42120	can
O	42121	42125	then
O	42126	42134	manually
O	42135	42142	control
O	42143	42146	the
O	42147	42152	close
O	42153	42161	behavior
O	42161	42162	.

O	42163	42166	For
O	42167	42175	language
O	42176	42185	designers
O	42185	42186	,
O	42187	42190	the
O	42191	42197	lesson
O	42198	42200	is
O	42201	42205	that
O	42206	42212	adding
O	42213	42214	a
O	42215	42218	new
O	42219	42226	feature
O	42227	42232	could
O	42233	42237	mean
O	42238	42244	adding
O	42245	42246	a
O	42247	42250	lot
O	42251	42257	others
O	42257	42258	.

O	42259	42261	In
O	42262	42266	this
O	42267	42271	Java
O	42272	42276	case
O	42276	42277	,
O	42278	42287	obviously
O	42288	42291	ARM
O	42292	42299	feature
O	42300	42304	will
O	42305	42309	work
O	42310	42316	better
O	42317	42321	with
O	42322	42323	a
O	42324	42332	resource
O	42333	42342	ownership
O	42343	42351	transfer
O	42352	42361	mechanism
O	42361	42362	.

O	42363	42369	UPDATE
O	42370	42380	Originally
O	42381	42384	the
O	42385	42389	code
O	42390	42395	above
O	42396	42404	requires
O	42405	42406	@
O	42406	42421	SuppressWarning
O	42422	42427	since
O	42428	42431	the
B-api_mention	42432	42446	BufferedWriter
O	42447	42453	inside
O	42454	42457	the
O	42458	42466	function
O	42467	42475	requires
B-api_mention	42476	42481	close
I-api_mention	42481	42482	(
I-api_mention	42482	42486	args
I-api_mention	42486	42487	)
O	42488	42489	.

O	42490	42492	As
O	42493	42502	suggested
O	42503	42505	by
O	42506	42507	a
O	42508	42515	comment
O	42515	42516	,
O	42517	42519	if
B-api_mention	42520	42525	flush
I-api_mention	42525	42526	(
I-api_mention	42526	42530	args
I-api_mention	42530	42531	)
O	42532	42534	to
O	42535	42537	be
O	42538	42544	called
O	42545	42551	before
O	42552	42557	close
O	42558	42561	the
O	42562	42568	writer
O	42568	42569	,
O	42570	42572	we
O	42573	42577	need
O	42578	42580	to
O	42581	42583	do
O	42584	42586	so
O	42587	42593	before
O	42594	42597	any
B-api_mention	42598	42604	return
O	42605	42606	(
O	42606	42614	implicit
O	42615	42617	or
O	42618	42626	explicit
O	42626	42627	)
O	42628	42638	statements
O	42639	42645	inside
O	42646	42649	the
O	42650	42653	try
O	42654	42659	block
O	42659	42660	.

O	42661	42666	There
O	42667	42669	is
O	42670	42679	currently
O	42680	42682	no
O	42683	42686	way
O	42687	42689	to
O	42690	42696	ensure
O	42697	42700	the
O	42701	42707	caller
O	42708	42713	doing
O	42714	42718	this
O	42719	42720	I
O	42721	42726	think
O	42726	42727	,
O	42728	42730	so
O	42731	42735	this
O	42736	42740	must
O	42741	42743	be
O	42744	42754	documented
O	42755	42758	for
B-api_mention	42759	42774	writeFileWriter
O	42775	42776	.

O	42777	42783	UPDATE
O	42784	42789	AGAIN
O	42790	42793	The
O	42794	42799	above
O	42800	42806	update
O	42807	42812	makes
O	42813	42814	@
O	42814	42829	SuppressWarning
O	42830	42841	unnecessary
O	42842	42847	since
O	42848	42850	it
O	42851	42858	require
O	42859	42862	the
O	42863	42871	function
O	42872	42874	to
O	42875	42881	return
O	42882	42885	the
O	42886	42894	resource
O	42895	42897	to
O	42898	42901	the
O	42902	42908	caller
O	42908	42909	,
O	42910	42912	so
O	42913	42919	itself
O	42920	42924	does
O	42925	42928	not
O	42929	42938	necessary
O	42939	42944	being
O	42945	42951	closed
O	42951	42952	.

O	42953	42966	Unfortunately
O	42966	42967	,
O	42968	42972	this
O	42973	42977	pull
O	42978	42980	us
O	42981	42985	back
O	42986	42988	to
O	42989	42992	the
O	42993	43002	beginning
O	43003	43005	of
O	43006	43009	the
O	43010	43019	situation
O	43019	43020	:
O	43021	43024	the
O	43025	43032	warning
O	43033	43035	is
O	43036	43039	now
O	43040	43045	moved
O	43046	43050	back
O	43051	43053	to
O	43054	43057	the
O	43058	43064	caller
O	43065	43069	side
O	43069	43070	.

O	43071	43073	So
O	43074	43076	to
O	43077	43085	properly
O	43086	43091	solve
O	43092	43096	this
O	43096	43097	,
O	43098	43100	we
O	43101	43105	need
O	43106	43107	a
O	43108	43118	customised
B-api_mention	43119	43131	AutoClosable
O	43132	43136	that
O	43137	43145	whenever
O	43146	43148	it
O	43149	43155	closes
O	43155	43156	,
O	43157	43160	the
O	43161	43170	underline
B-api_mention	43171	43185	BufferedWriter
O	43186	43191	shall
O	43192	43194	be
B-api_mention	43195	43200	flush
I-api_mention	43200	43201	(
I-api_mention	43201	43205	args
I-api_mention	43205	43206	)
O	43207	43209	ed
O	43209	43210	.

O	43211	43219	Actually
O	43219	43220	,
O	43221	43225	this
O	43226	43231	shows
O	43232	43234	us
O	43235	43242	another
O	43243	43246	way
O	43247	43249	to
O	43250	43256	bypass
O	43257	43260	the
O	43261	43268	warning
O	43268	43269	,
O	43270	43275	since
O	43276	43279	the
B-api_mention	43280	43292	BufferWriter
O	43293	43295	is
O	43296	43301	never
O	43302	43308	closed
O	43309	43311	in
O	43312	43318	either
O	43319	43322	way
O	43322	43323	.

O	43325	43333	Question
O	43333	43334	-
O	43334	43342	12552863
O	43342	43343	,
O	43344	43350	answer
O	43350	43351	-
O	43351	43359	18496449

O	43360	43363	The
O	43364	43369	first
O	43370	43375	style
O	43376	43378	is
O	43379	43382	the
O	43383	43386	one
O	43387	43396	suggested
O	43397	43399	by
O	43400	43406	Oracle
O	43407	43408	.

B-api_mention	43409	43423	BufferedWriter
O	43424	43429	doesn
O	43429	43430	'
O	43430	43431	t
O	43432	43437	throw
O	43438	43445	checked
O	43446	43456	exceptions
O	43456	43457	,
O	43458	43460	so
O	43461	43463	if
O	43464	43467	any
O	43468	43477	exception
O	43478	43480	is
O	43481	43487	thrown
O	43487	43488	,
O	43489	43492	the
O	43493	43500	program
O	43501	43503	is
O	43504	43507	not
O	43508	43516	expected
O	43517	43519	to
O	43520	43527	recover
O	43528	43532	from
O	43533	43535	it
O	43535	43536	,
O	43537	43543	making
O	43544	43552	resource
O	43553	43560	recover
O	43561	43567	mostly
O	43568	43572	moot
O	43572	43573	.

O	43574	43580	Mostly
O	43581	43588	because
O	43589	43591	it
O	43592	43597	could
O	43598	43604	happen
O	43605	43607	in
O	43608	43609	a
O	43610	43616	thread
O	43616	43617	,
O	43618	43622	with
O	43623	43626	the
O	43627	43633	thread
O	43634	43640	dieing
O	43641	43644	but
O	43645	43648	the
O	43649	43656	program
O	43657	43662	still
O	43663	43673	continuing
O	43674	43675	-
O	43675	43676	-
O	43677	43680	say
O	43680	43681	,
O	43682	43687	there
O	43688	43691	was
O	43692	43693	a
O	43694	43703	temporary
O	43704	43710	memory
O	43711	43717	outage
O	43718	43722	that
O	43723	43727	wasn
O	43727	43728	'
O	43728	43729	t
O	43730	43734	long
O	43735	43741	enough
O	43742	43744	to
O	43745	43754	seriously
O	43755	43761	impair
O	43762	43765	the
O	43766	43770	rest
O	43771	43773	of
O	43774	43777	the
O	43778	43785	program
O	43785	43786	.

O	43787	43789	It
O	43789	43790	'
O	43790	43791	s
O	43792	43793	a
O	43794	43800	rather
O	43801	43807	corner
O	43808	43812	case
O	43812	43813	,
O	43814	43820	though
O	43820	43821	,
O	43822	43825	and
O	43826	43828	if
O	43829	43831	it
O	43832	43839	happens
O	43840	43845	often
O	43846	43852	enough
O	43853	43855	to
O	43856	43860	make
O	43861	43869	resource
O	43870	43874	leak
O	43875	43876	a
O	43877	43884	problem
O	43884	43885	,
O	43886	43889	the
O	43890	43893	try
O	43893	43894	-
O	43894	43898	with
O	43898	43899	-
O	43899	43908	resources
O	43909	43911	is
O	43912	43915	the
O	43916	43921	least
O	43922	43924	of
O	43925	43929	your
O	43930	43938	problems
O	43938	43939	.

O	43941	43949	Question
O	43949	43950	-
O	43950	43958	12552863
O	43958	43959	,
O	43960	43966	answer
O	43966	43967	-
O	43967	43975	32302353

O	43976	43978	To
O	43979	43985	concur
O	43986	43990	with
O	43991	43998	earlier
O	43999	44007	comments
O	44007	44008	:
O	44009	44017	simplest
O	44018	44020	is
O	44021	44022	(
O	44022	44023	2
O	44023	44024	)
O	44025	44027	to
O	44028	44031	use
B-api_mention	44032	44041	Closeable
O	44042	44051	resources
O	44052	44055	and
O	44056	44063	declare
O	44064	44068	them
O	44069	44071	in
O	44072	44077	order
O	44078	44080	in
O	44081	44084	the
O	44085	44088	try
O	44088	44089	-
O	44089	44093	with
O	44093	44094	-
O	44094	44103	resources
O	44104	44110	clause
O	44110	44111	.

O	44112	44114	If
O	44115	44118	you
O	44119	44123	only
O	44124	44128	have
B-api_mention	44129	44142	AutoCloseable
O	44142	44143	,
O	44144	44147	you
O	44148	44151	can
O	44152	44156	wrap
O	44157	44161	them
O	44162	44164	in
O	44165	44172	another
O	44173	44174	(
O	44174	44180	nested
O	44180	44181	)
O	44182	44187	class
O	44188	44192	that
O	44193	44197	just
O	44198	44204	checks
O	44205	44209	that
B-api_mention	44210	44215	close
O	44216	44218	is
O	44219	44223	only
O	44224	44230	called
O	44231	44235	once
O	44236	44237	(
O	44237	44243	Facade
O	44244	44251	Pattern
O	44251	44252	)
O	44252	44253	,
O	44254	44255	e
O	44255	44256	.
O	44256	44257	g
O	44257	44258	.
O	44259	44261	by
O	44262	44268	having
O	44269	44276	private
O	44277	44281	bool
O	44282	44290	isClosed
O	44290	44291	;
O	44292	44293	.

O	44294	44296	In
O	44297	44305	practice
O	44306	44310	even
O	44311	44317	Oracle
O	44318	44322	just
O	44323	44324	(
O	44324	44325	1
O	44325	44326	)
O	44327	44333	chains
O	44334	44337	the
O	44338	44350	constructors
O	44351	44354	and
O	44355	44360	doesn
O	44360	44361	'
O	44361	44362	t
O	44363	44372	correctly
O	44373	44379	handle
O	44380	44390	exceptions
O	44391	44398	partway
O	44399	44406	through
O	44407	44410	the
O	44411	44416	chain
O	44416	44417	.

O	44418	44431	Alternatively
O	44431	44432	,
O	44433	44436	you
O	44437	44440	can
O	44441	44449	manually
O	44450	44456	create
O	44457	44458	a
O	44459	44466	chained
O	44467	44475	resource
O	44475	44476	,
O	44477	44482	using
O	44483	44484	a
O	44485	44491	static
O	44492	44499	factory
O	44500	44506	method
O	44506	44507	;
O	44508	44512	this
O	44513	44525	encapsulates
O	44526	44529	the
O	44530	44535	chain
O	44535	44536	,
O	44537	44540	and
O	44541	44547	handle
O	44548	44555	cleanup
O	44556	44558	if
O	44559	44561	it
O	44562	44567	fails
O	44568	44572	part
O	44572	44573	-
O	44573	44576	way
O	44576	44577	:
O	44578	44579	#
O	44579	44582	pre
O	44583	44586	The
O	44587	44597	complexity
O	44598	44603	comes
O	44604	44608	from
O	44609	44617	handling
O	44618	44626	multiple
O	44627	44637	exceptions
O	44637	44638	;
O	44639	44648	otherwise
O	44649	44651	it
O	44651	44652	'
O	44652	44653	s
O	44654	44658	just
O	44659	44660	"
O	44660	44665	close
O	44666	44675	resources
O	44676	44680	that
O	44681	44684	you
O	44684	44685	'
O	44685	44687	ve
O	44688	44696	acquired
O	44697	44699	so
O	44700	44703	far
O	44703	44704	"
O	44704	44705	.

O	44706	44707	A
O	44708	44714	common
O	44715	44723	practice
O	44724	44729	seems
O	44730	44732	to
O	44733	44735	be
O	44736	44738	to
O	44739	44744	first
O	44745	44755	initialize
O	44756	44759	the
O	44760	44768	variable
O	44769	44773	that
O	44774	44779	holds
O	44780	44783	the
O	44784	44790	object
O	44791	44795	that
O	44796	44801	holds
O	44802	44805	the
O	44806	44814	resource
O	44815	44817	to
O	44818	44822	null
O	44823	44824	(
O	44824	44828	here
B-api_mention	44829	44839	fileWriter
O	44840	44841	)
O	44841	44842	,
O	44843	44846	and
O	44847	44851	then
O	44852	44859	include
O	44860	44861	a
O	44862	44866	null
O	44867	44872	check
O	44873	44875	in
O	44876	44879	the
O	44880	44887	cleanup
O	44887	44888	,
O	44889	44892	but
O	44893	44897	that
O	44898	44903	seems
O	44904	44915	unnecessary
O	44915	44916	:
O	44917	44919	if
O	44920	44923	the
O	44924	44935	constructor
O	44936	44941	fails
O	44941	44942	,
O	44943	44948	there
O	44948	44949	'
O	44949	44950	s
O	44951	44958	nothing
O	44959	44961	to
O	44962	44967	clean
O	44968	44970	up
O	44970	44971	,
O	44972	44974	so
O	44975	44977	we
O	44978	44981	can
O	44982	44986	just
O	44987	44990	let
O	44991	44995	that
O	44996	45005	exception
O	45006	45015	propagate
O	45015	45016	,
O	45017	45022	which
O	45023	45033	simplifies
O	45034	45037	the
O	45038	45042	code
O	45043	45044	a
O	45045	45051	little
O	45051	45052	.

O	45053	45056	You
O	45057	45062	could
O	45063	45071	probably
O	45072	45074	do
O	45075	45079	this
O	45080	45091	generically
O	45091	45092	:
O	45093	45094	#
O	45094	45097	pre

O	45099	45107	Question
O	45107	45108	-
O	45108	45116	13195797
O	45116	45117	,
O	45118	45124	answer
O	45124	45125	-
O	45125	45133	13195890

B-api_mention	45134	45143	FileUtils
I-api_mention	45143	45144	.
I-api_mention	45144	45158	cleanDirectory
I-api_mention	45158	45159	(
I-api_mention	45159	45163	args
I-api_mention	45163	45164	)
O	45164	45165	;
O	45166	45171	There
O	45172	45174	is
O	45175	45179	this
O	45180	45186	method
O	45187	45196	available
O	45197	45199	in
O	45200	45203	the
O	45204	45208	same
O	45209	45213	file
O	45213	45214	.

O	45215	45219	This
O	45220	45224	will
O	45225	45229	also
O	45230	45241	recursively
O	45242	45249	deletes
O	45250	45253	all
O	45254	45257	sub
O	45257	45258	-
O	45258	45265	folders
O	45266	45269	and
O	45270	45275	files
O	45276	45281	under
O	45282	45286	them
O	45286	45287	.

O	45288	45292	Docs
O	45292	45293	:
B-api_mention	45294	45297	org
I-api_mention	45297	45298	.
I-api_mention	45298	45304	apache
I-api_mention	45304	45305	.
I-api_mention	45305	45312	commons
I-api_mention	45312	45313	.
I-api_mention	45313	45315	io
I-api_mention	45315	45316	.
I-api_mention	45316	45325	FileUtils
I-api_mention	45325	45326	.
I-api_mention	45326	45340	cleanDirectory

O	45342	45350	Question
O	45350	45351	-
O	45351	45359	13195797
O	45359	45360	,
O	45361	45367	answer
O	45367	45368	-
O	45368	45376	20043507

O	45377	45382	Peter
O	45383	45389	Lawrey
O	45389	45390	'
O	45390	45391	s
O	45392	45398	answer
O	45399	45401	is
O	45402	45407	great
O	45408	45415	because
O	45416	45418	it
O	45419	45421	is
O	45422	45428	simple
O	45429	45432	and
O	45433	45436	not
O	45437	45446	depending
O	45447	45449	on
O	45450	45458	anything
O	45459	45466	special
O	45466	45467	,
O	45468	45471	and
O	45472	45474	it
O	45474	45475	'
O	45475	45476	s
O	45477	45480	the
O	45481	45484	way
O	45485	45488	you
O	45489	45495	should
O	45496	45498	do
O	45499	45501	it
O	45501	45502	.

O	45503	45505	If
O	45506	45509	you
O	45510	45514	need
O	45515	45524	something
O	45525	45529	that
O	45530	45537	removes
O	45538	45552	subdirectories
O	45553	45556	and
O	45557	45562	their
O	45563	45571	contents
O	45572	45574	as
O	45575	45579	well
O	45579	45580	,
O	45581	45584	use
O	45585	45594	recursion
O	45594	45595	:
O	45596	45597	#
O	45597	45600	pre
O	45601	45603	To
O	45604	45609	spare
O	45610	45624	subdirectories
O	45625	45628	and
O	45629	45634	their
O	45635	45643	contents
O	45644	45645	(
O	45645	45649	part
O	45650	45652	of
O	45653	45657	your
O	45658	45666	question
O	45666	45667	)
O	45667	45668	,
O	45669	45675	modify
O	45676	45678	as
O	45679	45686	follows
O	45686	45687	:
O	45688	45689	#
O	45689	45692	pre
O	45693	45695	Or
O	45695	45696	,
O	45697	45702	since
O	45703	45706	you
O	45707	45713	wanted
O	45714	45715	a
O	45716	45719	one
O	45719	45720	-
O	45720	45724	line
O	45725	45733	solution
O	45733	45734	:
O	45735	45738	for
O	45738	45739	(
O	45739	45743	args
O	45743	45744	)
O	45745	45747	if
O	45747	45748	(
O	45748	45752	args
O	45752	45753	)
O	45754	45758	file
B-api_mention	45758	45759	.
I-api_mention	45759	45765	delete
I-api_mention	45765	45766	(
I-api_mention	45766	45770	args
I-api_mention	45770	45771	)
O	45771	45772	;
O	45773	45778	Using
O	45779	45781	an
O	45782	45790	external
O	45791	45798	library
O	45799	45802	for
O	45803	45807	such
O	45808	45809	a
O	45810	45817	trivial
O	45818	45822	task
O	45823	45825	is
O	45826	45829	not
O	45830	45831	a
O	45832	45836	good
O	45837	45841	idea
O	45842	45848	unless
O	45849	45852	you
O	45853	45857	need
O	45858	45862	this
O	45863	45870	library
O	45871	45874	for
O	45875	45884	something
O	45885	45889	else
O	45890	45896	anyway
O	45896	45897	,
O	45898	45900	in
O	45901	45906	which
O	45907	45911	case
O	45912	45914	it
O	45915	45917	is
O	45918	45929	preferrable
O	45930	45932	to
O	45933	45936	use
O	45937	45945	existing
O	45946	45950	code
O	45950	45951	.

O	45952	45955	You
O	45956	45962	appear
O	45963	45965	to
O	45966	45968	be
O	45969	45974	using
O	45975	45978	the
O	45979	45985	Apache
O	45986	45993	library
O	45994	46000	anyway
O	46001	46003	so
O	46004	46007	use
O	46008	46011	its
B-api_mention	46012	46021	FileUtils
I-api_mention	46021	46022	.
I-api_mention	46022	46036	cleanDirectory
I-api_mention	46036	46037	(
I-api_mention	46037	46041	args
I-api_mention	46041	46042	)
O	46043	46049	method
O	46049	46050	.

O	46052	46060	Question
O	46060	46061	-
O	46061	46069	11821801
O	46069	46070	,
O	46071	46077	answer
O	46077	46078	-
O	46078	46086	11821900

O	46087	46088	A
B-api_mention	46089	46102	ReentrantLock
O	46103	46105	is
O	46106	46118	unstructured
O	46119	46120	,
O	46121	46127	unlike
O	46128	46140	synchronized
O	46141	46151	constructs
O	46152	46153	-
O	46153	46154	-
O	46155	46156	i
O	46156	46157	.
O	46157	46158	e
O	46158	46159	.
O	46160	46163	you
O	46164	46167	don
O	46167	46168	'
O	46168	46169	t
O	46170	46174	need
O	46175	46177	to
O	46178	46181	use
O	46182	46183	a
O	46184	46189	block
O	46190	46199	structure
O	46200	46203	for
O	46204	46211	locking
O	46212	46215	and
O	46216	46219	can
O	46220	46224	even
O	46225	46229	hold
O	46230	46231	a
O	46232	46236	lock
O	46237	46243	across
O	46244	46251	methods
O	46251	46252	.

O	46253	46255	An
O	46256	46263	example
O	46263	46264	:
O	46265	46266	#
O	46266	46269	pre
O	46270	46274	Such
O	46275	46279	flow
O	46280	46282	is
O	46283	46293	impossible
O	46294	46296	to
O	46297	46306	represent
O	46307	46310	via
O	46311	46312	a
O	46313	46319	single
O	46320	46327	monitor
O	46328	46330	in
O	46331	46332	a
B-api_mention	46333	46345	synchronized
O	46346	46355	construct
O	46355	46356	.

O	46357	46362	Aside
O	46363	46367	from
O	46368	46372	that
O	46372	46373	,
B-api_mention	46374	46387	ReentrantLock
O	46388	46396	supports
O	46397	46401	lock
O	46402	46409	polling
O	46410	46413	and
O	46414	46427	interruptible
O	46428	46432	lock
O	46433	46438	waits
O	46439	46443	that
O	46444	46451	support
O	46452	46456	time
O	46456	46457	-
O	46457	46460	out
O	46461	46462	.

B-api_mention	46463	46476	ReentrantLock
O	46477	46481	also
O	46482	46485	has
O	46486	46493	support
O	46494	46497	for
O	46498	46510	configurable
O	46511	46519	fairness
O	46520	46526	policy
O	46527	46528	,
O	46529	46537	allowing
O	46538	46542	more
O	46543	46551	flexible
O	46552	46558	thread
O	46559	46569	scheduling
O	46569	46570	.

O	46571	46572	#
O	46572	46582	blockquote
B-api_mention	46583	46596	ReentrantLock
O	46597	46600	may
O	46601	46605	also
O	46606	46608	be
O	46609	46613	more
O	46614	46622	scalable
O	46623	46624	,
O	46625	46635	performing
O	46636	46640	much
O	46641	46647	better
O	46648	46653	under
O	46654	46660	higher
O	46661	46671	contention
O	46671	46672	.

O	46673	46676	You
O	46677	46680	can
O	46681	46685	read
O	46686	46690	more
O	46691	46696	about
O	46697	46701	this
O	46702	46706	here
O	46707	46708	.

O	46709	46713	This
O	46714	46719	claim
O	46720	46723	has
O	46724	46728	been
O	46729	46738	contested
O	46738	46739	,
O	46740	46747	however
O	46747	46748	;
O	46749	46752	see
O	46753	46756	the
O	46757	46766	following
O	46767	46774	comment
O	46774	46775	:
O	46776	46777	#
O	46777	46787	blockquote
O	46788	46792	When
O	46793	46799	should
O	46800	46803	you
O	46804	46807	use
B-api_mention	46808	46821	ReentrantLock
O	46822	46823	s
O	46823	46824	?

O	46825	46834	According
O	46835	46837	to
O	46838	46842	that
O	46843	46857	developerWorks
O	46858	46865	article
O	46865	46866	.
O	46866	46867	.
O	46867	46868	.

O	46869	46870	#
O	46870	46880	blockquote

O	46882	46890	Question
O	46890	46891	-
O	46891	46899	11821801
O	46899	46900	,
O	46901	46907	answer
O	46907	46908	-
O	46908	46916	36827191

O	46917	46921	From
O	46922	46928	oracle
O	46929	46942	documentation
O	46943	46947	page
O	46948	46953	about
B-api_mention	46954	46967	ReentrantLock
O	46968	46969	:
O	46970	46971	#
O	46971	46981	blockquote
O	46982	46983	#
O	46983	46985	li
O	46986	46987	A
B-api_mention	46988	47001	ReentrantLock
O	47002	47004	is
O	47005	47010	owned
O	47011	47013	by
O	47014	47017	the
O	47018	47024	thread
O	47025	47029	last
O	47030	47042	successfully
O	47043	47050	locking
O	47050	47051	,
O	47052	47055	but
O	47056	47059	not
O	47060	47063	yet
O	47064	47073	unlocking
O	47074	47076	it
O	47076	47077	.

O	47078	47079	A
O	47080	47086	thread
O	47087	47095	invoking
O	47096	47100	lock
O	47101	47105	will
O	47106	47112	return
O	47112	47113	,
O	47114	47126	successfully
O	47127	47136	acquiring
O	47137	47140	the
O	47141	47145	lock
O	47145	47146	,
O	47147	47151	when
O	47152	47155	the
O	47156	47160	lock
O	47161	47163	is
O	47164	47167	not
O	47168	47173	owned
O	47174	47176	by
O	47177	47184	another
O	47185	47191	thread
O	47191	47192	.

O	47193	47196	The
O	47197	47203	method
O	47204	47208	will
O	47209	47215	return
O	47216	47227	immediately
O	47228	47230	if
O	47231	47234	the
O	47235	47242	current
O	47243	47249	thread
O	47250	47257	already
O	47258	47262	owns
O	47263	47266	the
O	47267	47271	lock
O	47271	47272	.

O	47273	47274	#
O	47274	47276	li
O	47277	47280	The
O	47281	47292	constructor
O	47293	47296	for
O	47297	47301	this
O	47302	47307	class
O	47308	47315	accepts
O	47316	47318	an
O	47319	47327	optional
O	47328	47336	fairness
O	47337	47346	parameter
O	47346	47347	.

O	47348	47352	When
O	47353	47356	set
O	47357	47361	true
O	47361	47362	,
O	47363	47368	under
O	47369	47379	contention
O	47379	47380	,
O	47381	47386	locks
O	47387	47392	favor
O	47393	47401	granting
O	47402	47408	access
O	47409	47411	to
O	47412	47415	the
O	47416	47423	longest
O	47423	47424	-
O	47424	47431	waiting
O	47432	47438	thread
O	47439	47440	.

O	47441	47450	Otherwise
O	47451	47455	this
O	47456	47460	lock
O	47461	47465	does
O	47466	47469	not
O	47470	47479	guarantee
O	47480	47483	any
O	47484	47494	particular
O	47495	47501	access
O	47502	47507	order
O	47507	47508	.

B-api_mention	47509	47522	ReentrantLock
O	47523	47526	key
O	47527	47535	features
O	47536	47538	as
O	47539	47542	per
O	47543	47547	this
O	47548	47555	article
O	47556	47557	#
O	47557	47559	li
O	47560	47567	Ability
O	47568	47570	to
O	47571	47575	lock
O	47576	47589	interruptibly
O	47589	47590	.

O	47591	47592	#
O	47592	47594	li
O	47595	47602	Ability
O	47603	47605	to
O	47606	47613	timeout
O	47614	47619	while
O	47620	47627	waiting
O	47628	47631	for
O	47632	47636	lock
O	47636	47637	.

O	47638	47639	#
O	47639	47641	li
O	47642	47647	Power
O	47648	47650	to
O	47651	47657	create
O	47658	47662	fair
O	47663	47667	lock
O	47667	47668	.

O	47669	47670	#
O	47670	47672	li
O	47673	47676	API
O	47677	47679	to
O	47680	47683	get
O	47684	47688	list
O	47689	47691	of
O	47692	47699	waiting
O	47700	47706	thread
O	47707	47710	for
O	47711	47715	lock
O	47715	47716	.

O	47717	47718	#
O	47718	47720	li
O	47721	47732	Flexibility
O	47733	47735	to
O	47736	47739	try
O	47740	47743	for
O	47744	47748	lock
O	47749	47756	without
O	47757	47765	blocking
O	47765	47766	.

O	47767	47770	You
O	47771	47774	can
O	47775	47778	use
B-api_mention	47779	47801	ReentrantReadWriteLock
I-api_mention	47801	47802	.
I-api_mention	47802	47810	ReadLock
O	47810	47811	,
B-api_mention	47812	47834	ReentrantReadWriteLock
I-api_mention	47834	47835	.
I-api_mention	47835	47844	WriteLock
O	47845	47847	to
O	47848	47855	further
O	47856	47863	acquire
O	47864	47871	control
O	47872	47874	on
O	47875	47883	granular
O	47884	47891	locking
O	47892	47894	on
O	47895	47899	read
O	47900	47903	and
O	47904	47909	write
O	47910	47920	operations
O	47920	47921	.

O	47922	47926	Have
O	47927	47928	a
O	47929	47933	look
O	47934	47936	at
O	47937	47941	this
O	47942	47949	article
O	47950	47952	by
O	47953	47961	Benjamen
O	47962	47964	on
O	47965	47970	usage
O	47971	47973	of
O	47974	47983	different
O	47984	47988	type
O	47989	47991	of
B-api_mention	47992	48006	ReentrantLocks

O	48008	48016	Question
O	48016	48017	-
O	48017	48025	11359187
O	48025	48026	,
O	48027	48033	answer
O	48033	48034	-
O	48034	48042	11359320

O	48043	48044	#
O	48044	48046	li
B-api_mention	48047	48051	java
I-api_mention	48051	48052	.
I-api_mention	48052	48056	util
I-api_mention	48056	48057	.
I-api_mention	48057	48064	logging
O	48065	48068	was
O	48069	48079	introduced
O	48080	48082	in
O	48083	48087	Java
O	48088	48089	1
O	48089	48090	.
O	48090	48091	4
O	48091	48092	.

O	48093	48098	There
O	48099	48103	were
O	48104	48108	uses
O	48109	48112	for
O	48113	48120	logging
O	48121	48127	before
O	48128	48132	that
O	48132	48133	,
O	48134	48138	that
O	48138	48139	'
O	48139	48140	s
O	48141	48144	why
O	48145	48149	many
O	48150	48155	other
O	48156	48163	logging
O	48164	48168	APIs
O	48169	48174	exist
O	48174	48175	.

O	48176	48181	Those
O	48182	48186	APIs
O	48187	48192	where
O	48193	48197	used
O	48198	48205	heavily
O	48206	48212	before
O	48213	48217	Java
O	48218	48219	1
O	48219	48220	.
O	48220	48221	4
O	48222	48225	and
O	48226	48230	thus
O	48231	48234	had
O	48235	48236	a
O	48237	48242	great
O	48243	48254	marketshare
O	48255	48259	that
O	48260	48264	didn
O	48264	48265	'
O	48265	48266	t
O	48267	48271	just
O	48272	48276	drop
O	48277	48279	to
O	48280	48281	0
O	48282	48286	when
O	48287	48288	1
O	48288	48289	.
O	48289	48290	4
O	48291	48294	was
O	48295	48302	release
O	48302	48303	.

O	48304	48305	#
O	48305	48307	li
B-api_mention	48308	48311	JUL
O	48312	48316	didn
O	48316	48317	'
O	48317	48318	t
O	48319	48324	start
O	48325	48328	out
O	48329	48332	all
O	48333	48337	that
O	48338	48343	great
O	48343	48344	,
O	48345	48349	many
O	48350	48352	of
O	48353	48356	the
O	48357	48363	things
O	48364	48367	you
O	48368	48377	mentioned
O	48378	48383	where
O	48384	48385	a
O	48386	48389	lot
O	48390	48395	worse
O	48396	48398	in
O	48399	48400	1
O	48400	48401	.
O	48401	48402	4
O	48403	48406	and
O	48407	48411	only
O	48412	48415	got
O	48416	48422	better
O	48423	48425	in
O	48426	48427	1
O	48427	48428	.
O	48428	48429	5
O	48430	48431	(
O	48431	48434	and
O	48435	48436	I
O	48437	48442	guess
O	48443	48445	in
O	48446	48447	6
O	48448	48450	as
O	48451	48455	well
O	48455	48456	,
O	48457	48460	but
O	48461	48462	I
O	48462	48463	'
O	48463	48464	m
O	48465	48468	not
O	48469	48472	too
O	48473	48477	sure
O	48477	48478	)
O	48478	48479	.

O	48480	48481	#
O	48481	48483	li
B-api_mention	48484	48487	JUL
O	48488	48491	isn
O	48491	48492	'
O	48492	48493	t
O	48494	48498	well
O	48499	48505	suited
O	48506	48509	for
O	48510	48518	multiple
O	48519	48531	applications
O	48532	48536	with
O	48537	48546	different
O	48547	48561	configurations
O	48562	48564	in
O	48565	48568	the
O	48569	48573	same
O	48574	48577	JVM
O	48578	48579	(
O	48579	48584	think
O	48585	48593	multiple
O	48594	48597	web
O	48598	48610	applications
O	48611	48615	that
O	48616	48622	should
O	48623	48626	not
O	48627	48635	interact
O	48635	48636	)
O	48636	48637	.

O	48638	48644	Tomcat
O	48645	48650	needs
O	48651	48653	to
O	48654	48658	jump
O	48659	48666	through
O	48667	48671	some
O	48672	48677	hoops
O	48678	48680	to
O	48681	48684	get
O	48685	48689	that
O	48690	48697	working
O	48698	48699	(
O	48699	48710	effectively
O	48711	48713	re
O	48713	48714	-
O	48714	48726	implementing
B-api_mention	48727	48730	JUL
O	48731	48733	if
O	48734	48735	I
O	48736	48746	understood
O	48747	48751	that
O	48752	48761	correctly
O	48761	48762	)
O	48762	48763	.

O	48764	48765	#
O	48765	48767	li
O	48768	48771	You
O	48772	48775	can
O	48775	48776	'
O	48776	48777	t
O	48778	48784	always
O	48785	48794	influence
O	48795	48799	what
O	48800	48807	logging
O	48808	48817	framework
O	48818	48822	your
O	48823	48832	libraries
O	48833	48836	use
O	48836	48837	.

O	48838	48847	Therefore
O	48848	48853	using
B-api_mention	48854	48859	SLF4J
O	48860	48861	(
O	48861	48866	which
O	48867	48869	is
O	48870	48878	actually
O	48879	48883	just
O	48884	48885	a
O	48886	48890	very
O	48891	48895	thin
O	48896	48899	API
O	48900	48905	layer
O	48906	48911	above
O	48912	48917	other
O	48918	48927	libraries
O	48927	48928	)
O	48929	48934	helps
O	48935	48942	keeping
O	48943	48944	a
O	48945	48953	somewhat
O	48954	48964	consistent
O	48965	48972	picture
O	48973	48975	of
O	48976	48979	the
O	48980	48986	entire
O	48987	48994	logging
O	48995	49000	world
O	49001	49002	(
O	49002	49004	so
O	49005	49008	you
O	49009	49012	can
O	49013	49019	decide
O	49020	49023	the
O	49024	49034	underlying
O	49035	49042	logging
O	49043	49052	framework
O	49053	49058	while
O	49059	49064	still
O	49065	49071	having
O	49072	49079	library
O	49080	49087	logging
O	49088	49090	in
O	49091	49094	the
O	49095	49099	same
O	49100	49106	system
O	49106	49107	)
O	49107	49108	.

O	49109	49110	#
O	49110	49112	li
O	49113	49122	Libraries
O	49123	49126	can
O	49126	49127	'
O	49127	49128	t
O	49129	49135	easily
O	49136	49142	change
O	49142	49143	.

O	49144	49146	If
O	49147	49148	a
O	49149	49157	previous
O	49158	49165	version
O	49166	49168	of
O	49169	49170	a
O	49171	49178	library
O	49179	49183	used
O	49184	49186	to
O	49187	49190	use
O	49191	49198	logging
O	49198	49199	-
O	49199	49206	library
O	49206	49207	-
O	49207	49208	X
O	49209	49211	it
O	49212	49215	can
O	49215	49216	'
O	49216	49217	t
O	49218	49224	easily
O	49225	49231	switch
O	49232	49234	to
O	49235	49242	logging
O	49242	49243	-
O	49243	49250	library
O	49250	49251	-
O	49251	49252	Y
O	49253	49254	(
O	49254	49257	for
O	49258	49265	example
B-api_mention	49266	49269	JUL
O	49269	49270	)
O	49270	49271	,
O	49272	49276	even
O	49277	49279	if
O	49280	49283	the
O	49284	49290	latter
O	49291	49293	is
O	49294	49301	clearly
O	49302	49311	superious
O	49311	49312	:
O	49313	49316	any
O	49317	49321	user
O	49322	49324	of
O	49325	49329	that
O	49330	49337	library
O	49338	49343	would
O	49344	49348	need
O	49349	49351	to
O	49352	49357	learn
O	49358	49361	the
O	49362	49365	new
O	49366	49373	logging
O	49374	49383	framework
O	49384	49387	and
O	49388	49389	(
O	49389	49391	at
O	49392	49397	least
O	49397	49398	)
O	49399	49410	reconfigure
O	49411	49416	their
O	49417	49424	logging
O	49424	49425	.

O	49426	49430	That
O	49430	49431	'
O	49431	49432	s
O	49433	49434	a
O	49435	49438	big
O	49439	49441	no
O	49441	49442	-
O	49442	49444	no
O	49444	49445	,
O	49446	49456	especially
O	49457	49461	when
O	49462	49464	it
O	49465	49471	brings
O	49472	49474	no
O	49475	49483	apparent
O	49484	49488	gain
O	49489	49491	to
O	49492	49496	most
O	49497	49503	people
O	49503	49504	.

O	49505	49511	Having
O	49512	49516	said
O	49517	49520	all
O	49521	49525	that
O	49526	49527	I
O	49528	49533	think
B-api_mention	49534	49537	JUL
O	49538	49540	is
O	49541	49543	at
O	49544	49549	least
O	49550	49551	a
O	49552	49557	valid
O	49558	49569	alternative
O	49570	49572	to
O	49573	49578	other
O	49579	49586	logging
O	49587	49597	frameworks
O	49598	49603	these
O	49604	49608	days
O	49608	49609	.

O	49611	49619	Question
O	49619	49620	-
O	49620	49628	12468764
O	49628	49629	,
O	49630	49636	answer
O	49636	49637	-
O	49637	49645	13368831

O	49646	49652	Actual
O	49653	49659	Answer
O	49659	49660	:
O	49661	49664	The
O	49665	49672	default
O	49673	49685	deserializer
O	49686	49689	for
O	49690	49695	enums
O	49696	49700	uses
B-api_mention	49701	49702	.
I-api_mention	49702	49706	name
I-api_mention	49706	49707	(
I-api_mention	49707	49711	args
I-api_mention	49711	49712	)
O	49713	49715	to
O	49716	49727	deserialize
O	49727	49728	,
O	49729	49731	so
O	49732	49734	it
O	49734	49735	'
O	49735	49736	s
O	49737	49740	not
O	49741	49746	using
O	49747	49750	the
O	49751	49752	@
O	49752	49761	JsonValue
O	49762	49763	.

O	49764	49766	So
O	49767	49769	as
O	49770	49771	@
O	49771	49784	OldCurmudgeon
O	49785	49792	pointed
O	49793	49796	out
O	49796	49797	,
O	49798	49801	you
O	49801	49802	'
O	49802	49803	d
O	49804	49808	need
O	49809	49811	to
O	49812	49816	pass
O	49817	49819	in
O	49820	49821	{
O	49821	49834	StringLiteral
O	49834	49835	:
O	49836	49849	StringLiteral
O	49849	49850	}
O	49851	49853	to
O	49854	49859	match
O	49860	49863	the
B-api_mention	49864	49865	.
I-api_mention	49865	49869	name
I-api_mention	49869	49870	(
I-api_mention	49870	49874	args
I-api_mention	49874	49875	)
O	49876	49881	value
O	49881	49882	.

O	49883	49885	An
O	49886	49891	other
O	49892	49898	option
O	49899	49900	(
O	49900	49908	assuming
O	49909	49912	you
O	49913	49917	want
O	49918	49921	the
O	49922	49927	write
O	49928	49931	and
O	49932	49936	read
O	49937	49941	json
O	49942	49948	values
O	49949	49951	to
O	49952	49954	be
O	49955	49958	the
O	49959	49963	same
O	49963	49964	)
O	49964	49965	.
O	49965	49966	.
O	49966	49967	.

O	49968	49972	More
O	49973	49977	Info
O	49977	49978	:
O	49979	49984	There
O	49985	49987	is
O	49988	49989	(
O	49989	49992	yet
O	49992	49993	)
O	49994	50001	another
O	50002	50005	way
O	50006	50008	to
O	50009	50015	manage
O	50016	50019	the
O	50020	50033	serialization
O	50034	50037	and
O	50038	50053	deserialization
O	50054	50061	process
O	50062	50066	with
O	50067	50074	Jackson
O	50074	50075	.

O	50076	50079	You
O	50080	50083	can
O	50084	50091	specify
O	50092	50097	these
O	50098	50109	annotations
O	50110	50112	to
O	50113	50116	use
O	50117	50121	your
O	50122	50125	own
O	50126	50132	custom
O	50133	50143	serializer
O	50144	50147	and
O	50148	50160	deserializer
O	50160	50161	:
O	50162	50163	#
O	50163	50166	pre
O	50167	50171	Then
O	50172	50175	you
O	50176	50180	have
O	50181	50183	to
O	50184	50189	write
O	50190	50202	MySerializer
O	50203	50206	and
O	50207	50221	MyDeserializer
O	50222	50227	which
O	50228	50232	look
O	50233	50237	like
O	50238	50242	this
O	50242	50243	:
O	50244	50256	MySerializer
O	50257	50258	#
O	50258	50261	pre
O	50262	50276	MyDeserializer
O	50277	50278	#
O	50278	50281	pre
O	50282	50286	Last
O	50287	50293	little
O	50294	50297	bit
O	50297	50298	,
O	50299	50311	particularly
O	50312	50315	for
O	50316	50321	doing
O	50322	50326	this
O	50327	50329	to
O	50330	50332	an
O	50333	50337	enum
O	50338	50346	JsonEnum
O	50347	50351	that
O	50352	50362	serializes
O	50363	50367	with
O	50368	50371	the
O	50372	50378	method
O	50379	50391	getYourValue
O	50391	50392	(
O	50392	50396	args
O	50396	50397	)
O	50398	50399	,
O	50400	50404	your
O	50405	50415	serializer
O	50416	50419	and
O	50420	50432	deserializer
O	50433	50438	might
O	50439	50443	look
O	50444	50448	like
O	50449	50453	this
O	50453	50454	:
O	50455	50456	#
O	50456	50459	pre

O	50461	50469	Question
O	50469	50470	-
O	50470	50478	12468764
O	50478	50479	,
O	50480	50486	answer
O	50486	50487	-
O	50487	50495	24537575

O	50496	50497	I
O	50497	50498	'
O	50498	50500	ve
O	50501	50506	found
O	50507	50508	a
O	50509	50513	very
O	50514	50518	nice
O	50519	50522	and
O	50523	50530	concise
O	50531	50539	solution
O	50539	50540	,
O	50541	50551	especially
O	50552	50558	useful
O	50559	50563	when
O	50564	50567	you
O	50568	50574	cannot
O	50575	50581	modify
O	50582	50586	enum
O	50587	50594	classes
O	50595	50597	as
O	50598	50600	it
O	50601	50604	was
O	50605	50607	in
O	50608	50610	my
O	50611	50615	case
O	50615	50616	.

O	50617	50621	Then
O	50622	50625	you
O	50626	50632	should
O	50633	50640	provide
O	50641	50642	a
O	50643	50649	custom
B-api_mention	50650	50662	ObjectMapper
O	50663	50667	with
O	50668	50669	a
O	50670	50677	certain
O	50678	50685	feature
O	50686	50693	enabled
O	50693	50694	.

O	50695	50700	Those
O	50701	50709	features
O	50710	50713	are
O	50714	50723	available
O	50724	50729	since
O	50730	50737	Jackson
O	50738	50739	1
O	50739	50740	.
O	50740	50741	6
O	50741	50742	.

O	50743	50745	So
O	50746	50749	you
O	50750	50754	only
O	50755	50759	need
O	50760	50762	to
O	50763	50768	write
B-api_mention	50769	50777	toString
I-api_mention	50777	50778	(
I-api_mention	50778	50782	args
I-api_mention	50782	50783	)
O	50784	50790	method
O	50791	50793	in
O	50794	50798	your
O	50799	50803	enum
O	50803	50804	.

O	50805	50806	#
O	50806	50809	pre
O	50810	50815	There
O	50816	50819	are
O	50820	50824	more
O	50825	50829	enum
O	50829	50830	-
O	50830	50837	related
O	50838	50846	features
O	50847	50856	available
O	50856	50857	,
O	50858	50861	see
O	50862	50866	here
O	50866	50867	:
O	50868	50869	#
O	50869	50870	a
O	50871	50872	#
O	50872	50873	a

O	50875	50883	Question
O	50883	50884	-
O	50884	50892	13659217
O	50892	50893	,
O	50894	50900	answer
O	50900	50901	-
O	50901	50909	13659231

O	50910	50913	You
O	50914	50917	can
O	50917	50918	'
O	50918	50919	t
O	50920	50923	see
O	50924	50928	this
O	50929	50935	method
O	50936	50938	in
O	50939	50946	javadoc
O	50947	50954	because
O	50955	50957	it
O	50957	50958	'
O	50958	50959	s
O	50960	50965	added
O	50966	50968	by
O	50969	50972	the
O	50973	50981	compiler
O	50981	50982	.

O	50983	50993	Documented
O	50994	50996	in
O	50997	51002	three
O	51003	51009	places
O	51010	51011	:
O	51012	51013	#
O	51013	51015	li
O	51016	51020	Enum
O	51021	51026	Types
O	51027	51028	,
O	51029	51032	The
O	51033	51037	Java
O	51038	51047	Tutorials
O	51048	51049	#
O	51049	51059	blockquote
O	51060	51061	#
O	51061	51063	li
B-api_mention	51064	51068	Enum
I-api_mention	51068	51069	.
I-api_mention	51069	51076	valueOf
O	51077	51082	class
O	51083	51084	(
O	51084	51087	The
O	51088	51095	special
O	51096	51104	implicit
B-api_mention	51105	51111	values
O	51112	51118	method
O	51119	51121	is
O	51122	51131	mentioned
O	51132	51134	in
O	51135	51146	description
O	51147	51149	of
B-api_mention	51150	51157	valueOf
O	51158	51164	method
O	51164	51165	)
O	51166	51167	#
O	51167	51177	blockquote
O	51178	51179	#
O	51179	51181	li
O	51182	51186	Enum
O	51187	51192	Types
O	51192	51193	,
O	51194	51201	Section
O	51202	51203	8
O	51203	51204	.
O	51204	51205	9
O	51206	51207	,
O	51208	51212	Java
O	51213	51221	Language
O	51222	51235	Specification
O	51236	51239	The
B-api_mention	51240	51246	values
O	51247	51255	function
O	51256	51262	simply
O	51263	51267	list
O	51268	51271	all
O	51272	51278	values
O	51279	51281	of
O	51282	51285	the
O	51286	51297	enumeration
O	51297	51298	.

O	51300	51308	Question
O	51308	51309	-
O	51309	51317	12575990
O	51317	51318	,
O	51319	51325	answer
O	51325	51326	-
O	51326	51334	12576219

O	51335	51336	A
O	51337	51341	Java
B-api_mention	51342	51346	Date
O	51347	51349	is
O	51350	51351	a
O	51352	51361	container
O	51362	51365	for
O	51366	51369	the
O	51370	51376	number
O	51377	51379	of
O	51380	51392	milliseconds
O	51393	51398	since
O	51399	51406	January
O	51407	51408	1
O	51408	51409	,
O	51410	51414	1970
O	51414	51415	,
O	51416	51418	00
O	51418	51419	:
O	51419	51421	00
O	51421	51422	:
O	51422	51424	00
O	51425	51428	GMT
O	51428	51429	.

O	51430	51434	When
O	51435	51438	you
O	51439	51442	use
O	51443	51452	something
O	51453	51457	like
B-api_mention	51458	51464	System
I-api_mention	51464	51465	.
I-api_mention	51465	51468	out
I-api_mention	51468	51469	.
I-api_mention	51469	51476	println
I-api_mention	51476	51477	(
I-api_mention	51477	51481	args
I-api_mention	51481	51482	)
O	51483	51484	,
O	51485	51489	Java
O	51490	51494	uses
B-api_mention	51495	51499	Date
I-api_mention	51499	51500	.
I-api_mention	51500	51508	toString
I-api_mention	51508	51509	(
I-api_mention	51509	51513	args
I-api_mention	51513	51514	)
O	51515	51517	to
O	51518	51523	print
O	51524	51527	the
O	51528	51536	contents
O	51536	51537	.

O	51538	51541	The
O	51542	51546	only
O	51547	51550	way
O	51551	51553	to
O	51554	51560	change
O	51561	51563	it
O	51564	51566	is
O	51567	51569	to
O	51570	51578	override
O	51579	51583	Date
O	51584	51587	and
O	51588	51595	provide
O	51596	51600	your
O	51601	51604	own
O	51605	51619	implementation
O	51620	51622	of
B-api_mention	51623	51627	Date
I-api_mention	51627	51628	.
I-api_mention	51628	51636	toString
I-api_mention	51636	51637	(
I-api_mention	51637	51641	args
I-api_mention	51641	51642	)
O	51643	51644	.

O	51645	51648	Now
O	51649	51655	before
O	51656	51659	you
O	51660	51664	fire
O	51665	51667	up
O	51668	51672	your
O	51673	51676	IDE
O	51677	51680	and
O	51681	51684	try
O	51685	51689	this
O	51689	51690	,
O	51691	51692	I
O	51693	51699	wouldn
O	51699	51700	'
O	51700	51701	t
O	51701	51702	;
O	51703	51705	it
O	51706	51710	will
O	51711	51715	only
O	51716	51726	complicate
O	51727	51734	matters
O	51734	51735	.

O	51736	51739	You
O	51740	51743	are
O	51744	51750	better
O	51751	51754	off
O	51755	51765	formatting
O	51766	51769	the
O	51770	51774	date
O	51775	51777	to
O	51778	51781	the
O	51782	51788	format
O	51789	51792	you
O	51793	51797	want
O	51798	51800	to
O	51801	51804	use
O	51805	51806	(
O	51806	51808	or
O	51809	51816	display
O	51816	51817	)
O	51817	51818	.

O	51819	51823	What
O	51824	51827	you
O	51828	51831	can
O	51832	51834	do
O	51834	51835	,
O	51836	51838	is
O	51839	51845	format
O	51846	51849	the
O	51850	51854	date
O	51854	51855	.

O	51856	51857	#
O	51857	51860	pre
O	51861	51866	These
O	51867	51870	are
O	51871	51879	actually
O	51880	51883	the
O	51884	51888	same
O	51889	51893	date
O	51893	51894	,
O	51895	51906	represented
O	51907	51918	differently
O	51918	51919	.
