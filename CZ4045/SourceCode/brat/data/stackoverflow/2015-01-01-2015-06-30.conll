O	0	8	Question
O	8	9	-
O	9	17	30581531

O	18	22	What
O	23	25	is
O	26	29	the
O	30	37	maximum
O	38	44	number
O	45	47	of
O	48	58	parameters
O	59	63	that
O	64	65	a
O	66	72	method
O	73	75	in
O	76	80	Java
O	81	84	can
O	85	89	have
O	90	93	and
O	94	97	why
O	97	98	?

O	99	100	I
O	101	103	am
O	104	109	using
O	110	114	Java
O	115	116	1
O	116	117	.
O	117	118	8
O	119	121	on
O	122	123	a
O	124	126	64
O	126	127	-
O	127	130	bit
O	131	138	Windows
O	139	145	system
O	145	146	.

O	147	150	All
O	151	154	the
O	155	162	answers
O	163	165	on
O	166	179	StackOverflow
O	180	185	about
O	186	190	this
O	191	194	say
O	195	199	that
O	200	203	the
O	204	213	technical
O	214	219	limit
O	220	222	is
O	223	226	255
O	227	237	parameters
O	238	245	without
O	246	256	specifying
O	257	260	why
O	260	261	.

O	262	264	To
O	265	267	be
O	268	275	precise
O	275	276	,
O	277	280	255
O	281	284	for
O	285	291	static
O	292	295	and
O	296	299	254
O	300	303	for
O	304	307	non
O	307	308	-
O	308	314	static
O	315	316	(
O	317	321	this
O	322	326	will
O	327	329	be
O	330	333	the
O	334	339	255th
O	340	342	in
O	343	347	this
O	348	352	case
O	352	353	)
O	354	361	methods
O	361	362	.

O	363	364	I
O	365	372	thought
O	373	377	this
O	378	383	could
O	384	386	be
O	387	396	specified
O	397	399	in
O	400	404	some
O	405	409	sort
O	410	412	of
O	413	426	specification
O	427	430	and
O	431	435	that
O	436	440	this
O	441	444	was
O	445	451	simply
O	452	453	a
O	454	464	statically
O	465	472	defined
O	473	480	maximum
O	481	487	number
O	488	490	of
O	491	501	parameters
O	502	509	allowed
O	509	510	.

O	511	514	But
O	515	519	this
O	520	523	was
O	524	528	only
O	529	534	valid
O	535	538	for
O	539	542	int
O	543	546	and
O	547	550	all
O	551	552	4
O	552	553	-
O	553	558	bytes
O	559	564	types
O	565	566	.

O	567	568	I
O	569	572	did
O	573	577	some
O	578	583	tests
O	584	588	with
O	589	593	long
O	594	604	parameters
O	604	605	,
O	606	609	and
O	610	611	I
O	612	615	was
O	616	620	only
O	621	625	able
O	626	628	to
O	629	636	declare
O	637	640	127
O	641	651	parameters
O	652	654	in
O	655	659	that
O	660	664	case
O	664	665	.

O	666	670	With
B-api_mention	671	677	String
O	678	688	parameters
O	688	689	,
O	690	693	the
O	694	701	allowed
O	702	708	number
O	709	710	i
O	711	718	deduced
O	719	723	from
O	724	731	testing
O	732	734	is
O	735	738	255
O	739	740	(
O	740	742	it
O	743	746	may
O	747	749	be
O	750	757	because
O	758	761	the
O	762	771	reference
O	772	776	size
O	777	779	is
O	780	781	4
O	782	787	bytes
O	788	790	in
O	791	795	Java
O	795	796	?
O	796	797	)
O	797	798	.

O	799	802	But
O	803	808	since
O	809	810	I
O	811	813	am
O	814	819	using
O	820	821	a
O	822	824	64
O	824	825	-
O	825	828	bit
O	829	835	system
O	835	836	,
O	837	847	references
O	848	852	size
O	853	859	should
O	860	862	be
O	863	864	8
O	865	870	bytes
O	871	875	wide
O	876	879	and
O	880	882	so
O	883	887	with
B-api_mention	888	894	String
O	895	905	parameters
O	906	909	the
O	910	917	maximum
O	918	925	allowed
O	926	932	number
O	933	939	should
O	940	942	be
O	943	946	127
O	946	947	,
O	948	955	similar
O	956	958	to
O	959	963	long
O	964	969	types
O	969	970	.

O	971	974	How
O	975	979	does
O	980	984	this
O	985	990	limit
O	991	993	is
O	994	1001	exactly
O	1002	1009	applied
O	1009	1010	?

O	1011	1015	Does
O	1016	1019	the
O	1020	1025	limit
O	1026	1030	have
O	1031	1039	anything
O	1040	1042	to
O	1043	1045	do
O	1046	1050	with
O	1051	1054	the
O	1055	1060	stack
O	1061	1065	size
O	1066	1068	of
O	1069	1072	the
O	1073	1079	method
O	1079	1080	?

O	1081	1085	Note
O	1085	1086	:
O	1087	1088	I
O	1089	1091	am
O	1092	1095	not
O	1096	1102	really
O	1103	1108	going
O	1109	1111	to
O	1112	1115	use
O	1116	1121	these
O	1122	1126	many
O	1127	1137	parameters
O	1138	1140	in
O	1141	1144	any
O	1145	1151	method
O	1151	1152	,
O	1153	1156	but
O	1157	1161	this
O	1162	1170	question
O	1171	1173	is
O	1174	1178	only
O	1179	1181	to
O	1182	1189	clarify
O	1190	1193	the
O	1194	1199	exact
O	1200	1208	behavior
O	1208	1209	.

O	1211	1219	Question
O	1219	1220	-
O	1220	1228	29140402

O	1229	1230	I
O	1231	1235	have
O	1236	1237	a
O	1238	1243	class
O	1244	1251	defined
O	1252	1254	as
O	1255	1262	follows
O	1262	1263	:
O	1264	1265	#
O	1265	1268	pre
O	1269	1270	I
O	1271	1276	tried
O	1277	1279	to
O	1280	1285	print
O	1286	1288	an
O	1289	1297	instance
O	1298	1300	of
O	1301	1303	my
O	1304	1309	class
O	1309	1310	:
B-api_mention	1311	1317	System
I-api_mention	1317	1318	.
I-api_mention	1318	1321	out
I-api_mention	1321	1322	.
I-api_mention	1322	1329	println
I-api_mention	1329	1330	(
I-api_mention	1330	1334	args
I-api_mention	1334	1335	)
O	1335	1336	;
O	1337	1340	but
O	1341	1342	I
O	1343	1346	got
O	1347	1350	the
O	1351	1360	following
O	1361	1367	output
O	1367	1368	:
O	1369	1372	com
O	1372	1373	.
O	1373	1376	foo
O	1376	1377	.
O	1377	1383	Person
O	1383	1384	@
O	1384	1392	2f92e0f4
O	1393	1394	.

O	1395	1396	A
O	1397	1404	similar
O	1405	1410	thing
O	1411	1419	happened
O	1420	1424	when
O	1425	1426	I
O	1427	1432	tried
O	1433	1435	to
O	1436	1441	print
O	1442	1444	an
O	1445	1450	array
O	1451	1453	of
O	1454	1460	Person
O	1461	1468	objects
O	1468	1469	:
O	1470	1471	#
O	1471	1474	pre
O	1475	1476	I
O	1477	1480	got
O	1481	1484	the
O	1485	1491	output
O	1491	1492	:
O	1493	1494	[
O	1494	1498	Lcom
O	1498	1499	.
O	1499	1502	foo
O	1502	1503	.
O	1503	1509	Person
O	1509	1510	;
O	1510	1511	@
O	1511	1519	28a418fc
O	1520	1524	What
O	1525	1529	does
O	1530	1534	this
O	1535	1541	output
O	1542	1546	mean
O	1546	1547	?

O	1548	1551	How
O	1552	1554	do
O	1555	1556	I
O	1557	1563	change
O	1564	1568	this
O	1569	1575	output
O	1576	1578	so
O	1579	1581	it
O	1582	1590	contains
O	1591	1594	the
O	1595	1599	name
O	1600	1602	of
O	1603	1605	my
O	1606	1612	person
O	1612	1613	?

O	1614	1617	And
O	1618	1621	how
O	1622	1624	do
O	1625	1626	I
O	1627	1632	print
O	1633	1644	collections
O	1645	1647	of
O	1648	1650	my
O	1651	1658	objects
O	1658	1659	?

O	1660	1664	Note
O	1665	1666	:
O	1667	1671	this
O	1672	1674	is
O	1675	1683	intended
O	1684	1686	as
O	1687	1688	a
O	1689	1698	canonical
O	1699	1700	Q
O	1700	1701	&
O	1701	1702	A
O	1703	1708	about
O	1709	1713	this
O	1714	1721	subject
O	1721	1722	.

O	1724	1732	Question
O	1732	1733	-
O	1733	1741	28671903

O	1742	1743	I
O	1744	1748	have
O	1749	1750	a
O	1751	1754	set
O	1755	1756	–
O	1757	1758	a
B-api_mention	1759	1766	HashSet
O	1767	1768	I
O	1769	1773	want
O	1774	1776	to
O	1777	1783	remove
O	1784	1788	some
O	1789	1794	items
O	1795	1799	from
O	1800	1802	it
O	1802	1803	…
O	1804	1808	none
O	1809	1811	of
O	1812	1815	the
O	1816	1821	items
O	1822	1824	in
O	1825	1828	the
O	1829	1830	"
O	1830	1838	removals
O	1838	1839	"
O	1840	1850	collection
O	1851	1855	will
O	1856	1858	be
O	1859	1861	in
O	1862	1865	the
O	1866	1874	original
O	1875	1878	set
O	1878	1879	.

O	1880	1881	I
O	1882	1889	specify
O	1890	1893	the
O	1894	1898	size
O	1899	1901	of
O	1902	1905	the
O	1906	1907	"
O	1907	1913	source
O	1913	1914	"
O	1915	1918	set
O	1919	1922	and
O	1923	1926	the
O	1927	1931	size
O	1932	1934	of
O	1935	1938	the
O	1939	1940	"
O	1940	1948	removals
O	1948	1949	"
O	1950	1960	collection
O	1961	1963	on
O	1964	1967	the
O	1968	1975	command
O	1976	1980	line
O	1980	1981	,
O	1982	1985	and
O	1986	1991	build
O	1992	1996	both
O	1997	1999	of
O	2000	2004	them
O	2004	2005	.

O	2006	2009	The
O	2010	2016	source
O	2017	2020	set
O	2021	2029	contains
O	2030	2034	only
O	2035	2038	non
O	2038	2039	-
O	2039	2047	negative
O	2048	2056	integers
O	2056	2057	;
O	2058	2061	the
O	2062	2070	removals
O	2071	2074	set
O	2075	2083	contains
O	2084	2088	only
O	2089	2097	negative
O	2098	2106	integers
O	2106	2107	.

O	2108	2109	I
O	2110	2117	measure
O	2118	2121	how
O	2122	2126	long
O	2127	2129	it
O	2130	2135	takes
O	2136	2138	to
O	2139	2145	remove
O	2146	2149	all
O	2150	2153	the
O	2154	2162	elements
O	2163	2168	using
B-api_mention	2169	2175	System
I-api_mention	2175	2176	.
I-api_mention	2176	2193	currentTimeMillis
I-api_mention	2193	2194	(
I-api_mention	2194	2195	)
O	2195	2196	,
O	2197	2202	which
O	2203	2206	isn
O	2206	2207	’
O	2207	2208	t
O	2209	2212	the
O	2213	2218	world
O	2219	2223	most
O	2224	2232	accurate
O	2233	2242	stopwatch
O	2243	2246	but
O	2247	2249	is
O	2250	2254	more
O	2255	2259	than
O	2260	2268	adequate
O	2269	2271	in
O	2272	2276	this
O	2277	2281	case
O	2281	2282	,
O	2283	2285	as
O	2286	2289	you
O	2289	2290	’
O	2290	2292	ll
O	2293	2296	see
O	2296	2297	.

O	2298	2302	Here
O	2302	2303	’
O	2303	2304	s
O	2305	2308	the
O	2309	2313	code
O	2313	2314	:
O	2315	2316	#
O	2316	2319	pre
O	2320	2323	Let
O	2323	2324	’
O	2324	2325	s
O	2326	2331	start
O	2332	2335	off
O	2336	2338	by
O	2339	2345	giving
O	2346	2348	it
O	2349	2351	an
O	2352	2356	easy
O	2357	2360	job
O	2360	2361	:
O	2362	2363	a
O	2364	2370	source
O	2371	2374	set
O	2375	2377	of
O	2378	2381	100
O	2382	2387	items
O	2387	2388	,
O	2389	2392	and
O	2393	2396	100
O	2397	2399	to
O	2400	2406	remove
O	2406	2407	:
O	2408	2409	#
O	2409	2412	pre
O	2413	2417	Okay
O	2417	2418	,
O	2419	2423	That
O	2423	2424	'
O	2424	2425	s
O	2426	2430	fast
O	2431	2433	as
O	2434	2435	I
O	2436	2444	expected
O	2444	2445	.

O	2446	2450	Next
O	2451	2452	i
O	2453	2458	tried
O	2459	2465	source
O	2466	2468	of
O	2469	2472	one
O	2473	2480	million
O	2481	2486	items
O	2487	2490	and
O	2491	2494	300
O	2494	2495	,
O	2495	2498	000
O	2499	2504	items
O	2505	2507	to
O	2508	2514	remove
O	2514	2515	?

O	2516	2517	#
O	2517	2520	pre
O	2521	2525	That
O	2526	2531	still
O	2532	2537	seems
O	2538	2544	pretty
O	2545	2551	speedy
O	2551	2552	.

O	2553	2556	Now
O	2557	2561	make
O	2562	2564	it
O	2565	2566	a
O	2567	2570	bit
O	2571	2577	easier
O	2578	2579	–
O	2580	2583	300
O	2583	2584	,
O	2584	2587	000
O	2588	2594	source
O	2595	2600	items
O	2601	2604	and
O	2605	2608	300
O	2608	2609	,
O	2609	2612	000
O	2613	2621	removals
O	2621	2622	:
O	2623	2624	#
O	2624	2627	pre
O	2628	2634	Nearly
O	2635	2640	three
O	2641	2648	minutes
O	2648	2649	?

O	2650	2656	Really
O	2657	2665	confused
O	2666	2667	!
O	2667	2668	!

O	2669	2672	can
O	2673	2677	some
O	2678	2681	one
O	2682	2689	explain
O	2690	2693	why
O	2694	2698	this
O	2699	2701	is
O	2702	2711	happening
O	2711	2712	.

O	2714	2722	Question
O	2722	2723	-
O	2723	2731	27908213

O	2732	2735	Are
O	2736	2740	enum
O	2741	2746	names
O	2747	2755	interned
O	2756	2758	in
O	2759	2763	Java
O	2763	2764	?

O	2765	2766	I
O	2766	2767	.
O	2767	2768	e
O	2768	2769	.

O	2770	2772	is
O	2773	2775	it
O	2776	2786	guaranteed
O	2787	2791	that
O	2792	2797	enum1
B-api_mention	2797	2798	.
I-api_mention	2798	2802	name
I-api_mention	2802	2803	(
I-api_mention	2803	2807	args
I-api_mention	2807	2808	)
O	2809	2810	=
O	2810	2811	=
O	2812	2817	enum2
B-api_mention	2817	2818	.
I-api_mention	2818	2822	name
I-api_mention	2822	2823	(
I-api_mention	2823	2827	args
I-api_mention	2827	2828	)
O	2829	2831	in
O	2832	2836	case
O	2837	2839	of
O	2840	2843	the
O	2844	2848	same
O	2849	2853	name
O	2853	2854	?

O	2855	2858	And
O	2859	2861	is
O	2862	2864	it
O	2865	2869	safe
O	2870	2872	to
O	2873	2880	compare
O	2881	2885	enum
B-api_mention	2885	2886	.
I-api_mention	2886	2890	name
I-api_mention	2890	2891	(
I-api_mention	2891	2895	args
I-api_mention	2895	2896	)
O	2897	2899	to
O	2900	2901	a
B-api_mention	2902	2908	String
O	2909	2913	that
O	2914	2916	is
O	2917	2927	guaranteed
O	2928	2930	to
O	2931	2933	be
O	2934	2942	interned
O	2942	2943	.

O	2945	2953	Question
O	2953	2954	-
O	2954	2962	27845223

O	2963	2964	I
O	2964	2965	'
O	2965	2966	m
O	2967	2974	looking
O	2975	2977	at
O	2978	2979	a
O	2980	2985	piece
O	2986	2988	of
O	2989	2993	Java
O	2994	2998	code
O	2999	3004	right
O	3005	3008	now
O	3008	3009	,
O	3010	3013	and
O	3014	3016	it
O	3017	3022	takes
O	3023	3024	a
O	3025	3029	path
O	3030	3032	as
O	3033	3034	a
B-api_mention	3035	3041	String
O	3042	3045	and
O	3046	3050	gets
O	3051	3054	its
O	3055	3058	URL
O	3059	3064	using
B-api_mention	3065	3068	URL
O	3069	3077	resource
O	3078	3079	=
B-api_mention	3080	3091	ClassLoader
I-api_mention	3091	3092	.
I-api_mention	3092	3112	getSystemClassLoader
I-api_mention	3112	3113	(
I-api_mention	3113	3117	args
I-api_mention	3117	3118	)
I-api_mention	3118	3119	.
I-api_mention	3119	3130	getResource
I-api_mention	3130	3131	(
I-api_mention	3131	3135	args
I-api_mention	3135	3136	)
O	3136	3137	;
O	3138	3139	,
O	3140	3144	then
O	3145	3150	calls
B-api_mention	3151	3157	String
O	3158	3162	path
O	3163	3164	=
O	3165	3173	resource
B-api_mention	3173	3174	.
I-api_mention	3174	3181	getPath
I-api_mention	3181	3182	(
I-api_mention	3182	3186	args
I-api_mention	3186	3187	)
O	3188	3191	and
O	3192	3199	finally
O	3200	3208	executes
O	3209	3212	new
B-api_mention	3213	3217	File
I-api_mention	3217	3218	(
I-api_mention	3218	3222	args
I-api_mention	3222	3223	)
O	3223	3224	;
O	3225	3226	.

O	3227	3229	Oh
O	3229	3230	,
O	3231	3234	and
O	3235	3240	there
O	3241	3244	are
O	3245	3249	also
O	3250	3255	calls
O	3256	3258	to
B-api_mention	3259	3262	URL
O	3263	3266	url
O	3267	3268	=
O	3269	3277	resource
B-api_mention	3277	3278	.
I-api_mention	3278	3283	toURI
I-api_mention	3283	3284	(
I-api_mention	3284	3288	args
I-api_mention	3288	3289	)
O	3289	3290	;
O	3291	3294	and
B-api_mention	3295	3301	String
O	3302	3306	file
O	3307	3308	=
O	3309	3317	resource
B-api_mention	3317	3318	.
I-api_mention	3318	3325	getFile
I-api_mention	3325	3326	(
I-api_mention	3326	3330	args
I-api_mention	3330	3331	)
O	3332	3333	.

O	3334	3335	I
O	3335	3336	'
O	3336	3337	m
O	3338	3345	totally
O	3346	3354	confused
O	3355	3360	right
O	3361	3364	now
O	3365	3366	-
O	3367	3373	mostly
O	3374	3381	because
O	3382	3384	of
O	3385	3388	the
O	3389	3400	terminology
O	3400	3401	,
O	3402	3403	I
O	3404	3409	guess
O	3409	3410	.

O	3411	3414	Can
O	3415	3422	someone
O	3423	3429	please
O	3430	3434	walk
O	3435	3437	me
O	3438	3445	through
O	3446	3449	the
O	3450	3461	differences
O	3461	3462	,
O	3463	3465	or
O	3466	3473	provide
O	3474	3475	a
O	3476	3479	few
O	3480	3485	links
O	3486	3488	to
O	3489	3494	Dummy
O	3494	3495	-
O	3495	3500	proof
O	3501	3509	material
O	3509	3510	?

O	3511	3521	Especially
B-api_mention	3522	3525	URI
O	3526	3528	to
B-api_mention	3529	3532	URL
O	3533	3536	and
B-api_mention	3537	3545	Resource
O	3546	3548	to
B-api_mention	3549	3553	File
O	3554	3555	?

O	3556	3558	To
O	3559	3561	me
O	3561	3562	,
O	3563	3565	it
O	3566	3571	feels
O	3572	3576	like
O	3577	3581	they
O	3582	3588	should
O	3589	3591	be
O	3592	3595	the
O	3596	3600	same
O	3601	3606	thing
O	3606	3607	,
O	3608	3620	respectively
O	3620	3621	.
O	3621	3622	.
O	3622	3623	.

O	3624	3627	The
O	3628	3638	difference
O	3639	3646	between
B-api_mention	3647	3654	getFile
I-api_mention	3654	3655	(
I-api_mention	3655	3659	args
I-api_mention	3659	3660	)
O	3661	3664	and
B-api_mention	3665	3672	getPath
I-api_mention	3672	3673	(
I-api_mention	3673	3677	args
I-api_mention	3677	3678	)
O	3679	3681	is
O	3682	3691	explained
O	3692	3696	here
O	3696	3697	:
O	3698	3702	What
O	3702	3703	'
O	3703	3704	s
O	3705	3708	the
O	3709	3719	difference
O	3720	3727	between
O	3728	3731	url
B-api_mention	3731	3732	.
I-api_mention	3732	3739	getFile
I-api_mention	3739	3740	(
I-api_mention	3740	3741	)
O	3742	3745	and
B-api_mention	3746	3753	getpath
I-api_mention	3753	3754	(
I-api_mention	3754	3755	)
O	3755	3756	?

O	3757	3758	(
O	3758	3771	Interestingly
O	3772	3776	they
O	3777	3781	both
O	3782	3786	seem
O	3787	3789	to
O	3790	3796	return
O	3797	3804	Strings
O	3804	3805	,
O	3806	3811	which
O	3812	3820	probably
O	3821	3825	adds
O	3826	3827	a
O	3828	3833	whole
O	3834	3837	lot
O	3838	3840	to
O	3841	3843	my
O	3844	3849	state
O	3850	3852	of
O	3853	3857	mind
O	3857	3858	.
O	3858	3859	.
O	3859	3860	.
O	3860	3861	)
O	3862	3865	Now
O	3865	3866	,
O	3867	3869	if
O	3870	3871	I
O	3872	3876	have
O	3877	3878	a
O	3879	3886	locator
O	3887	3891	that
O	3892	3902	references
O	3903	3904	a
O	3905	3910	class
O	3911	3913	or
O	3914	3921	package
O	3922	3924	in
O	3925	3926	a
O	3927	3930	jar
O	3931	3935	file
O	3935	3936	,
O	3937	3941	will
O	3942	3947	those
O	3948	3951	two
O	3952	3953	(
O	3953	3954	i
O	3954	3955	.
O	3955	3956	e
O	3956	3957	.
O	3958	3962	path
O	3963	3965	an
O	3966	3970	file
O	3971	3978	strings
O	3978	3979	)
O	3980	3986	differ
O	3986	3987	?

O	3988	3996	resource
B-api_mention	3996	3997	.
I-api_mention	3997	4005	toString
I-api_mention	4005	4006	(
I-api_mention	4006	4010	args
I-api_mention	4010	4011	)
O	4012	4017	would
O	4018	4022	give
O	4023	4026	you
O	4027	4030	jar
O	4030	4031	:
O	4031	4035	file
O	4035	4036	:
O	4036	4037	/
O	4037	4038	C
O	4038	4039	:
O	4039	4040	/
O	4040	4044	path
O	4044	4045	/
O	4045	4047	to
O	4047	4048	/
O	4048	4050	my
O	4050	4051	.
O	4051	4054	jar
O	4054	4055	!
O	4055	4056	/
O	4056	4059	com
O	4059	4060	/
O	4060	4067	example
O	4067	4068	/
O	4069	4070	,
O	4071	4076	after
O	4077	4080	all
O	4081	4082	(
O	4082	4086	note
O	4087	4090	the
O	4091	4102	exclamation
O	4103	4107	mark
O	4107	4108	)
O	4108	4109	.

O	4110	4112	Is
O	4113	4116	the
O	4117	4127	difference
O	4128	4135	between
B-api_mention	4136	4139	URI
O	4140	4143	and
B-api_mention	4144	4147	URL
O	4148	4150	in
O	4151	4155	Java
O	4156	4160	that
O	4161	4164	the
O	4165	4171	former
O	4172	4177	doesn
O	4177	4178	'
O	4178	4179	t
O	4180	4186	encode
O	4187	4193	spaces
O	4193	4194	?

O	4195	4197	Cf
O	4197	4198	.

O	4199	4204	Files
O	4204	4205	,
O	4206	4210	URIs
O	4210	4211	,
O	4212	4215	and
O	4216	4220	URLs
O	4221	4232	conflicting
O	4233	4235	in
O	4236	4240	Java
O	4241	4242	(
O	4242	4246	This
O	4247	4253	answer
O	4254	4262	explains
O	4263	4266	the
O	4267	4274	general
O	4274	4275	,
O	4276	4286	conceptual
O	4287	4297	difference
O	4298	4305	between
O	4306	4309	the
O	4310	4313	two
O	4314	4319	terms
O	4320	4326	fairly
O	4327	4331	well
O	4331	4332	:
O	4333	4337	URIs
O	4338	4346	identify
O	4347	4350	and
O	4351	4355	URLs
O	4356	4362	locate
O	4362	4363	;
O	4364	4365	)
O	4366	4372	Lastly
O	4373	4374	-
O	4375	4378	and
O	4379	4383	most
O	4384	4395	importantly
O	4396	4397	-
O	4398	4401	why
O	4402	4404	do
O	4405	4406	I
O	4407	4411	need
B-api_mention	4412	4416	File
O	4417	4423	object
O	4423	4424	;
O	4425	4428	why
O	4429	4432	isn
O	4432	4433	'
O	4433	4434	t
O	4435	4436	a
B-api_mention	4437	4445	Resource
O	4446	4447	(
B-api_mention	4448	4451	URL
O	4452	4453	)
O	4454	4460	enough
O	4460	4461	?

O	4462	4463	(
O	4463	4466	And
O	4467	4469	is
O	4470	4475	there
O	4476	4477	a
B-api_mention	4478	4486	Resource
O	4487	4493	object
O	4493	4494	?
O	4494	4495	)
O	4496	4501	Sorry
O	4502	4504	if
O	4505	4509	this
O	4510	4518	question
O	4519	4521	is
O	4522	4523	a
O	4524	4527	bit
O	4528	4539	unorganized
O	4539	4540	;
O	4541	4543	it
O	4544	4548	just
O	4549	4557	reflects
O	4558	4561	the
O	4562	4571	confusion
O	4572	4573	I
O	4574	4578	have
O	4578	4579	.
O	4579	4580	.
O	4580	4581	.

O	4582	4583	:
O	4583	4584	)

O	4586	4594	Question
O	4594	4595	-
O	4595	4603	28584669

O	4604	4607	Why
O	4608	4613	doesn
O	4613	4614	'
O	4614	4615	t
O	4616	4624	infinity
O	4625	4635	comparison
O	4636	4642	follow
O	4643	4646	the
O	4647	4652	logic
O	4653	4660	applied
O	4661	4663	to
O	4664	4668	NaNs
O	4668	4669	?

O	4670	4674	This
O	4675	4679	code
O	4680	4686	prints
O	4687	4690	out
O	4691	4696	false
O	4697	4702	three
O	4703	4708	times
O	4708	4709	:
O	4710	4711	#
O	4711	4714	pre
O	4715	4722	However
O	4722	4723	,
O	4724	4726	if
O	4727	4728	I
O	4729	4735	change
B-api_mention	4736	4742	Double
I-api_mention	4742	4743	.
I-api_mention	4743	4746	NaN
O	4747	4749	to
B-api_mention	4750	4756	Double
I-api_mention	4756	4757	.
I-api_mention	4757	4765	POSITIVE
I-api_mention	4765	4766	_
I-api_mention	4766	4774	INFINITY
O	4775	4776	,
O	4777	4778	I
O	4779	4782	get
O	4783	4787	true
O	4788	4791	for
O	4792	4800	equality
O	4800	4801	,
O	4802	4805	but
O	4806	4811	false
O	4812	4815	for
O	4816	4819	the
O	4820	4827	greater
O	4827	4828	-
O	4828	4832	than
O	4833	4836	and
O	4837	4841	less
O	4841	4842	-
O	4842	4846	than
O	4847	4858	comparisons
O	4858	4859	:
O	4860	4861	#
O	4861	4864	pre
O	4865	4869	This
O	4870	4875	seems
O	4876	4885	dangerous
O	4885	4886	.

O	4887	4895	Assuming
O	4896	4900	that
O	4901	4909	infinite
O	4910	4916	values
O	4917	4923	result
O	4924	4928	from
O	4929	4938	overflows
O	4938	4939	,
O	4940	4941	I
O	4942	4949	imagine
O	4950	4952	it
O	4952	4953	'
O	4953	4954	s
O	4955	4959	more
O	4960	4966	likely
O	4967	4971	that
O	4972	4975	two
O	4976	4985	variables
O	4986	4990	that
O	4991	4996	ended
O	4997	4999	up
O	5000	5002	as
O	5003	5013	infinities
O	5014	5020	wouldn
O	5020	5021	'
O	5021	5022	t
O	5023	5031	actually
O	5032	5034	be
O	5035	5040	equal
O	5041	5043	in
O	5044	5051	perfect
O	5052	5062	arithmetic
O	5062	5063	.

O	5065	5073	Question
O	5073	5074	-
O	5074	5082	28840047

O	5083	5087	Some
O	5088	5092	time
O	5093	5096	ago
O	5096	5097	,
O	5098	5099	I
O	5099	5100	'
O	5100	5102	ve
O	5103	5110	blogged
O	5111	5116	about
O	5117	5118	a
O	5119	5123	Java
O	5124	5125	8
O	5126	5136	functional
O	5137	5140	way
O	5141	5143	of
O	5144	5155	calculating
O	5156	5165	fibonacci
O	5166	5173	numbers
O	5174	5185	recursively
O	5186	5187	,
O	5188	5192	with
O	5193	5194	a
B-api_mention	5195	5212	ConcurrentHashMap
O	5213	5218	cache
O	5219	5222	and
O	5223	5226	the
O	5227	5230	new
O	5230	5231	,
O	5232	5238	useful
B-api_mention	5239	5254	computeIfAbsent
I-api_mention	5254	5255	(
I-api_mention	5255	5259	args
I-api_mention	5259	5260	)
O	5261	5267	method
O	5267	5268	:
O	5269	5270	#
O	5270	5273	pre
O	5274	5275	I
O	5276	5281	chose
B-api_mention	5282	5299	ConcurrentHashMap
O	5300	5307	because
O	5308	5309	I
O	5310	5313	was
O	5314	5322	thinking
O	5323	5325	of
O	5326	5332	making
O	5333	5337	this
O	5338	5345	example
O	5346	5350	even
O	5351	5355	more
O	5356	5369	sophisticated
O	5370	5372	by
O	5373	5384	introducing
O	5385	5396	parallelism
O	5397	5398	(
O	5398	5403	which
O	5404	5405	I
O	5406	5410	didn
O	5410	5411	'
O	5411	5412	t
O	5413	5415	in
O	5416	5419	the
O	5420	5423	end
O	5423	5424	)
O	5424	5425	.

O	5426	5429	Now
O	5429	5430	,
O	5431	5434	let
O	5434	5435	'
O	5435	5436	s
O	5437	5445	increase
O	5446	5449	the
O	5450	5456	number
O	5457	5461	from
O	5462	5463	8
O	5464	5466	to
O	5467	5469	25
O	5470	5473	and
O	5474	5481	observe
O	5482	5486	what
O	5487	5494	happens
O	5494	5495	:
B-api_mention	5496	5502	System
I-api_mention	5502	5503	.
I-api_mention	5503	5506	out
I-api_mention	5506	5507	.
I-api_mention	5507	5514	println
I-api_mention	5514	5515	(
I-api_mention	5515	5519	args
I-api_mention	5519	5520	)
O	5520	5521	;
O	5522	5525	The
O	5526	5533	program
O	5534	5539	never
O	5540	5545	halts
O	5545	5546	.

O	5547	5553	Inside
O	5554	5557	the
O	5558	5564	method
O	5564	5565	,
O	5566	5571	there
O	5571	5572	'
O	5572	5573	s
O	5574	5575	a
O	5576	5580	loop
O	5581	5585	that
O	5586	5590	just
O	5591	5595	runs
O	5596	5603	forever
O	5603	5604	:
O	5605	5606	#
O	5606	5609	pre
O	5610	5611	I
O	5611	5612	'
O	5612	5613	m
O	5614	5619	using
O	5619	5620	:
O	5621	5622	#
O	5622	5625	pre
O	5626	5634	Matthias
O	5634	5635	,
O	5636	5637	a
O	5638	5644	reader
O	5645	5647	of
O	5648	5652	that
O	5653	5657	blog
O	5658	5662	post
O	5663	5667	also
O	5668	5677	confirmed
O	5678	5681	the
O	5682	5687	issue
O	5688	5689	(
O	5689	5691	he
O	5692	5700	actually
O	5701	5706	found
O	5707	5709	it
O	5709	5710	)
O	5711	5712	.

O	5713	5717	This
O	5718	5720	is
O	5721	5726	weird
O	5726	5727	.

O	5728	5729	I
O	5730	5735	would
O	5736	5740	have
O	5741	5749	expected
O	5750	5753	any
O	5754	5756	of
O	5757	5760	the
O	5761	5770	following
O	5771	5774	two
O	5774	5775	:
O	5776	5777	#
O	5777	5779	li
O	5780	5782	It
O	5783	5788	works
O	5789	5790	#
O	5790	5792	li
O	5793	5795	It
O	5796	5802	throws
O	5803	5804	a
B-api_mention	5805	5836	ConcurrentModificationException
O	5837	5840	But
O	5841	5845	just
O	5846	5851	never
O	5852	5859	halting
O	5859	5860	?

O	5861	5865	That
O	5866	5871	seems
O	5872	5881	dangerous
O	5881	5882	.

O	5883	5885	Is
O	5886	5888	it
O	5889	5890	a
O	5891	5894	bug
O	5894	5895	?

O	5896	5898	Or
O	5899	5902	did
O	5903	5904	I
O	5905	5918	misunderstand
O	5919	5923	some
O	5924	5932	contract
O	5932	5933	?

O	5935	5943	Question
O	5943	5944	-
O	5944	5952	29922296

O	5953	5954	I
O	5954	5955	'
O	5955	5956	m
O	5957	5966	wondering
O	5967	5971	what
O	5972	5975	the
O	5976	5980	best
O	5981	5984	way
O	5985	5987	is
O	5988	5990	in
O	5991	5995	Java
O	5996	5997	8
O	5998	6000	to
O	6001	6005	work
O	6006	6010	with
O	6011	6014	all
O	6015	6018	the
O	6019	6025	values
O	6026	6028	of
O	6029	6031	an
O	6032	6036	enum
O	6036	6037	.

O	6038	6050	Specifically
O	6051	6055	when
O	6056	6059	you
O	6060	6064	need
O	6065	6067	to
O	6068	6071	get
O	6072	6075	all
O	6076	6079	the
O	6080	6086	values
O	6087	6090	and
O	6091	6094	add
O	6095	6097	it
O	6098	6100	to
O	6101	6110	somewhere
O	6110	6111	,
O	6112	6115	for
O	6116	6123	example
O	6123	6124	,
O	6125	6134	supposing
O	6135	6139	that
O	6140	6142	we
O	6143	6147	have
O	6148	6151	the
O	6152	6161	following
O	6162	6166	enum
O	6166	6167	:
O	6168	6169	#
O	6169	6172	pre
O	6173	6174	I
O	6175	6180	could
O	6181	6183	of
O	6184	6190	course
O	6191	6193	do
O	6194	6197	the
O	6198	6207	following
O	6207	6208	:
O	6209	6210	#
O	6210	6213	pre
O	6214	6217	But
O	6217	6218	,
O	6219	6220	I
O	6221	6226	could
O	6227	6231	also
O	6232	6235	add
O	6236	6239	the
O	6240	6249	following
O	6250	6256	method
O	6257	6259	to
O	6260	6263	the
O	6264	6268	enum
O	6269	6279	definition
O	6279	6280	:
O	6281	6282	#
O	6282	6285	pre
O	6286	6289	And
O	6290	6294	then
O	6295	6302	replace
O	6303	6306	the
O	6307	6310	for
O	6311	6315	from
O	6316	6321	above
O	6322	6326	with
O	6326	6327	:
O	6328	6334	Letter
B-api_mention	6334	6335	.
I-api_mention	6335	6341	stream
I-api_mention	6341	6342	(
I-api_mention	6342	6346	args
I-api_mention	6346	6347	)
I-api_mention	6347	6348	.
I-api_mention	6348	6355	forEach
I-api_mention	6355	6356	(
I-api_mention	6356	6360	args
I-api_mention	6360	6361	)
O	6361	6362	;
O	6363	6365	Is
O	6366	6370	this
O	6371	6379	approach
O	6380	6382	OK
O	6383	6385	or
O	6386	6390	does
O	6391	6393	it
O	6394	6398	have
O	6399	6403	some
O	6404	6409	fault
O	6410	6412	in
O	6413	6419	design
O	6420	6422	or
O	6423	6434	performance
O	6434	6435	?

O	6436	6444	Moreover
O	6444	6445	,
O	6446	6449	why
O	6450	6453	don
O	6453	6454	'
O	6454	6455	t
O	6456	6461	enums
O	6462	6466	have
O	6467	6468	a
B-api_mention	6469	6475	stream
I-api_mention	6475	6476	(
I-api_mention	6476	6477	)
O	6478	6484	method
O	6484	6485	?

O	6487	6495	Question
O	6495	6496	-
O	6496	6504	28724850

O	6505	6512	Running
O	6513	6516	the
O	6517	6526	following
O	6527	6533	stream
O	6534	6541	example
O	6542	6544	in
O	6545	6550	Java8
O	6550	6551	:
B-api_mention	6552	6558	System
I-api_mention	6558	6559	.
I-api_mention	6559	6562	out
I-api_mention	6562	6563	.
I-api_mention	6563	6570	println
I-api_mention	6570	6571	(
I-api_mention	6571	6575	args
I-api_mention	6575	6576	)
O	6576	6577	;
O	6578	6584	yields
O	6584	6585	:
O	6586	6587	/
O	6587	6588	a
O	6588	6589	/
O	6589	6590	b
O	6590	6591	/
O	6591	6592	c
O	6592	6593	/
O	6593	6594	d
O	6594	6595	/
O	6595	6596	e
O	6596	6597	/
O	6597	6598	f
O	6599	6604	Which
O	6605	6607	is
O	6608	6609	-
O	6610	6612	of
O	6613	6619	course
O	6620	6621	-
O	6622	6624	no
O	6625	6633	surprise
O	6633	6634	.

O	6635	6638	Due
O	6639	6641	to
O	6642	6643	#
O	6643	6644	a
O	6645	6647	it
O	6648	6655	shouldn
O	6655	6656	'
O	6656	6657	t
O	6658	6664	matter
O	6665	6672	whether
O	6673	6676	the
O	6677	6683	stream
O	6684	6686	is
O	6687	6695	executed
O	6696	6708	sequentially
O	6709	6711	or
O	6712	6720	parallel
O	6720	6721	:
O	6722	6723	#
O	6723	6733	blockquote
O	6734	6739	AFAIK
O	6740	6746	reduce
O	6746	6747	(
O	6747	6751	args
O	6751	6752	)
O	6753	6755	is
O	6756	6769	deterministic
O	6770	6773	and
O	6774	6775	(
O	6775	6777	s1
O	6777	6778	,
O	6779	6781	s2
O	6781	6782	)
O	6783	6784	-
O	6784	6785	>
O	6786	6788	s1
O	6789	6790	+
O	6791	6804	StringLiteral
O	6805	6806	+
O	6807	6809	s2
O	6810	6812	is
O	6813	6824	associative
O	6824	6825	,
O	6826	6828	so
O	6829	6833	that
O	6834	6840	adding
O	6841	6849	parallel
O	6849	6850	(
O	6850	6854	args
O	6854	6855	)
O	6856	6862	should
O	6863	6868	yield
O	6869	6872	the
O	6873	6877	same
O	6878	6884	result
O	6884	6885	:
B-api_mention	6886	6892	System
I-api_mention	6892	6893	.
I-api_mention	6893	6896	out
I-api_mention	6896	6897	.
I-api_mention	6897	6904	println
I-api_mention	6904	6905	(
I-api_mention	6905	6909	args
I-api_mention	6909	6910	)
O	6910	6911	;
O	6912	6919	However
O	6920	6923	the
O	6924	6930	result
O	6931	6933	on
O	6934	6936	my
O	6937	6944	machine
O	6945	6947	is
O	6947	6948	:
O	6949	6950	/
O	6950	6951	a
O	6951	6952	/
O	6952	6953	/
O	6953	6954	b
O	6954	6955	/
O	6955	6956	/
O	6956	6957	c
O	6957	6958	/
O	6958	6959	/
O	6959	6960	d
O	6960	6961	/
O	6961	6962	/
O	6962	6963	e
O	6963	6964	/
O	6964	6965	/
O	6965	6966	f
O	6967	6971	What
O	6971	6972	'
O	6972	6973	s
O	6974	6979	wrong
O	6980	6984	here
O	6984	6985	?

O	6986	6989	BTW
O	6989	6990	:
O	6991	6996	using
O	6997	6998	(
O	6998	7001	the
O	7002	7011	preferred
O	7011	7012	)
O	7013	7014	.
B-api_mention	7014	7021	collect
I-api_mention	7021	7022	(
I-api_mention	7022	7026	args
I-api_mention	7026	7027	)
O	7028	7035	instead
O	7036	7038	of
B-api_mention	7039	7045	reduce
I-api_mention	7045	7046	(
I-api_mention	7046	7050	args
I-api_mention	7050	7051	)
O	7052	7058	yields
O	7059	7062	the
O	7063	7067	same
O	7068	7074	result
O	7075	7076	a
O	7076	7077	/
O	7077	7078	b
O	7078	7079	/
O	7079	7080	c
O	7080	7081	/
O	7081	7082	d
O	7082	7083	/
O	7083	7084	e
O	7084	7085	/
O	7085	7086	f
O	7087	7090	for
O	7091	7101	sequential
O	7102	7105	and
O	7106	7114	parallel
O	7115	7124	execution
O	7124	7125	.

O	7126	7129	JVM
O	7130	7137	details
O	7137	7138	:
O	7139	7140	#
O	7140	7143	pre

O	7145	7153	Question
O	7153	7154	-
O	7154	7162	30522698

O	7163	7166	The
O	7167	7174	problem
O	7175	7176	I
O	7177	7182	would
O	7183	7187	like
O	7188	7190	to
O	7191	7193	be
O	7194	7198	able
O	7199	7201	to
O	7202	7210	override
O	7211	7213	my
O	7214	7218	apps
O	7219	7228	resources
O	7229	7233	such
O	7234	7236	as
O	7237	7238	R
O	7238	7239	.
O	7239	7245	colour
O	7245	7246	.
O	7246	7251	brand
O	7251	7252	_
O	7252	7258	colour
O	7259	7261	or
O	7262	7263	R
O	7263	7264	.
O	7264	7272	drawable
O	7272	7273	.
O	7273	7275	ic
O	7275	7276	_
O	7276	7282	action
O	7282	7283	_
O	7283	7288	start
O	7289	7291	at
O	7292	7299	runtime
O	7299	7300	.

O	7301	7303	My
O	7304	7315	application
O	7316	7324	connects
O	7325	7327	to
O	7328	7329	a
O	7330	7333	CMS
O	7334	7340	system
O	7341	7345	that
O	7346	7350	will
O	7351	7358	provide
O	7359	7367	branding
O	7368	7375	colours
O	7376	7379	and
O	7380	7386	images
O	7386	7387	.

O	7388	7392	Once
O	7393	7396	the
O	7397	7400	app
O	7401	7404	has
O	7405	7415	downloaded
O	7416	7419	the
O	7420	7423	CMS
O	7424	7428	data
O	7429	7431	it
O	7432	7437	needs
O	7438	7440	to
O	7441	7443	be
O	7444	7448	able
O	7449	7451	to
O	7452	7454	re
O	7454	7455	-
O	7455	7459	skin
O	7460	7466	itself
O	7466	7467	.

O	7468	7469	I
O	7470	7474	know
O	7475	7479	what
O	7480	7483	you
O	7484	7487	are
O	7488	7493	about
O	7494	7496	to
O	7497	7500	say
O	7501	7502	-
O	7503	7513	overriding
O	7514	7523	resources
O	7524	7526	at
O	7527	7534	runtime
O	7535	7537	is
O	7538	7541	not
O	7542	7550	possible
O	7550	7551	.

O	7552	7558	Except
O	7559	7563	that
O	7564	7566	it
O	7567	7572	kinda
O	7573	7575	is
O	7575	7576	.

O	7577	7579	In
O	7580	7590	particular
O	7591	7592	I
O	7593	7597	have
O	7598	7603	found
O	7604	7608	this
O	7609	7617	Bachelor
O	7618	7624	Thesis
O	7625	7629	from
O	7630	7634	2012
O	7635	7640	which
O	7641	7649	explains
O	7650	7653	the
O	7654	7659	basic
O	7660	7667	concept
O	7668	7669	-
O	7670	7673	The
B-api_mention	7674	7682	Activity
O	7683	7688	class
O	7689	7691	in
O	7692	7699	android
O	7700	7707	extends
B-api_mention	7708	7722	ContextWrapper
O	7723	7724	,
O	7725	7730	which
O	7731	7739	contains
O	7740	7743	the
B-api_mention	7744	7761	attachBaseContext
O	7762	7768	method
O	7768	7769	.

O	7770	7773	You
O	7774	7777	can
O	7778	7786	override
B-api_mention	7787	7804	attachBaseContext
O	7805	7807	to
O	7808	7812	wrap
O	7813	7816	the
B-api_mention	7817	7824	Context
O	7825	7829	with
O	7830	7834	your
O	7835	7838	own
O	7839	7845	custom
O	7846	7851	class
O	7852	7857	which
O	7858	7867	overrides
O	7868	7875	methods
O	7876	7880	such
O	7881	7883	as
B-api_mention	7884	7892	getColor
O	7893	7896	and
B-api_mention	7897	7908	getDrawable
O	7908	7909	.

O	7910	7914	Your
O	7915	7918	own
O	7919	7933	implementation
O	7934	7936	of
B-api_mention	7937	7945	getColor
O	7946	7951	could
O	7952	7956	look
O	7957	7960	the
O	7961	7967	colour
O	7968	7970	up
O	7971	7978	however
O	7979	7981	it
O	7982	7988	wanted
O	7988	7989	.

O	7990	7993	The
O	7994	8005	Calligraphy
O	8006	8013	library
O	8014	8018	uses
O	8019	8020	a
O	8021	8028	similar
O	8029	8037	approach
O	8038	8040	to
O	8041	8047	inject
O	8048	8049	a
O	8050	8056	custom
B-api_mention	8057	8071	LayoutInflator
O	8072	8077	which
O	8078	8081	can
O	8082	8086	deal
O	8087	8091	with
O	8092	8099	loading
O	8100	8106	custom
O	8107	8112	fonts
O	8112	8113	.

O	8114	8117	The
O	8118	8122	code
O	8123	8124	I
O	8125	8129	have
O	8130	8137	created
O	8138	8139	a
O	8140	8146	simple
B-api_mention	8147	8155	Activity
O	8156	8161	which
O	8162	8166	uses
O	8167	8171	this
O	8172	8180	approach
O	8181	8183	to
O	8184	8192	override
O	8193	8196	the
O	8197	8204	loading
O	8205	8207	of
O	8208	8209	a
O	8210	8216	colour
O	8216	8217	.

O	8218	8219	#
O	8219	8222	pre
O	8223	8226	The
O	8227	8234	problem
O	8235	8237	is
O	8237	8238	,
O	8239	8241	it
O	8242	8247	doesn
O	8247	8248	'
O	8248	8249	t
O	8250	8254	work
O	8254	8255	!

O	8256	8259	The
O	8260	8267	logging
O	8268	8273	shows
O	8274	8279	calls
O	8280	8282	to
O	8283	8287	load
O	8288	8297	resources
O	8298	8302	such
O	8303	8305	as
O	8306	8312	layout
O	8312	8313	/
O	8313	8321	activity
O	8321	8322	_
O	8322	8326	main
O	8327	8330	and
O	8331	8337	mipmap
O	8337	8338	/
O	8338	8340	ic
O	8340	8341	_
O	8341	8349	launcher
O	8350	8357	however
O	8358	8363	color
O	8363	8364	/
O	8364	8369	theme
O	8369	8370	_
O	8370	8376	colour
O	8377	8379	is
O	8380	8385	never
O	8386	8392	loaded
O	8392	8393	.

O	8394	8396	It
O	8397	8402	seems
O	8403	8407	that
O	8408	8411	the
O	8412	8419	context
O	8420	8422	is
O	8423	8428	being
O	8429	8433	used
O	8434	8436	to
O	8437	8443	create
O	8444	8447	the
O	8448	8454	window
O	8455	8458	and
O	8459	8465	action
O	8466	8469	bar
O	8469	8470	,
O	8471	8474	but
O	8475	8478	not
O	8479	8482	the
O	8483	8491	activity
O	8491	8492	'
O	8492	8493	s
O	8494	8501	content
O	8502	8506	view
O	8506	8507	.

O	8508	8510	My
O	8511	8520	questions
O	8521	8523	is
O	8524	8525	-
O	8526	8531	Where
O	8532	8536	does
O	8537	8540	the
O	8541	8547	layout
O	8548	8556	inflator
O	8557	8561	load
O	8562	8571	resources
O	8572	8576	from
O	8576	8577	,
O	8578	8580	if
O	8581	8584	not
O	8585	8588	the
O	8589	8599	activities
O	8600	8607	context
O	8607	8608	?

O	8609	8610	I
O	8611	8616	would
O	8617	8621	also
O	8622	8626	like
O	8627	8629	to
O	8630	8634	know
O	8635	8636	-
O	8637	8639	Is
O	8640	8645	there
O	8646	8647	a
O	8648	8656	workable
O	8657	8660	way
O	8661	8663	to
O	8664	8672	override
O	8673	8676	the
O	8677	8684	loading
O	8685	8687	of
O	8688	8695	colours
O	8696	8699	and
O	8700	8709	drawables
O	8710	8712	at
O	8713	8720	runtime
O	8720	8721	?

O	8722	8723	A
O	8724	8728	word
O	8729	8734	about
O	8735	8746	alternative
O	8747	8757	approaches
O	8758	8759	I
O	8760	8764	know
O	8765	8768	its
O	8769	8777	possible
O	8778	8780	to
O	8781	8786	theme
O	8787	8789	an
O	8790	8793	app
O	8794	8798	from
O	8799	8802	CMS
O	8803	8807	data
O	8808	8813	other
O	8814	8818	ways
O	8819	8820	-
O	8821	8824	for
O	8825	8832	example
O	8833	8835	we
O	8836	8841	could
O	8842	8848	create
O	8849	8850	a
O	8851	8857	method
B-api_mention	8858	8870	getCMSColour
I-api_mention	8870	8871	(
I-api_mention	8871	8875	args
I-api_mention	8875	8876	)
O	8877	8881	then
O	8882	8888	inside
O	8889	8892	our
B-api_mention	8893	8901	onCreate
I-api_mention	8901	8902	(
I-api_mention	8902	8906	args
I-api_mention	8906	8907	)
O	8908	8910	we
O	8911	8915	have
O	8916	8917	a
O	8918	8923	bunch
O	8924	8926	of
O	8927	8931	code
O	8932	8937	along
O	8938	8941	the
O	8942	8947	lines
O	8948	8950	of
O	8950	8951	:
O	8952	8962	myTextView
B-api_mention	8962	8963	.
I-api_mention	8963	8976	setTextColour
I-api_mention	8976	8977	(
I-api_mention	8977	8981	args
I-api_mention	8981	8982	)
O	8983	8984	A
O	8985	8992	similar
O	8993	9001	approach
O	9002	9007	could
O	9008	9010	be
O	9011	9016	taken
O	9017	9020	for
O	9021	9030	drawables
O	9030	9031	,
O	9032	9039	strings
O	9039	9040	,
O	9041	9044	etc
O	9044	9045	.

O	9046	9053	However
O	9054	9058	this
O	9059	9064	would
O	9065	9071	result
O	9072	9074	in
O	9075	9076	a
O	9077	9082	large
O	9083	9089	amount
O	9090	9092	of
O	9093	9104	boilerplate
O	9105	9109	code
O	9110	9111	-
O	9112	9115	all
O	9116	9118	of
O	9119	9124	which
O	9125	9130	needs
O	9131	9142	maintaining
O	9142	9143	.

O	9144	9148	When
O	9149	9158	modifying
O	9159	9162	the
O	9163	9165	UI
O	9166	9168	it
O	9169	9174	would
O	9175	9177	be
O	9178	9182	easy
O	9183	9185	to
O	9186	9192	forget
O	9193	9195	to
O	9196	9199	set
O	9200	9203	the
O	9204	9210	colour
O	9211	9213	on
O	9214	9215	a
O	9216	9226	particular
O	9227	9231	view
O	9231	9232	.

O	9233	9241	Wrapping
O	9242	9245	the
B-api_mention	9246	9253	Context
O	9254	9256	to
O	9257	9263	return
O	9264	9267	our
O	9268	9271	own
O	9272	9278	custom
O	9279	9285	values
O	9286	9288	is
O	9289	9290	'
O	9290	9297	cleaner
O	9297	9298	'
O	9299	9302	and
O	9303	9307	less
O	9308	9313	prone
O	9314	9316	to
O	9317	9325	breakage
O	9325	9326	.

O	9327	9328	I
O	9329	9334	would
O	9335	9339	like
O	9340	9342	to
O	9343	9353	understand
O	9354	9357	why
O	9358	9360	it
O	9361	9366	doesn
O	9366	9367	'
O	9367	9368	t
O	9369	9373	work
O	9373	9374	,
O	9375	9381	before
O	9382	9391	exploring
O	9392	9403	alternative
O	9404	9414	approaches
O	9414	9415	.

O	9417	9425	Question
O	9425	9426	-
O	9426	9434	29333689

O	9435	9438	The
O	9439	9448	following
O	9449	9451	is
O	9452	9457	taken
O	9458	9462	from
O	9463	9464	a
O	9465	9468	job
O	9469	9478	interview
O	9478	9479	:
O	9480	9481	#
O	9481	9491	blockquote
O	9492	9493	I
O	9494	9501	thought
O	9502	9507	about
O	9508	9513	using
O	9514	9516	an
B-api_mention	9517	9524	HashSet
O	9524	9525	,
O	9526	9529	but
O	9530	9532	it
O	9533	9538	might
O	9539	9549	complicate
O	9550	9560	everything
O	9560	9561	.
O	9561	9562	.
O	9562	9563	.

O	9564	9567	Any
O	9568	9573	ideas
O	9574	9576	of
O	9577	9578	a
O	9579	9585	simple
O	9586	9594	solution
O	9594	9595	?

O	9597	9605	Question
O	9605	9606	-
O	9606	9614	27747562

O	9615	9617	In
O	9618	9621	the
O	9622	9631	following
O	9632	9636	code
O	9636	9637	,
O	9638	9639	a
O	9640	9647	dowcast
O	9648	9650	to
O	9651	9653	an
O	9654	9664	apparently
O	9665	9677	incompatible
O	9678	9682	type
O	9683	9689	passes
O	9690	9701	compilation
O	9701	9702	:
O	9703	9704	#
O	9704	9707	pre
B-api_mention	9708	9712	Item
O	9713	9716	and
B-api_mention	9717	9721	List
I-api_mention	9721	9722	<
I-api_mention	9722	9723	T
I-api_mention	9723	9724	>
O	9725	9728	are
O	9729	9738	disparate
O	9739	9744	types
O	9745	9747	so
O	9748	9751	the
O	9752	9756	cast
O	9757	9760	can
O	9761	9766	never
O	9767	9774	succeed
O	9774	9775	.

O	9776	9779	Why
O	9780	9783	did
O	9784	9787	the
O	9788	9796	compiler
O	9797	9802	allow
O	9803	9807	this
O	9807	9808	?

O	9810	9818	Question
O	9818	9819	-
O	9819	9827	28770822

O	9828	9829	I
O	9830	9840	understand
O	9841	9844	the
O	9845	9848	use
O	9849	9851	of
O	9852	9855	the
O	9856	9857	@
O	9857	9863	Native
O	9864	9874	annotation
O	9874	9875	.

O	9876	9877	#
O	9877	9887	blockquote
O	9888	9895	However
O	9895	9896	,
O	9897	9902	while
O	9903	9910	reading
O	9911	9914	the
O	9915	9919	java
O	9920	9926	source
O	9927	9931	code
O	9932	9933	I
O	9934	9941	noticed
O	9942	9946	that
O	9947	9949	in
O	9950	9953	the
O	9954	9959	class
B-api_mention	9960	9967	Integer
O	9968	9971	and
B-api_mention	9972	9976	Long
O	9977	9980	the
O	9981	9985	SIZE
O	9986	9994	constant
O	9995	9997	is
O	9998	9999	@
O	9999	10005	Native
O	10006	10011	while
O	10012	10014	it
O	10015	10017	is
O	10018	10021	not
O	10022	10025	for
O	10026	10029	the
B-api_mention	10030	10035	Float
O	10035	10036	,
B-api_mention	10037	10041	Byte
O	10041	10042	,
B-api_mention	10043	10049	Double
O	10049	10050	,
B-api_mention	10051	10056	Short
O	10057	10060	and
B-api_mention	10061	10070	Character
O	10070	10071	.

O	10072	10076	Note
O	10077	10081	that
O	10082	10085	the
O	10086	10090	SIZE
O	10091	10099	constant
O	10100	10110	represents
O	10111	10114	the
O	10115	10121	number
O	10122	10124	of
O	10125	10129	bits
O	10130	10134	used
O	10135	10137	to
O	10138	10147	represent
O	10148	10151	the
O	10152	10158	actual
O	10159	10164	value
O	10164	10165	.

O	10166	10167	#
O	10167	10170	pre
O	10171	10175	Edit
O	10176	10177	:
O	10178	10179	I
O	10180	10184	just
O	10185	10192	noticed
O	10193	10197	that
O	10198	10202	this
O	10203	10207	also
O	10208	10215	applies
O	10216	10219	for
O	10220	10223	MAX
O	10223	10224	_
O	10224	10229	VALUE
O	10230	10233	and
O	10234	10237	MIN
O	10237	10238	_
O	10238	10243	VALUE
O	10244	10246	of
O	10247	10250	the
O	10251	10255	same
O	10256	10263	classes
O	10263	10264	.

O	10265	10269	Edit
O	10270	10271	2
O	10272	10273	:
O	10274	10275	I
O	10276	10279	had
O	10280	10285	spare
O	10286	10290	time
O	10291	10293	to
O	10294	10296	do
O	10297	10301	some
O	10302	10310	research
O	10311	10313	on
O	10314	10318	this
O	10318	10319	,
O	10320	10323	and
O	10324	10331	looking
O	10332	10334	at
O	10335	10338	the
O	10339	10345	header
O	10346	10351	files
O	10352	10354	of
O	10355	10358	the
B-api_mention	10359	10363	Long
O	10363	10364	,
B-api_mention	10365	10370	Float
O	10371	10374	etc
O	10374	10375	.
O	10376	10383	classes
O	10384	10385	I
O	10386	10389	had
O	10390	10394	hope
O	10395	10397	to
O	10398	10404	figure
O	10405	10408	out
O	10409	10413	that
O	10414	10417	the
O	10418	10427	constants
O	10428	10432	were
O	10433	10436	not
O	10437	10444	present
O	10445	10447	in
O	10448	10451	the
O	10452	10457	other
O	10458	10465	headers
O	10465	10466	,
O	10467	10470	but
O	10471	10484	unfortunately
O	10485	10489	they
O	10490	10493	are
O	10493	10494	.

O	10495	10496	#
O	10496	10499	pre
O	10500	10503	Why
O	10504	10506	is
O	10507	10510	the
O	10511	10515	SIZE
O	10516	10524	constant
O	10525	10529	only
O	10530	10531	@
O	10531	10537	Native
O	10538	10541	for
B-api_mention	10542	10549	Integer
O	10550	10553	and
B-api_mention	10554	10558	Long
O	10559	10560	?

O	10562	10570	Question
O	10570	10571	-
O	10571	10579	29183904

O	10580	10581	I
O	10582	10586	used
O	10587	10589	to
O	10590	10596	define
O	10597	10598	a
O	10599	10602	set
O	10603	10605	of
O	10606	10613	related
O	10614	10623	constants
O	10624	10628	like
B-api_mention	10629	10635	Bundle
O	10636	10640	keys
O	10641	10649	together
O	10650	10652	in
O	10653	10655	an
O	10656	10665	interface
O	10666	10670	like
O	10671	10676	below
O	10676	10677	:
O	10678	10679	#
O	10679	10682	pre
O	10683	10687	This
O	10688	10696	provides
O	10697	10699	me
O	10700	10701	a
O	10702	10707	nicer
O	10708	10711	way
O	10712	10714	to
O	10715	10720	group
O	10721	10728	related
O	10729	10738	constants
O	10739	10747	together
O	10748	10751	and
O	10752	10756	used
O	10757	10761	them
O	10762	10764	by
O	10765	10771	making
O	10772	10773	a
O	10774	10780	static
O	10781	10787	import
O	10788	10789	(
O	10789	10792	not
O	10793	10803	implements
O	10803	10804	)
O	10804	10805	.

O	10806	10807	I
O	10808	10812	know
O	10813	10820	Android
O	10821	10830	framework
O	10831	10835	also
O	10836	10840	uses
O	10841	10844	the
O	10845	10854	constants
O	10855	10857	in
O	10858	10862	same
O	10863	10866	way
O	10867	10871	like
B-api_mention	10872	10877	Toast
I-api_mention	10877	10878	.
I-api_mention	10878	10883	LENTH
I-api_mention	10883	10884	_
I-api_mention	10884	10888	LONG
O	10889	10890	,
B-api_mention	10891	10895	View
I-api_mention	10895	10896	.
I-api_mention	10896	10900	GONE
O	10901	10902	.

O	10903	10910	However
O	10910	10911	,
O	10912	10913	I
O	10914	10919	often
O	10920	10924	feel
O	10925	10929	that
O	10930	10933	the
O	10934	10938	Java
O	10939	10944	Enums
O	10945	10952	provide
O	10953	10957	much
O	10958	10964	better
O	10965	10968	and
O	10969	10977	powerful
O	10978	10981	way
O	10982	10984	to
O	10985	10994	represent
O	10995	10998	the
O	10999	11007	constant
O	11007	11008	.

O	11009	11012	But
O	11013	11015	is
O	11016	11021	there
O	11022	11023	a
O	11024	11035	performence
O	11036	11041	issue
O	11042	11044	in
O	11045	11050	using
O	11051	11056	enums
O	11057	11059	on
O	11060	11067	Android
O	11068	11069	?

O	11070	11074	With
O	11075	11076	a
O	11077	11080	bit
O	11081	11083	of
O	11084	11092	research
O	11093	11094	I
O	11095	11100	ended
O	11101	11103	up
O	11104	11106	in
O	11107	11116	confusion
O	11116	11117	.

O	11118	11122	From
O	11123	11127	this
O	11128	11136	question
O	11137	11138	"
O	11138	11143	Avoid
O	11144	11149	Enums
O	11150	11155	Where
O	11156	11159	You
O	11160	11164	Only
O	11165	11169	Need
O	11170	11174	Ints
O	11174	11175	”
O	11176	11183	removed
O	11184	11188	from
O	11189	11196	Android
O	11196	11197	'
O	11197	11198	s
O	11199	11210	performance
O	11211	11215	tips
O	11215	11216	?

O	11217	11219	it
O	11219	11220	'
O	11220	11221	s
O	11222	11227	clear
O	11228	11232	that
O	11233	11239	Google
O	11240	11243	has
O	11244	11251	removed
O	11252	11253	"
O	11253	11258	Avoid
O	11259	11264	enums
O	11264	11265	"
O	11266	11270	from
O	11271	11274	its
O	11275	11286	performance
O	11287	11291	tips
O	11291	11292	,
O	11293	11296	but
O	11297	11301	from
O	11302	11304	it
O	11304	11305	'
O	11305	11306	s
O	11307	11315	official
O	11316	11324	training
O	11325	11329	docs
O	11330	11332	Be
O	11333	11338	aware
O	11339	11341	of
O	11342	11348	memory
O	11349	11357	overhead
O	11358	11365	section
O	11366	11368	it
O	11369	11376	clearly
O	11377	11381	says
O	11381	11382	:
O	11383	11384	"
O	11384	11389	Enums
O	11390	11395	often
O	11396	11403	require
O	11404	11408	more
O	11409	11413	than
O	11414	11419	twice
O	11420	11422	as
O	11423	11427	much
O	11428	11434	memory
O	11435	11437	as
O	11438	11444	static
O	11445	11454	constants
O	11454	11455	.

O	11456	11459	You
O	11460	11466	should
O	11467	11475	strictly
O	11476	11481	avoid
O	11482	11487	using
O	11488	11493	enums
O	11494	11496	on
O	11497	11504	Android
O	11504	11505	.
O	11505	11506	"
O	11507	11509	Is
O	11510	11514	this
O	11515	11520	still
O	11521	11526	holds
O	11527	11531	good
O	11531	11532	?

O	11533	11534	(
O	11534	11537	say
O	11538	11540	in
O	11541	11545	Java
O	11546	11554	versions
O	11555	11560	after
O	11561	11562	1
O	11562	11563	.
O	11563	11564	6
O	11564	11565	)
O	11566	11569	One
O	11570	11574	more
O	11575	11580	issue
O	11581	11585	that
O	11586	11587	I
O	11588	11596	observed
O	11597	11599	is
O	11600	11602	to
O	11603	11607	send
O	11608	11613	enums
O	11614	11620	across
O	11621	11628	intents
O	11629	11634	using
B-api_mention	11635	11641	Bundle
O	11642	11643	I
O	11644	11650	should
O	11651	11655	send
O	11656	11660	them
O	11661	11663	by
O	11664	11675	serializing
O	11676	11677	(
O	11677	11678	i
O	11678	11679	.
O	11679	11680	e
B-api_mention	11681	11696	putSerializable
I-api_mention	11696	11697	(
I-api_mention	11697	11701	args
I-api_mention	11701	11702	)
O	11703	11704	,
O	11705	11709	that
O	11710	11711	I
O	11712	11717	think
O	11718	11720	an
O	11721	11730	expensive
O	11731	11740	operation
O	11741	11749	compared
O	11750	11752	to
O	11753	11762	primitive
B-api_mention	11763	11772	putString
I-api_mention	11772	11773	(
I-api_mention	11773	11777	args
I-api_mention	11777	11778	)
O	11779	11785	method
O	11785	11786	,
O	11787	11797	eventhough
O	11798	11803	enums
O	11804	11812	provides
O	11813	11815	it
O	11816	11819	for
O	11820	11824	free
O	11824	11825	)
O	11825	11826	.

O	11827	11830	Can
O	11831	11838	someone
O	11839	11845	please
O	11846	11853	clarify
O	11854	11859	which
O	11860	11863	one
O	11864	11866	is
O	11867	11870	the
O	11871	11875	best
O	11876	11879	way
O	11880	11882	to
O	11883	11892	represent
O	11893	11896	the
O	11897	11901	same
O	11902	11904	in
O	11905	11912	Android
O	11913	11914	?

O	11915	11921	Should
O	11922	11923	I
O	11924	11932	strictly
O	11933	11938	avoid
O	11939	11944	using
O	11945	11950	enums
O	11951	11953	on
O	11954	11961	Android
O	11962	11963	?

O	11965	11973	Question
O	11973	11974	-
O	11974	11982	28818506

O	11983	11984	I
O	11984	11985	'
O	11985	11987	ve
O	11988	11992	been
O	11993	12000	working
O	12001	12005	with
O	12006	12009	the
O	12010	12013	new
B-api_mention	12014	12022	Optional
O	12023	12027	type
O	12028	12030	in
O	12031	12035	Java
O	12036	12037	8
O	12038	12039	,
O	12040	12043	and
O	12044	12045	I
O	12045	12046	'
O	12046	12048	ve
O	12049	12053	come
O	12054	12060	across
O	12061	12065	what
O	12066	12071	seems
O	12072	12076	like
O	12077	12078	a
O	12079	12085	common
O	12086	12095	operation
O	12096	12100	that
O	12101	12104	isn
O	12104	12105	'
O	12105	12106	t
O	12107	12116	supported
O	12117	12129	functionally
O	12129	12130	:
O	12131	12133	an
O	12134	12135	"
O	12135	12149	orElseOptional
O	12149	12150	"
O	12151	12159	Consider
O	12160	12163	the
O	12164	12173	following
O	12174	12181	pattern
O	12181	12182	:
O	12183	12184	#
O	12184	12187	pre
O	12188	12193	There
O	12194	12197	are
O	12198	12202	many
O	12203	12208	forms
O	12209	12211	of
O	12212	12216	this
O	12217	12224	pattern
O	12224	12225	,
O	12226	12229	but
O	12230	12232	it
O	12233	12238	boils
O	12239	12243	down
O	12244	12246	to
O	12247	12254	wanting
O	12255	12257	an
O	12258	12259	"
O	12259	12265	orElse
O	12265	12266	"
O	12267	12269	on
O	12270	12272	an
O	12273	12281	optional
O	12282	12286	that
O	12287	12292	takes
O	12293	12294	a
O	12295	12303	function
O	12304	12313	producing
O	12314	12315	a
O	12316	12319	new
O	12320	12328	optional
O	12328	12329	,
O	12330	12336	called
O	12337	12341	only
O	12342	12344	if
O	12345	12348	the
O	12349	12356	current
O	12357	12360	one
O	12361	12365	does
O	12366	12369	not
O	12370	12375	exist
O	12375	12376	.

O	12377	12379	It
O	12379	12380	'
O	12380	12381	s
O	12382	12396	implementation
O	12397	12402	would
O	12403	12407	look
O	12408	12412	like
O	12413	12417	this
O	12417	12418	:
O	12419	12420	#
O	12420	12423	pre
O	12424	12425	I
O	12425	12426	'
O	12426	12427	m
O	12428	12435	curious
O	12436	12438	if
O	12439	12444	there
O	12444	12445	'
O	12445	12446	s
O	12447	12448	a
O	12449	12455	reason
O	12456	12460	such
O	12461	12462	a
O	12463	12469	method
O	12470	12475	doesn
O	12475	12476	'
O	12476	12477	t
O	12478	12483	exist
O	12483	12484	,
O	12485	12487	if
O	12488	12489	I
O	12489	12490	'
O	12490	12491	m
O	12492	12496	just
O	12497	12502	using
B-api_mention	12503	12511	Optional
O	12512	12514	in
O	12515	12517	an
O	12518	12528	unintended
O	12529	12532	way
O	12532	12533	,
O	12534	12537	and
O	12538	12542	what
O	12543	12548	other
O	12549	12553	ways
O	12554	12560	people
O	12561	12565	have
O	12566	12570	come
O	12571	12573	up
O	12574	12578	with
O	12579	12581	to
O	12582	12586	deal
O	12587	12591	with
O	12592	12596	this
O	12597	12601	case
O	12601	12602	.

O	12603	12604	I
O	12605	12611	should
O	12612	12615	say
O	12616	12620	that
O	12621	12622	I
O	12623	12628	think
O	12629	12633	that
O	12634	12643	solutions
O	12644	12653	involving
O	12654	12660	custom
O	12661	12668	utility
O	12669	12676	classes
O	12676	12677	/
O	12677	12684	methods
O	12685	12689	aren
O	12689	12690	'
O	12690	12691	t
O	12692	12699	elegant
O	12700	12707	because
O	12708	12714	people
O	12715	12722	working
O	12723	12727	with
O	12728	12730	my
O	12731	12735	code
O	12736	12739	won
O	12739	12740	'
O	12740	12741	t
O	12742	12753	necessarily
O	12754	12758	know
O	12759	12763	they
O	12764	12769	exist
O	12769	12770	.

O	12771	12775	Also
O	12775	12776	,
O	12777	12779	if
O	12780	12786	anyone
O	12787	12792	knows
O	12792	12793	,
O	12794	12798	will
O	12799	12803	such
O	12804	12805	a
O	12806	12812	method
O	12813	12815	be
O	12816	12824	included
O	12825	12827	in
O	12828	12831	JDK
O	12832	12833	9
O	12833	12834	,
O	12835	12838	and
O	12839	12844	where
O	12845	12850	might
O	12851	12852	I
O	12853	12860	propose
O	12861	12865	such
O	12866	12867	a
O	12868	12874	method
O	12874	12875	?

O	12876	12880	This
O	12881	12886	seems
O	12887	12891	like
O	12892	12893	a
O	12894	12900	pretty
O	12901	12908	glaring
O	12909	12917	omission
O	12918	12920	to
O	12921	12924	the
O	12925	12928	API
O	12929	12931	to
O	12932	12934	me
O	12934	12935	.

O	12937	12945	Question
O	12945	12946	-
O	12946	12954	29328785

O	12955	12956	#
O	12956	12959	pre
O	12960	12967	Compile
O	12968	12969	>
O	12969	12974	javac
O	12975	12989	BigDecimalTest
O	12989	12990	.
O	12990	12994	java
O	12995	13002	Execute
O	13003	13004	>
O	13004	13008	java
O	13009	13023	BigDecimalTest
O	13024	13030	Output
O	13031	13032	#
O	13032	13035	pre
O	13036	13039	The
O	13040	13045	value
O	13046	13048	of
O	13049	13050	z
B-api_mention	13050	13051	.
I-api_mention	13051	13059	toString
I-api_mention	13059	13060	(
I-api_mention	13060	13064	args
I-api_mention	13064	13065	)
O	13066	13068	in
O	13069	13072	the
O	13073	13079	output
O	13080	13082	is
O	13083	13090	correct
O	13091	13092	4
O	13092	13093	.
O	13093	13100	883242e
O	13100	13101	+
O	13101	13104	888
O	13105	13106	/
O	13107	13108	7
O	13108	13109	.
O	13109	13116	115109e
O	13116	13117	+
O	13117	13120	302
O	13121	13122	=
O	13123	13124	6
O	13124	13125	.
O	13125	13132	863200e
O	13132	13133	+
O	13133	13136	585
O	13137	13139	as
O	13140	13142	is
O	13143	13146	the
O	13147	13152	value
O	13153	13155	of
O	13156	13157	y
B-api_mention	13157	13158	.
I-api_mention	13158	13166	toString
I-api_mention	13166	13167	(
I-api_mention	13167	13171	args
I-api_mention	13171	13172	)
O	13173	13174	,
O	13175	13178	but
O	13179	13185	notice
O	13186	13190	that
O	13191	13194	the
O	13195	13200	value
O	13201	13206	given
O	13207	13210	for
O	13211	13212	x
B-api_mention	13212	13213	.
I-api_mention	13213	13221	toString
I-api_mention	13221	13222	(
I-api_mention	13222	13226	args
I-api_mention	13226	13227	)
O	13228	13230	is
O	13231	13241	completely
O	13242	13247	wrong
O	13247	13248	.

O	13249	13252	Why
O	13253	13255	is
O	13256	13260	this
O	13260	13261	?

O	13262	13271	Strangely
O	13271	13272	,
O	13273	13275	if
O	13276	13279	the
O	13280	13285	scale
O	13286	13287	(
O	13287	13288	i
O	13288	13289	.
O	13289	13290	e
O	13290	13291	.
O	13292	13299	desired
O	13300	13307	decimal
O	13308	13314	places
O	13314	13315	)
O	13316	13318	of
O	13319	13322	the
O	13323	13329	result
O	13330	13332	of
O	13333	13336	the
O	13337	13345	division
O	13346	13348	is
O	13349	13356	changed
B-api_mention	13357	13367	BigDecimal
O	13368	13369	z
O	13370	13371	=
O	13372	13373	x
B-api_mention	13373	13374	.
I-api_mention	13374	13380	divide
I-api_mention	13380	13381	(
I-api_mention	13381	13385	args
I-api_mention	13385	13386	)
O	13386	13387	;
O	13388	13392	then
O	13393	13394	x
B-api_mention	13394	13395	.
I-api_mention	13395	13403	toString
I-api_mention	13403	13404	(
I-api_mention	13404	13408	args
I-api_mention	13408	13409	)
O	13410	13414	will
O	13415	13422	produce
O	13423	13426	the
O	13427	13434	correct
O	13435	13440	value
O	13441	13444	for
O	13445	13446	x
O	13447	13448	.

O	13449	13451	Or
O	13451	13452	,
O	13453	13455	if
O	13456	13459	the
O	13460	13468	operands
O	13469	13472	are
O	13473	13480	swapped
B-api_mention	13481	13491	BigDecimal
O	13492	13493	z
O	13494	13495	=
O	13496	13497	y
B-api_mention	13497	13498	.
I-api_mention	13498	13504	divide
I-api_mention	13504	13505	(
I-api_mention	13505	13509	args
I-api_mention	13509	13510	)
O	13510	13511	;
O	13512	13516	then
O	13517	13518	x
B-api_mention	13518	13519	.
I-api_mention	13519	13527	toString
I-api_mention	13527	13528	(
I-api_mention	13528	13532	args
I-api_mention	13532	13533	)
O	13534	13538	will
O	13539	13543	also
O	13544	13548	then
O	13549	13556	produce
O	13557	13560	the
O	13561	13568	correct
O	13569	13574	value
O	13574	13575	.

O	13576	13578	Or
O	13578	13579	,
O	13580	13582	if
O	13583	13586	the
O	13587	13595	exponent
O	13596	13598	of
O	13599	13600	x
O	13601	13603	is
O	13604	13611	changed
O	13612	13616	from
O	13617	13618	e
O	13618	13619	+
O	13619	13622	888
O	13623	13625	to
O	13626	13627	e
O	13627	13628	.
O	13628	13629	g
O	13629	13630	.
O	13631	13632	e
O	13632	13633	+
O	13633	13636	878
O	13637	13641	then
O	13642	13643	x
B-api_mention	13643	13644	.
I-api_mention	13644	13652	toString
I-api_mention	13652	13653	(
I-api_mention	13653	13657	args
I-api_mention	13657	13658	)
O	13659	13663	will
O	13664	13666	be
O	13667	13674	correct
O	13674	13675	.

O	13676	13678	Or
O	13678	13679	,
O	13680	13682	if
O	13683	13690	another
O	13691	13692	x
B-api_mention	13692	13693	.
I-api_mention	13693	13701	toString
I-api_mention	13701	13702	(
I-api_mention	13702	13706	args
I-api_mention	13706	13707	)
O	13708	13712	call
O	13713	13715	is
O	13716	13721	added
O	13722	13727	above
O	13728	13731	the
O	13732	13738	divide
O	13739	13748	operation
O	13748	13749	,
O	13750	13754	then
O	13755	13759	both
O	13760	13761	x
B-api_mention	13761	13762	.
I-api_mention	13762	13770	toString
I-api_mention	13770	13771	(
I-api_mention	13771	13775	args
I-api_mention	13775	13776	)
O	13777	13782	calls
O	13783	13787	will
O	13788	13795	produce
O	13796	13799	the
O	13800	13807	correct
O	13808	13813	value
O	13813	13814	!

O	13815	13817	On
O	13818	13821	the
O	13822	13829	machine
O	13830	13831	I
O	13831	13832	'
O	13832	13833	m
O	13834	13841	testing
O	13842	13846	this
O	13846	13847	,
O	13848	13855	Windows
O	13856	13857	7
O	13858	13860	64
O	13861	13864	bit
O	13864	13865	,
O	13866	13869	the
O	13870	13879	behaviour
O	13880	13882	is
O	13883	13886	the
O	13887	13891	same
O	13892	13897	using
O	13898	13902	java
O	13903	13904	7
O	13905	13908	and
O	13909	13910	8
O	13910	13911	,
O	13912	13916	both
O	13917	13922	32bit
O	13923	13926	and
O	13927	13929	64
O	13930	13933	bit
O	13934	13942	versions
O	13942	13943	,
O	13944	13947	but
O	13948	13955	testing
O	13956	13962	online
O	13963	13965	at
O	13966	13967	#
O	13967	13968	a
O	13969	13977	produces
O	13978	13987	different
O	13988	13995	results
O	13996	13999	for
O	14000	14004	java
O	14005	14006	7
O	14007	14010	and
O	14011	14015	java
O	14016	14017	8
O	14017	14018	.

O	14019	14024	Using
O	14025	14029	java
O	14030	14031	7
O	14031	14032	,
O	14033	14036	the
O	14037	14042	value
O	14043	14045	of
O	14046	14047	x
O	14048	14050	is
O	14051	14056	given
O	14057	14066	correctly
O	14066	14067	:
O	14068	14069	#
O	14069	14070	a
O	14071	14072	,
O	14073	14076	but
O	14077	14082	using
O	14083	14087	java
O	14088	14089	8
O	14090	14093	its
O	14094	14099	value
O	14100	14102	is
O	14103	14112	incorrect
O	14112	14113	:
O	14114	14115	#
O	14115	14116	a
O	14117	14118	.

O	14119	14123	Also
O	14123	14124	,
O	14125	14129	this
O	14130	14139	behaviour
O	14140	14142	is
O	14143	14146	not
O	14147	14153	unique
O	14154	14156	to
O	14157	14161	this
O	14162	14172	particular
O	14173	14178	value
O	14179	14181	of
O	14182	14183	x
O	14184	14185	,
O	14186	14188	as
O	14189	14196	calling
B-api_mention	14197	14205	toString
O	14206	14208	on
O	14209	14214	other
B-api_mention	14215	14226	BigDecimals
O	14227	14231	with
O	14232	14236	more
O	14237	14241	than
O	14242	14247	about
O	14248	14252	1500
O	14253	14259	digits
O	14260	14265	after
O	14266	14273	passing
O	14274	14278	them
O	14279	14281	as
O	14282	14285	the
O	14286	14291	first
O	14292	14299	operand
O	14300	14302	to
O	14303	14304	a
O	14305	14311	divide
O	14312	14321	operation
O	14322	14326	will
O	14327	14331	also
O	14332	14339	produce
O	14340	14349	incorrect
O	14350	14356	values
O	14356	14357	.

O	14358	14362	What
O	14363	14365	is
O	14366	14369	the
O	14370	14381	explanation
O	14382	14385	for
O	14386	14390	this
O	14390	14391	?

O	14392	14395	The
O	14396	14402	divide
O	14403	14412	operation
O	14413	14418	seems
O	14419	14421	to
O	14422	14424	be
O	14425	14433	mutating
O	14434	14437	the
O	14438	14443	value
O	14444	14452	produced
O	14453	14455	by
O	14456	14466	subsequent
B-api_mention	14467	14475	toString
O	14476	14481	calls
O	14482	14484	on
O	14485	14488	its
O	14489	14497	operands
O	14497	14498	.

O	14499	14503	Does
O	14504	14508	this
O	14509	14515	happen
O	14516	14518	on
O	14519	14523	your
O	14524	14532	platform
O	14532	14533	?

O	14534	14538	Edit
O	14538	14539	:
O	14540	14543	The
O	14544	14549	issue
O	14550	14555	seems
O	14556	14558	to
O	14559	14561	be
O	14562	14566	with
O	14567	14570	the
O	14571	14575	java
O	14576	14577	8
O	14578	14585	runtime
O	14586	14590	only
O	14590	14591	,
O	14592	14594	as
O	14595	14598	the
O	14599	14604	above
O	14605	14612	program
O	14613	14621	compiled
O	14622	14626	with
O	14627	14631	java
O	14632	14633	7
O	14634	14642	produces
O	14643	14650	correct
O	14651	14657	output
O	14658	14662	when
O	14663	14671	executed
O	14672	14676	with
O	14677	14680	the
O	14681	14685	java
O	14686	14687	7
O	14688	14695	runtime
O	14695	14696	,
O	14697	14700	but
O	14701	14710	incorrect
O	14711	14717	output
O	14718	14722	when
O	14723	14731	executed
O	14732	14736	with
O	14737	14740	the
O	14741	14745	java
O	14746	14747	8
O	14748	14755	runtime
O	14755	14756	.

O	14757	14761	Edit
O	14761	14762	:
O	14763	14764	I
O	14764	14765	'
O	14765	14767	ve
O	14768	14774	tested
O	14775	14779	with
O	14780	14783	the
O	14784	14789	early
O	14790	14796	access
O	14797	14801	jre1
O	14801	14802	.
O	14802	14803	8
O	14803	14804	.
O	14804	14805	0
O	14805	14806	_
O	14806	14808	60
O	14809	14812	and
O	14813	14816	the
O	14817	14820	bug
O	14821	14825	does
O	14826	14829	not
O	14830	14836	appear
O	14836	14837	,
O	14838	14841	and
O	14842	14851	according
O	14852	14854	to
O	14855	14862	Marco13
O	14862	14863	'
O	14863	14864	s
O	14865	14871	answer
O	14872	14874	it
O	14875	14878	was
O	14879	14884	fixed
O	14885	14887	in
O	14888	14893	build
O	14894	14896	51
O	14896	14897	.

O	14898	14901	The
O	14902	14908	Oracle
O	14909	14912	JDK
O	14913	14914	8
O	14915	14922	product
O	14923	14931	binaries
O	14932	14935	are
O	14936	14940	only
O	14941	14943	at
O	14944	14950	update
O	14951	14953	40
O	14954	14960	though
O	14961	14963	so
O	14964	14966	it
O	14967	14970	may
O	14971	14973	be
O	14974	14978	some
O	14979	14983	time
O	14984	14990	before
O	14991	14994	the
O	14995	15000	fixed
O	15001	15009	versions
O	15010	15013	are
O	15014	15020	widely
O	15021	15025	used
O	15025	15026	.

O	15028	15036	Question
O	15036	15037	-
O	15037	15045	30081520

O	15046	15047	I
O	15048	15050	am
O	15051	15056	aware
O	15057	15061	that
O	15062	15064	it
O	15065	15067	is
O	15068	15074	better
O	15075	15077	to
O	15078	15082	call
O	15083	15086	the
O	15087	15093	equals
O	15094	15100	method
O	15101	15105	over
O	15106	15111	using
O	15112	15115	the
O	15116	15117	=
O	15117	15118	=
O	15119	15127	operator
O	15128	15129	(
O	15129	15132	see
O	15133	15137	this
O	15138	15146	question
O	15147	15148	)
O	15148	15149	.

O	15150	15151	I
O	15152	15156	want
O	15157	15160	two
O	15161	15168	strings
O	15169	15171	to
O	15172	15179	compare
O	15180	15182	as
O	15183	15188	equal
O	15189	15191	if
O	15192	15196	they
O	15197	15200	are
O	15201	15205	both
O	15206	15210	null
O	15211	15213	or
O	15214	15216	if
O	15217	15221	they
O	15222	15231	represent
O	15232	15235	the
O	15236	15240	same
O	15241	15247	string
O	15247	15248	.

O	15249	15262	Unfortunately
O	15263	15266	the
B-api_mention	15267	15273	equals
O	15274	15280	method
O	15281	15285	will
O	15286	15291	throw
O	15292	15294	an
O	15295	15298	NPE
O	15299	15301	if
O	15302	15305	the
O	15306	15313	strings
O	15314	15317	are
O	15318	15322	null
O	15323	15324	.

O	15325	15327	My
O	15328	15332	code
O	15333	15335	is
O	15336	15345	currently
O	15345	15346	:
O	15347	15348	#
O	15348	15351	pre
O	15352	15356	This
O	15357	15359	is
O	15360	15369	inelegant
O	15369	15370	.

O	15371	15375	What
O	15376	15378	is
O	15379	15382	the
O	15383	15390	correct
O	15391	15394	way
O	15395	15397	to
O	15398	15405	perform
O	15406	15410	this
O	15411	15415	test
O	15415	15416	?

O	15418	15426	Question
O	15426	15427	-
O	15427	15435	29229373

O	15436	15437	I
O	15438	15442	have
O	15443	15446	the
O	15447	15456	following
O	15457	15463	sample
O	15464	15468	code
O	15468	15469	:
O	15470	15471	#
O	15471	15474	pre
O	15475	15478	The
O	15479	15485	output
O	15486	15488	is
O	15489	15491	as
O	15492	15499	follows
O	15499	15500	:
O	15501	15502	#
O	15502	15505	pre
O	15506	15510	From
O	15511	15515	here
O	15516	15517	I
O	15518	15521	see
O	15522	15526	that
O	15527	15529	in
O	15530	15535	first
O	15536	15540	case
O	15541	15547	stream
O	15548	15554	really
O	15555	15562	behaves
O	15563	15569	lazily
O	15570	15571	-
O	15572	15574	we
O	15575	15578	use
B-api_mention	15579	15588	findFirst
I-api_mention	15588	15589	(
I-api_mention	15589	15593	args
I-api_mention	15593	15594	)
O	15595	15597	so
O	15598	15602	once
O	15603	15605	we
O	15606	15610	have
O	15611	15616	first
O	15617	15624	element
O	15625	15628	our
O	15629	15638	filtering
O	15639	15645	lambda
O	15646	15648	is
O	15649	15652	not
O	15653	15660	invoked
O	15660	15661	.

O	15662	15669	However
O	15669	15670	,
O	15671	15673	in
O	15674	15680	second
O	15681	15685	case
O	15686	15691	which
O	15692	15696	uses
O	15697	15705	flatMaps
O	15706	15708	we
O	15709	15712	see
O	15713	15717	that
O	15718	15725	despite
O	15726	15731	first
O	15732	15739	element
O	15740	15745	which
O	15746	15753	fulfils
O	15754	15757	the
O	15758	15764	filter
O	15765	15774	condition
O	15775	15777	is
O	15778	15783	found
O	15784	15785	(
O	15785	15787	it
O	15787	15788	'
O	15788	15789	s
O	15790	15794	just
O	15795	15798	any
O	15799	15804	first
O	15805	15812	element
O	15813	15815	as
O	15816	15822	lambda
O	15823	15829	always
O	15830	15837	returns
O	15838	15842	true
O	15842	15843	)
O	15844	15851	further
O	15852	15860	contents
O	15861	15863	of
O	15864	15867	the
O	15868	15874	stream
O	15875	15878	are
O	15879	15884	still
O	15885	15890	being
O	15891	15894	fed
O	15895	15902	through
O	15903	15912	filtering
O	15913	15921	function
O	15921	15922	.

O	15923	15924	I
O	15925	15927	am
O	15928	15934	trying
O	15935	15937	to
O	15938	15948	understand
O	15949	15952	why
O	15953	15955	it
O	15956	15963	behaves
O	15964	15968	like
O	15969	15973	this
O	15974	15980	rather
O	15981	15985	than
O	15986	15992	giving
O	15993	15995	up
O	15996	16001	after
O	16002	16007	first
O	16008	16015	element
O	16016	16018	is
O	16019	16029	calculated
O	16030	16032	as
O	16033	16035	in
O	16036	16039	the
O	16040	16045	first
O	16046	16050	case
O	16050	16051	.

O	16052	16055	Any
O	16056	16063	helpful
O	16064	16075	information
O	16076	16081	would
O	16082	16084	be
O	16085	16096	appreciated
O	16096	16097	.

O	16099	16107	Question
O	16107	16108	-
O	16108	16116	29494800

O	16117	16118	I
O	16119	16123	have
O	16124	16131	trouble
O	16132	16145	understanding
O	16146	16149	the
O	16150	16156	source
O	16157	16161	code
O	16162	16164	of
B-api_mention	16165	16171	Arrays
I-api_mention	16171	16172	.
I-api_mention	16172	16178	copyOf
O	16179	16180	.

O	16181	16182	#
O	16182	16185	pre
O	16186	16187	#
O	16187	16189	li
O	16190	16194	what
O	16195	16197	is
O	16198	16202	this
O	16203	16207	line
O	16208	16216	checking
O	16216	16217	?

O	16218	16219	(
B-api_mention	16219	16225	Object
O	16225	16226	)
O	16226	16233	newType
O	16234	16235	=
O	16235	16236	=
O	16237	16238	(
B-api_mention	16238	16244	Object
O	16244	16245	)
B-api_mention	16245	16251	Object
O	16251	16252	[
O	16252	16253	]
O	16253	16254	.
O	16254	16259	class
O	16260	16261	#
O	16261	16263	li
O	16264	16268	What
O	16269	16272	are
O	16273	16276	the
O	16277	16288	differences
O	16289	16296	between
O	16297	16298	(
O	16298	16299	T
O	16299	16300	[
O	16300	16301	]
O	16301	16302	)
O	16303	16306	new
B-api_mention	16307	16313	Object
O	16313	16314	[
O	16314	16323	newLength
O	16323	16324	]
O	16325	16328	and
O	16329	16330	(
O	16330	16331	T
O	16331	16332	[
O	16332	16333	]
O	16333	16334	)
B-api_mention	16335	16340	Array
I-api_mention	16340	16341	.
I-api_mention	16341	16352	newInstance
I-api_mention	16352	16353	(
I-api_mention	16353	16357	args
I-api_mention	16357	16358	)
O	16359	16360	.
O	16361	16364	why
B-api_mention	16365	16370	Array
I-api_mention	16370	16371	.
I-api_mention	16371	16382	newInstance
O	16383	16386	not
O	16387	16391	good
O	16392	16398	enough
O	16399	16402	for
O	16403	16407	both
O	16408	16413	cases
O	16413	16414	?

O	16415	16416	#
O	16416	16418	li
O	16419	16423	This
O	16424	16433	following
O	16434	16438	line
O	16439	16447	compiles
O	16447	16448	,
O	16449	16452	but
O	16453	16460	crashes
O	16461	16463	at
O	16464	16467	run
O	16468	16472	time
O	16473	16474	(
O	16474	16476	as
O	16477	16485	expected
O	16485	16486	)
O	16486	16487	.

O	16488	16492	When
O	16493	16499	should
O	16500	16501	I
O	16502	16505	use
O	16506	16510	this
O	16511	16517	method
O	16517	16518	?

B-api_mention	16519	16526	Integer
O	16526	16527	[
O	16527	16528	]
O	16529	16533	nums
O	16534	16535	=
B-api_mention	16536	16542	Arrays
I-api_mention	16542	16543	.
I-api_mention	16543	16549	copyOf
I-api_mention	16549	16550	(
I-api_mention	16550	16554	args
I-api_mention	16554	16555	)

O	16557	16565	Question
O	16565	16566	-
O	16566	16574	27949213

O	16575	16580	Since
B-api_mention	16581	16587	String
O	16588	16590	in
O	16591	16595	Java
O	16596	16597	(
O	16597	16601	like
O	16602	16607	other
O	16608	16617	languages
O	16617	16618	)
O	16619	16627	consumes
O	16628	16629	a
O	16630	16633	lot
O	16634	16636	of
O	16637	16643	memory
O	16644	16651	because
O	16652	16656	each
O	16657	16666	character
O	16667	16675	consumes
O	16676	16679	two
O	16680	16685	bytes
O	16685	16686	,
O	16687	16691	Java
O	16692	16693	8
O	16694	16697	has
O	16698	16708	introduced
O	16709	16710	a
O	16711	16714	new
O	16715	16722	feature
O	16723	16729	called
B-api_mention	16730	16736	String
O	16737	16750	Deduplication
O	16751	16756	which
O	16757	16762	takes
O	16763	16772	advantage
O	16773	16775	of
O	16776	16779	the
O	16780	16784	fact
O	16785	16789	that
O	16790	16793	the
O	16794	16798	char
O	16799	16805	arrays
O	16806	16809	are
O	16810	16818	internal
O	16819	16821	to
O	16822	16829	strings
O	16830	16833	and
O	16834	16839	final
O	16839	16840	,
O	16841	16843	so
O	16844	16847	the
O	16848	16851	JVM
O	16852	16855	can
O	16856	16860	mess
O	16861	16867	around
O	16868	16872	with
O	16873	16877	them
O	16877	16878	.

O	16879	16880	I
O	16881	16885	have
O	16886	16890	read
O	16891	16895	this
O	16896	16903	example
O	16904	16906	so
O	16907	16910	far
O	16911	16914	but
O	16915	16920	since
O	16921	16922	I
O	16923	16925	am
O	16926	16929	not
O	16930	16931	a
O	16932	16935	pro
O	16936	16940	java
O	16941	16946	coder
O	16946	16947	,
O	16948	16949	I
O	16950	16952	am
O	16953	16959	having
O	16960	16961	a
O	16962	16966	hard
O	16967	16971	time
O	16972	16980	grasping
O	16981	16984	the
O	16985	16992	concept
O	16992	16993	.

O	16994	16998	Here
O	16999	17001	is
O	17002	17006	what
O	17007	17009	it
O	17010	17014	says
O	17014	17015	,
O	17016	17017	#
O	17017	17027	blockquote
O	17028	17030	My
O	17031	17036	First
O	17037	17045	question
O	17045	17046	,
O	17047	17052	There
O	17053	17055	is
O	17056	17061	still
O	17062	17063	a
O	17064	17068	lack
O	17069	17071	of
O	17072	17081	resources
O	17082	17084	on
O	17085	17089	this
O	17090	17095	topic
O	17096	17101	since
O	17102	17104	it
O	17105	17107	is
O	17108	17116	recently
O	17117	17122	added
O	17123	17125	in
O	17126	17130	Java
O	17131	17132	8
O	17133	17139	update
O	17140	17142	20
O	17142	17143	,
O	17144	17149	could
O	17150	17156	anyone
O	17157	17161	here
O	17162	17167	share
O	17168	17172	some
O	17173	17182	practical
O	17183	17191	examples
O	17192	17194	on
O	17195	17198	how
O	17199	17201	it
O	17202	17206	help
O	17207	17209	in
O	17210	17218	reducing
O	17219	17222	the
O	17223	17229	memory
O	17230	17238	consumed
O	17239	17241	by
B-api_mention	17242	17248	String
O	17249	17251	in
O	17252	17256	Java
O	17257	17258	?

O	17259	17263	Edit
O	17263	17264	:
O	17265	17268	The
O	17269	17274	above
O	17275	17279	link
O	17280	17284	says
O	17284	17285	,
O	17286	17287	#
O	17287	17297	blockquote
O	17298	17300	My
O	17301	17304	2nd
O	17305	17313	question
O	17313	17314	,
O	17315	17317	If
O	17318	17322	hash
O	17323	17327	code
O	17328	17330	of
O	17331	17334	two
B-api_mention	17335	17341	String
O	17342	17345	are
O	17346	17350	same
O	17351	17355	then
O	17356	17359	the
B-api_mention	17360	17367	Strings
O	17368	17371	are
O	17372	17379	already
O	17380	17383	the
O	17384	17388	same
O	17388	17389	,
O	17390	17394	then
O	17395	17398	why
O	17399	17406	compare
O	17407	17411	them
O	17412	17416	char
O	17417	17419	by
O	17420	17424	char
O	17425	17429	once
O	17430	17432	it
O	17433	17435	is
O	17436	17441	found
O	17442	17446	that
O	17447	17450	the
O	17451	17454	two
B-api_mention	17455	17461	String
O	17462	17466	have
O	17467	17471	same
O	17472	17476	hash
O	17477	17481	code
O	17482	17483	?

O	17485	17493	Question
O	17493	17494	-
O	17494	17502	29095967

O	17503	17504	I
O	17505	17509	have
O	17510	17514	this
O	17515	17519	list
O	17520	17521	(
B-api_mention	17522	17526	List
I-api_mention	17526	17527	<
I-api_mention	17527	17528	T
I-api_mention	17528	17529	>
O	17530	17531	)
O	17531	17532	:
O	17533	17534	[
O	17534	17547	StringLiteral
O	17547	17548	,
O	17549	17562	StringLiteral
O	17562	17563	,
O	17564	17568	null
O	17568	17569	,
O	17570	17583	StringLiteral
O	17583	17584	,
O	17585	17589	null
O	17589	17590	,
O	17591	17604	StringLiteral
O	17604	17605	,
O	17606	17619	StringLiteral
O	17619	17620	]
O	17621	17624	And
O	17625	17626	I
O	17626	17627	'
O	17627	17628	d
O	17629	17633	like
O	17634	17643	something
O	17644	17648	like
O	17649	17653	this
O	17653	17654	:
O	17655	17656	[
O	17656	17657	[
O	17657	17670	StringLiteral
O	17670	17671	,
O	17672	17685	StringLiteral
O	17685	17686	]
O	17686	17687	,
O	17688	17689	[
O	17689	17702	StringLiteral
O	17702	17703	]
O	17703	17704	,
O	17705	17706	[
O	17706	17719	StringLiteral
O	17719	17720	,
O	17721	17734	StringLiteral
O	17734	17735	]
O	17735	17736	]
O	17737	17739	In
O	17740	17745	other
O	17746	17751	words
O	17752	17753	I
O	17754	17758	want
O	17759	17761	to
O	17762	17767	split
O	17768	17770	my
O	17771	17775	list
O	17776	17778	in
O	17779	17787	sublists
O	17788	17793	using
O	17794	17797	the
O	17798	17802	null
O	17803	17808	value
O	17809	17811	as
O	17812	17821	separator
O	17821	17822	,
O	17823	17825	in
O	17826	17831	order
O	17832	17834	to
O	17835	17841	obtain
O	17842	17843	a
O	17844	17848	list
O	17849	17851	of
O	17852	17857	lists
O	17858	17859	(
B-api_mention	17860	17864	List
I-api_mention	17864	17865	<
I-api_mention	17865	17866	T
I-api_mention	17866	17867	>
O	17868	17869	)
O	17869	17870	.

O	17871	17872	I
O	17872	17873	'
O	17873	17874	m
O	17875	17882	looking
O	17883	17886	for
O	17887	17888	a
O	17889	17893	Java
O	17894	17895	8
O	17896	17904	solution
O	17904	17905	.

O	17906	17907	I
O	17907	17908	'
O	17908	17910	ve
O	17911	17916	tried
O	17917	17921	with
B-api_mention	17922	17932	Collectors
I-api_mention	17932	17933	.
I-api_mention	17933	17947	partitioningBy
O	17948	17951	but
O	17952	17953	I
O	17953	17954	'
O	17954	17955	m
O	17956	17959	not
O	17960	17964	sure
O	17965	17967	it
O	17968	17970	is
O	17971	17975	what
O	17976	17977	I
O	17977	17978	'
O	17978	17979	m
O	17980	17987	looking
O	17988	17991	for
O	17991	17992	.

O	17993	17999	Thanks
O	17999	18000	!

O	18002	18010	Question
O	18010	18011	-
O	18011	18019	30727515
O	18019	18020	,
O	18021	18027	answer
O	18027	18028	-
O	18028	18036	30739477

O	18037	18042	Since
O	18043	18047	this
O	18048	18052	hasn
O	18052	18053	’
O	18053	18054	t
O	18055	18064	addressed
O	18065	18068	yet
O	18068	18069	,
O	18070	18074	here
O	18075	18077	an
O	18078	18089	explanation
O	18089	18090	,
O	18091	18094	why
O	18095	18098	the
O	18099	18110	translation
O	18111	18113	of
O	18114	18121	Unicode
O	18122	18129	escapes
O	18130	18137	happens
O	18138	18144	before
O	18145	18148	any
O	18149	18154	other
O	18155	18161	source
O	18162	18166	code
O	18167	18177	processing
O	18177	18178	:
O	18179	18182	The
O	18183	18187	idea
O	18188	18194	behind
O	18195	18197	it
O	18198	18201	was
O	18202	18206	that
O	18207	18209	it
O	18210	18216	allows
O	18217	18225	lossless
O	18226	18238	translations
O	18239	18241	of
O	18242	18246	Java
O	18247	18253	source
O	18254	18258	code
O	18259	18266	between
O	18267	18276	different
O	18277	18286	character
O	18287	18296	encodings
O	18296	18297	.

O	18298	18303	Today
O	18303	18304	,
O	18305	18310	there
O	18311	18313	is
O	18314	18324	widespread
O	18325	18332	Unicode
O	18333	18340	support
O	18340	18341	,
O	18342	18345	and
O	18346	18350	this
O	18351	18356	doesn
O	18356	18357	’
O	18357	18358	t
O	18359	18363	look
O	18364	18368	like
O	18369	18370	a
O	18371	18378	problem
O	18378	18379	,
O	18380	18383	but
O	18384	18388	back
O	18389	18393	then
O	18394	18396	it
O	18397	18401	wasn
O	18401	18402	’
O	18402	18403	t
O	18404	18408	easy
O	18409	18412	for
O	18413	18414	a
O	18415	18424	developer
O	18425	18429	from
O	18430	18431	a
O	18432	18439	western
O	18440	18447	country
O	18448	18450	to
O	18451	18458	receive
O	18459	18463	some
O	18464	18470	source
O	18471	18475	code
O	18476	18480	from
O	18481	18484	his
O	18485	18490	Asian
O	18491	18500	colleague
O	18501	18511	containing
O	18512	18517	Asian
O	18518	18528	characters
O	18528	18529	,
O	18530	18534	make
O	18535	18539	some
O	18540	18547	changes
O	18548	18549	(
O	18549	18558	including
O	18559	18568	compiling
O	18569	18572	and
O	18573	18580	testing
O	18581	18583	it
O	18583	18584	)
O	18585	18588	and
O	18589	18596	sending
O	18597	18600	the
O	18601	18607	result
O	18608	18612	back
O	18612	18613	,
O	18614	18617	all
O	18618	18625	without
O	18626	18634	damaging
O	18635	18644	something
O	18644	18645	.

O	18646	18648	So
O	18648	18649	,
O	18650	18654	Java
O	18655	18661	source
O	18662	18666	code
O	18667	18670	can
O	18671	18673	be
O	18674	18681	written
O	18682	18684	in
O	18685	18688	any
O	18689	18697	encoding
O	18698	18701	and
O	18702	18708	allows
O	18709	18710	a
O	18711	18715	wide
O	18716	18721	range
O	18722	18724	of
O	18725	18735	characters
O	18736	18742	within
O	18743	18754	identifiers
O	18754	18755	,
O	18756	18765	character
O	18766	18769	and
B-api_mention	18770	18776	String
O	18777	18785	literals
O	18786	18789	and
O	18790	18798	comments
O	18798	18799	.

O	18800	18804	Then
O	18804	18805	,
O	18806	18808	in
O	18809	18814	order
O	18815	18817	to
O	18818	18826	transfer
O	18827	18829	it
O	18830	18840	losslessly
O	18840	18841	,
O	18842	18845	all
O	18846	18856	characters
O	18857	18860	not
O	18861	18870	supported
O	18871	18873	by
O	18874	18877	the
O	18878	18884	target
O	18885	18893	encoding
O	18894	18897	are
O	18898	18906	replaced
O	18907	18909	by
O	18910	18915	their
O	18916	18923	Unicode
O	18924	18931	escapes
O	18931	18932	.

O	18933	18937	This
O	18938	18940	is
O	18941	18942	a
O	18943	18953	reversible
O	18954	18961	process
O	18962	18965	and
O	18966	18969	the
O	18970	18981	interesting
O	18982	18987	point
O	18988	18990	is
O	18991	18995	that
O	18996	18999	the
O	19000	19011	translation
O	19012	19015	can
O	19016	19018	be
O	19019	19023	done
O	19024	19026	by
O	19027	19028	a
O	19029	19033	tool
O	19034	19039	which
O	19040	19045	doesn
O	19045	19046	’
O	19046	19047	t
O	19048	19052	need
O	19053	19055	to
O	19056	19060	know
O	19061	19069	anything
O	19070	19075	about
O	19076	19079	the
O	19080	19084	Java
O	19085	19091	source
O	19092	19096	code
O	19097	19103	syntax
O	19104	19106	as
O	19107	19110	the
O	19111	19122	translation
O	19123	19127	rule
O	19128	19130	is
O	19131	19134	not
O	19135	19144	dependent
O	19145	19147	on
O	19148	19150	it
O	19150	19151	.

O	19152	19156	This
O	19157	19162	works
O	19163	19165	as
O	19166	19169	the
O	19170	19181	translation
O	19182	19184	to
O	19185	19190	their
O	19191	19197	actual
O	19198	19205	Unicode
O	19206	19216	characters
O	19217	19223	inside
O	19224	19227	the
O	19228	19236	compiler
O	19237	19244	happens
O	19245	19258	independently
O	19259	19261	to
O	19262	19265	the
O	19266	19270	Java
O	19271	19277	source
O	19278	19282	code
O	19283	19289	syntax
O	19290	19292	as
O	19293	19297	well
O	19297	19298	.

O	19299	19301	It
O	19302	19309	implies
O	19310	19314	that
O	19315	19318	you
O	19319	19322	can
O	19323	19330	perform
O	19331	19333	an
O	19334	19343	arbitrary
O	19344	19350	number
O	19351	19353	of
O	19354	19365	translation
O	19366	19371	steps
O	19372	19374	in
O	19375	19379	both
O	19380	19390	directions
O	19391	19398	without
O	19399	19403	ever
O	19404	19412	changing
O	19413	19416	the
O	19417	19424	meaning
O	19425	19427	of
O	19428	19431	the
O	19432	19438	source
O	19439	19443	code
O	19443	19444	.

O	19445	19449	This
O	19450	19452	is
O	19453	19456	the
O	19457	19463	reason
O	19464	19467	for
O	19468	19475	another
O	19476	19481	weird
O	19482	19489	feature
O	19490	19495	which
O	19496	19500	hasn
O	19500	19501	’
O	19501	19502	t
O	19503	19507	even
O	19508	19517	mentioned
O	19517	19518	:
O	19519	19522	the
O	19523	19524	\
O	19524	19534	uuuuuuxxxx
O	19535	19541	syntax
O	19541	19542	:
O	19543	19547	When
O	19548	19549	a
O	19550	19561	translation
O	19562	19566	tool
O	19567	19569	is
O	19570	19578	escaping
O	19579	19589	characters
O	19590	19593	and
O	19594	19604	encounters
O	19605	19606	a
O	19607	19615	sequence
O	19616	19620	that
O	19621	19623	is
O	19624	19631	already
O	19632	19634	an
O	19635	19642	escaped
O	19643	19651	sequence
O	19651	19652	,
O	19653	19655	it
O	19656	19662	should
O	19663	19669	insert
O	19670	19672	an
O	19673	19683	additional
O	19684	19685	u
O	19686	19690	into
O	19691	19694	the
O	19695	19703	sequence
O	19703	19704	,
O	19705	19715	converting
O	19716	19717	\
O	19717	19722	ucafe
O	19723	19725	to
O	19726	19727	\
O	19727	19733	uucafe
O	19734	19735	.

O	19736	19739	The
O	19740	19747	meaning
O	19748	19753	doesn
O	19753	19754	’
O	19754	19755	t
O	19756	19762	change
O	19762	19763	,
O	19764	19767	but
O	19768	19772	when
O	19773	19783	converting
O	19784	19788	into
O	19789	19792	the
O	19793	19798	other
O	19799	19808	direction
O	19808	19809	,
O	19810	19813	the
O	19814	19818	tool
O	19819	19825	should
O	19826	19830	just
O	19831	19837	remove
O	19838	19841	one
O	19842	19843	u
O	19844	19847	and
O	19848	19855	replace
O	19856	19860	only
O	19861	19870	sequences
O	19871	19881	containing
O	19882	19883	a
O	19884	19890	single
O	19891	19892	u
O	19893	19895	by
O	19896	19901	their
O	19902	19909	Unicode
O	19910	19920	characters
O	19920	19921	.

O	19922	19926	That
O	19927	19930	way
O	19930	19931	,
O	19932	19936	even
O	19937	19944	Unicode
O	19945	19952	escapes
O	19953	19956	are
O	19957	19965	retained
O	19966	19968	in
O	19969	19974	their
O	19975	19983	original
O	19984	19988	form
O	19989	19993	when
O	19994	20004	converting
O	20005	20009	back
O	20010	20013	and
O	20014	20019	forth
O	20019	20020	.

O	20021	20022	I
O	20023	20028	guess
O	20028	20029	,
O	20030	20032	no
O	20032	20033	-
O	20033	20036	one
O	20037	20041	ever
O	20042	20046	used
O	20047	20051	that
O	20052	20059	feature
O	20059	20060	…

O	20062	20070	Question
O	20070	20071	-
O	20071	20079	27747562
O	20079	20080	,
O	20081	20087	answer
O	20087	20088	-
O	20088	20096	27747702

O	20097	20098	A
B-api_mention	20099	20103	List
I-api_mention	20103	20104	<
I-api_mention	20104	20105	T
I-api_mention	20105	20106	>
O	20107	20112	could
O	20113	20117	very
O	20118	20122	well
O	20123	20125	be
O	20126	20128	an
B-api_mention	20129	20133	Item
O	20133	20134	.

O	20135	20138	See
O	20139	20142	for
O	20143	20150	example
O	20150	20151	:
O	20152	20153	#
O	20153	20156	pre
O	20157	20158	A
O	20159	20163	cast
O	20164	20169	tells
O	20170	20173	the
O	20174	20182	compiler
O	20182	20183	:
O	20184	20185	"
O	20185	20186	I
O	20187	20191	know
O	20192	20195	you
O	20196	20199	can
O	20199	20200	'
O	20200	20201	t
O	20202	20204	be
O	20205	20209	sure
O	20210	20214	that
O	20215	20219	this
O	20220	20222	is
O	20223	20224	a
O	20225	20231	object
O	20232	20234	of
O	20235	20239	type
O	20240	20244	Item
O	20244	20245	,
O	20246	20249	but
O	20250	20251	I
O	20252	20256	know
O	20257	20263	better
O	20264	20268	than
O	20269	20272	you
O	20272	20273	,
O	20274	20276	so
O	20277	20283	please
O	20284	20291	compile
O	20291	20292	"
O	20292	20293	.

O	20294	20297	The
O	20298	20306	compiler
O	20307	20311	will
O	20312	20316	only
O	20317	20323	refuse
O	20324	20326	to
O	20327	20334	compile
O	20335	20339	that
O	20340	20342	if
O	20343	20345	it
O	20345	20346	'
O	20346	20347	s
O	20348	20358	impossible
O	20359	20362	for
O	20363	20366	the
O	20367	20375	returned
O	20376	20382	object
O	20383	20385	to
O	20386	20388	be
O	20389	20391	an
O	20392	20400	instance
O	20401	20403	of
B-api_mention	20404	20408	Item
O	20409	20410	(
O	20410	20414	like
O	20414	20415	,
O	20416	20419	for
O	20420	20427	example
O	20427	20428	,
B-api_mention	20429	20436	Integer
O	20437	20440	can
O	20440	20441	'
O	20441	20442	t
O	20443	20447	ever
O	20448	20450	be
O	20451	20452	a
B-api_mention	20453	20459	String
O	20460	20461	)
O	20462	20464	At
O	20465	20472	runtime
O	20472	20473	,
O	20474	20477	the
O	20478	20482	type
O	20483	20485	of
O	20486	20489	the
O	20490	20496	actual
O	20497	20503	object
O	20504	20512	returned
O	20513	20515	by
O	20516	20519	the
O	20520	20526	method
O	20527	20531	will
O	20532	20534	be
O	20535	20542	checked
O	20542	20543	,
O	20544	20547	and
O	20548	20550	if
O	20551	20553	it
O	20553	20554	'
O	20554	20555	s
O	20556	20559	not
O	20560	20568	actually
O	20569	20571	an
O	20572	20578	object
O	20579	20581	of
O	20582	20586	type
O	20587	20591	Item
O	20591	20592	,
O	20593	20596	you
O	20596	20597	'
O	20597	20599	ll
O	20600	20603	get
O	20604	20605	a
B-api_mention	20606	20624	ClassCastException
O	20624	20625	.

O	20627	20635	Question
O	20635	20636	-
O	20636	20644	29183904
O	20644	20645	,
O	20646	20652	answer
O	20652	20653	-
O	20653	20661	29972028

O	20662	20665	Use
O	20666	20670	enum
O	20671	20675	when
O	20676	20679	you
O	20680	20684	need
O	20685	20688	its
O	20689	20697	features
O	20697	20698	.

O	20699	20702	Don
O	20702	20703	'
O	20703	20704	t
O	20705	20710	avoid
O	20711	20713	it
O	20714	20722	strictly
O	20723	20724	.

O	20725	20729	Java
O	20730	20734	enum
O	20735	20737	is
O	20738	20742	more
O	20743	20751	powerful
O	20751	20752	,
O	20753	20756	but
O	20757	20759	if
O	20760	20763	you
O	20764	20767	don
O	20767	20768	'
O	20768	20769	t
O	20770	20774	need
O	20775	20778	its
O	20779	20787	features
O	20787	20788	,
O	20789	20792	use
O	20793	20802	constants
O	20802	20803	,
O	20804	20808	they
O	20809	20815	occupy
O	20816	20820	less
O	20821	20826	space
O	20827	20830	and
O	20831	20835	they
O	20836	20839	can
O	20840	20842	be
O	20843	20852	primitive
O	20853	20859	itself
O	20859	20860	.

O	20861	20865	When
O	20866	20868	to
O	20869	20872	use
O	20873	20877	enum
O	20877	20878	:
O	20879	20880	#
O	20880	20882	li
O	20883	20887	type
O	20888	20896	checking
O	20897	20898	-
O	20899	20902	you
O	20903	20906	can
O	20907	20913	accept
O	20914	20918	only
O	20919	20925	listed
O	20926	20932	values
O	20932	20933	,
O	20934	20937	and
O	20938	20942	they
O	20943	20946	are
O	20947	20950	not
O	20951	20961	continuous
O	20962	20963	(
O	20963	20966	see
O	20967	20972	below
O	20973	20977	what
O	20978	20979	I
O	20980	20984	call
O	20985	20995	continuous
O	20996	21000	here
O	21000	21001	)
O	21002	21003	#
O	21003	21005	li
O	21006	21012	method
O	21013	21024	overloading
O	21025	21026	-
O	21027	21032	every
O	21033	21037	enum
O	21038	21046	constant
O	21047	21050	has
O	21051	21054	its
O	21055	21058	own
O	21059	21073	implementation
O	21074	21076	of
O	21077	21078	a
O	21079	21085	method
O	21086	21087	#
O	21087	21090	pre
O	21091	21092	#
O	21092	21094	li
O	21095	21099	more
O	21100	21104	data
O	21105	21106	-
O	21107	21111	your
O	21112	21115	one
O	21116	21124	constant
O	21125	21133	contains
O	21134	21138	more
O	21139	21143	than
O	21144	21147	one
O	21148	21159	information
O	21160	21164	that
O	21165	21171	cannot
O	21172	21174	be
O	21175	21178	put
O	21179	21181	in
O	21182	21185	one
O	21186	21194	variable
O	21195	21196	#
O	21196	21198	li
O	21199	21210	complicated
O	21211	21215	data
O	21216	21217	-
O	21218	21222	your
O	21223	21231	constant
O	21232	21236	need
O	21237	21244	methods
O	21245	21247	to
O	21248	21255	operate
O	21256	21258	on
O	21259	21262	the
O	21263	21267	data
O	21268	21272	When
O	21273	21276	not
O	21277	21279	to
O	21280	21283	use
O	21284	21288	enum
O	21288	21289	:
O	21290	21291	#
O	21291	21293	li
O	21294	21297	you
O	21298	21301	can
O	21302	21308	accept
O	21309	21312	all
O	21313	21319	values
O	21320	21322	of
O	21323	21326	one
O	21327	21331	type
O	21331	21332	,
O	21333	21336	and
O	21337	21341	your
O	21342	21351	constants
O	21352	21359	contain
O	21360	21364	only
O	21365	21370	these
O	21371	21375	most
O	21376	21380	used
O	21381	21382	#
O	21382	21384	li
O	21385	21388	you
O	21389	21392	can
O	21393	21399	accept
O	21400	21410	continuous
O	21411	21415	data
O	21416	21417	#
O	21417	21420	pre
O	21421	21422	#
O	21422	21424	li
O	21425	21428	for
O	21429	21434	names
O	21435	21436	(
O	21436	21440	like
O	21441	21443	in
O	21444	21448	your
O	21449	21456	example
O	21456	21457	)
O	21458	21459	#
O	21459	21461	li
O	21462	21465	for
O	21466	21476	everything
O	21477	21482	other
O	21483	21487	that
O	21488	21494	really
O	21495	21500	doesn
O	21500	21501	'
O	21501	21502	t
O	21503	21507	need
O	21508	21510	an
O	21511	21515	enum
O	21516	21520	Enum
O	21521	21529	occupies
O	21530	21534	more
O	21535	21540	space
O	21541	21542	#
O	21542	21544	li
O	21545	21546	a
O	21547	21553	single
O	21554	21563	reference
O	21564	21566	to
O	21567	21569	an
O	21570	21574	enum
O	21575	21583	constant
O	21584	21590	occupy
O	21591	21592	4
O	21593	21598	bytes
O	21599	21600	#
O	21600	21602	li
O	21603	21608	every
O	21609	21613	enum
O	21614	21622	constant
O	21623	21629	occupy
O	21630	21635	space
O	21636	21640	that
O	21641	21643	is
O	21644	21645	a
O	21646	21649	sum
O	21650	21652	of
O	21653	21656	its
O	21657	21663	fields
O	21663	21664	'
O	21665	21670	sizes
O	21671	21678	aligned
O	21679	21681	to
O	21682	21683	8
O	21684	21689	bytes
O	21690	21691	+
O	21692	21700	overhead
O	21701	21703	of
O	21704	21707	the
O	21708	21714	object
O	21715	21716	#
O	21716	21718	li
O	21719	21722	the
O	21723	21727	enum
O	21728	21733	class
O	21734	21740	itself
O	21741	21747	occupy
O	21748	21752	some
O	21753	21758	space
O	21759	21767	Constant
O	21768	21776	occupies
O	21777	21781	less
O	21782	21787	space
O	21788	21789	#
O	21789	21791	li
O	21792	21793	a
O	21794	21802	constant
O	21803	21808	doesn
O	21808	21809	'
O	21809	21810	t
O	21811	21815	have
O	21816	21817	a
O	21818	21827	reference
O	21828	21830	so
O	21831	21833	it
O	21833	21834	'
O	21834	21835	s
O	21836	21837	a
O	21838	21842	pure
O	21843	21847	data
O	21848	21849	(
O	21849	21853	even
O	21854	21856	if
O	21857	21859	it
O	21859	21860	'
O	21860	21861	s
O	21862	21863	a
O	21864	21873	reference
O	21873	21874	,
O	21875	21879	then
O	21880	21884	enum
O	21885	21893	instance
O	21894	21899	would
O	21900	21902	be
O	21903	21904	a
O	21905	21914	reference
O	21915	21917	to
O	21918	21925	another
O	21926	21935	reference
O	21935	21936	)
O	21937	21938	#
O	21938	21940	li
O	21941	21950	constants
O	21951	21954	may
O	21955	21957	be
O	21958	21963	added
O	21964	21966	to
O	21967	21975	existing
O	21976	21981	class
O	21982	21983	-
O	21984	21986	it
O	21986	21987	'
O	21987	21988	s
O	21989	21992	not
O	21993	22002	necessary
O	22003	22005	to
O	22006	22009	add
O	22010	22017	another
O	22018	22023	class
O	22024	22025	#
O	22025	22027	li
O	22028	22037	constants
O	22038	22041	may
O	22042	22044	be
O	22045	22052	inlined
O	22052	22053	;
O	22054	22056	it
O	22057	22063	brings
O	22064	22072	extended
O	22073	22080	compile
O	22080	22081	-
O	22081	22085	time
O	22086	22094	features
O	22095	22096	(
O	22096	22100	such
O	22101	22103	as
O	22104	22108	null
O	22109	22117	checking
O	22117	22118	,
O	22119	22126	finding
O	22127	22131	dead
O	22132	22136	code
O	22137	22140	etc
O	22140	22141	.
O	22141	22142	)

O	22144	22152	Question
O	22152	22153	-
O	22153	22161	28818506
O	22161	22162	,
O	22163	22169	answer
O	22169	22170	-
O	22170	22178	28818627

O	22179	22186	Perhaps
O	22187	22191	this
O	22192	22194	is
O	22195	22199	what
O	22200	22203	you
O	22203	22204	'
O	22204	22206	re
O	22207	22212	after
O	22212	22213	:
O	22214	22217	Get
O	22218	22223	value
O	22224	22228	from
O	22229	22232	one
B-api_mention	22233	22241	Optional
O	22242	22244	or
O	22245	22252	another
O	22253	22262	Otherwise
O	22262	22263	,
O	22264	22267	you
O	22268	22271	may
O	22272	22276	want
O	22277	22279	to
O	22280	22284	have
O	22285	22286	a
O	22287	22291	look
O	22292	22294	at
B-api_mention	22295	22303	Optional
I-api_mention	22303	22304	.
I-api_mention	22304	22313	orElseGet
O	22314	22315	.

O	22316	22320	Here
O	22320	22321	'
O	22321	22322	s
O	22323	22325	an
O	22326	22333	example
O	22334	22336	of
O	22337	22341	what
O	22342	22343	I
O	22344	22349	think
O	22350	22354	that
O	22355	22358	you
O	22358	22359	'
O	22359	22361	re
O	22362	22367	after
O	22367	22368	:
O	22369	22375	result
O	22376	22377	=
B-api_mention	22378	22386	Optional
I-api_mention	22386	22387	.
I-api_mention	22387	22397	ofNullable
I-api_mention	22397	22398	(
I-api_mention	22398	22402	args
I-api_mention	22402	22403	)
O	22403	22404	;

O	22406	22414	Question
O	22414	22415	-
O	22415	22423	28818506
O	22423	22424	,
O	22425	22431	answer
O	22431	22432	-
O	22432	22440	28821352

O	22441	22443	It
O	22443	22444	'
O	22444	22445	s
O	22446	22449	not
O	22450	22456	pretty
O	22456	22457	,
O	22458	22461	but
O	22462	22466	this
O	22467	22471	will
O	22472	22476	work
O	22476	22477	:
O	22478	22484	return
O	22485	22493	serviceA
O	22493	22494	(
O	22494	22498	args
O	22498	22499	)
B-api_mention	22500	22501	.
I-api_mention	22501	22504	map
I-api_mention	22504	22505	(
I-api_mention	22505	22509	args
I-api_mention	22509	22510	)
I-api_mention	22510	22511	.
I-api_mention	22511	22520	orElseGet
I-api_mention	22520	22521	(
I-api_mention	22521	22525	args
I-api_mention	22525	22526	)
I-api_mention	22527	22528	.
I-api_mention	22528	22531	map
I-api_mention	22531	22532	(
I-api_mention	22532	22536	args
I-api_mention	22536	22537	)
I-api_mention	22537	22538	.
I-api_mention	22538	22547	orElseGet
I-api_mention	22547	22548	(
I-api_mention	22548	22552	args
I-api_mention	22552	22553	)
I-api_mention	22554	22555	.
I-api_mention	22555	22558	map
I-api_mention	22558	22559	(
I-api_mention	22559	22563	args
I-api_mention	22563	22564	)
I-api_mention	22564	22565	.
I-api_mention	22565	22574	orElseGet
I-api_mention	22574	22575	(
I-api_mention	22575	22579	args
I-api_mention	22579	22580	)
O	22580	22581	;
B-api_mention	22582	22583	.
I-api_mention	22583	22586	map
I-api_mention	22586	22587	(
I-api_mention	22587	22591	args
I-api_mention	22591	22592	)
I-api_mention	22592	22593	.
I-api_mention	22593	22602	orElseGet
I-api_mention	22602	22603	(
I-api_mention	22603	22607	args
I-api_mention	22607	22608	)
O	22609	22611	is
O	22612	22613	a
O	22614	22620	fairly
O	22621	22626	handy
O	22627	22634	pattern
O	22635	22638	for
O	22639	22642	use
O	22643	22647	with
B-api_mention	22648	22656	Optional
O	22657	22658	.

O	22659	22661	It
O	22662	22667	means
O	22668	22669	"
O	22669	22671	If
O	22672	22676	this
B-api_mention	22677	22685	Optional
O	22686	22694	contains
O	22695	22700	value
O	22701	22702	v
O	22703	22704	,
O	22705	22709	give
O	22710	22712	me
O	22713	22717	func
O	22717	22718	(
O	22718	22722	args
O	22722	22723	)
O	22724	22725	,
O	22726	22735	otherwise
O	22736	22740	give
O	22741	22743	me
O	22744	22747	sup
B-api_mention	22747	22748	.
I-api_mention	22748	22751	get
I-api_mention	22751	22752	(
I-api_mention	22752	22756	args
I-api_mention	22756	22757	)
O	22758	22759	"
O	22759	22760	.

O	22761	22763	In
O	22764	22768	this
O	22769	22773	case
O	22773	22774	,
O	22775	22777	we
O	22778	22782	call
O	22783	22791	serviceA
O	22791	22792	(
O	22792	22796	args
O	22796	22797	)
O	22798	22801	and
O	22802	22805	get
O	22806	22808	an
B-api_mention	22809	22817	Optional
I-api_mention	22817	22818	<
I-api_mention	22818	22819	T
I-api_mention	22819	22820	>
O	22821	22822	.

O	22823	22825	If
O	22826	22830	that
B-api_mention	22831	22839	Optional
O	22840	22848	contains
O	22849	22854	value
O	22855	22856	v
O	22857	22858	,
O	22859	22861	we
O	22862	22866	want
O	22867	22869	to
O	22870	22873	get
B-api_mention	22874	22882	Optional
I-api_mention	22882	22883	.
I-api_mention	22883	22885	of
I-api_mention	22885	22886	(
I-api_mention	22886	22890	args
I-api_mention	22890	22891	)
O	22892	22893	,
O	22894	22897	but
O	22898	22900	if
O	22901	22903	it
O	22904	22906	is
O	22907	22912	empty
O	22912	22913	,
O	22914	22916	we
O	22917	22921	want
O	22922	22924	to
O	22925	22928	get
O	22929	22937	serviceB
O	22937	22938	(
O	22938	22942	args
O	22942	22943	)
O	22944	22945	.

O	22946	22951	Rinse
O	22951	22952	-
O	22952	22958	repeat
O	22959	22963	with
O	22964	22968	more
O	22969	22981	alternatives
O	22981	22982	.

O	22983	22988	Other
O	22989	22993	uses
O	22994	22996	of
O	22997	23001	this
O	23002	23009	pattern
O	23010	23013	are
O	23014	23015	#
O	23015	23017	li
B-api_mention	23018	23019	.
I-api_mention	23019	23022	map
I-api_mention	23022	23023	(
I-api_mention	23023	23027	args
I-api_mention	23027	23028	)
I-api_mention	23028	23029	.
I-api_mention	23029	23038	orElseGet
I-api_mention	23038	23039	(
I-api_mention	23039	23043	args
I-api_mention	23043	23044	)
O	23045	23046	#
O	23046	23048	li
B-api_mention	23049	23050	.
I-api_mention	23050	23053	map
I-api_mention	23053	23054	(
I-api_mention	23054	23058	args
I-api_mention	23058	23059	)
I-api_mention	23059	23060	.
I-api_mention	23060	23069	orElseGet
I-api_mention	23069	23070	(
I-api_mention	23070	23074	args
I-api_mention	23074	23075	)

O	23077	23085	Question
O	23085	23086	-
O	23086	23094	28818506
O	23094	23095	,
O	23096	23102	answer
O	23102	23103	-
O	23103	23111	28833677

O	23112	23115	The
O	23116	23124	cleanest
O	23125	23126	“
O	23126	23129	try
O	23130	23138	services
O	23138	23139	”
O	23140	23148	approach
O	23149	23154	given
O	23155	23158	the
O	23159	23166	current
O	23167	23170	API
O	23171	23176	would
O	23177	23179	be
O	23179	23180	:
B-api_mention	23181	23189	Optional
I-api_mention	23189	23190	<
I-api_mention	23190	23191	T
I-api_mention	23191	23192	>
O	23193	23194	o
O	23195	23196	=
B-api_mention	23197	23203	Stream
I-api_mention	23203	23204	.
I-api_mention	23204	23205	<
I-api_mention	23205	23213	Supplier
I-api_mention	23213	23214	<
I-api_mention	23214	23215	T
I-api_mention	23215	23216	>
I-api_mention	23216	23217	>
I-api_mention	23217	23219	of
I-api_mention	23219	23220	(
I-api_mention	23220	23224	args
I-api_mention	23224	23225	)
I-api_mention	23226	23227	.
I-api_mention	23227	23230	map
I-api_mention	23230	23231	(
I-api_mention	23231	23235	args
I-api_mention	23235	23236	)
I-api_mention	23237	23238	.
I-api_mention	23238	23244	filter
I-api_mention	23244	23245	(
I-api_mention	23245	23249	args
I-api_mention	23249	23250	)
I-api_mention	23251	23252	.
I-api_mention	23252	23255	map
I-api_mention	23255	23256	(
I-api_mention	23256	23260	args
I-api_mention	23260	23261	)
I-api_mention	23262	23263	.
I-api_mention	23263	23272	findFirst
I-api_mention	23272	23273	(
I-api_mention	23273	23277	args
I-api_mention	23277	23278	)
O	23278	23279	;
O	23280	23283	The
O	23284	23293	important
O	23294	23300	aspect
O	23301	23303	is
O	23304	23307	not
O	23308	23311	the
O	23312	23313	(
O	23313	23321	constant
O	23321	23322	)
O	23323	23328	chain
O	23329	23331	of
O	23332	23342	operations
O	23343	23346	you
O	23347	23351	have
O	23352	23354	to
O	23355	23360	write
O	23361	23365	once
O	23366	23369	but
O	23370	23373	how
O	23374	23378	easy
O	23379	23381	it
O	23382	23384	is
O	23385	23387	to
O	23388	23391	add
O	23392	23399	another
O	23400	23407	service
O	23408	23409	(
O	23409	23411	or
O	23412	23418	modify
O	23419	23422	the
O	23423	23427	list
O	23428	23430	of
O	23431	23439	services
O	23440	23442	is
O	23443	23450	general
O	23450	23451	)
O	23451	23452	.

O	23453	23457	Here
O	23457	23458	,
O	23459	23465	adding
O	23466	23468	or
O	23469	23477	removing
O	23478	23479	a
O	23480	23486	single
O	23487	23488	(
O	23488	23489	)
O	23489	23490	-
O	23490	23491	>
O	23491	23499	serviceX
O	23499	23500	(
O	23500	23504	args
O	23504	23505	)
O	23506	23508	is
O	23509	23515	enough
O	23515	23516	.

O	23517	23520	Due
O	23521	23523	to
O	23524	23527	the
O	23528	23532	lazy
O	23533	23543	evaluation
O	23544	23546	of
O	23547	23554	streams
O	23554	23555	,
O	23556	23558	no
O	23559	23566	service
O	23567	23571	will
O	23572	23574	be
O	23575	23582	invoked
O	23583	23585	if
O	23586	23587	a
O	23588	23597	preceding
O	23598	23605	service
O	23606	23614	returned
O	23615	23616	a
O	23617	23620	non
O	23620	23621	-
O	23621	23626	empty
B-api_mention	23627	23635	Optional
O	23636	23637	.

O	23639	23647	Question
O	23647	23648	-
O	23648	23656	28818506
O	23656	23657	,
O	23658	23664	answer
O	23664	23665	-
O	23665	23673	32653133

O	23674	23678	This
O	23679	23681	is
O	23682	23687	looks
O	23688	23692	like
O	23693	23694	a
O	23695	23699	good
O	23700	23703	fit
O	23704	23707	for
O	23708	23715	pattern
O	23716	23724	matching
O	23725	23728	and
O	23729	23730	a
O	23731	23735	more
O	23736	23747	traditional
B-api_mention	23748	23754	Option
O	23755	23764	interface
O	23765	23769	with
O	23770	23774	Some
O	23775	23778	and
O	23779	23783	None
O	23784	23799	implementations
O	23800	23801	(
O	23801	23805	such
O	23806	23808	as
O	23809	23814	those
O	23815	23817	in
O	23818	23827	Javaslang
O	23828	23829	,
O	23830	23844	FunctionalJava
O	23845	23846	)
O	23847	23849	or
O	23850	23851	a
O	23852	23856	lazy
O	23857	23862	Maybe
O	23863	23877	implementation
O	23878	23880	in
O	23881	23888	cyclops
O	23888	23889	-
O	23889	23894	react
O	23895	23896	.
O	23896	23897	I
O	23897	23898	'
O	23898	23899	m
O	23900	23903	the
O	23904	23910	author
O	23911	23913	of
O	23914	23918	this
O	23919	23926	library
O	23926	23927	.

O	23928	23932	With
O	23933	23940	cyclops
O	23940	23941	-
O	23941	23946	react
O	23947	23950	you
O	23951	23954	can
O	23955	23959	also
O	23960	23963	use
O	23964	23974	structural
O	23975	23982	pattern
O	23983	23991	matching
O	23992	23994	on
O	23995	23998	JDK
O	23999	24004	types
O	24004	24005	.

O	24006	24009	For
B-api_mention	24010	24018	Optional
O	24019	24022	you
O	24023	24026	can
O	24027	24032	match
O	24033	24035	on
O	24036	24039	the
O	24040	24047	present
O	24048	24051	and
O	24052	24058	absent
O	24059	24064	cases
O	24065	24068	via
O	24069	24072	the
O	24073	24080	visitor
O	24081	24088	pattern
O	24089	24090	.

O	24091	24093	it
O	24094	24099	would
O	24100	24104	look
O	24105	24114	something
O	24115	24119	like
O	24120	24124	this
O	24125	24126	-
O	24127	24128	#
O	24128	24131	pre

O	24133	24141	Question
O	24141	24142	-
O	24142	24150	28818506
O	24150	24151	,
O	24152	24158	answer
O	24158	24159	-
O	24159	24167	38560612

O	24168	24172	This
O	24173	24175	is
O	24176	24180	part
O	24181	24183	of
O	24184	24187	JDK
O	24188	24189	9
O	24190	24192	in
O	24193	24196	the
O	24197	24201	form
O	24202	24204	of
O	24205	24207	or
O	24208	24209	,
O	24210	24215	which
O	24216	24221	takes
O	24222	24223	a
B-api_mention	24224	24232	Supplier
I-api_mention	24232	24233	<
I-api_mention	24233	24234	T
I-api_mention	24234	24235	>
O	24236	24237	.

O	24238	24242	Your
O	24243	24250	example
O	24251	24256	would
O	24257	24261	then
O	24262	24264	be
O	24264	24265	:
O	24266	24272	return
O	24273	24281	serviceA
O	24281	24282	(
O	24282	24286	args
O	24286	24287	)
O	24288	24289	.
O	24289	24291	or
O	24291	24292	(
O	24292	24296	args
O	24296	24297	)
O	24298	24299	.
O	24299	24301	or
O	24301	24302	(
O	24302	24306	args
O	24306	24307	)
O	24307	24308	;
O	24309	24312	For
O	24313	24320	details
O	24321	24324	see
O	24325	24328	the
O	24329	24330	(
O	24330	24341	preliminary
O	24341	24342	)
O	24343	24350	Javadoc
O	24351	24353	or
O	24354	24358	this
O	24359	24363	post
O	24364	24365	I
O	24366	24371	wrote
O	24371	24372	.

O	24374	24382	Question
O	24382	24383	-
O	24383	24391	29328785
O	24391	24392	,
O	24393	24399	answer
O	24399	24400	-
O	24400	24408	29330741

O	24409	24411	It
O	24411	24412	'
O	24412	24413	s
O	24414	24417	not
O	24418	24420	so
O	24421	24425	hard
O	24426	24428	to
O	24429	24434	track
O	24435	24439	down
O	24440	24443	the
O	24444	24450	reason
O	24451	24454	for
O	24455	24458	the
O	24459	24462	odd
O	24463	24471	behavior
O	24471	24472	.

O	24473	24476	The
O	24477	24483	divide
O	24484	24488	call
O	24489	24493	goes
O	24494	24496	to
O	24497	24498	#
O	24498	24501	pre
O	24502	24506	This
O	24506	24507	,
O	24508	24518	internally
O	24518	24519	,
O	24520	24529	delegates
O	24530	24532	to
O	24533	24540	another
O	24541	24547	divide
O	24548	24554	method
O	24554	24555	,
O	24556	24561	based
O	24562	24564	on
O	24565	24568	the
O	24569	24577	rounding
O	24578	24582	mode
O	24582	24583	:
O	24584	24585	#
O	24585	24588	pre
O	24589	24591	In
O	24592	24596	this
O	24597	24601	case
O	24601	24602	,
O	24603	24606	the
O	24607	24611	last
O	24612	24616	call
O	24617	24624	applies
O	24624	24625	.

O	24626	24630	Note
O	24631	24635	that
O	24636	24639	the
O	24640	24646	intVal
O	24647	24648	(
O	24648	24653	which
O	24654	24656	is
O	24657	24658	a
B-api_mention	24659	24669	BigInteger
O	24670	24674	that
O	24675	24677	is
O	24678	24684	stored
O	24685	24687	in
O	24688	24691	the
B-api_mention	24692	24702	BigDecimal
O	24703	24704	)
O	24705	24707	is
O	24708	24714	passed
O	24715	24723	directly
O	24724	24726	to
O	24727	24731	this
O	24732	24738	method
O	24739	24741	as
O	24742	24745	the
O	24746	24751	first
O	24752	24760	argument
O	24760	24761	:
O	24762	24763	#
O	24763	24766	pre
O	24767	24774	Finally
O	24774	24775	,
O	24776	24779	the
O	24780	24784	path
O	24785	24787	to
O	24788	24791	the
O	24792	24798	second
O	24799	24813	divideAndRound
O	24814	24816	is
O	24817	24822	taken
O	24823	24827	here
O	24827	24828	,
O	24829	24834	again
O	24835	24842	passing
O	24843	24846	the
O	24847	24855	dividend
O	24856	24858	on
O	24859	24860	(
O	24860	24865	which
O	24866	24869	was
O	24870	24873	the
O	24874	24880	intVal
O	24881	24883	of
O	24884	24887	the
O	24888	24896	original
B-api_mention	24897	24907	BigDecimal
O	24908	24909	)
O	24909	24910	,
O	24911	24917	ending
O	24918	24920	up
O	24921	24925	with
O	24926	24930	this
O	24931	24935	code
O	24935	24936	:
O	24937	24938	#
O	24938	24941	pre
O	24942	24945	And
O	24946	24950	this
O	24951	24953	is
O	24954	24959	where
O	24960	24963	the
O	24964	24969	error
O	24970	24972	is
O	24973	24983	introduced
O	24983	24984	:
O	24985	24988	The
O	24989	25000	mdivididend
O	25001	25003	is
O	25004	25005	a
O	25006	25013	mutable
B-api_mention	25014	25024	BigInteger
O	25025	25026	,
O	25027	25031	that
O	25032	25035	was
O	25036	25043	created
O	25044	25046	as
O	25047	25048	a
O	25049	25056	mutable
O	25057	25061	view
O	25062	25064	on
O	25065	25068	the
O	25069	25072	mag
O	25073	25078	array
O	25079	25081	of
O	25082	25085	the
B-api_mention	25086	25096	BigInteger
O	25097	25101	that
O	25102	25104	is
O	25105	25111	stored
O	25112	25114	in
O	25115	25118	the
B-api_mention	25119	25129	BigDecimal
O	25130	25131	x
O	25132	25136	from
O	25137	25140	the
O	25141	25149	original
O	25150	25154	call
O	25154	25155	.

O	25156	25159	The
O	25160	25168	division
O	25169	25177	modifies
O	25178	25181	the
O	25182	25185	mag
O	25186	25191	field
O	25191	25192	,
O	25193	25196	and
O	25197	25201	thus
O	25201	25202	,
O	25203	25206	the
O	25207	25212	state
O	25213	25215	of
O	25216	25219	the
O	25220	25221	(
O	25221	25224	now
O	25225	25228	not
O	25228	25229	-
O	25229	25231	so
O	25231	25232	-
O	25232	25241	immutable
O	25241	25242	)
B-api_mention	25243	25253	BigDecimal
O	25254	25255	.

O	25256	25260	This
O	25261	25263	is
O	25264	25271	clearly
O	25272	25273	a
O	25274	25277	bug
O	25278	25280	in
O	25281	25284	the
O	25285	25299	implementation
O	25300	25302	of
O	25303	25306	one
O	25307	25309	of
O	25310	25313	the
O	25314	25320	divide
O	25321	25328	methods
O	25328	25329	.

O	25330	25331	I
O	25332	25339	already
O	25340	25347	started
O	25348	25356	tracking
O	25357	25360	the
O	25361	25367	change
O	25368	25372	sets
O	25373	25375	of
O	25376	25379	the
O	25380	25387	OpenJDK
O	25387	25388	,
O	25389	25392	but
O	25393	25397	have
O	25398	25401	not
O	25402	25405	yet
O	25406	25413	spotted
O	25414	25417	the
O	25418	25426	definite
O	25427	25434	culprit
O	25434	25435	.

O	25436	25437	(
O	25438	25442	Edit
O	25442	25443	:
O	25444	25447	See
O	25448	25455	updates
O	25456	25461	below
O	25462	25463	)
O	25464	25465	(
O	25465	25466	A
O	25467	25471	side
O	25472	25476	note
O	25476	25477	:
O	25478	25485	Calling
O	25486	25487	x
B-api_mention	25487	25488	.
I-api_mention	25488	25496	toString
I-api_mention	25496	25497	(
I-api_mention	25497	25501	args
I-api_mention	25501	25502	)
O	25503	25509	before
O	25510	25515	doing
O	25516	25519	the
O	25520	25528	division
O	25529	25533	does
O	25534	25537	not
O	25538	25544	really
O	25545	25550	avoid
O	25551	25552	,
O	25553	25556	but
O	25557	25561	only
O	25562	25566	hide
O	25567	25570	the
O	25571	25574	bug
O	25574	25575	:
O	25576	25578	It
O	25579	25585	causes
O	25586	25587	a
O	25588	25594	string
O	25595	25600	cache
O	25601	25603	of
O	25604	25607	the
O	25608	25615	correct
O	25616	25621	state
O	25622	25624	to
O	25625	25627	be
O	25628	25635	created
O	25636	25646	internally
O	25646	25647	.
O	25648	25651	The
O	25652	25657	right
O	25658	25663	value
O	25664	25666	is
O	25667	25674	printed
O	25674	25675	,
O	25676	25679	but
O	25680	25683	the
O	25684	25692	internal
O	25693	25698	state
O	25699	25701	is
O	25702	25707	still
O	25708	25713	wrong
O	25714	25715	-
O	25716	25721	which
O	25722	25724	is
O	25725	25735	concerning
O	25735	25736	,
O	25737	25739	to
O	25740	25743	say
O	25744	25747	the
O	25748	25753	least
O	25753	25754	.
O	25754	25755	.
O	25755	25756	.
O	25756	25757	)
O	25758	25759	#
O	25759	25769	blockquote

O	25771	25779	Question
O	25779	25780	-
O	25780	25788	28770822
O	25788	25789	,
O	25790	25796	answer
O	25796	25797	-
O	25797	25805	28816219

O	25806	25813	Looking
O	25814	25816	at
O	25817	25820	the
O	25821	25826	issue
O	25827	25830	and
O	25831	25834	fix
O	25834	25835	,
O	25836	25838	it
O	25839	25844	looks
O	25845	25849	like
O	25850	25854	this
O	25855	25858	has
O	25859	25863	been
O	25864	25868	done
O	25869	25871	to
O	25872	25879	resolve
O	25880	25881	a
O	25882	25890	handling
O	25891	25893	of
O	25894	25895	a
O	25896	25902	header
O	25903	25907	file
O	25908	25918	generation
O	25919	25922	for
O	25923	25930	special
O	25931	25938	classes
O	25939	25941	in
O	25942	25948	jigsaw
O	25949	25955	Jigsaw
O	25956	25958	is
O	25959	25960	a
O	25961	25967	module
O	25968	25974	system
O	25975	25985	designated
O	25986	25988	to
O	25989	25992	use
O	25993	25995	in
O	25996	26000	Java
O	26001	26003	SE
O	26004	26012	Platform
O	26013	26016	and
O	26017	26020	JDK
O	26020	26021	.

O	26022	26026	More
O	26027	26034	details
O	26035	26039	here
O	26040	26044	Here
O	26045	26047	is
O	26048	26049	a
O	26050	26063	corresponding
O	26064	26073	changeset
O	26074	26075	.

O	26076	26079	You
O	26080	26083	can
O	26084	26087	see
O	26088	26089	a
O	26090	26097	comment
O	26097	26098	,
O	26099	26100	#
O	26100	26110	blockquote
O	26111	26115	From
O	26116	26119	the
O	26120	26129	changeset
O	26130	26131	I
O	26132	26135	see
O	26136	26140	that
O	26141	26144	for
O	26145	26148	the
O	26149	26153	sake
O	26154	26156	of
O	26157	26164	purpose
O	26165	26167	in
O	26168	26176	addition
O	26177	26179	to
B-api_mention	26180	26184	java
I-api_mention	26184	26185	.
I-api_mention	26185	26189	lang
I-api_mention	26189	26190	.
I-api_mention	26190	26197	Integer
O	26198	26201	and
B-api_mention	26202	26206	java
I-api_mention	26206	26207	.
I-api_mention	26207	26211	lang
I-api_mention	26211	26212	.
I-api_mention	26212	26216	Long
O	26217	26218	,
O	26219	26223	also
O	26224	26228	some
O	26229	26239	properties
O	26240	26242	in
B-api_mention	26243	26247	java
I-api_mention	26247	26248	.
I-api_mention	26248	26251	net
I-api_mention	26251	26252	.
I-api_mention	26252	26265	SocketOptions
O	26266	26267	,
B-api_mention	26268	26271	sun
I-api_mention	26271	26272	.
I-api_mention	26272	26275	nio
I-api_mention	26275	26276	.
I-api_mention	26276	26278	ch
I-api_mention	26278	26279	.
I-api_mention	26279	26287	IOStatus
O	26288	26289	,
B-api_mention	26290	26294	java
I-api_mention	26294	26295	.
I-api_mention	26295	26297	io
I-api_mention	26297	26298	.
I-api_mention	26298	26308	FileSystem
O	26309	26313	have
O	26314	26318	been
O	26319	26326	changed
O	26327	26329	to
O	26330	26331	@
O	26331	26337	Native
O	26338	26339	.

O	26340	26342	So
O	26343	26344	I
O	26345	26351	assume
O	26352	26356	only
O	26357	26362	those
O	26363	26367	were
O	26368	26374	needed
O	26375	26377	to
O	26378	26383	solve
O	26384	26387	the
O	26388	26398	dependency
O	26399	26403	with
O	26404	26410	jigsaw
O	26410	26411	.

O	26413	26421	Question
O	26421	26422	-
O	26422	26430	28770822
O	26430	26431	,
O	26432	26438	answer
O	26438	26439	-
O	26439	26447	28853754

O	26448	26452	TLDR
O	26453	26454	:
O	26455	26459	Jump
O	26460	26462	to
O	26463	26466	the
O	26467	26477	conclusion
O	26478	26479	#
O	26479	26489	blockquote
O	26490	26491	A
O	26492	26497	brief
O	26498	26505	history
O	26506	26508	of
O	26509	26510	@
O	26510	26516	Native
O	26517	26518	I
O	26519	26523	made
O	26524	26528	some
O	26529	26535	search
O	26536	26538	on
O	26539	26542	the
O	26543	26550	mailing
O	26551	26556	lists
O	26556	26557	.

O	26558	26559	I
O	26560	26565	found
O	26566	26570	some
O	26571	26582	interesting
O	26583	26589	things
O	26589	26590	.

O	26591	26593	At
O	26594	26599	first
O	26600	26602	an
O	26603	26613	annotation
O	26614	26615	(
O	26616	26617	1
O	26618	26619	2
O	26620	26621	)
B-api_mention	26622	26627	javax
I-api_mention	26627	26628	.
I-api_mention	26628	26633	tools
I-api_mention	26633	26634	.
I-api_mention	26634	26644	annotation
I-api_mention	26644	26645	.
I-api_mention	26645	26662	ForceNativeHeader
O	26663	26666	was
O	26667	26677	introduced
O	26678	26680	to
O	26681	26682	#
O	26682	26692	blockquote
O	26693	26695	It
O	26696	26698	is
O	26699	26703	used
O	26704	26706	by
B-api_mention	26707	26710	com
I-api_mention	26710	26711	.
I-api_mention	26711	26714	sun
I-api_mention	26714	26715	.
I-api_mention	26715	26720	tools
I-api_mention	26720	26721	.
I-api_mention	26721	26726	javac
I-api_mention	26726	26727	.
I-api_mention	26727	26737	processing
I-api_mention	26737	26738	.
I-api_mention	26738	26754	NativeapiVisitor
O	26755	26756	.

O	26757	26759	By
O	26760	26767	looking
O	26768	26770	at
O	26771	26774	the
O	26775	26779	code
O	26780	26782	we
O	26783	26786	can
O	26787	26790	see
O	26791	26795	that
O	26796	26799	the
O	26800	26806	native
O	26807	26813	header
O	26814	26816	is
O	26817	26826	generated
O	26827	26829	if
O	26830	26833	the
O	26834	26839	class
O	26840	26847	declare
O	26848	26852	some
O	26853	26859	native
O	26860	26867	methods
O	26868	26870	or
O	26871	26873	if
O	26874	26877	the
O	26878	26883	class
O	26884	26886	is
O	26887	26896	annotated
O	26897	26898	@
O	26898	26915	ForceNativeHeader
O	26916	26917	.

O	26918	26923	Later
O	26924	26928	this
O	26929	26939	annotation
O	26940	26943	was
O	26944	26951	renamed
O	26952	26954	to
B-api_mention	26955	26975	GenerateNativeHeader
O	26976	26977	(
O	26978	26979	1
O	26980	26981	2
O	26982	26983	)
O	26983	26984	.

O	26985	26989	Then
O	26990	26994	this
O	26995	27005	annotation
O	27006	27009	was
O	27010	27015	added
O	27016	27018	to
O	27019	27026	several
O	27027	27032	types
O	27033	27034	(
O	27034	27044	especially
B-api_mention	27045	27052	Integer
O	27053	27056	and
B-api_mention	27057	27061	Long
O	27062	27063	)
O	27064	27068	with
O	27069	27071	an
O	27072	27084	interresting
O	27085	27092	comment
O	27092	27093	:
O	27094	27095	#
O	27095	27098	pre
O	27099	27102	But
O	27103	27105	by
O	27106	27112	adding
O	27113	27117	this
O	27118	27128	annotation
O	27129	27131	it
O	27132	27135	add
O	27136	27137	a
O	27138	27149	problematic
O	27150	27160	dependency
O	27161	27165	from
O	27166	27170	base
O	27171	27177	module
O	27178	27180	to
O	27181	27184	the
O	27185	27191	module
O	27192	27202	containing
O	27203	27208	javax
O	27208	27209	.
O	27209	27214	tools
O	27214	27215	.

O	27216	27218	So
O	27219	27222	the
O	27223	27233	annotation
O	27234	27238	were
O	27239	27246	removed
O	27247	27251	from
B-api_mention	27252	27259	Integer
O	27260	27263	and
B-api_mention	27264	27268	Long
O	27269	27272	and
O	27273	27278	these
O	27279	27284	files
O	27285	27289	were
O	27290	27300	explicitly
O	27301	27306	added
O	27307	27309	to
O	27310	27313	the
O	27314	27319	build
O	27320	27327	process
O	27328	27333	since
O	27334	27337	the
O	27338	27344	header
O	27345	27349	were
O	27350	27352	no
O	27353	27357	more
O	27358	27371	automatically
O	27372	27381	generated
O	27381	27382	.
O	27382	27383	.
O	27383	27384	.

O	27385	27386	a
O	27387	27388	"
O	27388	27389	(
O	27389	27398	hopefully
O	27399	27408	temporary
O	27408	27409	)
O	27410	27414	hack
O	27414	27415	"
O	27416	27417	.

O	27418	27420	So
O	27421	27422	a
O	27423	27426	new
B-api_mention	27427	27437	annotation
I-api_mention	27438	27442	java
I-api_mention	27442	27443	.
I-api_mention	27443	27447	lang
I-api_mention	27447	27448	.
I-api_mention	27448	27458	annotation
I-api_mention	27458	27459	.
I-api_mention	27459	27465	Native
O	27466	27469	was
O	27470	27477	created
O	27478	27481	and
O	27482	27486	used
O	27487	27489	in
B-api_mention	27490	27497	Integer
O	27498	27501	and
B-api_mention	27502	27506	Long
O	27507	27508	.

O	27509	27512	The
O	27513	27523	annotation
O	27524	27527	was
O	27528	27531	set
O	27532	27533	a
O	27534	27544	TargetType
O	27545	27550	FIELD
O	27551	27552	.

O	27553	27554	#
O	27554	27564	blockquote
O	27565	27568	All
O	27569	27572	the
O	27573	27580	purpose
O	27581	27583	of
O	27584	27588	this
O	27589	27594	stuff
O	27595	27597	is
O	27597	27598	:
O	27599	27600	#
O	27600	27610	blockquote
O	27611	27613	It
O	27614	27616	is
O	27617	27620	the
O	27621	27625	case
O	27626	27628	of
B-api_mention	27629	27636	Integer
O	27637	27640	and
B-api_mention	27641	27645	Long
O	27646	27650	this
O	27651	27654	was
O	27655	27656	a
O	27657	27661	part
O	27662	27664	of
O	27665	27668	the
O	27669	27672	JEP
O	27673	27676	139
O	27676	27677	:
O	27678	27685	Enhance
O	27686	27691	javac
O	27692	27694	to
O	27695	27702	Improve
O	27703	27708	Build
O	27709	27714	Speed
O	27715	27716	:
O	27717	27718	#
O	27718	27728	blockquote
O	27729	27730	A
O	27731	27736	basic
O	27737	27752	experimentation
O	27753	27754	I
O	27755	27759	made
O	27760	27761	a
O	27762	27767	basic
O	27768	27783	experimentation
O	27784	27786	on
O	27787	27790	the
O	27791	27794	JDK
O	27794	27795	.

O	27796	27797	I
O	27798	27803	clone
O	27804	27807	the
O	27808	27812	open
O	27812	27813	-
O	27813	27816	jdk
O	27817	27823	forest
O	27824	27827	and
O	27828	27829	i
O	27830	27842	successfully
O	27843	27848	build
O	27849	27851	it
O	27851	27852	.

O	27853	27855	As
O	27856	27864	expected
O	27865	27868	the
O	27869	27875	header
O	27876	27881	files
O	27882	27887	where
O	27888	27897	generated
O	27898	27901	for
B-api_mention	27902	27909	Integer
O	27910	27913	and
B-api_mention	27914	27918	Long
O	27919	27920	(
O	27920	27926	thanks
O	27927	27929	to
O	27930	27931	@
O	27931	27937	Native
O	27938	27939	)
O	27940	27943	and
O	27944	27947	for
B-api_mention	27948	27953	Float
O	27954	27957	and
B-api_mention	27958	27964	Double
O	27965	27966	(
O	27966	27972	thanks
O	27973	27975	to
O	27976	27981	their
O	27982	27988	native
O	27989	27996	methods
O	27996	27997	)
O	27998	28001	but
O	28002	28005	not
O	28006	28009	for
B-api_mention	28010	28014	Byte
O	28015	28016	,
B-api_mention	28017	28022	Short
O	28023	28024	.
O	28024	28025	.
O	28025	28026	.

O	28027	28028	#
O	28028	28031	pre
O	28032	28036	Then
O	28037	28038	i
O	28039	28044	tried
O	28045	28047	to
O	28048	28054	remove
O	28055	28058	the
O	28059	28060	@
O	28060	28066	Native
O	28067	28071	from
O	28072	28075	the
B-api_mention	28076	28083	Integer
O	28084	28090	fields
O	28091	28094	and
O	28095	28096	i
O	28097	28102	tried
O	28103	28105	to
O	28106	28111	build
O	28112	28117	again
O	28118	28121	the
O	28122	28125	jdk
O	28126	28129	but
O	28130	28131	i
O	28132	28135	get
O	28136	28138	an
O	28139	28144	error
O	28144	28145	:
O	28146	28147	#
O	28147	28150	pre
O	28151	28160	logically
O	28161	28166	since
O	28167	28170	the
O	28171	28177	header
O	28178	28182	have
O	28183	28186	not
O	28187	28191	been
O	28192	28201	generated
O	28201	28202	.

O	28203	28204	I
O	28205	28209	have
O	28210	28214	also
O	28215	28224	confirmed
O	28225	28229	that
O	28230	28234	java
O	28234	28235	_
O	28235	28239	lang
O	28239	28240	_
O	28240	28247	Integer
O	28247	28248	.
O	28248	28249	h
O	28250	28252	is
O	28253	28261	included
O	28262	28264	in
O	28265	28272	several
O	28273	28274	c
O	28275	28278	and
O	28279	28282	cpp
O	28283	28288	files
O	28289	28290	:
O	28291	28292	#
O	28292	28295	pre
O	28296	28300	like
B-api_mention	28301	28305	Long
O	28306	28307	#
O	28307	28310	pre
O	28311	28315	like
B-api_mention	28316	28321	Float
O	28322	28323	#
O	28323	28326	pre
O	28327	28330	and
O	28331	28335	like
B-api_mention	28336	28342	Double
O	28343	28344	#
O	28344	28347	pre
O	28348	28351	but
O	28352	28359	neither
B-api_mention	28360	28365	Short
O	28366	28370	find
O	28371	28372	.

O	28373	28374	\
O	28374	28375	(
O	28376	28377	-
O	28377	28381	name
O	28382	28395	StringLiteral
O	28396	28397	-
O	28397	28398	o
O	28399	28400	-
O	28400	28404	name
O	28405	28418	StringLiteral
O	28419	28420	\
O	28420	28421	)
O	28422	28423	-
O	28423	28427	exec
O	28428	28432	grep
O	28433	28446	StringLiteral
O	28447	28448	{
O	28448	28449	}
O	28450	28451	\
O	28451	28452	;
O	28453	28454	-
O	28454	28459	print
O	28460	28463	nor
B-api_mention	28464	28468	Byte
O	28469	28470	,
O	28471	28474	nor
B-api_mention	28475	28484	Character
O	28485	28486	.

O	28487	28497	Conclusion
O	28498	28503	Among
O	28504	28507	all
O	28508	28513	these
O	28514	28519	types
O	28519	28520	,
O	28521	28525	only
B-api_mention	28526	28533	Integer
O	28534	28535	,
B-api_mention	28536	28540	Long
O	28541	28542	,
B-api_mention	28543	28548	Float
O	28549	28550	,
B-api_mention	28551	28557	Double
O	28558	28561	are
O	28562	28566	used
O	28567	28569	in
O	28570	28573	the
O	28574	28580	native
O	28581	28587	source
O	28588	28592	code
O	28593	28595	of
O	28596	28599	the
O	28600	28603	jdk
O	28604	28605	.

O	28606	28609	And
O	28610	28614	only
O	28615	28618	the
B-api_mention	28619	28626	Integer
O	28627	28630	and
B-api_mention	28631	28635	Long
O	28636	28642	fields
O	28643	28646	are
O	28647	28656	annotated
O	28657	28661	with
O	28662	28663	@
O	28663	28669	Native
O	28670	28677	because
O	28678	28682	they
O	28683	28687	have
O	28688	28690	no
O	28691	28697	native
O	28698	28705	methods
O	28706	28707	(
O	28707	28709	as
O	28710	28717	opposed
O	28718	28720	to
B-api_mention	28721	28726	Float
O	28727	28730	and
B-api_mention	28731	28737	Double
O	28738	28739	)

O	28741	28749	Question
O	28749	28750	-
O	28750	28758	28459498
O	28758	28759	,
O	28760	28766	answer
O	28766	28767	-
O	28767	28775	28459604

O	28776	28786	Background
O	28787	28792	While
O	28793	28796	the
O	28797	28805	question
O	28806	28813	appears
O	28814	28820	simple
O	28820	28821	,
O	28822	28825	the
O	28826	28832	actual
O	28833	28839	answer
O	28840	28848	requires
O	28849	28853	some
O	28854	28864	background
O	28865	28867	to
O	28868	28872	make
O	28873	28878	sense
O	28878	28879	.

O	28880	28882	If
O	28883	28886	you
O	28887	28891	want
O	28892	28894	to
O	28895	28899	skip
O	28900	28902	to
O	28903	28906	the
O	28907	28917	conclusion
O	28917	28918	,
O	28919	28925	scroll
O	28926	28930	down
O	28930	28931	.
O	28931	28932	.
O	28932	28933	.

O	28934	28938	Pick
O	28939	28943	your
O	28944	28954	comparison
O	28955	28960	point
O	28961	28962	-
O	28963	28968	Basic
O	28969	28982	functionality
O	28983	28988	Using
O	28989	28994	basic
O	28995	29003	concepts
O	29003	29004	,
O	29005	29006	C
O	29006	29007	#
O	29007	29008	'
O	29008	29009	s
O	29010	29021	IEnumerable
O	29022	29029	concept
O	29030	29032	is
O	29033	29037	more
O	29038	29045	closely
O	29046	29053	related
O	29054	29056	to
O	29057	29061	Java
O	29061	29062	'
O	29062	29063	s
B-api_mention	29064	29072	Iterable
O	29073	29074	,
O	29075	29080	which
O	29081	29083	is
O	29084	29088	able
O	29089	29091	to
O	29092	29098	create
O	29099	29101	as
O	29102	29106	many
O	29107	29116	Iterators
O	29117	29119	as
O	29120	29123	you
O	29124	29128	want
O	29128	29129	.

O	29130	29142	IEnumerables
O	29143	29149	create
O	29150	29162	IEnumerators
O	29163	29164	.

O	29165	29169	Java
O	29169	29170	'
O	29170	29171	s
B-api_mention	29172	29180	Iterable
O	29181	29187	create
B-api_mention	29188	29197	Iterators
O	29198	29201	The
O	29202	29209	history
O	29210	29212	of
O	29213	29217	each
O	29218	29225	concept
O	29226	29228	is
O	29229	29236	similar
O	29236	29237	,
O	29238	29240	in
O	29241	29245	that
O	29246	29250	both
O	29251	29262	IEnumerable
O	29263	29266	and
B-api_mention	29267	29275	Iterable
O	29276	29280	have
O	29281	29282	a
O	29283	29288	basic
O	29289	29299	motivation
O	29300	29302	to
O	29303	29308	allow
O	29309	29310	'
O	29310	29313	for
O	29313	29314	-
O	29314	29318	each
O	29318	29319	'
O	29320	29325	style
O	29326	29333	looping
O	29334	29338	over
O	29339	29342	the
O	29343	29350	members
O	29351	29353	of
O	29354	29358	data
O	29359	29370	collections
O	29370	29371	.

O	29372	29376	That
O	29376	29377	'
O	29377	29378	s
O	29379	29381	an
O	29382	29400	oversimplification
O	29401	29403	as
O	29404	29408	they
O	29409	29413	both
O	29414	29419	allow
O	29420	29424	more
O	29425	29429	than
O	29430	29434	just
O	29435	29439	that
O	29439	29440	,
O	29441	29444	and
O	29445	29449	they
O	29450	29454	also
O	29455	29462	arrived
O	29463	29465	at
O	29466	29470	that
O	29471	29476	stage
O	29477	29480	via
O	29481	29490	different
O	29491	29503	progressions
O	29503	29504	,
O	29505	29508	but
O	29509	29511	it
O	29512	29514	is
O	29515	29516	a
O	29517	29528	significant
O	29529	29535	common
O	29536	29543	feature
O	29544	29554	regardless
O	29554	29555	.

O	29556	29559	Let
O	29559	29560	'
O	29560	29561	s
O	29562	29569	compare
O	29570	29574	that
O	29575	29582	feature
O	29582	29583	:
O	29584	29586	in
O	29587	29591	both
O	29592	29601	languages
O	29601	29602	,
O	29603	29605	if
O	29606	29607	a
O	29608	29613	class
O	29614	29624	implements
O	29625	29628	the
O	29629	29640	IEnumerable
O	29641	29642	/
B-api_mention	29643	29651	Iterable
O	29652	29653	,
O	29654	29658	then
O	29659	29663	that
O	29664	29669	class
O	29670	29674	must
O	29675	29684	implement
O	29685	29687	at
O	29688	29693	least
O	29694	29695	a
O	29696	29702	single
O	29703	29709	method
O	29710	29711	(
O	29711	29714	for
O	29715	29716	C
O	29716	29717	#
O	29717	29718	,
O	29719	29721	it
O	29721	29722	'
O	29722	29723	s
O	29724	29737	GetEnumerator
O	29738	29741	and
O	29742	29745	for
O	29746	29750	Java
O	29751	29753	it
O	29753	29754	'
O	29754	29755	s
B-api_mention	29756	29764	iterator
I-api_mention	29764	29765	(
I-api_mention	29765	29769	args
I-api_mention	29769	29770	)
O	29771	29772	)
O	29772	29773	.

O	29774	29776	In
O	29777	29781	each
O	29782	29786	case
O	29786	29787	,
O	29788	29791	the
O	29792	29800	instance
O	29801	29809	returned
O	29810	29814	from
O	29815	29819	that
O	29820	29821	(
O	29822	29833	IEnumerator
O	29834	29835	/
B-api_mention	29836	29844	Iterator
O	29845	29846	)
O	29847	29853	allows
O	29854	29857	you
O	29858	29860	to
O	29861	29867	access
O	29868	29871	the
O	29872	29879	current
O	29880	29883	and
O	29884	29894	subsequent
O	29895	29902	members
O	29903	29905	of
O	29906	29909	the
O	29910	29914	data
O	29914	29915	.

O	29916	29920	This
O	29921	29928	feature
O	29929	29931	is
O	29932	29936	used
O	29937	29939	in
O	29940	29943	the
O	29944	29947	for
O	29947	29948	-
O	29948	29952	each
O	29953	29961	language
O	29962	29968	syntax
O	29968	29969	.

O	29970	29974	Pick
O	29975	29979	your
O	29980	29990	comparison
O	29991	29996	point
O	29997	29998	-
O	29999	30007	Enhanced
O	30008	30021	functionality
O	30022	30033	IEnumerable
O	30034	30036	in
O	30037	30038	C
O	30038	30039	#
O	30040	30043	has
O	30044	30048	been
O	30049	30057	extended
O	30058	30060	to
O	30061	30066	allow
O	30067	30068	a
O	30069	30075	number
O	30076	30078	of
O	30079	30084	other
O	30085	30093	language
O	30094	30102	features
O	30103	30104	(
O	30105	30111	mostly
O	30112	30119	related
O	30120	30122	to
O	30123	30127	Linq
O	30128	30129	)
O	30129	30130	.

O	30131	30139	Features
O	30140	30145	added
O	30146	30153	include
O	30154	30164	selections
O	30164	30165	,
O	30166	30177	projections
O	30177	30178	,
O	30179	30191	aggregations
O	30191	30192	,
O	30193	30196	etc
O	30196	30197	.

O	30198	30203	These
O	30204	30214	extensions
O	30215	30219	have
O	30220	30221	a
O	30222	30228	strong
O	30229	30239	motivation
O	30240	30244	from
O	30245	30248	use
O	30249	30251	in
O	30252	30255	set
O	30255	30256	-
O	30256	30262	theory
O	30262	30263	,
O	30264	30271	similar
O	30272	30274	to
O	30275	30278	SQL
O	30279	30282	and
O	30283	30293	Relational
O	30294	30302	Database
O	30303	30311	concepts
O	30311	30312	.

O	30313	30317	Java
O	30318	30319	8
O	30320	30323	has
O	30324	30328	also
O	30329	30332	had
O	30333	30346	functionality
O	30347	30352	added
O	30353	30355	to
O	30356	30362	enable
O	30363	30364	a
O	30365	30371	degree
O	30372	30374	of
O	30375	30385	functional
O	30386	30397	programming
O	30398	30403	using
B-api_mention	30404	30411	Streams
O	30412	30415	and
B-api_mention	30416	30423	Lambdas
O	30423	30424	.

O	30425	30429	Note
O	30430	30434	that
O	30435	30439	Java
O	30440	30441	8
O	30442	30449	streams
O	30450	30453	are
O	30454	30457	not
O	30458	30467	primarily
O	30468	30477	motivated
O	30478	30480	by
O	30481	30484	set
O	30485	30491	theory
O	30491	30492	,
O	30493	30496	but
O	30497	30499	by
O	30500	30510	functional
O	30511	30522	programming
O	30522	30523	.

O	30524	30534	Regardless
O	30534	30535	,
O	30536	30541	there
O	30542	30545	are
O	30546	30547	a
O	30548	30551	lot
O	30552	30554	of
O	30555	30564	parallels
O	30564	30565	.

O	30566	30568	So
O	30568	30569	,
O	30570	30574	this
O	30575	30577	is
O	30578	30581	the
O	30582	30588	second
O	30589	30594	point
O	30594	30595	.

O	30596	30599	The
O	30600	30612	enhancements
O	30613	30617	made
O	30618	30620	to
O	30621	30622	C
O	30622	30623	#
O	30624	30628	were
O	30629	30640	implemented
O	30641	30643	as
O	30644	30646	an
O	30647	30658	enhancement
O	30659	30661	to
O	30662	30665	the
O	30666	30677	IEnumerable
O	30678	30685	concept
O	30685	30686	.

O	30687	30689	In
O	30690	30694	Java
O	30694	30695	,
O	30696	30702	though
O	30702	30703	,
O	30704	30707	the
O	30708	30720	enhancements
O	30721	30725	made
O	30726	30730	were
O	30731	30742	implemented
O	30743	30745	by
O	30746	30754	creating
O	30755	30758	new
O	30759	30763	base
O	30764	30772	concepts
O	30773	30775	of
B-api_mention	30776	30783	Lambdas
O	30784	30787	and
B-api_mention	30788	30795	Streams
O	30795	30796	,
O	30797	30800	and
O	30801	30805	then
O	30806	30810	also
O	30811	30819	creating
O	30820	30821	a
O	30822	30832	relatively
O	30833	30840	trivial
O	30841	30844	way
O	30845	30847	to
O	30848	30855	convert
O	30856	30860	from
B-api_mention	30861	30870	Iterators
O	30871	30874	and
B-api_mention	30875	30884	Iterables
O	30885	30887	to
B-api_mention	30888	30895	Streams
O	30895	30896	,
O	30897	30900	and
O	30901	30905	visa
O	30905	30906	-
O	30906	30911	versa
O	30911	30912	.

O	30913	30915	So
O	30915	30916	,
O	30917	30926	comparing
O	30927	30938	IEnumerable
O	30939	30941	to
O	30942	30946	Java
O	30946	30947	'
O	30947	30948	s
B-api_mention	30949	30955	Stream
O	30956	30963	concept
O	30964	30966	is
O	30967	30977	incomplete
O	30977	30978	.

O	30979	30982	You
O	30983	30987	need
O	30988	30990	to
O	30991	30998	compare
O	30999	31001	it
O	31002	31004	to
O	31005	31008	the
O	31009	31017	combined
B-api_mention	31018	31025	Streams
O	31026	31029	and
B-api_mention	31030	31041	Collections
O	31042	31045	API
O	31045	31046	'
O	31046	31047	s
O	31048	31050	in
O	31051	31055	Java
O	31055	31056	.

O	31057	31059	In
O	31060	31064	Java
O	31064	31065	,
B-api_mention	31066	31073	Streams
O	31074	31077	are
O	31078	31081	not
O	31082	31085	the
O	31086	31090	same
O	31091	31093	as
B-api_mention	31094	31103	Iterables
O	31103	31104	,
O	31105	31107	or
B-api_mention	31108	31117	Iterators
I-api_mention	31118	31125	Streams
O	31126	31129	are
O	31130	31133	not
O	31134	31142	designed
O	31143	31145	to
O	31146	31151	solve
O	31152	31160	problems
O	31161	31164	the
O	31165	31169	same
O	31170	31173	way
O	31174	31178	that
O	31179	31188	iterators
O	31189	31192	are
O	31192	31193	:
O	31194	31195	#
O	31195	31197	li
B-api_mention	31198	31207	Iterators
O	31208	31211	are
O	31212	31213	a
O	31214	31217	way
O	31218	31220	of
O	31221	31231	describing
O	31232	31235	the
O	31236	31244	sequence
O	31245	31247	of
O	31248	31252	data
O	31252	31253	.

O	31254	31255	#
O	31255	31257	li
B-api_mention	31258	31265	Streams
O	31266	31269	are
O	31270	31271	a
O	31272	31275	way
O	31276	31278	of
O	31279	31289	describing
O	31290	31291	a
O	31292	31300	sequence
O	31301	31303	of
O	31304	31308	data
O	31309	31324	transformations
O	31324	31325	.

O	31326	31330	With
O	31331	31333	an
B-api_mention	31334	31342	Iterator
O	31343	31344	,
O	31345	31348	you
O	31349	31352	get
O	31353	31354	a
O	31355	31359	data
O	31360	31365	value
O	31365	31366	,
O	31367	31374	process
O	31375	31377	it
O	31377	31378	,
O	31379	31382	and
O	31383	31387	then
O	31388	31391	get
O	31392	31399	another
O	31400	31404	data
O	31405	31410	value
O	31410	31411	.

O	31412	31416	With
B-api_mention	31417	31424	Streams
O	31424	31425	,
O	31426	31429	you
O	31430	31435	chain
O	31436	31437	a
O	31438	31446	sequence
O	31447	31449	of
O	31450	31459	functions
O	31460	31468	together
O	31468	31469	,
O	31470	31474	then
O	31475	31478	you
O	31479	31483	feed
O	31484	31486	an
O	31487	31492	input
O	31493	31498	value
O	31499	31501	to
O	31502	31505	the
O	31506	31512	stream
O	31512	31513	,
O	31514	31517	and
O	31518	31521	get
O	31522	31525	the
O	31526	31532	output
O	31533	31538	value
O	31539	31543	from
O	31544	31547	the
O	31548	31556	combined
O	31557	31565	sequence
O	31565	31566	.

O	31567	31571	Note
O	31571	31572	,
O	31573	31575	in
O	31576	31580	Java
O	31581	31586	terms
O	31586	31587	,
O	31588	31592	each
O	31593	31601	function
O	31602	31604	is
O	31605	31617	encapsulated
O	31618	31620	in
O	31621	31622	a
O	31623	31629	single
B-api_mention	31630	31636	Stream
O	31637	31645	instance
O	31645	31646	.

O	31647	31650	The
B-api_mention	31651	31658	Streams
O	31659	31662	API
O	31663	31669	allows
O	31670	31673	you
O	31674	31676	to
O	31677	31681	link
O	31682	31683	a
O	31684	31692	sequence
O	31693	31695	of
B-api_mention	31696	31702	Stream
O	31703	31712	instances
O	31713	31715	in
O	31716	31717	a
O	31718	31721	way
O	31722	31726	that
O	31727	31733	chains
O	31734	31735	a
O	31736	31744	sequence
O	31745	31747	of
O	31748	31762	transformation
O	31763	31774	expressions
O	31774	31775	.

O	31776	31778	In
O	31779	31784	order
O	31785	31787	to
O	31788	31796	complete
O	31797	31800	the
B-api_mention	31801	31807	Stream
O	31808	31815	concept
O	31815	31816	,
O	31817	31820	you
O	31821	31825	need
O	31826	31827	a
O	31828	31834	source
O	31835	31837	of
O	31838	31842	data
O	31843	31845	to
O	31846	31850	feed
O	31851	31854	the
O	31855	31861	stream
O	31861	31862	,
O	31863	31866	and
O	31867	31868	a
O	31869	31877	terminal
O	31878	31886	function
O	31887	31891	that
O	31892	31900	consumes
O	31901	31904	the
O	31905	31911	stream
O	31911	31912	.

O	31913	31916	The
O	31917	31920	way
O	31921	31924	you
O	31925	31929	feed
O	31930	31936	values
O	31937	31939	in
O	31940	31942	to
O	31943	31946	the
O	31947	31953	stream
O	31954	31957	may
O	31958	31960	in
O	31961	31965	fact
O	31966	31968	be
O	31969	31973	from
O	31974	31976	an
B-api_mention	31977	31985	Iterable
O	31986	31987	,
O	31988	31991	but
O	31992	31995	the
B-api_mention	31996	32002	Stream
O	32003	32011	sequence
O	32012	32018	itself
O	32019	32021	is
O	32022	32025	not
O	32026	32028	an
B-api_mention	32029	32037	Iterable
O	32038	32039	,
O	32040	32042	it
O	32043	32045	is
O	32046	32047	a
O	32048	32056	compound
O	32057	32065	function
O	32065	32066	.

O	32067	32068	A
B-api_mention	32069	32075	Stream
O	32076	32078	is
O	32079	32083	also
O	32084	32092	intended
O	32093	32095	to
O	32096	32098	be
O	32099	32103	lazy
O	32103	32104	,
O	32105	32107	in
O	32108	32111	the
O	32112	32117	sense
O	32118	32122	that
O	32123	32125	it
O	32126	32130	only
O	32131	32135	does
O	32136	32140	work
O	32141	32145	when
O	32146	32149	you
O	32150	32157	request
O	32158	32159	a
O	32160	32165	value
O	32166	32170	from
O	32171	32173	it
O	32173	32174	.

O	32175	32179	Note
O	32180	32185	these
O	32186	32197	significant
O	32198	32209	assumptions
O	32210	32213	and
O	32214	32222	features
O	32223	32225	of
B-api_mention	32226	32233	Streams
O	32233	32234	:
O	32235	32236	#
O	32236	32238	li
O	32239	32240	A
B-api_mention	32241	32247	Stream
O	32248	32250	in
O	32251	32255	Java
O	32256	32258	is
O	32259	32260	a
O	32261	32275	transformation
O	32276	32282	engine
O	32282	32283	,
O	32284	32286	it
O	32287	32297	transforms
O	32298	32299	a
O	32300	32304	data
O	32305	32309	item
O	32310	32312	in
O	32313	32316	one
O	32317	32322	state
O	32322	32323	,
O	32324	32326	to
O	32327	32332	being
O	32333	32335	in
O	32336	32343	another
O	32344	32349	state
O	32349	32350	.

O	32351	32352	#
O	32352	32354	li
O	32355	32362	streams
O	32363	32367	have
O	32368	32370	no
O	32371	32378	concept
O	32379	32381	of
O	32382	32385	the
O	32386	32390	data
O	32391	32396	order
O	32397	32399	or
O	32400	32408	position
O	32408	32409	,
O	32410	32413	the
O	32414	32420	simply
O	32421	32430	transform
O	32431	32439	whatever
O	32440	32444	they
O	32445	32448	are
O	32449	32454	asked
O	32455	32457	to
O	32457	32458	.

O	32459	32460	#
O	32460	32462	li
O	32463	32470	streams
O	32471	32474	can
O	32475	32477	be
O	32478	32486	supplied
O	32487	32491	with
O	32492	32496	data
O	32497	32501	from
O	32502	32506	many
O	32507	32514	sources
O	32514	32515	,
O	32516	32525	including
O	32526	32531	other
O	32532	32539	streams
O	32539	32540	,
B-api_mention	32541	32550	Iterators
O	32550	32551	,
B-api_mention	32552	32561	Iterables
O	32561	32562	,
B-api_mention	32563	32574	Collections
O	32574	32575	,
O	32576	32577	#
O	32577	32579	li
O	32580	32583	you
O	32584	32590	cannot
O	32591	32592	"
O	32592	32597	reset
O	32597	32598	"
O	32599	32600	a
O	32601	32607	stream
O	32607	32608	,
O	32609	32613	that
O	32614	32619	would
O	32620	32622	be
O	32623	32627	like
O	32628	32629	"
O	32629	32642	reprogramming
O	32643	32646	the
O	32647	32661	transformation
O	32661	32662	"
O	32662	32663	.

O	32664	32673	Resetting
O	32674	32677	the
O	32678	32682	data
O	32683	32689	source
O	32690	32692	is
O	32693	32701	probably
O	32702	32706	what
O	32707	32710	you
O	32711	32715	want
O	32715	32716	.

O	32717	32718	#
O	32718	32720	li
O	32721	32726	there
O	32727	32729	is
O	32730	32739	logically
O	32740	32744	only
O	32745	32746	1
O	32747	32751	data
O	32752	32756	item
O	32757	32758	'
O	32758	32760	in
O	32761	32767	flight
O	32767	32768	'
O	32769	32771	in
O	32772	32775	the
O	32776	32782	stream
O	32783	32785	at
O	32786	32789	any
O	32790	32794	time
O	32795	32796	(
O	32796	32802	unless
O	32803	32806	the
O	32807	32813	stream
O	32814	32816	is
O	32817	32818	a
O	32819	32827	parallel
O	32828	32834	stream
O	32834	32835	,
O	32836	32838	at
O	32839	32844	which
O	32845	32850	point
O	32850	32851	,
O	32852	32857	there
O	32858	32860	is
O	32861	32862	1
O	32863	32867	item
O	32868	32871	per
O	32872	32878	thread
O	32878	32879	)
O	32879	32880	.

O	32881	32885	This
O	32886	32888	is
O	32889	32900	independent
O	32901	32903	of
O	32904	32907	the
O	32908	32912	data
O	32913	32919	source
O	32920	32925	which
O	32926	32929	may
O	32930	32934	have
O	32935	32939	more
O	32940	32944	than
O	32945	32948	the
O	32949	32956	current
O	32957	32962	items
O	32963	32964	'
O	32964	32969	ready
O	32969	32970	'
O	32971	32973	to
O	32974	32976	be
O	32977	32985	supplied
O	32986	32988	to
O	32989	32992	the
O	32993	32999	stream
O	32999	33000	,
O	33001	33003	or
O	33004	33007	the
O	33008	33014	stream
O	33015	33024	collector
O	33025	33030	which
O	33031	33034	may
O	33035	33039	need
O	33040	33042	to
O	33043	33052	aggregate
O	33053	33056	and
O	33057	33063	reduce
O	33064	33072	multiple
O	33073	33079	values
O	33079	33080	.

O	33081	33082	#
O	33082	33084	li
B-api_mention	33085	33092	Streams
O	33093	33096	can
O	33097	33099	be
O	33100	33107	unbound
O	33108	33109	(
O	33109	33117	infinite
O	33117	33118	)
O	33118	33119	,
O	33120	33127	limited
O	33128	33132	only
O	33133	33135	by
O	33136	33139	the
O	33140	33144	data
O	33145	33151	source
O	33151	33152	,
O	33153	33155	or
O	33156	33165	collector
O	33166	33167	(
O	33167	33172	which
O	33173	33176	can
O	33177	33179	be
O	33180	33188	infinite
O	33189	33192	too
O	33192	33193	)
O	33193	33194	.

O	33195	33196	#
O	33196	33198	li
B-api_mention	33199	33206	Streams
O	33207	33210	are
O	33211	33212	'
O	33212	33221	chainable
O	33221	33222	'
O	33222	33223	,
O	33224	33227	the
O	33228	33234	output
O	33235	33237	of
O	33238	33247	filtering
O	33248	33251	one
O	33252	33258	stream
O	33258	33259	,
O	33260	33262	is
O	33263	33270	another
O	33271	33277	stream
O	33277	33278	.

O	33279	33285	Values
O	33286	33291	input
O	33292	33294	to
O	33295	33298	and
O	33299	33310	transformed
O	33311	33313	by
O	33314	33315	a
O	33316	33322	stream
O	33323	33326	can
O	33327	33329	in
O	33330	33334	turn
O	33335	33337	be
O	33338	33346	supplied
O	33347	33349	to
O	33350	33357	another
O	33358	33364	stream
O	33365	33370	which
O	33371	33375	does
O	33376	33377	a
O	33378	33387	different
O	33388	33402	transformation
O	33402	33403	.

O	33404	33407	The
O	33408	33412	data
O	33412	33413	,
O	33414	33416	in
O	33417	33420	its
O	33421	33432	transformed
O	33433	33438	state
O	33439	33444	flows
O	33445	33449	from
O	33450	33453	one
O	33454	33460	stream
O	33461	33463	to
O	33464	33467	the
O	33468	33472	next
O	33472	33473	.

O	33474	33477	You
O	33478	33480	do
O	33481	33484	not
O	33485	33489	need
O	33490	33492	to
O	33493	33502	intervene
O	33503	33506	and
O	33507	33511	pull
O	33512	33515	the
O	33516	33520	data
O	33521	33525	from
O	33526	33529	one
O	33530	33536	stream
O	33537	33540	and
O	33541	33545	plug
O	33546	33548	it
O	33549	33551	in
O	33552	33554	to
O	33555	33558	the
O	33559	33563	next
O	33563	33564	.

O	33565	33566	C
O	33566	33567	#
O	33568	33578	Comparison
O	33579	33583	When
O	33584	33587	you
O	33588	33596	consider
O	33597	33601	that
O	33602	33603	a
O	33604	33608	Java
B-api_mention	33609	33615	Stream
O	33616	33618	is
O	33619	33623	just
O	33624	33625	a
O	33626	33630	part
O	33631	33633	of
O	33634	33635	a
O	33636	33642	supply
O	33642	33643	,
O	33644	33650	stream
O	33650	33651	,
O	33652	33655	and
O	33656	33663	collect
O	33664	33670	system
O	33670	33671	,
O	33672	33675	and
O	33676	33680	that
B-api_mention	33681	33688	Streams
O	33689	33692	and
B-api_mention	33693	33702	Iterators
O	33703	33706	are
O	33707	33712	often
O	33713	33717	used
O	33718	33726	together
O	33727	33731	with
B-api_mention	33732	33743	Collections
O	33743	33744	,
O	33745	33749	then
O	33750	33752	it
O	33753	33755	is
O	33756	33758	no
O	33759	33765	wonder
O	33766	33770	that
O	33771	33773	it
O	33774	33776	is
O	33777	33781	hard
O	33782	33784	to
O	33785	33791	relate
O	33792	33794	to
O	33795	33798	the
O	33799	33803	same
O	33804	33812	concepts
O	33813	33818	which
O	33819	33822	are
O	33823	33829	almost
O	33830	33833	all
O	33834	33842	embedded
O	33843	33845	in
O	33846	33848	to
O	33849	33850	a
O	33851	33857	single
O	33858	33869	IEnumerable
O	33870	33877	concept
O	33878	33880	in
O	33881	33882	C
O	33882	33883	#
O	33883	33884	.

O	33885	33890	Parts
O	33891	33893	of
O	33894	33905	IEnumerable
O	33906	33907	(
O	33907	33910	and
O	33911	33916	close
O	33917	33924	related
O	33925	33933	concepts
O	33933	33934	)
O	33935	33938	are
O	33939	33947	apparent
O	33948	33950	in
O	33951	33954	all
O	33955	33957	of
O	33958	33961	the
O	33962	33966	Java
B-api_mention	33967	33975	Iterator
O	33975	33976	,
B-api_mention	33977	33985	Iterable
O	33985	33986	,
B-api_mention	33987	33993	Lambda
O	33993	33994	,
O	33995	33998	and
B-api_mention	33999	34005	Stream
O	34006	34014	concepts
O	34014	34015	.

O	34016	34021	There
O	34022	34025	are
O	34026	34031	small
O	34032	34038	things
O	34039	34043	that
O	34044	34047	the
O	34048	34052	Java
O	34053	34061	concepts
O	34062	34065	can
O	34066	34068	do
O	34069	34073	that
O	34074	34077	are
O	34078	34084	harder
O	34085	34087	in
O	34088	34099	IEnumerable
O	34099	34100	,
O	34101	34104	and
O	34105	34109	visa
O	34109	34110	-
O	34110	34115	versa
O	34115	34116	.

O	34117	34127	Conclusion
O	34128	34129	#
O	34129	34131	li
O	34132	34137	There
O	34137	34138	'
O	34138	34139	s
O	34140	34142	no
O	34143	34149	design
O	34150	34157	problem
O	34158	34162	here
O	34162	34163	,
O	34164	34168	just
O	34169	34170	a
O	34171	34178	problem
O	34179	34181	in
O	34182	34190	matching
O	34191	34199	concepts
O	34200	34207	between
O	34208	34211	the
O	34212	34221	languages
O	34221	34222	.

O	34223	34224	#
O	34224	34226	li
B-api_mention	34227	34234	Streams
O	34235	34240	solve
O	34241	34249	problems
O	34250	34252	in
O	34253	34254	a
O	34255	34264	different
O	34265	34268	way
O	34269	34270	#
O	34270	34272	li
B-api_mention	34273	34280	Streams
O	34281	34284	add
O	34285	34298	functionality
O	34299	34301	to
O	34302	34306	Java
O	34307	34308	(
O	34308	34312	they
O	34313	34316	add
O	34317	34318	a
O	34319	34328	different
O	34329	34332	way
O	34333	34335	of
O	34336	34341	doing
O	34342	34348	things
O	34348	34349	,
O	34350	34354	they
O	34355	34357	do
O	34358	34361	not
O	34362	34366	take
O	34367	34380	functionality
O	34381	34385	away
O	34385	34386	)
O	34387	34393	Adding
B-api_mention	34394	34401	Streams
O	34402	34407	gives
O	34408	34411	you
O	34412	34416	more
O	34417	34424	choices
O	34425	34429	when
O	34430	34437	solving
O	34438	34446	problems
O	34446	34447	,
O	34448	34453	which
O	34454	34456	is
O	34457	34461	fair
O	34462	34464	to
O	34465	34473	classify
O	34474	34476	as
O	34477	34478	'
O	34478	34487	enhancing
O	34488	34493	power
O	34493	34494	'
O	34494	34495	,
O	34496	34499	not
O	34500	34501	'
O	34501	34509	reducing
O	34509	34510	'
O	34510	34511	,
O	34512	34513	'
O	34513	34519	taking
O	34520	34524	away
O	34524	34525	'
O	34525	34526	,
O	34527	34529	or
O	34530	34531	'
O	34531	34542	restricting
O	34542	34543	'
O	34544	34546	it
O	34546	34547	.

O	34548	34551	Why
O	34552	34555	are
O	34556	34560	Java
B-api_mention	34561	34568	Streams
O	34569	34573	once
O	34573	34574	-
O	34574	34577	off
O	34577	34578	?

O	34579	34583	This
O	34584	34592	question
O	34593	34595	is
O	34596	34605	misguided
O	34605	34606	,
O	34607	34614	because
O	34615	34622	streams
O	34623	34626	are
O	34627	34635	function
O	34636	34645	sequences
O	34645	34646	,
O	34647	34650	not
O	34651	34655	data
O	34655	34656	.

O	34657	34666	Depending
O	34667	34669	on
O	34670	34673	the
O	34674	34678	data
O	34679	34685	source
O	34686	34690	that
O	34691	34696	feeds
O	34697	34700	the
O	34701	34707	stream
O	34707	34708	,
O	34709	34712	you
O	34713	34716	can
O	34717	34722	reset
O	34723	34726	the
O	34727	34731	data
O	34732	34738	source
O	34738	34739	,
O	34740	34743	and
O	34744	34748	feed
O	34749	34752	the
O	34753	34757	same
O	34757	34758	,
O	34759	34761	or
O	34762	34771	different
O	34772	34778	stream
O	34778	34779	.

O	34780	34786	Unlike
O	34787	34788	C
O	34788	34789	#
O	34789	34790	'
O	34790	34791	s
O	34792	34803	IEnumerable
O	34803	34804	,
O	34805	34810	where
O	34811	34813	an
O	34814	34823	execution
O	34824	34832	pipeline
O	34833	34836	can
O	34837	34839	be
O	34840	34848	executed
O	34849	34851	as
O	34852	34856	many
O	34857	34862	times
O	34863	34865	as
O	34866	34868	we
O	34869	34873	want
O	34873	34874	,
O	34875	34877	in
O	34878	34882	Java
O	34883	34884	a
O	34885	34891	stream
O	34892	34895	can
O	34896	34898	be
O	34899	34900	'
O	34900	34908	iterated
O	34908	34909	'
O	34910	34914	only
O	34915	34919	once
O	34919	34920	.

O	34921	34930	Comparing
O	34931	34933	an
O	34934	34945	IEnumerable
O	34946	34948	to
O	34949	34950	a
B-api_mention	34951	34957	Stream
O	34958	34960	is
O	34961	34970	misguided
O	34970	34971	.

O	34972	34975	The
O	34976	34983	context
O	34984	34987	you
O	34988	34991	are
O	34992	34997	using
O	34998	35000	to
O	35001	35004	say
O	35005	35016	IEnumerable
O	35017	35020	can
O	35021	35023	be
O	35024	35032	executed
O	35033	35035	as
O	35036	35040	many
O	35041	35046	times
O	35047	35049	as
O	35050	35053	you
O	35054	35058	want
O	35058	35059	,
O	35060	35062	is
O	35063	35067	best
O	35068	35076	compared
O	35077	35079	to
O	35080	35084	Java
B-api_mention	35085	35094	Iterables
O	35095	35096	,
O	35097	35102	which
O	35103	35106	can
O	35107	35109	be
O	35110	35118	iterated
O	35119	35121	as
O	35122	35126	many
O	35127	35132	times
O	35133	35135	as
O	35136	35139	you
O	35140	35144	want
O	35144	35145	.

O	35146	35147	A
O	35148	35152	Java
B-api_mention	35153	35159	Stream
O	35160	35170	represents
O	35171	35172	a
O	35173	35179	subset
O	35180	35182	of
O	35183	35186	the
O	35187	35198	IEnumerable
O	35199	35206	concept
O	35206	35207	,
O	35208	35211	and
O	35212	35215	not
O	35216	35219	the
O	35220	35226	subset
O	35227	35231	that
O	35232	35240	supplies
O	35241	35245	data
O	35245	35246	,
O	35247	35250	and
O	35251	35255	thus
O	35256	35262	cannot
O	35263	35265	be
O	35266	35267	'
O	35267	35272	rerun
O	35272	35273	'
O	35273	35274	.

O	35275	35278	Any
O	35279	35283	call
O	35284	35286	to
O	35287	35288	a
O	35289	35297	terminal
O	35298	35307	operation
O	35308	35314	closes
O	35315	35318	the
O	35319	35325	stream
O	35325	35326	,
O	35327	35336	rendering
O	35337	35339	it
O	35340	35348	unusable
O	35348	35349	.

O	35350	35354	This
O	35355	35356	'
O	35356	35363	feature
O	35363	35364	'
O	35365	35370	takes
O	35371	35375	away
O	35376	35377	a
O	35378	35381	lot
O	35382	35384	of
O	35385	35390	power
O	35390	35391	.

O	35392	35395	The
O	35396	35401	first
O	35402	35411	statement
O	35412	35414	is
O	35415	35419	true
O	35419	35420	,
O	35421	35423	in
O	35424	35425	a
O	35426	35431	sense
O	35431	35432	.

O	35433	35436	The
O	35437	35438	'
O	35438	35443	takes
O	35444	35448	away
O	35449	35454	power
O	35454	35455	'
O	35456	35465	statement
O	35466	35468	is
O	35469	35472	not
O	35472	35473	.

O	35474	35477	You
O	35478	35481	are
O	35482	35487	still
O	35488	35497	comparing
B-api_mention	35498	35505	Streams
O	35506	35508	it
O	35509	35521	IEnumerables
O	35521	35522	.

O	35523	35526	The
O	35527	35535	terminal
O	35536	35545	operation
O	35546	35548	in
O	35549	35552	the
O	35553	35559	stream
O	35560	35562	is
O	35563	35567	like
O	35568	35569	a
O	35570	35571	'
O	35571	35576	break
O	35576	35577	'
O	35578	35584	clause
O	35585	35587	in
O	35588	35589	a
O	35590	35593	for
O	35594	35598	loop
O	35598	35599	.

O	35600	35603	You
O	35604	35607	are
O	35608	35614	always
O	35615	35619	free
O	35620	35622	to
O	35623	35627	have
O	35628	35635	another
O	35636	35642	stream
O	35642	35643	,
O	35644	35646	if
O	35647	35650	you
O	35651	35655	want
O	35655	35656	,
O	35657	35660	and
O	35661	35663	if
O	35664	35667	you
O	35668	35671	can
O	35672	35674	re
O	35674	35675	-
O	35675	35681	supply
O	35682	35685	the
O	35686	35690	data
O	35691	35694	you
O	35695	35699	need
O	35699	35700	.

O	35701	35706	Again
O	35706	35707	,
O	35708	35710	if
O	35711	35714	you
O	35715	35723	consider
O	35724	35727	the
O	35728	35739	IEnumerable
O	35740	35742	to
O	35743	35745	be
O	35746	35750	more
O	35751	35755	like
O	35756	35758	an
B-api_mention	35759	35767	Iterable
O	35768	35769	,
O	35770	35773	for
O	35774	35778	this
O	35779	35788	statement
O	35788	35789	,
O	35790	35794	Java
O	35795	35799	does
O	35800	35802	it
O	35803	35807	just
O	35808	35812	fine
O	35812	35813	.

O	35814	35815	I
O	35816	35823	imagine
O	35824	35827	the
O	35828	35834	reason
O	35835	35838	for
O	35839	35843	this
O	35844	35846	is
O	35847	35850	not
O	35851	35860	technical
O	35860	35861	.

O	35862	35866	What
O	35867	35871	were
O	35872	35875	the
O	35876	35882	design
O	35883	35897	considerations
O	35898	35904	behind
O	35905	35909	this
O	35910	35917	strange
O	35918	35929	restriction
O	35929	35930	?

O	35931	35934	The
O	35935	35941	reason
O	35942	35944	is
O	35945	35954	technical
O	35954	35955	,
O	35956	35959	and
O	35960	35963	for
O	35964	35967	the
O	35968	35974	simple
O	35975	35981	reason
O	35982	35986	that
O	35987	35988	a
B-api_mention	35989	35995	Stream
O	35996	35997	a
O	35998	36004	subset
O	36005	36007	of
O	36008	36012	what
O	36013	36018	think
O	36019	36021	it
O	36022	36024	is
O	36024	36025	.

O	36026	36029	The
O	36030	36036	stream
O	36037	36043	subset
O	36044	36048	does
O	36049	36052	not
O	36053	36060	control
O	36061	36064	the
O	36065	36069	data
O	36070	36076	supply
O	36076	36077	,
O	36078	36080	so
O	36081	36084	you
O	36085	36091	should
O	36092	36097	reset
O	36098	36101	the
O	36102	36108	supply
O	36108	36109	,
O	36110	36113	not
O	36114	36117	the
O	36118	36124	stream
O	36124	36125	.

O	36126	36128	In
O	36129	36133	that
O	36134	36141	context
O	36141	36142	,
O	36143	36145	it
O	36146	36148	is
O	36149	36152	not
O	36153	36155	so
O	36156	36163	strange
O	36163	36164	.

O	36165	36174	QuickSort
O	36175	36182	example
O	36183	36187	Your
O	36188	36197	quicksort
O	36198	36205	example
O	36206	36209	has
O	36210	36213	the
O	36214	36223	signature
O	36223	36224	:
O	36225	36236	IEnumerable
O	36236	36237	<
O	36237	36238	T
O	36238	36239	>
O	36240	36249	QuickSort
O	36249	36250	(
O	36250	36254	args
O	36254	36255	)
O	36256	36259	You
O	36260	36263	are
O	36264	36272	treating
O	36273	36276	the
O	36277	36282	input
O	36283	36294	IEnumerable
O	36295	36297	as
O	36298	36299	a
O	36300	36304	data
O	36305	36311	source
O	36311	36312	:
O	36313	36324	IEnumerable
O	36324	36325	<
O	36325	36326	T
O	36326	36327	>
O	36328	36330	lt
O	36331	36332	=
O	36333	36337	ints
O	36337	36338	.
O	36338	36343	Where
O	36343	36344	(
O	36344	36348	args
O	36348	36349	)
O	36349	36350	;
O	36351	36363	Additionally
O	36363	36364	,
O	36365	36371	return
O	36372	36377	value
O	36378	36380	is
O	36381	36392	IEnumerable
O	36393	36396	too
O	36396	36397	,
O	36398	36403	which
O	36404	36406	is
O	36407	36408	a
O	36409	36415	supply
O	36416	36418	of
O	36419	36423	data
O	36423	36424	,
O	36425	36428	and
O	36429	36434	since
O	36435	36439	this
O	36440	36442	is
O	36443	36444	a
O	36445	36449	Sort
O	36450	36459	operation
O	36459	36460	,
O	36461	36464	the
O	36465	36470	order
O	36471	36473	of
O	36474	36478	that
O	36479	36485	supply
O	36486	36488	is
O	36489	36500	significant
O	36500	36501	.

O	36502	36504	If
O	36505	36508	you
O	36509	36517	consider
O	36518	36521	the
O	36522	36526	Java
B-api_mention	36527	36535	Iterable
O	36536	36541	class
O	36542	36544	to
O	36545	36547	be
O	36548	36551	the
O	36552	36563	appropriate
O	36564	36569	match
O	36570	36573	for
O	36574	36578	this
O	36578	36579	,
O	36580	36592	specifically
O	36593	36596	the
B-api_mention	36597	36601	List
O	36602	36616	specialization
O	36617	36619	of
B-api_mention	36620	36628	Iterable
O	36629	36630	,
O	36631	36636	since
B-api_mention	36637	36641	List
O	36642	36644	is
O	36645	36646	a
O	36647	36653	supply
O	36654	36656	of
O	36657	36661	data
O	36662	36667	which
O	36668	36671	has
O	36672	36673	a
O	36674	36684	guaranteed
O	36685	36690	order
O	36691	36693	or
O	36694	36703	iteration
O	36703	36704	,
O	36705	36709	then
O	36710	36713	the
O	36714	36724	equivalent
O	36725	36729	Java
O	36730	36734	code
O	36735	36737	to
O	36738	36742	your
O	36743	36747	code
O	36748	36753	would
O	36754	36756	be
O	36756	36757	:
O	36758	36759	#
O	36759	36762	pre
O	36763	36767	Note
O	36768	36773	there
O	36774	36776	is
O	36777	36778	a
O	36779	36782	bug
O	36783	36784	(
O	36784	36789	which
O	36790	36791	I
O	36792	36796	have
O	36797	36807	reproduced
O	36807	36808	)
O	36808	36809	,
O	36810	36812	in
O	36813	36817	that
O	36818	36821	the
O	36822	36826	sort
O	36827	36831	does
O	36832	36835	not
O	36836	36842	handle
O	36843	36852	duplicate
O	36853	36859	values
O	36860	36870	gracefully
O	36870	36871	,
O	36872	36874	it
O	36875	36877	is
O	36878	36879	a
O	36880	36881	'
O	36881	36887	unique
O	36888	36893	value
O	36893	36894	'
O	36895	36899	sort
O	36899	36900	.

O	36901	36905	Also
O	36906	36910	note
O	36911	36914	how
O	36915	36918	the
O	36919	36923	Java
O	36924	36928	code
O	36929	36933	uses
O	36934	36938	data
O	36939	36945	source
O	36946	36947	(
O	36948	36952	List
O	36953	36954	)
O	36954	36955	,
O	36956	36959	and
O	36960	36966	stream
O	36967	36975	concepts
O	36976	36978	at
O	36979	36988	different
O	36989	36994	point
O	36994	36995	,
O	36996	36999	and
O	37000	37004	that
O	37005	37007	in
O	37008	37009	C
O	37009	37010	#
O	37011	37016	those
O	37017	37020	two
O	37021	37022	'
O	37022	37035	personalities
O	37035	37036	'
O	37037	37040	can
O	37041	37043	be
O	37044	37053	expressed
O	37054	37056	in
O	37057	37061	just
O	37062	37073	IEnumerable
O	37074	37075	.

O	37076	37080	Also
O	37080	37081	,
O	37082	37090	although
O	37091	37092	I
O	37093	37097	have
O	37098	37101	use
B-api_mention	37102	37106	List
O	37107	37109	as
O	37110	37113	the
O	37114	37118	base
O	37119	37123	type
O	37123	37124	,
O	37125	37126	I
O	37127	37132	could
O	37133	37137	have
O	37138	37142	used
O	37143	37146	the
O	37147	37151	more
O	37152	37159	general
B-api_mention	37160	37170	Collection
O	37171	37172	,
O	37173	37176	and
O	37177	37181	with
O	37182	37183	a
O	37184	37189	small
O	37190	37198	iterator
O	37198	37199	-
O	37199	37201	to
O	37201	37202	-
B-api_mention	37202	37208	Stream
O	37209	37219	conversion
O	37219	37220	,
O	37221	37222	I
O	37223	37228	could
O	37229	37233	have
O	37234	37238	used
O	37239	37242	the
O	37243	37247	even
O	37248	37252	more
O	37253	37260	general
B-api_mention	37261	37269	Iterable

O	37271	37279	Question
O	37279	37280	-
O	37280	37288	28459498
O	37288	37289	,
O	37290	37296	answer
O	37296	37297	-
O	37297	37305	28460301

B-api_mention	37306	37312	Stream
O	37313	37314	s
O	37315	37318	are
O	37319	37324	built
O	37325	37331	around
O	37332	37343	Spliterator
O	37344	37345	s
O	37346	37351	which
O	37352	37355	are
O	37356	37364	stateful
O	37364	37365	,
O	37366	37373	mutable
O	37374	37381	objects
O	37381	37382	.

O	37383	37387	They
O	37388	37391	don
O	37391	37392	’
O	37392	37393	t
O	37394	37398	have
O	37399	37400	a
O	37401	37402	“
O	37402	37407	reset
O	37407	37408	”
O	37409	37415	action
O	37416	37419	and
O	37420	37422	in
O	37423	37427	fact
O	37427	37428	,
O	37429	37438	requiring
O	37439	37441	to
O	37442	37449	support
O	37450	37454	such
O	37455	37461	rewind
O	37462	37468	action
O	37469	37474	would
O	37475	37476	“
O	37476	37480	take
O	37481	37485	away
O	37486	37490	much
O	37491	37496	power
O	37496	37497	”
O	37497	37498	.

O	37499	37502	How
O	37503	37508	would
B-api_mention	37509	37515	Random
I-api_mention	37515	37516	.
I-api_mention	37516	37520	ints
I-api_mention	37520	37521	(
I-api_mention	37521	37522	)
O	37523	37525	be
O	37526	37534	supposed
O	37535	37537	to
O	37538	37544	handle
O	37545	37549	such
O	37550	37551	a
O	37552	37559	request
O	37559	37560	?

O	37561	37563	On
O	37564	37567	the
O	37568	37573	other
O	37574	37578	hand
O	37578	37579	,
O	37580	37583	for
B-api_mention	37584	37590	Stream
O	37591	37592	s
O	37593	37598	which
O	37599	37603	have
O	37604	37605	a
O	37606	37617	retraceable
O	37618	37624	origin
O	37624	37625	,
O	37626	37628	it
O	37629	37631	is
O	37632	37636	easy
O	37637	37639	to
O	37640	37649	construct
O	37650	37652	an
O	37653	37663	equivalent
B-api_mention	37664	37670	Stream
O	37671	37673	to
O	37674	37676	be
O	37677	37681	used
O	37682	37687	again
O	37687	37688	.

O	37689	37693	Just
O	37694	37697	put
O	37698	37701	the
O	37702	37707	steps
O	37708	37712	made
O	37713	37715	to
O	37716	37725	construct
O	37726	37729	the
B-api_mention	37730	37736	Stream
O	37737	37741	into
O	37742	37743	a
O	37744	37752	reusable
O	37753	37759	method
O	37759	37760	.

O	37761	37765	Keep
O	37766	37768	in
O	37769	37773	mind
O	37774	37778	that
O	37779	37788	repeating
O	37789	37794	these
O	37795	37800	steps
O	37801	37803	is
O	37804	37807	not
O	37808	37810	an
O	37811	37820	expensive
O	37821	37830	operation
O	37831	37833	as
O	37834	37837	all
O	37838	37843	these
O	37844	37849	steps
O	37850	37853	are
O	37854	37858	lazy
O	37859	37869	operations
O	37869	37870	;
O	37871	37874	the
O	37875	37881	actual
O	37882	37886	work
O	37887	37893	starts
O	37894	37898	with
O	37899	37902	the
O	37903	37911	terminal
O	37912	37921	operation
O	37922	37925	and
O	37926	37935	depending
O	37936	37938	on
O	37939	37942	the
O	37943	37949	actual
O	37950	37958	terminal
O	37959	37968	operation
O	37969	37977	entirely
O	37978	37987	different
O	37988	37992	code
O	37993	37998	might
O	37999	38002	get
O	38003	38011	executed
O	38011	38012	.

O	38013	38015	It
O	38016	38021	would
O	38022	38024	be
O	38025	38027	up
O	38028	38030	to
O	38031	38034	you
O	38034	38035	,
O	38036	38039	the
O	38040	38046	writer
O	38047	38049	of
O	38050	38054	such
O	38055	38056	a
O	38057	38063	method
O	38063	38064	,
O	38065	38067	to
O	38068	38075	specify
O	38076	38080	what
O	38081	38088	calling
O	38089	38092	the
O	38093	38099	method
O	38100	38105	twice
O	38106	38113	implies
O	38113	38114	:
O	38115	38119	does
O	38120	38122	it
O	38123	38132	reproduce
O	38133	38140	exactly
O	38141	38144	the
O	38145	38149	same
O	38150	38158	sequence
O	38158	38159	,
O	38160	38162	as
O	38163	38170	streams
O	38171	38178	created
O	38179	38182	for
O	38183	38185	an
O	38186	38196	unmodified
O	38197	38202	array
O	38203	38205	or
O	38206	38216	collection
O	38217	38219	do
O	38219	38220	,
O	38221	38223	or
O	38224	38228	does
O	38229	38231	it
O	38232	38239	produce
O	38240	38241	a
O	38242	38248	stream
O	38249	38253	with
O	38254	38255	a
O	38256	38263	similar
O	38264	38273	semantics
O	38274	38277	but
O	38278	38287	different
O	38288	38296	elements
O	38297	38301	like
O	38302	38303	a
O	38304	38310	stream
O	38311	38313	of
O	38314	38320	random
O	38321	38325	ints
O	38326	38328	or
O	38329	38330	a
O	38331	38337	stream
O	38338	38340	of
O	38341	38348	console
O	38349	38354	input
O	38355	38360	lines
O	38360	38361	,
O	38362	38365	etc
O	38365	38366	.

O	38367	38369	By
O	38370	38373	the
O	38374	38377	way
O	38377	38378	,
O	38379	38381	to
O	38382	38387	avoid
O	38388	38397	confusion
O	38397	38398	,
O	38399	38400	a
O	38401	38409	terminal
O	38410	38419	operation
O	38420	38428	consumes
O	38429	38432	the
B-api_mention	38433	38439	Stream
O	38440	38445	which
O	38446	38448	is
O	38449	38457	distinct
O	38458	38462	from
O	38463	38470	closing
O	38471	38474	the
B-api_mention	38475	38481	Stream
O	38482	38484	as
O	38485	38492	calling
B-api_mention	38493	38498	close
I-api_mention	38498	38499	(
I-api_mention	38499	38503	args
I-api_mention	38503	38504	)
O	38505	38507	on
O	38508	38511	the
O	38512	38518	stream
O	38519	38523	does
O	38524	38525	(
O	38525	38530	which
O	38531	38533	is
O	38534	38542	required
O	38543	38546	for
O	38547	38554	streams
O	38555	38561	having
O	38562	38572	associated
O	38573	38582	resources
O	38583	38587	like
O	38587	38588	,
O	38589	38590	e
O	38590	38591	.
O	38591	38592	g
O	38592	38593	.
O	38594	38602	produced
O	38603	38605	by
B-api_mention	38606	38611	Files
I-api_mention	38611	38612	.
I-api_mention	38612	38617	lines
I-api_mention	38617	38618	(
I-api_mention	38618	38622	args
I-api_mention	38622	38623	)
O	38624	38625	)
O	38625	38626	.

O	38627	38629	It
O	38630	38635	seems
O	38636	38640	that
O	38641	38642	a
O	38643	38646	lot
O	38647	38649	of
O	38650	38659	confusion
O	38660	38665	stems
O	38666	38670	from
O	38671	38681	misguiding
O	38682	38692	comparison
O	38693	38695	of
O	38696	38707	IEnumerable
O	38708	38712	with
B-api_mention	38713	38719	Stream
O	38720	38721	.

O	38722	38724	An
O	38725	38736	IEnumerable
O	38737	38747	represents
O	38748	38751	the
O	38752	38759	ability
O	38760	38762	to
O	38763	38770	provide
O	38771	38773	an
O	38774	38780	actual
O	38781	38792	IEnumerator
O	38793	38794	,
O	38795	38797	so
O	38798	38801	its
O	38802	38806	like
O	38807	38809	an
B-api_mention	38810	38818	Iterable
O	38819	38821	in
O	38822	38826	Java
O	38826	38827	.

O	38828	38830	In
O	38831	38839	contrast
O	38839	38840	,
O	38841	38842	a
B-api_mention	38843	38849	Stream
O	38850	38852	is
O	38853	38854	a
O	38855	38859	kind
O	38860	38862	of
O	38863	38871	iterator
O	38872	38875	and
O	38876	38886	comparable
O	38887	38889	to
O	38890	38892	an
O	38893	38904	IEnumerator
O	38905	38907	so
O	38908	38910	it
O	38910	38911	’
O	38911	38912	s
O	38913	38918	wrong
O	38919	38921	to
O	38922	38927	claim
O	38928	38932	that
O	38933	38937	this
O	38938	38942	kind
O	38943	38945	of
O	38946	38950	data
O	38951	38955	type
O	38956	38959	can
O	38960	38962	be
O	38963	38967	used
O	38968	38976	multiple
O	38977	38982	times
O	38983	38985	in
O	38986	38987	.
O	38987	38990	NET
O	38990	38991	,
O	38992	38995	the
O	38996	39003	support
O	39004	39007	for
O	39008	39019	IEnumerator
O	39019	39020	.
O	39020	39025	Reset
O	39026	39028	is
O	39029	39037	optional
O	39037	39038	.

O	39039	39042	The
O	39043	39051	examples
O	39052	39061	discussed
O	39062	39066	here
O	39067	39073	rather
O	39074	39077	use
O	39078	39081	the
O	39082	39086	fact
O	39087	39091	that
O	39092	39094	an
O	39095	39106	IEnumerable
O	39107	39110	can
O	39111	39113	be
O	39114	39118	used
O	39119	39121	to
O	39122	39127	fetch
O	39128	39131	new
O	39132	39143	IEnumerator
O	39144	39145	s
O	39146	39149	and
O	39150	39154	that
O	39155	39160	works
O	39161	39165	with
O	39166	39170	Java
O	39170	39171	’
O	39171	39172	s
B-api_mention	39173	39183	Collection
O	39184	39185	s
O	39186	39188	as
O	39189	39193	well
O	39193	39194	;
O	39195	39198	you
O	39199	39202	can
O	39203	39206	get
O	39207	39208	a
O	39209	39212	new
B-api_mention	39213	39219	Stream
O	39220	39221	.

O	39222	39224	If
O	39225	39228	the
O	39229	39233	Java
O	39234	39244	developers
O	39245	39252	decided
O	39253	39255	to
O	39256	39259	add
O	39260	39263	the
B-api_mention	39264	39270	Stream
O	39271	39281	operations
O	39282	39284	to
B-api_mention	39285	39293	Iterable
O	39294	39302	directly
O	39302	39303	,
O	39304	39308	with
O	39309	39321	intermediate
O	39322	39332	operations
O	39333	39342	returning
O	39343	39350	another
B-api_mention	39351	39359	Iterable
O	39360	39361	,
O	39362	39364	it
O	39365	39368	was
O	39369	39375	really
O	39376	39386	comparable
O	39387	39390	and
O	39391	39393	it
O	39394	39399	could
O	39400	39404	work
O	39405	39408	the
O	39409	39413	same
O	39414	39417	way
O	39417	39418	.

O	39419	39426	However
O	39426	39427	,
O	39428	39431	the
O	39432	39442	developers
O	39443	39450	decided
O	39451	39458	against
O	39459	39461	it
O	39462	39465	and
O	39466	39469	the
O	39470	39478	decision
O	39479	39481	is
O	39482	39491	discussed
O	39492	39494	in
O	39495	39499	this
O	39500	39508	question
O	39509	39510	.

O	39511	39514	The
O	39515	39522	biggest
O	39523	39528	point
O	39529	39531	is
O	39532	39535	the
O	39536	39545	confusion
O	39546	39551	about
O	39552	39557	eager
B-api_mention	39558	39568	Collection
O	39569	39579	operations
O	39580	39583	and
O	39584	39588	lazy
B-api_mention	39589	39595	Stream
O	39596	39606	operations
O	39606	39607	.

O	39608	39610	By
O	39611	39618	looking
O	39619	39621	at
O	39622	39625	the
O	39626	39627	.
O	39627	39630	NET
O	39631	39634	API
O	39634	39635	,
O	39636	39637	I
O	39638	39639	(
O	39639	39642	yes
O	39642	39643	,
O	39644	39654	personally
O	39654	39655	)
O	39656	39660	find
O	39661	39663	it
O	39664	39673	justified
O	39673	39674	.

O	39675	39680	While
O	39681	39683	it
O	39684	39689	looks
O	39690	39700	reasonable
O	39701	39708	looking
O	39709	39711	at
O	39712	39723	IEnumerable
O	39724	39729	alone
O	39729	39730	,
O	39731	39732	a
O	39733	39743	particular
B-api_mention	39744	39754	Collection
O	39755	39759	will
O	39760	39764	have
O	39765	39769	lots
O	39770	39772	of
O	39773	39780	methods
O	39781	39793	manipulating
O	39794	39797	the
B-api_mention	39798	39808	Collection
O	39809	39817	directly
O	39818	39821	and
O	39822	39826	lots
O	39827	39829	of
O	39830	39837	methods
O	39838	39847	returning
O	39848	39849	a
O	39850	39854	lazy
O	39855	39866	IEnumerable
O	39867	39868	,
O	39869	39874	while
O	39875	39878	the
O	39879	39889	particular
O	39890	39896	nature
O	39897	39899	of
O	39900	39901	a
O	39902	39908	method
O	39909	39912	isn
O	39912	39913	’
O	39913	39914	t
O	39915	39921	always
O	39922	39933	intuitively
O	39934	39946	recognizable
O	39946	39947	.

O	39948	39951	The
O	39952	39957	worst
O	39958	39965	example
O	39966	39967	I
O	39968	39973	found
O	39974	39975	(
O	39975	39981	within
O	39982	39985	the
O	39986	39989	few
O	39990	39997	minutes
O	39998	39999	I
O	40000	40006	looked
O	40007	40009	at
O	40010	40012	it
O	40012	40013	)
O	40014	40016	is
B-api_mention	40017	40021	List
I-api_mention	40021	40022	.
I-api_mention	40022	40029	Reverse
I-api_mention	40029	40030	(
I-api_mention	40030	40031	)
O	40032	40037	whose
O	40038	40042	name
O	40043	40050	matches
O	40051	40058	exactly
O	40059	40062	the
O	40063	40067	name
O	40068	40070	of
O	40071	40074	the
O	40075	40084	inherited
O	40085	40086	(
O	40086	40088	is
O	40089	40093	this
O	40094	40097	the
O	40098	40103	right
O	40104	40112	terminus
O	40113	40116	for
O	40117	40126	extension
O	40127	40134	methods
O	40134	40135	?
O	40135	40136	)
B-api_mention	40137	40147	Enumerable
I-api_mention	40147	40148	.
I-api_mention	40148	40155	Reverse
I-api_mention	40155	40156	(
I-api_mention	40156	40157	)
O	40158	40163	while
O	40164	40170	having
O	40171	40173	an
O	40174	40182	entirely
O	40183	40196	contradicting
O	40197	40205	behavior
O	40205	40206	.

O	40207	40209	Of
O	40210	40216	course
O	40216	40217	,
O	40218	40223	these
O	40224	40227	are
O	40228	40231	two
O	40232	40240	distinct
O	40241	40250	decisions
O	40250	40251	.

O	40252	40255	The
O	40256	40261	first
O	40262	40265	one
O	40266	40268	to
O	40269	40273	make
B-api_mention	40274	40280	Stream
O	40281	40282	a
O	40283	40287	type
O	40288	40296	distinct
O	40297	40301	from
B-api_mention	40302	40310	Iterable
O	40311	40312	/
B-api_mention	40313	40323	Collection
O	40324	40327	and
O	40328	40331	the
O	40332	40338	second
O	40339	40341	to
O	40342	40346	make
B-api_mention	40347	40353	Stream
O	40354	40355	a
O	40356	40360	kind
O	40361	40363	of
O	40364	40367	one
O	40368	40372	time
O	40373	40381	iterator
O	40382	40388	rather
O	40389	40393	than
O	40394	40401	another
O	40402	40406	kind
O	40407	40409	of
O	40410	40418	iterable
O	40418	40419	.

O	40420	40423	But
O	40424	40429	these
O	40430	40438	decision
O	40439	40443	were
O	40444	40448	made
O	40449	40457	together
O	40458	40461	and
O	40462	40464	it
O	40465	40470	might
O	40471	40473	be
O	40474	40477	the
O	40478	40482	case
O	40483	40487	that
O	40488	40498	separating
O	40499	40504	these
O	40505	40508	two
O	40509	40517	decision
O	40518	40523	never
O	40524	40527	was
O	40528	40538	considered
O	40538	40539	.

O	40540	40542	It
O	40543	40547	wasn
O	40547	40548	’
O	40548	40549	t
O	40550	40557	created
O	40558	40562	with
O	40563	40568	being
O	40569	40579	comparable
O	40580	40582	to
O	40583	40584	.
O	40584	40587	NET
O	40587	40588	’
O	40588	40589	s
O	40590	40592	in
O	40593	40597	mind
O	40597	40598	.

O	40599	40602	The
O	40603	40609	actual
O	40610	40613	API
O	40614	40620	design
O	40621	40629	decision
O	40630	40633	was
O	40634	40636	to
O	40637	40640	add
O	40641	40643	an
O	40644	40652	improved
O	40653	40657	type
O	40658	40660	of
O	40661	40669	iterator
O	40669	40670	,
O	40671	40674	the
B-api_mention	40675	40686	Spliterator
O	40687	40688	.

B-api_mention	40689	40700	Spliterator
O	40701	40702	s
O	40703	40706	can
O	40707	40709	be
O	40710	40718	provided
O	40719	40721	by
O	40722	40725	the
O	40726	40729	old
B-api_mention	40730	40738	Iterable
O	40739	40740	s
O	40741	40742	(
O	40742	40747	which
O	40748	40750	is
O	40751	40754	the
O	40755	40758	way
O	40759	40762	how
O	40763	40768	these
O	40769	40773	were
O	40774	40785	retrofitted
O	40785	40786	)
O	40787	40789	or
O	40790	40798	entirely
O	40799	40802	new
O	40803	40818	implementations
O	40818	40819	.

O	40820	40824	Then
O	40824	40825	,
B-api_mention	40826	40832	Stream
O	40833	40836	was
O	40837	40842	added
O	40843	40845	as
O	40846	40847	a
O	40848	40852	high
O	40852	40853	-
O	40853	40858	level
O	40859	40864	front
O	40864	40865	-
O	40865	40868	end
O	40869	40871	to
O	40872	40875	the
O	40876	40882	rather
O	40883	40886	low
O	40887	40892	level
B-api_mention	40893	40904	Spliterator
O	40905	40906	s
O	40906	40907	.

O	40908	40912	That
O	40912	40913	’
O	40913	40914	s
O	40915	40917	it
O	40917	40918	.

O	40919	40922	You
O	40923	40926	may
O	40927	40934	discuss
O	40935	40940	about
O	40941	40948	whether
O	40949	40950	a
O	40951	40960	different
O	40961	40967	design
O	40968	40973	would
O	40974	40976	be
O	40977	40983	better
O	40983	40984	,
O	40985	40988	but
O	40989	40993	that
O	40993	40994	’
O	40994	40995	s
O	40996	40999	not
O	41000	41010	productive
O	41010	41011	,
O	41012	41014	it
O	41015	41018	won
O	41018	41019	’
O	41019	41020	t
O	41021	41027	change
O	41027	41028	,
O	41029	41034	given
O	41035	41038	the
O	41039	41042	way
O	41043	41047	they
O	41048	41051	are
O	41052	41060	designed
O	41061	41064	now
O	41064	41065	.

O	41066	41071	There
O	41072	41074	is
O	41075	41082	another
O	41083	41097	implementation
O	41098	41104	aspect
O	41105	41108	you
O	41109	41113	have
O	41114	41116	to
O	41117	41125	consider
O	41125	41126	.

B-api_mention	41127	41133	Stream
O	41134	41135	s
O	41136	41139	are
O	41140	41143	not
O	41144	41153	immutable
O	41154	41158	data
O	41159	41169	structures
O	41169	41170	.

O	41171	41175	Each
O	41176	41188	intermediate
O	41189	41198	operation
O	41199	41202	may
O	41203	41209	return
O	41210	41211	a
O	41212	41215	new
B-api_mention	41216	41222	Stream
O	41223	41231	instance
O	41232	41245	encapsulating
O	41246	41249	the
O	41250	41253	old
O	41254	41257	one
O	41258	41261	but
O	41262	41264	it
O	41265	41268	may
O	41269	41273	also
O	41274	41284	manipulate
O	41285	41288	its
O	41289	41292	own
O	41293	41301	instance
O	41302	41309	instead
O	41310	41313	and
O	41314	41320	return
O	41321	41327	itself
O	41328	41329	(
O	41329	41333	that
O	41334	41339	doesn
O	41339	41340	’
O	41340	41341	t
O	41342	41350	preclude
O	41351	41356	doing
O	41357	41361	even
O	41362	41366	both
O	41367	41370	for
O	41371	41374	the
O	41375	41379	same
O	41380	41389	operation
O	41389	41390	)
O	41390	41391	.

O	41392	41400	Commonly
O	41401	41406	known
O	41407	41415	examples
O	41416	41419	are
O	41420	41430	operations
O	41431	41435	like
O	41436	41444	parallel
O	41445	41447	or
O	41448	41457	unordered
O	41458	41463	which
O	41464	41466	do
O	41467	41470	not
O	41471	41474	add
O	41475	41482	another
O	41483	41487	step
O	41488	41491	but
O	41492	41502	manipulate
O	41503	41506	the
O	41507	41513	entire
O	41514	41522	pipeline
O	41522	41523	)
O	41523	41524	.

O	41525	41531	Having
O	41532	41536	such
O	41537	41538	a
O	41539	41546	mutable
O	41547	41551	data
O	41552	41561	structure
O	41562	41565	and
O	41566	41574	attempts
O	41575	41577	to
O	41578	41583	reuse
O	41584	41585	(
O	41585	41587	or
O	41588	41592	even
O	41593	41598	worse
O	41598	41599	,
O	41600	41605	using
O	41606	41608	it
O	41609	41617	multiple
O	41618	41623	times
O	41624	41626	at
O	41627	41630	the
O	41631	41635	same
O	41636	41640	time
O	41640	41641	)
O	41642	41647	doesn
O	41647	41648	’
O	41648	41649	t
O	41650	41654	play
O	41655	41659	well
O	41659	41660	…
O	41661	41664	For
O	41665	41677	completeness
O	41677	41678	,
O	41679	41683	here
O	41684	41686	is
O	41687	41691	your
O	41692	41701	quicksort
O	41702	41709	example
O	41710	41720	translated
O	41721	41723	to
O	41724	41727	the
O	41728	41732	Java
B-api_mention	41733	41739	Stream
O	41740	41743	API
O	41743	41744	.

O	41745	41747	It
O	41748	41753	shows
O	41754	41758	that
O	41759	41761	it
O	41762	41766	does
O	41767	41770	not
O	41771	41777	really
O	41778	41779	“
O	41779	41783	take
O	41784	41788	away
O	41789	41793	much
O	41794	41799	power
O	41799	41800	”
O	41800	41801	.

O	41802	41803	#
O	41803	41806	pre
O	41807	41809	It
O	41810	41813	can
O	41814	41816	be
O	41817	41821	used
O	41822	41826	like
O	41827	41828	#
O	41828	41831	pre
O	41832	41835	You
O	41836	41839	can
O	41840	41845	write
O	41846	41848	it
O	41849	41853	even
O	41854	41858	more
O	41859	41866	compact
O	41867	41869	as
O	41870	41871	#
O	41871	41874	pre

O	41876	41884	Question
O	41884	41885	-
O	41885	41893	28459498
O	41893	41894	,
O	41895	41901	answer
O	41901	41902	-
O	41902	41910	28465634

O	41911	41912	I
O	41913	41918	think
O	41919	41924	there
O	41925	41928	are
O	41929	41933	very
O	41934	41937	few
O	41938	41949	differences
O	41950	41957	between
O	41958	41961	the
O	41962	41965	two
O	41966	41970	when
O	41971	41974	you
O	41975	41979	look
O	41980	41987	closely
O	41988	41994	enough
O	41994	41995	.

O	41996	41998	At
O	41999	42001	it
O	42001	42002	'
O	42002	42003	s
O	42004	42008	face
O	42008	42009	,
O	42010	42012	an
O	42013	42024	IEnumerable
O	42025	42029	does
O	42030	42036	appear
O	42037	42039	to
O	42040	42042	be
O	42043	42044	a
O	42045	42053	reusable
O	42054	42063	construct
O	42063	42064	:
O	42065	42066	#
O	42066	42069	pre
O	42070	42077	However
O	42077	42078	,
O	42079	42082	the
O	42083	42091	compiler
O	42092	42094	is
O	42095	42103	actually
O	42104	42109	doing
O	42110	42111	a
O	42112	42118	little
O	42119	42122	bit
O	42123	42125	of
O	42126	42130	work
O	42131	42133	to
O	42134	42138	help
O	42139	42141	us
O	42142	42145	out
O	42145	42146	;
O	42147	42149	it
O	42150	42159	generates
O	42160	42163	the
O	42164	42173	following
O	42174	42178	code
O	42178	42179	:
O	42180	42181	#
O	42181	42184	pre
O	42185	42189	Each
O	42190	42194	time
O	42195	42198	you
O	42199	42204	would
O	42205	42213	actually
O	42214	42221	iterate
O	42222	42226	over
O	42227	42230	the
O	42231	42241	enumerable
O	42241	42242	,
O	42243	42246	the
O	42247	42255	compiler
O	42256	42263	creates
O	42264	42266	an
O	42267	42277	enumerator
O	42277	42278	.

O	42279	42282	The
O	42283	42293	enumerator
O	42294	42296	is
O	42297	42300	not
O	42301	42309	reusable
O	42309	42310	;
O	42311	42318	further
O	42319	42324	calls
O	42325	42327	to
B-api_mention	42328	42336	MoveNext
O	42337	42341	will
O	42342	42346	just
O	42347	42353	return
O	42354	42359	false
O	42359	42360	,
O	42361	42364	and
O	42365	42370	there
O	42371	42373	is
O	42374	42376	no
O	42377	42380	way
O	42381	42383	to
O	42384	42389	reset
O	42390	42392	it
O	42393	42395	to
O	42396	42399	the
O	42400	42409	beginning
O	42409	42410	.

O	42411	42413	If
O	42414	42417	you
O	42418	42422	want
O	42423	42425	to
O	42426	42433	iterate
O	42434	42438	over
O	42439	42442	the
O	42443	42450	numbers
O	42451	42456	again
O	42456	42457	,
O	42458	42461	you
O	42462	42466	will
O	42467	42471	need
O	42472	42474	to
O	42475	42481	create
O	42482	42489	another
O	42490	42500	enumerator
O	42501	42509	instance
O	42509	42510	.

O	42511	42513	To
O	42514	42520	better
O	42521	42531	illustrate
O	42532	42536	that
O	42537	42540	the
O	42541	42552	IEnumerable
O	42553	42556	has
O	42557	42558	(
O	42558	42561	can
O	42562	42566	have
O	42566	42567	)
O	42568	42571	the
O	42572	42576	same
O	42577	42578	'
O	42578	42585	feature
O	42585	42586	'
O	42587	42589	as
O	42590	42591	a
O	42592	42596	Java
B-api_mention	42597	42603	Stream
O	42603	42604	,
O	42605	42613	consider
O	42614	42615	a
O	42616	42626	enumerable
O	42627	42632	whose
O	42633	42639	source
O	42640	42642	of
O	42643	42646	the
O	42647	42654	numbers
O	42655	42657	is
O	42658	42661	not
O	42662	42663	a
O	42664	42670	static
O	42671	42681	collection
O	42681	42682	.

O	42683	42686	For
O	42687	42694	example
O	42694	42695	,
O	42696	42698	we
O	42699	42702	can
O	42703	42709	create
O	42710	42712	an
O	42713	42723	enumerable
O	42724	42730	object
O	42731	42736	which
O	42737	42746	generates
O	42747	42748	a
O	42749	42757	sequence
O	42758	42760	of
O	42761	42762	5
O	42763	42769	random
O	42770	42777	numbers
O	42777	42778	:
O	42779	42780	#
O	42780	42783	pre
O	42784	42787	Now
O	42788	42790	we
O	42791	42795	have
O	42796	42800	very
O	42801	42808	similar
O	42809	42813	code
O	42814	42816	to
O	42817	42820	the
O	42821	42829	previous
O	42830	42835	array
O	42835	42836	-
O	42836	42841	based
O	42842	42852	enumerable
O	42852	42853	,
O	42854	42857	but
O	42858	42862	with
O	42863	42864	a
O	42865	42871	second
O	42872	42881	iteration
O	42882	42886	over
O	42887	42894	numbers
O	42895	42896	:
O	42897	42898	#
O	42898	42901	pre
O	42902	42905	The
O	42906	42912	second
O	42913	42917	time
O	42918	42920	we
O	42921	42928	iterate
O	42929	42933	over
O	42934	42941	numbers
O	42942	42944	we
O	42945	42949	will
O	42950	42953	get
O	42954	42955	a
O	42956	42965	different
O	42966	42974	sequence
O	42975	42977	of
O	42978	42985	numbers
O	42985	42986	,
O	42987	42992	which
O	42993	42996	isn
O	42996	42997	'
O	42997	42998	t
O	42999	43007	reusable
O	43008	43010	in
O	43011	43014	the
O	43015	43019	same
O	43020	43025	sense
O	43025	43026	.

O	43027	43029	Or
O	43029	43030	,
O	43031	43033	we
O	43034	43039	could
O	43040	43044	have
O	43045	43052	written
O	43053	43056	the
B-api_mention	43057	43075	RandomNumberStream
O	43076	43078	to
O	43079	43085	thrown
O	43086	43088	an
O	43089	43098	exception
O	43099	43101	if
O	43102	43105	you
O	43106	43109	try
O	43110	43112	to
O	43113	43120	iterate
O	43121	43125	over
O	43126	43128	it
O	43129	43137	multiple
O	43138	43143	times
O	43143	43144	,
O	43145	43151	making
O	43152	43155	the
O	43156	43166	enumerable
O	43167	43175	actually
O	43176	43184	unusable
O	43185	43186	(
O	43186	43190	like
O	43191	43192	a
O	43193	43197	Java
B-api_mention	43198	43204	Stream
O	43204	43205	)
O	43205	43206	.

O	43207	43211	Also
O	43211	43212	,
O	43213	43217	what
O	43218	43222	does
O	43223	43227	your
O	43228	43238	enumerable
O	43238	43239	-
O	43239	43244	based
O	43245	43250	quick
O	43251	43255	sort
O	43256	43260	mean
O	43261	43265	when
O	43266	43273	applied
O	43274	43276	to
O	43277	43278	a
B-api_mention	43279	43297	RandomNumberStream
O	43298	43299	?

O	43300	43310	Conclusion
O	43311	43313	So
O	43313	43314	,
O	43315	43318	the
O	43319	43326	biggest
O	43327	43337	difference
O	43338	43340	is
O	43341	43345	that
O	43346	43347	.
O	43347	43350	NET
O	43351	43357	allows
O	43358	43361	you
O	43362	43364	to
O	43365	43370	reuse
O	43371	43373	an
O	43374	43385	IEnumerable
O	43386	43388	by
O	43389	43399	implicitly
O	43400	43408	creating
O	43409	43410	a
O	43411	43414	new
O	43415	43426	IEnumerator
O	43427	43429	in
O	43430	43433	the
O	43434	43444	background
O	43445	43453	whenever
O	43454	43456	it
O	43457	43462	would
O	43463	43467	need
O	43468	43470	to
O	43471	43477	access
O	43478	43486	elements
O	43487	43489	in
O	43490	43493	the
O	43494	43502	sequence
O	43502	43503	.

O	43504	43508	This
O	43509	43517	implicit
O	43518	43526	behavior
O	43527	43529	is
O	43530	43535	often
O	43536	43542	useful
O	43543	43544	(
O	43544	43547	and
O	43548	43549	'
O	43549	43557	powerful
O	43557	43558	'
O	43559	43561	as
O	43562	43565	you
O	43566	43571	state
O	43571	43572	)
O	43572	43573	,
O	43574	43581	because
O	43582	43584	we
O	43585	43588	can
O	43589	43599	repeatedly
O	43600	43607	iterate
O	43608	43612	over
O	43613	43614	a
O	43615	43625	collection
O	43625	43626	.

O	43627	43630	But
O	43631	43640	sometimes
O	43640	43641	,
O	43642	43646	this
O	43647	43655	implicit
O	43656	43664	behavior
O	43665	43668	can
O	43669	43677	actually
O	43678	43683	cause
O	43684	43692	problems
O	43692	43693	.

O	43694	43696	If
O	43697	43701	your
O	43702	43706	data
O	43707	43713	source
O	43714	43716	is
O	43717	43720	not
O	43721	43727	static
O	43727	43728	,
O	43729	43731	or
O	43732	43734	is
O	43735	43741	costly
O	43742	43744	to
O	43745	43751	access
O	43752	43753	(
O	43753	43757	like
O	43758	43759	a
O	43760	43768	database
O	43769	43771	or
O	43772	43775	web
O	43776	43780	site
O	43780	43781	)
O	43781	43782	,
O	43783	43787	then
O	43788	43789	a
O	43790	43793	lot
O	43794	43796	of
O	43797	43808	assumptions
O	43809	43814	about
O	43815	43826	IEnumerable
O	43827	43831	have
O	43832	43834	to
O	43835	43837	be
O	43838	43847	discarded
O	43847	43848	;
O	43849	43854	reuse
O	43855	43857	is
O	43858	43861	not
O	43862	43866	that
O	43867	43875	straight
O	43875	43876	-
O	43876	43883	forward

O	43885	43893	Question
O	43893	43894	-
O	43894	43902	28459498
O	43902	43903	,
O	43904	43910	answer
O	43910	43911	-
O	43911	43919	28513908

O	43920	43921	I
O	43922	43926	have
O	43927	43931	some
O	43932	43945	recollections
O	43946	43950	from
O	43951	43954	the
O	43955	43960	early
O	43961	43967	design
O	43968	43970	of
O	43971	43974	the
B-api_mention	43975	43982	Streams
O	43983	43986	API
O	43987	43991	that
O	43992	43997	might
O	43998	44002	shed
O	44003	44007	some
O	44008	44013	light
O	44014	44016	on
O	44017	44020	the
O	44021	44027	design
O	44028	44037	rationale
O	44037	44038	.

O	44039	44043	Back
O	44044	44046	in
O	44047	44051	2012
O	44051	44052	,
O	44053	44055	we
O	44056	44060	were
O	44061	44067	adding
O	44068	44075	lambdas
O	44076	44078	to
O	44079	44082	the
O	44083	44091	language
O	44091	44092	,
O	44093	44096	and
O	44097	44099	we
O	44100	44106	wanted
O	44107	44108	a
O	44109	44120	collections
O	44120	44121	-
O	44121	44129	oriented
O	44130	44132	or
O	44133	44134	"
O	44134	44138	bulk
O	44139	44143	data
O	44143	44144	"
O	44145	44148	set
O	44149	44151	of
O	44152	44162	operations
O	44162	44163	,
O	44164	44174	programmed
O	44175	44180	using
O	44181	44188	lambdas
O	44188	44189	,
O	44190	44194	that
O	44195	44200	would
O	44201	44211	facilitate
O	44212	44223	parallelism
O	44223	44224	.

O	44225	44228	The
O	44229	44233	idea
O	44234	44236	of
O	44237	44243	lazily
O	44244	44252	chaining
O	44253	44263	operations
O	44264	44272	together
O	44273	44276	was
O	44277	44281	well
O	44282	44293	established
O	44294	44296	by
O	44297	44301	this
O	44302	44307	point
O	44307	44308	.

O	44309	44311	We
O	44312	44316	also
O	44317	44321	didn
O	44321	44322	'
O	44322	44323	t
O	44324	44328	want
O	44329	44332	the
O	44333	44345	intermediate
O	44346	44356	operations
O	44357	44359	to
O	44360	44365	store
O	44366	44373	results
O	44373	44374	.

O	44375	44378	The
O	44379	44383	main
O	44384	44390	issues
O	44391	44393	we
O	44394	44400	needed
O	44401	44403	to
O	44404	44410	decide
O	44411	44415	were
O	44416	44420	what
O	44421	44424	the
O	44425	44432	objects
O	44433	44435	in
O	44436	44439	the
O	44440	44445	chain
O	44446	44452	looked
O	44453	44457	like
O	44458	44460	in
O	44461	44464	the
O	44465	44468	API
O	44469	44472	and
O	44473	44476	how
O	44477	44481	they
O	44482	44488	hooked
O	44489	44491	up
O	44492	44494	to
O	44495	44499	data
O	44500	44507	sources
O	44507	44508	.

O	44509	44512	The
O	44513	44520	sources
O	44521	44525	were
O	44526	44531	often
O	44532	44543	collections
O	44543	44544	,
O	44545	44548	but
O	44549	44551	we
O	44552	44556	also
O	44557	44563	wanted
O	44564	44566	to
O	44567	44574	support
O	44575	44579	data
O	44580	44586	coming
O	44587	44591	from
O	44592	44593	a
O	44594	44598	file
O	44599	44601	or
O	44602	44605	the
O	44606	44613	network
O	44613	44614	,
O	44615	44617	or
O	44618	44622	data
O	44623	44632	generated
O	44633	44635	on
O	44635	44636	-
O	44636	44639	the
O	44639	44640	-
O	44640	44643	fly
O	44643	44644	,
O	44645	44646	e
O	44646	44647	.
O	44647	44648	g
O	44648	44649	.
O	44649	44650	,
O	44651	44655	from
O	44656	44657	a
O	44658	44664	random
O	44665	44671	number
O	44672	44681	generator
O	44681	44682	.

O	44683	44688	There
O	44689	44693	were
O	44694	44698	many
O	44699	44709	influences
O	44710	44712	of
O	44713	44721	existing
O	44722	44726	work
O	44727	44729	on
O	44730	44733	the
O	44734	44740	design
O	44740	44741	.

O	44742	44747	Among
O	44748	44751	the
O	44752	44756	more
O	44757	44768	influential
O	44769	44773	were
O	44774	44780	Google
O	44780	44781	'
O	44781	44782	s
O	44783	44788	Guava
O	44789	44796	library
O	44797	44800	and
O	44801	44804	the
O	44805	44810	Scala
O	44811	44822	collections
O	44823	44830	library
O	44830	44831	.

O	44832	44833	(
O	44833	44835	If
O	44836	44843	anybody
O	44844	44846	is
O	44847	44856	surprised
O	44857	44862	about
O	44863	44866	the
O	44867	44876	influence
O	44877	44881	from
O	44882	44887	Guava
O	44887	44888	,
O	44889	44893	note
O	44894	44898	that
O	44899	44904	Kevin
O	44905	44916	Bourrillion
O	44917	44918	,
O	44919	44924	Guava
O	44925	44929	lead
O	44930	44939	developer
O	44939	44940	,
O	44941	44944	was
O	44945	44947	on
O	44948	44951	the
O	44952	44955	JSR
O	44955	44956	-
O	44956	44959	335
O	44960	44966	Lambda
O	44967	44973	expert
O	44974	44979	group
O	44979	44980	.
O	44980	44981	)
O	44982	44984	On
O	44985	44990	Scala
O	44991	45002	collections
O	45002	45003	,
O	45004	45006	we
O	45007	45012	found
O	45013	45017	this
O	45018	45022	talk
O	45023	45025	by
O	45026	45032	Martin
O	45033	45040	Odersky
O	45041	45043	to
O	45044	45046	be
O	45047	45049	of
O	45050	45060	particular
O	45061	45069	interest
O	45069	45070	:
O	45071	45077	Future
O	45077	45078	-
O	45078	45086	Proofing
O	45087	45092	Scala
O	45093	45104	Collections
O	45104	45105	:
O	45106	45110	from
O	45111	45118	Mutable
O	45119	45121	to
O	45122	45132	Persistent
O	45133	45135	to
O	45136	45144	Parallel
O	45145	45146	.

O	45147	45148	(
O	45148	45156	Stanford
O	45157	45162	EE380
O	45162	45163	,
O	45164	45168	2011
O	45169	45173	June
O	45174	45175	1
O	45175	45176	.
O	45176	45177	)
O	45178	45181	Our
O	45182	45191	prototype
O	45192	45198	design
O	45199	45201	at
O	45202	45205	the
O	45206	45210	time
O	45211	45214	was
O	45215	45220	based
O	45221	45227	around
B-api_mention	45228	45236	Iterable
O	45237	45238	.

O	45239	45242	The
O	45243	45251	familiar
O	45252	45262	operations
B-api_mention	45263	45269	filter
O	45270	45271	,
B-api_mention	45272	45275	map
O	45276	45277	,
O	45278	45281	and
O	45282	45284	so
O	45285	45290	forth
O	45291	45295	were
O	45296	45305	extension
O	45306	45307	(
O	45307	45314	default
O	45314	45315	)
O	45316	45323	methods
O	45324	45326	on
B-api_mention	45327	45335	Iterable
O	45336	45337	.

O	45338	45345	Calling
O	45346	45349	one
O	45350	45355	added
O	45356	45358	an
O	45359	45368	operation
O	45369	45371	to
O	45372	45375	the
O	45376	45381	chain
O	45382	45385	and
O	45386	45394	returned
O	45395	45402	another
B-api_mention	45403	45411	Iterable
O	45412	45413	.

O	45414	45415	A
O	45416	45424	terminal
O	45425	45434	operation
O	45435	45439	like
O	45440	45445	count
O	45446	45451	would
O	45452	45456	call
B-api_mention	45457	45465	iterator
I-api_mention	45465	45466	(
I-api_mention	45466	45470	args
I-api_mention	45470	45471	)
O	45472	45474	up
O	45475	45478	the
O	45479	45484	chain
O	45485	45487	to
O	45488	45491	the
O	45492	45498	source
O	45498	45499	,
O	45500	45503	and
O	45504	45507	the
O	45508	45518	operations
O	45519	45523	were
O	45524	45535	implemented
O	45536	45542	within
O	45543	45547	each
O	45548	45553	stage
O	45553	45554	'
O	45554	45555	s
B-api_mention	45556	45564	Iterator
O	45564	45565	.

O	45566	45571	Since
O	45572	45577	these
O	45578	45581	are
O	45582	45591	Iterables
O	45591	45592	,
O	45593	45596	you
O	45597	45600	can
O	45601	45605	call
O	45606	45609	the
B-api_mention	45610	45618	iterator
I-api_mention	45618	45619	(
I-api_mention	45619	45623	args
I-api_mention	45623	45624	)
O	45625	45631	method
O	45632	45636	more
O	45637	45641	than
O	45642	45646	once
O	45646	45647	.

O	45648	45652	What
O	45653	45659	should
O	45660	45666	happen
O	45667	45671	then
O	45671	45672	?

O	45673	45675	If
O	45676	45679	the
O	45680	45686	source
O	45687	45689	is
O	45690	45691	a
O	45692	45702	collection
O	45702	45703	,
O	45704	45708	this
O	45709	45715	mostly
O	45716	45721	works
O	45722	45726	fine
O	45726	45727	.

B-api_mention	45728	45739	Collections
O	45740	45743	are
B-api_mention	45744	45752	Iterable
O	45752	45753	,
O	45754	45757	and
O	45758	45762	each
O	45763	45767	call
O	45768	45770	to
B-api_mention	45771	45779	iterator
I-api_mention	45779	45780	(
I-api_mention	45780	45784	args
I-api_mention	45784	45785	)
O	45786	45794	produces
O	45795	45796	a
O	45797	45805	distinct
B-api_mention	45806	45814	Iterator
O	45815	45823	instance
O	45824	45828	that
O	45829	45831	is
O	45832	45843	independent
O	45844	45846	of
O	45847	45850	any
O	45851	45856	other
O	45857	45863	active
O	45864	45873	instances
O	45873	45874	,
O	45875	45878	and
O	45879	45883	each
O	45884	45893	traverses
O	45894	45897	the
O	45898	45908	collection
O	45909	45922	independently
O	45922	45923	.

O	45924	45929	Great
O	45929	45930	.

O	45931	45934	Now
O	45935	45939	what
O	45940	45942	if
O	45943	45946	the
O	45947	45953	source
O	45954	45956	is
O	45957	45960	one
O	45960	45961	-
O	45961	45965	shot
O	45965	45966	,
O	45967	45971	like
O	45972	45979	reading
O	45980	45985	lines
O	45986	45990	from
O	45991	45992	a
O	45993	45997	file
O	45997	45998	?

O	45999	46004	Maybe
O	46005	46008	the
O	46009	46014	first
O	46015	46023	Iterator
O	46024	46030	should
O	46031	46034	get
O	46035	46038	all
O	46039	46042	the
O	46043	46049	values
O	46050	46053	but
O	46054	46057	the
O	46058	46064	second
O	46065	46068	and
O	46069	46079	subsequent
O	46080	46084	ones
O	46085	46091	should
O	46092	46094	be
O	46095	46100	empty
O	46100	46101	.

O	46102	46107	Maybe
O	46108	46111	the
O	46112	46118	values
O	46119	46125	should
O	46126	46128	be
O	46129	46140	interleaved
O	46141	46146	among
O	46147	46150	the
O	46151	46160	Iterators
O	46160	46161	.

O	46162	46164	Or
O	46165	46170	maybe
O	46171	46175	each
B-api_mention	46176	46184	Iterator
O	46185	46191	should
O	46192	46195	get
O	46196	46199	all
O	46200	46203	the
O	46204	46208	same
O	46209	46215	values
O	46215	46216	.

O	46217	46221	Then
O	46221	46222	,
O	46223	46227	what
O	46228	46230	if
O	46231	46234	you
O	46235	46239	have
O	46240	46243	two
O	46244	46253	iterators
O	46254	46257	and
O	46258	46261	one
O	46262	46266	gets
O	46267	46274	farther
O	46275	46280	ahead
O	46281	46283	of
O	46284	46287	the
O	46288	46293	other
O	46293	46294	?

O	46295	46303	Somebody
O	46304	46308	will
O	46309	46313	have
O	46314	46316	to
O	46317	46323	buffer
O	46324	46326	up
O	46327	46330	the
O	46331	46337	values
O	46338	46340	in
O	46341	46344	the
O	46345	46351	second
O	46352	46360	Iterator
O	46361	46366	until
O	46367	46371	they
O	46371	46372	'
O	46372	46374	re
O	46375	46379	read
O	46379	46380	.

O	46381	46386	Worse
O	46386	46387	,
O	46388	46392	what
O	46393	46395	if
O	46396	46399	you
O	46400	46403	get
O	46404	46407	one
B-api_mention	46408	46416	Iterator
O	46417	46420	and
O	46421	46425	read
O	46426	46429	all
O	46430	46433	the
O	46434	46440	values
O	46440	46441	,
O	46442	46445	and
O	46446	46450	only
O	46451	46455	then
O	46456	46459	get
O	46460	46461	a
O	46462	46468	second
B-api_mention	46469	46477	Iterator
O	46477	46478	.

O	46479	46484	Where
O	46485	46487	do
O	46488	46491	the
O	46492	46498	values
O	46499	46503	come
O	46504	46508	from
O	46509	46512	now
O	46512	46513	?

O	46514	46516	Is
O	46517	46522	there
O	46523	46524	a
O	46525	46536	requirement
O	46537	46540	for
O	46541	46545	them
O	46546	46549	all
O	46550	46552	to
O	46553	46555	be
O	46556	46564	buffered
O	46565	46567	up
O	46568	46572	just
O	46573	46575	in
O	46576	46580	case
O	46581	46589	somebody
O	46590	46595	wants
O	46596	46597	a
O	46598	46604	second
B-api_mention	46605	46613	Iterator
O	46613	46614	?

O	46615	46622	Clearly
O	46622	46623	,
O	46624	46632	allowing
O	46633	46641	multiple
O	46642	46651	Iterators
O	46652	46656	over
O	46657	46658	a
O	46659	46662	one
O	46662	46663	-
O	46663	46667	shot
O	46668	46674	source
O	46675	46681	raises
O	46682	46683	a
O	46684	46687	lot
O	46688	46690	of
O	46691	46700	questions
O	46700	46701	.

O	46702	46704	We
O	46705	46709	didn
O	46709	46710	'
O	46710	46711	t
O	46712	46716	have
O	46717	46721	good
O	46722	46729	answers
O	46730	46733	for
O	46734	46738	them
O	46738	46739	.

O	46740	46742	We
O	46743	46749	wanted
O	46750	46760	consistent
O	46760	46761	,
O	46762	46773	predictable
O	46774	46782	behavior
O	46783	46786	for
O	46787	46791	what
O	46792	46799	happens
O	46800	46802	if
O	46803	46806	you
O	46807	46811	call
B-api_mention	46812	46820	iterator
I-api_mention	46820	46821	(
I-api_mention	46821	46825	args
I-api_mention	46825	46826	)
O	46827	46832	twice
O	46832	46833	.

O	46834	46838	This
O	46839	46845	pushed
O	46846	46848	us
O	46849	46855	toward
O	46856	46867	disallowing
O	46868	46876	multiple
O	46877	46887	traversals
O	46887	46888	,
O	46889	46895	making
O	46896	46899	the
O	46900	46909	pipelines
O	46910	46913	one
O	46913	46914	-
O	46914	46918	shot
O	46918	46919	.

O	46920	46922	We
O	46923	46927	also
O	46928	46936	observed
O	46937	46943	others
O	46944	46951	bumping
O	46952	46956	into
O	46957	46962	these
O	46963	46969	issues
O	46969	46970	.

O	46971	46973	In
O	46974	46977	the
O	46978	46981	JDK
O	46981	46982	,
O	46983	46987	most
O	46988	46997	Iterables
O	46998	47001	are
O	47002	47013	collections
O	47014	47016	or
O	47017	47027	collection
O	47027	47028	-
O	47028	47032	like
O	47033	47040	objects
O	47040	47041	,
O	47042	47047	which
O	47048	47053	allow
O	47054	47062	multiple
O	47063	47072	traversal
O	47072	47073	.

O	47074	47076	It
O	47077	47080	isn
O	47080	47081	'
O	47081	47082	t
O	47083	47092	specified
O	47093	47101	anywhere
O	47101	47102	,
O	47103	47106	but
O	47107	47112	there
O	47113	47119	seemed
O	47120	47122	to
O	47123	47125	be
O	47126	47128	an
O	47129	47138	unwritten
O	47139	47150	expectation
O	47151	47155	that
O	47156	47165	Iterables
O	47166	47171	allow
O	47172	47180	multiple
O	47181	47190	traversal
O	47190	47191	.

O	47192	47193	A
O	47194	47201	notable
O	47202	47211	exception
O	47212	47214	is
O	47215	47218	the
O	47219	47222	NIO
B-api_mention	47223	47238	DirectoryStream
O	47239	47248	interface
O	47248	47249	.

O	47250	47253	Its
O	47254	47267	specification
O	47268	47276	includes
O	47277	47281	this
O	47282	47293	interesting
O	47294	47301	warning
O	47301	47302	:
O	47303	47304	#
O	47304	47314	blockquote
O	47315	47316	[
O	47316	47320	bold
O	47321	47323	in
O	47324	47332	original
O	47332	47333	]
O	47334	47338	This
O	47339	47345	seemed
O	47346	47353	unusual
O	47354	47357	and
O	47358	47368	unpleasant
O	47369	47375	enough
O	47376	47380	that
O	47381	47383	we
O	47384	47388	didn
O	47388	47389	'
O	47389	47390	t
O	47391	47395	want
O	47396	47398	to
O	47399	47405	create
O	47406	47407	a
O	47408	47413	whole
O	47414	47419	bunch
O	47420	47422	of
O	47423	47426	new
O	47427	47436	Iterables
O	47437	47441	that
O	47442	47447	might
O	47448	47450	be
O	47451	47455	once
O	47455	47456	-
O	47456	47460	only
O	47460	47461	.

O	47462	47466	This
O	47467	47473	pushed
O	47474	47476	us
O	47477	47481	away
O	47482	47486	from
O	47487	47492	using
B-api_mention	47493	47501	Iterable
O	47501	47502	.

O	47503	47508	About
O	47509	47513	this
O	47514	47518	time
O	47518	47519	,
O	47520	47522	an
O	47523	47530	article
O	47531	47533	by
O	47534	47539	Bruce
O	47540	47545	Eckel
O	47546	47554	appeared
O	47555	47559	that
O	47560	47569	described
O	47570	47571	a
O	47572	47576	spot
O	47577	47579	of
O	47580	47587	trouble
O	47588	47590	he
O	47590	47591	'
O	47591	47592	d
O	47593	47596	had
O	47597	47601	with
O	47602	47607	Scala
O	47607	47608	.

O	47609	47611	He
O	47611	47612	'
O	47612	47613	d
O	47614	47621	written
O	47622	47626	this
O	47627	47631	code
O	47631	47632	:
O	47633	47634	#
O	47634	47637	pre
O	47638	47640	It
O	47640	47641	'
O	47641	47642	s
O	47643	47649	pretty
O	47650	47665	straightforward
O	47665	47666	.

O	47667	47669	It
O	47670	47676	parses
O	47677	47682	lines
O	47683	47685	of
O	47686	47690	text
O	47691	47695	into
O	47696	47706	Registrant
O	47707	47714	objects
O	47715	47718	and
O	47719	47725	prints
O	47726	47730	them
O	47731	47734	out
O	47735	47740	twice
O	47740	47741	.

O	47742	47748	Except
O	47749	47753	that
O	47754	47756	it
O	47757	47765	actually
O	47766	47770	only
O	47771	47777	prints
O	47778	47782	them
O	47783	47786	out
O	47787	47791	once
O	47791	47792	.

O	47793	47795	It
O	47796	47801	turns
O	47802	47805	out
O	47806	47810	that
O	47811	47813	he
O	47814	47821	thought
O	47822	47826	that
O	47827	47838	registrants
O	47839	47842	was
O	47843	47844	a
O	47845	47855	collection
O	47855	47856	,
O	47857	47861	when
O	47862	47864	in
O	47865	47869	fact
O	47870	47872	it
O	47872	47873	'
O	47873	47874	s
O	47875	47877	an
O	47878	47886	iterator
O	47886	47887	.

O	47888	47891	The
O	47892	47898	second
O	47899	47903	call
O	47904	47906	to
O	47907	47914	foreach
O	47915	47925	encounters
O	47926	47928	an
O	47929	47934	empty
O	47935	47943	iterator
O	47943	47944	,
O	47945	47949	from
O	47950	47955	which
O	47956	47959	all
O	47960	47966	values
O	47967	47971	have
O	47972	47976	been
O	47977	47986	exhausted
O	47986	47987	,
O	47988	47990	so
O	47991	47993	it
O	47994	48000	prints
O	48001	48008	nothing
O	48008	48009	.

O	48010	48014	This
O	48015	48019	kind
O	48020	48022	of
O	48023	48033	experience
O	48034	48043	convinced
O	48044	48046	us
O	48047	48051	that
O	48052	48054	it
O	48055	48058	was
O	48059	48063	very
O	48064	48073	important
O	48074	48076	to
O	48077	48081	have
O	48082	48089	clearly
O	48090	48101	predictable
O	48102	48109	results
O	48110	48112	if
O	48113	48121	multiple
O	48122	48131	traversal
O	48132	48134	is
O	48135	48144	attempted
O	48144	48145	.

O	48146	48148	It
O	48149	48153	also
O	48154	48165	highlighted
O	48166	48169	the
O	48170	48180	importance
O	48181	48183	of
O	48184	48198	distinguishing
O	48199	48206	between
O	48207	48211	lazy
O	48212	48220	pipeline
O	48220	48221	-
O	48221	48225	like
O	48226	48236	structures
O	48237	48241	from
O	48242	48248	actual
O	48249	48260	collections
O	48261	48265	that
O	48266	48271	store
O	48272	48276	data
O	48276	48277	.

O	48278	48282	This
O	48283	48285	in
O	48286	48290	turn
O	48291	48296	drove
O	48297	48300	the
O	48301	48311	separation
O	48312	48314	of
O	48315	48318	the
O	48319	48323	lazy
O	48324	48332	pipeline
O	48333	48343	operations
O	48344	48348	into
O	48349	48352	the
O	48353	48356	new
B-api_mention	48357	48363	Stream
O	48364	48373	interface
O	48374	48377	and
O	48378	48385	keeping
O	48386	48390	only
O	48391	48396	eager
O	48396	48397	,
O	48398	48406	mutative
O	48407	48417	operations
O	48418	48426	directly
O	48427	48429	on
B-api_mention	48430	48441	Collections
O	48441	48442	.

O	48443	48448	Brian
O	48449	48454	Goetz
O	48455	48458	has
O	48459	48468	explained
O	48469	48472	the
O	48473	48482	rationale
O	48483	48486	for
O	48487	48491	that
O	48491	48492	.

O	48493	48497	What
O	48498	48503	about
O	48504	48512	allowing
O	48513	48521	multiple
O	48522	48531	traversal
O	48532	48535	for
O	48536	48546	collection
O	48546	48547	-
O	48547	48552	based
O	48553	48562	pipelines
O	48563	48566	but
O	48567	48578	disallowing
O	48579	48581	it
O	48582	48585	for
O	48586	48589	non
O	48589	48590	-
O	48590	48600	collection
O	48600	48601	-
O	48601	48606	based
O	48607	48616	pipelines
O	48616	48617	?

O	48618	48620	It
O	48620	48621	'
O	48621	48622	s
O	48623	48635	inconsistent
O	48635	48636	,
O	48637	48640	but
O	48641	48643	it
O	48643	48644	'
O	48644	48645	s
O	48646	48654	sensible
O	48654	48655	.

O	48656	48658	If
O	48659	48662	you
O	48662	48663	'
O	48663	48665	re
O	48666	48673	reading
O	48674	48680	values
O	48681	48685	from
O	48686	48689	the
O	48690	48697	network
O	48697	48698	,
O	48699	48701	of
O	48702	48708	course
O	48709	48712	you
O	48713	48716	can
O	48716	48717	'
O	48717	48718	t
O	48719	48727	traverse
O	48728	48732	them
O	48733	48738	again
O	48738	48739	.

O	48740	48742	If
O	48743	48746	you
O	48747	48751	want
O	48752	48754	to
O	48755	48763	traverse
O	48764	48768	them
O	48769	48777	multiple
O	48778	48783	times
O	48783	48784	,
O	48785	48788	you
O	48789	48793	have
O	48794	48796	to
O	48797	48801	pull
O	48802	48806	them
O	48807	48811	into
O	48812	48813	a
O	48814	48824	collection
O	48825	48835	explicitly
O	48835	48836	.

O	48837	48840	But
O	48841	48844	let
O	48844	48845	'
O	48845	48846	s
O	48847	48854	explore
O	48855	48863	allowing
O	48864	48872	multiple
O	48873	48882	traversal
O	48883	48887	from
O	48888	48899	collections
O	48899	48900	-
O	48900	48905	based
O	48906	48915	pipelines
O	48915	48916	.

O	48917	48920	Let
O	48920	48921	'
O	48921	48922	s
O	48923	48926	say
O	48927	48930	you
O	48931	48934	did
O	48935	48939	this
O	48939	48940	:
O	48941	48942	#
O	48942	48945	pre
O	48946	48947	(
O	48947	48950	The
O	48951	48955	into
O	48956	48965	operation
O	48966	48968	is
O	48969	48972	now
O	48973	48980	spelled
B-api_mention	48981	48988	collect
I-api_mention	48988	48989	(
I-api_mention	48989	48993	args
I-api_mention	48993	48994	)
O	48995	48996	.
O	48996	48997	)
O	48998	49000	If
O	49001	49007	source
O	49008	49010	is
O	49011	49012	a
O	49013	49023	collection
O	49023	49024	,
O	49025	49029	then
O	49030	49033	the
O	49034	49039	first
B-api_mention	49040	49044	into
I-api_mention	49044	49045	(
I-api_mention	49045	49049	args
I-api_mention	49049	49050	)
O	49051	49055	call
O	49056	49060	will
O	49061	49067	create
O	49068	49069	a
O	49070	49075	chain
O	49076	49078	of
B-api_mention	49079	49088	Iterators
O	49089	49093	back
O	49094	49096	to
O	49097	49100	the
O	49101	49107	source
O	49107	49108	,
O	49109	49116	execute
O	49117	49120	the
O	49121	49129	pipeline
O	49130	49140	operations
O	49140	49141	,
O	49142	49145	and
O	49146	49150	send
O	49151	49154	the
O	49155	49162	results
O	49163	49167	into
O	49168	49171	the
O	49172	49183	destination
O	49183	49184	.

O	49185	49188	The
O	49189	49195	second
O	49196	49200	call
O	49201	49203	to
B-api_mention	49204	49208	into
I-api_mention	49208	49209	(
I-api_mention	49209	49213	args
I-api_mention	49213	49214	)
O	49215	49219	will
O	49220	49226	create
O	49227	49234	another
O	49235	49240	chain
O	49241	49243	of
O	49244	49253	Iterators
O	49253	49254	,
O	49255	49258	and
O	49259	49266	execute
O	49267	49270	the
O	49271	49279	pipeline
O	49280	49290	operations
O	49291	49296	again
O	49297	49298	.

O	49299	49303	This
O	49304	49307	isn
O	49307	49308	'
O	49308	49309	t
O	49310	49319	obviously
O	49320	49325	wrong
O	49326	49329	but
O	49330	49332	it
O	49333	49337	does
O	49338	49342	have
O	49343	49346	the
O	49347	49353	effect
O	49354	49356	of
O	49357	49367	performing
O	49368	49371	all
O	49372	49375	the
O	49376	49382	filter
O	49383	49386	and
O	49387	49390	map
O	49391	49401	operations
O	49402	49403	a
O	49404	49410	second
O	49411	49415	time
O	49416	49419	for
O	49420	49424	each
O	49425	49432	element
O	49432	49433	.

O	49434	49435	I
O	49436	49441	think
O	49442	49446	many
O	49447	49458	programmers
O	49459	49464	would
O	49465	49469	have
O	49470	49474	been
O	49475	49484	surprised
O	49485	49487	by
O	49488	49492	this
O	49493	49501	behavior
O	49501	49502	.

O	49503	49505	As
O	49506	49507	I
O	49508	49517	mentioned
O	49518	49523	above
O	49523	49524	,
O	49525	49527	we
O	49528	49531	had
O	49532	49536	been
O	49537	49544	talking
O	49545	49547	to
O	49548	49551	the
O	49552	49557	Guava
O	49558	49568	developers
O	49568	49569	.

O	49570	49573	One
O	49574	49576	of
O	49577	49580	the
O	49581	49585	cool
O	49586	49592	things
O	49593	49597	they
O	49598	49602	have
O	49603	49605	is
O	49606	49608	an
O	49609	49613	Idea
O	49614	49623	Graveyard
O	49624	49629	where
O	49630	49634	they
O	49635	49643	describe
O	49644	49652	features
O	49653	49657	that
O	49658	49662	they
O	49663	49670	decided
O	49671	49674	not
O	49675	49677	to
O	49678	49687	implement
O	49688	49693	along
O	49694	49698	with
O	49699	49702	the
O	49703	49710	reasons
O	49710	49711	.

O	49712	49715	The
O	49716	49720	idea
O	49721	49723	of
O	49724	49728	lazy
O	49729	49740	collections
O	49741	49747	sounds
O	49748	49754	pretty
O	49755	49759	cool
O	49759	49760	,
O	49761	49764	but
O	49765	49769	here
O	49769	49770	'
O	49770	49771	s
O	49772	49776	what
O	49777	49781	they
O	49782	49786	have
O	49787	49789	to
O	49790	49793	say
O	49794	49799	about
O	49800	49802	it
O	49802	49803	.

O	49804	49812	Consider
O	49813	49814	a
B-api_mention	49815	49819	List
I-api_mention	49819	49820	.
I-api_mention	49820	49826	filter
I-api_mention	49826	49827	(
I-api_mention	49827	49831	args
I-api_mention	49831	49832	)
O	49833	49842	operation
O	49843	49847	that
O	49848	49855	returns
O	49856	49857	a
B-api_mention	49858	49862	List
O	49863	49864	:
O	49865	49866	#
O	49866	49876	blockquote
O	49877	49879	To
O	49880	49884	take
O	49885	49886	a
O	49887	49895	specific
O	49896	49903	example
O	49903	49904	,
O	49905	49909	what
O	49909	49910	'
O	49910	49911	s
O	49912	49915	the
O	49916	49920	cost
O	49921	49923	of
B-api_mention	49924	49927	get
I-api_mention	49927	49928	(
I-api_mention	49928	49932	args
I-api_mention	49932	49933	)
O	49934	49936	or
B-api_mention	49937	49941	size
I-api_mention	49941	49942	(
I-api_mention	49942	49946	args
I-api_mention	49946	49947	)
O	49948	49950	on
O	49951	49952	a
B-api_mention	49953	49957	List
O	49957	49958	?

O	49959	49962	For
O	49963	49971	commonly
O	49972	49976	used
O	49977	49984	classes
O	49985	49989	like
B-api_mention	49990	49999	ArrayList
O	50000	50001	,
O	50002	50006	they
O	50006	50007	'
O	50007	50009	re
O	50010	50011	O
O	50011	50012	(
O	50012	50013	1
O	50013	50014	)
O	50014	50015	.

O	50016	50019	But
O	50020	50022	if
O	50023	50026	you
O	50027	50031	call
O	50032	50035	one
O	50036	50038	of
O	50039	50044	these
O	50045	50047	on
O	50048	50049	a
O	50050	50056	lazily
O	50056	50057	-
O	50057	50065	filtered
O	50066	50070	list
O	50070	50071	,
O	50072	50074	it
O	50075	50078	has
O	50079	50081	to
O	50082	50085	run
O	50086	50089	the
O	50090	50096	filter
O	50097	50101	over
O	50102	50105	the
O	50106	50113	backing
O	50114	50118	list
O	50118	50119	,
O	50120	50123	and
O	50124	50127	all
O	50128	50130	of
O	50131	50132	a
O	50133	50139	sudden
O	50140	50145	these
O	50146	50156	operations
O	50157	50160	are
O	50161	50162	O
O	50162	50163	(
O	50163	50164	n
O	50164	50165	)
O	50165	50166	.

O	50167	50172	Worse
O	50172	50173	,
O	50174	50176	it
O	50177	50180	has
O	50181	50183	to
O	50184	50192	traverse
O	50193	50196	the
O	50197	50204	backing
O	50205	50209	list
O	50210	50212	on
O	50213	50218	every
O	50219	50228	operation
O	50228	50229	.

O	50230	50234	This
O	50235	50241	seemed
O	50242	50244	to
O	50245	50247	us
O	50248	50250	to
O	50251	50253	be
O	50254	50257	too
O	50258	50262	much
O	50263	50271	laziness
O	50271	50272	.

O	50273	50275	It
O	50275	50276	'
O	50276	50277	s
O	50278	50281	one
O	50282	50287	thing
O	50288	50290	to
O	50291	50294	set
O	50295	50297	up
O	50298	50302	some
O	50303	50313	operations
O	50314	50317	and
O	50318	50323	defer
O	50324	50330	actual
O	50331	50340	execution
O	50341	50346	until
O	50347	50350	you
O	50351	50353	so
O	50354	50355	"
O	50355	50357	Go
O	50357	50358	"
O	50358	50359	.

O	50360	50362	It
O	50362	50363	'
O	50363	50364	s
O	50365	50372	another
O	50373	50375	to
O	50376	50379	set
O	50380	50386	things
O	50387	50389	up
O	50390	50392	in
O	50393	50397	such
O	50398	50399	a
O	50400	50403	way
O	50404	50408	that
O	50409	50414	hides
O	50415	50416	a
O	50417	50428	potentially
O	50429	50434	large
O	50435	50441	amount
O	50442	50444	of
O	50445	50458	recomputation
O	50458	50459	.

O	50460	50462	In
O	50463	50472	proposing
O	50473	50475	to
O	50476	50484	disallow
O	50485	50488	non
O	50488	50489	-
O	50489	50495	linear
O	50496	50498	or
O	50499	50500	"
O	50500	50502	no
O	50502	50503	-
O	50503	50508	reuse
O	50508	50509	"
O	50510	50517	streams
O	50517	50518	,
O	50519	50523	Paul
O	50524	50530	Sandoz
O	50531	50540	described
O	50541	50544	the
O	50545	50554	potential
O	50555	50567	consequences
O	50568	50570	of
O	50571	50579	allowing
O	50580	50584	them
O	50585	50587	as
O	50588	50594	giving
O	50595	50599	rise
O	50600	50602	to
O	50603	50604	"
O	50604	50614	unexpected
O	50615	50617	or
O	50618	50627	confusing
O	50628	50635	results
O	50635	50636	.
O	50636	50637	"
O	50638	50640	He
O	50641	50645	also
O	50646	50655	mentioned
O	50656	50660	that
O	50661	50669	parallel
O	50670	50679	execution
O	50680	50685	would
O	50686	50690	make
O	50691	50697	things
O	50698	50702	even
O	50703	50711	trickier
O	50711	50712	.

O	50713	50720	Finally
O	50720	50721	,
O	50722	50723	I
O	50723	50724	'
O	50724	50725	d
O	50726	50729	add
O	50730	50734	that
O	50735	50736	a
O	50737	50745	pipeline
O	50746	50755	operation
O	50756	50760	with
O	50761	50765	side
O	50766	50773	effects
O	50774	50779	would
O	50780	50784	lead
O	50785	50787	to
O	50788	50797	difficult
O	50798	50801	and
O	50802	50809	obscure
O	50810	50814	bugs
O	50815	50817	if
O	50818	50821	the
O	50822	50831	operation
O	50832	50836	were
O	50837	50849	unexpectedly
O	50850	50858	executed
O	50859	50867	multiple
O	50868	50873	times
O	50873	50874	,
O	50875	50877	or
O	50878	50880	at
O	50881	50886	least
O	50887	50888	a
O	50889	50898	different
O	50899	50905	number
O	50906	50908	of
O	50909	50914	times
O	50915	50919	than
O	50920	50923	the
O	50924	50934	programmer
O	50935	50943	expected
O	50943	50944	.

O	50945	50946	(
O	50946	50949	But
O	50950	50954	Java
O	50955	50966	programmers
O	50967	50970	don
O	50970	50971	'
O	50971	50972	t
O	50973	50978	write
O	50979	50985	lambda
O	50986	50997	expressions
O	50998	51002	with
O	51003	51007	side
O	51008	51015	effects
O	51015	51016	,
O	51017	51019	do
O	51020	51024	they
O	51024	51025	?
O	51026	51028	DO
O	51029	51033	THEY
O	51033	51034	?
O	51034	51035	?
O	51035	51036	)
O	51037	51039	So
O	51040	51044	that
O	51044	51045	'
O	51045	51046	s
O	51047	51050	the
O	51051	51056	basic
O	51057	51066	rationale
O	51067	51070	for
O	51071	51074	the
O	51075	51079	Java
O	51080	51081	8
O	51082	51089	Streams
O	51090	51093	API
O	51094	51100	design
O	51101	51105	that
O	51106	51112	allows
O	51113	51116	one
O	51116	51117	-
O	51117	51121	shot
O	51122	51131	traversal
O	51132	51135	and
O	51136	51140	that
O	51141	51149	requires
O	51150	51151	a
O	51152	51160	strictly
O	51161	51167	linear
O	51168	51169	(
O	51169	51171	no
O	51172	51181	branching
O	51181	51182	)
O	51183	51191	pipeline
O	51191	51192	.

O	51193	51195	It
O	51196	51204	provides
O	51205	51215	consistent
O	51216	51224	behavior
O	51225	51231	across
O	51232	51240	multiple
O	51241	51250	different
O	51251	51257	stream
O	51258	51265	sources
O	51265	51266	,
O	51267	51269	it
O	51270	51277	clearly
O	51278	51287	separates
O	51288	51292	lazy
O	51293	51297	from
O	51298	51303	eager
O	51304	51314	operations
O	51314	51315	,
O	51316	51319	and
O	51320	51322	it
O	51323	51331	provides
O	51332	51333	a
O	51334	51349	straightforward
O	51350	51359	execution
O	51360	51365	model
O	51365	51366	.

O	51367	51371	With
O	51372	51378	regard
O	51379	51381	to
O	51382	51393	IEnumerable
O	51394	51395	,
O	51396	51397	I
O	51398	51400	am
O	51401	51404	far
O	51405	51409	from
O	51410	51412	an
O	51413	51419	expert
O	51420	51422	on
O	51423	51424	C
O	51424	51425	#
O	51426	51429	and
O	51430	51431	.
O	51431	51434	NET
O	51434	51435	,
O	51436	51438	so
O	51439	51440	I
O	51441	51446	would
O	51447	51457	appreciate
O	51458	51463	being
O	51464	51473	corrected
O	51474	51475	(
O	51475	51481	gently
O	51481	51482	)
O	51483	51485	if
O	51486	51487	I
O	51488	51492	draw
O	51493	51496	any
O	51497	51506	incorrect
O	51507	51518	conclusions
O	51518	51519	.

O	51520	51522	It
O	51523	51527	does
O	51528	51534	appear
O	51534	51535	,
O	51536	51543	however
O	51543	51544	,
O	51545	51549	that
O	51550	51561	IEnumerable
O	51562	51569	permits
O	51570	51578	multiple
O	51579	51588	traversal
O	51589	51591	to
O	51592	51598	behave
O	51599	51610	differently
O	51611	51615	with
O	51616	51625	different
O	51626	51633	sources
O	51633	51634	;
O	51635	51638	and
O	51639	51641	it
O	51642	51649	permits
O	51650	51651	a
O	51652	51661	branching
O	51662	51671	structure
O	51672	51674	of
O	51675	51681	nested
O	51682	51693	IEnumerable
O	51694	51704	operations
O	51704	51705	,
O	51706	51711	which
O	51712	51715	may
O	51716	51722	result
O	51723	51725	in
O	51726	51730	some
O	51731	51742	significant
O	51743	51756	recomputation
O	51756	51757	.

O	51758	51763	While
O	51764	51765	I
O	51766	51776	appreciate
O	51777	51781	that
O	51782	51791	different
O	51792	51799	systems
O	51800	51804	make
O	51805	51814	different
O	51815	51824	tradeoffs
O	51824	51825	,
O	51826	51831	these
O	51832	51835	are
O	51836	51839	two
O	51840	51855	characteristics
O	51856	51860	that
O	51861	51863	we
O	51864	51870	sought
O	51871	51873	to
O	51874	51879	avoid
O	51880	51882	in
O	51883	51886	the
O	51887	51893	design
O	51894	51896	of
O	51897	51900	the
O	51901	51905	Java
O	51906	51907	8
O	51908	51915	Streams
O	51916	51919	API
O	51919	51920	.

O	51921	51924	The
O	51925	51934	quicksort
O	51935	51942	example
O	51943	51948	given
O	51949	51951	by
O	51952	51955	the
O	51956	51958	OP
O	51959	51961	is
O	51962	51973	interesting
O	51973	51974	,
O	51975	51983	puzzling
O	51983	51984	,
O	51985	51988	and
O	51989	51990	I
O	51990	51991	'
O	51991	51992	m
O	51993	51998	sorry
O	51999	52001	to
O	52002	52005	say
O	52005	52006	,
O	52007	52015	somewhat
O	52016	52026	horrifying
O	52026	52027	.

O	52028	52035	Calling
O	52036	52045	QuickSort
O	52046	52051	takes
O	52052	52054	an
O	52055	52066	IEnumerable
O	52067	52070	and
O	52071	52078	returns
O	52079	52081	an
O	52082	52093	IEnumerable
O	52094	52095	,
O	52096	52098	so
O	52099	52101	no
O	52102	52109	sorting
O	52110	52112	is
O	52113	52121	actually
O	52122	52126	done
O	52127	52132	until
O	52133	52136	the
O	52137	52142	final
O	52143	52154	IEnumerable
O	52155	52157	is
O	52158	52167	traversed
O	52167	52168	.

O	52169	52173	What
O	52174	52177	the
O	52178	52182	call
O	52183	52188	seems
O	52189	52191	to
O	52192	52194	do
O	52194	52195	,
O	52196	52202	though
O	52202	52203	,
O	52204	52206	is
O	52207	52212	build
O	52213	52215	up
O	52216	52217	a
O	52218	52222	tree
O	52223	52232	structure
O	52233	52235	of
O	52236	52248	IEnumerables
O	52249	52253	that
O	52254	52262	reflects
O	52263	52266	the
O	52267	52279	partitioning
O	52280	52284	that
O	52285	52294	quicksort
O	52295	52300	would
O	52301	52303	do
O	52303	52304	,
O	52305	52312	without
O	52313	52321	actually
O	52322	52327	doing
O	52328	52330	it
O	52330	52331	.

O	52332	52333	(
O	52333	52337	This
O	52338	52340	is
O	52341	52345	lazy
O	52346	52357	computation
O	52357	52358	,
O	52359	52364	after
O	52365	52368	all
O	52368	52369	.
O	52369	52370	)
O	52371	52373	If
O	52374	52377	the
O	52378	52384	source
O	52385	52388	has
O	52389	52390	N
O	52391	52399	elements
O	52399	52400	,
O	52401	52404	the
O	52405	52409	tree
O	52410	52414	will
O	52415	52417	be
O	52418	52419	N
O	52420	52428	elements
O	52429	52433	wide
O	52434	52436	at
O	52437	52440	its
O	52441	52447	widest
O	52447	52448	,
O	52449	52452	and
O	52453	52455	it
O	52456	52460	will
O	52461	52463	be
O	52464	52466	lg
O	52466	52467	(
O	52467	52468	N
O	52468	52469	)
O	52470	52476	levels
O	52477	52481	deep
O	52481	52482	.

O	52483	52485	It
O	52486	52491	seems
O	52492	52494	to
O	52495	52497	me
O	52498	52499	-
O	52499	52500	-
O	52501	52504	and
O	52505	52509	once
O	52510	52515	again
O	52515	52516	,
O	52517	52518	I
O	52518	52519	'
O	52519	52520	m
O	52521	52524	not
O	52525	52526	a
O	52527	52528	C
O	52528	52529	#
O	52530	52532	or
O	52533	52534	.
O	52534	52537	NET
O	52538	52544	expert
O	52545	52546	-
O	52546	52547	-
O	52548	52552	that
O	52553	52557	this
O	52558	52562	will
O	52563	52568	cause
O	52569	52576	certain
O	52577	52586	innocuous
O	52586	52587	-
O	52587	52594	looking
O	52595	52600	calls
O	52600	52601	,
O	52602	52606	such
O	52607	52609	as
O	52610	52615	pivot
O	52616	52625	selection
O	52626	52629	via
O	52630	52634	ints
B-api_mention	52634	52635	.
I-api_mention	52635	52640	First
I-api_mention	52640	52641	(
I-api_mention	52641	52645	args
I-api_mention	52645	52646	)
O	52647	52648	,
O	52649	52651	to
O	52652	52654	be
O	52655	52659	more
O	52660	52669	expensive
O	52670	52674	than
O	52675	52679	they
O	52680	52684	look
O	52684	52685	.

O	52686	52688	At
O	52689	52692	the
O	52693	52698	first
O	52699	52704	level
O	52704	52705	,
O	52706	52708	of
O	52709	52715	course
O	52715	52716	,
O	52717	52719	it
O	52719	52720	'
O	52720	52721	s
O	52722	52723	O
O	52723	52724	(
O	52724	52725	1
O	52725	52726	)
O	52726	52727	.

O	52728	52731	But
O	52732	52740	consider
O	52741	52742	a
O	52743	52752	partition
O	52753	52757	deep
O	52758	52760	in
O	52761	52764	the
O	52765	52769	tree
O	52769	52770	,
O	52771	52773	at
O	52774	52777	the
O	52778	52783	right
O	52783	52784	-
O	52784	52788	hand
O	52789	52793	edge
O	52793	52794	.

O	52795	52797	To
O	52798	52805	compute
O	52806	52809	the
O	52810	52815	first
O	52816	52823	element
O	52824	52826	of
O	52827	52831	this
O	52832	52841	partition
O	52841	52842	,
O	52843	52846	the
O	52847	52853	entire
O	52854	52860	source
O	52861	52864	has
O	52865	52867	to
O	52868	52870	be
O	52871	52880	traversed
O	52880	52881	,
O	52882	52884	an
O	52885	52886	O
O	52886	52887	(
O	52887	52888	N
O	52888	52889	)
O	52890	52899	operation
O	52899	52900	.

O	52901	52904	But
O	52905	52910	since
O	52911	52914	the
O	52915	52925	partitions
O	52926	52931	above
O	52932	52935	are
O	52936	52940	lazy
O	52940	52941	,
O	52942	52946	they
O	52947	52951	must
O	52952	52954	be
O	52955	52965	recomputed
O	52965	52966	,
O	52967	52976	requiring
O	52977	52978	O
O	52978	52979	(
O	52979	52981	lg
O	52982	52983	N
O	52983	52984	)
O	52985	52996	comparisons
O	52996	52997	.

O	52998	53000	So
O	53001	53010	selecting
O	53011	53014	the
O	53015	53020	pivot
O	53021	53026	would
O	53027	53029	be
O	53030	53032	an
O	53033	53034	O
O	53034	53035	(
O	53035	53036	N
O	53037	53039	lg
O	53040	53041	N
O	53041	53042	)
O	53043	53052	operation
O	53052	53053	,
O	53054	53059	which
O	53060	53062	is
O	53063	53065	as
O	53066	53075	expensive
O	53076	53078	as
O	53079	53081	an
O	53082	53088	entire
O	53089	53093	sort
O	53093	53094	.

O	53095	53098	But
O	53099	53101	we
O	53102	53105	don
O	53105	53106	'
O	53106	53107	t
O	53108	53116	actually
O	53117	53121	sort
O	53122	53127	until
O	53128	53130	we
O	53131	53139	traverse
O	53140	53143	the
O	53144	53152	returned
O	53153	53164	IEnumerable
O	53165	53166	.

O	53167	53169	In
O	53170	53173	the
O	53174	53182	standard
O	53183	53192	quicksort
O	53193	53202	algorithm
O	53202	53203	,
O	53204	53208	each
O	53209	53214	level
O	53215	53217	of
O	53218	53230	partitioning
O	53231	53238	doubles
O	53239	53242	the
O	53243	53249	number
O	53250	53252	of
O	53253	53263	partitions
O	53263	53264	.

O	53265	53269	Each
O	53270	53279	partition
O	53280	53282	is
O	53283	53287	only
O	53288	53292	half
O	53293	53296	the
O	53297	53301	size
O	53301	53302	,
O	53303	53305	so
O	53306	53310	each
O	53311	53316	level
O	53317	53324	remains
O	53325	53327	at
O	53328	53329	O
O	53329	53330	(
O	53330	53331	N
O	53331	53332	)
O	53333	53343	complexity
O	53343	53344	.

O	53345	53348	The
O	53349	53353	tree
O	53354	53356	of
O	53357	53367	partitions
O	53368	53370	is
O	53371	53372	O
O	53372	53373	(
O	53373	53375	lg
O	53376	53377	N
O	53377	53378	)
O	53379	53383	high
O	53383	53384	,
O	53385	53387	so
O	53388	53391	the
O	53392	53397	total
O	53398	53402	work
O	53403	53405	is
O	53406	53407	O
O	53407	53408	(
O	53408	53409	N
O	53410	53412	lg
O	53413	53414	N
O	53414	53415	)
O	53415	53416	.

O	53417	53421	With
O	53422	53425	the
O	53426	53430	tree
O	53431	53433	of
O	53434	53438	lazy
O	53439	53451	IEnumerables
O	53451	53452	,
O	53453	53455	at
O	53456	53459	the
O	53460	53466	bottom
O	53467	53469	of
O	53470	53473	the
O	53474	53478	tree
O	53479	53484	there
O	53485	53488	are
O	53489	53490	N
O	53491	53501	partitions
O	53501	53502	.

O	53503	53512	Computing
O	53513	53517	each
O	53518	53527	partition
O	53528	53536	requires
O	53537	53538	a
O	53539	53548	traversal
O	53549	53551	of
O	53552	53553	N
O	53554	53562	elements
O	53562	53563	,
O	53564	53568	each
O	53569	53571	of
O	53572	53577	which
O	53578	53586	requires
O	53587	53589	lg
O	53589	53590	(
O	53590	53591	N
O	53591	53592	)
O	53593	53604	comparisons
O	53605	53607	up
O	53608	53611	the
O	53612	53616	tree
O	53616	53617	.

O	53618	53620	To
O	53621	53628	compute
O	53629	53632	all
O	53633	53636	the
O	53637	53647	partitions
O	53648	53650	at
O	53651	53654	the
O	53655	53661	bottom
O	53662	53664	of
O	53665	53668	the
O	53669	53673	tree
O	53673	53674	,
O	53675	53679	then
O	53679	53680	,
O	53681	53689	requires
O	53690	53691	O
O	53691	53692	(
O	53692	53693	N
O	53693	53694	^
O	53694	53695	2
O	53696	53698	lg
O	53699	53700	N
O	53700	53701	)
O	53702	53713	comparisons
O	53713	53714	.

O	53715	53716	(
O	53716	53718	Is
O	53719	53723	this
O	53724	53729	right
O	53729	53730	?
O	53731	53732	I
O	53733	53736	can
O	53737	53743	hardly
O	53744	53751	believe
O	53752	53756	this
O	53756	53757	.
O	53758	53766	Somebody
O	53767	53773	please
O	53774	53779	check
O	53780	53784	this
O	53785	53788	for
O	53789	53791	me
O	53791	53792	.
O	53792	53793	)
O	53794	53796	In
O	53797	53800	any
O	53801	53805	case
O	53805	53806	,
O	53807	53809	it
O	53810	53812	is
O	53813	53819	indeed
O	53820	53824	cool
O	53825	53829	that
O	53830	53841	IEnumerable
O	53842	53845	can
O	53846	53848	be
O	53849	53853	used
O	53854	53858	this
O	53859	53862	way
O	53863	53865	to
O	53866	53871	build
O	53872	53874	up
O	53875	53886	complicated
O	53887	53897	structures
O	53898	53900	of
O	53901	53912	computation
O	53912	53913	.

O	53914	53917	But
O	53918	53920	if
O	53921	53923	it
O	53924	53928	does
O	53929	53937	increase
O	53938	53941	the
O	53942	53955	computational
O	53956	53966	complexity
O	53967	53969	as
O	53970	53974	much
O	53975	53977	as
O	53978	53979	I
O	53980	53985	think
O	53986	53988	it
O	53989	53993	does
O	53993	53994	,
O	53995	53997	it
O	53998	54003	would
O	54004	54008	seem
O	54009	54013	that
O	54014	54025	programming
O	54026	54030	this
O	54031	54034	way
O	54035	54037	is
O	54038	54047	something
O	54048	54052	that
O	54053	54059	should
O	54060	54062	be
O	54063	54070	avoided
O	54071	54077	unless
O	54078	54081	one
O	54082	54084	is
O	54085	54094	extremely
O	54095	54102	careful
O	54102	54103	.

O	54105	54113	Question
O	54113	54114	-
O	54114	54122	29229373
O	54122	54123	,
O	54124	54130	answer
O	54130	54131	-
O	54131	54139	29230939

O	54140	54144	When
O	54145	54152	looking
O	54153	54157	into
O	54158	54161	the
O	54162	54176	implementation
O	54177	54178	(
O	54179	54196	ReferencePipeline
O	54196	54197	.
O	54197	54201	java
O	54202	54203	)
O	54204	54206	we
O	54207	54210	see
O	54211	54214	the
O	54215	54221	method
O	54222	54223	[
O	54224	54228	link
O	54229	54230	]
O	54231	54232	#
O	54232	54235	pre
O	54236	54241	which
O	54242	54246	will
O	54247	54249	be
O	54250	54256	invoke
O	54257	54260	for
B-api_mention	54261	54270	findFirst
O	54271	54280	operation
O	54280	54281	.

O	54282	54285	The
O	54286	54293	special
O	54294	54299	thing
O	54300	54302	to
O	54303	54307	take
O	54308	54312	care
O	54313	54318	about
O	54319	54321	is
O	54322	54325	the
O	54326	54330	sink
B-api_mention	54330	54331	.
I-api_mention	54331	54352	cancellationRequested
I-api_mention	54352	54353	(
I-api_mention	54353	54357	args
I-api_mention	54357	54358	)
O	54359	54364	which
O	54365	54371	allows
O	54372	54374	to
O	54375	54378	end
O	54379	54382	the
O	54383	54387	loop
O	54388	54390	on
O	54391	54394	the
O	54395	54400	first
O	54401	54406	match
O	54406	54407	.

O	54408	54415	Compare
O	54416	54418	to
O	54419	54420	[
O	54421	54425	link
O	54426	54427	]
O	54428	54429	#
O	54429	54432	pre
O	54433	54436	The
O	54437	54443	method
O	54444	54447	for
O	54448	54457	advancing
O	54458	54461	one
O	54462	54466	item
O	54467	54471	ends
O	54472	54474	up
O	54475	54482	calling
B-api_mention	54483	54490	forEach
O	54491	54493	on
O	54494	54497	the
O	54498	54501	sub
O	54501	54502	-
O	54502	54508	stream
O	54509	54516	without
O	54517	54520	any
O	54521	54532	possibility
O	54533	54536	for
O	54537	54544	earlier
O	54545	54556	termination
O	54557	54560	and
O	54561	54564	the
O	54565	54572	comment
O	54573	54575	at
O	54576	54579	the
O	54580	54589	beginning
O	54590	54592	of
O	54593	54596	the
B-api_mention	54597	54604	flatMap
O	54605	54611	method
O	54612	54616	even
O	54617	54622	tells
O	54623	54628	about
O	54629	54633	this
O	54634	54640	absent
O	54641	54648	feature
O	54648	54649	.

O	54650	54655	Since
O	54656	54660	this
O	54661	54663	is
O	54664	54668	more
O	54669	54673	than
O	54674	54678	just
O	54679	54681	an
O	54682	54694	optimization
O	54695	54700	thing
O	54701	54703	as
O	54704	54706	it
O	54707	54714	implies
O	54715	54719	that
O	54720	54723	the
O	54724	54728	code
O	54729	54735	simply
O	54736	54742	breaks
O	54743	54747	when
O	54748	54751	the
O	54752	54755	sub
O	54755	54756	-
O	54756	54762	stream
O	54763	54765	is
O	54766	54774	infinite
O	54774	54775	,
O	54776	54777	I
O	54778	54782	hope
O	54783	54787	that
O	54788	54791	the
O	54792	54802	developers
O	54803	54807	soon
O	54808	54813	prove
O	54814	54818	that
O	54819	54823	they
O	54824	54825	“
O	54825	54828	can
O	54829	54831	do
O	54832	54838	better
O	54839	54843	than
O	54844	54848	this
O	54848	54849	”
O	54849	54850	…
O	54851	54853	To
O	54854	54864	illustrate
O	54865	54868	the
O	54869	54881	implications
O	54881	54882	,
O	54883	54888	while
B-api_mention	54889	54895	Stream
I-api_mention	54895	54896	.
I-api_mention	54896	54903	iterate
I-api_mention	54903	54904	(
I-api_mention	54904	54908	args
I-api_mention	54908	54909	)
I-api_mention	54909	54910	.
I-api_mention	54910	54919	findFirst
I-api_mention	54919	54920	(
I-api_mention	54920	54924	args
I-api_mention	54924	54925	)
O	54926	54931	works
O	54932	54934	as
O	54935	54943	expected
O	54943	54944	,
B-api_mention	54945	54951	Stream
I-api_mention	54951	54952	.
I-api_mention	54952	54954	of
I-api_mention	54954	54955	(
I-api_mention	54955	54959	args
I-api_mention	54959	54960	)
I-api_mention	54960	54961	.
I-api_mention	54961	54968	flatMap
I-api_mention	54968	54969	(
I-api_mention	54969	54973	args
I-api_mention	54973	54974	)
I-api_mention	54974	54975	.
I-api_mention	54975	54984	findFirst
I-api_mention	54984	54985	(
I-api_mention	54985	54989	args
I-api_mention	54989	54990	)
O	54991	54995	will
O	54996	54999	end
O	55000	55002	up
O	55003	55005	in
O	55006	55008	an
O	55009	55017	infinite
O	55018	55022	loop
O	55022	55023	.

O	55024	55033	Regarding
O	55034	55037	the
O	55038	55051	specification
O	55051	55052	,
O	55053	55057	most
O	55058	55060	of
O	55061	55063	it
O	55064	55067	can
O	55068	55070	be
O	55071	55076	found
O	55077	55079	in
O	55080	55083	the
O	55084	55091	chapter
O	55092	55093	“
B-api_mention	55093	55099	Stream
O	55100	55110	operations
O	55111	55114	and
O	55115	55124	pipelines
O	55124	55125	”
O	55126	55128	of
O	55129	55132	the
O	55133	55140	package
O	55141	55154	specification
O	55155	55156	:
O	55157	55158	#
O	55158	55168	blockquote
O	55169	55171	It
O	55171	55172	’
O	55172	55173	s
O	55174	55179	clear
O	55180	55184	that
O	55185	55186	a
O	55187	55192	short
O	55192	55193	-
O	55193	55203	circuiting
O	55204	55213	operation
O	55214	55219	doesn
O	55219	55220	’
O	55220	55221	t
O	55222	55230	guaranty
O	55231	55232	a
O	55233	55239	finite
O	55240	55244	time
O	55245	55256	termination
O	55256	55257	,
O	55258	55259	e
O	55259	55260	.
O	55260	55261	g
O	55261	55262	.
O	55263	55267	when
O	55268	55269	a
O	55270	55276	filter
O	55277	55282	doesn
O	55282	55283	’
O	55283	55284	t
O	55285	55290	match
O	55291	55294	any
O	55295	55299	item
O	55300	55303	the
O	55304	55314	processing
O	55315	55318	can
O	55318	55319	’
O	55319	55320	t
O	55321	55329	complete
O	55329	55330	,
O	55331	55334	but
O	55335	55337	an
O	55338	55352	implementation
O	55353	55358	which
O	55359	55364	doesn
O	55364	55365	’
O	55365	55366	t
O	55367	55374	support
O	55375	55378	any
O	55379	55390	termination
O	55391	55393	in
O	55394	55400	finite
O	55401	55405	time
O	55406	55408	by
O	55409	55415	simply
O	55416	55424	ignoring
O	55425	55428	the
O	55429	55434	short
O	55434	55435	-
O	55435	55445	circuiting
O	55446	55452	nature
O	55453	55455	of
O	55456	55458	an
O	55459	55468	operation
O	55469	55471	is
O	55472	55475	far
O	55476	55479	off
O	55480	55483	the
O	55484	55497	specification
O	55497	55498	.

O	55500	55508	Question
O	55508	55509	-
O	55509	55517	29229373
O	55517	55518	,
O	55519	55525	answer
O	55525	55526	-
O	55526	55534	33839551

O	55535	55537	In
O	55538	55540	my
O	55541	55545	free
O	55546	55554	StreamEx
O	55555	55562	library
O	55563	55564	I
O	55565	55575	introduced
O	55576	55579	the
O	55580	55585	short
O	55585	55586	-
O	55586	55596	circuiting
O	55597	55607	collectors
O	55607	55608	.

O	55609	55613	When
O	55614	55624	collecting
O	55625	55635	sequential
O	55636	55642	stream
O	55643	55647	with
O	55648	55653	short
O	55653	55654	-
O	55654	55664	circuiting
O	55665	55674	collector
O	55675	55676	(
O	55676	55680	like
O	55681	55695	MoreCollectors
B-api_mention	55695	55696	.
I-api_mention	55696	55701	first
I-api_mention	55701	55702	(
I-api_mention	55702	55703	)
O	55704	55705	)
O	55706	55713	exactly
O	55714	55717	one
O	55718	55725	element
O	55726	55728	is
O	55729	55737	consumed
O	55738	55742	from
O	55743	55746	the
O	55747	55753	source
O	55753	55754	.

O	55755	55765	Internally
O	55766	55768	it
O	55768	55769	'
O	55769	55770	s
O	55771	55782	implemented
O	55783	55785	in
O	55786	55791	quite
O	55792	55797	dirty
O	55798	55801	way
O	55801	55802	:
O	55803	55808	using
O	55809	55810	a
O	55811	55817	custom
O	55818	55827	exception
O	55828	55830	to
O	55831	55836	break
O	55837	55840	the
O	55841	55848	control
O	55849	55853	flow
O	55853	55854	.

O	55855	55860	Using
O	55861	55863	my
O	55864	55871	library
O	55872	55876	your
O	55877	55883	sample
O	55884	55889	could
O	55890	55892	be
O	55893	55902	rewritten
O	55903	55905	in
O	55906	55910	this
O	55911	55914	way
O	55914	55915	:
O	55916	55917	#
O	55917	55920	pre
O	55921	55924	The
O	55925	55931	result
O	55932	55934	is
O	55935	55938	the
O	55939	55948	following
O	55948	55949	:
O	55950	55951	#
O	55951	55954	pre

O	55956	55964	Question
O	55964	55965	-
O	55965	55973	29815636
O	55973	55974	,
O	55975	55981	answer
O	55981	55982	-
O	55982	55990	29815698

O	55991	55994	The
O	55995	56000	first
O	56001	56005	form
O	56006	56008	is
O	56009	56015	called
O	56016	56023	Javadoc
O	56024	56025	.

O	56026	56029	You
O	56030	56033	use
O	56034	56038	this
O	56039	56043	when
O	56044	56047	you
O	56047	56048	'
O	56048	56050	re
O	56051	56058	writing
O	56059	56065	formal
O	56066	56070	APIs
O	56071	56074	for
O	56075	56079	your
O	56080	56084	code
O	56084	56085	,
O	56086	56091	which
O	56092	56095	are
O	56096	56105	generated
O	56106	56108	by
O	56109	56112	the
O	56113	56120	javadoc
O	56121	56125	tool
O	56125	56126	.

O	56127	56130	For
O	56131	56133	an
O	56134	56141	example
O	56141	56142	,
O	56143	56146	the
O	56147	56151	Java
O	56152	56153	7
O	56154	56157	API
O	56158	56162	page
O	56163	56167	uses
O	56168	56175	Javadoc
O	56176	56179	and
O	56180	56183	was
O	56184	56193	generated
O	56194	56196	by
O	56197	56201	that
O	56202	56206	tool
O	56206	56207	.

O	56208	56212	Some
O	56213	56219	common
O	56220	56228	elements
O	56229	56232	you
O	56232	56233	'
O	56233	56234	d
O	56235	56238	see
O	56239	56241	in
O	56242	56249	Javadoc
O	56250	56257	include
O	56257	56258	:
O	56259	56260	#
O	56260	56262	li
O	56263	56264	@
O	56264	56269	param
O	56270	56271	:
O	56272	56276	this
O	56277	56279	is
O	56280	56284	used
O	56285	56287	to
O	56288	56296	indicate
O	56297	56301	what
O	56302	56312	parameters
O	56313	56316	are
O	56317	56322	being
O	56323	56329	passed
O	56330	56332	to
O	56333	56334	a
O	56335	56341	method
O	56341	56342	,
O	56343	56346	and
O	56347	56351	what
O	56352	56357	value
O	56358	56362	they
O	56362	56363	'
O	56363	56365	re
O	56366	56374	expected
O	56375	56377	to
O	56378	56382	have
O	56383	56384	#
O	56384	56386	li
O	56387	56388	@
O	56388	56394	return
O	56395	56396	:
O	56397	56401	this
O	56402	56404	is
O	56405	56409	used
O	56410	56412	to
O	56413	56421	indicate
O	56422	56426	what
O	56427	56433	result
O	56434	56437	the
O	56438	56444	method
O	56445	56447	is
O	56448	56453	going
O	56454	56456	to
O	56457	56461	give
O	56462	56466	back
O	56467	56468	#
O	56468	56470	li
O	56471	56472	@
O	56472	56478	throws
O	56479	56480	:
O	56481	56485	this
O	56486	56488	is
O	56489	56493	used
O	56494	56496	to
O	56497	56505	indicate
O	56506	56510	that
O	56511	56512	a
O	56513	56519	method
O	56520	56526	throws
O	56527	56529	an
O	56530	56539	exception
O	56540	56542	or
O	56543	56548	error
O	56549	56551	in
O	56552	56556	case
O	56557	56559	of
O	56560	56567	certain
O	56568	56573	input
O	56574	56575	#
O	56575	56577	li
O	56578	56579	@
O	56579	56584	since
O	56585	56586	:
O	56587	56591	this
O	56592	56594	is
O	56595	56599	used
O	56600	56602	to
O	56603	56611	indicate
O	56612	56615	the
O	56616	56624	earliest
O	56625	56629	Java
O	56630	56637	version
O	56638	56642	this
O	56643	56648	class
O	56649	56651	or
O	56652	56660	function
O	56661	56664	was
O	56665	56674	available
O	56675	56677	in
O	56678	56680	As
O	56681	56683	an
O	56684	56691	example
O	56691	56692	,
O	56693	56697	here
O	56697	56698	'
O	56698	56699	s
O	56700	56707	Javadoc
O	56708	56711	for
O	56712	56715	the
O	56716	56723	compare
O	56724	56730	method
O	56731	56733	of
B-api_mention	56734	56741	Integer
O	56742	56743	:
O	56744	56745	#
O	56745	56748	pre
O	56749	56752	The
O	56753	56759	second
O	56760	56764	form
O	56765	56767	is
O	56768	56769	a
O	56770	56775	block
O	56776	56777	(
O	56777	56782	multi
O	56782	56783	-
O	56783	56787	line
O	56787	56788	)
O	56789	56796	comment
O	56796	56797	.

O	56798	56801	You
O	56802	56805	use
O	56806	56810	this
O	56811	56813	if
O	56814	56817	you
O	56818	56822	want
O	56823	56825	to
O	56826	56830	have
O	56831	56839	multiple
O	56840	56845	lines
O	56846	56848	in
O	56849	56850	a
O	56851	56858	comment
O	56858	56859	.

O	56860	56861	I
O	56862	56866	will
O	56867	56870	say
O	56871	56875	that
O	56876	56879	you
O	56879	56880	'
O	56880	56881	d
O	56882	56886	only
O	56887	56891	want
O	56892	56894	to
O	56895	56898	use
O	56899	56902	the
O	56903	56909	latter
O	56910	56914	form
O	56915	56924	sparingly
O	56925	56926	;
O	56927	56931	that
O	56932	56934	is
O	56934	56935	,
O	56936	56939	you
O	56940	56943	don
O	56943	56944	'
O	56944	56945	t
O	56946	56950	want
O	56951	56953	to
O	56954	56964	overburden
O	56965	56969	your
O	56970	56974	code
O	56975	56979	with
O	56980	56985	block
O	56986	56994	comments
O	56995	56999	that
O	57000	57003	don
O	57003	57004	'
O	57004	57005	t
O	57006	57014	describe
O	57015	57019	what
O	57020	57029	behaviors
O	57030	57033	the
O	57034	57040	method
O	57040	57041	/
O	57041	57048	complex
O	57049	57057	function
O	57058	57060	is
O	57061	57069	supposed
O	57070	57072	to
O	57073	57077	have
O	57077	57078	.

O	57079	57084	Since
O	57085	57092	Javadoc
O	57093	57095	is
O	57096	57099	the
O	57100	57104	more
O	57105	57116	descriptive
O	57117	57119	of
O	57120	57123	the
O	57124	57127	two
O	57127	57128	,
O	57129	57132	and
O	57133	57136	you
O	57137	57140	can
O	57141	57149	generate
O	57150	57156	actual
O	57157	57170	documentation
O	57171	57173	as
O	57174	57175	a
O	57176	57182	result
O	57183	57185	of
O	57186	57191	using
O	57192	57194	it
O	57194	57195	,
O	57196	57201	using
O	57202	57209	Javadoc
O	57210	57215	would
O	57216	57218	be
O	57219	57223	more
O	57224	57234	preferable
O	57235	57237	to
O	57238	57244	simple
O	57245	57250	block
O	57251	57259	comments
O	57259	57260	.

O	57262	57270	Question
O	57270	57271	-
O	57271	57279	29140402
O	57279	57280	,
O	57281	57287	answer
O	57287	57288	-
O	57288	57296	29141638

O	57297	57302	Every
O	57303	57308	class
O	57309	57311	in
O	57312	57316	java
O	57317	57320	has
B-api_mention	57321	57329	toString
I-api_mention	57329	57330	(
I-api_mention	57330	57334	args
I-api_mention	57334	57335	)
O	57336	57342	method
O	57343	57345	in
O	57346	57348	it
O	57349	57351	by
O	57352	57359	default
O	57359	57360	,
O	57361	57366	which
O	57367	57369	is
O	57370	57376	called
O	57377	57379	by
B-api_mention	57380	57386	System
I-api_mention	57386	57387	.
I-api_mention	57387	57390	out
I-api_mention	57390	57391	.
I-api_mention	57391	57398	println
I-api_mention	57398	57399	(
I-api_mention	57399	57403	args
I-api_mention	57403	57404	)
O	57405	57407	if
O	57408	57411	you
O	57412	57416	pass
O	57417	57421	some
O	57422	57428	object
O	57429	57431	of
O	57432	57433	a
O	57434	57439	class
O	57440	57442	to
O	57443	57445	it
O	57445	57446	.

O	57447	57451	When
O	57452	57455	you
O	57456	57459	try
O	57460	57462	to
O	57463	57468	print
O	57469	57475	object
O	57476	57478	of
O	57479	57480	a
O	57481	57486	class
O	57486	57487	,
O	57488	57491	the
B-api_mention	57492	57498	System
I-api_mention	57498	57499	.
I-api_mention	57499	57502	out
I-api_mention	57502	57503	.
I-api_mention	57503	57510	println
I-api_mention	57510	57511	(
I-api_mention	57511	57515	args
I-api_mention	57515	57516	)
O	57517	57523	method
O	57524	57528	will
O	57529	57533	call
B-api_mention	57534	57542	toString
I-api_mention	57542	57543	(
I-api_mention	57543	57547	args
I-api_mention	57547	57548	)
O	57549	57551	of
O	57552	57555	the
O	57556	57561	class
O	57562	57567	which
O	57568	57575	returns
O	57576	57579	the
O	57580	57589	className
O	57589	57590	@
O	57590	57598	hashcode
O	57599	57601	of
O	57602	57606	that
O	57607	57613	object
O	57613	57614	.

O	57615	57616	#
O	57616	57619	pre
O	57620	57623	You
O	57624	57627	can
O	57628	57636	override
O	57637	57640	the
B-api_mention	57641	57649	toString
O	57650	57656	method
O	57657	57659	of
O	57660	57661	a
O	57662	57667	class
O	57668	57670	to
O	57671	57674	get
O	57675	57684	different
O	57685	57691	output
O	57691	57692	.

O	57693	57696	See
O	57697	57701	this
O	57702	57709	example
O	57710	57711	#
O	57711	57714	pre

O	57716	57724	Question
O	57724	57725	-
O	57725	57733	29140402
O	57733	57734	,
O	57735	57741	answer
O	57741	57742	-
O	57742	57750	36771568

O	57751	57753	In
O	57754	57761	Eclipse
O	57761	57762	,
O	57763	57765	Go
O	57766	57768	to
O	57769	57773	your
O	57774	57779	class
O	57779	57780	,
O	57781	57786	Right
O	57787	57792	click
O	57792	57793	-
O	57793	57794	>
O	57794	57800	source
O	57800	57801	-
O	57801	57802	>
O	57802	57810	Generate
B-api_mention	57811	57819	toString
I-api_mention	57819	57820	(
I-api_mention	57820	57821	)
O	57821	57822	;
O	57823	57825	It
O	57826	57830	will
O	57831	57839	override
O	57840	57843	the
B-api_mention	57844	57852	toString
I-api_mention	57852	57853	(
I-api_mention	57853	57854	)
O	57855	57861	method
O	57862	57865	and
O	57866	57871	print
O	57872	57875	the
O	57876	57882	object
O	57883	57885	of
O	57886	57890	that
O	57891	57896	class
O	57896	57897	.

O	57899	57907	Question
O	57907	57908	-
O	57908	57916	29140402
O	57916	57917	,
O	57918	57924	answer
O	57924	57925	-
O	57925	57933	38628203

O	57934	57936	In
O	57937	57945	intellij
O	57946	57949	you
O	57950	57953	can
O	57954	57958	auto
O	57959	57967	generate
B-api_mention	57968	57976	toString
O	57977	57983	method
O	57984	57986	by
O	57987	57995	pressing
O	57996	57999	alt
O	57999	58000	+
O	58000	58005	inset
O	58006	58009	and
O	58010	58014	then
O	58015	58024	selecting
B-api_mention	58025	58033	toString
I-api_mention	58033	58034	(
I-api_mention	58034	58035	)
O	58036	58040	here
O	58041	58043	is
O	58044	58046	an
O	58047	58050	out
O	58051	58054	put
O	58055	58058	for
O	58059	58060	a
O	58061	58065	test
O	58066	58071	class
O	58071	58072	:
O	58073	58074	#
O	58074	58077	pre
O	58078	58080	As
O	58081	58084	you
O	58085	58088	can
O	58089	58092	see
O	58092	58093	,
O	58094	58096	it
O	58097	58106	generates
O	58107	58108	a
B-api_mention	58109	58115	String
O	58116	58118	by
O	58119	58132	concatenating
O	58132	58133	,
O	58134	58141	several
O	58142	58152	attributes
O	58153	58155	of
O	58156	58159	the
O	58160	58165	class
O	58165	58166	,
O	58167	58170	for
O	58171	58181	primitives
O	58182	58184	it
O	58185	58189	will
O	58190	58195	print
O	58196	58201	their
O	58202	58208	values
O	58209	58212	and
O	58213	58216	for
O	58217	58226	reference
O	58227	58232	types
O	58233	58235	it
O	58236	58240	will
O	58241	58244	use
O	58245	58250	their
O	58251	58256	class
O	58257	58261	type
O	58262	58263	(
O	58263	58265	in
O	58266	58270	this
O	58271	58275	case
O	58276	58278	to
O	58279	58285	string
O	58286	58292	method
O	58293	58295	of
O	58296	58301	Test2
O	58301	58302	)
O	58302	58303	.

O	58305	58313	Question
O	58313	58314	-
O	58314	58322	29945627
O	58322	58323	,
O	58324	58330	answer
O	58330	58331	-
O	58331	58339	29945754

O	58340	58343	The
O	58344	58350	lambda
O	58350	58351	:
O	58352	58353	(
O	58353	58354	)
O	58355	58356	-
O	58356	58357	>
O	58358	58359	{
B-api_mention	58360	58366	System
I-api_mention	58366	58367	.
I-api_mention	58367	58370	out
I-api_mention	58370	58371	.
I-api_mention	58371	58378	println
I-api_mention	58378	58379	(
I-api_mention	58379	58383	args
I-api_mention	58383	58384	)
O	58384	58385	;
O	58386	58387	}
O	58387	58388	;
O	58389	58397	actually
O	58398	58408	represents
O	58409	58411	an
O	58412	58426	implementation
O	58427	58430	for
O	58431	58433	an
O	58434	58443	interface
O	58444	58448	like
O	58448	58449	:
O	58450	58451	#
O	58451	58454	pre
O	58455	58460	which
O	58461	58463	is
O	58464	58474	completely
O	58475	58484	different
O	58485	58489	than
O	58490	58493	the
O	58494	58497	one
O	58498	58501	you
O	58501	58502	'
O	58502	58504	ve
O	58505	58512	defined
O	58512	58513	.

O	58514	58518	That
O	58518	58519	'
O	58519	58520	s
O	58521	58524	why
O	58525	58528	you
O	58529	58532	get
O	58533	58535	an
O	58536	58541	error
O	58541	58542	.

O	58543	58548	Since
O	58549	58552	you
O	58553	58556	can
O	58556	58557	'
O	58557	58558	t
O	58559	58565	extend
O	58566	58570	your
O	58571	58572	@
O	58572	58591	FunctionalInterface
O	58592	58593	,
O	58594	58597	nor
O	58598	58607	introduce
O	58608	58609	a
O	58610	58615	brand
O	58616	58619	new
O	58620	58623	one
O	58623	58624	,
O	58625	58629	then
O	58630	58631	I
O	58632	58637	think
O	58638	58641	you
O	58642	58645	don
O	58645	58646	'
O	58646	58647	t
O	58648	58652	have
O	58653	58657	much
O	58658	58665	options
O	58665	58666	.

O	58667	58670	You
O	58671	58674	can
O	58675	58678	use
O	58679	58682	the
B-api_mention	58683	58691	Optional
I-api_mention	58691	58692	<
I-api_mention	58692	58693	T
I-api_mention	58693	58694	>
O	58695	58705	interfaces
O	58706	58708	to
O	58709	58715	denote
O	58716	58720	that
O	58721	58725	some
O	58726	58728	of
O	58729	58732	the
O	58733	58739	values
O	58740	58741	(
O	58741	58747	return
O	58748	58752	type
O	58753	58755	or
O	58756	58762	method
O	58763	58772	parameter
O	58772	58773	)
O	58774	58776	is
O	58777	58784	missing
O	58784	58785	,
O	58786	58792	though
O	58792	58793	.

O	58794	58801	However
O	58801	58802	,
O	58803	58807	this
O	58808	58811	won
O	58811	58812	'
O	58812	58813	t
O	58814	58818	make
O	58819	58822	the
O	58823	58829	lambda
O	58830	58834	body
O	58835	58842	simpler
O	58842	58843	.

O	58845	58853	Question
O	58853	58854	-
O	58854	58862	29945627
O	58862	58863	,
O	58864	58870	answer
O	58870	58871	-
O	58871	58879	29946155

O	58880	58883	The
O	58884	58890	syntax
O	58891	58894	you
O	58894	58895	'
O	58895	58897	re
O	58898	58903	after
O	58904	58906	is
O	58907	58915	possible
O	58916	58920	with
O	58921	58922	a
O	58923	58929	little
O	58930	58936	helper
O	58937	58945	function
O	58946	58950	that
O	58951	58959	converts
O	58960	58961	a
B-api_mention	58962	58970	Runnable
O	58971	58975	into
B-api_mention	58976	58982	Action
I-api_mention	58982	58983	<
I-api_mention	58983	58984	T
I-api_mention	58984	58985	>
O	58986	58987	(
O	58987	58990	you
O	58991	58994	can
O	58995	59000	place
O	59001	59003	it
O	59004	59006	in
B-api_mention	59007	59013	Action
O	59014	59017	for
O	59018	59025	example
O	59025	59026	)
O	59026	59027	:
O	59028	59029	#
O	59029	59032	pre

O	59034	59042	Question
O	59042	59043	-
O	59043	59051	27949213
O	59051	59052	,
O	59053	59059	answer
O	59059	59060	-
O	59060	59068	27949367

O	59069	59072	The
O	59073	59081	strategy
O	59082	59086	they
O	59087	59095	describe
O	59096	59098	is
O	59099	59101	to
O	59102	59108	simply
O	59109	59114	reuse
O	59115	59118	the
O	59119	59127	internal
O	59128	59137	character
O	59138	59143	array
O	59144	59146	of
O	59147	59150	one
B-api_mention	59151	59157	String
O	59158	59160	in
O	59161	59169	possibly
O	59170	59174	many
O	59175	59180	equal
O	59181	59188	Strings
O	59188	59189	.

O	59190	59195	There
O	59195	59196	'
O	59196	59197	s
O	59198	59200	no
O	59201	59205	need
O	59206	59209	for
O	59210	59214	each
B-api_mention	59215	59221	String
O	59222	59224	to
O	59225	59229	have
O	59230	59233	its
O	59234	59237	own
O	59238	59242	copy
O	59243	59245	if
O	59246	59250	they
O	59251	59254	are
O	59255	59260	equal
O	59260	59261	.

O	59262	59264	In
O	59265	59270	order
O	59271	59273	to
O	59274	59278	more
O	59279	59286	quickly
O	59287	59296	determine
O	59297	59299	if
O	59300	59301	2
O	59302	59309	strings
O	59310	59313	are
O	59314	59319	equal
O	59319	59320	,
O	59321	59324	the
O	59325	59329	hash
O	59330	59334	code
O	59335	59337	is
O	59338	59342	used
O	59343	59345	as
O	59346	59347	a
O	59348	59353	first
O	59354	59358	step
O	59358	59359	,
O	59360	59362	as
O	59363	59365	it
O	59366	59368	is
O	59369	59370	a
O	59371	59375	fast
O	59376	59379	way
O	59380	59382	to
O	59383	59392	determine
O	59393	59395	if
O	59396	59403	Strings
O	59404	59407	may
O	59408	59410	be
O	59411	59416	equal
O	59416	59417	.

O	59418	59423	Hence
O	59424	59429	their
O	59430	59439	statement
O	59439	59440	:
O	59441	59442	#
O	59442	59452	blockquote
O	59453	59457	This
O	59458	59460	is
O	59461	59463	to
O	59464	59468	make
O	59469	59470	a
O	59471	59478	certain
O	59479	59480	(
O	59480	59483	but
O	59484	59490	slower
O	59490	59491	)
O	59492	59502	comparison
O	59503	59506	for
O	59507	59515	equality
O	59516	59520	once
O	59521	59529	possible
O	59530	59538	equality
O	59539	59542	has
O	59543	59547	been
O	59548	59558	determined
O	59559	59564	using
O	59565	59568	the
O	59569	59573	hash
O	59574	59578	code
O	59578	59579	.

O	59580	59582	In
O	59583	59586	the
O	59587	59590	end
O	59590	59591	,
O	59592	59597	equal
O	59598	59605	Strings
O	59606	59610	will
O	59611	59616	share
O	59617	59618	a
O	59619	59625	single
O	59626	59636	underlying
O	59637	59641	char
O	59642	59647	array
O	59647	59648	.

O	59649	59653	Java
O	59654	59657	has
O	59658	59661	had
B-api_mention	59662	59668	String
I-api_mention	59668	59669	.
I-api_mention	59669	59675	intern
I-api_mention	59675	59676	(
I-api_mention	59676	59680	args
I-api_mention	59680	59681	)
O	59682	59685	for
O	59686	59687	a
O	59688	59692	long
O	59693	59697	time
O	59697	59698	,
O	59699	59701	to
O	59702	59704	do
O	59705	59709	more
O	59710	59712	or
O	59713	59717	less
O	59718	59721	the
O	59722	59726	same
O	59727	59728	(
O	59728	59729	i
O	59729	59730	.
O	59730	59731	e
O	59731	59732	.
O	59733	59737	save
O	59738	59744	memory
O	59745	59747	by
O	59748	59761	deduplicating
O	59762	59767	equal
O	59768	59775	Strings
O	59775	59776	)
O	59776	59777	.

O	59778	59782	What
O	59782	59783	'
O	59783	59784	s
O	59785	59790	novel
O	59791	59796	about
O	59797	59801	this
O	59802	59804	is
O	59805	59809	that
O	59810	59812	it
O	59813	59820	happens
O	59821	59827	during
O	59828	59835	garbage
O	59836	59846	collection
O	59847	59851	time
O	59852	59855	and
O	59856	59859	can
O	59860	59862	be
O	59863	59873	externally
O	59874	59884	controlled
O	59884	59885	.

O	59887	59895	Question
O	59895	59896	-
O	59896	59904	27949213
O	59904	59905	,
O	59906	59912	answer
O	59912	59913	-
O	59913	59921	27949581

O	59922	59929	Imagine
O	59930	59933	you
O	59934	59938	have
O	59939	59940	a
O	59941	59946	phone
O	59947	59951	book
O	59951	59952	,
O	59953	59958	which
O	59959	59967	contains
O	59968	59974	people
O	59974	59975	,
O	59976	59981	which
O	59982	59986	have
O	59987	59988	a
B-api_mention	59989	59995	String
O	59996	60005	firstName
O	60006	60009	and
O	60010	60011	a
B-api_mention	60012	60018	String
O	60019	60027	lastName
O	60028	60029	.

O	60030	60033	And
O	60034	60036	it
O	60037	60044	happens
O	60045	60049	that
O	60050	60052	in
O	60053	60057	your
O	60058	60063	phone
O	60064	60068	book
O	60068	60069	,
O	60070	60073	100
O	60073	60074	,
O	60074	60077	000
O	60078	60084	people
O	60085	60089	have
O	60090	60093	the
O	60094	60098	same
O	60099	60108	firstName
O	60109	60110	=
O	60111	60124	StringLiteral
O	60125	60126	.

O	60127	60134	Because
O	60135	60138	you
O	60139	60142	get
O	60143	60146	the
O	60147	60151	data
O	60152	60156	from
O	60157	60158	a
O	60159	60167	database
O	60168	60170	or
O	60171	60172	a
O	60173	60177	file
O	60178	60183	those
O	60184	60191	strings
O	60192	60195	are
O	60196	60199	not
O	60200	60208	interned
O	60209	60211	so
O	60212	60216	your
O	60217	60220	JVM
O	60221	60227	memory
O	60228	60236	contains
O	60237	60240	the
O	60241	60245	char
O	60246	60251	array
O	60252	60253	{
O	60253	60264	CharLiteral
O	60264	60265	,
O	60266	60277	CharLiteral
O	60277	60278	,
O	60279	60290	CharLiteral
O	60290	60291	,
O	60292	60303	CharLiteral
O	60303	60304	}
O	60305	60308	100
O	60309	60317	thousand
O	60318	60323	times
O	60323	60324	,
O	60325	60328	one
O	60329	60332	per
O	60333	60337	John
O	60338	60344	string
O	60344	60345	.

O	60346	60350	Each
O	60351	60353	of
O	60354	60359	these
O	60360	60366	arrays
O	60367	60372	takes
O	60372	60373	,
O	60374	60377	say
O	60377	60378	,
O	60379	60381	20
O	60382	60387	bytes
O	60388	60390	of
O	60391	60397	memory
O	60398	60400	so
O	60401	60406	those
O	60407	60411	100k
O	60412	60417	Johns
O	60418	60422	take
O	60423	60425	up
O	60426	60427	2
O	60428	60430	MB
O	60431	60433	of
O	60434	60440	memory
O	60440	60441	.

O	60442	60446	With
O	60447	60460	deduplication
O	60460	60461	,
O	60462	60465	the
O	60466	60469	JVM
O	60470	60474	will
O	60475	60482	realise
O	60483	60487	that
O	60488	60489	"
O	60489	60493	John
O	60493	60494	"
O	60495	60497	is
O	60498	60508	duplicated
O	60509	60513	many
O	60514	60519	times
O	60520	60523	and
O	60524	60528	make
O	60529	60532	all
O	60533	60538	those
O	60539	60543	John
O	60544	60551	strings
O	60552	60557	point
O	60558	60560	to
O	60561	60564	the
O	60565	60569	same
O	60570	60580	underlying
O	60581	60585	char
O	60586	60591	array
O	60591	60592	,
O	60593	60603	decreasing
O	60604	60607	the
O	60608	60614	memory
O	60615	60620	usage
O	60621	60625	from
O	60626	60629	2MB
O	60630	60632	to
O	60633	60635	20
O	60636	60641	bytes
O	60641	60642	.

O	60643	60646	You
O	60647	60650	can
O	60651	60655	find
O	60656	60657	a
O	60658	60662	more
O	60663	60671	detailed
O	60672	60683	explanation
O	60684	60686	in
O	60687	60690	the
O	60691	60694	JEP
O	60695	60696	.

O	60697	60699	In
O	60700	60710	particular
O	60710	60711	:
O	60712	60713	#
O	60713	60723	blockquote

O	60725	60733	Question
O	60733	60734	-
O	60734	60742	27949213
O	60742	60743	,
O	60744	60750	answer
O	60750	60751	-
O	60751	60759	27950675

O	60760	60765	Since
O	60766	60770	your
O	60771	60776	first
O	60777	60785	question
O	60786	60789	has
O	60790	60797	already
O	60798	60802	been
O	60803	60811	answered
O	60811	60812	,
O	60813	60814	I
O	60814	60815	'
O	60815	60817	ll
O	60818	60824	answer
O	60825	60829	your
O	60830	60836	second
O	60837	60845	question
O	60845	60846	.

O	60847	60850	The
B-api_mention	60851	60857	String
O	60858	60865	objects
O	60866	60870	must
O	60871	60873	be
O	60874	60882	compared
O	60883	60892	character
O	60893	60895	by
O	60896	60905	character
O	60905	60906	,
O	60907	60914	because
O	60915	60921	though
O	60922	60927	equal
B-api_mention	60928	60934	Object
O	60935	60936	s
O	60937	60944	implies
O	60945	60950	equal
O	60951	60957	hashes
O	60957	60958	,
O	60959	60962	the
O	60963	60970	inverse
O	60971	60973	is
O	60974	60977	not
O	60978	60989	necessarily
O	60990	60994	true
O	60994	60995	.

O	60996	60998	As
O	60999	61005	Holger
O	61006	61010	said
O	61011	61013	in
O	61014	61017	his
O	61018	61025	comment
O	61026	61027	,
O	61028	61032	this
O	61033	61043	represents
O	61044	61045	a
O	61046	61050	hash
O	61051	61060	collision
O	61060	61061	.

O	61062	61065	The
O	61066	61076	applicable
O	61077	61091	specifications
O	61092	61095	for
O	61096	61099	the
B-api_mention	61100	61108	hashcode
I-api_mention	61108	61109	(
I-api_mention	61109	61113	args
I-api_mention	61113	61114	)
O	61115	61121	method
O	61122	61125	are
O	61126	61128	as
O	61129	61136	follows
O	61136	61137	:
O	61138	61139	#
O	61139	61149	blockquote
O	61150	61154	This
O	61155	61160	means
O	61161	61165	that
O	61166	61168	in
O	61169	61174	order
O	61175	61178	for
O	61179	61183	them
O	61184	61186	to
O	61187	61196	guarantee
O	61197	61205	equality
O	61205	61206	,
O	61207	61210	the
O	61211	61221	comparison
O	61222	61224	of
O	61225	61229	each
O	61230	61239	character
O	61240	61242	is
O	61243	61252	necessary
O	61253	61255	in
O	61256	61261	order
O	61262	61265	for
O	61266	61270	them
O	61271	61273	to
O	61274	61281	confirm
O	61282	61285	the
O	61286	61294	equality
O	61295	61297	of
O	61298	61301	the
O	61302	61305	two
O	61306	61313	objects
O	61313	61314	.

O	61315	61319	They
O	61320	61325	start
O	61326	61328	by
O	61329	61338	comparing
O	61339	61347	hashCode
O	61348	61349	s
O	61350	61356	rather
O	61357	61361	than
O	61362	61367	using
O	61368	61374	equals
O	61375	61380	since
O	61381	61385	they
O	61386	61389	are
O	61390	61395	using
O	61396	61397	a
O	61398	61402	hash
O	61403	61408	table
O	61409	61412	for
O	61413	61416	the
O	61417	61427	references
O	61427	61428	,
O	61429	61432	and
O	61433	61437	this
O	61438	61446	improves
O	61447	61458	performance
O	61458	61459	.

O	61461	61469	Question
O	61469	61470	-
O	61470	61478	28276423
O	61478	61479	,
O	61480	61486	answer
O	61486	61487	-
O	61487	61495	28276463

O	61496	61498	If
O	61499	61502	all
O	61503	61505	of
O	61506	61509	the
O	61510	61517	streams
O	61518	61522	have
O	61523	61527	been
O	61528	61540	instantiated
O	61541	61545	then
O	61546	61553	closing
O	61554	61558	only
O	61559	61562	the
O	61563	61572	outermost
O	61573	61575	is
O	61576	61580	just
O	61581	61585	fine
O	61585	61586	.

O	61587	61590	The
O	61591	61604	documentation
O	61605	61607	on
B-api_mention	61608	61617	Closeable
O	61618	61627	interface
O	61628	61634	states
O	61635	61639	that
O	61640	61645	close
O	61646	61652	method
O	61652	61653	:
O	61654	61655	#
O	61655	61665	blockquote
O	61666	61669	The
O	61670	61679	releasing
O	61680	61686	system
O	61687	61696	resources
O	61697	61705	includes
O	61706	61713	closing
O	61714	61721	streams
O	61721	61722	.

O	61723	61725	It
O	61726	61730	also
O	61731	61737	states
O	61738	61742	that
O	61742	61743	:
O	61744	61745	#
O	61745	61755	blockquote
O	61756	61758	So
O	61759	61761	if
O	61762	61765	you
O	61766	61771	close
O	61772	61776	them
O	61777	61787	explicitly
O	61788	61798	afterwards
O	61798	61799	,
O	61800	61807	nothing
O	61808	61813	wrong
O	61814	61818	will
O	61819	61825	happen
O	61825	61826	.

O	61828	61836	Question
O	61836	61837	-
O	61837	61845	28276423
O	61845	61846	,
O	61847	61853	answer
O	61853	61854	-
O	61854	61862	28276469

O	61863	61865	It
O	61866	61870	will
O	61871	61873	be
O	61874	61878	fine
O	61879	61881	if
O	61882	61885	you
O	61886	61890	only
O	61891	61896	close
O	61897	61900	the
O	61901	61905	last
O	61906	61912	stream
O	61913	61914	-
O	61915	61918	the
O	61919	61924	close
O	61925	61929	call
O	61930	61934	will
O	61935	61937	be
O	61938	61942	send
O	61943	61945	to
O	61946	61949	the
O	61950	61960	underlying
O	61961	61968	streams
O	61968	61969	,
O	61970	61973	too
O	61973	61974	.

O	61976	61984	Question
O	61984	61985	-
O	61985	61993	28276423
O	61993	61994	,
O	61995	62001	answer
O	62001	62002	-
O	62002	62010	28276493

O	62011	62014	You
O	62015	62018	can
O	62019	62024	close
O	62025	62028	the
O	62029	62034	outer
O	62035	62039	most
O	62040	62046	stream
O	62046	62047	,
O	62048	62050	in
O	62051	62055	fact
O	62056	62059	you
O	62060	62063	don
O	62063	62064	'
O	62064	62065	t
O	62066	62070	need
O	62071	62073	to
O	62074	62080	retain
O	62081	62084	all
O	62085	62088	the
O	62089	62096	streams
O	62097	62104	wrapped
O	62105	62108	and
O	62109	62112	you
O	62113	62116	can
O	62117	62120	use
O	62121	62125	Java
O	62126	62127	7
O	62128	62131	try
O	62131	62132	-
O	62132	62136	with
O	62136	62137	-
O	62137	62146	resources
O	62146	62147	.

O	62148	62149	#
O	62149	62152	pre
O	62153	62155	If
O	62156	62159	you
O	62160	62169	subscribe
O	62170	62172	to
O	62173	62178	YAGNI
O	62178	62179	,
O	62180	62182	or
O	62183	62186	you
O	62186	62187	-
O	62187	62191	aint
O	62191	62192	-
O	62192	62197	gonna
O	62197	62198	-
O	62198	62202	need
O	62202	62203	-
O	62203	62205	it
O	62205	62206	,
O	62207	62210	you
O	62211	62217	should
O	62218	62220	be
O	62221	62225	only
O	62226	62232	adding
O	62233	62237	code
O	62238	62241	you
O	62242	62250	actually
O	62251	62255	need
O	62255	62256	.

O	62257	62260	You
O	62261	62268	shouldn
O	62268	62269	'
O	62269	62270	t
O	62271	62273	be
O	62274	62280	adding
O	62281	62285	code
O	62286	62289	you
O	62290	62297	imagine
O	62298	62301	you
O	62302	62307	might
O	62308	62312	need
O	62313	62316	but
O	62317	62319	in
O	62320	62327	reality
O	62328	62333	doesn
O	62333	62334	'
O	62334	62335	t
O	62336	62338	do
O	62339	62347	anything
O	62348	62354	useful
O	62354	62355	.

O	62356	62360	Take
O	62361	62365	this
O	62366	62373	example
O	62374	62377	and
O	62378	62385	imagine
O	62386	62390	what
O	62391	62396	could
O	62397	62405	possibly
O	62406	62408	go
O	62409	62414	wrong
O	62415	62417	if
O	62418	62421	you
O	62422	62426	didn
O	62426	62427	'
O	62427	62428	t
O	62429	62431	do
O	62432	62436	this
O	62437	62440	and
O	62441	62445	what
O	62446	62449	the
O	62450	62456	impact
O	62457	62462	would
O	62463	62465	be
O	62465	62466	?

O	62467	62468	#
O	62468	62471	pre
O	62472	62476	Lets
O	62477	62482	start
O	62483	62487	with
B-api_mention	62488	62504	FileOutputStream
O	62505	62510	which
O	62511	62516	calls
O	62517	62521	open
O	62522	62524	to
O	62525	62527	do
O	62528	62531	all
O	62532	62535	the
O	62536	62540	real
O	62541	62545	work
O	62545	62546	.

O	62547	62548	/
O	62548	62549	*
O	62549	62550	*
O	62551	62552	*
O	62553	62558	Opens
O	62559	62560	a
O	62561	62565	file
O	62565	62566	,
O	62567	62571	with
O	62572	62575	the
O	62576	62585	specified
O	62586	62590	name
O	62590	62591	,
O	62592	62595	for
O	62596	62607	overwriting
O	62608	62610	or
O	62611	62620	appending
O	62620	62621	.

O	62622	62623	*
O	62624	62625	@
O	62625	62630	param
O	62631	62635	name
O	62636	62640	name
O	62641	62643	of
O	62644	62648	file
O	62649	62651	to
O	62652	62654	be
O	62655	62661	opened
O	62662	62663	*
O	62664	62665	@
O	62665	62670	param
O	62671	62677	append
O	62678	62685	whether
O	62686	62689	the
O	62690	62694	file
O	62695	62697	is
O	62698	62700	to
O	62701	62703	be
O	62704	62710	opened
O	62711	62713	in
O	62714	62720	append
O	62721	62725	mode
O	62726	62727	*
O	62727	62728	/
O	62729	62736	private
O	62737	62743	native
O	62744	62748	void
O	62749	62753	open
O	62753	62754	(
O	62754	62758	args
O	62758	62759	)
O	62760	62766	throws
B-api_mention	62767	62788	FileNotFoundException
O	62788	62789	;
O	62790	62792	If
O	62793	62796	the
O	62797	62801	file
O	62802	62804	is
O	62805	62808	not
O	62809	62814	found
O	62814	62815	,
O	62816	62821	there
O	62822	62824	is
O	62825	62827	no
O	62828	62838	underlying
O	62839	62847	resource
O	62848	62850	to
O	62851	62856	close
O	62856	62857	,
O	62858	62860	so
O	62861	62868	closing
O	62869	62871	it
O	62872	62875	won
O	62875	62876	'
O	62876	62877	t
O	62878	62882	make
O	62883	62886	any
O	62887	62897	difference
O	62897	62898	.

O	62899	62901	If
O	62902	62905	The
O	62906	62910	file
O	62911	62917	exists
O	62917	62918	,
O	62919	62921	it
O	62922	62928	should
O	62929	62931	be
O	62932	62940	throwing
O	62941	62942	a
B-api_mention	62943	62964	FileNotFoundException
O	62964	62965	.

O	62966	62968	So
O	62969	62974	there
O	62975	62977	is
O	62978	62985	nothing
O	62986	62988	to
O	62989	62991	be
O	62992	62998	gained
O	62999	63001	by
O	63002	63008	trying
O	63009	63011	to
O	63012	63017	close
O	63018	63021	the
O	63022	63030	resource
O	63031	63035	from
O	63036	63040	this
O	63041	63045	line
O	63046	63051	alone
O	63051	63052	.

O	63053	63056	The
O	63057	63063	reason
O	63064	63067	you
O	63068	63072	need
O	63073	63075	to
O	63076	63081	close
O	63082	63085	the
O	63086	63090	file
O	63091	63093	is
O	63094	63098	when
O	63099	63102	the
O	63103	63107	file
O	63108	63110	is
O	63111	63117	opened
O	63118	63130	successfully
O	63130	63131	,
O	63132	63135	but
O	63136	63139	you
O	63140	63145	later
O	63146	63149	get
O	63150	63152	an
O	63153	63158	error
O	63158	63159	.

O	63160	63164	Lets
O	63165	63169	look
O	63170	63172	at
O	63173	63176	the
O	63177	63181	next
O	63182	63188	stream
B-api_mention	63189	63205	GZIPOutputStream
O	63206	63211	There
O	63212	63214	is
O	63215	63219	code
O	63220	63225	which
O	63226	63229	can
O	63230	63235	throw
O	63236	63238	an
O	63239	63248	exception
O	63249	63250	#
O	63250	63253	pre
O	63254	63258	This
O	63259	63265	writes
O	63266	63269	the
O	63270	63276	header
O	63277	63279	of
O	63280	63283	the
O	63284	63288	file
O	63288	63289	.

O	63290	63293	Now
O	63294	63296	it
O	63297	63302	would
O	63303	63305	be
O	63306	63310	very
O	63311	63318	unusual
O	63319	63322	for
O	63323	63326	you
O	63327	63329	to
O	63330	63332	be
O	63333	63337	able
O	63338	63340	to
O	63341	63345	open
O	63346	63347	a
O	63348	63352	file
O	63353	63356	for
O	63357	63364	writing
O	63365	63368	but
O	63369	63372	not
O	63373	63375	be
O	63376	63380	able
O	63381	63383	to
O	63384	63389	write
O	63390	63394	even
O	63395	63396	8
O	63397	63402	bytes
O	63403	63405	to
O	63406	63408	it
O	63408	63409	,
O	63410	63413	but
O	63414	63418	lets
O	63419	63426	imagine
O	63427	63431	this
O	63432	63437	could
O	63438	63444	happen
O	63445	63448	and
O	63449	63451	we
O	63452	63455	don
O	63455	63456	'
O	63456	63457	t
O	63458	63463	close
O	63464	63467	the
O	63468	63472	file
O	63473	63483	afterwards
O	63483	63484	.

O	63485	63489	What
O	63490	63494	does
O	63495	63501	happen
O	63502	63504	to
O	63505	63506	a
O	63507	63511	file
O	63512	63514	if
O	63515	63517	it
O	63518	63520	is
O	63521	63524	not
O	63525	63531	closed
O	63531	63532	?

O	63533	63536	You
O	63537	63540	don
O	63540	63541	'
O	63541	63542	t
O	63543	63546	get
O	63547	63550	any
O	63551	63560	unflushed
O	63561	63567	writes
O	63567	63568	,
O	63569	63573	they
O	63574	63577	are
O	63578	63587	discarded
O	63588	63591	and
O	63592	63594	in
O	63595	63599	this
O	63600	63604	case
O	63604	63605	,
O	63606	63611	there
O	63612	63614	is
O	63615	63617	no
O	63618	63630	successfully
O	63631	63638	written
O	63639	63644	bytes
O	63645	63647	to
O	63648	63651	the
O	63652	63658	stream
O	63659	63664	which
O	63665	63668	isn
O	63668	63669	'
O	63669	63670	t
O	63671	63679	buffered
O	63680	63682	at
O	63683	63687	this
O	63688	63693	point
O	63694	63700	anyway
O	63700	63701	.

O	63702	63705	But
O	63706	63707	a
O	63708	63712	file
O	63713	63718	which
O	63719	63721	is
O	63722	63725	not
O	63726	63732	closed
O	63733	63738	doesn
O	63738	63739	'
O	63739	63740	t
O	63741	63745	live
O	63746	63753	forever
O	63753	63754	,
O	63755	63762	instead
B-api_mention	63763	63779	FileOutputStream
O	63780	63783	has
O	63784	63785	#
O	63785	63788	pre
O	63789	63791	If
O	63792	63795	you
O	63796	63799	don
O	63799	63800	'
O	63800	63801	t
O	63802	63807	close
O	63808	63809	a
O	63810	63814	file
O	63815	63817	at
O	63818	63821	all
O	63821	63822	,
O	63823	63825	it
O	63826	63830	gets
O	63831	63837	closed
O	63838	63844	anyway
O	63844	63845	,
O	63846	63850	just
O	63851	63854	not
O	63855	63866	immediately
O	63867	63868	(
O	63868	63871	and
O	63872	63876	like
O	63877	63878	I
O	63879	63883	said
O	63883	63884	,
O	63885	63889	data
O	63890	63895	which
O	63896	63898	is
O	63899	63903	left
O	63904	63906	in
O	63907	63908	a
O	63909	63915	buffer
O	63916	63920	will
O	63921	63923	be
O	63924	63928	lost
O	63929	63933	this
O	63934	63937	way
O	63937	63938	,
O	63939	63942	but
O	63943	63948	there
O	63949	63951	is
O	63952	63956	none
O	63957	63959	at
O	63960	63964	this
O	63965	63970	point
O	63970	63971	)
O	63972	63976	What
O	63977	63979	is
O	63980	63983	the
O	63984	63995	consequence
O	63996	63998	of
O	63999	64002	not
O	64003	64010	closing
O	64011	64014	the
O	64015	64019	file
O	64020	64031	immediately
O	64031	64032	?

O	64033	64038	Under
O	64039	64045	normal
O	64046	64056	conditions
O	64056	64057	,
O	64058	64061	you
O	64062	64073	potentially
O	64074	64078	lose
O	64079	64083	some
O	64084	64088	data
O	64088	64089	,
O	64090	64093	and
O	64094	64097	you
O	64098	64109	potentially
O	64110	64113	run
O	64114	64117	out
O	64118	64120	of
O	64121	64125	file
O	64126	64137	descriptors
O	64137	64138	.

O	64139	64142	But
O	64143	64145	if
O	64146	64149	you
O	64150	64154	have
O	64155	64156	a
O	64157	64163	system
O	64164	64169	where
O	64170	64173	you
O	64174	64177	can
O	64178	64184	create
O	64185	64190	files
O	64191	64194	but
O	64195	64198	you
O	64199	64202	can
O	64202	64203	'
O	64203	64204	t
O	64205	64210	write
O	64211	64219	anything
O	64220	64222	to
O	64223	64227	them
O	64227	64228	,
O	64229	64232	you
O	64233	64237	have
O	64238	64239	a
O	64240	64246	bigger
O	64247	64254	problem
O	64254	64255	.

O	64256	64257	i
O	64257	64258	.
O	64258	64259	e
O	64259	64260	.
O	64261	64263	it
O	64264	64268	hard
O	64269	64271	to
O	64272	64279	imagine
O	64280	64283	why
O	64284	64287	you
O	64288	64291	are
O	64292	64302	repeatedly
O	64303	64309	trying
O	64310	64312	to
O	64313	64319	create
O	64320	64324	this
O	64325	64329	file
O	64330	64337	despite
O	64338	64341	the
O	64342	64346	fact
O	64347	64350	you
O	64351	64354	are
O	64355	64362	failing
O	64362	64363	.

O	64364	64368	Both
B-api_mention	64369	64387	OutputStreamWriter
O	64388	64391	and
B-api_mention	64392	64406	BufferedWriter
O	64407	64410	don
O	64410	64411	'
O	64411	64412	t
O	64413	64418	throw
B-api_mention	64419	64430	IOException
O	64431	64433	in
O	64434	64439	their
O	64440	64452	constructors
O	64452	64453	,
O	64454	64456	so
O	64457	64459	it
O	64460	64463	not
O	64464	64469	clear
O	64470	64474	what
O	64475	64482	problem
O	64483	64487	they
O	64488	64493	would
O	64494	64499	cause
O	64499	64500	.

O	64501	64503	In
O	64504	64507	The
O	64508	64512	case
O	64513	64515	of
B-api_mention	64516	64530	BufferedWriter
O	64530	64531	,
O	64532	64535	you
O	64536	64541	could
O	64542	64545	get
O	64546	64548	an
B-api_mention	64549	64565	OutOfMemoryError
O	64565	64566	.

O	64567	64569	In
O	64570	64574	this
O	64575	64579	case
O	64580	64582	it
O	64583	64587	will
O	64588	64599	immediately
O	64600	64607	trigger
O	64608	64609	a
O	64610	64612	GC
O	64612	64613	,
O	64614	64619	which
O	64620	64622	as
O	64623	64625	we
O	64626	64630	have
O	64631	64635	seen
O	64636	64640	will
O	64641	64646	close
O	64647	64650	the
O	64651	64655	file
O	64656	64662	anyway
O	64662	64663	.

O	64665	64673	Question
O	64673	64674	-
O	64674	64682	28276423
O	64682	64683	,
O	64684	64690	answer
O	64690	64691	-
O	64691	64699	28276497

O	64700	64702	No
O	64702	64703	,
O	64704	64707	the
O	64708	64715	topmost
O	64716	64721	level
B-api_mention	64722	64728	Stream
O	64729	64731	or
O	64732	64738	reader
O	64739	64743	will
O	64744	64750	ensure
O	64751	64755	that
O	64756	64759	all
O	64760	64770	underlying
O	64771	64778	streams
O	64779	64780	/
O	64781	64788	readers
O	64789	64792	are
O	64793	64799	closed
O	64799	64800	.

O	64801	64806	Check
O	64807	64810	the
B-api_mention	64811	64816	close
I-api_mention	64816	64817	(
I-api_mention	64817	64821	args
I-api_mention	64821	64822	)
O	64823	64829	method
O	64830	64844	implementation
O	64845	64847	of
O	64848	64852	your
O	64853	64860	topmost
O	64861	64866	level
O	64867	64873	stream
O	64873	64874	.

O	64876	64884	Question
O	64884	64885	-
O	64885	64893	28276423
O	64893	64894	,
O	64895	64901	answer
O	64901	64902	-
O	64902	64910	28276498

O	64911	64919	Assuming
O	64920	64923	all
O	64924	64927	the
O	64928	64935	streams
O	64936	64939	get
O	64940	64947	created
O	64948	64952	okay
O	64952	64953	,
O	64954	64957	yes
O	64957	64958	,
O	64959	64963	just
O	64964	64971	closing
O	64972	64974	bw
O	64975	64977	is
O	64978	64982	fine
O	64983	64987	with
O	64988	64993	those
O	64994	65000	stream
O	65001	65016	implementations
O	65017	65018	;
O	65019	65022	but
O	65023	65027	that
O	65027	65028	'
O	65028	65029	s
O	65030	65031	a
O	65032	65035	big
O	65036	65046	assumption
O	65046	65047	.

O	65048	65049	I
O	65049	65050	'
O	65050	65051	d
O	65052	65055	use
O	65056	65059	try
O	65059	65060	-
O	65060	65064	with
O	65064	65065	-
O	65065	65074	resources
O	65075	65076	(
O	65077	65085	tutorial
O	65086	65087	)
O	65088	65090	so
O	65091	65095	that
O	65096	65099	any
O	65100	65106	issues
O	65107	65119	constructing
O	65120	65123	the
O	65124	65134	subsequent
O	65135	65142	streams
O	65143	65147	that
O	65148	65153	throw
O	65154	65164	exceptions
O	65165	65168	don
O	65168	65169	'
O	65169	65170	t
O	65171	65176	leave
O	65177	65180	the
O	65181	65189	previous
O	65190	65197	streams
O	65198	65205	hanging
O	65205	65206	,
O	65207	65210	and
O	65211	65213	so
O	65214	65217	you
O	65218	65221	don
O	65221	65222	'
O	65222	65223	t
O	65224	65228	have
O	65229	65231	to
O	65232	65236	rely
O	65237	65239	on
O	65240	65243	the
O	65244	65250	stream
O	65251	65265	implementation
O	65266	65272	having
O	65273	65276	the
O	65277	65281	call
O	65282	65284	to
O	65285	65290	close
O	65291	65294	the
O	65295	65305	underlying
O	65306	65312	stream
O	65312	65313	:
O	65314	65315	#
O	65315	65318	pre
O	65319	65323	Note
O	65324	65327	you
O	65328	65330	no
O	65331	65337	longer
O	65338	65342	call
O	65343	65348	close
O	65349	65351	at
O	65352	65355	all
O	65355	65356	.

O	65357	65366	Important
O	65367	65371	note
O	65372	65373	:
O	65374	65376	To
O	65377	65381	have
O	65382	65385	try
O	65385	65386	-
O	65386	65390	with
O	65390	65391	-
O	65391	65400	resources
O	65401	65406	close
O	65407	65411	them
O	65411	65412	,
O	65413	65416	you
O	65417	65421	must
O	65422	65428	assign
O	65429	65432	the
O	65433	65440	streams
O	65441	65443	to
O	65444	65453	variables
O	65454	65456	as
O	65457	65460	you
O	65461	65465	open
O	65466	65470	them
O	65470	65471	,
O	65472	65475	you
O	65476	65482	cannot
O	65483	65486	use
O	65487	65494	nesting
O	65494	65495	.

O	65496	65498	If
O	65499	65502	you
O	65503	65506	use
O	65507	65514	nesting
O	65514	65515	,
O	65516	65518	an
O	65519	65528	exception
O	65529	65535	during
O	65536	65548	construction
O	65549	65551	of
O	65552	65555	one
O	65556	65558	of
O	65559	65562	the
O	65563	65568	later
O	65569	65576	streams
O	65577	65578	(
O	65578	65581	say
O	65581	65582	,
B-api_mention	65583	65599	GZIPOutputStream
O	65600	65601	)
O	65602	65606	will
O	65607	65612	leave
O	65613	65616	any
O	65617	65623	stream
O	65624	65635	constructed
O	65636	65638	by
O	65639	65642	the
O	65643	65649	nested
O	65650	65655	calls
O	65656	65662	inside
O	65663	65665	it
O	65666	65670	open
O	65670	65671	.

O	65672	65676	From
O	65677	65680	JLS
O	65681	65682	§
O	65682	65684	14
O	65684	65685	.
O	65685	65687	20
O	65687	65688	.
O	65688	65689	3
O	65690	65691	:
O	65692	65693	#
O	65693	65703	blockquote
O	65704	65708	Note
O	65709	65712	the
O	65713	65717	word
O	65718	65719	"
O	65719	65728	variables
O	65728	65729	"
O	65730	65731	(
O	65731	65733	my
O	65734	65742	emphasis
O	65742	65743	)
O	65744	65745	.

O	65746	65747	E
O	65747	65748	.
O	65748	65749	g
O	65749	65750	.
O	65750	65751	,
O	65752	65755	don
O	65755	65756	'
O	65756	65757	t
O	65758	65760	do
O	65761	65765	this
O	65765	65766	:
O	65767	65768	#
O	65768	65771	pre
O	65772	65773	.
O	65773	65774	.
O	65774	65775	.
O	65775	65782	because
O	65783	65785	an
O	65786	65795	exception
O	65796	65800	from
O	65801	65804	the
B-api_mention	65805	65821	GZIPOutputStream
O	65821	65822	(
B-api_mention	65822	65834	OutputStream
O	65834	65835	)
O	65836	65847	constructor
O	65848	65849	(
O	65849	65854	which
O	65855	65859	says
O	65860	65862	it
O	65863	65866	may
O	65867	65872	throw
B-api_mention	65873	65884	IOException
O	65885	65886	,
O	65887	65890	and
O	65891	65897	writes
O	65898	65899	a
O	65900	65906	header
O	65907	65909	to
O	65910	65913	the
O	65914	65924	underlying
O	65925	65931	stream
O	65931	65932	)
O	65933	65938	would
O	65939	65944	leave
O	65945	65948	the
B-api_mention	65949	65965	FileOutputStream
O	65966	65970	open
O	65970	65971	.

O	65972	65977	Since
O	65978	65982	some
O	65983	65992	resources
O	65993	65997	have
O	65998	66010	constructors
O	66011	66015	that
O	66016	66019	may
O	66020	66025	throw
O	66026	66029	and
O	66030	66036	others
O	66037	66040	don
O	66040	66041	'
O	66041	66042	t
O	66042	66043	,
O	66044	66046	it
O	66046	66047	'
O	66047	66048	s
O	66049	66050	a
O	66051	66055	good
O	66056	66061	habit
O	66062	66064	to
O	66065	66069	just
O	66070	66074	list
O	66075	66079	them
O	66080	66090	separately
O	66090	66091	.

O	66092	66094	We
O	66095	66098	can
O	66099	66105	double
O	66105	66106	-
O	66106	66111	check
O	66112	66115	our
O	66116	66130	interpretation
O	66131	66133	of
O	66134	66138	that
O	66139	66142	JLS
O	66143	66150	section
O	66151	66155	with
O	66156	66160	this
O	66161	66168	program
O	66168	66169	:
O	66170	66171	#
O	66171	66174	pre
O	66175	66176	.
O	66176	66177	.
O	66177	66178	.
O	66178	66183	which
O	66184	66187	has
O	66188	66191	the
O	66192	66198	output
O	66198	66199	:
O	66200	66201	#
O	66201	66204	pre
O	66205	66209	Note
O	66210	66214	that
O	66215	66220	there
O	66221	66224	are
O	66225	66227	no
O	66228	66233	calls
O	66234	66236	to
O	66237	66242	close
O	66243	66248	there
O	66248	66249	.

O	66250	66252	If
O	66253	66255	we
O	66256	66259	fix
O	66260	66264	main
O	66265	66266	:
O	66267	66268	#
O	66268	66271	pre
O	66272	66276	then
O	66277	66279	we
O	66280	66283	get
O	66284	66287	the
O	66288	66299	appropriate
O	66300	66305	close
O	66306	66311	calls
O	66311	66312	:
O	66313	66314	#
O	66314	66317	pre
O	66318	66319	(
O	66319	66322	Yes
O	66322	66323	,
O	66324	66327	two
O	66328	66333	calls
O	66334	66336	to
O	66337	66346	InnerMost
O	66346	66347	#
O	66347	66352	close
O	66353	66355	is
O	66356	66363	correct
O	66363	66364	;
O	66365	66368	one
O	66369	66371	is
O	66372	66376	from
O	66377	66383	Middle
O	66384	66385	,
O	66386	66389	the
O	66390	66395	other
O	66396	66400	from
O	66401	66404	try
O	66404	66405	-
O	66405	66409	with
O	66409	66410	-
O	66410	66419	resources
O	66419	66420	.
O	66420	66421	)

O	66423	66431	Question
O	66431	66432	-
O	66432	66440	29494800
O	66440	66441	,
O	66442	66448	answer
O	66448	66449	-
O	66449	66457	29495065

O	66458	66459	#
O	66459	66461	li
O	66462	66464	It
O	66465	66467	is
O	66468	66476	checking
O	66477	66479	if
O	66480	66487	newType
O	66488	66490	is
O	66491	66496	array
O	66497	66499	of
O	66500	66507	Objects
O	66508	66510	or
O	66511	66514	not
O	66514	66515	:
O	66516	66517	#
O	66517	66520	pre
O	66521	66524	Why
O	66525	66527	to
O	66528	66530	do
O	66531	66535	that
O	66535	66536	?

O	66537	66544	Because
O	66545	66548	new
B-api_mention	66549	66555	Object
O	66555	66556	[
O	66556	66557	n
O	66557	66558	]
O	66559	66561	is
O	66562	66568	faster
O	66569	66573	than
B-api_mention	66574	66579	Array
I-api_mention	66579	66580	.
I-api_mention	66580	66591	newInstance
O	66592	66593	#
O	66593	66595	li
B-api_mention	66596	66601	Array
I-api_mention	66601	66602	.
I-api_mention	66602	66613	newInstance
I-api_mention	66613	66614	(
I-api_mention	66614	66618	args
I-api_mention	66618	66619	)
O	66620	66627	creates
O	66628	66630	an
O	66631	66636	array
O	66637	66639	of
O	66640	66645	types
O	66646	66653	defined
O	66654	66656	by
O	66657	66660	the
O	66661	66666	first
O	66667	66675	argument
O	66675	66676	,
O	66677	66679	eg
B-api_mention	66680	66686	String
I-api_mention	66686	66687	.
I-api_mention	66687	66692	class
O	66693	66694	-
O	66694	66695	>
B-api_mention	66696	66702	String
O	66702	66703	[
O	66703	66704	]
O	66705	66706	.

O	66707	66711	Note
O	66712	66716	that
B-api_mention	66717	66723	String
O	66723	66724	[
O	66724	66725	]
B-api_mention	66725	66726	.
I-api_mention	66726	66731	class
I-api_mention	66731	66732	.
I-api_mention	66732	66748	getComponentType
I-api_mention	66748	66749	(
I-api_mention	66749	66753	args
I-api_mention	66753	66754	)
O	66755	66762	returns
B-api_mention	66763	66769	String
I-api_mention	66769	66770	.
I-api_mention	66770	66775	class
O	66776	66777	#
O	66777	66779	li
O	66780	66783	You
O	66784	66790	cannot
O	66791	66794	use
O	66795	66797	it
O	66798	66802	like
O	66803	66807	that
O	66807	66808	,
O	66809	66812	but
O	66813	66815	it
O	66816	66819	can
O	66820	66822	be
O	66823	66827	like
O	66828	66832	this
B-api_mention	66833	66840	Integer
O	66840	66841	[
O	66841	66842	]
O	66843	66847	nums
O	66848	66849	=
B-api_mention	66850	66856	Arrays
I-api_mention	66856	66857	.
I-api_mention	66857	66863	copyOf
I-api_mention	66863	66864	(
I-api_mention	66864	66868	args
I-api_mention	66868	66869	)
O	66869	66870	;
O	66871	66873	in
O	66874	66878	this
O	66879	66883	case
O	66884	66886	it
O	66887	66894	depends
O	66895	66899	only
O	66900	66902	on
O	66903	66909	actual
O	66910	66914	type
O	66915	66917	of
O	66918	66926	elements
O	66926	66927	,
O	66928	66930	eg
B-api_mention	66931	66937	Arrays
I-api_mention	66937	66938	.
I-api_mention	66938	66944	copyOf
I-api_mention	66944	66945	(
I-api_mention	66945	66949	args
I-api_mention	66949	66950	)
O	66950	66951	;
O	66952	66956	will
O	66957	66961	fail
O	66961	66962	,
O	66963	66966	you
O	66967	66973	cannot
O	66974	66979	write
O	66980	66982	in
B-api_mention	66983	66990	Integer
O	66990	66991	[
O	66991	66992	]
O	66993	67001	anything
O	67002	67005	but
B-api_mention	67006	67013	Integer

O	67015	67023	Question
O	67023	67024	-
O	67024	67032	29494800
O	67032	67033	,
O	67034	67040	answer
O	67040	67041	-
O	67041	67049	29495113

O	67050	67051	#
O	67051	67061	blockquote
O	67062	67063	(
B-api_mention	67063	67069	Object
O	67069	67070	)
O	67070	67077	newType
O	67078	67079	=
O	67079	67080	=
O	67081	67082	(
B-api_mention	67082	67088	Object
O	67088	67089	)
B-api_mention	67089	67095	Object
O	67095	67096	[
O	67096	67097	]
B-api_mention	67097	67098	.
I-api_mention	67098	67103	class
O	67104	67106	It
O	67107	67109	is
O	67110	67118	checking
O	67119	67126	whether
O	67127	67135	variable
O	67136	67143	newType
O	67144	67149	holds
O	67150	67151	a
O	67152	67161	reference
O	67162	67164	to
O	67165	67167	an
O	67168	67176	instance
O	67177	67179	of
B-api_mention	67180	67184	java
I-api_mention	67184	67185	.
I-api_mention	67185	67189	lang
I-api_mention	67189	67190	.
I-api_mention	67190	67195	Class
O	67196	67208	representing
O	67209	67213	type
B-api_mention	67214	67220	Object
O	67220	67221	[
O	67221	67222	]
O	67223	67224	.

O	67225	67228	The
O	67229	67234	casts
O	67235	67238	are
O	67239	67247	unneeded
O	67247	67248	.

O	67249	67250	#
O	67250	67260	blockquote
O	67261	67263	As
O	67264	67267	far
O	67268	67270	as
O	67271	67272	I
O	67273	67276	can
O	67277	67281	tell
O	67281	67282	,
B-api_mention	67283	67288	Array
I-api_mention	67288	67289	.
I-api_mention	67289	67300	newInstance
I-api_mention	67300	67301	(
I-api_mention	67301	67305	args
I-api_mention	67305	67306	)
O	67307	67312	could
O	67313	67315	be
O	67316	67320	used
O	67321	67323	in
O	67324	67328	both
O	67329	67334	cases
O	67334	67335	,
O	67336	67339	but
O	67340	67343	non
O	67343	67344	-
O	67344	67354	reflective
O	67355	67363	ordinary
O	67364	67369	array
O	67370	67382	construction
O	67383	67385	is
O	67386	67392	likely
O	67393	67394	a
O	67395	67398	bit
O	67399	67405	faster
O	67405	67406	.

O	67407	67411	Thus
O	67411	67412	,
O	67413	67414	I
O	67415	67422	suppose
O	67423	67427	that
B-api_mention	67428	67434	Object
O	67434	67435	[
O	67435	67436	]
O	67437	67439	is
O	67440	67446	called
O	67447	67450	out
O	67451	67453	as
O	67454	67455	a
O	67456	67463	special
O	67464	67468	case
O	67469	67472	for
O	67473	67484	performance
O	67485	67492	reasons
O	67492	67493	,
O	67494	67497	but
O	67498	67499	I
O	67500	67504	have
O	67505	67507	no
O	67508	67512	idea
O	67513	67520	whether
O	67521	67525	that
O	67526	67530	case
O	67531	67533	is
O	67534	67543	exercised
O	67544	67554	frequently
O	67555	67561	enough
O	67562	67565	for
O	67566	67569	the
O	67570	67582	optimization
O	67583	67585	to
O	67586	67588	be
O	67589	67598	important
O	67598	67599	.

O	67600	67601	#
O	67601	67611	blockquote
B-api_mention	67612	67619	Integer
O	67619	67620	[
O	67620	67621	]
O	67622	67626	nums
O	67627	67628	=
B-api_mention	67629	67635	Arrays
I-api_mention	67635	67636	.
I-api_mention	67636	67642	copyOf
I-api_mention	67642	67643	(
I-api_mention	67643	67647	args
I-api_mention	67647	67648	)
O	67649	67652	You
O	67653	67659	should
O	67660	67663	use
O	67664	67666	it
O	67667	67671	when
O	67672	67675	you
O	67676	67680	need
O	67681	67683	to
O	67684	67688	copy
O	67689	67691	an
O	67692	67697	array
O	67698	67700	to
O	67701	67703	an
O	67704	67709	array
O	67710	67714	with
O	67715	67716	a
O	67717	67725	possibly
O	67726	67735	different
O	67736	67737	(
O	67737	67740	but
O	67741	67751	compatible
O	67751	67752	)
O	67753	67760	element
O	67761	67765	type
O	67765	67766	,
O	67767	67777	especially
O	67778	67782	when
O	67783	67786	the
O	67787	67794	element
O	67795	67800	types
O	67801	67804	are
O	67805	67808	not
O	67809	67819	statically
O	67820	67825	known
O	67825	67826	.

O	67827	67829	If
O	67830	67833	you
O	67834	67838	know
O	67839	67842	you
O	67843	67847	want
O	67848	67851	the
O	67852	67856	copy
O	67857	67859	to
O	67860	67864	have
O	67865	67868	the
O	67869	67873	same
O	67874	67881	element
O	67882	67886	type
O	67887	67889	as
O	67890	67893	the
O	67894	67902	original
O	67902	67903	,
O	67904	67908	then
O	67909	67911	it
O	67911	67912	'
O	67912	67913	s
O	67914	67920	easier
O	67921	67923	to
O	67924	67927	use
O	67928	67931	the
O	67932	67940	original
O	67941	67946	array
O	67946	67947	'
O	67947	67948	s
B-api_mention	67949	67954	clone
I-api_mention	67954	67955	(
I-api_mention	67955	67959	args
I-api_mention	67959	67960	)
O	67961	67967	method
O	67967	67968	.

O	67970	67978	Question
O	67978	67979	-
O	67979	67987	29494800
O	67987	67988	,
O	67989	67995	answer
O	67995	67996	-
O	67996	68004	29500496

O	68005	68010	First
O	68011	68013	of
O	68014	68017	all
O	68017	68018	,
O	68019	68022	the
O	68023	68027	cast
O	68028	68030	in
O	68031	68035	that
O	68036	68040	line
O	68041	68042	(
O	68042	68043	(
B-api_mention	68043	68049	Object
O	68049	68050	)
O	68050	68057	newType
O	68058	68059	=
O	68059	68060	=
O	68061	68062	(
B-api_mention	68062	68068	Object
O	68068	68069	)
B-api_mention	68069	68075	Object
O	68075	68076	[
O	68076	68077	]
B-api_mention	68077	68078	.
I-api_mention	68078	68083	class
O	68083	68084	)
O	68085	68088	are
O	68089	68100	absobuletly
O	68101	68107	needed
O	68107	68108	.

O	68109	68117	Removing
O	68118	68122	them
O	68123	68127	will
O	68128	68134	result
O	68135	68137	in
O	68138	68139	a
O	68140	68151	compilation
O	68152	68157	error
O	68158	68159	:
O	68160	68161	#
O	68161	68164	pre
O	68165	68168	Now
O	68169	68171	to
O	68172	68178	answer
O	68179	68183	your
O	68184	68192	question
O	68193	68197	What
O	68198	68200	is
O	68201	68205	this
O	68206	68210	line
O	68211	68219	checking
O	68220	68221	?

O	68222	68224	It
O	68225	68231	simply
O	68232	68238	verify
O	68239	68241	if
O	68242	68245	the
O	68246	68251	given
O	68252	68257	array
O	68258	68260	is
O	68261	68263	of
O	68264	68270	object
O	68271	68275	type
O	68275	68276	,
O	68277	68282	which
O	68283	68285	is
O	68286	68290	part
O	68291	68293	of
O	68294	68297	the
O	68298	68304	answer
O	68305	68308	for
O	68309	68313	your
O	68314	68319	other
O	68320	68328	question
O	68329	68332	Why
B-api_mention	68333	68338	Array
I-api_mention	68338	68339	.
I-api_mention	68339	68350	newInstance
O	68351	68354	not
O	68355	68359	good
O	68360	68366	enough
O	68367	68370	for
O	68371	68375	both
O	68376	68381	cases
O	68381	68382	?

O	68383	68385	In
O	68386	68389	the
O	68390	68395	first
O	68396	68400	case
O	68400	68401	,
O	68402	68404	we
O	68405	68412	already
O	68413	68417	know
O	68418	68422	that
O	68423	68426	the
O	68427	68432	array
O	68433	68435	is
O	68436	68438	of
B-api_mention	68439	68445	Object
O	68446	68450	type
O	68451	68453	so
O	68454	68459	there
O	68460	68462	is
O	68463	68465	no
O	68466	68471	point
O	68472	68474	in
O	68475	68482	calling
O	68483	68486	the
O	68487	68498	newInstance
O	68499	68505	method
O	68506	68508	to
O	68509	68517	retrieve
O	68518	68521	the
O	68522	68529	correct
O	68530	68534	type
O	68534	68535	,
O	68536	68540	this
O	68541	68546	would
O	68547	68551	only
O	68552	68558	result
O	68559	68561	in
O	68562	68573	performance
O	68574	68578	loss
O	68578	68579	.

O	68580	68582	As
O	68583	68586	for
O	68587	68591	your
O	68592	68597	final
O	68598	68605	example
O	68605	68606	,
B-api_mention	68607	68614	Integer
O	68614	68615	[
O	68615	68616	]
O	68617	68621	nums
O	68622	68623	=
B-api_mention	68624	68630	Arrays
I-api_mention	68630	68631	.
I-api_mention	68631	68637	copyOf
I-api_mention	68637	68638	(
I-api_mention	68638	68642	args
I-api_mention	68642	68643	)
O	68644	68648	That
O	68649	68651	it
O	68652	68656	does
O	68657	68664	compile
O	68664	68665	,
O	68666	68668	it
O	68669	68671	is
O	68672	68676	true
O	68676	68677	.

O	68678	68685	Because
O	68686	68689	the
O	68690	68695	given
O	68696	68705	arguments
O	68706	68708	to
O	68709	68712	the
O	68713	68719	method
O	68720	68723	are
O	68724	68727	all
O	68728	68734	valids
O	68734	68735	.

O	68736	68738	It
O	68739	68743	will
O	68744	68753	certainly
O	68754	68758	fail
O	68759	68761	at
O	68762	68769	runtime
O	68769	68770	;
O	68771	68775	what
O	68776	68781	would
O	68782	68784	be
O	68785	68788	the
O	68789	68797	expected
O	68798	68804	output
O	68805	68807	of
O	68808	68818	converting
O	68819	68820	"
O	68820	68821	a
O	68821	68822	"
O	68823	68825	to
B-api_mention	68826	68833	Integer
O	68834	68838	type
O	68839	68840	?

O	68841	68844	Now
O	68844	68845	,
O	68846	68850	when
O	68851	68853	to
O	68854	68857	use
B-api_mention	68858	68864	copyOf
O	68865	68866	?

O	68867	68871	When
O	68872	68875	you
O	68876	68883	already
O	68884	68888	know
O	68889	68892	the
O	68893	68897	both
O	68898	68903	types
O	68903	68904	,
O	68905	68908	and
O	68909	68916	already
O	68917	68921	know
O	68922	68926	that
O	68927	68931	they
O	68932	68935	are
O	68936	68941	valid
O	68942	68950	together
O	68950	68951	.

O	68952	68954	It
O	68955	68959	main
O	68960	68965	usage
O	68966	68968	is
O	68969	68971	to
O	68972	68978	return
O	68979	68980	a
O	68981	68985	copy
O	68986	68989	but
O	68990	68999	truncated
O	69000	69002	or
O	69003	69009	padded
O	69010	69014	with
O	69015	69016	[
O	69016	69020	null
O	69020	69021	/
O	69021	69028	default
O	69029	69035	values
O	69035	69036	]
O	69037	69039	to
O	69040	69043	the
O	69044	69052	original
O	69053	69058	array
O	69058	69059	.

O	69061	69069	Question
O	69069	69070	-
O	69070	69078	29494800
O	69078	69079	,
O	69080	69086	answer
O	69086	69087	-
O	69087	69095	29502668

O	69096	69097	#
O	69097	69107	blockquote
O	69108	69110	It
O	69110	69111	'
O	69111	69112	s
O	69113	69121	checking
O	69122	69128	simple
O	69129	69137	equality
O	69138	69139	(
O	69139	69145	likely
O	69146	69149	for
O	69150	69153	the
O	69154	69161	purpose
O	69162	69164	of
O	69165	69166	a
O	69167	69172	micro
O	69172	69173	-
O	69173	69185	optimization
O	69185	69186	,
O	69187	69190	but
O	69191	69195	more
O	69196	69198	on
O	69199	69203	that
O	69204	69209	later
O	69209	69210	)
O	69210	69211	.

O	69212	69215	The
O	69216	69223	unusual
O	69224	69231	casting
O	69232	69234	is
O	69235	69244	necessary
O	69245	69252	because
B-api_mention	69253	69258	Class
I-api_mention	69258	69259	<
I-api_mention	69259	69260	T
I-api_mention	69260	69261	>
O	69262	69263	(
O	69263	69266	the
O	69267	69271	type
O	69272	69274	of
B-api_mention	69275	69281	Object
O	69281	69282	[
O	69282	69283	]
B-api_mention	69283	69284	.
I-api_mention	69284	69289	class
O	69290	69291	)
O	69292	69295	and
B-api_mention	69296	69301	Class
I-api_mention	69301	69302	<
I-api_mention	69302	69303	T
I-api_mention	69303	69304	>
O	69305	69308	are
O	69309	69321	incomparable
O	69322	69327	types
O	69327	69328	.

O	69329	69338	Basically
O	69338	69339	,
O	69340	69343	for
O	69344	69346	an
O	69347	69355	equality
O	69356	69366	comparison
O	69367	69371	with
O	69372	69373	=
O	69373	69374	=
O	69375	69377	to
O	69378	69385	compile
O	69385	69386	,
O	69387	69390	one
O	69391	69393	of
O	69394	69397	the
O	69398	69403	sides
O	69404	69407	has
O	69408	69410	to
O	69411	69413	be
O	69414	69415	a
O	69416	69423	subtype
O	69424	69426	or
O	69427	69436	supertype
O	69437	69439	of
O	69440	69443	the
O	69444	69449	other
O	69449	69450	.

O	69451	69452	I
O	69452	69453	.
O	69453	69454	e
O	69454	69455	.

O	69456	69458	we
O	69459	69462	can
O	69462	69463	'
O	69463	69464	t
O	69465	69467	do
O	69467	69468	:
O	69469	69470	#
O	69470	69473	pre
O	69474	69477	The
O	69478	69483	rules
O	69484	69487	for
O	69488	69495	generic
O	69496	69501	types
O	69502	69505	are
O	69506	69507	a
O	69508	69511	bit
O	69512	69516	more
O	69517	69528	complicated
O	69529	69532	and
O	69533	69538	there
O	69539	69542	are
O	69543	69544	a
O	69545	69548	few
O	69549	69554	cases
O	69555	69560	where
O	69561	69562	a
O	69563	69573	comparison
O	69574	69579	doesn
O	69579	69580	'
O	69580	69581	t
O	69582	69589	compile
O	69589	69590	,
O	69591	69594	but
O	69595	69597	it
O	69598	69601	may
O	69602	69607	still
O	69608	69616	evaluate
O	69617	69619	to
O	69620	69624	true
O	69624	69625	.

O	69626	69629	The
O	69630	69636	reason
B-api_mention	69637	69642	Class
I-api_mention	69642	69643	<
I-api_mention	69643	69644	T
I-api_mention	69644	69645	>
O	69646	69648	is
O	69649	69652	not
O	69653	69654	a
O	69655	69664	supertype
O	69665	69667	of
B-api_mention	69668	69673	Class
I-api_mention	69673	69674	<
I-api_mention	69674	69675	T
I-api_mention	69675	69676	>
O	69677	69678	,
O	69679	69686	despite
B-api_mention	69687	69693	Object
O	69693	69694	[
O	69694	69695	]
O	69696	69701	being
O	69702	69703	a
O	69704	69713	supertype
O	69714	69716	of
O	69717	69720	all
O	69721	69727	object
O	69728	69733	array
O	69734	69739	types
O	69739	69740	,
O	69741	69743	is
O	69744	69748	that
O	69749	69753	Java
O	69754	69762	generics
O	69763	69766	are
O	69767	69776	invariant
O	69777	69784	without
O	69785	69788	the
O	69789	69797	presence
O	69798	69800	of
O	69801	69802	a
O	69803	69811	wildcard
O	69811	69812	.

O	69813	69820	Another
O	69821	69824	way
O	69825	69827	to
O	69828	69830	do
O	69831	69834	the
O	69835	69845	comparison
O	69846	69851	would
O	69852	69854	be
O	69854	69855	:
O	69856	69857	(
O	69857	69864	newType
O	69865	69866	=
O	69866	69867	=
O	69868	69869	(
B-api_mention	69869	69874	Class
I-api_mention	69874	69875	<
I-api_mention	69875	69876	T
I-api_mention	69876	69877	>
O	69877	69878	)
B-api_mention	69878	69884	Object
O	69884	69885	[
O	69885	69886	]
B-api_mention	69886	69887	.
I-api_mention	69887	69892	class
O	69892	69893	)
O	69894	69895	#
O	69895	69905	blockquote
O	69906	69907	#
O	69907	69909	li
O	69910	69913	new
B-api_mention	69914	69920	Object
O	69920	69921	[
O	69921	69922	.
O	69922	69923	.
O	69923	69924	.
O	69924	69925	]
O	69926	69933	creates
O	69934	69936	an
O	69937	69942	array
O	69943	69946	the
O	69947	69953	normal
O	69954	69957	way
O	69957	69958	,
O	69959	69961	of
O	69962	69963	a
O	69964	69968	type
O	69969	69973	that
O	69974	69976	is
O	69977	69987	statically
O	69988	69993	known
O	69993	69994	.

O	69995	70003	Remember
O	70003	70004	,
O	70005	70008	the
O	70009	70013	code
O	70014	70017	has
O	70018	70022	just
O	70023	70030	checked
O	70031	70035	that
O	70036	70037	T
O	70037	70038	[
O	70038	70039	]
O	70040	70042	is
B-api_mention	70043	70049	Object
O	70049	70050	[
O	70050	70051	]
O	70052	70053	.

O	70054	70055	#
O	70055	70057	li
B-api_mention	70058	70063	Array
I-api_mention	70063	70064	.
I-api_mention	70064	70075	newInstance
I-api_mention	70075	70076	(
I-api_mention	70076	70080	args
I-api_mention	70080	70081	)
O	70082	70086	uses
O	70087	70097	reflection
O	70098	70100	to
O	70101	70112	dynamically
O	70113	70119	create
O	70120	70122	an
O	70123	70128	array
O	70129	70131	of
O	70132	70135	the
O	70136	70141	Class
O	70142	70146	type
O	70147	70153	passed
O	70154	70156	in
O	70156	70157	.

O	70158	70159	#
O	70159	70169	blockquote
O	70170	70172	An
O	70173	70182	operation
O	70183	70188	using
O	70189	70199	reflection
O	70200	70202	is
O	70203	70212	generally
O	70213	70219	slower
O	70220	70224	than
O	70225	70228	its
O	70229	70232	non
O	70232	70233	-
O	70233	70243	reflective
O	70244	70255	counterpart
O	70255	70256	.

O	70257	70260	The
O	70261	70271	reflection
O	70272	70280	tutorial
O	70281	70285	says
O	70285	70286	:
O	70287	70288	#
O	70288	70298	blockquote
O	70299	70303	Java
O	70304	70306	SE
O	70307	70309	is
O	70310	70316	filled
O	70317	70321	with
O	70322	70327	micro
O	70327	70328	-
O	70328	70340	optimization
O	70341	70345	like
O	70346	70350	this
O	70350	70351	.

O	70352	70355	The
O	70356	70363	writers
O	70364	70366	of
O	70367	70369	SE
O	70370	70373	try
O	70374	70376	to
O	70377	70384	squeeze
O	70385	70395	everything
O	70396	70400	they
O	70401	70404	can
O	70405	70408	out
O	70409	70411	of
O	70412	70414	it
O	70414	70415	.

O	70416	70419	But
O	70420	70421	I
O	70422	70428	wouldn
O	70428	70429	'
O	70429	70430	t
O	70431	70433	be
O	70434	70441	worried
O	70442	70447	about
O	70448	70449	a
O	70450	70461	performance
O	70462	70465	hit
O	70466	70468	in
O	70469	70473	this
O	70474	70478	case
O	70478	70479	:
O	70480	70491	newInstance
O	70492	70495	and
B-api_mention	70496	70502	copyOf
O	70503	70506	are
O	70507	70514	HotSpot
O	70515	70525	intrinsics
O	70526	70527	.

O	70528	70532	This
O	70533	70538	means
O	70539	70543	that
O	70544	70551	ideally
O	70552	70557	calls
O	70558	70560	to
O	70561	70566	these
O	70567	70574	methods
O	70575	70578	get
O	70579	70587	replaced
O	70588	70592	with
O	70593	70600	machine
O	70600	70601	-
O	70601	70609	specific
O	70610	70618	assembly
O	70618	70619	.

O	70620	70631	Anecdotally
O	70631	70632	,
O	70633	70634	I
O	70635	70638	ran
O	70639	70643	some
O	70644	70649	tests
O	70650	70653	and
O	70654	70659	found
O	70660	70663	the
O	70664	70674	difference
O	70675	70682	between
O	70683	70686	new
B-api_mention	70687	70693	Object
O	70693	70694	[
O	70694	70695	.
O	70695	70696	.
O	70696	70697	.
O	70697	70698	]
O	70699	70702	and
B-api_mention	70703	70708	Array
I-api_mention	70708	70709	.
I-api_mention	70709	70720	newInstance
I-api_mention	70720	70721	(
I-api_mention	70721	70725	args
I-api_mention	70725	70726	)
O	70727	70729	to
O	70730	70732	be
O	70733	70743	negligible
O	70743	70744	.

O	70745	70748	The
O	70749	70753	code
O	70754	70756	in
O	70757	70760	the
O	70761	70769	question
O	70770	70772	is
O	70773	70781	probably
O	70782	70783	a
O	70784	70789	relic
O	70789	70790	,
O	70791	70799	although
O	70800	70802	it
O	70803	70806	may
O	70807	70812	still
O	70813	70815	be
O	70816	70822	useful
O	70823	70825	on
O	70826	70830	less
O	70831	70835	well
O	70835	70836	-
O	70836	70844	equipped
O	70845	70849	JVMs
O	70849	70850	.

O	70851	70861	Reflection
O	70862	70865	can
O	70866	70870	also
O	70871	70873	be
O	70874	70882	disabled
O	70883	70885	in
O	70886	70893	certain
O	70894	70902	contexts
O	70903	70907	with
O	70908	70914	strict
O	70915	70923	security
O	70924	70925	(
O	70925	70929	such
O	70930	70932	as
O	70933	70935	an
O	70936	70942	applet
O	70942	70943	)
O	70943	70944	,
O	70945	70948	but
O	70949	70952	not
O	70953	70962	typically
O	70963	70966	for
O	70967	70968	a
O	70969	70975	normal
O	70976	70983	desktop
O	70984	70995	application
O	70995	70996	.

O	70997	70998	#
O	70998	71008	blockquote
O	71009	71011	In
O	71012	71019	general
O	71019	71020	,
O	71021	71024	you
O	71025	71029	will
O	71030	71038	probably
O	71039	71044	never
O	71045	71048	use
O	71049	71053	this
O	71054	71062	overload
O	71062	71063	.

O	71064	71068	This
O	71069	71077	overload
O	71078	71080	is
O	71081	71085	only
O	71086	71092	useful
O	71093	71095	if
O	71096	71099	you
O	71100	71104	want
O	71105	71107	to
O	71108	71114	change
O	71115	71118	the
O	71119	71123	type
O	71124	71126	of
O	71127	71130	the
O	71131	71136	array
O	71136	71137	.

O	71138	71139	#
O	71139	71141	li
O	71142	71150	Widening
O	71150	71151	:
O	71152	71153	#
O	71153	71156	pre
O	71157	71158	#
O	71158	71160	li
O	71161	71170	Narrowing
O	71170	71171	:
O	71172	71173	#
O	71173	71176	pre
O	71177	71179	It
O	71179	71180	'
O	71180	71181	s
O	71182	71186	more
O	71187	71194	typical
O	71195	71197	to
O	71198	71201	use
B-api_mention	71202	71208	Arrays
I-api_mention	71208	71209	.
I-api_mention	71209	71215	copyOf
I-api_mention	71215	71216	(
I-api_mention	71216	71217	T
I-api_mention	71217	71218	[
I-api_mention	71218	71219	]
I-api_mention	71219	71220	,
I-api_mention	71221	71224	int
I-api_mention	71224	71225	)
O	71226	71227	.

O	71229	71237	Question
O	71237	71238	-
O	71238	71246	29691513
O	71246	71247	,
O	71248	71254	answer
O	71254	71255	-
O	71255	71263	29727412

O	71264	71267	The
O	71268	71271	JLS
O	71272	71281	describes
O	71282	71283	a
O	71284	71287	few
O	71288	71295	special
O	71296	71305	behaviors
O	71306	71308	of
O	71309	71313	what
O	71314	71316	it
O	71317	71322	calls
O	71323	71331	constant
O	71332	71341	variables
O	71342	71343	,
O	71344	71349	which
O	71350	71353	are
O	71354	71359	final
O	71360	71369	variables
O	71370	71371	(
O	71371	71378	whether
O	71379	71385	static
O	71386	71388	or
O	71389	71392	not
O	71392	71393	)
O	71394	71399	which
O	71400	71403	are
O	71404	71415	initialized
O	71416	71420	with
O	71421	71429	constant
O	71430	71441	expressions
O	71442	71444	of
B-api_mention	71445	71451	String
O	71452	71454	or
O	71455	71464	primitive
O	71465	71469	type
O	71469	71470	.

O	71471	71479	Constant
O	71480	71489	variables
O	71490	71494	have
O	71495	71496	a
O	71497	71502	major
O	71503	71513	difference
O	71514	71518	with
O	71519	71526	respect
O	71527	71529	to
O	71530	71536	binary
O	71537	71550	compatibility
O	71550	71551	:
O	71552	71555	the
O	71556	71562	values
O	71563	71565	of
O	71566	71574	constant
O	71575	71584	variables
O	71585	71591	become
O	71592	71596	part
O	71597	71599	of
O	71600	71603	the
O	71604	71609	class
O	71609	71610	'
O	71610	71611	s
O	71612	71615	API
O	71615	71616	,
O	71617	71619	as
O	71620	71623	far
O	71624	71626	as
O	71627	71630	the
O	71631	71639	compiler
O	71640	71642	is
O	71643	71652	concerned
O	71652	71653	.

O	71654	71656	An
O	71657	71664	example
O	71664	71665	:
O	71666	71667	#
O	71667	71670	pre
O	71671	71675	Here
O	71675	71676	,
O	71677	71681	XFOO
O	71682	71684	is
O	71685	71686	a
O	71687	71688	"
O	71688	71696	constant
O	71697	71705	variable
O	71705	71706	"
O	71707	71710	and
O	71711	71715	YFOO
O	71716	71718	is
O	71719	71722	not
O	71722	71723	,
O	71724	71727	but
O	71728	71732	they
O	71733	71736	are
O	71737	71746	otherwise
O	71747	71757	equivalent
O	71757	71758	.

O	71759	71764	Class
O	71765	71766	Z
O	71767	71773	prints
O	71774	71777	out
O	71778	71782	each
O	71783	71785	of
O	71786	71790	them
O	71790	71791	.

O	71792	71799	Compile
O	71800	71805	those
O	71806	71813	classes
O	71813	71814	,
O	71815	71819	then
O	71820	71831	disassemble
O	71832	71836	them
O	71837	71841	with
O	71842	71847	javap
O	71848	71849	-
O	71849	71850	v
O	71851	71852	X
O	71853	71854	Y
O	71855	71856	Z
O	71857	71858	,
O	71859	71862	and
O	71863	71867	here
O	71868	71870	is
O	71871	71874	the
O	71875	71881	output
O	71881	71882	:
O	71883	71888	Class
O	71889	71890	X
O	71890	71891	:
O	71892	71893	#
O	71893	71896	pre
O	71897	71902	Class
O	71903	71904	Y
O	71904	71905	:
O	71906	71907	#
O	71907	71910	pre
O	71911	71916	Class
O	71917	71918	Z
O	71918	71919	:
O	71920	71921	#
O	71921	71924	pre
O	71925	71931	Things
O	71932	71934	to
O	71935	71941	notice
O	71942	71944	in
O	71945	71948	the
O	71949	71960	disassembly
O	71960	71961	,
O	71962	71967	which
O	71968	71972	tell
O	71973	71976	you
O	71977	71980	the
O	71981	71992	differences
O	71993	72000	between
O	72001	72002	X
O	72003	72006	and
O	72007	72008	Y
O	72009	72012	run
O	72013	72019	deeper
O	72020	72024	than
O	72025	72034	syntactic
O	72035	72040	sugar
O	72040	72041	:
O	72042	72043	#
O	72043	72045	li
O	72046	72050	XFOO
O	72051	72054	has
O	72055	72056	a
O	72057	72070	ConstantValue
O	72071	72080	attribute
O	72080	72081	,
O	72082	72092	signifying
O	72093	72097	that
O	72098	72101	its
O	72102	72107	value
O	72108	72110	is
O	72111	72112	a
O	72113	72120	compile
O	72120	72121	-
O	72121	72125	time
O	72126	72134	constant
O	72134	72135	.

O	72136	72143	Whereas
O	72144	72148	YFOO
O	72149	72153	does
O	72154	72157	not
O	72157	72158	,
O	72159	72162	and
O	72163	72167	uses
O	72168	72169	a
O	72170	72176	static
O	72177	72182	block
O	72183	72187	with
O	72188	72189	a
O	72190	72199	putstatic
O	72200	72211	instruction
O	72212	72214	to
O	72215	72225	initialize
O	72226	72229	the
O	72230	72235	value
O	72236	72238	at
O	72239	72246	runtime
O	72246	72247	.

O	72248	72249	#
O	72249	72251	li
O	72252	72255	The
B-api_mention	72256	72262	String
O	72263	72271	constant
O	72272	72285	StringLiteral
O	72286	72289	has
O	72290	72296	become
O	72297	72301	part
O	72302	72304	of
O	72305	72310	class
O	72311	72312	Z
O	72313	72314	'
O	72314	72315	s
O	72316	72324	constant
O	72325	72329	pool
O	72330	72331	,
O	72332	72335	but
O	72336	72349	StringLiteral
O	72350	72353	has
O	72354	72357	not
O	72357	72358	.

O	72359	72360	#
O	72360	72362	li
O	72363	72364	Z
O	72364	72365	.
O	72365	72369	main
O	72370	72374	uses
O	72375	72378	the
O	72379	72382	ldc
O	72383	72384	(
O	72384	72388	load
O	72389	72397	constant
O	72397	72398	)
O	72399	72410	instruction
O	72411	72413	to
O	72414	72418	load
O	72419	72432	StringLiteral
O	72433	72437	onto
O	72438	72441	the
O	72442	72447	stack
O	72448	72456	directly
O	72457	72461	from
O	72462	72465	its
O	72466	72469	own
O	72470	72478	constant
O	72479	72483	pool
O	72483	72484	,
O	72485	72488	but
O	72489	72491	it
O	72492	72496	uses
O	72497	72498	a
O	72499	72508	getstatic
O	72509	72520	instruction
O	72521	72523	to
O	72524	72528	load
O	72529	72532	the
O	72533	72538	value
O	72539	72541	of
O	72542	72543	Y
O	72543	72544	.
O	72544	72548	YFOO
O	72549	72550	.

O	72551	72556	Other
O	72557	72568	differences
O	72569	72572	you
O	72573	72577	will
O	72578	72582	find
O	72582	72583	:
O	72584	72585	#
O	72585	72587	li
O	72588	72590	If
O	72591	72594	you
O	72595	72601	change
O	72602	72605	the
O	72606	72611	value
O	72612	72614	of
O	72615	72619	XFOO
O	72620	72623	and
O	72624	72633	recompile
O	72634	72635	X
O	72635	72636	.
O	72636	72640	java
O	72641	72644	but
O	72645	72648	not
O	72649	72650	Z
O	72650	72651	.
O	72651	72655	java
O	72656	72657	,
O	72658	72661	you
O	72662	72666	have
O	72667	72668	a
O	72669	72676	problem
O	72676	72677	:
O	72678	72683	class
O	72684	72685	Z
O	72686	72688	is
O	72689	72694	still
O	72695	72700	using
O	72701	72704	the
O	72705	72708	old
O	72709	72714	value
O	72714	72715	.

O	72716	72718	If
O	72719	72722	you
O	72723	72729	change
O	72730	72733	the
O	72734	72739	value
O	72740	72742	of
O	72743	72747	YFOO
O	72748	72751	and
O	72752	72761	recompile
O	72762	72763	Y
O	72763	72764	.
O	72764	72768	java
O	72769	72770	,
O	72771	72776	class
O	72777	72778	Z
O	72779	72783	uses
O	72784	72787	the
O	72788	72791	new
O	72792	72797	value
O	72798	72805	whether
O	72806	72809	you
O	72810	72819	recompile
O	72820	72821	Z
O	72821	72822	.
O	72822	72826	java
O	72827	72829	or
O	72830	72833	not
O	72833	72834	.

O	72835	72836	#
O	72836	72838	li
O	72839	72841	If
O	72842	72845	you
O	72846	72852	delete
O	72853	72856	the
O	72857	72858	X
O	72858	72859	.
O	72859	72864	class
O	72865	72869	file
O	72870	72878	entirely
O	72878	72879	,
O	72880	72885	class
O	72886	72887	Z
O	72888	72893	still
O	72894	72898	runs
O	72899	72908	correctly
O	72908	72909	.

O	72910	72911	Z
O	72912	72915	has
O	72916	72918	no
O	72919	72926	runtime
O	72927	72937	dependency
O	72938	72940	on
O	72941	72942	X
O	72943	72944	.

O	72945	72952	Whereas
O	72953	72955	if
O	72956	72959	you
O	72960	72966	delete
O	72967	72970	the
O	72971	72972	Y
O	72972	72973	.
O	72973	72978	class
O	72979	72983	file
O	72983	72984	,
O	72985	72990	class
O	72991	72992	Z
O	72993	72998	fails
O	72999	73001	to
O	73002	73012	initialize
O	73013	73017	with
O	73018	73019	a
B-api_mention	73020	73042	ClassNotFoundException
O	73042	73043	:
O	73044	73045	Y
O	73046	73047	.

O	73048	73049	#
O	73049	73051	li
O	73052	73054	If
O	73055	73058	you
O	73059	73067	generate
O	73068	73081	documentation
O	73082	73085	for
O	73086	73089	the
O	73090	73097	classes
O	73098	73102	with
O	73103	73110	javadoc
O	73110	73111	,
O	73112	73115	the
O	73116	73117	"
O	73117	73125	Constant
O	73126	73131	Field
O	73132	73138	Values
O	73138	73139	"
O	73140	73144	page
O	73145	73149	will
O	73150	73158	document
O	73159	73162	the
O	73163	73168	value
O	73169	73171	of
O	73172	73176	XFOO
O	73177	73178	,
O	73179	73182	but
O	73183	73186	not
O	73187	73190	the
O	73191	73196	value
O	73197	73199	of
O	73200	73204	YFOO
O	73205	73206	.

O	73207	73210	The
O	73211	73214	JLS
O	73215	73224	describes
O	73225	73228	the
O	73229	73234	above
O	73235	73242	effects
O	73243	73251	constant
O	73252	73261	variables
O	73262	73266	have
O	73267	73269	on
O	73270	73278	compiled
O	73279	73284	class
O	73285	73290	files
O	73291	73293	in
O	73294	73295	§
O	73295	73297	13
O	73297	73298	.
O	73298	73299	1
O	73299	73300	.
O	73300	73301	3
O	73302	73303	:
O	73304	73305	#
O	73305	73315	blockquote
O	73316	73319	And
O	73320	73322	in
O	73323	73324	§
O	73324	73326	13
O	73326	73327	.
O	73327	73328	4
O	73328	73329	.
O	73329	73330	9
O	73331	73332	:
O	73333	73334	#
O	73334	73344	blockquote
O	73345	73348	The
O	73349	73355	upshot
O	73356	73358	is
O	73359	73363	that
O	73364	73366	if
O	73367	73371	your
O	73372	73378	public
O	73379	73386	library
O	73387	73394	exposes
O	73395	73398	any
O	73399	73407	constant
O	73408	73417	variables
O	73417	73418	,
O	73419	73422	you
O	73423	73427	must
O	73428	73433	never
O	73434	73440	change
O	73441	73446	their
O	73447	73453	values
O	73454	73456	if
O	73457	73461	your
O	73462	73465	new
O	73466	73473	library
O	73474	73481	version
O	73482	73484	is
O	73485	73494	otherwise
O	73495	73503	supposed
O	73504	73506	to
O	73507	73509	be
O	73510	73520	compatible
O	73521	73525	with
O	73526	73530	code
O	73531	73539	compiled
O	73540	73547	against
O	73548	73551	old
O	73552	73560	versions
O	73561	73563	of
O	73564	73567	the
O	73568	73575	library
O	73575	73576	.

O	73577	73579	It
O	73580	73583	won
O	73583	73584	'
O	73584	73585	t
O	73586	73597	necessarily
O	73598	73603	cause
O	73604	73606	an
O	73607	73612	error
O	73612	73613	,
O	73614	73617	but
O	73618	73621	the
O	73622	73630	existing
O	73631	73635	code
O	73636	73640	will
O	73641	73649	probably
O	73650	73661	malfunction
O	73662	73667	since
O	73668	73670	it
O	73671	73675	will
O	73676	73680	have
O	73681	73689	outdated
O	73690	73695	ideas
O	73696	73701	about
O	73702	73705	the
O	73706	73712	values
O	73713	73715	of
O	73716	73725	constants
O	73725	73726	.

O	73727	73728	(
O	73728	73730	If
O	73731	73735	your
O	73736	73739	new
O	73740	73747	library
O	73748	73755	version
O	73756	73761	needs
O	73762	73765	for
O	73766	73773	classes
O	73774	73779	which
O	73780	73783	use
O	73784	73786	it
O	73787	73789	to
O	73790	73792	be
O	73793	73803	recompiled
O	73804	73810	anyway
O	73810	73811	,
O	73812	73816	then
O	73817	73825	changing
O	73826	73835	constants
O	73836	73841	doesn
O	73841	73842	'
O	73842	73843	t
O	73844	73849	cause
O	73850	73854	this
O	73855	73862	problem
O	73862	73863	.
O	73863	73864	)
O	73865	73869	Thus
O	73869	73870	,
O	73871	73883	initializing
O	73884	73885	a
O	73886	73894	constant
O	73895	73899	with
O	73900	73901	a
O	73902	73907	block
O	73908	73913	gives
O	73914	73917	you
O	73918	73922	more
O	73923	73930	freedom
O	73931	73933	to
O	73934	73940	change
O	73941	73944	its
O	73945	73950	value
O	73950	73951	,
O	73952	73959	because
O	73960	73962	it
O	73963	73971	prevents
O	73972	73975	the
O	73976	73984	compiler
O	73985	73994	embedding
O	73995	73998	the
O	73999	74004	value
O	74005	74009	into
O	74010	74015	other
O	74016	74023	classes
O	74023	74024	.

O	74026	74034	Question
O	74034	74035	-
O	74035	74043	29262002
O	74043	74044	,
O	74045	74051	answer
O	74051	74052	-
O	74052	74060	29262126

O	74061	74064	The
O	74065	74068	JLS
O	74069	74076	specify
O	74077	74081	that
O	74082	74083	#
O	74083	74093	blockquote
O	74094	74097	Now
O	74098	74101	let
O	74101	74102	'
O	74102	74103	s
O	74104	74107	see
O	74108	74112	that
O	74113	74115	in
O	74116	74122	detail
O	74122	74123	,
O	74124	74129	Since
O	74130	74134	your
O	74135	74149	takeBiConsumer
O	74150	74156	method
O	74157	74159	is
O	74160	74162	of
O	74163	74167	void
O	74168	74172	type
O	74172	74173	,
O	74174	74177	the
O	74178	74184	lambda
O	74185	74194	receiving
O	74195	74198	new
B-api_mention	74199	74205	String
I-api_mention	74205	74206	(
I-api_mention	74206	74210	args
I-api_mention	74210	74211	)
O	74212	74216	will
O	74217	74226	interpret
O	74227	74229	it
O	74230	74232	as
O	74233	74234	a
O	74235	74240	block
O	74241	74245	like
O	74246	74247	#
O	74247	74250	pre
O	74251	74256	which
O	74257	74259	is
O	74260	74265	valid
O	74266	74268	in
O	74269	74270	a
O	74271	74275	void
O	74275	74276	,
O	74277	74282	hence
O	74283	74286	the
O	74287	74292	first
O	74293	74297	case
O	74298	74305	compile
O	74305	74306	.

O	74307	74314	However
O	74314	74315	,
O	74316	74318	in
O	74319	74322	the
O	74323	74327	case
O	74328	74333	where
O	74334	74337	the
O	74338	74344	lambda
O	74345	74347	is
O	74348	74349	-
O	74349	74350	>
O	74351	74364	StringLiteral
O	74365	74366	,
O	74367	74368	a
O	74369	74374	block
O	74375	74379	such
O	74380	74382	as
O	74383	74384	#
O	74384	74387	pre
O	74388	74390	is
O	74391	74394	not
O	74395	74400	valid
O	74401	74407	syntax
O	74408	74410	in
O	74411	74415	java
O	74415	74416	.

O	74417	74426	Therefore
O	74427	74430	the
O	74431	74435	only
O	74436	74441	thing
O	74442	74444	to
O	74445	74447	do
O	74448	74452	with
O	74453	74454	"
O	74454	74456	hi
O	74456	74457	"
O	74458	74460	is
O	74461	74463	to
O	74464	74467	try
O	74468	74471	and
O	74472	74478	return
O	74479	74481	it
O	74481	74482	.

O	74483	74484	#
O	74484	74487	pre
O	74488	74493	which
O	74494	74496	is
O	74497	74500	not
O	74501	74506	valid
O	74507	74509	in
O	74510	74511	a
O	74512	74516	void
O	74517	74520	and
O	74521	74528	explain
O	74529	74532	the
O	74533	74538	error
O	74539	74546	message
O	74547	74548	#
O	74548	74551	pre
O	74552	74555	For
O	74556	74557	a
O	74558	74564	better
O	74565	74578	understanding
O	74578	74579	,
O	74580	74584	note
O	74585	74589	that
O	74590	74592	if
O	74593	74596	you
O	74597	74603	change
O	74604	74607	the
O	74608	74612	type
O	74613	74615	of
O	74616	74630	takeBiConsumer
O	74631	74633	to
O	74634	74635	a
B-api_mention	74636	74642	String
O	74642	74643	,
O	74644	74645	-
O	74645	74646	>
O	74647	74660	StringLiteral
O	74661	74665	will
O	74666	74668	be
O	74669	74674	valid
O	74675	74677	as
O	74678	74680	it
O	74681	74685	will
O	74686	74692	simply
O	74693	74696	try
O	74697	74699	to
O	74700	74708	directly
O	74709	74715	return
O	74716	74719	the
O	74720	74726	string
O	74726	74727	.

O	74728	74732	Note
O	74733	74737	that
O	74738	74740	at
O	74741	74746	first
O	74747	74748	I
O	74749	74755	tought
O	74756	74759	the
O	74760	74765	error
O	74766	74769	was
O	74770	74776	caused
O	74777	74779	by
O	74780	74783	the
O	74784	74790	lambda
O	74791	74796	being
O	74797	74799	in
O	74800	74801	a
O	74802	74807	wrong
O	74808	74818	invocation
O	74819	74826	context
O	74826	74827	,
O	74828	74830	so
O	74831	74832	I
O	74832	74833	'
O	74833	74835	ll
O	74836	74841	share
O	74842	74846	this
O	74847	74858	possibility
O	74859	74863	with
O	74864	74867	the
O	74868	74877	community
O	74878	74879	:
O	74880	74883	JLS
O	74884	74886	15
O	74886	74887	.
O	74887	74889	27
O	74890	74891	#
O	74891	74901	blockquote
O	74902	74909	However
O	74910	74912	in
O	74913	74916	our
O	74917	74921	case
O	74921	74922	,
O	74923	74925	we
O	74926	74929	are
O	74930	74932	in
O	74933	74935	an
O	74936	74946	invocation
O	74947	74954	context
O	74955	74960	which
O	74961	74963	is
O	74964	74971	correct
O	74971	74972	.

O	74974	74982	Question
O	74982	74983	-
O	74983	74991	29262002
O	74991	74992	,
O	74993	74999	answer
O	74999	75000	-
O	75000	75008	29262511

O	75009	75012	The
O	75013	75018	first
O	75019	75023	case
O	75024	75026	is
O	75027	75029	ok
O	75030	75037	because
O	75038	75041	you
O	75042	75045	are
O	75046	75054	invoking
O	75055	75056	a
O	75057	75058	"
O	75058	75065	special
O	75065	75066	"
O	75067	75073	method
O	75074	75075	(
O	75075	75076	a
O	75077	75088	constructor
O	75088	75089	)
O	75090	75093	and
O	75094	75097	you
O	75098	75101	are
O	75102	75104	no
O	75105	75113	actually
O	75114	75120	taking
O	75121	75124	the
O	75125	75132	created
O	75133	75139	object
O	75139	75140	.

O	75141	75145	Just
O	75146	75148	to
O	75149	75153	make
O	75154	75156	it
O	75157	75161	more
O	75162	75167	clear
O	75167	75168	,
O	75169	75170	I
O	75170	75171	'
O	75171	75173	ll
O	75174	75177	put
O	75178	75181	the
O	75182	75190	optional
O	75191	75197	braces
O	75198	75200	in
O	75201	75205	your
O	75206	75213	lambdas
O	75213	75214	:
O	75215	75216	#
O	75216	75219	pre
O	75220	75223	And
O	75224	75228	more
O	75229	75234	clear
O	75234	75235	,
O	75236	75237	I
O	75237	75238	'
O	75238	75240	ll
O	75241	75250	translate
O	75251	75255	that
O	75256	75258	to
O	75259	75262	the
O	75263	75268	older
O	75269	75277	notation
O	75277	75278	:
O	75279	75280	#
O	75280	75283	pre
O	75284	75286	In
O	75287	75290	the
O	75291	75296	first
O	75297	75301	case
O	75302	75305	you
O	75306	75309	are
O	75310	75319	executing
O	75320	75321	a
O	75322	75333	constructor
O	75333	75334	,
O	75335	75338	but
O	75339	75342	you
O	75343	75346	are
O	75347	75350	NOT
O	75351	75360	returning
O	75361	75364	the
O	75365	75372	created
O	75373	75379	object
O	75379	75380	,
O	75381	75383	in
O	75384	75387	the
O	75388	75394	second
O	75395	75399	case
O	75400	75403	you
O	75404	75407	are
O	75408	75418	attempting
O	75419	75421	to
O	75422	75428	return
O	75429	75430	a
B-api_mention	75431	75437	String
O	75438	75443	value
O	75443	75444	,
O	75445	75448	but
O	75449	75453	your
O	75454	75460	method
O	75461	75463	in
O	75464	75468	your
O	75469	75478	interface
O	75479	75489	BiConsumer
O	75490	75497	returns
O	75498	75502	void
O	75502	75503	,
O	75504	75509	hence
O	75510	75513	the
O	75514	75522	compiler
O	75523	75528	error
O	75528	75529	.

O	75531	75539	Question
O	75539	75540	-
O	75540	75548	29262002
O	75548	75549	,
O	75550	75556	answer
O	75556	75557	-
O	75557	75565	29262520

O	75566	75573	Basicly
O	75573	75574	,
O	75575	75578	new
B-api_mention	75579	75585	String
I-api_mention	75585	75586	(
I-api_mention	75586	75590	args
I-api_mention	75590	75591	)
O	75592	75594	is
O	75595	75597	an
O	75598	75608	executable
O	75609	75614	piece
O	75615	75617	of
O	75618	75622	code
O	75623	75627	that
O	75628	75636	actually
O	75637	75641	does
O	75642	75651	something
O	75652	75653	(
O	75653	75655	it
O	75656	75663	creates
O	75664	75665	a
O	75666	75669	new
B-api_mention	75670	75676	String
O	75677	75680	and
O	75681	75685	then
O	75686	75693	returns
O	75694	75696	it
O	75696	75697	)
O	75697	75698	.

O	75699	75702	The
O	75703	75711	returned
O	75712	75717	value
O	75718	75721	can
O	75722	75724	be
O	75725	75732	ignored
O	75733	75736	and
O	75737	75740	new
B-api_mention	75741	75747	String
I-api_mention	75747	75748	(
I-api_mention	75748	75752	args
I-api_mention	75752	75753	)
O	75754	75757	can
O	75758	75763	still
O	75764	75766	be
O	75767	75771	used
O	75772	75774	in
O	75775	75779	void
O	75779	75780	-
O	75780	75786	return
O	75787	75793	lambda
O	75794	75796	to
O	75797	75803	create
O	75804	75805	a
O	75806	75809	new
B-api_mention	75810	75816	String
O	75816	75817	.

O	75818	75825	However
O	75825	75826	,
O	75827	75840	StringLiteral
O	75841	75843	is
O	75844	75848	just
O	75849	75850	a
O	75851	75859	constant
O	75860	75864	that
O	75865	75870	doesn
O	75870	75871	'
O	75871	75872	t
O	75873	75875	do
O	75876	75884	anything
O	75885	75887	on
O	75888	75890	it
O	75890	75891	'
O	75891	75892	s
O	75893	75896	own
O	75896	75897	.

O	75898	75901	The
O	75902	75906	only
O	75907	75917	reasonable
O	75918	75923	thing
O	75924	75926	to
O	75927	75929	do
O	75930	75934	with
O	75935	75937	it
O	75938	75940	in
O	75941	75947	lambda
O	75948	75952	body
O	75953	75955	is
O	75956	75958	to
O	75959	75965	return
O	75966	75968	it
O	75968	75969	.

O	75970	75973	But
O	75974	75977	the
O	75978	75984	lambda
O	75985	75991	method
O	75992	75997	would
O	75998	76002	have
O	76003	76005	to
O	76006	76010	have
O	76011	76017	return
O	76018	76022	type
B-api_mention	76023	76029	String
O	76030	76032	or
B-api_mention	76033	76039	Object
O	76040	76041	,
O	76042	76045	but
O	76046	76048	it
O	76049	76056	returns
O	76057	76061	void
O	76062	76063	,
O	76064	76069	hence
O	76070	76073	the
B-api_mention	76074	76080	String
O	76081	76087	cannot
O	76088	76090	be
O	76091	76097	casted
O	76098	76100	to
O	76101	76105	void
O	76106	76111	error
O	76111	76112	.

O	76114	76122	Question
O	76122	76123	-
O	76123	76131	28681737
O	76131	76132	,
O	76133	76139	answer
O	76139	76140	-
O	76140	76148	28684917

O	76149	76152	The
O	76153	76158	short
O	76159	76165	answer
O	76166	76168	is
O	76168	76169	:
O	76170	76172	it
O	76172	76173	'
O	76173	76174	s
O	76175	76179	safe
O	76180	76182	if
O	76183	76186	you
O	76187	76190	use
O	76191	76195	them
O	76196	76202	safely
O	76203	76204	:
O	76204	76205	)
O	76206	76209	The
O	76210	76216	snarky
O	76217	76223	answer
O	76223	76224	:
O	76225	76229	tell
O	76230	76232	me
O	76233	76237	what
O	76238	76241	you
O	76242	76246	mean
O	76247	76249	by
O	76250	76256	traits
O	76256	76257	,
O	76258	76261	and
O	76262	76267	maybe
O	76268	76269	I
O	76269	76270	'
O	76270	76272	ll
O	76273	76277	give
O	76278	76281	you
O	76282	76283	a
O	76284	76290	better
O	76291	76297	answer
O	76298	76299	:
O	76299	76300	)
O	76301	76303	In
O	76304	76307	all
O	76308	76319	seriousness
O	76319	76320	,
O	76321	76324	the
O	76325	76329	term
O	76330	76331	"
O	76331	76336	trait
O	76336	76337	"
O	76338	76340	is
O	76341	76344	not
O	76345	76349	well
O	76349	76350	-
O	76350	76357	defined
O	76357	76358	.

O	76359	76363	Many
O	76364	76368	Java
O	76369	76379	developers
O	76380	76383	are
O	76384	76388	most
O	76389	76397	familiar
O	76398	76402	with
O	76403	76409	traits
O	76410	76412	as
O	76413	76417	they
O	76418	76421	are
O	76422	76431	expressed
O	76432	76434	in
O	76435	76440	Scala
O	76440	76441	,
O	76442	76445	but
O	76446	76451	Scala
O	76452	76454	is
O	76455	76458	far
O	76459	76463	from
O	76464	76467	the
O	76468	76473	first
O	76474	76482	language
O	76483	76485	to
O	76486	76490	have
O	76491	76497	traits
O	76497	76498	,
O	76499	76505	either
O	76506	76508	in
O	76509	76513	name
O	76514	76516	or
O	76517	76519	in
O	76520	76526	effect
O	76526	76527	.

O	76528	76531	For
O	76532	76539	example
O	76539	76540	,
O	76541	76543	in
O	76544	76549	Scala
O	76549	76550	,
O	76551	76557	traits
O	76558	76561	are
O	76562	76570	stateful
O	76571	76572	(
O	76572	76575	can
O	76576	76580	have
O	76581	76584	var
O	76585	76594	variables
O	76594	76595	)
O	76595	76596	;
O	76597	76599	in
O	76600	76608	Fortress
O	76609	76613	they
O	76614	76617	are
O	76618	76622	pure
O	76623	76631	behavior
O	76631	76632	.

O	76633	76637	Java
O	76637	76638	'
O	76638	76639	s
O	76640	76650	interfaces
O	76651	76655	with
O	76656	76663	default
O	76664	76671	methods
O	76672	76675	are
O	76676	76685	stateless
O	76685	76686	;
O	76687	76691	does
O	76692	76696	this
O	76697	76701	mean
O	76702	76706	they
O	76707	76710	are
O	76711	76714	not
O	76715	76721	traits
O	76721	76722	?

O	76723	76724	(
O	76724	76728	Hint
O	76728	76729	:
O	76730	76734	that
O	76735	76738	was
O	76739	76740	a
O	76741	76746	trick
O	76747	76755	question
O	76755	76756	.
O	76756	76757	)
O	76758	76763	Again
O	76763	76764	,
O	76765	76767	in
O	76768	76773	Scala
O	76773	76774	,
O	76775	76781	traits
O	76782	76785	are
O	76786	76794	composed
O	76795	76802	through
O	76803	76816	linearization
O	76816	76817	;
O	76818	76820	if
O	76821	76826	class
O	76827	76828	A
O	76829	76836	extends
O	76837	76843	traits
O	76844	76845	X
O	76846	76849	and
O	76850	76851	Y
O	76852	76853	,
O	76854	76858	then
O	76859	76862	the
O	76863	76868	order
O	76869	76871	in
O	76872	76877	which
O	76878	76879	X
O	76880	76883	and
O	76884	76885	Y
O	76886	76889	are
O	76890	76895	mixed
O	76896	76898	in
O	76899	76909	determines
O	76910	76913	how
O	76914	76923	conflicts
O	76924	76931	between
O	76932	76933	X
O	76934	76937	and
O	76938	76939	Y
O	76940	76943	are
O	76944	76952	resolved
O	76952	76953	.

O	76954	76956	In
O	76957	76961	Java
O	76961	76962	,
O	76963	76967	this
O	76968	76981	linearization
O	76982	76991	mechanism
O	76992	76994	is
O	76995	76998	not
O	76999	77006	present
O	77007	77008	(
O	77008	77010	it
O	77011	77014	was
O	77015	77023	rejected
O	77023	77024	,
O	77025	77027	in
O	77028	77032	part
O	77032	77033	,
O	77034	77041	because
O	77042	77044	it
O	77045	77048	was
O	77049	77052	too
O	77053	77054	"
O	77054	77056	un
O	77056	77057	-
O	77057	77061	Java
O	77061	77062	-
O	77062	77066	like
O	77066	77067	"
O	77067	77068	.
O	77068	77069	)
O	77070	77073	The
O	77074	77083	proximate
O	77084	77090	reason
O	77091	77094	for
O	77095	77101	adding
O	77102	77109	default
O	77110	77117	methods
O	77118	77120	to
O	77121	77131	interfaces
O	77132	77135	was
O	77136	77138	to
O	77139	77146	support
O	77147	77156	interface
O	77157	77166	evolution
O	77167	77168	,
O	77169	77172	but
O	77173	77175	we
O	77176	77180	were
O	77181	77185	well
O	77186	77191	aware
O	77192	77196	that
O	77197	77199	we
O	77200	77204	were
O	77205	77210	going
O	77211	77217	beyond
O	77218	77222	that
O	77222	77223	.

O	77224	77231	Whether
O	77232	77235	you
O	77236	77244	consider
O	77245	77249	that
O	77250	77252	to
O	77253	77255	be
O	77256	77257	"
O	77257	77266	interface
O	77267	77276	evolution
O	77276	77277	+
O	77277	77278	+
O	77278	77279	"
O	77280	77282	or
O	77283	77284	"
O	77284	77290	traits
O	77290	77291	-
O	77291	77292	-
O	77292	77293	"
O	77294	77296	is
O	77297	77298	a
O	77299	77305	matter
O	77306	77308	of
O	77309	77317	personal
O	77318	77332	interpretation
O	77332	77333	.

O	77334	77336	So
O	77336	77337	,
O	77338	77340	to
O	77341	77347	answer
O	77348	77352	your
O	77353	77361	question
O	77362	77367	about
O	77368	77374	safety
O	77375	77376	.
O	77376	77377	.
O	77377	77378	.

O	77379	77381	so
O	77382	77386	long
O	77387	77389	as
O	77390	77393	you
O	77394	77399	stick
O	77400	77402	to
O	77403	77407	what
O	77408	77411	the
O	77412	77421	mechanism
O	77422	77430	actually
O	77431	77439	supports
O	77439	77440	,
O	77441	77447	rather
O	77448	77452	than
O	77453	77459	trying
O	77460	77462	to
O	77463	77472	wishfully
O	77473	77480	stretch
O	77481	77483	it
O	77484	77486	to
O	77487	77496	something
O	77497	77499	it
O	77500	77504	does
O	77505	77508	not
O	77509	77516	support
O	77516	77517	,
O	77518	77521	you
O	77522	77528	should
O	77529	77531	be
O	77532	77536	fine
O	77536	77537	.

O	77538	77539	A
O	77540	77543	key
O	77544	77550	design
O	77551	77555	goal
O	77556	77559	was
O	77560	77564	that
O	77564	77565	,
O	77566	77570	from
O	77571	77574	the
O	77575	77586	perspective
O	77587	77589	of
O	77590	77593	the
O	77594	77600	client
O	77601	77603	of
O	77604	77606	an
O	77607	77616	interface
O	77616	77617	,
O	77618	77625	default
O	77626	77633	methods
O	77634	77640	should
O	77641	77643	be
O	77644	77661	indistinguishable
O	77662	77666	from
O	77667	77668	"
O	77668	77675	regular
O	77675	77676	"
O	77677	77686	interface
O	77687	77694	methods
O	77694	77695	.

O	77696	77699	The
O	77700	77707	default
O	77707	77708	-
O	77708	77712	ness
O	77713	77715	of
O	77716	77717	a
O	77718	77724	method
O	77724	77725	,
O	77726	77735	therefore
O	77735	77736	,
O	77737	77739	is
O	77740	77744	only
O	77745	77756	interesting
O	77757	77759	to
O	77760	77763	the
O	77764	77772	designer
O	77773	77776	and
O	77777	77788	implementor
O	77789	77791	of
O	77792	77795	the
O	77796	77805	interface
O	77805	77806	.

O	77807	77811	Here
O	77812	77815	are
O	77816	77820	some
O	77821	77824	use
O	77825	77830	cases
O	77831	77835	that
O	77836	77839	are
O	77840	77844	well
O	77845	77851	within
O	77852	77855	the
O	77856	77862	design
O	77863	77868	goals
O	77868	77869	:
O	77870	77871	#
O	77871	77873	li
O	77874	77883	Interface
O	77884	77893	evolution
O	77893	77894	.

O	77895	77899	Here
O	77899	77900	,
O	77901	77903	we
O	77904	77907	are
O	77908	77914	adding
O	77915	77916	a
O	77917	77920	new
O	77921	77927	method
O	77928	77930	to
O	77931	77933	an
O	77934	77942	existing
O	77943	77952	interface
O	77952	77953	,
O	77954	77959	which
O	77960	77963	has
O	77964	77965	a
O	77966	77974	sensible
O	77975	77982	default
O	77983	77997	implementation
O	77998	78000	in
O	78001	78006	terms
O	78007	78009	of
O	78010	78018	existing
O	78019	78026	methods
O	78027	78029	on
O	78030	78034	that
O	78035	78044	interface
O	78044	78045	.

O	78046	78048	An
O	78049	78056	example
O	78057	78062	would
O	78063	78065	be
O	78066	78072	adding
O	78073	78076	the
B-api_mention	78077	78084	forEach
O	78085	78091	method
O	78092	78094	to
B-api_mention	78095	78105	Collection
O	78106	78107	,
O	78108	78113	where
O	78114	78117	the
O	78118	78125	default
O	78126	78140	implementation
O	78141	78143	is
O	78144	78151	written
O	78152	78154	in
O	78155	78160	terms
O	78161	78163	of
O	78164	78167	the
B-api_mention	78168	78176	iterator
I-api_mention	78176	78177	(
I-api_mention	78177	78181	args
I-api_mention	78181	78182	)
O	78183	78189	method
O	78189	78190	.

O	78191	78192	#
O	78192	78194	li
O	78195	78196	"
O	78196	78204	Optional
O	78204	78205	"
O	78206	78213	methods
O	78213	78214	.

O	78215	78219	Here
O	78219	78220	,
O	78221	78224	the
O	78225	78233	designer
O	78234	78236	of
O	78237	78239	an
O	78240	78249	interface
O	78250	78252	is
O	78253	78259	saying
O	78260	78261	"
O	78261	78273	Implementors
O	78274	78278	need
O	78279	78282	not
O	78283	78292	implement
O	78293	78297	this
O	78298	78304	method
O	78305	78307	if
O	78308	78312	they
O	78313	78316	are
O	78317	78324	willing
O	78325	78327	to
O	78328	78332	live
O	78333	78337	with
O	78338	78341	the
O	78342	78353	limitations
O	78354	78356	in
O	78357	78370	functionality
O	78371	78375	that
O	78376	78383	entails
O	78383	78384	"
O	78384	78385	.

O	78386	78389	For
O	78390	78397	example
O	78397	78398	,
B-api_mention	78399	78407	Iterator
I-api_mention	78407	78408	.
I-api_mention	78408	78414	remove
O	78415	78418	was
O	78419	78424	given
O	78425	78426	a
O	78427	78434	default
O	78435	78440	which
O	78441	78447	throws
B-api_mention	78448	78477	UnsupportedOperationException
O	78478	78479	;
O	78480	78485	since
O	78486	78489	the
O	78490	78494	vast
O	78495	78503	majority
O	78504	78506	of
O	78507	78522	implementations
O	78523	78525	of
O	78526	78534	Iterator
O	78535	78539	have
O	78540	78544	this
O	78545	78553	behavior
O	78554	78560	anyway
O	78560	78561	,
O	78562	78565	the
O	78566	78573	default
O	78574	78579	makes
O	78580	78584	this
O	78585	78591	method
O	78592	78603	essentially
O	78604	78612	optional
O	78612	78613	.

O	78614	78615	(
O	78615	78617	If
O	78618	78621	the
O	78622	78630	behavior
O	78631	78635	from
B-api_mention	78636	78654	AbstractCollection
O	78655	78659	were
O	78660	78669	expressed
O	78670	78672	as
O	78673	78681	defaults
O	78682	78684	on
B-api_mention	78685	78695	Collection
O	78696	78697	,
O	78698	78700	we
O	78701	78706	might
O	78707	78709	do
O	78710	78713	the
O	78714	78718	same
O	78719	78722	for
O	78723	78726	the
O	78727	78735	mutative
O	78736	78743	methods
O	78743	78744	.
O	78744	78745	)
O	78746	78747	#
O	78747	78749	li
O	78750	78761	Convenience
O	78762	78769	methods
O	78769	78770	.

O	78771	78776	These
O	78777	78780	are
O	78781	78788	methods
O	78789	78793	that
O	78794	78797	are
O	78798	78806	strictly
O	78807	78810	for
O	78811	78822	convenience
O	78822	78823	,
O	78824	78829	again
O	78830	78839	generally
O	78840	78851	implemented
O	78852	78854	in
O	78855	78860	terms
O	78861	78863	of
O	78864	78867	non
O	78867	78868	-
O	78868	78875	default
O	78876	78883	methods
O	78884	78886	on
O	78887	78890	the
O	78891	78896	class
O	78896	78897	.

O	78898	78901	The
B-api_mention	78902	78908	logger
I-api_mention	78908	78909	(
I-api_mention	78909	78913	args
I-api_mention	78913	78914	)
O	78915	78921	method
O	78922	78924	in
O	78925	78929	your
O	78930	78935	first
O	78936	78943	example
O	78944	78946	is
O	78947	78948	a
O	78949	78959	reasonable
O	78960	78972	illustration
O	78973	78975	of
O	78976	78980	this
O	78980	78981	.

O	78982	78983	#
O	78983	78985	li
O	78986	78997	Combinators
O	78997	78998	.

O	78999	79004	These
O	79005	79008	are
O	79009	79022	compositional
O	79023	79030	methods
O	79031	79035	that
O	79036	79047	instantiate
O	79048	79051	new
O	79052	79061	instances
O	79062	79064	of
O	79065	79068	the
O	79069	79078	interface
O	79079	79084	based
O	79085	79087	on
O	79088	79091	the
O	79092	79099	current
O	79100	79108	instance
O	79108	79109	.

O	79110	79113	For
O	79114	79121	example
O	79121	79122	,
O	79123	79126	the
O	79127	79134	methods
B-api_mention	79135	79144	Predicate
I-api_mention	79144	79145	.
I-api_mention	79145	79148	and
I-api_mention	79148	79149	(
I-api_mention	79149	79153	args
I-api_mention	79153	79154	)
O	79155	79157	or
B-api_mention	79158	79168	Comparator
I-api_mention	79168	79169	.
I-api_mention	79169	79182	thenComparing
I-api_mention	79182	79183	(
I-api_mention	79183	79187	args
I-api_mention	79187	79188	)
O	79189	79192	are
O	79193	79201	examples
O	79202	79204	of
O	79205	79216	combinators
O	79216	79217	.

O	79218	79220	If
O	79221	79224	you
O	79225	79232	provide
O	79233	79234	a
O	79235	79242	default
O	79243	79257	implementation
O	79257	79258	,
O	79259	79262	you
O	79263	79269	should
O	79270	79274	also
O	79275	79282	provide
O	79283	79287	some
O	79288	79301	specification
O	79302	79305	for
O	79306	79309	the
O	79310	79317	default
O	79318	79319	(
O	79319	79321	in
O	79322	79325	the
O	79326	79329	JDK
O	79329	79330	,
O	79331	79333	we
O	79334	79337	use
O	79338	79341	the
O	79342	79343	@
O	79343	79351	implSpec
O	79352	79359	javadoc
O	79360	79363	tag
O	79364	79367	for
O	79368	79372	this
O	79372	79373	)
O	79374	79376	to
O	79377	79380	aid
O	79381	79393	implementors
O	79394	79396	in
O	79397	79410	understanding
O	79411	79418	whether
O	79419	79423	they
O	79424	79428	want
O	79429	79431	to
O	79432	79440	override
O	79441	79444	the
O	79445	79451	method
O	79452	79454	or
O	79455	79458	not
O	79458	79459	.

O	79460	79464	Some
O	79465	79473	defaults
O	79473	79474	,
O	79475	79479	like
O	79480	79491	convenience
O	79492	79499	methods
O	79500	79503	and
O	79504	79515	combinators
O	79515	79516	,
O	79517	79520	are
O	79521	79527	almost
O	79528	79533	never
O	79534	79544	overridden
O	79544	79545	;
O	79546	79552	others
O	79552	79553	,
O	79554	79558	like
O	79559	79567	optional
O	79568	79575	methods
O	79575	79576	,
O	79577	79580	are
O	79581	79586	often
O	79587	79597	overridden
O	79597	79598	.

O	79599	79602	You
O	79603	79607	need
O	79608	79610	to
O	79611	79618	provide
O	79619	79625	enough
O	79626	79639	specification
O	79640	79641	(
O	79641	79644	not
O	79645	79649	just
O	79650	79663	documentation
O	79663	79664	)
O	79665	79670	about
O	79671	79675	what
O	79676	79679	the
O	79680	79687	default
O	79688	79696	promises
O	79697	79699	to
O	79700	79702	do
O	79702	79703	,
O	79704	79706	so
O	79707	79710	the
O	79711	79722	implementor
O	79723	79726	can
O	79727	79731	make
O	79732	79733	a
O	79734	79742	sensible
O	79743	79751	decision
O	79752	79757	about
O	79758	79765	whether
O	79766	79770	they
O	79771	79775	need
O	79776	79778	to
O	79779	79787	override
O	79788	79790	it
O	79790	79791	.

O	79793	79801	Question
O	79801	79802	-
O	79802	79810	27888429
O	79810	79811	,
O	79812	79818	answer
O	79818	79819	-
O	79819	79827	27888447

O	79828	79831	You
O	79832	79835	can
O	79836	79839	use
B-api_mention	79840	79846	Arrays
I-api_mention	79846	79847	.
I-api_mention	79847	79853	stream
O	79854	79855	E
O	79855	79856	.
O	79856	79857	g
O	79857	79858	.

B-api_mention	79859	79865	Arrays
I-api_mention	79865	79866	.
I-api_mention	79866	79872	stream
I-api_mention	79872	79873	(
I-api_mention	79873	79877	args
I-api_mention	79877	79878	)
O	79878	79879	;
O	79880	79883	You
O	79884	79887	can
O	79888	79892	also
O	79893	79896	use
B-api_mention	79897	79903	Stream
I-api_mention	79903	79904	.
I-api_mention	79904	79906	of
O	79907	79909	as
O	79910	79919	mentioned
O	79920	79922	by
O	79923	79924	@
O	79924	79927	fge
O	79928	79929	,
O	79930	79935	which
O	79936	79941	looks
O	79942	79946	like
O	79947	79948	#
O	79948	79951	pre
O	79952	79955	But
O	79956	79960	note
B-api_mention	79961	79967	Stream
I-api_mention	79967	79968	.
I-api_mention	79968	79970	of
I-api_mention	79970	79971	(
I-api_mention	79971	79975	args
I-api_mention	79975	79976	)
O	79977	79981	will
O	79982	79988	return
B-api_mention	79989	79995	Stream
I-api_mention	79995	79996	<
I-api_mention	79996	79997	T
I-api_mention	79997	79998	>
O	79999	80006	whereas
B-api_mention	80007	80013	Arrays
I-api_mention	80013	80014	.
I-api_mention	80014	80020	stream
I-api_mention	80020	80021	(
I-api_mention	80021	80025	args
I-api_mention	80025	80026	)
O	80027	80031	will
O	80032	80038	return
B-api_mention	80039	80048	IntStream
O	80049	80058	providing
O	80059	80062	you
O	80063	80067	pass
O	80068	80070	an
O	80071	80076	array
O	80077	80079	of
O	80080	80084	type
O	80085	80088	int
O	80088	80089	[
O	80089	80090	]
O	80091	80092	.

O	80093	80095	So
O	80096	80098	in
O	80099	80100	a
O	80101	80109	nutshell
O	80110	80113	for
O	80114	80124	primitives
O	80125	80129	type
O	80130	80133	you
O	80134	80137	can
O	80138	80145	observe
O	80146	80149	the
O	80150	80160	difference
O	80161	80168	between
O	80169	80170	2
O	80171	80178	methods
O	80179	80180	E
O	80180	80181	.
O	80181	80182	g
O	80182	80183	.

O	80184	80185	#
O	80185	80188	pre
O	80189	80193	When
O	80194	80197	you
O	80198	80202	pass
O	80203	80212	primitive
O	80213	80218	array
O	80219	80221	to
B-api_mention	80222	80228	Arrays
I-api_mention	80228	80229	.
I-api_mention	80229	80235	stream
O	80236	80237	,
O	80238	80241	the
O	80242	80251	following
O	80252	80256	code
O	80257	80259	is
O	80260	80267	invoked
O	80268	80269	#
O	80269	80272	pre
O	80273	80276	and
O	80277	80281	when
O	80282	80285	you
O	80286	80290	pass
O	80291	80300	primitive
O	80301	80306	array
O	80307	80309	to
B-api_mention	80310	80316	Stream
I-api_mention	80316	80317	.
I-api_mention	80317	80319	of
O	80320	80323	the
O	80324	80333	following
O	80334	80338	code
O	80339	80341	is
O	80342	80349	invoked
O	80350	80351	#
O	80351	80354	pre
O	80355	80360	Hence
O	80361	80364	you
O	80365	80368	get
O	80369	80378	different
O	80379	80386	results
O	80386	80387	.

O	80388	80395	Updated
O	80396	80397	:
O	80398	80400	As
O	80401	80410	mentioned
O	80411	80413	by
O	80414	80420	Stuart
O	80421	80426	Marks
O	80427	80434	comment
O	80435	80438	The
O	80439	80447	subrange
O	80448	80456	overload
O	80457	80459	of
B-api_mention	80460	80466	Arrays
I-api_mention	80466	80467	.
I-api_mention	80467	80473	stream
O	80474	80476	is
O	80477	80487	preferable
O	80488	80490	to
O	80491	80496	using
B-api_mention	80497	80503	Stream
I-api_mention	80503	80504	.
I-api_mention	80504	80506	of
I-api_mention	80506	80507	(
I-api_mention	80507	80511	args
I-api_mention	80511	80512	)
I-api_mention	80512	80513	.
I-api_mention	80513	80517	skip
I-api_mention	80517	80518	(
I-api_mention	80518	80522	args
I-api_mention	80522	80523	)
I-api_mention	80523	80524	.
I-api_mention	80524	80529	limit
I-api_mention	80529	80530	(
I-api_mention	80530	80534	args
I-api_mention	80534	80535	)
O	80536	80543	because
O	80544	80547	the
O	80548	80554	former
O	80555	80562	results
O	80563	80565	in
O	80566	80567	a
O	80568	80573	SIZED
O	80574	80580	stream
O	80581	80588	whereas
O	80589	80592	the
O	80593	80599	latter
O	80600	80604	does
O	80605	80608	not
O	80608	80609	.

O	80610	80613	The
O	80614	80620	reason
O	80621	80623	is
O	80624	80628	that
O	80629	80634	limit
O	80634	80635	(
O	80635	80639	args
O	80639	80640	)
O	80641	80646	doesn
O	80646	80647	'
O	80647	80648	t
O	80649	80653	know
O	80654	80661	whether
O	80662	80665	the
O	80666	80670	size
O	80671	80673	is
O	80674	80675	m
O	80676	80678	or
O	80679	80683	less
O	80684	80688	than
O	80689	80690	m
O	80690	80691	,
O	80692	80699	whereas
B-api_mention	80700	80706	Arrays
I-api_mention	80706	80707	.
I-api_mention	80707	80713	stream
O	80714	80718	does
O	80719	80724	range
O	80725	80731	checks
O	80732	80735	and
O	80736	80741	knows
O	80742	80745	the
O	80746	80751	exact
O	80752	80756	size
O	80757	80759	of
O	80760	80763	the
O	80764	80770	stream
O	80771	80774	You
O	80775	80778	can
O	80779	80783	read
O	80784	80787	the
O	80788	80794	source
O	80795	80799	code
O	80800	80803	for
O	80804	80810	stream
O	80811	80825	implementation
O	80826	80834	returned
O	80835	80837	by
B-api_mention	80838	80844	Arrays
I-api_mention	80844	80845	.
I-api_mention	80845	80851	stream
I-api_mention	80851	80852	(
I-api_mention	80852	80856	args
I-api_mention	80856	80857	)
O	80858	80862	here
O	80863	80864	,
O	80865	80872	whereas
O	80873	80876	for
O	80877	80883	stream
O	80884	80898	implementation
O	80899	80907	returned
O	80908	80910	by
B-api_mention	80911	80917	Stream
I-api_mention	80917	80918	.
I-api_mention	80918	80920	of
I-api_mention	80920	80921	(
I-api_mention	80921	80925	args
I-api_mention	80925	80926	)
I-api_mention	80926	80927	.
I-api_mention	80927	80931	skip
I-api_mention	80931	80932	(
I-api_mention	80932	80936	args
I-api_mention	80936	80937	)
I-api_mention	80937	80938	.
I-api_mention	80938	80943	limit
I-api_mention	80943	80944	(
I-api_mention	80944	80948	args
I-api_mention	80948	80949	)
O	80950	80952	is
O	80953	80959	within
O	80960	80964	this
O	80965	80971	method
O	80972	80973	.

O	80975	80983	Question
O	80983	80984	-
O	80984	80992	27888429
O	80992	80993	,
O	80994	81000	answer
O	81000	81001	-
O	81001	81009	27888452

O	81010	81021	Alternative
O	81022	81024	to
O	81025	81026	@
O	81026	81032	sol4me
O	81032	81033	'
O	81033	81034	s
O	81035	81043	solution
O	81043	81044	:
B-api_mention	81045	81051	Stream
I-api_mention	81051	81052	.
I-api_mention	81052	81054	of
I-api_mention	81054	81055	(
I-api_mention	81055	81059	args
I-api_mention	81059	81060	)
O	81061	81063	Of
O	81064	81067	the
O	81068	81078	difference
O	81079	81086	between
O	81087	81091	this
O	81092	81095	and
B-api_mention	81096	81102	Arrays
I-api_mention	81102	81103	.
I-api_mention	81103	81109	stream
I-api_mention	81109	81110	(
I-api_mention	81110	81114	args
I-api_mention	81114	81115	)
O	81116	81117	:
O	81118	81120	it
O	81121	81125	does
O	81126	81130	make
O	81131	81132	a
O	81133	81143	difference
O	81144	81146	if
O	81147	81151	your
O	81152	81157	array
O	81158	81160	is
O	81161	81163	of
O	81164	81165	a
O	81166	81175	primitive
O	81176	81180	type
O	81180	81181	.

O	81182	81185	For
O	81186	81194	instance
O	81194	81195	,
O	81196	81198	if
O	81199	81202	you
O	81203	81205	do
O	81205	81206	:
B-api_mention	81207	81213	Arrays
I-api_mention	81213	81214	.
I-api_mention	81214	81220	stream
I-api_mention	81220	81221	(
I-api_mention	81221	81225	args
I-api_mention	81225	81226	)
O	81227	81232	where
O	81233	81242	someArray
O	81243	81245	is
O	81246	81247	a
O	81248	81252	long
O	81252	81253	[
O	81253	81254	]
O	81255	81256	,
O	81257	81259	it
O	81260	81264	will
O	81265	81271	return
O	81272	81273	a
B-api_mention	81274	81284	LongStream
O	81285	81286	.

B-api_mention	81287	81293	Stream
I-api_mention	81293	81294	.
I-api_mention	81294	81296	of
I-api_mention	81296	81297	(
I-api_mention	81297	81301	args
I-api_mention	81301	81302	)
O	81303	81304	,
O	81305	81307	on
O	81308	81311	the
O	81312	81317	other
O	81318	81322	hand
O	81322	81323	,
O	81324	81328	will
O	81329	81335	return
O	81336	81337	a
B-api_mention	81338	81344	Stream
I-api_mention	81344	81345	<
I-api_mention	81345	81346	T
I-api_mention	81346	81347	>
O	81348	81352	with
O	81353	81354	a
O	81355	81361	single
O	81362	81369	element
O	81369	81370	.

O	81372	81380	Question
O	81380	81381	-
O	81381	81389	27888429
O	81389	81390	,
O	81391	81397	answer
O	81397	81398	-
O	81398	81406	27888481

B-api_mention	81407	81413	Stream
I-api_mention	81413	81414	.
I-api_mention	81414	81416	of
I-api_mention	81416	81417	(
I-api_mention	81417	81421	args
I-api_mention	81421	81422	)
O	81423	81425	Or
O	81425	81426	,
O	81427	81429	if
O	81430	81433	you
O	81434	81437	are
O	81438	81445	already
O	81446	81450	have
O	81451	81453	an
O	81454	81459	array
O	81459	81460	,
O	81461	81464	you
O	81465	81468	can
O	81469	81473	also
O	81474	81476	do
B-api_mention	81477	81483	Stream
I-api_mention	81483	81484	.
I-api_mention	81484	81486	of
I-api_mention	81486	81487	(
I-api_mention	81487	81491	args
I-api_mention	81491	81492	)
O	81493	81496	For
O	81497	81506	primitive
O	81507	81512	types
O	81513	81516	use
B-api_mention	81517	81526	IntStream
I-api_mention	81526	81527	.
I-api_mention	81527	81529	of
O	81530	81532	or
B-api_mention	81533	81543	LongStream
I-api_mention	81543	81544	.
I-api_mention	81544	81546	of
O	81547	81550	etc
O	81550	81551	.

O	81553	81561	Question
O	81561	81562	-
O	81562	81570	29280857
O	81570	81571	,
O	81572	81578	answer
O	81578	81579	-
O	81579	81587	29282558

O	81588	81590	As
O	81591	81594	you
O	81595	81599	have
O	81600	81609	mentioned
O	81610	81615	there
O	81616	81620	will
O	81621	81623	be
O	81624	81628	1000
O	81628	81629	-
O	81629	81634	10000
O	81635	81645	concurrent
O	81646	81657	transaction
O	81658	81661	you
O	81662	81671	expecting
O	81672	81674	at
O	81675	81676	a
O	81677	81681	time
O	81682	81686	than
O	81687	81690	you
O	81691	81694	can
O	81695	81700	store
O	81701	81709	accounts
O	81710	81712	on
O	81713	81718	which
O	81719	81723	some
O	81724	81735	transaction
O	81736	81738	is
O	81739	81744	going
O	81745	81747	on
O	81748	81751	and
O	81752	81758	handle
O	81759	81770	concurrency
O	81771	81774	One
O	81775	81783	Solution
O	81784	81786	is
O	81787	81789	to
O	81790	81795	allow
O	81796	81802	system
O	81803	81805	to
O	81806	81812	create
O	81813	81817	only
O	81818	81821	one
O	81822	81828	object
O	81829	81831	of
O	81832	81843	particulate
O	81844	81851	account
O	81852	81854	id
O	81854	81855	,
O	81856	81861	means
O	81862	81866	that
O	81867	81869	if
O	81870	81873	you
O	81874	81878	want
O	81879	81881	to
O	81882	81886	make
O	81887	81888	a
O	81889	81900	transaction
O	81901	81908	between
O	81909	81916	account
O	81917	81918	"
O	81918	81921	123
O	81921	81922	"
O	81923	81926	and
O	81927	81928	"
O	81928	81931	456
O	81931	81932	"
O	81933	81937	than
O	81938	81942	your
O	81943	81949	thread
O	81950	81954	will
O	81955	81961	create
O	81962	81969	account
O	81970	81976	object
O	81977	81980	and
O	81981	81983	in
O	81984	81988	that
O	81989	82000	constructor
O	82001	82003	of
O	82004	82011	account
O	82012	82017	class
O	82018	82020	we
O	82021	82025	will
O	82026	82031	check
O	82032	82034	if
O	82035	82038	any
O	82039	82044	other
O	82045	82051	object
O	82052	82054	of
O	82055	82062	account
O	82063	82065	is
O	82066	82071	there
O	82072	82076	with
O	82077	82088	particulate
O	82089	82096	account
O	82097	82099	id
O	82099	82100	,
O	82101	82103	if
O	82104	82109	other
O	82110	82116	object
O	82117	82119	of
O	82120	82127	account
O	82128	82130	is
O	82131	82136	there
O	82137	82141	with
O	82142	82146	same
O	82147	82154	account
O	82155	82157	id
O	82158	82163	means
O	82164	82168	that
O	82169	82173	some
O	82174	82185	transaction
O	82186	82188	is
O	82189	82194	going
O	82195	82197	on
O	82198	82202	with
O	82203	82214	particulate
O	82215	82222	account
O	82223	82225	id
O	82226	82228	so
O	82229	82232	you
O	82233	82237	have
O	82238	82240	to
O	82241	82245	wait
O	82246	82248	to
O	82249	82252	get
O	82253	82256	the
O	82257	82264	account
O	82265	82271	object
O	82271	82272	.

O	82273	82275	So
O	82276	82278	we
O	82279	82282	can
O	82283	82285	do
O	82286	82297	transaction
O	82298	82305	between
O	82306	82307	"
O	82307	82310	123
O	82310	82311	"
O	82312	82315	and
O	82316	82317	"
O	82317	82320	456
O	82320	82321	"
O	82322	82325	and
O	82326	82328	at
O	82329	82333	same
O	82334	82338	time
O	82339	82341	we
O	82342	82345	can
O	82346	82348	do
O	82349	82360	transaction
O	82361	82368	between
O	82369	82370	"
O	82370	82373	abc
O	82373	82374	"
O	82375	82378	and
O	82379	82380	"
O	82380	82383	xyz
O	82383	82384	"
O	82385	82388	but
O	82389	82391	if
O	82392	82394	at
O	82395	82399	same
O	82400	82404	time
O	82405	82409	some
O	82410	82415	other
O	82416	82422	thread
O	82423	82427	will
O	82428	82431	try
O	82432	82434	to
O	82435	82441	create
O	82442	82448	object
O	82449	82451	of
O	82452	82459	account
O	82460	82461	"
O	82461	82464	123
O	82464	82465	"
O	82466	82470	than
O	82471	82477	system
O	82478	82482	will
O	82483	82486	say
O	82487	82493	please
O	82494	82498	wait
O	82499	82502	for
O	82503	82512	reference
O	82513	82516	you
O	82517	82520	can
O	82521	82524	see
O	82525	82530	below
O	82531	82535	code
O	82536	82542	Please
O	82543	82547	note
O	82548	82549	:
O	82550	82551	#
O	82551	82553	li
O	82554	82558	dont
O	82559	82566	forgote
O	82567	82569	to
O	82570	82576	remove
O	82577	82581	your
O	82582	82589	account
O	82590	82592	id
O	82593	82597	from
O	82598	82603	locks
O	82604	82607	map
O	82608	82610	by
O	82611	82615	call
O	82616	82618	to
O	82619	82630	freeAccount
O	82630	82631	(
B-api_mention	82631	82641	BigDecimal
O	82642	82647	accId
O	82647	82648	)
O	82649	82653	from
B-api_mention	82654	82664	LockHolder
O	82665	82670	class
O	82671	82672	#
O	82672	82674	li
O	82675	82676	I
O	82677	82681	have
O	82682	82686	used
B-api_mention	82687	82693	HasMap
O	82694	82701	instand
O	82702	82704	of
O	82705	82709	list
O	82710	82717	because
O	82718	82722	list
O	82723	82727	will
O	82728	82731	not
O	82732	82734	be
O	82735	82736	a
O	82737	82741	good
O	82742	82748	choice
O	82749	82753	when
O	82754	82757	you
O	82758	82761	are
O	82762	82770	randomly
O	82771	82779	removing
O	82780	82787	element
O	82788	82792	from
O	82793	82795	it
O	82795	82796	(
O	82796	82798	or
O	82799	82803	when
O	82804	82814	frequently
O	82815	82818	you
O	82819	82822	are
O	82823	82831	updating
O	82832	82834	it
O	82834	82835	)
O	82836	82837	#
O	82837	82840	pre

O	82842	82850	Question
O	82850	82851	-
O	82851	82859	29280857
O	82859	82860	,
O	82861	82867	answer
O	82867	82868	-
O	82868	82876	29382161

O	82877	82879	As
O	82880	82886	stated
O	82887	82897	previously
O	82897	82898	,
O	82899	82902	you
O	82903	82909	should
O	82910	82914	lock
O	82915	82917	on
O	82918	82922	both
O	82923	82931	accounts
O	82931	82932	,
O	82933	82939	always
O	82940	82942	in
O	82943	82946	the
O	82947	82951	same
O	82952	82957	order
O	82957	82958	.

O	82959	82962	The
O	82963	82966	key
O	82967	82971	part
O	82971	82972	,
O	82973	82980	however
O	82980	82981	,
O	82982	82984	is
O	82985	82993	ensuring
O	82994	82998	both
O	82999	83003	high
O	83004	83015	granularity
O	83016	83019	and
O	83020	83031	singularity
O	83032	83038	across
O	83039	83042	the
O	83043	83045	VM
O	83046	83054	instance
O	83054	83055	.

O	83056	83060	This
O	83061	83064	can
O	83065	83067	be
O	83068	83072	done
O	83073	83078	using
B-api_mention	83079	83085	String
I-api_mention	83085	83086	.
I-api_mention	83086	83092	intern
I-api_mention	83092	83093	(
I-api_mention	83093	83094	)
O	83095	83096	:
O	83097	83098	#
O	83098	83101	pre

O	83103	83111	Question
O	83111	83112	-
O	83112	83120	29095967
O	83120	83121	,
O	83122	83128	answer
O	83128	83129	-
O	83129	83137	29096777

O	83138	83141	The
O	83142	83146	only
O	83147	83155	solution
O	83156	83157	I
O	83158	83162	come
O	83163	83165	up
O	83166	83170	with
O	83171	83174	for
O	83175	83178	the
O	83179	83185	moment
O	83186	83188	is
O	83189	83191	by
O	83192	83204	implementing
O	83205	83209	your
O	83210	83213	own
O	83214	83220	custom
O	83221	83230	collector
O	83230	83231	.

O	83232	83238	Before
O	83239	83246	reading
O	83247	83250	the
O	83251	83259	solution
O	83259	83260	,
O	83261	83262	I
O	83263	83267	want
O	83268	83270	to
O	83271	83274	add
O	83275	83276	a
O	83277	83280	few
O	83281	83286	notes
O	83287	83292	about
O	83293	83297	this
O	83297	83298	.

O	83299	83300	I
O	83301	83305	took
O	83306	83310	this
O	83311	83319	question
O	83320	83324	more
O	83325	83327	as
O	83328	83329	a
O	83330	83341	programming
O	83342	83350	exercise
O	83350	83351	,
O	83352	83353	I
O	83353	83354	'
O	83354	83355	m
O	83356	83359	not
O	83360	83364	sure
O	83365	83367	if
O	83368	83370	it
O	83371	83374	can
O	83375	83377	be
O	83378	83382	done
O	83383	83387	with
O	83388	83389	a
O	83390	83398	parallel
O	83399	83405	stream
O	83405	83406	.

O	83407	83409	So
O	83410	83413	you
O	83414	83418	have
O	83419	83421	to
O	83422	83424	be
O	83425	83430	aware
O	83431	83435	that
O	83436	83438	it
O	83438	83439	'
O	83439	83441	ll
O	83442	83450	silently
O	83451	83456	break
O	83457	83459	if
O	83460	83463	the
O	83464	83472	pipeline
O	83473	83475	is
O	83476	83479	run
O	83480	83482	in
O	83483	83491	parallel
O	83492	83493	.

O	83494	83498	This
O	83499	83501	is
O	83502	83505	not
O	83506	83507	a
O	83508	83517	desirable
O	83518	83526	behavior
O	83527	83530	and
O	83531	83537	should
O	83538	83540	be
O	83541	83548	avoided
O	83549	83550	.

O	83551	83555	This
O	83556	83558	is
O	83559	83562	why
O	83563	83564	I
O	83565	83570	throw
O	83571	83573	an
O	83574	83583	exception
O	83584	83586	in
O	83587	83590	the
O	83591	83599	combiner
O	83600	83604	part
O	83605	83606	(
O	83606	83613	instead
O	83614	83616	of
O	83617	83618	(
O	83618	83620	l1
O	83620	83621	,
O	83622	83624	l2
O	83624	83625	)
O	83626	83627	-
O	83627	83628	>
O	83629	83630	{
O	83630	83632	l1
B-api_mention	83632	83633	.
I-api_mention	83633	83639	addAll
I-api_mention	83639	83640	(
I-api_mention	83640	83644	args
I-api_mention	83644	83645	)
O	83645	83646	;
O	83647	83653	return
O	83654	83656	l1
O	83656	83657	;
O	83657	83658	}
O	83659	83660	)
O	83660	83661	,
O	83662	83664	as
O	83665	83667	it
O	83667	83668	'
O	83668	83669	s
O	83670	83674	used
O	83675	83677	in
O	83678	83686	parallel
O	83687	83691	when
O	83692	83701	combining
O	83702	83705	the
O	83706	83709	two
O	83710	83715	lists
O	83715	83716	,
O	83717	83719	so
O	83720	83724	that
O	83725	83728	you
O	83729	83733	have
O	83734	83736	an
O	83737	83746	exception
O	83747	83754	instead
O	83755	83757	of
O	83758	83759	a
O	83760	83765	wrong
O	83766	83772	result
O	83772	83773	.

O	83774	83778	Also
O	83779	83783	this
O	83784	83786	is
O	83787	83790	not
O	83791	83795	very
O	83796	83805	efficient
O	83806	83809	due
O	83810	83812	to
O	83813	83817	list
O	83818	83825	copying
O	83826	83827	(
O	83827	83835	although
O	83836	83838	it
O	83839	83843	uses
O	83844	83845	a
O	83846	83852	native
O	83853	83859	method
O	83860	83862	to
O	83863	83867	copy
O	83868	83871	the
O	83872	83882	underlying
O	83883	83888	array
O	83888	83889	)
O	83889	83890	.

O	83891	83893	So
O	83894	83898	here
O	83898	83899	'
O	83899	83900	s
O	83901	83904	the
O	83905	83914	collector
O	83915	83929	implementation
O	83929	83930	:
O	83931	83932	#
O	83932	83935	pre
O	83936	83939	and
O	83940	83943	how
O	83944	83946	to
O	83947	83950	use
O	83951	83953	it
O	83953	83954	:
B-api_mention	83955	83959	List
I-api_mention	83959	83960	<
I-api_mention	83960	83961	T
I-api_mention	83961	83962	>
O	83963	83965	ll
O	83966	83967	=
O	83968	83972	list
B-api_mention	83972	83973	.
I-api_mention	83973	83979	stream
I-api_mention	83979	83980	(
I-api_mention	83980	83984	args
I-api_mention	83984	83985	)
I-api_mention	83985	83986	.
I-api_mention	83986	83993	collect
I-api_mention	83993	83994	(
I-api_mention	83994	83998	args
I-api_mention	83998	83999	)
O	83999	84000	;
O	84001	84007	Output
O	84007	84008	:
O	84009	84010	[
O	84010	84011	[
O	84011	84012	a
O	84012	84013	,
O	84014	84015	b
O	84015	84016	]
O	84016	84017	,
O	84018	84019	[
O	84019	84020	c
O	84020	84021	]
O	84021	84022	,
O	84023	84024	[
O	84024	84025	d
O	84025	84026	,
O	84027	84028	e
O	84028	84029	]
O	84029	84030	]
O	84031	84033	As
O	84034	84037	the
O	84038	84044	answer
O	84045	84047	of
O	84048	84052	Joop
O	84053	84058	Eggen
O	84059	84061	is
O	84062	84065	out
O	84066	84067	,
O	84068	84070	it
O	84071	84078	appears
O	84079	84083	that
O	84084	84086	it
O	84087	84090	can
O	84091	84093	be
O	84094	84098	done
O	84099	84101	in
O	84102	84110	parallel
O	84111	84112	(
O	84112	84116	give
O	84117	84120	him
O	84121	84127	credit
O	84128	84131	for
O	84132	84136	that
O	84136	84137	!
O	84137	84138	)
O	84138	84139	.

O	84140	84144	With
O	84145	84149	that
O	84150	84152	it
O	84153	84160	reduces
O	84161	84164	the
O	84165	84171	custom
O	84172	84181	collector
O	84182	84196	implementation
O	84197	84199	to
O	84199	84200	:
O	84201	84202	#
O	84202	84205	pre
O	84206	84211	which
O	84212	84215	let
O	84216	84219	the
O	84220	84229	paragraph
O	84230	84235	about
O	84236	84247	parallelism
O	84248	84249	a
O	84250	84253	bit
O	84254	84262	obsolete
O	84262	84263	,
O	84264	84271	however
O	84272	84273	I
O	84274	84277	let
O	84278	84280	it
O	84281	84283	as
O	84284	84286	it
O	84287	84290	can
O	84291	84293	be
O	84294	84295	a
O	84296	84300	good
O	84301	84309	reminder
O	84309	84310	.

O	84311	84315	Note
O	84316	84320	that
O	84321	84324	the
B-api_mention	84325	84331	Stream
O	84332	84335	API
O	84336	84338	is
O	84339	84342	not
O	84343	84349	always
O	84350	84351	a
O	84352	84362	substitute
O	84362	84363	.

O	84364	84369	There
O	84370	84373	are
O	84374	84379	tasks
O	84380	84384	that
O	84385	84388	are
O	84389	84395	easier
O	84396	84399	and
O	84400	84404	more
O	84405	84413	suitable
O	84414	84419	using
O	84420	84423	the
O	84424	84431	streams
O	84432	84435	and
O	84436	84441	there
O	84442	84445	are
O	84446	84451	tasks
O	84452	84456	that
O	84457	84460	are
O	84461	84464	not
O	84464	84465	.

O	84466	84468	In
O	84469	84473	your
O	84474	84478	case
O	84478	84479	,
O	84480	84483	you
O	84484	84489	could
O	84490	84494	also
O	84495	84501	create
O	84502	84503	a
O	84504	84511	utility
O	84512	84518	method
O	84519	84522	for
O	84523	84527	that
O	84527	84528	:
O	84529	84530	#
O	84530	84533	pre
O	84534	84537	and
O	84538	84542	call
O	84543	84545	it
O	84546	84550	like
B-api_mention	84551	84555	List
I-api_mention	84555	84556	<
I-api_mention	84556	84557	T
I-api_mention	84557	84558	>
O	84559	84563	list
O	84564	84565	=
B-api_mention	84566	84582	splitBySeparator
I-api_mention	84582	84583	(
I-api_mention	84583	84587	args
I-api_mention	84587	84588	)
O	84588	84589	;
O	84590	84591	.

O	84592	84594	It
O	84595	84598	can
O	84599	84601	be
O	84602	84610	improved
O	84611	84614	for
O	84615	84623	checking
O	84624	84628	edge
O	84628	84629	-
O	84629	84634	cases
O	84634	84635	.

O	84637	84645	Question
O	84645	84646	-
O	84646	84654	29095967
O	84654	84655	,
O	84656	84662	answer
O	84662	84663	-
O	84663	84671	29097694

O	84672	84678	Please
O	84679	84681	do
O	84682	84685	not
O	84686	84690	vote
O	84690	84691	.

O	84692	84693	I
O	84694	84696	do
O	84697	84700	not
O	84701	84705	have
O	84706	84712	enough
O	84713	84718	place
O	84719	84721	to
O	84722	84729	explain
O	84730	84734	this
O	84735	84737	in
O	84738	84746	comments
O	84747	84748	.

O	84749	84753	This
O	84754	84756	is
O	84757	84758	a
O	84759	84767	solution
O	84768	84772	with
O	84773	84774	a
B-api_mention	84775	84781	Stream
O	84782	84785	and
O	84786	84787	a
O	84788	84795	foreach
O	84796	84799	but
O	84800	84804	this
O	84805	84807	is
O	84808	84816	strictly
O	84817	84827	equivalent
O	84828	84830	to
O	84831	84837	Alexis
O	84837	84838	'
O	84838	84839	s
O	84840	84848	solution
O	84849	84851	or
O	84852	84853	a
O	84854	84861	foreach
O	84862	84866	loop
O	84867	84868	(
O	84868	84871	and
O	84872	84876	less
O	84877	84882	clear
O	84882	84883	,
O	84884	84887	and
O	84888	84889	I
O	84890	84895	could
O	84896	84899	not
O	84900	84903	get
O	84904	84907	rid
O	84908	84910	of
O	84911	84914	the
O	84915	84919	copy
O	84920	84931	constructor
O	84931	84932	)
O	84933	84934	:
O	84935	84936	#
O	84936	84939	pre
O	84940	84941	I
O	84942	84952	understand
O	84953	84957	that
O	84958	84961	you
O	84962	84966	want
O	84967	84969	to
O	84970	84974	find
O	84975	84976	a
O	84977	84981	more
O	84982	84989	elegant
O	84990	84998	solution
O	84999	85003	with
O	85004	85008	Java
O	85009	85010	8
O	85011	85014	but
O	85015	85016	I
O	85017	85022	truly
O	85023	85028	think
O	85029	85033	that
O	85034	85036	it
O	85037	85040	has
O	85041	85044	not
O	85045	85049	been
O	85050	85058	designed
O	85059	85062	for
O	85063	85067	this
O	85068	85072	case
O	85072	85073	.

O	85074	85077	And
O	85078	85080	as
O	85081	85085	said
O	85086	85088	by
O	85089	85091	Mr
O	85092	85097	spoon
O	85097	85098	,
O	85099	85105	highly
O	85106	85112	prefer
O	85113	85116	the
O	85117	85122	naive
O	85123	85126	way
O	85127	85129	in
O	85130	85134	this
O	85135	85139	case
O	85139	85140	.

O	85142	85150	Question
O	85150	85151	-
O	85151	85159	29095967
O	85159	85160	,
O	85161	85167	answer
O	85167	85168	-
O	85168	85176	29098447

O	85177	85180	The
O	85181	85189	solution
O	85190	85192	is
O	85193	85195	to
O	85196	85199	use
B-api_mention	85200	85206	Stream
I-api_mention	85206	85207	.
I-api_mention	85207	85214	collect
O	85215	85216	.

O	85217	85219	To
O	85220	85226	create
O	85227	85228	a
B-api_mention	85229	85238	Collector
O	85239	85244	using
O	85245	85248	its
O	85249	85256	builder
O	85257	85264	pattern
O	85265	85267	is
O	85268	85275	already
O	85276	85281	given
O	85282	85284	as
O	85285	85293	solution
O	85293	85294	.

O	85295	85298	The
O	85299	85310	alternative
O	85311	85313	is
O	85314	85317	the
O	85318	85323	other
O	85324	85334	overloaded
O	85335	85342	collect
O	85343	85348	being
O	85349	85350	a
O	85351	85355	tiny
O	85356	85359	bit
O	85360	85364	more
O	85365	85374	primitive
O	85374	85375	.

O	85376	85377	#
O	85377	85380	pre
O	85381	85383	As
O	85384	85387	one
O	85388	85392	sees
O	85392	85393	,
O	85394	85395	I
O	85396	85400	make
O	85401	85402	a
O	85403	85407	list
O	85408	85410	of
O	85411	85417	string
O	85418	85423	lists
O	85423	85424	,
O	85425	85430	where
O	85431	85436	there
O	85437	85443	always
O	85444	85446	is
O	85447	85449	at
O	85450	85455	least
O	85456	85459	one
O	85460	85464	last
O	85465	85466	(
O	85466	85471	empty
O	85471	85472	)
O	85473	85479	string
O	85480	85484	list
O	85484	85485	.

O	85486	85487	#
O	85487	85489	li
O	85490	85493	The
O	85494	85499	first
O	85500	85508	function
O	85509	85516	creates
O	85517	85518	a
O	85519	85527	starting
O	85528	85532	list
O	85533	85535	of
O	85536	85542	string
O	85543	85548	lists
O	85548	85549	.

O	85550	85552	It
O	85553	85562	specifies
O	85563	85566	the
O	85567	85573	result
O	85574	85575	(
O	85575	85580	typed
O	85580	85581	)
O	85582	85588	object
O	85588	85589	.

O	85590	85591	#
O	85591	85593	li
O	85594	85597	The
O	85598	85604	second
O	85605	85613	function
O	85614	85616	is
O	85617	85623	called
O	85624	85626	to
O	85627	85634	process
O	85635	85639	each
O	85640	85647	element
O	85647	85648	.

O	85649	85651	It
O	85652	85654	is
O	85655	85657	an
O	85658	85664	action
O	85665	85667	on
O	85668	85671	the
O	85672	85679	partial
O	85680	85686	result
O	85687	85690	and
O	85691	85693	an
O	85694	85701	element
O	85701	85702	.

O	85703	85704	#
O	85704	85706	li
O	85707	85710	The
O	85711	85716	third
O	85717	85719	is
O	85720	85723	not
O	85724	85730	really
O	85731	85735	used
O	85735	85736	,
O	85737	85739	it
O	85740	85745	comes
O	85746	85750	into
O	85751	85755	play
O	85756	85758	on
O	85759	85772	parallelising
O	85773	85776	the
O	85777	85787	processing
O	85787	85788	,
O	85789	85793	when
O	85794	85801	partial
O	85802	85809	results
O	85810	85814	must
O	85815	85817	be
O	85818	85826	combined
O	85826	85827	.

O	85828	85829	A
O	85830	85838	solution
O	85839	85843	with
O	85844	85846	an
O	85847	85858	accumulator
O	85858	85859	:
O	85860	85862	As
O	85863	85864	@
O	85864	85875	StuartMarks
O	85876	85882	points
O	85883	85886	out
O	85886	85887	,
O	85888	85891	the
O	85892	85900	combiner
O	85901	85905	does
O	85906	85909	not
O	85910	85918	fullfill
O	85919	85922	the
O	85923	85931	contract
O	85932	85935	for
O	85936	85947	parallelism
O	85947	85948	.

O	85949	85952	Due
O	85953	85955	to
O	85956	85959	the
O	85960	85967	comment
O	85968	85970	of
O	85971	85972	@
O	85972	85987	ArnaudDenoyelle
O	85988	85989	a
O	85990	85997	version
O	85998	86003	using
O	86004	86010	reduce
O	86011	86012	.

O	86013	86014	#
O	86014	86017	pre
O	86018	86019	#
O	86019	86021	li
O	86022	86025	The
O	86026	86031	first
O	86032	86041	parameter
O	86042	86044	is
O	86045	86048	the
O	86049	86060	accumulated
O	86061	86067	object
O	86067	86068	.

O	86069	86070	#
O	86070	86072	li
O	86073	86076	The
O	86077	86083	second
O	86084	86092	function
O	86093	86104	accumulates
O	86104	86105	.

O	86106	86107	#
O	86107	86109	li
O	86110	86113	The
O	86114	86119	third
O	86120	86122	is
O	86123	86126	the
O	86127	86141	aforementioned
O	86142	86150	combiner
O	86150	86151	.

O	86153	86161	Question
O	86161	86162	-
O	86162	86170	29095967
O	86170	86171	,
O	86172	86178	answer
O	86178	86179	-
O	86179	86187	29099896

O	86188	86192	This
O	86193	86195	is
O	86196	86197	a
O	86198	86202	very
O	86203	86214	interesting
O	86215	86222	problem
O	86222	86223	.

O	86224	86225	I
O	86226	86230	came
O	86231	86233	up
O	86234	86238	with
O	86239	86240	a
O	86241	86244	one
O	86245	86249	line
O	86250	86258	solution
O	86258	86259	.

O	86260	86262	It
O	86263	86268	might
O	86269	86272	not
O	86273	86277	very
O	86278	86288	performant
O	86289	86292	but
O	86293	86295	it
O	86296	86301	works
O	86301	86302	.

O	86303	86304	#
O	86304	86307	pre
O	86308	86310	It
O	86311	86313	is
O	86314	86315	a
O	86316	86323	similar
O	86324	86328	idea
O	86329	86333	that
O	86334	86335	@
O	86335	86340	Rohit
O	86341	86345	Jain
O	86346	86350	came
O	86351	86353	up
O	86354	86358	with
O	86358	86359	.

O	86360	86361	I
O	86361	86362	'
O	86362	86363	m
O	86364	86372	grouping
O	86373	86376	the
O	86377	86382	space
O	86383	86390	between
O	86391	86394	the
O	86395	86399	null
O	86400	86406	values
O	86406	86407	.

O	86408	86410	If
O	86411	86414	you
O	86415	86421	really
O	86422	86426	want
O	86427	86428	a
B-api_mention	86429	86433	List
I-api_mention	86433	86434	<
I-api_mention	86434	86435	T
I-api_mention	86435	86436	>
O	86437	86440	you
O	86441	86444	may
O	86445	86451	append
O	86451	86452	:
B-api_mention	86453	86457	List
I-api_mention	86457	86458	<
I-api_mention	86458	86459	T
I-api_mention	86459	86460	>
O	86461	86463	ll
O	86464	86465	=
O	86466	86468	cl
B-api_mention	86468	86469	.
I-api_mention	86469	86475	stream
I-api_mention	86475	86476	(
I-api_mention	86476	86480	args
I-api_mention	86480	86481	)
I-api_mention	86481	86482	.
I-api_mention	86482	86489	collect
I-api_mention	86489	86490	(
I-api_mention	86490	86494	args
I-api_mention	86494	86495	)
O	86495	86496	;

O	86498	86506	Question
O	86506	86507	-
O	86507	86515	29095967
O	86515	86516	,
O	86517	86523	answer
O	86523	86524	-
O	86524	86532	29111023

O	86533	86541	Although
O	86542	86547	there
O	86548	86551	are
O	86552	86559	several
O	86560	86567	answers
O	86568	86575	already
O	86575	86576	,
O	86577	86580	and
O	86581	86583	an
O	86584	86592	accepted
O	86593	86599	answer
O	86599	86600	,
O	86601	86606	there
O	86607	86610	are
O	86611	86616	still
O	86617	86618	a
O	86619	86625	couple
O	86626	86632	points
O	86633	86640	missing
O	86641	86645	from
O	86646	86650	this
O	86651	86656	topic
O	86656	86657	.

O	86658	86663	First
O	86663	86664	,
O	86665	86668	the
O	86669	86678	consensus
O	86679	86684	seems
O	86685	86687	to
O	86688	86690	be
O	86691	86695	that
O	86696	86703	solving
O	86704	86708	this
O	86709	86716	problem
O	86717	86722	using
O	86723	86730	streams
O	86731	86733	is
O	86734	86740	merely
O	86741	86743	an
O	86744	86752	exercise
O	86752	86753	,
O	86754	86757	and
O	86758	86762	that
O	86763	86766	the
O	86767	86779	conventional
O	86780	86783	for
O	86783	86784	-
O	86784	86788	loop
O	86789	86797	approach
O	86798	86800	is
O	86801	86811	preferable
O	86811	86812	.

O	86813	86819	Second
O	86819	86820	,
O	86821	86824	the
O	86825	86832	answers
O	86833	86838	given
O	86839	86843	thus
O	86844	86847	far
O	86848	86852	have
O	86853	86863	overlooked
O	86864	86866	an
O	86867	86875	approach
O	86876	86881	using
O	86882	86887	array
O	86888	86890	or
O	86891	86897	vector
O	86897	86898	-
O	86898	86903	style
O	86904	86914	techniques
O	86915	86919	that
O	86920	86921	I
O	86922	86927	think
O	86928	86936	improves
O	86937	86940	the
O	86941	86948	streams
O	86949	86957	solution
O	86958	86970	considerably
O	86970	86971	.

O	86972	86977	First
O	86977	86978	,
O	86979	86983	here
O	86983	86984	'
O	86984	86985	s
O	86986	86987	a
O	86988	87000	conventional
O	87001	87009	solution
O	87009	87010	,
O	87011	87014	for
O	87015	87023	purposes
O	87024	87026	of
O	87027	87037	discussion
O	87038	87041	and
O	87042	87050	analysis
O	87050	87051	:
O	87052	87053	#
O	87053	87056	pre
O	87057	87061	This
O	87062	87064	is
O	87065	87071	mostly
O	87072	87087	straightforward
O	87088	87091	but
O	87092	87097	there
O	87097	87098	'
O	87098	87099	s
O	87100	87101	a
O	87102	87105	bit
O	87106	87108	of
O	87109	87117	subtlety
O	87117	87118	.

O	87119	87122	One
O	87123	87128	point
O	87129	87131	is
O	87132	87136	that
O	87137	87138	a
O	87139	87146	pending
O	87147	87154	sublist
O	87155	87159	from
O	87160	87164	prev
O	87165	87167	to
O	87168	87171	cur
O	87172	87174	is
O	87175	87181	always
O	87182	87186	open
O	87186	87187	.

O	87188	87192	When
O	87193	87195	we
O	87196	87205	encounter
O	87206	87210	null
O	87211	87213	we
O	87214	87219	close
O	87220	87222	it
O	87222	87223	,
O	87224	87227	add
O	87228	87230	it
O	87231	87233	to
O	87234	87237	the
O	87238	87244	result
O	87245	87249	list
O	87249	87250	,
O	87251	87254	and
O	87255	87262	advance
O	87263	87267	prev
O	87268	87269	.

O	87270	87275	After
O	87276	87279	the
O	87280	87284	loop
O	87285	87287	we
O	87288	87293	close
O	87294	87297	the
O	87298	87305	sublist
O	87306	87321	unconditionally
O	87321	87322	.

O	87323	87330	Another
O	87331	87342	observation
O	87343	87345	is
O	87346	87350	that
O	87351	87355	this
O	87356	87358	is
O	87359	87360	a
O	87361	87365	loop
O	87366	87370	over
O	87371	87378	indexes
O	87378	87379	,
O	87380	87383	not
O	87384	87388	over
O	87389	87392	the
O	87393	87399	values
O	87400	87410	themselves
O	87410	87411	,
O	87412	87416	thus
O	87417	87419	we
O	87420	87423	use
O	87424	87426	an
O	87427	87437	arithmetic
O	87438	87441	for
O	87441	87442	-
O	87442	87446	loop
O	87447	87454	instead
O	87455	87457	of
O	87458	87461	the
O	87462	87470	enhanced
O	87471	87472	"
O	87472	87475	for
O	87475	87476	-
O	87476	87480	each
O	87480	87481	"
O	87482	87486	loop
O	87486	87487	.

O	87488	87491	But
O	87492	87494	it
O	87495	87503	suggests
O	87504	87508	that
O	87509	87511	we
O	87512	87515	can
O	87516	87522	stream
O	87523	87528	using
O	87529	87532	the
O	87533	87540	indexes
O	87541	87543	to
O	87544	87552	generate
O	87553	87562	subranges
O	87563	87570	instead
O	87571	87573	of
O	87574	87583	streaming
O	87584	87588	over
O	87589	87595	values
O	87596	87599	and
O	87600	87607	putting
O	87608	87611	the
O	87612	87617	logic
O	87618	87622	into
O	87623	87626	the
O	87627	87636	collector
O	87637	87638	(
O	87638	87640	as
O	87641	87644	was
O	87645	87649	done
O	87650	87652	by
O	87653	87657	Joop
O	87658	87663	Eggen
O	87663	87664	'
O	87664	87665	s
O	87666	87674	proposed
O	87675	87683	solution
O	87684	87685	)
O	87685	87686	.

O	87687	87691	Once
O	87692	87694	we
O	87694	87695	'
O	87695	87697	ve
O	87698	87706	realized
O	87707	87711	that
O	87711	87712	,
O	87713	87715	we
O	87716	87719	can
O	87720	87723	see
O	87724	87728	that
O	87729	87733	each
O	87734	87742	position
O	87743	87745	of
O	87746	87750	null
O	87751	87753	in
O	87754	87757	the
O	87758	87763	input
O	87764	87766	is
O	87767	87770	the
O	87771	87780	delimiter
O	87781	87784	for
O	87785	87786	a
O	87787	87794	sublist
O	87794	87795	:
O	87796	87798	it
O	87798	87799	'
O	87799	87800	s
O	87801	87804	the
O	87805	87810	right
O	87811	87814	end
O	87815	87817	of
O	87818	87821	the
O	87822	87829	sublist
O	87830	87832	to
O	87833	87836	the
O	87837	87841	left
O	87841	87842	,
O	87843	87846	and
O	87847	87849	it
O	87850	87851	(
O	87851	87855	plus
O	87856	87859	one
O	87859	87860	)
O	87861	87863	is
O	87864	87867	the
O	87868	87872	left
O	87873	87876	end
O	87877	87879	of
O	87880	87883	the
O	87884	87891	sublist
O	87892	87894	to
O	87895	87898	the
O	87899	87904	right
O	87904	87905	.

O	87906	87908	If
O	87909	87911	we
O	87912	87915	can
O	87916	87922	handle
O	87923	87926	the
O	87927	87931	edge
O	87932	87937	cases
O	87937	87938	,
O	87939	87941	it
O	87942	87947	leads
O	87948	87950	to
O	87951	87953	an
O	87954	87962	approach
O	87963	87968	where
O	87969	87971	we
O	87972	87976	find
O	87977	87980	the
O	87981	87988	indexes
O	87989	87991	at
O	87992	87997	which
O	87998	88002	null
O	88003	88011	elements
O	88012	88017	occur
O	88017	88018	,
O	88019	88022	map
O	88023	88027	them
O	88028	88030	to
O	88031	88039	sublists
O	88039	88040	,
O	88041	88044	and
O	88045	88052	collect
O	88053	88056	the
O	88057	88065	sublists
O	88065	88066	.

O	88067	88070	The
O	88071	88080	resulting
O	88081	88085	code
O	88086	88088	is
O	88089	88091	as
O	88092	88099	follows
O	88099	88100	:
O	88101	88102	#
O	88102	88105	pre
O	88106	88113	Getting
O	88114	88117	the
O	88118	88125	indexes
O	88126	88128	at
O	88129	88134	which
O	88135	88139	null
O	88140	88146	occurs
O	88147	88149	is
O	88150	88156	pretty
O	88157	88161	easy
O	88161	88162	.

O	88163	88166	The
O	88167	88176	stumbling
O	88177	88182	block
O	88183	88185	is
O	88186	88192	adding
O	88193	88194	-
O	88194	88195	1
O	88196	88198	at
O	88199	88202	the
O	88203	88207	left
O	88208	88211	and
O	88212	88216	size
O	88217	88219	at
O	88220	88223	the
O	88224	88229	right
O	88230	88233	end
O	88233	88234	.

O	88235	88236	I
O	88236	88237	'
O	88237	88239	ve
O	88240	88245	opted
O	88246	88248	to
O	88249	88252	use
B-api_mention	88253	88259	Stream
I-api_mention	88259	88260	.
I-api_mention	88260	88262	of
O	88263	88265	to
O	88266	88268	do
O	88269	88272	the
O	88273	88282	appending
O	88283	88286	and
O	88287	88291	then
B-api_mention	88292	88304	flatMapToInt
O	88305	88307	to
O	88308	88315	flatten
O	88316	88320	them
O	88321	88324	out
O	88324	88325	.

O	88326	88327	(
O	88327	88328	I
O	88329	88334	tried
O	88335	88342	several
O	88343	88348	other
O	88349	88359	approaches
O	88360	88363	but
O	88364	88368	this
O	88369	88372	one
O	88373	88379	seemed
O	88380	88384	like
O	88385	88388	the
O	88389	88397	cleanest
O	88397	88398	.
O	88398	88399	)
O	88400	88402	It
O	88402	88403	'
O	88403	88404	s
O	88405	88406	a
O	88407	88410	bit
O	88411	88415	more
O	88416	88426	convenient
O	88427	88429	to
O	88430	88433	use
O	88434	88440	arrays
O	88441	88444	for
O	88445	88448	the
O	88449	88456	indexes
O	88457	88461	here
O	88461	88462	.

O	88463	88468	First
O	88468	88469	,
O	88470	88473	the
O	88474	88482	notation
O	88483	88486	for
O	88487	88496	accessing
O	88497	88499	an
O	88500	88505	array
O	88506	88508	is
O	88509	88514	nicer
O	88515	88519	than
O	88520	88523	for
O	88524	88525	a
B-api_mention	88526	88530	List
O	88530	88531	:
O	88532	88539	indexes
O	88539	88540	[
O	88540	88541	i
O	88541	88542	]
O	88543	88545	vs
O	88545	88546	.
O	88547	88554	indexes
B-api_mention	88554	88555	.
I-api_mention	88555	88558	get
I-api_mention	88558	88559	(
I-api_mention	88559	88563	args
I-api_mention	88563	88564	)
O	88565	88566	.

O	88567	88573	Second
O	88573	88574	,
O	88575	88580	using
O	88581	88583	an
O	88584	88589	array
O	88590	88596	avoids
O	88597	88603	boxing
O	88603	88604	.

O	88605	88607	At
O	88608	88612	this
O	88613	88618	point
O	88618	88619	,
O	88620	88624	each
O	88625	88630	index
O	88631	88636	value
O	88637	88639	in
O	88640	88643	the
O	88644	88649	array
O	88650	88651	(
O	88651	88657	except
O	88658	88661	for
O	88662	88665	the
O	88666	88670	last
O	88670	88671	)
O	88672	88674	is
O	88675	88678	one
O	88679	88683	less
O	88684	88688	than
O	88689	88692	the
O	88693	88702	beginning
O	88703	88711	position
O	88712	88714	of
O	88715	88716	a
O	88717	88724	sublist
O	88724	88725	.

O	88726	88729	The
O	88730	88735	index
O	88736	88738	to
O	88739	88742	its
O	88743	88752	immediate
O	88753	88758	right
O	88759	88761	is
O	88762	88765	the
O	88766	88769	end
O	88770	88772	of
O	88773	88776	the
O	88777	88784	sublist
O	88784	88785	.

O	88786	88788	We
O	88789	88795	simply
O	88796	88802	stream
O	88803	88807	over
O	88808	88811	the
O	88812	88817	array
O	88818	88821	and
O	88822	88825	map
O	88826	88830	each
O	88831	88835	pair
O	88836	88838	of
O	88839	88846	indexes
O	88847	88851	into
O	88852	88853	a
O	88854	88861	sublist
O	88862	88865	and
O	88866	88873	collect
O	88874	88877	the
O	88878	88884	output
O	88884	88885	.

O	88886	88896	Discussion
O	88897	88900	The
O	88901	88908	streams
O	88909	88917	approach
O	88918	88920	is
O	88921	88929	slightly
O	88930	88937	shorter
O	88938	88942	than
O	88943	88946	the
O	88947	88950	for
O	88950	88951	-
O	88951	88955	loop
O	88956	88963	version
O	88963	88964	,
O	88965	88968	but
O	88969	88971	it
O	88971	88972	'
O	88972	88973	s
O	88974	88980	denser
O	88980	88981	.

O	88982	88985	The
O	88986	88989	for
O	88989	88990	-
O	88990	88994	loop
O	88995	89002	version
O	89003	89005	is
O	89006	89014	familiar
O	89014	89015	,
O	89016	89023	because
O	89024	89026	we
O	89027	89029	do
O	89030	89034	this
O	89035	89040	stuff
O	89041	89043	in
O	89044	89048	Java
O	89049	89052	all
O	89053	89056	the
O	89057	89061	time
O	89061	89062	,
O	89063	89066	but
O	89067	89069	if
O	89070	89073	you
O	89073	89074	'
O	89074	89076	re
O	89077	89080	not
O	89081	89088	already
O	89089	89094	aware
O	89095	89097	of
O	89098	89102	what
O	89103	89107	this
O	89108	89112	loop
O	89113	89115	is
O	89116	89124	supposed
O	89125	89127	to
O	89128	89130	be
O	89131	89136	doing
O	89136	89137	,
O	89138	89140	it
O	89140	89141	'
O	89141	89142	s
O	89143	89146	not
O	89147	89154	obvious
O	89154	89155	.

O	89156	89159	You
O	89160	89165	might
O	89166	89170	have
O	89171	89173	to
O	89174	89182	simulate
O	89183	89184	a
O	89185	89188	few
O	89189	89193	loop
O	89194	89204	executions
O	89205	89211	before
O	89212	89215	you
O	89216	89222	figure
O	89223	89226	out
O	89227	89231	what
O	89232	89236	prev
O	89237	89239	is
O	89240	89245	doing
O	89246	89249	and
O	89250	89253	why
O	89254	89257	the
O	89258	89262	open
O	89263	89270	sublist
O	89271	89274	has
O	89275	89277	to
O	89278	89280	be
O	89281	89287	closed
O	89288	89293	after
O	89294	89297	the
O	89298	89301	end
O	89302	89304	of
O	89305	89308	the
O	89309	89313	loop
O	89313	89314	.

O	89315	89316	(
O	89316	89317	I
O	89318	89327	initially
O	89328	89334	forgot
O	89335	89337	to
O	89338	89342	have
O	89343	89345	it
O	89345	89346	,
O	89347	89350	but
O	89351	89352	I
O	89353	89359	caught
O	89360	89364	this
O	89365	89367	in
O	89368	89375	testing
O	89375	89376	.
O	89376	89377	)
O	89378	89381	The
O	89382	89389	streams
O	89390	89398	approach
O	89399	89401	is
O	89401	89402	,
O	89403	89404	I
O	89405	89410	think
O	89410	89411	,
O	89412	89418	easier
O	89419	89421	to
O	89422	89435	conceptualize
O	89436	89440	what
O	89440	89441	'
O	89441	89442	s
O	89443	89448	going
O	89449	89451	on
O	89451	89452	:
O	89453	89456	get
O	89457	89458	a
O	89459	89463	list
O	89464	89465	(
O	89465	89467	or
O	89468	89470	an
O	89471	89476	array
O	89476	89477	)
O	89478	89482	that
O	89483	89492	indicates
O	89493	89496	the
O	89497	89507	boundaries
O	89508	89515	between
O	89516	89524	sublists
O	89524	89525	.

O	89526	89530	That
O	89530	89531	'
O	89531	89532	s
O	89533	89535	an
O	89536	89540	easy
O	89541	89548	streams
O	89549	89552	two
O	89552	89553	-
O	89553	89558	liner
O	89558	89559	.

O	89560	89563	The
O	89564	89574	difficulty
O	89574	89575	,
O	89576	89578	as
O	89579	89580	I
O	89581	89590	mentioned
O	89591	89596	above
O	89596	89597	,
O	89598	89600	is
O	89601	89608	finding
O	89609	89610	a
O	89611	89614	way
O	89615	89617	to
O	89618	89622	tack
O	89623	89626	the
O	89627	89631	edge
O	89632	89638	values
O	89639	89643	onto
O	89644	89647	the
O	89648	89652	ends
O	89652	89653	.

O	89654	89656	If
O	89657	89662	there
O	89663	89667	were
O	89668	89669	a
O	89670	89676	better
O	89677	89683	syntax
O	89684	89687	for
O	89688	89693	doing
O	89694	89698	this
O	89698	89699	,
O	89700	89701	e
O	89701	89702	.
O	89702	89703	g
O	89703	89704	.
O	89704	89705	,
O	89706	89707	/
O	89707	89708	/
O	89709	89713	Java
O	89714	89718	plus
O	89719	89725	pidgin
O	89726	89731	Scala
O	89732	89735	int
O	89735	89736	[
O	89736	89737	]
O	89738	89745	indexes
O	89746	89747	=
O	89748	89749	[
O	89749	89750	-
O	89750	89751	1
O	89751	89752	]
O	89753	89754	+
O	89754	89755	+
B-api_mention	89756	89765	IntStream
I-api_mention	89765	89766	.
I-api_mention	89766	89771	range
I-api_mention	89771	89772	(
I-api_mention	89772	89776	args
I-api_mention	89776	89777	)
I-api_mention	89778	89779	.
I-api_mention	89779	89785	filter
I-api_mention	89785	89786	(
I-api_mention	89786	89790	args
I-api_mention	89790	89791	)
O	89792	89793	+
O	89793	89794	+
O	89795	89796	[
O	89796	89801	input
B-api_mention	89801	89802	.
I-api_mention	89802	89806	size
I-api_mention	89806	89807	(
I-api_mention	89807	89811	args
I-api_mention	89811	89812	)
O	89812	89813	]
O	89813	89814	;
O	89815	89817	it
O	89818	89823	would
O	89824	89828	make
O	89829	89835	things
O	89836	89837	a
O	89838	89841	lot
O	89842	89846	less
O	89847	89856	cluttered
O	89856	89857	.

O	89858	89859	(
O	89859	89863	What
O	89864	89866	we
O	89867	89873	really
O	89874	89878	need
O	89879	89881	is
O	89882	89887	array
O	89888	89890	or
O	89891	89895	list
O	89896	89909	comprehension
O	89909	89910	.
O	89910	89911	)
O	89912	89916	Once
O	89917	89920	you
O	89921	89925	have
O	89926	89929	the
O	89930	89937	indexes
O	89937	89938	,
O	89939	89941	it
O	89941	89942	'
O	89942	89943	s
O	89944	89945	a
O	89946	89952	simple
O	89953	89959	matter
O	89960	89962	to
O	89963	89966	map
O	89967	89971	them
O	89972	89976	into
O	89977	89983	actual
O	89984	89992	sublists
O	89993	89996	and
O	89997	90004	collect
O	90005	90009	them
O	90010	90014	into
O	90015	90018	the
O	90019	90025	result
O	90026	90030	list
O	90030	90031	.

O	90032	90035	And
O	90036	90038	of
O	90039	90045	course
O	90046	90050	this
O	90051	90053	is
O	90054	90058	safe
O	90059	90063	when
O	90064	90067	run
O	90068	90070	in
O	90071	90079	parallel
O	90079	90080	.

O	90081	90087	UPDATE
O	90088	90092	2016
O	90092	90093	-
O	90093	90095	02
O	90095	90096	-
O	90096	90098	06
O	90099	90103	Here
O	90103	90104	'
O	90104	90105	s
O	90106	90107	a
O	90108	90113	nicer
O	90114	90117	way
O	90118	90120	to
O	90121	90127	create
O	90128	90131	the
O	90132	90137	array
O	90138	90140	of
O	90141	90148	sublist
O	90149	90156	indexes
O	90156	90157	.

O	90158	90160	It
O	90160	90161	'
O	90161	90162	s
O	90163	90168	based
O	90169	90171	on
O	90172	90175	the
O	90176	90180	same
O	90181	90191	principles
O	90191	90192	,
O	90193	90196	but
O	90197	90199	it
O	90200	90207	adjusts
O	90208	90211	the
O	90212	90217	index
O	90218	90223	range
O	90224	90227	and
O	90228	90232	adds
O	90233	90237	some
O	90238	90248	conditions
O	90249	90251	to
O	90252	90255	the
O	90256	90262	filter
O	90263	90265	to
O	90266	90271	avoid
O	90272	90278	having
O	90279	90281	to
O	90282	90293	concatenate
O	90294	90297	and
O	90298	90305	flatmap
O	90306	90309	the
O	90310	90317	indexes
O	90317	90318	.

O	90319	90320	#
O	90320	90323	pre

O	90325	90333	Question
O	90333	90334	-
O	90334	90342	28671903
O	90342	90343	,
O	90344	90350	answer
O	90350	90351	-
O	90351	90359	28672583

O	90360	90363	The
O	90364	90373	behaviour
O	90374	90376	is
O	90377	90378	(
O	90378	90386	somewhat
O	90386	90387	)
O	90388	90398	documented
O	90399	90401	in
O	90402	90405	the
O	90406	90413	javadoc
O	90414	90415	:
O	90416	90417	#
O	90417	90427	blockquote
O	90428	90432	What
O	90433	90437	this
O	90438	90443	means
O	90444	90446	in
O	90447	90455	practice
O	90455	90456	,
O	90457	90461	when
O	90462	90465	you
O	90466	90470	call
O	90471	90477	source
B-api_mention	90477	90478	.
I-api_mention	90478	90487	removeAll
I-api_mention	90487	90488	(
I-api_mention	90488	90492	args
I-api_mention	90492	90493	)
O	90493	90494	;
O	90495	90496	:
O	90497	90498	#
O	90498	90500	li
O	90501	90503	if
O	90504	90507	the
O	90508	90516	removals
O	90517	90527	collection
O	90528	90530	is
O	90531	90533	of
O	90534	90535	a
O	90536	90543	smaller
O	90544	90548	size
O	90549	90553	than
O	90554	90560	source
O	90561	90562	,
O	90563	90566	the
O	90567	90573	remove
O	90574	90580	method
O	90581	90583	of
B-api_mention	90584	90591	HashSet
O	90592	90594	is
O	90595	90601	called
O	90601	90602	,
O	90603	90608	which
O	90609	90611	is
O	90612	90616	fast
O	90616	90617	.

O	90618	90619	#
O	90619	90621	li
O	90622	90624	if
O	90625	90628	the
O	90629	90637	removals
O	90638	90648	collection
O	90649	90651	is
O	90652	90654	of
O	90655	90660	equal
O	90661	90663	or
O	90664	90670	larger
O	90671	90675	size
O	90676	90680	than
O	90681	90684	the
O	90685	90691	source
O	90692	90693	,
O	90694	90698	then
O	90699	90707	removals
B-api_mention	90707	90708	.
I-api_mention	90708	90716	contains
O	90717	90719	is
O	90720	90726	called
O	90726	90727	,
O	90728	90733	which
O	90734	90736	is
O	90737	90741	slow
O	90742	90745	for
O	90746	90748	an
B-api_mention	90749	90758	ArrayList
O	90758	90759	.

O	90760	90765	Quick
O	90766	90769	fix
O	90769	90770	:
B-api_mention	90771	90781	Collection
I-api_mention	90781	90782	<
I-api_mention	90782	90783	T
I-api_mention	90783	90784	>
O	90785	90793	removals
O	90794	90795	=
O	90796	90799	new
B-api_mention	90800	90807	HashSet
I-api_mention	90807	90808	<
I-api_mention	90808	90809	T
I-api_mention	90809	90810	>
I-api_mention	90810	90811	(
I-api_mention	90811	90815	args
I-api_mention	90815	90816	)
O	90816	90817	;
O	90818	90822	Note
O	90823	90827	that
O	90828	90833	there
O	90834	90836	is
O	90837	90839	an
O	90840	90844	open
O	90845	90848	bug
O	90849	90853	that
O	90854	90856	is
O	90857	90861	very
O	90862	90869	similar
O	90870	90872	to
O	90873	90877	what
O	90878	90881	you
O	90882	90890	describe
O	90890	90891	.

O	90892	90895	The
O	90896	90902	bottom
O	90903	90907	line
O	90908	90913	seems
O	90914	90916	to
O	90917	90919	be
O	90920	90924	that
O	90925	90927	it
O	90928	90930	is
O	90931	90939	probably
O	90940	90941	a
O	90942	90946	poor
O	90947	90953	choice
O	90954	90957	but
O	90958	90961	can
O	90961	90962	'
O	90962	90963	t
O	90964	90966	be
O	90967	90974	changed
O	90975	90982	because
O	90983	90985	it
O	90986	90988	is
O	90989	90999	documented
O	91000	91002	in
O	91003	91006	the
O	91007	91014	javadoc
O	91014	91015	.

O	91016	91019	For
O	91020	91029	reference
O	91029	91030	,
O	91031	91035	this
O	91036	91038	is
O	91039	91042	the
O	91043	91047	code
O	91048	91050	of
B-api_mention	91051	91060	removeAll
O	91061	91062	(
O	91062	91064	in
O	91065	91069	Java
O	91070	91071	8
O	91072	91073	-
O	91074	91079	haven
O	91079	91080	'
O	91080	91081	t
O	91082	91089	checked
O	91090	91095	other
O	91096	91104	versions
O	91104	91105	)
O	91105	91106	:
O	91107	91108	#
O	91108	91111	pre

O	91113	91121	Question
O	91121	91122	-
O	91122	91130	28319064
O	91130	91131	,
O	91132	91138	answer
O	91138	91139	-
O	91139	91147	28319148

O	91148	91149	I
O	91150	91156	prefer
O	91157	91160	the
O	91161	91167	second
O	91168	91171	way
O	91171	91172	.

O	91173	91177	When
O	91178	91181	you
O	91182	91185	use
O	91186	91189	the
O	91190	91195	first
O	91196	91199	way
O	91199	91200	,
O	91201	91203	if
O	91204	91207	you
O	91208	91214	decide
O	91215	91217	to
O	91218	91221	use
O	91222	91223	a
O	91224	91232	parallel
O	91233	91239	stream
O	91240	91242	to
O	91243	91250	improve
O	91251	91262	performance
O	91262	91263	,
O	91264	91267	you
O	91267	91268	'
O	91268	91270	ll
O	91271	91275	have
O	91276	91278	no
O	91279	91286	control
O	91287	91291	over
O	91292	91295	the
O	91296	91301	order
O	91302	91304	in
O	91305	91310	which
O	91311	91314	the
O	91315	91323	elements
O	91324	91328	will
O	91329	91331	be
O	91332	91337	added
O	91338	91340	to
O	91341	91344	the
O	91345	91351	output
O	91352	91356	list
O	91357	91359	by
B-api_mention	91360	91367	forEach
O	91368	91369	.

O	91370	91374	When
O	91375	91378	you
O	91379	91382	use
B-api_mention	91383	91389	toList
O	91390	91391	,
O	91392	91395	the
O	91396	91403	Streams
O	91404	91407	API
O	91408	91412	will
O	91413	91421	preserve
O	91422	91425	the
O	91426	91431	order
O	91432	91436	even
O	91437	91439	if
O	91440	91443	you
O	91444	91447	use
O	91448	91449	a
O	91450	91458	parallel
O	91459	91465	stream
O	91465	91466	.

O	91468	91476	Question
O	91476	91477	-
O	91477	91485	28319064
O	91485	91486	,
O	91487	91493	answer
O	91493	91494	-
O	91494	91502	28319221

O	91503	91506	Don
O	91506	91507	'
O	91507	91508	t
O	91509	91514	worry
O	91515	91520	about
O	91521	91524	any
O	91525	91536	performance
O	91537	91548	differences
O	91548	91549	,
O	91550	91554	they
O	91554	91555	'
O	91555	91557	re
O	91558	91563	going
O	91564	91566	to
O	91567	91569	be
O	91570	91577	minimal
O	91578	91580	in
O	91581	91585	this
O	91586	91590	case
O	91591	91599	normally
O	91599	91600	.

O	91601	91607	Method
O	91608	91609	2
O	91610	91612	is
O	91613	91623	preferable
O	91624	91631	because
O	91632	91633	#
O	91633	91635	li
O	91636	91638	it
O	91639	91644	doesn
O	91644	91645	'
O	91645	91646	t
O	91647	91654	require
O	91655	91663	mutating
O	91664	91665	a
O	91666	91676	collection
O	91677	91681	that
O	91682	91688	exists
O	91689	91696	outside
O	91697	91700	the
O	91701	91707	lambda
O	91708	91718	expression
O	91718	91719	,
O	91720	91721	#
O	91721	91723	li
O	91724	91726	it
O	91726	91727	'
O	91727	91728	s
O	91729	91733	more
O	91734	91742	readable
O	91743	91750	because
O	91751	91754	the
O	91755	91764	different
O	91765	91770	steps
O	91771	91775	that
O	91776	91779	are
O	91780	91789	performed
O	91790	91792	in
O	91793	91796	the
O	91797	91807	collection
O	91808	91816	pipeline
O	91817	91820	are
O	91821	91828	written
O	91829	91841	sequentially
O	91842	91843	(
O	91843	91848	first
O	91849	91850	a
O	91851	91857	filter
O	91858	91867	operation
O	91867	91868	,
O	91869	91873	then
O	91874	91875	a
O	91876	91879	map
O	91880	91889	operation
O	91889	91890	,
O	91891	91895	then
O	91896	91906	collecting
O	91907	91910	the
O	91911	91917	result
O	91917	91918	)
O	91918	91919	,
O	91920	91921	(
O	91921	91924	for
O	91925	91929	more
O	91930	91934	info
O	91935	91937	on
O	91938	91941	the
O	91942	91950	benefits
O	91951	91953	of
O	91954	91964	collection
O	91965	91974	pipelines
O	91974	91975	,
O	91976	91979	see
O	91980	91986	Martin
O	91987	91993	Fowler
O	91993	91994	'
O	91994	91995	s
O	91996	92005	excellent
O	92006	92013	article
O	92014	92015	)
O	92016	92017	#
O	92017	92019	li
O	92020	92023	you
O	92024	92027	can
O	92028	92034	easily
O	92035	92041	change
O	92042	92045	the
O	92046	92049	way
O	92050	92056	values
O	92057	92060	are
O	92061	92070	collected
O	92071	92073	by
O	92074	92083	replacing
O	92084	92087	the
B-api_mention	92088	92097	Collector
O	92098	92102	that
O	92103	92105	is
O	92106	92110	used
O	92110	92111	.

O	92112	92114	In
O	92115	92119	some
O	92120	92125	cases
O	92126	92129	you
O	92130	92133	may
O	92134	92138	need
O	92139	92141	to
O	92142	92147	write
O	92148	92152	your
O	92153	92156	own
B-api_mention	92157	92166	Collector
O	92167	92168	,
O	92169	92172	but
O	92173	92177	then
O	92178	92181	the
O	92182	92189	benefit
O	92190	92192	is
O	92193	92197	that
O	92198	92201	you
O	92202	92205	can
O	92206	92212	easily
O	92213	92218	reuse
O	92219	92223	that
O	92223	92224	.

O	92226	92234	Question
O	92234	92235	-
O	92235	92243	28319064
O	92243	92244	,
O	92245	92251	answer
O	92251	92252	-
O	92252	92260	28323553

O	92261	92264	One
O	92265	92267	of
O	92268	92271	the
O	92272	92276	main
O	92277	92285	benefits
O	92286	92288	of
O	92289	92294	using
O	92295	92302	streams
O	92303	92305	is
O	92306	92310	that
O	92311	92313	it
O	92314	92319	gives
O	92320	92323	the
O	92324	92331	ability
O	92332	92334	to
O	92335	92342	process
O	92343	92347	data
O	92348	92350	in
O	92351	92352	a
O	92353	92364	declarative
O	92365	92368	way
O	92368	92369	,
O	92370	92374	that
O	92375	92377	is
O	92377	92378	,
O	92379	92384	using
O	92385	92386	a
O	92387	92397	functional
O	92398	92403	style
O	92404	92406	of
O	92407	92418	programming
O	92418	92419	.

O	92420	92422	It
O	92423	92427	also
O	92428	92433	gives
O	92434	92439	multi
O	92439	92440	-
O	92440	92449	threading
O	92450	92460	capability
O	92461	92464	for
O	92465	92469	free
O	92470	92477	meaning
O	92478	92483	there
O	92484	92486	is
O	92487	92489	no
O	92490	92494	need
O	92495	92497	to
O	92498	92503	write
O	92504	92507	any
O	92508	92513	extra
O	92514	92519	multi
O	92519	92520	-
O	92520	92528	threaded
O	92529	92533	code
O	92534	92536	to
O	92537	92541	make
O	92542	92546	your
O	92547	92553	stream
O	92554	92564	concurrent
O	92564	92565	.

O	92566	92574	Assuming
O	92575	92578	the
O	92579	92585	reason
O	92586	92589	you
O	92590	92593	are
O	92594	92603	exploring
O	92604	92608	this
O	92609	92614	style
O	92615	92617	of
O	92618	92629	programming
O	92630	92632	is
O	92633	92637	that
O	92638	92641	you
O	92642	92646	want
O	92647	92649	to
O	92650	92657	exploit
O	92658	92663	these
O	92664	92672	benefits
O	92673	92677	then
O	92678	92682	your
O	92683	92688	first
O	92689	92693	code
O	92694	92700	sample
O	92701	92703	is
O	92704	92715	potentially
O	92716	92719	not
O	92720	92730	functional
O	92731	92736	since
O	92737	92740	the
O	92741	92748	foreach
O	92749	92755	method
O	92756	92758	is
O	92759	92766	classed
O	92767	92769	as
O	92770	92775	being
O	92776	92784	terminal
O	92785	92786	(
O	92786	92793	meaning
O	92794	92798	that
O	92799	92801	it
O	92802	92805	can
O	92806	92813	produce
O	92814	92818	side
O	92818	92819	-
O	92819	92826	effects
O	92826	92827	)
O	92827	92828	.

O	92829	92832	The
O	92833	92839	second
O	92840	92843	way
O	92844	92846	is
O	92847	92856	preferred
O	92857	92861	from
O	92862	92872	functional
O	92873	92884	programming
O	92885	92890	point
O	92891	92893	of
O	92894	92898	view
O	92899	92904	since
O	92905	92908	the
O	92909	92912	map
O	92913	92921	function
O	92922	92925	can
O	92926	92932	accept
O	92933	92942	stateless
O	92943	92949	lambda
O	92950	92959	functions
O	92959	92960	.

O	92961	92965	More
O	92966	92976	explicitly
O	92976	92977	,
O	92978	92981	the
O	92982	92988	lambda
O	92989	92995	passed
O	92996	92998	to
O	92999	93002	the
O	93003	93006	map
O	93007	93015	function
O	93016	93022	should
O	93023	93025	be
O	93026	93027	#
O	93027	93029	li
O	93030	93033	Non
O	93033	93034	-
O	93034	93045	interfering
O	93045	93046	,
O	93047	93054	meaning
O	93055	93059	that
O	93060	93063	the
O	93064	93072	function
O	93073	93079	should
O	93080	93083	not
O	93084	93089	alter
O	93090	93093	the
O	93094	93100	source
O	93101	93103	of
O	93104	93107	the
O	93108	93114	stream
O	93115	93117	if
O	93118	93120	it
O	93121	93123	is
O	93124	93127	non
O	93127	93128	-
O	93128	93138	concurrent
O	93139	93140	(
O	93140	93141	e
O	93141	93142	.
O	93142	93143	g
O	93143	93144	.
B-api_mention	93145	93154	ArrayList
O	93155	93156	)
O	93156	93157	.

O	93158	93159	#
O	93159	93161	li
O	93162	93171	Stateless
O	93172	93174	to
O	93175	93180	avoid
O	93181	93191	unexpected
O	93192	93199	results
O	93200	93204	when
O	93205	93210	doing
O	93211	93219	parallel
O	93220	93230	processing
O	93231	93232	(
O	93232	93238	caused
O	93239	93241	by
O	93242	93248	thread
O	93249	93259	scheduling
O	93260	93271	differences
O	93271	93272	)
O	93272	93273	.

O	93274	93281	Another
O	93282	93289	benefit
O	93290	93294	with
O	93295	93298	the
O	93299	93305	second
O	93306	93314	approach
O	93315	93317	is
O	93318	93320	if
O	93321	93324	the
O	93325	93331	stream
O	93332	93334	is
O	93335	93343	parallel
O	93344	93347	and
O	93348	93351	the
O	93352	93361	collector
O	93362	93364	is
O	93365	93375	concurrent
O	93376	93379	and
O	93380	93389	unordered
O	93390	93394	then
O	93395	93400	these
O	93401	93416	characteristics
O	93417	93420	can
O	93421	93428	provide
O	93429	93435	useful
O	93436	93441	hints
O	93442	93444	to
O	93445	93448	the
O	93449	93458	reduction
O	93459	93468	operation
O	93469	93471	to
O	93472	93474	do
O	93475	93478	the
O	93479	93489	collecting
O	93490	93502	concurrently
O	93502	93503	.

O	93505	93513	Question
O	93513	93514	-
O	93514	93522	28319064
O	93522	93523	,
O	93524	93530	answer
O	93530	93531	-
O	93531	93539	29000802

O	93540	93545	There
O	93546	93548	is
O	93549	93550	a
O	93551	93556	third
O	93557	93563	option
O	93564	93565	-
O	93566	93571	using
O	93572	93578	stream
O	93578	93579	(
O	93579	93583	args
O	93583	93584	)
B-api_mention	93584	93585	.
I-api_mention	93585	93592	toArray
I-api_mention	93592	93593	(
I-api_mention	93593	93597	args
I-api_mention	93597	93598	)
O	93599	93600	-
O	93601	93604	see
O	93605	93613	comments
O	93614	93619	under
O	93620	93623	why
O	93624	93628	didn
O	93628	93629	'
O	93629	93630	t
O	93631	93637	stream
O	93638	93642	have
O	93643	93644	a
B-api_mention	93645	93651	toList
O	93652	93658	method
O	93659	93660	.

O	93661	93663	It
O	93664	93669	turns
O	93670	93673	out
O	93674	93676	to
O	93677	93679	be
O	93680	93686	slower
O	93687	93691	than
B-api_mention	93692	93699	forEach
I-api_mention	93699	93700	(
I-api_mention	93700	93701	)
O	93702	93704	or
B-api_mention	93705	93712	collect
I-api_mention	93712	93713	(
I-api_mention	93713	93714	)
O	93714	93715	,
O	93716	93719	and
O	93720	93724	less
O	93725	93735	expressive
O	93735	93736	.

O	93737	93739	It
O	93740	93745	might
O	93746	93748	be
O	93749	93758	optimised
O	93759	93761	in
O	93762	93767	later
O	93768	93771	JDK
O	93772	93778	builds
O	93778	93779	,
O	93780	93782	so
O	93783	93789	adding
O	93790	93792	it
O	93793	93797	here
O	93798	93802	just
O	93803	93805	in
O	93806	93810	case
O	93810	93811	.
O	93812	93820	assuming
B-api_mention	93821	93825	List
I-api_mention	93825	93826	<
I-api_mention	93826	93827	T
I-api_mention	93827	93828	>
O	93829	93840	myFinalList
O	93841	93842	=
B-api_mention	93843	93849	Arrays
I-api_mention	93849	93850	.
I-api_mention	93850	93856	asList
I-api_mention	93856	93857	(
I-api_mention	93857	93861	args
I-api_mention	93861	93862	)
O	93862	93863	;
O	93864	93868	with
O	93869	93870	a
O	93871	93876	micro
O	93876	93877	-
O	93877	93882	micro
O	93883	93892	benchmark
O	93892	93893	,
O	93894	93896	1M
O	93897	93904	entries
O	93904	93905	,
O	93906	93908	20
O	93908	93909	%
O	93910	93915	nulls
O	93916	93919	and
O	93920	93926	simple
O	93927	93936	transform
O	93937	93939	in
O	93940	93951	doSomething
O	93951	93952	(
O	93952	93953	)
O	93954	93955	#
O	93955	93958	pre
O	93959	93962	the
O	93963	93970	results
O	93971	93974	are
O	93975	93983	parallel
O	93983	93984	:
O	93985	93986	#
O	93986	93989	pre
O	93990	94000	sequential
O	94000	94001	:
O	94002	94003	#
O	94003	94006	pre
O	94007	94015	parallel
O	94016	94023	without
O	94024	94029	nulls
O	94030	94033	and
O	94034	94040	filter
O	94041	94042	(
O	94042	94044	so
O	94045	94048	the
O	94049	94055	stream
O	94056	94058	is
O	94059	94064	SIZED
O	94065	94066	)
O	94066	94067	:
B-api_mention	94068	94076	toArrays
O	94077	94080	has
O	94081	94084	the
O	94085	94089	best
O	94090	94101	performance
O	94102	94104	in
O	94105	94109	such
O	94110	94114	case
O	94114	94115	,
O	94116	94119	and
B-api_mention	94120	94121	.
I-api_mention	94121	94128	forEach
I-api_mention	94128	94129	(
I-api_mention	94129	94133	args
I-api_mention	94133	94134	)
O	94135	94140	fails
O	94141	94145	with
O	94146	94147	"
O	94147	94163	indexOutOfBounds
O	94163	94164	"
O	94165	94167	on
O	94168	94171	the
O	94172	94181	recepient
B-api_mention	94182	94191	ArrayList
O	94191	94192	,
O	94193	94196	had
O	94197	94199	to
O	94200	94207	replace
O	94208	94212	with
B-api_mention	94213	94214	.
I-api_mention	94214	94228	forEachOrdered
I-api_mention	94228	94229	(
I-api_mention	94229	94233	args
I-api_mention	94233	94234	)
O	94235	94236	#
O	94236	94239	pre

O	94241	94249	Question
O	94249	94250	-
O	94250	94258	30888581
O	94258	94259	,
O	94260	94266	answer
O	94266	94267	-
O	94267	94275	30897102

O	94276	94280	Once
O	94281	94286	given
O	94287	94291	more
O	94292	94299	thought
O	94300	94302	In
O	94303	94312	hindsight
O	94313	94315	it
O	94316	94322	sounds
O	94323	94327	like
O	94328	94332	they
O	94333	94337	were
O	94338	94345	looking
O	94346	94349	for
O	94350	94353	the
O	94354	94361	execute
O	94362	94368	around
O	94369	94376	pattern
O	94377	94378	.

O	94379	94383	They
O	94383	94384	'
O	94384	94386	re
O	94387	94394	usually
O	94395	94399	used
O	94400	94402	to
O	94403	94405	do
O	94406	94412	things
O	94413	94417	like
O	94418	94425	enforce
O	94426	94433	closing
O	94434	94436	of
O	94437	94444	streams
O	94444	94445	.

O	94446	94450	This
O	94451	94453	is
O	94454	94458	also
O	94459	94463	more
O	94464	94472	relevant
O	94473	94476	due
O	94477	94479	to
O	94480	94484	this
O	94485	94489	line
O	94489	94490	:
O	94491	94492	#
O	94492	94502	blockquote
O	94503	94506	The
O	94507	94511	idea
O	94512	94514	is
O	94515	94518	you
O	94519	94523	give
O	94524	94527	the
O	94528	94533	thing
O	94534	94538	that
O	94539	94543	does
O	94544	94547	the
O	94548	94549	"
O	94549	94558	executing
O	94559	94565	around
O	94565	94566	"
O	94567	94571	some
O	94572	94577	class
O	94578	94580	to
O	94581	94583	do
O	94584	94594	somethings
O	94595	94599	with
O	94599	94600	.

O	94601	94604	You
O	94604	94605	'
O	94605	94607	ll
O	94608	94616	probably
O	94617	94620	use
B-api_mention	94621	94629	Runnable
O	94630	94633	but
O	94634	94636	it
O	94636	94637	'
O	94637	94638	s
O	94639	94642	not
O	94643	94652	necessary
O	94652	94653	.

O	94654	94655	(
B-api_mention	94656	94664	Runnable
O	94665	94670	makes
O	94671	94674	the
O	94675	94679	most
O	94680	94685	sense
O	94686	94689	and
O	94690	94693	you
O	94693	94694	'
O	94694	94696	ll
O	94697	94700	see
O	94701	94704	why
O	94705	94709	soon
O	94709	94710	.
O	94710	94711	)
O	94712	94714	In
O	94715	94719	your
B-api_mention	94720	94729	StopWatch
O	94730	94735	class
O	94736	94739	add
O	94740	94744	some
O	94745	94751	method
O	94752	94756	like
O	94757	94761	this
O	94762	94763	#
O	94763	94766	pre
O	94767	94770	You
O	94771	94776	would
O	94777	94781	then
O	94782	94786	call
O	94787	94789	it
O	94790	94794	like
O	94795	94799	this
O	94800	94801	#
O	94801	94804	pre
O	94805	94809	This
O	94810	94815	makes
O	94816	94818	it
O	94819	94823	fool
O	94824	94829	proof
O	94829	94830	.

O	94831	94834	You
O	94835	94838	don
O	94838	94839	'
O	94839	94840	t
O	94841	94845	have
O	94846	94848	to
O	94849	94854	worry
O	94855	94860	about
O	94861	94869	handling
O	94870	94874	stop
O	94875	94881	before
O	94882	94887	start
O	94888	94890	or
O	94891	94897	people
O	94898	94908	forgetting
O	94909	94911	to
O	94912	94916	call
O	94917	94920	one
O	94921	94924	and
O	94925	94928	not
O	94929	94932	the
O	94933	94938	other
O	94938	94939	,
O	94940	94943	etc
O	94943	94944	.

O	94945	94948	The
O	94949	94955	reason
B-api_mention	94956	94964	Runnable
O	94965	94967	is
O	94968	94972	nice
O	94973	94975	is
O	94976	94983	because
O	94984	94985	#
O	94985	94987	li
O	94988	94996	Standard
O	94997	95001	java
O	95002	95007	class
O	95007	95008	,
O	95009	95012	not
O	95013	95017	your
O	95018	95021	own
O	95022	95024	or
O	95025	95030	third
O	95031	95036	party
O	95037	95038	#
O	95038	95040	li
O	95041	95044	End
O	95045	95050	users
O	95051	95054	can
O	95055	95058	put
O	95059	95067	whatever
O	95068	95072	they
O	95073	95077	need
O	95078	95080	in
O	95081	95084	the
B-api_mention	95085	95093	Runnable
O	95094	95096	to
O	95097	95099	be
O	95100	95104	done
O	95104	95105	.

O	95106	95107	(
O	95107	95109	If
O	95110	95113	you
O	95114	95118	were
O	95119	95124	using
O	95125	95127	it
O	95128	95130	to
O	95131	95138	enforce
O	95139	95145	stream
O	95146	95153	closing
O	95154	95158	then
O	95159	95162	you
O	95163	95168	could
O	95169	95172	put
O	95173	95176	the
O	95177	95184	actions
O	95185	95189	that
O	95190	95194	need
O	95195	95197	to
O	95198	95200	be
O	95201	95205	done
O	95206	95210	with
O	95211	95212	a
O	95213	95221	database
O	95222	95232	connection
O	95233	95239	inside
O	95240	95242	so
O	95243	95246	the
O	95247	95250	end
O	95251	95255	user
O	95256	95261	doesn
O	95261	95262	'
O	95262	95263	t
O	95264	95268	need
O	95269	95271	to
O	95272	95277	worry
O	95278	95283	about
O	95284	95287	how
O	95288	95290	to
O	95291	95295	open
O	95296	95299	and
O	95300	95305	close
O	95306	95308	it
O	95309	95312	and
O	95313	95316	you
O	95317	95331	simultaneously
O	95332	95337	force
O	95338	95342	them
O	95343	95345	to
O	95346	95351	close
O	95352	95354	it
O	95355	95363	properly
O	95363	95364	.
O	95364	95365	)
O	95366	95368	If
O	95369	95372	you
O	95373	95379	wanted
O	95379	95380	,
O	95381	95384	you
O	95385	95390	could
O	95391	95395	make
O	95396	95400	some
B-api_mention	95401	95417	StopWatchWrapper
O	95418	95425	instead
O	95426	95431	leave
B-api_mention	95432	95441	StopWatch
O	95442	95452	unmodified
O	95452	95453	.

O	95454	95457	You
O	95458	95463	could
O	95464	95468	also
O	95469	95473	make
O	95474	95487	measureAction
O	95487	95488	(
O	95488	95492	args
O	95492	95493	)
O	95494	95497	not
O	95498	95504	return
O	95505	95506	a
O	95507	95511	time
O	95512	95515	and
O	95516	95520	make
B-api_mention	95521	95528	getTime
I-api_mention	95528	95529	(
I-api_mention	95529	95533	args
I-api_mention	95533	95534	)
O	95535	95541	public
O	95542	95549	instead
O	95549	95550	.

O	95551	95554	The
O	95555	95559	Java
O	95560	95561	8
O	95562	95565	way
O	95566	95568	to
O	95569	95576	calling
O	95577	95579	it
O	95580	95582	is
O	95583	95587	even
O	95588	95595	simpler
O	95596	95597	#
O	95597	95600	pre
O	95601	95602	#
O	95602	95612	blockquote
O	95613	95621	Original
O	95622	95628	answer
O	95629	95630	#
O	95630	95640	blockquote
O	95641	95643	To
O	95644	95646	me
O	95647	95656	something
O	95657	95661	like
O	95662	95666	this
O	95667	95672	seems
O	95673	95675	to
O	95676	95678	be
O	95679	95683	good
O	95683	95684	.

O	95685	95686	#
O	95686	95689	pre
O	95690	95693	The
O	95694	95700	reason
O	95701	95702	I
O	95703	95710	believe
O	95711	95715	this
O	95716	95718	to
O	95719	95721	be
O	95722	95726	good
O	95727	95729	is
O	95730	95733	the
O	95734	95743	recording
O	95744	95746	is
O	95747	95753	during
O	95754	95760	object
O	95761	95769	creation
O	95770	95772	so
O	95773	95775	it
O	95776	95779	can
O	95779	95780	'
O	95780	95781	t
O	95782	95784	be
O	95785	95794	forgotten
O	95795	95797	or
O	95798	95802	done
O	95803	95806	out
O	95807	95809	of
O	95810	95815	order
O	95816	95817	(
O	95817	95820	can
O	95820	95821	'
O	95821	95822	t
O	95823	95827	call
B-api_mention	95828	95832	stop
I-api_mention	95832	95833	(
I-api_mention	95833	95837	args
I-api_mention	95837	95838	)
O	95839	95845	method
O	95846	95848	if
O	95849	95851	it
O	95852	95857	doesn
O	95857	95858	'
O	95858	95859	t
O	95860	95865	exist
O	95865	95866	)
O	95866	95867	.

O	95868	95871	One
O	95872	95876	flaw
O	95877	95879	is
O	95880	95888	probably
O	95889	95892	the
O	95893	95899	naming
O	95900	95902	of
B-api_mention	95903	95907	stop
I-api_mention	95907	95908	(
I-api_mention	95908	95912	args
I-api_mention	95912	95913	)
O	95914	95915	.

O	95916	95918	At
O	95919	95924	first
O	95925	95926	I
O	95927	95934	thought
O	95935	95940	maybe
O	95941	95944	lap
O	95944	95945	(
O	95945	95949	args
O	95949	95950	)
O	95951	95954	but
O	95955	95959	that
O	95960	95967	usually
O	95968	95975	implies
O	95976	95977	a
O	95978	95988	restarting
O	95989	95991	or
O	95992	95996	some
O	95997	96001	sort
O	96002	96003	(
O	96003	96005	or
O	96006	96008	at
O	96009	96014	least
O	96015	96024	recording
O	96025	96030	since
O	96031	96035	last
O	96036	96039	lap
O	96039	96040	/
O	96040	96045	start
O	96045	96046	)
O	96046	96047	.

O	96048	96055	Perhaps
O	96056	96060	read
O	96060	96061	(
O	96061	96065	args
O	96065	96066	)
O	96067	96072	would
O	96073	96075	be
O	96076	96082	better
O	96082	96083	?

O	96084	96088	This
O	96089	96095	mimics
O	96096	96099	the
O	96100	96106	action
O	96107	96109	of
O	96110	96117	looking
O	96118	96120	at
O	96121	96124	the
O	96125	96129	time
O	96130	96132	on
O	96133	96134	a
O	96135	96139	stop
O	96140	96145	watch
O	96145	96146	.

O	96147	96148	I
O	96149	96154	chose
B-api_mention	96155	96159	stop
I-api_mention	96159	96160	(
I-api_mention	96160	96164	args
I-api_mention	96164	96165	)
O	96166	96168	to
O	96169	96173	keep
O	96174	96176	it
O	96177	96184	similar
O	96185	96187	to
O	96188	96191	the
O	96192	96200	original
O	96201	96206	class
O	96206	96207	.

O	96208	96211	The
O	96212	96216	only
O	96217	96222	thing
O	96223	96224	I
O	96224	96225	'
O	96225	96226	m
O	96227	96230	not
O	96231	96234	100
O	96234	96235	%
O	96236	96240	sure
O	96241	96246	about
O	96247	96249	is
O	96250	96253	how
O	96254	96256	to
O	96257	96260	get
O	96261	96264	the
O	96265	96269	time
O	96269	96270	.

O	96271	96273	To
O	96274	96276	be
O	96277	96283	honest
O	96284	96288	that
O	96289	96294	seems
O	96295	96297	to
O	96298	96300	be
O	96301	96302	a
O	96303	96307	more
O	96308	96313	minor
O	96314	96320	detail
O	96320	96321	.

O	96322	96324	As
O	96325	96329	long
O	96330	96332	as
O	96333	96337	both
O	96338	96339	.
O	96339	96340	.
O	96340	96341	.
O	96342	96344	in
O	96345	96348	the
O	96349	96354	above
O	96355	96359	code
O	96360	96366	obtain
O	96367	96374	current
O	96375	96379	time
O	96380	96383	the
O	96384	96388	same
O	96389	96392	way
O	96393	96395	it
O	96396	96402	should
O	96403	96405	be
O	96406	96410	fine
O	96410	96411	.

O	96413	96421	Question
O	96421	96422	-
O	96422	96430	27908213
O	96430	96431	,
O	96432	96438	answer
O	96438	96439	-
O	96439	96447	27908294

O	96448	96451	The
O	96452	96458	Oracle
O	96459	96472	documentation
O	96473	96478	about
B-api_mention	96479	96483	Enum
O	96484	96488	says
O	96489	96490	(
O	96490	96495	first
O	96496	96500	line
O	96500	96501	)
O	96501	96502	:
O	96503	96504	#
O	96504	96514	blockquote
O	96515	96517	If
O	96518	96522	this
O	96523	96525	is
O	96526	96530	true
O	96531	96535	then
O	96535	96536	,
O	96537	96540	yes
O	96540	96541	,
O	96542	96546	your
O	96547	96552	enum1
B-api_mention	96552	96553	.
I-api_mention	96553	96557	name
I-api_mention	96557	96558	(
I-api_mention	96558	96562	args
I-api_mention	96562	96563	)
O	96564	96565	=
O	96565	96566	=
O	96567	96572	enum2
B-api_mention	96572	96573	.
I-api_mention	96573	96577	name
I-api_mention	96577	96578	(
I-api_mention	96578	96582	args
I-api_mention	96582	96583	)
O	96584	96586	is
O	96587	96597	guaranteed
O	96598	96600	to
O	96601	96603	be
O	96604	96608	true
O	96609	96611	if
O	96612	96615	the
O	96616	96621	names
O	96622	96625	are
O	96626	96629	the
O	96630	96634	same
O	96634	96635	.

O	96636	96640	Also
O	96640	96641	,
O	96642	96644	in
O	96645	96648	the
O	96649	96655	method
B-api_mention	96656	96660	name
I-api_mention	96660	96661	(
I-api_mention	96661	96665	args
I-api_mention	96665	96666	)
O	96667	96674	javadoc
O	96674	96675	:
O	96676	96677	#
O	96677	96687	blockquote
O	96688	96691	For
O	96692	96699	example
O	96699	96700	,
O	96701	96703	if
O	96704	96707	you
O	96708	96711	had
O	96712	96715	two
O	96716	96721	enums
O	96721	96722	,
O	96723	96727	Days
O	96728	96731	and
O	96732	96738	MyDays
O	96739	96740	,
O	96741	96746	where
O	96747	96753	SUNDAY
O	96754	96756	is
O	96757	96758	a
O	96759	96765	common
O	96766	96771	value
O	96771	96772	,
O	96773	96774	=
O	96774	96775	=
O	96776	96783	between
O	96784	96787	the
O	96788	96792	enum
O	96793	96799	object
O	96800	96806	values
O	96806	96807	,
O	96808	96814	SUNDAY
O	96815	96819	will
O	96820	96826	return
O	96827	96831	true
O	96832	96834	as
O	96835	96838	you
O	96839	96842	are
O	96843	96852	comparing
O	96853	96856	two
O	96857	96864	strings
O	96865	96866	-
O	96867	96870	see
O	96871	96874	the
O	96875	96882	working
O	96883	96890	example
O	96891	96893	in
O	96894	96895	#
O	96895	96896	a
O	96897	96898	.

O	96899	96900	#
O	96900	96903	pre

O	96905	96913	Question
O	96913	96914	-
O	96914	96922	27908213
O	96922	96923	,
O	96924	96930	answer
O	96930	96931	-
O	96931	96939	27908302

O	96940	96944	With
O	96945	96952	strings
O	96953	96956	you
O	96956	96957	'
O	96957	96959	re
O	96960	96965	going
O	96966	96968	to
O	96969	96973	want
O	96974	96976	to
O	96977	96980	use
O	96981	96984	the
B-api_mention	96985	96991	equals
O	96992	96998	method
O	96999	97001	of
B-api_mention	97002	97009	Strings
O	97009	97010	.

O	97011	97015	That
O	97016	97021	aside
O	97021	97022	,
O	97023	97026	you
O	97027	97034	already
O	97035	97039	have
O	97040	97043	the
O	97044	97048	enum
O	97049	97053	that
O	97054	97057	you
O	97058	97063	could
O	97064	97071	compare
O	97072	97076	with
O	97077	97080	the
O	97081	97089	equality
O	97090	97098	operator
O	97098	97099	.

O	97100	97105	Under
O	97106	97110	what
O	97111	97119	scenario
O	97120	97125	would
O	97126	97130	this
O	97131	97136	arise
O	97136	97137	?

O	97138	97142	That
O	97143	97148	being
O	97149	97153	said
O	97153	97154	,
O	97155	97158	yes
O	97158	97159	,
O	97160	97163	the
B-api_mention	97164	97165	.
I-api_mention	97165	97171	equals
O	97172	97178	method
O	97179	97183	will
O	97184	97190	return
O	97191	97195	true
O	97196	97198	if
O	97199	97203	they
O	97204	97207	are
O	97208	97211	the
O	97212	97216	same
O	97216	97217	.

O	97218	97219	I
O	97219	97220	'
O	97220	97221	m
O	97222	97225	not
O	97226	97230	sure
O	97231	97236	about
O	97237	97245	equality
O	97246	97254	operator
O	97254	97255	,
O	97256	97259	and
O	97260	97267	without
O	97268	97275	looking
O	97276	97278	it
O	97279	97281	up
O	97281	97282	,
O	97283	97284	I
O	97285	97288	can
O	97289	97293	tell
O	97294	97297	you
O	97298	97302	that
O	97303	97305	it
O	97305	97306	'
O	97306	97307	s
O	97308	97312	poor
O	97313	97324	programming
O	97325	97327	to
O	97328	97331	use
O	97332	97334	it
O	97335	97337	if
O	97338	97340	it
O	97341	97343	is
O	97343	97344	.

O	97346	97354	Question
O	97354	97355	-
O	97355	97363	27908213
O	97363	97364	,
O	97365	97371	answer
O	97371	97372	-
O	97372	97380	27908402

O	97381	97389	Although
O	97390	97395	there
O	97396	97398	is
O	97399	97401	no
O	97402	97410	explicit
O	97411	97420	guarantee
O	97421	97423	of
O	97424	97428	this
O	97428	97429	,
O	97430	97433	the
O	97434	97437	end
O	97438	97444	result
O	97445	97447	is
O	97448	97453	bound
O	97454	97456	to
O	97457	97459	be
O	97460	97464	such
O	97465	97469	that
O	97470	97473	the
O	97474	97484	comparison
O	97485	97491	always
O	97492	97500	succeeds
O	97501	97504	for
O	97505	97509	enum
O	97510	97519	constants
O	97520	97524	with
O	97525	97534	identical
O	97535	97540	names
O	97540	97541	:
O	97542	97543	#
O	97543	97546	pre
O	97547	97550	The
O	97551	97557	reason
O	97558	97561	for
O	97562	97566	this
O	97567	97569	is
O	97570	97574	that
O	97575	97579	Java
O	97580	97588	compiler
O	97589	97599	constructs
O	97600	97610	subclasses
O	97611	97613	of
B-api_mention	97614	97618	Enum
O	97619	97621	in
O	97622	97626	such
O	97627	97628	a
O	97629	97632	way
O	97633	97637	that
O	97638	97642	they
O	97643	97646	end
O	97647	97649	up
O	97650	97657	calling
B-api_mention	97658	97662	Enum
O	97663	97664	'
O	97664	97665	s
O	97666	97670	sole
O	97671	97680	protected
O	97681	97692	constructor
O	97692	97693	,
O	97694	97701	passing
O	97702	97704	it
O	97705	97708	the
O	97709	97713	name
O	97714	97716	of
O	97717	97721	enum
O	97722	97727	value
O	97727	97728	:
O	97729	97738	protected
B-api_mention	97739	97743	Enum
I-api_mention	97743	97744	(
I-api_mention	97744	97748	args
I-api_mention	97748	97749	)
O	97749	97750	;
O	97751	97754	The
O	97755	97759	name
O	97760	97762	is
O	97763	97771	embedded
O	97772	97776	into
O	97777	97780	the
O	97781	97790	generated
O	97791	97795	code
O	97796	97798	in
O	97799	97802	the
O	97803	97807	form
O	97808	97810	of
O	97811	97812	a
O	97813	97819	string
O	97820	97827	literal
O	97827	97828	.

O	97829	97838	According
O	97839	97841	to
B-api_mention	97842	97848	String
O	97849	97862	documentation
O	97862	97863	,
O	97864	97865	#
O	97865	97875	blockquote
O	97876	97880	This
O	97881	97888	amounts
O	97889	97891	to
O	97892	97894	an
O	97895	97903	implicit
O	97904	97913	guarantee
O	97914	97916	of
O	97917	97921	your
O	97922	97932	expression
O	97933	97943	succeeding
O	97944	97948	when
O	97949	97954	names
O	97955	97957	of
O	97958	97962	enum
O	97963	97972	constants
O	97973	97976	are
O	97977	97986	identical
O	97986	97987	.

O	97988	97995	However
O	97995	97996	,
O	97997	97998	I
O	97999	98004	would
O	98005	98008	not
O	98009	98013	rely
O	98014	98016	on
O	98017	98021	this
O	98022	98030	behavior
O	98030	98031	,
O	98032	98035	and
O	98036	98039	use
B-api_mention	98040	98046	equals
I-api_mention	98046	98047	(
I-api_mention	98047	98051	args
I-api_mention	98051	98052	)
O	98053	98060	instead
O	98060	98061	,
O	98062	98069	because
O	98070	98076	anyone
O	98077	98084	reading
O	98085	98087	my
O	98088	98092	code
O	98093	98098	would
O	98099	98101	be
O	98102	98112	scratching
O	98113	98116	his
O	98117	98121	head
O	98121	98122	,
O	98123	98131	thinking
O	98132	98136	that
O	98137	98138	I
O	98139	98143	made
O	98144	98145	a
O	98146	98153	mistake
O	98153	98154	.

O	98156	98164	Question
O	98164	98165	-
O	98165	98173	27845223
O	98173	98174	,
O	98175	98181	answer
O	98181	98182	-
O	98182	98190	27846417

O	98191	98196	Pavel
O	98197	98202	Horal
O	98202	98203	'
O	98203	98204	s
O	98205	98211	answer
O	98212	98214	is
O	98215	98219	nice
O	98219	98220	.

O	98221	98223	As
O	98224	98226	he
O	98227	98231	says
O	98231	98232	,
O	98233	98236	the
O	98237	98241	word
O	98242	98243	"
O	98243	98247	file
O	98247	98248	"
O	98249	98252	has
O	98253	98260	totally
O	98261	98270	different
O	98271	98272	(
O	98272	98283	practically
O	98284	98293	unrelated
O	98293	98294	)
O	98295	98303	meanings
O	98304	98306	in
B-api_mention	98307	98310	URL
I-api_mention	98310	98311	#
I-api_mention	98311	98318	getFile
O	98319	98321	vs
B-api_mention	98322	98326	java
I-api_mention	98326	98327	.
I-api_mention	98327	98329	io
I-api_mention	98329	98330	.
I-api_mention	98330	98334	File
O	98335	98336	-
O	98337	98340	may
O	98341	98343	be
O	98344	98348	that
O	98348	98349	'
O	98349	98350	s
O	98351	98355	part
O	98356	98358	of
O	98359	98362	the
O	98363	98372	confusion
O	98372	98373	.

O	98374	98378	Just
O	98379	98381	to
O	98382	98385	add
O	98385	98386	:
O	98387	98388	#
O	98388	98390	li
O	98391	98392	A
O	98393	98401	resource
O	98402	98404	in
O	98405	98409	Java
O	98410	98412	is
O	98413	98415	an
O	98416	98424	abstract
O	98425	98432	concept
O	98432	98433	,
O	98434	98435	a
O	98436	98442	source
O	98443	98445	of
O	98446	98450	data
O	98451	98455	that
O	98456	98459	can
O	98460	98462	be
O	98463	98467	read
O	98467	98468	.

O	98469	98472	The
O	98473	98481	location
O	98482	98483	(
O	98483	98485	or
O	98486	98493	address
O	98493	98494	)
O	98495	98497	of
O	98498	98499	a
O	98500	98508	resource
O	98509	98511	is
O	98512	98523	represented
O	98524	98526	in
O	98527	98531	Java
O	98532	98534	by
O	98535	98536	a
B-api_mention	98537	98540	URL
O	98541	98547	object
O	98547	98548	.

O	98549	98550	#
O	98550	98552	li
O	98553	98554	A
O	98555	98563	resource
O	98564	98567	can
O	98568	98578	correspond
O	98579	98581	to
O	98582	98583	a
O	98584	98591	regular
O	98592	98596	file
O	98597	98599	in
O	98600	98603	the
O	98604	98609	local
O	98610	98620	filesystem
O	98621	98622	(
O	98622	98634	specifically
O	98634	98635	,
O	98636	98640	when
O	98641	98644	its
B-api_mention	98645	98648	URL
O	98649	98655	begins
O	98656	98660	with
O	98661	98665	file
O	98665	98666	:
O	98666	98667	/
O	98667	98668	/
O	98669	98670	)
O	98670	98671	.

O	98672	98675	But
O	98676	98677	a
O	98678	98686	resource
O	98687	98689	is
O	98690	98694	more
O	98695	98702	general
O	98703	98704	(
O	98704	98706	it
O	98707	98710	can
O	98711	98713	be
O	98714	98718	also
O	98719	98723	some
O	98724	98728	file
O	98729	98735	stored
O	98736	98738	in
O	98739	98740	a
O	98741	98744	jar
O	98744	98745	,
O	98746	98748	or
O	98749	98753	some
O	98754	98758	data
O	98759	98761	to
O	98762	98764	be
O	98765	98769	read
O	98770	98774	from
O	98775	98778	the
O	98779	98786	network
O	98786	98787	,
O	98788	98790	or
O	98791	98795	from
O	98796	98802	memory
O	98802	98803	,
O	98804	98806	or
O	98806	98807	.
O	98807	98808	.
O	98808	98809	.
O	98809	98810	)
O	98810	98811	.

O	98812	98815	And
O	98816	98818	it
O	98818	98819	'
O	98819	98820	s
O	98821	98825	also
O	98826	98830	more
O	98831	98838	limited
O	98838	98839	,
O	98840	98847	because
O	98848	98849	a
B-api_mention	98850	98854	File
O	98855	98856	(
O	98856	98863	besides
O	98864	98869	being
O	98870	98875	other
O	98876	98882	things
O	98883	98887	than
O	98888	98889	a
O	98890	98897	regular
O	98898	98902	file
O	98902	98903	:
O	98904	98905	a
O	98906	98915	directory
O	98915	98916	,
O	98917	98918	a
O	98919	98923	link
O	98923	98924	)
O	98925	98928	can
O	98929	98933	also
O	98934	98936	be
O	98937	98944	created
O	98945	98948	and
O	98949	98955	writen
O	98956	98958	to
O	98958	98959	.

O	98960	98961	#
O	98961	98963	li
O	98964	98972	Remember
O	98973	98975	in
O	98976	98980	Java
O	98981	98982	a
B-api_mention	98983	98987	File
O	98988	98994	object
O	98995	98999	does
O	99000	99003	not
O	99004	99010	really
O	99011	99021	represents
O	99022	99023	"
O	99023	99024	a
O	99025	99029	file
O	99029	99030	"
O	99031	99034	but
O	99035	99038	the
O	99039	99047	location
O	99048	99049	(
O	99049	99052	the
O	99053	99057	full
O	99058	99062	name
O	99062	99063	,
O	99064	99068	with
O	99069	99073	path
O	99073	99074	)
O	99075	99077	of
O	99078	99079	a
O	99080	99084	file
O	99084	99085	.

O	99086	99088	So
O	99088	99089	,
O	99090	99091	a
B-api_mention	99092	99096	File
O	99097	99103	object
O	99104	99110	allows
O	99111	99114	you
O	99115	99117	to
O	99118	99124	locate
O	99125	99126	(
O	99126	99129	and
O	99130	99134	open
O	99134	99135	)
O	99136	99137	a
O	99138	99142	file
O	99142	99143	,
O	99144	99146	as
O	99147	99148	a
B-api_mention	99149	99152	URL
O	99153	99159	allows
O	99160	99163	you
O	99164	99166	to
O	99167	99173	access
O	99174	99175	(
O	99175	99178	and
O	99179	99183	open
O	99183	99184	)
O	99185	99186	a
O	99187	99195	resource
O	99195	99196	.

O	99197	99198	(
O	99198	99203	There
O	99204	99206	is
O	99207	99209	no
B-api_mention	99210	99218	Resource
O	99219	99224	class
O	99225	99227	in
O	99228	99232	Java
O	99233	99235	to
O	99236	99245	represent
O	99246	99247	a
O	99248	99256	resource
O	99256	99257	,
O	99258	99261	but
O	99262	99269	neither
O	99270	99275	there
O	99276	99278	is
O	99279	99282	one
O	99283	99285	to
O	99286	99295	represent
O	99296	99297	a
O	99298	99302	file
O	99302	99303	!
O	99304	99308	once
O	99309	99313	more
O	99314	99315	:
B-api_mention	99316	99320	File
O	99321	99323	is
O	99324	99327	not
O	99328	99329	a
O	99330	99334	file
O	99334	99335	,
O	99336	99338	it
O	99338	99339	'
O	99339	99340	s
O	99341	99344	the
O	99345	99349	path
O	99350	99352	of
O	99353	99354	a
O	99355	99359	file
O	99359	99360	)
O	99360	99361	.

O	99363	99371	Question
O	99371	99372	-
O	99372	99380	30081520
O	99380	99381	,
O	99382	99388	answer
O	99388	99389	-
O	99389	99397	30081600

O	99398	99402	From
B-api_mention	99403	99410	Objects
I-api_mention	99410	99411	.
I-api_mention	99411	99417	equals
I-api_mention	99417	99418	(
I-api_mention	99418	99419	)
O	99420	99421	:
O	99422	99428	return
O	99428	99429	(
O	99429	99433	args
O	99433	99434	)
O	99435	99436	|
O	99436	99437	|
O	99438	99439	(
O	99439	99440	a
O	99441	99442	!
O	99442	99443	=
O	99444	99448	null
O	99449	99450	&
O	99450	99451	&
O	99452	99453	a
B-api_mention	99453	99454	.
I-api_mention	99454	99460	equals
I-api_mention	99460	99461	(
I-api_mention	99461	99465	args
I-api_mention	99465	99466	)
O	99466	99467	)
O	99467	99468	;
O	99469	99473	Very
O	99474	99480	simple
O	99480	99481	,
O	99482	99486	self
O	99486	99487	-
O	99487	99497	explaining
O	99498	99501	and
O	99502	99509	elegant
O	99509	99510	.

O	99512	99520	Question
O	99520	99521	-
O	99521	99529	28584669
O	99529	99530	,
O	99531	99537	answer
O	99537	99538	-
O	99538	99546	28584932

O	99547	99551	Your
O	99552	99561	reasoning
O	99562	99564	is
O	99565	99569	that
B-api_mention	99570	99576	Double
I-api_mention	99576	99577	.
I-api_mention	99577	99585	POSITIVE
I-api_mention	99585	99586	_
I-api_mention	99586	99594	INFINITY
O	99595	99601	should
O	99602	99605	not
O	99606	99608	be
O	99609	99614	equal
O	99615	99617	to
O	99618	99624	itself
O	99625	99632	because
O	99633	99635	it
O	99636	99638	is
O	99639	99640	“
O	99640	99646	likely
O	99646	99647	”
O	99648	99650	to
O	99651	99655	have
O	99656	99660	been
O	99661	99669	obtained
O	99670	99672	as
O	99673	99676	the
O	99677	99683	result
O	99684	99686	of
O	99687	99688	a
O	99689	99693	loss
O	99694	99696	of
O	99697	99705	accuracy
O	99705	99706	.

O	99707	99711	This
O	99712	99716	line
O	99717	99719	of
O	99720	99729	reasoning
O	99730	99737	applies
O	99738	99740	to
O	99741	99744	all
O	99745	99747	of
O	99748	99756	floating
O	99756	99757	-
O	99757	99762	point
O	99762	99763	.

O	99764	99767	Any
O	99768	99774	finite
O	99775	99780	value
O	99781	99784	can
O	99785	99787	be
O	99788	99796	obtained
O	99797	99799	as
O	99800	99803	the
O	99804	99810	result
O	99811	99813	of
O	99814	99816	an
O	99817	99827	inaccurate
O	99828	99837	operation
O	99837	99838	.

O	99839	99843	That
O	99844	99847	did
O	99848	99851	not
O	99852	99856	push
O	99857	99860	the
O	99861	99865	IEEE
O	99866	99869	754
O	99870	99885	standardization
O	99886	99895	committee
O	99896	99898	to
O	99899	99905	define
O	99906	99907	=
O	99907	99908	=
O	99909	99911	as
O	99912	99918	always
O	99919	99929	evaluating
O	99930	99932	to
O	99933	99938	false
O	99939	99942	for
O	99943	99949	finite
O	99950	99956	values
O	99956	99957	,
O	99958	99960	so
O	99961	99964	why
O	99965	99971	should
O	99972	99982	infinities
O	99983	99985	be
O	99986	99995	different
O	99995	99996	?

O	99997	99999	As
O	100000	100007	defined
O	100007	100008	,
O	100009	100010	=
O	100010	100011	=
O	100012	100014	is
O	100015	100021	useful
O	100022	100025	for
O	100026	100032	people
O	100033	100036	who
O	100037	100047	understand
O	100048	100052	what
O	100053	100055	it
O	100056	100060	does
O	100061	100062	(
O	100062	100066	that
O	100067	100069	is
O	100069	100070	,
O	100071	100075	test
O	100076	100079	the
O	100080	100088	floating
O	100088	100089	-
O	100089	100094	point
O	100095	100101	values
O	100102	100106	that
O	100107	100111	have
O	100112	100116	been
O	100117	100125	obtained
O	100126	100127	,
O	100128	100131	and
O	100132	100141	certainly
O	100142	100145	not
O	100146	100149	the
O	100150	100156	values
O	100157	100161	that
O	100162	100168	should
O	100169	100173	have
O	100174	100178	been
O	100179	100187	obtained
O	100188	100192	with
O	100193	100197	real
O	100198	100210	computations
O	100210	100211	)
O	100211	100212	.

O	100213	100216	For
O	100217	100223	anyone
O	100224	100227	who
O	100228	100239	understands
O	100240	100244	that
O	100244	100245	,
O	100246	100249	and
O	100250	100253	you
O	100254	100258	need
O	100259	100261	to
O	100262	100272	understand
O	100273	100275	it
O	100276	100278	to
O	100279	100282	use
O	100283	100291	floating
O	100291	100292	-
O	100292	100297	point
O	100298	100302	even
O	100303	100306	for
O	100307	100319	computations
O	100320	100324	that
O	100325	100327	do
O	100328	100331	not
O	100332	100339	involve
O	100340	100348	infinity
O	100348	100349	,
O	100350	100356	having
B-api_mention	100357	100363	Double
I-api_mention	100363	100364	.
I-api_mention	100364	100372	POSITIVE
I-api_mention	100372	100373	_
I-api_mention	100373	100381	INFINITY
O	100382	100383	=
O	100383	100384	=
B-api_mention	100385	100391	Double
I-api_mention	100391	100392	.
I-api_mention	100392	100400	POSITIVE
I-api_mention	100400	100401	_
I-api_mention	100401	100409	INFINITY
O	100410	100418	evaluate
O	100419	100421	to
O	100422	100426	true
O	100427	100429	is
O	100430	100440	convenient
O	100440	100441	,
O	100442	100444	if
O	100445	100449	only
O	100450	100452	to
O	100453	100457	test
O	100458	100460	if
O	100461	100464	the
O	100465	100473	floating
O	100473	100474	-
O	100474	100479	point
O	100480	100486	result
O	100487	100489	of
O	100490	100491	a
O	100492	100500	floating
O	100500	100501	-
O	100501	100506	point
O	100507	100518	computation
O	100519	100521	is
B-api_mention	100522	100528	Double
I-api_mention	100528	100529	.
I-api_mention	100529	100537	POSITIVE
I-api_mention	100537	100538	_
I-api_mention	100538	100546	INFINITY
O	100547	100548	.

O	100549	100553	That
O	100554	100560	leaves
O	100561	100564	the
O	100565	100573	question
O	100574	100576	of
O	100577	100580	why
O	100581	100584	NaN
O	100585	100588	can
O	100589	100595	afford
O	100596	100598	to
O	100599	100603	have
O	100604	100611	special
O	100612	100620	behavior
O	100620	100621	,
O	100622	100625	and
O	100626	100636	infinities
O	100637	100643	should
O	100644	100650	follow
O	100651	100654	the
O	100655	100659	same
O	100660	100667	general
O	100668	100678	principles
O	100679	100681	as
O	100682	100688	finite
O	100689	100695	values
O	100695	100696	.

O	100697	100700	NaN
O	100701	100703	is
O	100704	100713	different
O	100714	100718	from
O	100719	100729	infinities
O	100729	100730	:
O	100731	100734	the
O	100735	100745	underlying
O	100746	100755	principle
O	100756	100758	of
O	100759	100762	the
O	100763	100767	IEEE
O	100768	100771	754
O	100772	100780	standard
O	100781	100783	is
O	100784	100788	that
O	100789	100795	values
O	100796	100799	are
O	100800	100807	exactly
O	100808	100812	what
O	100813	100817	they
O	100818	100821	are
O	100821	100822	,
O	100823	100826	but
O	100827	100830	the
O	100831	100837	result
O	100838	100840	of
O	100841	100843	an
O	100844	100853	operation
O	100854	100857	can
O	100858	100860	be
O	100861	100873	approximated
O	100874	100878	with
O	100879	100886	respect
O	100887	100889	to
O	100890	100893	the
O	100894	100898	real
O	100899	100905	result
O	100905	100906	,
O	100907	100910	and
O	100911	100913	in
O	100914	100918	this
O	100919	100923	case
O	100923	100924	,
O	100925	100928	the
O	100929	100938	resulting
O	100939	100947	floating
O	100947	100948	-
O	100948	100953	point
O	100954	100959	value
O	100960	100962	is
O	100963	100971	obtained
O	100972	100981	according
O	100982	100984	to
O	100985	100988	the
O	100989	100997	rounding
O	100998	101002	mode
O	101002	101003	.

O	101004	101010	Forget
O	101011	101014	for
O	101015	101017	an
O	101018	101025	instant
O	101026	101030	that
O	101031	101032	1
O	101032	101033	.
O	101033	101034	0
O	101035	101036	/
O	101037	101038	0
O	101038	101039	.
O	101039	101040	0
O	101041	101043	is
O	101044	101051	defined
O	101052	101054	as
O	101055	101056	+
O	101056	101059	inf
O	101059	101060	,
O	101061	101066	which
O	101067	101069	is
O	101070	101072	an
O	101073	101082	annoyance
O	101083	101085	in
O	101086	101090	this
O	101091	101101	discussion
O	101101	101102	.

O	101103	101108	Think
O	101109	101112	for
O	101113	101116	the
O	101117	101123	moment
O	101124	101126	of
B-api_mention	101127	101133	Double
I-api_mention	101133	101134	.
I-api_mention	101134	101142	POSITIVE
I-api_mention	101142	101143	_
I-api_mention	101143	101151	INFINITY
O	101152	101156	only
O	101157	101159	as
O	101160	101163	the
O	101164	101170	result
O	101171	101173	of
O	101174	101184	operations
O	101185	101189	such
O	101190	101192	as
O	101193	101194	1
O	101194	101195	.
O	101195	101200	0e100
O	101201	101202	/
O	101203	101204	1
O	101204	101205	.
O	101205	101207	0e
O	101207	101208	-
O	101208	101211	300
O	101212	101214	or
B-api_mention	101215	101221	Double
I-api_mention	101221	101222	.
I-api_mention	101222	101225	MAX
I-api_mention	101225	101226	_
I-api_mention	101226	101231	VALUE
O	101232	101233	+
B-api_mention	101234	101240	Double
I-api_mention	101240	101241	.
I-api_mention	101241	101244	MAX
I-api_mention	101244	101245	_
I-api_mention	101245	101250	VALUE
O	101251	101252	.

O	101253	101256	For
O	101257	101262	these
O	101263	101273	operations
O	101273	101274	,
O	101275	101276	+
O	101276	101279	inf
O	101280	101282	is
O	101283	101286	the
O	101287	101294	closest
O	101295	101308	approximation
O	101309	101311	of
O	101312	101315	the
O	101316	101320	real
O	101321	101327	result
O	101327	101328	,
O	101329	101333	just
O	101334	101338	like
O	101339	101342	for
O	101343	101353	operations
O	101354	101358	that
O	101359	101366	produce
O	101367	101368	a
O	101369	101375	finite
O	101376	101382	result
O	101382	101383	.

O	101384	101386	By
O	101387	101395	contrast
O	101395	101396	,
O	101397	101400	NaN
O	101401	101403	is
O	101404	101407	the
O	101408	101414	result
O	101415	101418	you
O	101419	101425	obtain
O	101426	101430	when
O	101431	101434	the
O	101435	101444	operation
O	101445	101450	doesn
O	101450	101451	'
O	101451	101452	t
O	101453	101457	make
O	101458	101463	sense
O	101463	101464	.

O	101465	101467	It
O	101468	101470	is
O	101471	101481	defensible
O	101482	101484	to
O	101485	101489	have
O	101490	101493	NaN
O	101494	101500	behave
O	101501	101510	specially
O	101510	101511	,
O	101512	101515	but
O	101516	101519	inf
O	101520	101522	is
O	101523	101527	just
O	101528	101530	an
O	101531	101544	approximation
O	101545	101547	of
O	101548	101551	all
O	101552	101555	the
O	101556	101562	values
O	101563	101566	too
O	101567	101572	large
O	101573	101575	to
O	101576	101585	represent
O	101585	101586	.

O	101587	101589	In
O	101590	101597	reality
O	101597	101598	,
O	101599	101600	1
O	101600	101601	.
O	101601	101602	0
O	101603	101604	/
O	101605	101606	0
O	101606	101607	.
O	101607	101608	0
O	101609	101613	also
O	101614	101622	produces
O	101623	101624	+
O	101624	101627	inf
O	101627	101628	,
O	101629	101632	but
O	101633	101637	that
O	101638	101644	should
O	101645	101647	be
O	101648	101658	considered
O	101659	101661	an
O	101662	101671	exception
O	101671	101672	.

O	101673	101675	It
O	101676	101681	would
O	101682	101686	have
O	101687	101691	been
O	101692	101696	just
O	101697	101699	as
O	101700	101708	coherent
O	101709	101711	to
O	101712	101718	define
O	101719	101722	the
O	101723	101729	result
O	101730	101732	of
O	101733	101737	that
O	101738	101747	operation
O	101748	101750	as
O	101751	101754	NaN
O	101754	101755	,
O	101756	101759	but
O	101760	101768	defining
O	101769	101771	it
O	101772	101774	as
O	101775	101776	+
O	101776	101779	inf
O	101780	101783	was
O	101784	101788	more
O	101789	101799	convenient
O	101800	101802	in
O	101803	101806	the
O	101807	101821	implementation
O	101822	101824	of
O	101825	101829	some
O	101830	101840	algorithms
O	101840	101841	.

O	101842	101844	An
O	101845	101852	example
O	101853	101855	is
O	101856	101864	provided
O	101865	101869	page
O	101870	101872	10
O	101873	101875	in
O	101876	101881	Kahan
O	101881	101882	'
O	101882	101883	s
O	101884	101889	notes
O	101890	101891	.

O	101892	101896	More
O	101897	101904	details
O	101905	101909	than
O	101910	101914	most
O	101915	101919	will
O	101920	101924	wish
O	101925	101928	for
O	101929	101932	are
O	101933	101935	in
O	101936	101939	the
O	101940	101947	article
O	101948	101949	“
O	101949	101955	Branch
O	101956	101960	Cuts
O	101961	101964	for
O	101965	101972	Complex
O	101973	101983	Elementary
O	101984	101993	Functions
O	101993	101994	,
O	101995	101997	or
O	101998	102002	Much
O	102003	102006	Ado
O	102007	102012	About
O	102013	102020	Nothing
O	102020	102021	'
O	102021	102022	s
O	102023	102027	Sign
O	102028	102031	Bit
O	102031	102032	”
O	102033	102034	.

O	102035	102036	I
O	102037	102042	would
O	102043	102047	also
O	102048	102057	interpret
O	102058	102061	the
O	102062	102071	existence
O	102072	102074	in
O	102075	102079	IEEE
O	102080	102083	754
O	102084	102086	of
O	102087	102088	a
O	102089	102090	“
O	102090	102098	division
O	102099	102101	by
O	102102	102106	zero
O	102106	102107	”
O	102108	102112	flag
O	102113	102121	separate
O	102122	102126	from
O	102127	102130	the
O	102131	102134	NaN
O	102135	102139	flag
O	102140	102142	as
O	102143	102154	recognition
O	102155	102159	that
O	102160	102163	the
O	102164	102168	user
O	102169	102172	may
O	102173	102177	want
O	102178	102180	to
O	102181	102186	treat
O	102187	102195	division
O	102196	102198	by
O	102199	102203	zero
O	102204	102213	specially
O	102214	102222	although
O	102223	102225	it
O	102226	102228	is
O	102229	102232	not
O	102233	102240	defined
O	102241	102243	as
O	102244	102253	producing
O	102254	102257	NaN
O	102257	102258	.

O	102260	102268	Question
O	102268	102269	-
O	102269	102277	28584669
O	102277	102278	,
O	102279	102285	answer
O	102285	102286	-
O	102286	102294	28584954

O	102295	102302	Because
O	102303	102308	thats
O	102309	102312	the
O	102313	102321	standard
O	102321	102322	.

O	102323	102331	Infinity
O	102332	102342	represents
O	102343	102344	a
O	102345	102351	number
O	102352	102359	greater
O	102360	102364	than
O	102365	102367	or
O	102368	102372	less
O	102373	102377	than
B-api_mention	102378	102384	Double
I-api_mention	102384	102385	.
I-api_mention	102385	102388	MAX
I-api_mention	102388	102389	_
I-api_mention	102389	102394	VALUE
O	102394	102395	/
O	102395	102396	-
B-api_mention	102396	102402	Double
I-api_mention	102402	102403	.
I-api_mention	102403	102406	MAX
I-api_mention	102406	102407	_
I-api_mention	102407	102412	VALUE
O	102412	102413	.

O	102414	102417	NaN
O	102418	102428	represents
O	102429	102432	the
O	102433	102440	outcome
O	102441	102443	of
O	102444	102446	an
O	102447	102456	operation
O	102457	102461	that
O	102462	102466	didn
O	102466	102467	'
O	102467	102468	t
O	102469	102473	make
O	102474	102479	sense
O	102479	102480	.

O	102481	102485	That
O	102486	102488	is
O	102488	102489	,
O	102490	102493	the
O	102494	102503	operation
O	102504	102508	didn
O	102508	102509	'
O	102509	102510	t
O	102511	102519	possibly
O	102520	102524	come
O	102525	102528	out
O	102529	102533	with
O	102534	102535	a
O	102536	102542	number
O	102542	102543	.

O	102544	102545	I
O	102546	102551	would
O	102552	102557	guess
O	102558	102561	the
O	102562	102567	logic
O	102568	102570	is
O	102571	102575	once
O	102576	102577	a
O	102578	102584	number
O	102585	102589	gets
O	102590	102593	big
O	102594	102600	enough
O	102601	102602	(
O	102602	102610	infinity
O	102610	102611	)
O	102612	102615	and
O	102616	102623	because
O	102624	102626	of
O	102627	102630	the
O	102631	102641	limitation
O	102642	102644	of
O	102645	102653	floating
O	102654	102659	point
O	102660	102667	numbers
O	102667	102668	,
O	102669	102675	adding
O	102676	102683	numbers
O	102684	102686	to
O	102687	102689	it
O	102690	102693	won
O	102693	102694	'
O	102694	102695	t
O	102696	102702	change
O	102703	102706	the
O	102707	102714	outcome
O	102714	102715	,
O	102716	102718	so
O	102719	102722	its
O	102723	102724	'
O	102724	102728	like
O	102728	102729	'
O	102730	102738	infinity
O	102738	102739	.

O	102740	102742	So
O	102743	102745	if
O	102746	102749	you
O	102750	102754	want
O	102755	102757	to
O	102758	102765	compare
O	102766	102768	to
O	102769	102775	really
O	102776	102779	big
O	102780	102787	numbers
O	102787	102788	,
O	102789	102791	at
O	102792	102796	some
O	102797	102802	point
O	102803	102806	you
O	102807	102812	might
O	102813	102817	just
O	102818	102821	say
O	102822	102827	those
O	102828	102831	two
O	102832	102835	big
O	102836	102843	numbers
O	102844	102847	are
O	102848	102853	close
O	102854	102860	enough
O	102861	102864	for
O	102865	102868	all
O	102869	102876	intents
O	102877	102880	and
O	102881	102889	purposes
O	102889	102890	.

O	102891	102894	But
O	102895	102897	if
O	102898	102901	you
O	102902	102906	want
O	102907	102909	to
O	102910	102917	compare
O	102918	102921	two
O	102922	102928	things
O	102929	102933	that
O	102934	102938	both
O	102939	102943	aren
O	102943	102944	'
O	102944	102945	t
O	102946	102953	numbers
O	102953	102954	,
O	102955	102958	you
O	102959	102962	can
O	102962	102963	'
O	102963	102964	t
O	102965	102972	compare
O	102973	102977	them
O	102978	102980	so
O	102981	102984	its
O	102985	102990	false
O	102990	102991	.

O	102992	102994	At
O	102995	103000	least
O	103001	103004	you
O	103005	103011	couldn
O	103011	103012	'
O	103012	103013	t
O	103014	103021	compare
O	103022	103026	them
O	103027	103029	as
O	103030	103031	a
O	103032	103041	primitive
O	103041	103042	.

O	103044	103052	Question
O	103052	103053	-
O	103053	103061	28584669
O	103061	103062	,
O	103063	103069	answer
O	103069	103070	-
O	103070	103078	28588854

O	103079	103082	The
O	103083	103090	correct
O	103091	103097	answer
O	103098	103100	is
O	103101	103102	a
O	103103	103109	simple
O	103110	103111	"
O	103111	103118	because
O	103119	103122	the
O	103123	103131	standard
O	103132	103133	(
O	103133	103136	and
O	103137	103140	the
O	103141	103145	docs
O	103146	103147	)
O	103148	103151	say
O	103152	103154	so
O	103154	103155	"
O	103155	103156	.

O	103157	103160	But
O	103161	103162	I
O	103162	103163	'
O	103163	103164	m
O	103165	103168	not
O	103169	103174	gonna
O	103175	103177	be
O	103178	103185	cynical
O	103186	103193	because
O	103194	103196	it
O	103196	103197	'
O	103197	103198	s
O	103199	103206	obvious
O	103207	103211	that
O	103211	103212	'
O	103212	103213	s
O	103214	103217	not
O	103218	103222	what
O	103223	103226	you
O	103227	103230	are
O	103231	103236	after
O	103236	103237	.

O	103238	103240	In
O	103241	103249	addition
O	103250	103252	to
O	103253	103256	the
O	103257	103262	other
O	103263	103270	answers
O	103271	103275	here
O	103275	103276	,
O	103277	103278	I
O	103278	103279	'
O	103279	103281	ll
O	103282	103285	try
O	103286	103288	to
O	103289	103295	relate
O	103296	103299	the
O	103300	103310	infinities
O	103311	103313	to
O	103314	103324	saturating
O	103325	103335	arithmetic
O	103335	103336	.

O	103337	103342	Other
O	103343	103350	answers
O	103351	103355	have
O	103356	103363	already
O	103364	103370	stated
O	103371	103375	that
O	103376	103379	the
O	103380	103386	reason
O	103387	103390	the
O	103391	103402	comparisons
O	103403	103405	on
O	103406	103410	NaNs
O	103411	103417	result
O	103418	103420	in
O	103421	103425	true
O	103426	103427	,
O	103428	103430	so
O	103431	103432	I
O	103432	103433	'
O	103433	103434	m
O	103435	103438	not
O	103439	103444	gonna
O	103445	103449	beat
O	103450	103451	a
O	103452	103456	dead
O	103457	103462	horse
O	103462	103463	.

O	103464	103467	Let
O	103467	103468	'
O	103468	103469	s
O	103470	103473	say
O	103474	103475	I
O	103476	103480	have
O	103481	103482	a
O	103483	103493	saturating
O	103494	103501	integer
O	103502	103506	that
O	103507	103517	represents
O	103518	103527	grayscale
O	103528	103534	colors
O	103534	103535	.

O	103536	103539	Why
O	103540	103542	am
O	103543	103544	I
O	103545	103550	using
O	103551	103561	saturating
O	103562	103572	arithmetic
O	103572	103573	?

O	103574	103581	Because
O	103582	103590	anything
O	103591	103599	brighter
O	103600	103604	than
O	103605	103610	white
O	103611	103613	is
O	103614	103619	still
O	103620	103625	white
O	103625	103626	,
O	103627	103630	and
O	103631	103639	anything
O	103640	103646	darker
O	103647	103651	than
O	103652	103657	black
O	103658	103660	is
O	103661	103666	still
O	103667	103672	black
O	103673	103674	(
O	103674	103680	except
O	103681	103687	orange
O	103688	103689	)
O	103689	103690	.

O	103691	103695	That
O	103696	103701	means
O	103702	103707	BLACK
O	103708	103709	-
O	103710	103711	x
O	103712	103713	=
O	103713	103714	=
O	103715	103720	BLACK
O	103721	103724	and
O	103725	103730	WHITE
O	103731	103732	+
O	103733	103734	x
O	103735	103736	=
O	103736	103737	=
O	103738	103743	WHITE
O	103744	103745	.

O	103746	103751	Makes
O	103752	103757	sense
O	103757	103758	?

O	103759	103762	Now
O	103762	103763	,
O	103764	103767	let
O	103767	103768	'
O	103768	103769	s
O	103770	103773	say
O	103774	103776	we
O	103777	103781	want
O	103782	103784	to
O	103785	103794	represent
O	103795	103800	those
O	103801	103810	grayscale
O	103811	103817	colors
O	103818	103822	with
O	103823	103824	a
O	103825	103826	(
O	103826	103832	signed
O	103832	103833	)
O	103834	103836	1s
O	103837	103847	complement
O	103848	103849	8
O	103849	103850	-
O	103850	103853	bit
O	103854	103861	integer
O	103862	103867	where
O	103868	103873	BLACK
O	103874	103875	=
O	103875	103876	=
O	103877	103878	-
O	103878	103881	127
O	103882	103885	and
O	103886	103891	WHITE
O	103892	103893	=
O	103893	103894	=
O	103895	103898	127
O	103899	103900	.

O	103901	103904	Why
O	103905	103907	1s
O	103908	103918	complement
O	103918	103919	?

O	103920	103927	Because
O	103928	103930	it
O	103931	103936	gives
O	103937	103939	us
O	103940	103941	a
O	103942	103948	signed
O	103949	103953	zero
O	103954	103958	like
O	103959	103963	IEEE
O	103964	103967	754
O	103968	103976	floating
O	103977	103982	point
O	103983	103984	.

O	103985	103988	And
O	103988	103989	,
O	103990	103997	because
O	103998	104000	we
O	104001	104004	are
O	104005	104010	using
O	104011	104021	saturating
O	104022	104032	arithmetic
O	104032	104033	,
O	104034	104035	-
O	104035	104038	127
O	104039	104040	-
O	104041	104042	x
O	104043	104044	=
O	104044	104045	=
O	104046	104047	-
O	104047	104050	127
O	104051	104054	and
O	104055	104058	127
O	104059	104060	+
O	104061	104062	x
O	104063	104064	=
O	104064	104065	=
O	104066	104069	127
O	104070	104071	.

O	104072	104075	How
O	104076	104080	does
O	104081	104085	this
O	104086	104092	relate
O	104093	104095	to
O	104096	104104	floating
O	104105	104110	point
O	104111	104121	infinities
O	104121	104122	?

O	104123	104130	Replace
O	104131	104134	the
O	104135	104142	integer
O	104143	104147	with
O	104148	104156	floating
O	104157	104162	point
O	104162	104163	,
O	104164	104169	BLACK
O	104170	104174	with
O	104175	104183	NEGATIVE
O	104183	104184	_
O	104184	104192	INFINITY
O	104193	104194	,
O	104195	104198	and
O	104199	104204	WHITE
O	104205	104209	with
O	104210	104218	POSITIVE
O	104218	104219	_
O	104219	104227	INFINITY
O	104228	104231	and
O	104232	104236	what
O	104237	104239	do
O	104240	104243	you
O	104244	104247	get
O	104247	104248	?

O	104249	104257	NEGATIVE
O	104257	104258	_
O	104258	104266	INFINITY
O	104267	104268	-
O	104269	104270	x
O	104271	104272	=
O	104272	104273	=
O	104274	104282	NEGATIVE
O	104282	104283	_
O	104283	104291	INFINITY
O	104292	104295	and
O	104296	104304	POSITIVE
O	104304	104305	_
O	104305	104313	INFINITY
O	104314	104315	+
O	104316	104317	x
O	104318	104319	=
O	104319	104320	=
O	104321	104329	POSITIVE
O	104329	104330	_
O	104330	104338	INFINITY
O	104339	104340	.

O	104341	104346	Since
O	104347	104350	you
O	104351	104355	used
O	104356	104364	POSITIVE
O	104364	104365	_
O	104365	104373	INFINITY
O	104374	104375	,
O	104376	104377	I
O	104377	104378	'
O	104378	104380	ll
O	104381	104384	use
O	104385	104387	it
O	104388	104392	also
O	104392	104393	.

O	104394	104399	First
O	104400	104402	we
O	104403	104407	need
O	104408	104409	a
O	104410	104415	class
O	104416	104418	to
O	104419	104428	represent
O	104429	104432	our
O	104433	104443	saturating
O	104444	104451	integer
O	104451	104452	-
O	104452	104457	based
O	104458	104463	color
O	104463	104464	;
O	104465	104468	let
O	104468	104469	'
O	104469	104470	s
O	104471	104475	call
O	104476	104478	it
B-api_mention	104479	104493	SaturatedColor
O	104494	104497	and
O	104498	104504	assume
O	104505	104507	it
O	104508	104513	works
O	104514	104518	like
O	104519	104522	any
O	104523	104528	other
O	104529	104536	integer
O	104537	104539	in
O	104540	104544	Java
O	104544	104545	.

O	104546	104549	Now
O	104549	104550	,
O	104551	104554	let
O	104554	104555	'
O	104555	104556	s
O	104557	104561	take
O	104562	104566	your
O	104567	104571	code
O	104572	104575	and
O	104576	104583	replace
O	104584	104590	double
O	104591	104595	with
O	104596	104599	our
O	104600	104603	own
B-api_mention	104604	104618	SaturatedColor
O	104619	104622	and
B-api_mention	104623	104629	Double
I-api_mention	104629	104630	.
I-api_mention	104630	104638	POSITIVE
I-api_mention	104638	104639	_
I-api_mention	104639	104647	INFINITY
O	104648	104652	with
B-api_mention	104653	104667	SaturatedColor
I-api_mention	104667	104668	.
I-api_mention	104668	104673	WHITE
O	104674	104675	:
O	104676	104677	#
O	104677	104680	pre
O	104681	104683	As
O	104684	104686	we
O	104687	104698	established
O	104699	104704	above
O	104704	104705	,
B-api_mention	104706	104720	SaturatedColor
I-api_mention	104720	104721	.
I-api_mention	104721	104726	WHITE
O	104727	104728	(
O	104728	104732	just
O	104733	104738	WHITE
O	104739	104744	above
O	104744	104745	)
O	104746	104748	is
O	104749	104752	127
O	104753	104754	,
O	104755	104757	so
O	104758	104761	let
O	104761	104762	'
O	104762	104763	s
O	104764	104766	do
O	104767	104771	that
O	104772	104776	here
O	104776	104777	:
O	104778	104779	#
O	104779	104782	pre
O	104783	104786	Now
O	104787	104789	we
O	104790	104794	take
O	104795	104798	the
B-api_mention	104799	104805	System
I-api_mention	104805	104806	.
I-api_mention	104806	104809	out
I-api_mention	104809	104810	.
I-api_mention	104810	104817	println
O	104818	104828	statements
O	104829	104832	you
O	104833	104837	used
O	104838	104841	and
O	104842	104849	replace
O	104850	104851	a
O	104852	104855	and
O	104856	104857	b
O	104858	104862	with
O	104863	104868	their
O	104869	104874	value
O	104875	104876	(
O	104876	104882	values
O	104882	104883	?
O	104883	104884	)
O	104884	104885	:
O	104886	104887	#
O	104887	104890	pre
O	104891	104893	It
O	104894	104900	should
O	104901	104903	be
O	104904	104911	obvious
O	104912	104916	what
O	104917	104921	this
O	104922	104926	will
O	104927	104932	print
O	104932	104933	.

O	104935	104943	Question
O	104943	104944	-
O	104944	104952	28584669
O	104952	104953	,
O	104954	104960	answer
O	104960	104961	-
O	104961	104969	28590286

O	104970	104975	Since
B-api_mention	104976	104982	Double
I-api_mention	104982	104983	.
I-api_mention	104983	104986	Nan
I-api_mention	104986	104987	.
I-api_mention	104987	104993	equals
I-api_mention	104994	104995	(
I-api_mention	104995	105001	Double
I-api_mention	105001	105002	.
I-api_mention	105002	105005	NaN
I-api_mention	105005	105006	)
O	105007	105010	was
O	105011	105020	mentioned
O	105020	105021	:
O	105022	105024	It
O	105024	105025	'
O	105025	105026	s
O	105027	105030	one
O	105031	105036	thing
O	105037	105041	what
O	105042	105048	should
O	105049	105055	happen
O	105056	105060	when
O	105061	105064	you
O	105065	105072	perform
O	105073	105083	arithmetic
O	105084	105087	and
O	105088	105095	compare
O	105096	105103	numbers
O	105103	105104	,
O	105105	105107	it
O	105107	105108	'
O	105108	105109	s
O	105110	105111	a
O	105112	105119	totally
O	105120	105129	different
O	105130	105135	thing
O	105136	105140	when
O	105141	105144	you
O	105145	105153	consider
O	105154	105157	how
O	105158	105165	objects
O	105166	105172	should
O	105173	105179	behave
O	105179	105180	.

O	105181	105184	Two
O	105185	105192	typical
O	105193	105200	problem
O	105201	105206	cases
O	105207	105210	are
O	105210	105211	:
O	105212	105219	Sorting
O	105220	105222	an
O	105223	105228	array
O	105229	105231	of
O	105232	105239	numbers
O	105239	105240	,
O	105241	105244	and
O	105245	105250	using
O	105251	105255	hash
O	105256	105262	values
O	105263	105265	to
O	105266	105275	implement
O	105276	105288	dictionaries
O	105288	105289	,
O	105290	105294	sets
O	105294	105295	,
O	105296	105299	and
O	105300	105302	so
O	105303	105305	on
O	105305	105306	.

O	105307	105312	There
O	105313	105316	are
O	105317	105320	two
O	105321	105332	exceptional
O	105333	105338	cases
O	105339	105344	where
O	105345	105348	the
O	105349	105355	normal
O	105356	105364	ordering
O	105365	105369	with
O	105370	105371	<
O	105371	105372	,
O	105373	105374	=
O	105375	105378	and
O	105379	105380	>
O	105381	105386	doesn
O	105386	105387	'
O	105387	105388	t
O	105389	105394	apply
O	105394	105395	:
O	105396	105399	One
O	105400	105404	case
O	105405	105407	is
O	105408	105412	that
O	105413	105414	+
O	105414	105415	0
O	105416	105417	=
O	105418	105419	-
O	105419	105420	0
O	105421	105424	and
O	105425	105428	the
O	105429	105434	other
O	105435	105437	is
O	105438	105442	that
O	105443	105446	NaN
O	105447	105448	≠
O	105449	105452	NaN
O	105452	105453	,
O	105454	105457	and
O	105458	105459	x
O	105460	105461	<
O	105462	105465	NaN
O	105465	105466	,
O	105467	105468	x
O	105469	105470	>
O	105471	105474	NaN
O	105474	105475	,
O	105476	105477	x
O	105478	105479	=
O	105480	105483	NaN
O	105484	105488	will
O	105489	105495	always
O	105496	105498	be
O	105499	105504	false
O	105505	105513	whatever
O	105514	105515	x
O	105516	105518	is
O	105518	105519	.

O	105520	105527	Sorting
O	105528	105538	algorithms
O	105539	105542	can
O	105543	105546	get
O	105547	105551	into
O	105552	105559	trouble
O	105560	105564	with
O	105565	105569	this
O	105569	105570	.

O	105571	105572	A
O	105573	105580	sorting
O	105581	105590	algorithm
O	105591	105594	may
O	105595	105601	assume
O	105602	105606	that
O	105607	105608	x
O	105609	105610	=
O	105611	105612	x
O	105613	105615	is
O	105616	105622	always
O	105623	105627	true
O	105627	105628	.

O	105629	105631	So
O	105632	105634	if
O	105635	105636	I
O	105637	105641	know
O	105642	105646	that
O	105647	105648	x
O	105649	105651	is
O	105652	105658	stored
O	105659	105661	in
O	105662	105664	an
O	105665	105670	array
O	105671	105674	and
O	105675	105679	look
O	105680	105683	for
O	105684	105686	it
O	105686	105687	,
O	105688	105689	I
O	105690	105695	might
O	105696	105699	not
O	105700	105702	do
O	105703	105706	any
O	105707	105713	bounds
O	105714	105719	check
O	105720	105727	because
O	105728	105731	the
O	105732	105738	search
O	105739	105742	for
O	105743	105745	it
O	105746	105750	must
O	105751	105755	find
O	105756	105765	something
O	105765	105766	.

O	105767	105770	Not
O	105771	105773	if
O	105774	105775	x
O	105776	105778	is
O	105779	105782	NaN
O	105782	105783	.

O	105784	105785	A
O	105786	105793	sorting
O	105794	105803	algorithm
O	105804	105807	may
O	105808	105814	assume
O	105815	105819	that
O	105820	105827	exactly
O	105828	105831	one
O	105832	105834	of
O	105835	105836	a
O	105837	105838	<
O	105839	105840	b
O	105841	105844	and
O	105845	105846	a
O	105847	105848	>
O	105848	105849	=
O	105850	105851	b
O	105852	105856	must
O	105857	105859	be
O	105860	105864	true
O	105864	105865	.

O	105866	105869	Not
O	105870	105872	if
O	105873	105876	one
O	105877	105879	is
O	105880	105883	NaN
O	105883	105884	.

O	105885	105887	So
O	105888	105889	a
O	105890	105895	naive
O	105896	105903	sorting
O	105904	105913	algorithm
O	105914	105917	may
O	105918	105923	crash
O	105924	105928	when
O	105929	105933	NaNs
O	105934	105937	are
O	105938	105945	present
O	105945	105946	.

O	105947	105950	You
O	105950	105951	'
O	105951	105952	d
O	105953	105957	have
O	105958	105960	to
O	105961	105967	decide
O	105968	105973	where
O	105974	105977	you
O	105978	105982	want
O	105983	105987	NaNs
O	105988	105990	to
O	105991	105994	end
O	105995	105997	up
O	105998	106002	when
O	106003	106010	sorting
O	106011	106014	the
O	106015	106020	array
O	106020	106021	,
O	106022	106025	and
O	106026	106030	then
O	106031	106037	change
O	106038	106042	your
O	106043	106053	comparison
O	106054	106058	code
O	106059	106061	so
O	106062	106066	that
O	106067	106069	it
O	106070	106075	works
O	106075	106076	.

O	106077	106080	Now
O	106081	106093	dictionaries
O	106094	106097	and
O	106098	106102	sets
O	106103	106106	and
O	106107	106116	generally
O	106117	106124	hashing
O	106124	106125	:
O	106126	106130	What
O	106131	106133	if
O	106134	106135	I
O	106136	106139	use
O	106140	106142	an
O	106143	106146	NaN
O	106147	106149	as
O	106150	106153	the
O	106154	106157	key
O	106157	106158	?

O	106159	106160	A
O	106161	106164	set
O	106165	106173	contains
O	106174	106180	unique
O	106181	106188	objects
O	106188	106189	.

O	106190	106192	If
O	106193	106196	the
O	106197	106200	set
O	106201	106209	contains
O	106210	106212	an
O	106213	106216	NaN
O	106217	106220	and
O	106221	106222	I
O	106223	106226	try
O	106227	106229	to
O	106230	106233	add
O	106234	106241	another
O	106242	106245	one
O	106245	106246	,
O	106247	106249	is
O	106250	106252	it
O	106253	106259	unique
O	106260	106267	because
O	106268	106270	it
O	106271	106273	is
O	106274	106277	not
O	106278	106283	equal
O	106284	106286	to
O	106287	106290	the
O	106291	106294	one
O	106295	106299	that
O	106300	106302	is
O	106303	106310	already
O	106311	106316	there
O	106316	106317	?

O	106318	106322	What
O	106323	106328	about
O	106329	106330	+
O	106330	106331	0
O	106332	106335	and
O	106336	106337	-
O	106337	106338	0
O	106338	106339	,
O	106340	106346	should
O	106347	106351	they
O	106352	106354	be
O	106355	106365	considered
O	106366	106371	equal
O	106372	106374	or
O	106375	106384	different
O	106384	106385	?

O	106386	106391	There
O	106391	106392	'
O	106392	106393	s
O	106394	106397	the
O	106398	106402	rule
O	106403	106407	that
O	106408	106411	any
O	106412	106415	two
O	106416	106421	items
O	106422	106432	considered
O	106433	106438	equal
O	106439	106443	must
O	106444	106448	have
O	106449	106452	the
O	106453	106457	same
O	106458	106462	hash
O	106463	106468	value
O	106468	106469	.

O	106470	106472	So
O	106473	106476	the
O	106477	106485	sensible
O	106486	106491	thing
O	106492	106494	is
O	106495	106496	(
O	106496	106504	probably
O	106504	106505	)
O	106506	106510	that
O	106511	106512	a
O	106513	106517	hash
O	106518	106526	function
O	106527	106534	returns
O	106535	106538	one
O	106539	106545	unique
O	106546	106551	value
O	106552	106555	for
O	106556	106559	all
O	106560	106564	NaNs
O	106564	106565	,
O	106566	106569	and
O	106570	106573	one
O	106574	106580	unique
O	106581	106586	value
O	106587	106590	for
O	106591	106592	+
O	106592	106593	0
O	106594	106597	and
O	106598	106599	-
O	106599	106600	0
O	106600	106601	.

O	106602	106605	And
O	106606	106611	after
O	106612	106615	the
O	106616	106620	hash
O	106621	106627	lookup
O	106628	106632	when
O	106633	106636	you
O	106637	106641	need
O	106642	106644	to
O	106645	106649	find
O	106650	106652	an
O	106653	106660	element
O	106661	106665	with
O	106666	106669	the
O	106670	106674	same
O	106675	106679	hash
O	106680	106685	value
O	106686	106690	that
O	106691	106693	is
O	106694	106702	actually
O	106703	106708	equal
O	106708	106709	,
O	106710	106713	two
O	106714	106718	NaNs
O	106719	106725	should
O	106726	106728	be
O	106729	106739	considered
O	106740	106745	equal
O	106746	106747	(
O	106747	106750	but
O	106751	106760	different
O	106761	106765	from
O	106766	106774	anything
O	106775	106779	else
O	106779	106780	)
O	106780	106781	.

O	106782	106786	That
O	106786	106787	'
O	106787	106788	s
O	106789	106797	probably
O	106798	106801	why
B-api_mention	106802	106808	Double
I-api_mention	106808	106809	.
I-api_mention	106809	106812	Nan
I-api_mention	106812	106813	.
I-api_mention	106813	106818	equal
I-api_mention	106819	106820	(
I-api_mention	106820	106821	)
O	106822	106829	behaves
O	106830	106839	different
O	106840	106844	from
O	106845	106846	=
O	106846	106847	=
O	106847	106848	.

O	106850	106858	Question
O	106858	106859	-
O	106859	106867	28584669
O	106867	106868	,
O	106869	106875	answer
O	106875	106876	-
O	106876	106884	28596792

O	106885	106887	To
O	106888	106890	me
O	106890	106891	,
O	106892	106894	it
O	106895	106900	seems
O	106901	106905	that
O	106906	106907	"
O	106907	106914	because
O	106915	106917	it
O	106918	106924	should
O	106925	106931	behave
O	106932	106935	the
O	106936	106940	same
O	106941	106943	as
O	106944	106948	zero
O	106948	106949	"
O	106950	106955	would
O	106956	106960	make
O	106961	106962	a
O	106963	106967	good
O	106968	106974	answer
O	106974	106975	.

O	106976	106986	Arithmetic
O	106987	106995	overflow
O	106996	106999	and
O	107000	107009	underflow
O	107010	107016	should
O	107017	107019	be
O	107020	107029	handlable
O	107030	107039	similarly
O	107039	107040	.

O	107041	107043	If
O	107044	107047	you
O	107048	107057	underflow
O	107058	107062	from
O	107063	107066	the
O	107067	107074	largest
O	107075	107079	near
O	107079	107080	-
O	107080	107095	infinitesimally
O	107096	107101	small
O	107102	107107	value
O	107108	107113	which
O	107114	107117	can
O	107118	107120	be
O	107121	107127	stored
O	107128	107130	in
O	107131	107132	a
O	107133	107138	float
O	107138	107139	,
O	107140	107143	you
O	107144	107147	get
O	107148	107152	zero
O	107152	107153	,
O	107154	107157	and
O	107158	107163	zeros
O	107164	107171	compare
O	107172	107174	as
O	107175	107184	identical
O	107184	107185	.

O	107186	107188	If
O	107189	107192	you
O	107193	107201	overflow
O	107202	107206	from
O	107207	107210	the
O	107211	107218	largest
O	107219	107223	near
O	107223	107224	-
O	107224	107234	infinitely
O	107235	107240	large
O	107241	107246	value
O	107247	107252	which
O	107253	107256	can
O	107257	107259	be
O	107260	107266	stored
O	107267	107269	in
O	107270	107271	a
O	107272	107277	float
O	107277	107278	,
O	107279	107282	you
O	107283	107286	get
O	107287	107290	INF
O	107290	107291	,
O	107292	107295	and
O	107296	107300	INFs
O	107301	107308	compare
O	107309	107311	as
O	107312	107321	identical
O	107321	107322	.

O	107323	107327	This
O	107328	107333	means
O	107334	107338	that
O	107339	107343	code
O	107344	107349	which
O	107350	107357	handles
O	107358	107365	numbers
O	107366	107371	which
O	107372	107375	are
O	107376	107379	out
O	107379	107380	-
O	107380	107382	of
O	107382	107383	-
O	107383	107388	scope
O	107389	107391	in
O	107392	107396	both
O	107397	107407	directions
O	107408	107412	will
O	107413	107416	not
O	107417	107424	require
O	107425	107433	separate
O	107434	107441	special
O	107441	107442	-
O	107442	107448	casing
O	107449	107452	for
O	107453	107456	one
O	107457	107459	or
O	107460	107463	the
O	107464	107469	other
O	107469	107470	.

O	107471	107478	Instead
O	107478	107479	,
O	107480	107486	either
O	107487	107491	both
O	107492	107494	or
O	107495	107502	neither
O	107503	107507	will
O	107508	107512	need
O	107513	107515	to
O	107516	107518	be
O	107519	107526	treated
O	107527	107538	differently
O	107538	107539	.

O	107540	107543	And
O	107544	107547	the
O	107548	107556	simplest
O	107557	107568	requirement
O	107569	107571	is
O	107572	107579	covered
O	107580	107582	by
O	107583	107586	the
O	107587	107588	"
O	107588	107595	neither
O	107595	107596	"
O	107597	107601	case
O	107601	107602	:
O	107603	107606	you
O	107607	107611	want
O	107612	107614	to
O	107615	107620	check
O	107621	107623	if
O	107624	107633	something
O	107634	107638	over
O	107638	107639	/
O	107639	107650	underflowed
O	107650	107651	,
O	107652	107655	you
O	107656	107659	can
O	107660	107667	compare
O	107668	107670	it
O	107671	107673	to
O	107674	107678	zero
O	107678	107679	/
O	107679	107682	INF
O	107683	107688	using
O	107689	107693	just
O	107694	107697	the
O	107698	107704	normal
O	107705	107715	arithmetic
O	107716	107726	comparison
O	107727	107736	operators
O	107736	107737	,
O	107738	107745	without
O	107746	107753	needing
O	107754	107756	to
O	107757	107761	know
O	107762	107765	you
O	107766	107773	current
O	107774	107782	language
O	107782	107783	'
O	107783	107784	s
O	107785	107792	special
O	107793	107799	syntax
O	107800	107803	for
O	107804	107807	the
O	107808	107816	checking
O	107817	107824	command
O	107824	107825	:
O	107826	107828	is
O	107829	107831	it
B-api_mention	107832	107836	Math
I-api_mention	107836	107837	.
I-api_mention	107837	107847	isInfinite
I-api_mention	107847	107848	(
I-api_mention	107848	107849	)
O	107849	107850	,
B-api_mention	107851	107856	Float
I-api_mention	107856	107857	.
I-api_mention	107857	107881	checkForPositiveInfinity
I-api_mention	107881	107882	(
I-api_mention	107882	107883	)
O	107883	107884	,
B-api_mention	107885	107898	hasOverflowed
I-api_mention	107898	107899	(
I-api_mention	107899	107900	)
O	107900	107901	.
O	107901	107902	.
O	107902	107903	.
O	107903	107904	?

O	107906	107914	Question
O	107914	107915	-
O	107915	107923	30217236
O	107923	107924	,
O	107925	107931	answer
O	107931	107932	-
O	107932	107940	30217518

O	107941	107951	Presumably
O	107951	107952	,
O	107953	107956	you
O	107957	107960	are
O	107961	107964	not
O	107965	107972	calling
O	107973	107977	your
O	107978	107985	generic
O	107986	107992	method
O	107993	107995	in
O	107996	107997	a
O	107998	108005	generic
O	108006	108013	fashion
O	108013	108014	,
O	108015	108017	so
O	108018	108020	it
O	108020	108021	'
O	108021	108022	s
O	108023	108030	treated
O	108031	108035	like
O	108036	108037	a
O	108038	108042	call
O	108043	108045	to
O	108046	108047	x
O	108047	108048	(
O	108048	108052	args
O	108052	108053	)
O	108054	108055	.

O	108056	108058	In
O	108059	108063	this
O	108064	108071	example
O	108071	108072	:
O	108073	108074	#
O	108074	108077	pre
O	108078	108081	The
O	108082	108087	first
O	108088	108092	call
O	108093	108095	to
O	108096	108097	x
O	108098	108100	is
O	108101	108104	not
O	108105	108109	made
O	108110	108121	generically
O	108122	108124	so
O	108125	108127	it
O	108128	108136	compiles
O	108136	108137	.

O	108138	108141	The
O	108142	108148	second
O	108149	108153	call
O	108154	108161	equates
O	108162	108163	T
O	108164	108166	to
B-api_mention	108167	108173	String
O	108174	108175	,
O	108176	108178	so
O	108179	108181	it
O	108182	108187	fails
O	108188	108195	because
O	108196	108197	1
O	108198	108201	and
O	108202	108203	2
O	108204	108207	are
O	108208	108211	not
O	108212	108219	Strings
O	108220	108221	.

O	108222	108225	The
O	108226	108231	third
O	108232	108236	call
O	108237	108245	compiles
O	108246	108253	because
O	108254	108256	it
O	108257	108265	properly
O	108266	108272	passes
O	108273	108275	in
O	108276	108283	Strings
O	108284	108285	.

O	108287	108295	Question
O	108295	108296	-
O	108296	108304	30217236
O	108304	108305	,
O	108306	108312	answer
O	108312	108313	-
O	108313	108321	30219144

O	108322	108325	Why
O	108326	108330	this
O	108331	108337	should
O	108338	108340	be
O	108341	108348	problem
O	108349	108351	in
O	108352	108355	the
O	108356	108361	first
O	108362	108367	place
O	108368	108370	is
O	108371	108375	kind
O	108376	108378	of
O	108379	108387	nebulous
O	108388	108390	to
O	108391	108393	me
O	108393	108394	.

O	108395	108396	I
O	108397	108404	suspect
O	108405	108408	you
O	108408	108409	'
O	108409	108411	ve
O	108412	108419	instead
O	108420	108433	misunderstood
O	108434	108443	something
O	108444	108449	about
O	108450	108453	the
O	108454	108458	ways
O	108459	108461	in
O	108462	108467	which
O	108468	108471	the
O	108472	108476	type
O	108477	108483	system
O	108484	108486	is
O	108487	108493	useful
O	108493	108494	.

O	108495	108499	What
O	108500	108503	can
O	108504	108506	we
O	108507	108509	do
O	108510	108514	with
O	108515	108516	a
O	108517	108518	<
O	108518	108519	T
O	108519	108520	>
O	108521	108525	void
O	108526	108527	x
O	108527	108528	(
O	108528	108532	args
O	108532	108533	)
O	108534	108535	?

O	108536	108540	Well
O	108540	108541	,
O	108542	108545	not
O	108546	108547	a
O	108548	108553	whole
O	108554	108557	lot
O	108557	108558	.

O	108559	108565	Inside
O	108566	108569	the
O	108570	108574	body
O	108575	108577	of
O	108578	108579	x
O	108580	108581	,
O	108582	108583	T
O	108584	108586	is
O	108587	108590	the
O	108591	108595	same
O	108596	108598	as
B-api_mention	108599	108605	Object
O	108606	108607	,
O	108608	108610	so
O	108611	108613	we
O	108614	108619	could
O	108620	108624	only
O	108625	108627	do
O	108628	108637	something
O	108638	108642	like
O	108643	108647	call
B-api_mention	108648	108656	toString
O	108657	108659	on
O	108660	108661	a
O	108662	108665	and
O	108666	108667	b
O	108668	108670	to
O	108671	108676	print
O	108677	108681	them
O	108681	108682	.

O	108683	108688	There
O	108688	108689	'
O	108689	108690	s
O	108691	108697	really
O	108698	108700	no
O	108701	108710	practical
O	108711	108717	reason
O	108718	108719	a
O	108720	108723	and
O	108724	108725	b
O	108726	108730	must
O	108731	108735	have
O	108736	108739	the
O	108740	108744	same
O	108745	108749	type
O	108749	108750	.

O	108751	108755	Just
O	108756	108760	that
O	108761	108765	they
O	108766	108770	have
O	108771	108775	some
O	108776	108780	type
O	108781	108783	in
O	108784	108790	common
O	108790	108791	,
O	108792	108795	and
O	108796	108800	that
O	108801	108805	type
O	108806	108808	is
B-api_mention	108809	108815	Object
O	108816	108818	or
O	108819	108820	a
O	108821	108828	subtype
O	108829	108831	of
O	108832	108834	it
O	108834	108835	.

O	108836	108838	In
O	108839	108843	fact
O	108843	108844	,
O	108845	108850	there
O	108850	108851	'
O	108851	108852	s
O	108853	108855	no
O	108856	108861	clear
O	108862	108868	reason
O	108869	108872	why
O	108873	108874	<
O	108874	108875	T
O	108875	108876	>
O	108877	108881	void
O	108882	108883	x
O	108883	108884	(
O	108884	108888	args
O	108888	108889	)
O	108890	108898	actually
O	108899	108904	needs
O	108905	108907	to
O	108908	108910	be
O	108911	108918	generic
O	108919	108921	at
O	108922	108925	all
O	108925	108926	.

O	108927	108928	#
O	108928	108930	li
O	108931	108934	The
O	108935	108941	method
O	108942	108946	body
O	108947	108952	doesn
O	108952	108953	'
O	108953	108954	t
O	108955	108959	care
O	108960	108964	what
O	108965	108968	the
O	108969	108975	actual
O	108976	108981	types
O	108982	108984	of
O	108985	108986	a
O	108987	108990	and
O	108991	108992	b
O	108993	108996	are
O	108997	109004	because
O	109005	109007	it
O	109008	109014	couldn
O	109014	109015	'
O	109015	109016	t
O	109017	109020	use
O	109021	109025	them
O	109026	109032	anyway
O	109032	109033	.

O	109034	109035	#
O	109035	109037	li
O	109038	109041	The
O	109042	109046	call
O	109047	109051	site
O	109052	109057	doesn
O	109057	109058	'
O	109058	109059	t
O	109060	109064	care
O	109065	109069	what
O	109070	109073	the
O	109074	109080	actual
O	109081	109086	types
O	109087	109089	of
O	109090	109091	a
O	109092	109095	and
O	109096	109097	b
O	109098	109101	are
O	109102	109109	because
O	109110	109111	x
O	109112	109114	is
O	109115	109116	a
O	109117	109121	void
O	109122	109128	method
O	109129	109131	so
O	109132	109134	it
O	109134	109135	'
O	109135	109136	s
O	109137	109138	a
O	109139	109144	black
O	109145	109149	hole
O	109149	109150	.

O	109151	109153	It
O	109153	109154	'
O	109154	109155	s
O	109156	109160	more
O	109161	109168	typical
O	109169	109172	for
O	109173	109174	a
O	109175	109181	method
O	109182	109184	to
O	109185	109189	have
O	109190	109191	a
O	109192	109198	result
O	109198	109199	,
O	109200	109204	like
O	109205	109206	<
O	109206	109207	T
O	109207	109208	>
B-api_mention	109209	109213	List
I-api_mention	109213	109214	<
I-api_mention	109214	109215	T
I-api_mention	109215	109216	>
I-api_mention	109217	109223	Arrays
I-api_mention	109223	109224	.
I-api_mention	109224	109230	asList
I-api_mention	109230	109231	(
I-api_mention	109231	109235	args
I-api_mention	109235	109236	)
O	109237	109238	:
O	109239	109240	/
O	109240	109241	/
O	109242	109246	This
O	109247	109251	will
O	109252	109257	cause
O	109258	109259	a
O	109260	109267	compile
O	109268	109273	error
O	109274	109281	because
O	109282	109283	/
O	109283	109284	/
O	109285	109288	the
O	109289	109293	type
O	109294	109302	inferred
O	109303	109307	must
O	109308	109310	be
O	109311	109321	compatible
O	109322	109323	/
O	109323	109324	/
O	109325	109329	with
O	109330	109333	the
O	109334	109340	return
O	109341	109351	assignment
O	109351	109352	.

B-api_mention	109353	109357	List
I-api_mention	109357	109358	<
I-api_mention	109358	109359	T
I-api_mention	109359	109360	>
O	109361	109362	r
O	109363	109364	=
B-api_mention	109365	109371	Arrays
I-api_mention	109371	109372	.
I-api_mention	109372	109378	asList
I-api_mention	109378	109379	(
I-api_mention	109379	109383	args
I-api_mention	109383	109384	)
O	109384	109385	;
O	109386	109388	Or
O	109389	109390	a
O	109391	109396	bound
O	109396	109397	:
O	109398	109399	#
O	109399	109402	pre
O	109403	109405	Or
O	109406	109407	a
O	109408	109413	bound
O	109414	109419	which
O	109420	109427	asserts
O	109428	109432	some
O	109433	109437	kind
O	109438	109440	of
O	109441	109449	relation
O	109449	109450	:
O	109451	109452	#
O	109452	109455	pre

O	109457	109465	Question
O	109465	109466	-
O	109466	109474	30384955
O	109474	109475	,
O	109476	109482	answer
O	109482	109483	-
O	109483	109491	30385298

O	109492	109501	Replacing
O	109502	109505	the
O	109506	109516	definition
O	109517	109519	of
O	109520	109528	TbinList
O	109529	109533	with
O	109534	109539	class
O	109540	109548	TbinList
O	109548	109549	<
O	109549	109550	T
O	109550	109551	>
O	109552	109559	extends
B-api_mention	109560	109569	ArrayList
I-api_mention	109569	109570	<
I-api_mention	109570	109571	T
I-api_mention	109571	109572	>
O	109573	109574	{
O	109574	109575	}
O	109576	109579	and
O	109580	109588	defining
O	109589	109594	test2
O	109595	109599	with
O	109600	109608	TbinList
O	109608	109609	<
O	109609	109610	T
O	109610	109611	>
O	109612	109617	test2
O	109618	109619	=
O	109620	109623	new
O	109624	109632	TbinList
O	109632	109633	<
O	109633	109634	T
O	109634	109635	>
O	109635	109636	(
O	109636	109640	args
O	109640	109641	)
O	109641	109642	;
O	109643	109650	instead
O	109651	109656	would
O	109657	109662	solve
O	109663	109666	the
O	109667	109672	issue
O	109672	109673	.

O	109674	109678	With
O	109679	109683	your
O	109684	109694	definition
O	109695	109698	you
O	109698	109699	'
O	109699	109701	re
O	109702	109708	ending
O	109709	109711	up
O	109712	109716	with
O	109717	109719	an
B-api_mention	109720	109729	ArrayList
I-api_mention	109729	109730	<
I-api_mention	109730	109731	T
I-api_mention	109731	109732	>
O	109733	109738	where
O	109739	109740	T
O	109741	109743	is
O	109744	109747	any
O	109748	109753	fixed
O	109754	109759	class
O	109760	109769	extending
O	109770	109774	Base
O	109775	109776	.

O	109778	109786	Question
O	109786	109787	-
O	109787	109795	30384955
O	109795	109796	,
O	109797	109803	answer
O	109803	109804	-
O	109804	109812	30385343

O	109813	109817	This
O	109818	109825	happens
O	109826	109833	because
O	109834	109836	of
O	109837	109840	the
O	109841	109844	way
O	109845	109852	capture
O	109853	109863	conversion
O	109864	109869	works
O	109869	109870	:
O	109871	109872	#
O	109872	109882	blockquote
O	109883	109887	Note
O	109888	109891	the
O	109892	109895	end
O	109896	109899	bit
O	109899	109900	.

O	109901	109903	So
O	109903	109904	,
O	109905	109909	what
O	109910	109914	this
O	109915	109920	means
O	109921	109923	is
O	109924	109928	that
O	109928	109929	,
O	109930	109935	given
O	109936	109937	a
O	109938	109942	type
O	109943	109947	like
O	109948	109952	this
O	109952	109953	:
O	109954	109955	#
O	109955	109958	pre
O	109959	109963	Only
O	109964	109965	"
O	109965	109972	outside
O	109972	109973	"
O	109974	109983	wildcards
O	109984	109987	are
O	109988	109996	captured
O	109996	109997	.

O	109998	110001	The
O	110002	110005	Map
O	110006	110009	key
O	110010	110018	wildcard
O	110019	110021	is
O	110022	110030	captured
O	110030	110031	,
O	110032	110035	but
O	110036	110039	the
O	110040	110044	List
O	110045	110052	element
O	110053	110061	wildcard
O	110062	110064	is
O	110065	110068	not
O	110068	110069	.

O	110070	110074	This
O	110075	110077	is
O	110078	110081	why
O	110081	110082	,
O	110083	110086	for
O	110087	110094	example
O	110094	110095	,
O	110096	110098	we
O	110099	110102	can
O	110103	110106	add
O	110107	110109	to
O	110110	110111	a
B-api_mention	110112	110116	List
I-api_mention	110116	110117	<
I-api_mention	110117	110118	T
I-api_mention	110118	110119	>
O	110120	110121	,
O	110122	110125	but
O	110126	110129	not
O	110130	110131	a
B-api_mention	110132	110136	List
I-api_mention	110136	110137	<
I-api_mention	110137	110138	T
I-api_mention	110138	110139	>
O	110140	110141	.

O	110142	110145	The
O	110146	110155	placement
O	110156	110158	of
O	110159	110162	the
O	110163	110171	wildcard
O	110172	110174	is
O	110175	110179	what
O	110180	110187	matters
O	110187	110188	.

O	110189	110197	Carrying
O	110198	110202	this
O	110203	110207	over
O	110208	110210	to
O	110211	110219	TbinList
O	110220	110221	,
O	110222	110224	if
O	110225	110227	we
O	110228	110232	have
O	110233	110235	an
B-api_mention	110236	110245	ArrayList
I-api_mention	110245	110246	<
I-api_mention	110246	110247	T
I-api_mention	110247	110248	>
O	110249	110250	,
O	110251	110254	the
O	110255	110263	wildcard
O	110264	110266	is
O	110267	110269	in
O	110270	110271	a
O	110272	110277	place
O	110278	110283	where
O	110284	110286	it
O	110287	110291	does
O	110292	110295	not
O	110296	110299	get
O	110300	110308	captured
O	110308	110309	,
O	110310	110313	but
O	110314	110316	if
O	110317	110319	we
O	110320	110324	have
O	110325	110326	a
O	110327	110335	TbinList
O	110335	110336	<
O	110336	110337	T
O	110337	110338	>
O	110339	110340	,
O	110341	110344	the
O	110345	110353	wildcard
O	110354	110356	is
O	110357	110359	in
O	110360	110361	a
O	110362	110367	place
O	110368	110373	where
O	110374	110376	it
O	110377	110381	gets
O	110382	110390	captured
O	110390	110391	.

O	110392	110394	As
O	110395	110396	I
O	110397	110404	alluded
O	110405	110407	to
O	110408	110410	in
O	110411	110414	the
O	110415	110423	comments
O	110423	110424	,
O	110425	110428	one
O	110429	110433	very
O	110434	110445	interesting
O	110446	110450	test
O	110451	110453	is
O	110454	110458	this
O	110458	110459	:
B-api_mention	110460	110469	ArrayList
I-api_mention	110469	110470	<
I-api_mention	110470	110471	T
I-api_mention	110471	110472	>
O	110473	110478	test3
O	110479	110480	=
O	110481	110484	new
O	110485	110493	TbinList
O	110493	110494	<
O	110494	110495	T
O	110495	110496	>
O	110496	110497	(
O	110497	110501	args
O	110501	110502	)
O	110502	110503	;
O	110504	110506	We
O	110507	110510	get
O	110511	110515	this
O	110516	110521	error
O	110521	110522	:
O	110523	110524	#
O	110524	110527	pre
O	110528	110530	So
O	110531	110536	there
O	110536	110537	'
O	110537	110538	s
O	110539	110541	no
O	110542	110545	way
O	110546	110548	to
O	110549	110553	make
O	110554	110556	it
O	110557	110561	work
O	110562	110564	as
O	110564	110565	-
O	110565	110567	is
O	110567	110568	.

O	110569	110572	One
O	110573	110575	of
O	110576	110579	the
O	110580	110585	class
O	110586	110598	declarations
O	110599	110604	needs
O	110605	110607	to
O	110608	110610	be
O	110611	110618	changed
O	110618	110619	.

O	110620	110632	Additionally
O	110632	110633	,
O	110634	110639	think
O	110640	110645	about
O	110646	110648	it
O	110649	110653	this
O	110654	110657	way
O	110657	110658	.

O	110659	110666	Suppose
O	110667	110669	we
O	110670	110673	had
O	110673	110674	:
O	110675	110676	#
O	110676	110679	pre
O	110680	110683	And
O	110684	110689	since
O	110690	110691	a
O	110692	110700	wildcard
O	110701	110707	allows
O	110708	110717	subtyping
O	110717	110718	,
O	110719	110721	we
O	110722	110725	can
O	110726	110728	do
O	110729	110733	this
O	110733	110734	:
O	110735	110743	TbinList
O	110743	110744	<
O	110744	110745	T
O	110745	110746	>
O	110747	110752	test4
O	110753	110754	=
O	110755	110758	new
O	110759	110767	TbinList
O	110767	110768	<
O	110768	110769	T
O	110769	110770	>
O	110770	110771	(
O	110771	110775	args
O	110775	110776	)
O	110776	110777	;
O	110778	110784	Should
O	110785	110787	we
O	110788	110790	be
O	110791	110795	able
O	110796	110798	to
O	110799	110802	add
O	110803	110804	a
O	110805	110809	Tbin
O	110809	110810	<
O	110810	110811	T
O	110811	110812	>
O	110813	110815	to
O	110816	110821	test4
O	110822	110823	?

O	110824	110826	No
O	110826	110827	,
O	110828	110832	this
O	110833	110838	would
O	110839	110841	be
O	110842	110846	heap
O	110847	110856	pollution
O	110856	110857	.

O	110858	110860	We
O	110861	110866	might
O	110867	110870	end
O	110871	110873	up
O	110874	110878	with
O	110879	110887	Derived2
O	110888	110889	s
O	110890	110898	floating
O	110899	110905	around
O	110906	110908	in
O	110909	110910	a
O	110911	110919	TbinList
O	110919	110920	<
O	110920	110921	T
O	110921	110922	>
O	110923	110924	.

O	110926	110934	Question
O	110934	110935	-
O	110935	110943	28840047
O	110943	110944	,
O	110945	110951	answer
O	110951	110952	-
O	110952	110960	28840048

O	110961	110965	This
O	110966	110968	is
O	110969	110971	of
O	110972	110978	course
O	110979	110980	a
O	110981	110982	"
O	110982	110989	feature
O	110989	110990	"
O	110991	110992	.

O	110993	110996	The
B-api_mention	110997	111014	ConcurrentHashMap
I-api_mention	111014	111015	.
I-api_mention	111015	111030	computeIfAbsent
I-api_mention	111030	111031	(
I-api_mention	111031	111032	)
O	111033	111040	Javadoc
O	111041	111046	reads
O	111046	111047	:
O	111048	111049	#
O	111049	111059	blockquote
O	111060	111063	The
O	111064	111065	"
O	111065	111069	must
O	111070	111073	not
O	111073	111074	"
O	111075	111082	wording
O	111083	111085	is
O	111086	111087	a
O	111088	111093	clear
O	111094	111102	contract
O	111102	111103	,
O	111104	111109	which
O	111110	111112	my
O	111113	111122	algorithm
O	111123	111131	violated
O	111131	111132	,
O	111133	111141	although
O	111142	111145	not
O	111146	111149	for
O	111150	111153	the
O	111154	111158	same
O	111159	111170	concurrency
O	111171	111178	reasons
O	111178	111179	.

O	111180	111184	What
O	111184	111185	'
O	111185	111186	s
O	111187	111192	still
O	111193	111204	interesting
O	111205	111207	is
O	111208	111212	that
O	111213	111218	there
O	111219	111221	is
O	111222	111224	no
B-api_mention	111225	111256	ConcurrentModificationException
O	111257	111258	.

O	111259	111266	Instead
O	111266	111267	,
O	111268	111271	the
O	111272	111279	program
O	111280	111284	just
O	111285	111290	never
O	111291	111296	halts
O	111297	111298	-
O	111299	111304	which
O	111305	111310	still
O	111311	111313	is
O	111314	111315	a
O	111316	111322	rather
O	111323	111332	dangerous
O	111333	111336	bug
O	111337	111339	in
O	111340	111342	my
O	111343	111350	opinion
O	111351	111352	(
O	111352	111353	i
O	111353	111354	.
O	111354	111355	e
O	111355	111356	.
O	111357	111365	infinite
O	111366	111371	loops
O	111371	111372	.
O	111373	111375	or
O	111375	111376	:
O	111377	111385	anything
O	111386	111390	that
O	111391	111394	can
O	111395	111403	possibly
O	111404	111406	go
O	111407	111412	wrong
O	111412	111413	,
O	111414	111418	does
O	111419	111420	)
O	111420	111421	.

O	111422	111425	The
O	111426	111434	simplest
O	111435	111438	use
O	111438	111439	-
O	111439	111443	site
O	111444	111452	solution
O	111453	111456	for
O	111457	111461	this
O	111462	111470	concrete
O	111471	111478	problem
O	111479	111484	would
O	111485	111487	be
O	111488	111490	to
O	111491	111494	not
O	111495	111498	use
O	111499	111500	a
B-api_mention	111501	111518	ConcurrentHashMap
O	111519	111520	,
O	111521	111524	but
O	111525	111529	just
O	111530	111531	a
B-api_mention	111532	111539	HashMap
O	111540	111547	instead
O	111547	111548	:
O	111549	111555	static
B-api_mention	111556	111559	Map
I-api_mention	111559	111560	<
I-api_mention	111560	111561	T
I-api_mention	111561	111562	>
O	111563	111568	cache
O	111569	111570	=
O	111571	111574	new
B-api_mention	111575	111582	HashMap
I-api_mention	111582	111583	<
I-api_mention	111583	111584	T
I-api_mention	111584	111585	>
I-api_mention	111585	111586	(
I-api_mention	111586	111590	args
I-api_mention	111590	111591	)
O	111591	111592	;
O	111593	111596	Now
O	111596	111597	,
O	111598	111608	everything
O	111609	111614	works
O	111615	111619	fine
O	111619	111620	.

O	111621	111625	Note
O	111625	111626	:
O	111627	111630	The
B-api_mention	111631	111638	HashMap
I-api_mention	111638	111639	.
I-api_mention	111639	111654	computeIfAbsent
I-api_mention	111654	111655	(
I-api_mention	111655	111656	)
O	111657	111659	or
B-api_mention	111660	111663	Map
I-api_mention	111663	111664	.
I-api_mention	111664	111679	computeIfAbsent
I-api_mention	111679	111680	(
I-api_mention	111680	111681	)
O	111682	111689	Javadoc
O	111690	111693	don
O	111693	111694	'
O	111694	111695	t
O	111696	111702	forbid
O	111703	111707	such
O	111708	111717	recursive
O	111718	111729	computation
O	111729	111730	,
O	111731	111736	which
O	111737	111739	is
O	111740	111742	of
O	111743	111749	course
O	111750	111760	ridiculous
O	111761	111763	as
O	111764	111767	the
O	111768	111772	type
O	111773	111775	of
O	111776	111779	the
O	111780	111785	cache
O	111786	111788	is
B-api_mention	111789	111792	Map
I-api_mention	111792	111793	<
I-api_mention	111793	111794	T
I-api_mention	111794	111795	>
O	111796	111797	,
O	111798	111801	not
B-api_mention	111802	111819	ConcurrentHashMap
I-api_mention	111819	111820	<
I-api_mention	111820	111821	T
I-api_mention	111821	111822	>
O	111823	111824	.

O	111825	111827	It
O	111828	111830	is
O	111831	111835	very
O	111836	111845	dangerous
O	111846	111849	for
O	111850	111858	subtypes
O	111859	111861	to
O	111862	111873	drastically
O	111874	111876	re
O	111876	111877	-
O	111877	111883	define
O	111884	111889	super
O	111890	111894	type
O	111895	111904	contracts
O	111905	111906	(
B-api_mention	111907	111910	Set
O	111911	111913	vs
O	111913	111914	.
B-api_mention	111915	111924	SortedSet
O	111925	111927	is
O	111928	111936	greeting
O	111936	111937	)
O	111937	111938	.

O	111939	111941	It
O	111942	111948	should
O	111949	111953	thus
O	111954	111956	be
O	111957	111966	forbidden
O	111967	111971	also
O	111972	111974	in
O	111975	111980	super
O	111981	111986	types
O	111986	111987	,
O	111988	111990	to
O	111991	111998	perform
O	111999	112003	such
O	112004	112013	recursion
O	112013	112014	.

O	112016	112024	Question
O	112024	112025	-
O	112025	112033	29922296
O	112033	112034	,
O	112035	112041	answer
O	112041	112042	-
O	112042	112050	29922469

O	112051	112053	My
O	112054	112059	guess
O	112060	112062	is
O	112063	112067	that
O	112068	112073	enums
O	112074	112077	are
O	112078	112085	limited
O	112086	112088	in
O	112089	112093	size
O	112094	112095	(
O	112095	112096	i
O	112096	112097	.
O	112097	112098	e
O	112099	112102	the
O	112103	112107	size
O	112108	112110	is
O	112111	112114	not
O	112115	112122	limited
O	112123	112125	by
O	112126	112134	language
O	112135	112138	but
O	112139	112146	limited
O	112147	112149	by
O	112150	112155	usage
O	112155	112156	)
O	112156	112159	and
O	112160	112164	thus
O	112165	112169	they
O	112170	112173	don
O	112173	112174	'
O	112174	112175	t
O	112176	112180	need
O	112181	112182	a
O	112183	112189	native
O	112190	112196	stream
O	112197	112200	api
O	112200	112201	.

O	112202	112209	Streams
O	112210	112213	are
O	112214	112218	very
O	112219	112223	good
O	112224	112228	when
O	112229	112232	you
O	112233	112237	have
O	112238	112240	to
O	112241	112251	manipulate
O	112252	112261	transform
O	112262	112265	and
O	112266	112275	recollect
O	112276	112279	the
O	112280	112288	elements
O	112289	112291	in
O	112292	112293	a
O	112294	112300	stream
O	112300	112301	;
O	112302	112307	these
O	112308	112311	are
O	112312	112315	not
O	112316	112322	common
O	112323	112327	uses
O	112328	112332	case
O	112333	112336	for
O	112337	112341	Enum
O	112342	112343	(
O	112343	112350	usually
O	112351	112354	you
O	112355	112362	iterate
O	112363	112367	over
O	112368	112372	enum
O	112373	112379	values
O	112379	112380	,
O	112381	112384	but
O	112385	112391	rarely
O	112392	112395	you
O	112396	112400	need
O	112401	112403	to
O	112404	112413	transform
O	112413	112414	,
O	112415	112418	map
O	112419	112422	and
O	112423	112430	collect
O	112431	112435	them
O	112435	112436	)
O	112436	112437	.

O	112438	112440	If
O	112441	112444	you
O	112445	112449	need
O	112450	112454	only
O	112455	112457	to
O	112458	112460	do
O	112461	112463	an
O	112464	112470	action
O	112471	112475	over
O	112476	112480	each
O	112481	112489	elements
O	112490	112497	perhaps
O	112498	112501	you
O	112502	112508	should
O	112509	112515	expose
O	112516	112520	only
O	112521	112522	a
B-api_mention	112523	112530	forEach
O	112531	112537	method
O	112538	112539	#
O	112539	112542	pre

O	112544	112552	Question
O	112552	112553	-
O	112553	112561	29922296
O	112561	112562	,
O	112563	112569	answer
O	112569	112570	-
O	112570	112578	29922831

O	112579	112584	Three
O	112585	112594	questions
O	112594	112595	:
O	112596	112601	three
O	112601	112602	-
O	112602	112606	part
O	112607	112613	answer
O	112613	112614	:
O	112615	112617	Is
O	112618	112620	it
O	112621	112625	okay
O	112626	112630	from
O	112631	112632	a
O	112633	112639	design
O	112640	112645	point
O	112646	112648	of
O	112649	112653	view
O	112653	112654	?

O	112655	112665	Absolutely
O	112665	112666	.

O	112667	112674	Nothing
O	112675	112680	wrong
O	112681	112685	with
O	112686	112688	it
O	112688	112689	.

O	112690	112692	If
O	112693	112696	you
O	112697	112701	need
O	112702	112704	to
O	112705	112707	do
O	112708	112712	lots
O	112713	112715	of
O	112716	112725	iterating
O	112726	112730	over
O	112731	112735	your
O	112736	112740	enum
O	112740	112741	,
O	112742	112745	the
O	112746	112752	stream
O	112753	112756	API
O	112757	112759	is
O	112760	112763	the
O	112764	112769	clean
O	112770	112773	way
O	112774	112776	to
O	112777	112779	go
O	112780	112783	and
O	112784	112790	hiding
O	112791	112794	the
O	112795	112801	boiler
O	112802	112807	plate
O	112808	112814	behind
O	112815	112816	a
O	112817	112823	little
O	112824	112830	method
O	112831	112833	is
O	112834	112838	fine
O	112838	112839	.

O	112840	112848	Although
O	112849	112850	I
O	112850	112851	’
O	112851	112852	d
O	112853	112861	consider
O	112862	112874	OldCumudgeon
O	112875	112876	’
O	112876	112877	s
O	112878	112885	version
O	112886	112890	even
O	112891	112897	better
O	112897	112898	.

O	112899	112901	Is
O	112902	112904	it
O	112905	112909	okay
O	112910	112914	from
O	112915	112916	a
O	112917	112928	performance
O	112929	112934	point
O	112935	112937	of
O	112938	112942	view
O	112942	112943	?

O	112944	112946	It
O	112947	112951	most
O	112952	112958	likely
O	112959	112964	doesn
O	112964	112965	’
O	112965	112966	t
O	112967	112973	matter
O	112973	112974	.

O	112975	112979	Most
O	112980	112982	of
O	112983	112986	the
O	112987	112991	time
O	112991	112992	,
O	112993	112998	enums
O	112999	113002	are
O	113003	113006	not
O	113007	113011	that
O	113012	113015	big
O	113015	113016	.

O	113017	113026	Therefore
O	113026	113027	,
O	113028	113036	whatever
O	113037	113045	overhead
O	113046	113051	there
O	113052	113054	is
O	113055	113058	for
O	113059	113062	one
O	113063	113069	method
O	113070	113072	or
O	113073	113076	the
O	113077	113082	other
O	113083	113091	probably
O	113092	113097	doesn
O	113097	113098	’
O	113098	113099	t
O	113100	113106	matter
O	113107	113109	in
O	113110	113112	99
O	113112	113113	.
O	113113	113114	9
O	113114	113115	%
O	113116	113118	of
O	113119	113122	the
O	113123	113128	cases
O	113128	113129	.

O	113130	113132	Of
O	113133	113139	course
O	113139	113140	,
O	113141	113146	there
O	113147	113150	are
O	113151	113154	the
O	113155	113156	0
O	113156	113157	.
O	113157	113158	1
O	113158	113159	%
O	113160	113165	where
O	113166	113168	it
O	113169	113173	does
O	113173	113174	.

O	113175	113177	In
O	113178	113182	that
O	113183	113187	case
O	113187	113188	:
O	113189	113196	measure
O	113197	113205	properly
O	113205	113206	,
O	113207	113211	with
O	113212	113216	your
O	113217	113221	real
O	113221	113222	-
O	113222	113227	world
O	113228	113232	data
O	113233	113236	and
O	113237	113246	consumers
O	113246	113247	.

O	113248	113250	If
O	113251	113252	I
O	113253	113256	had
O	113257	113259	to
O	113260	113263	bet
O	113263	113264	,
O	113265	113266	I
O	113266	113267	’
O	113267	113268	d
O	113269	113275	expect
O	113276	113279	the
O	113280	113283	for
O	113284	113288	each
O	113289	113293	loop
O	113294	113296	to
O	113297	113299	be
O	113300	113306	faster
O	113306	113307	,
O	113308	113313	since
O	113314	113316	it
O	113317	113321	maps
O	113322	113326	more
O	113327	113335	directly
O	113336	113338	to
O	113339	113342	the
O	113343	113349	memory
O	113350	113355	model
O	113355	113356	,
O	113357	113360	but
O	113361	113364	don
O	113364	113365	’
O	113365	113366	t
O	113367	113372	guess
O	113373	113377	when
O	113378	113385	talking
O	113386	113397	performance
O	113397	113398	,
O	113399	113402	and
O	113403	113406	don
O	113406	113407	’
O	113407	113408	t
O	113409	113413	tune
O	113414	113420	before
O	113421	113426	there
O	113427	113429	is
O	113430	113436	actual
O	113437	113441	need
O	113442	113445	for
O	113446	113452	tuning
O	113452	113453	.

O	113454	113459	Write
O	113460	113464	your
O	113465	113469	code
O	113470	113472	in
O	113473	113474	a
O	113475	113478	way
O	113479	113483	that
O	113484	113486	is
O	113487	113494	correct
O	113495	113500	first
O	113500	113501	,
O	113502	113506	easy
O	113507	113509	to
O	113510	113514	read
O	113515	113521	second
O	113522	113525	and
O	113526	113530	only
O	113531	113535	then
O	113536	113541	worry
O	113542	113547	about
O	113548	113559	performance
O	113560	113562	of
O	113563	113567	code
O	113568	113573	style
O	113573	113574	.

O	113575	113578	Why
O	113579	113583	aren
O	113583	113584	’
O	113584	113585	t
O	113586	113591	Enums
O	113592	113600	properly
O	113601	113611	integrated
O	113612	113616	into
O	113617	113620	the
B-api_mention	113621	113627	Stream
O	113628	113631	API
O	113631	113632	?

O	113633	113635	If
O	113636	113639	you
O	113640	113647	compare
O	113648	113652	Java
O	113652	113653	’
O	113653	113654	s
B-api_mention	113655	113661	Stream
O	113662	113665	API
O	113666	113668	to
O	113669	113672	the
O	113673	113683	equivalent
O	113684	113686	in
O	113687	113691	many
O	113692	113697	other
O	113698	113707	languages
O	113707	113708	,
O	113709	113711	it
O	113712	113719	appears
O	113720	113729	seriously
O	113730	113737	limited
O	113737	113738	.

O	113739	113744	There
O	113745	113748	are
O	113749	113756	various
O	113757	113763	pieces
O	113764	113768	that
O	113769	113772	are
O	113773	113780	missing
O	113781	113782	(
O	113782	113790	reusable
O	113791	113798	Streams
O	113799	113802	and
O	113803	113812	Optionals
O	113813	113815	as
O	113816	113823	Streams
O	113823	113824	,
O	113825	113828	for
O	113829	113836	example
O	113836	113837	)
O	113837	113838	.

O	113839	113841	On
O	113842	113845	the
O	113846	113851	other
O	113852	113856	hand
O	113856	113857	,
O	113858	113870	implementing
O	113871	113874	the
B-api_mention	113875	113881	Stream
O	113882	113885	API
O	113886	113889	was
O	113890	113899	certainly
O	113900	113901	a
O	113902	113906	huge
O	113907	113913	change
O	113914	113917	for
O	113918	113921	the
O	113922	113925	API
O	113925	113926	.

O	113927	113929	It
O	113930	113933	was
O	113934	113943	postponed
O	113944	113952	multiple
O	113953	113958	times
O	113959	113962	for
O	113963	113964	a
O	113965	113971	reason
O	113971	113972	.

O	113973	113975	So
O	113976	113977	I
O	113978	113983	guess
O	113984	113990	Oracle
O	113991	113997	wanted
O	113998	114000	to
O	114001	114006	limit
O	114007	114010	the
O	114011	114018	changes
O	114019	114021	to
O	114022	114025	the
O	114026	114030	most
O	114031	114040	important
O	114041	114044	use
O	114045	114050	cases
O	114050	114051	.

O	114052	114057	Enums
O	114058	114062	aren
O	114062	114063	’
O	114063	114064	t
O	114065	114069	used
O	114070	114074	that
O	114075	114079	much
O	114080	114086	anyway
O	114086	114087	.

O	114088	114092	Sure
O	114092	114093	,
O	114094	114099	every
O	114100	114107	project
O	114108	114111	has
O	114112	114113	a
O	114114	114120	couple
O	114121	114123	of
O	114124	114128	them
O	114128	114129	,
O	114130	114133	but
O	114134	114138	they
O	114138	114139	’
O	114139	114141	re
O	114142	114149	nothing
O	114150	114158	compared
O	114159	114161	to
O	114162	114165	the
O	114166	114172	number
O	114173	114175	of
O	114176	114181	Lists
O	114182	114185	and
O	114186	114191	other
B-api_mention	114192	114203	Collections
O	114203	114204	.

O	114205	114209	Even
O	114210	114214	when
O	114215	114218	you
O	114219	114223	have
O	114224	114226	an
O	114227	114231	Enum
O	114231	114232	,
O	114233	114235	in
O	114236	114240	many
O	114241	114246	cases
O	114247	114250	you
O	114251	114254	won
O	114254	114255	’
O	114255	114256	t
O	114257	114261	ever
O	114262	114269	iterate
O	114270	114274	over
O	114275	114277	it
O	114277	114278	.

O	114279	114284	Lists
O	114285	114288	and
O	114289	114293	Sets
O	114293	114294	,
O	114295	114297	on
O	114298	114301	the
O	114302	114307	other
O	114308	114312	hand
O	114312	114313	,
O	114314	114317	are
O	114318	114326	probably
O	114327	114335	iterated
O	114336	114340	over
O	114341	114347	almost
O	114348	114353	every
O	114354	114358	time
O	114358	114359	.

O	114360	114361	I
O	114362	114368	assume
O	114369	114373	that
O	114374	114379	these
O	114380	114384	were
O	114385	114388	the
O	114389	114396	reasons
O	114397	114400	why
O	114401	114404	the
O	114405	114410	Enums
O	114411	114415	didn
O	114415	114416	’
O	114416	114417	t
O	114418	114421	get
O	114422	114427	their
O	114428	114431	own
O	114432	114439	adapter
O	114440	114442	to
O	114443	114446	the
B-api_mention	114447	114453	Stream
O	114454	114459	world
O	114459	114460	.

O	114461	114463	We
O	114463	114464	’
O	114464	114466	ll
O	114467	114470	see
O	114471	114478	whether
O	114479	114483	more
O	114484	114486	of
O	114487	114491	this
O	114492	114496	gets
O	114497	114502	added
O	114503	114505	in
O	114506	114512	future
O	114513	114521	versions
O	114521	114522	.

O	114523	114526	And
O	114527	114532	until
O	114533	114537	then
O	114538	114541	you
O	114542	114548	always
O	114549	114552	can
O	114553	114556	use
B-api_mention	114557	114563	Arrays
I-api_mention	114563	114564	.
I-api_mention	114564	114570	stream
O	114571	114572	.

O	114574	114582	Question
O	114582	114583	-
O	114583	114591	29922296
O	114591	114592	,
O	114593	114599	answer
O	114599	114600	-
O	114600	114608	29923793

O	114609	114610	I
O	114611	114616	think
O	114617	114620	the
O	114621	114629	shortest
O	114630	114634	code
O	114635	114637	to
O	114638	114641	get
O	114642	114643	a
B-api_mention	114644	114650	Stream
O	114651	114653	of
O	114654	114658	enum
O	114659	114668	constants
O	114669	114671	is
B-api_mention	114672	114678	Stream
I-api_mention	114678	114679	.
I-api_mention	114679	114681	of
I-api_mention	114681	114682	(
I-api_mention	114682	114686	args
I-api_mention	114686	114687	)
O	114688	114689	.

O	114690	114692	It
O	114692	114693	'
O	114693	114694	s
O	114695	114698	not
O	114699	114701	as
O	114702	114706	nice
O	114707	114709	as
O	114710	114716	Letter
B-api_mention	114716	114717	.
I-api_mention	114717	114723	values
I-api_mention	114723	114724	(
I-api_mention	114724	114728	args
I-api_mention	114728	114729	)
I-api_mention	114729	114730	.
I-api_mention	114730	114736	stream
I-api_mention	114736	114737	(
I-api_mention	114737	114741	args
I-api_mention	114741	114742	)
O	114743	114746	but
O	114747	114751	that
O	114751	114752	'
O	114752	114753	s
O	114754	114756	an
O	114757	114762	issue
O	114763	114767	with
O	114768	114774	arrays
O	114774	114775	,
O	114776	114779	not
O	114780	114792	specifically
O	114793	114798	enums
O	114798	114799	.

O	114800	114801	#
O	114801	114811	blockquote
O	114812	114815	You
O	114816	114819	are
O	114820	114825	right
O	114826	114830	that
O	114831	114834	the
O	114835	114841	nicest
O	114842	114850	possible
O	114851	114855	call
O	114856	114861	would
O	114862	114864	be
O	114865	114871	Letter
B-api_mention	114871	114872	.
I-api_mention	114872	114878	stream
I-api_mention	114878	114879	(
I-api_mention	114879	114883	args
I-api_mention	114883	114884	)
O	114885	114886	.

O	114887	114900	Unfortunately
O	114901	114902	a
O	114903	114908	class
O	114909	114915	cannot
O	114916	114920	have
O	114921	114924	two
O	114925	114932	methods
O	114933	114937	with
O	114938	114941	the
O	114942	114946	same
O	114947	114956	signature
O	114956	114957	,
O	114958	114960	so
O	114961	114963	it
O	114964	114969	would
O	114970	114973	not
O	114974	114976	be
O	114977	114985	possible
O	114986	114988	to
O	114989	114999	implicitly
O	115000	115003	add
O	115004	115005	a
O	115006	115012	static
O	115013	115019	method
B-api_mention	115020	115026	stream
I-api_mention	115026	115027	(
I-api_mention	115027	115031	args
I-api_mention	115031	115032	)
O	115033	115035	to
O	115036	115041	every
O	115042	115046	enum
O	115047	115048	(
O	115048	115050	in
O	115051	115054	the
O	115055	115059	same
O	115060	115063	way
O	115064	115068	that
O	115069	115074	every
O	115075	115079	enum
O	115080	115083	has
O	115084	115086	an
O	115087	115097	implicitly
O	115098	115103	added
O	115104	115110	static
O	115111	115117	method
B-api_mention	115118	115124	values
I-api_mention	115124	115125	(
I-api_mention	115125	115129	args
I-api_mention	115129	115130	)
O	115131	115132	)
O	115133	115135	as
O	115136	115140	this
O	115141	115146	would
O	115147	115152	break
O	115153	115158	every
O	115159	115167	existing
O	115168	115172	enum
O	115173	115177	that
O	115178	115185	already
O	115186	115189	has
O	115190	115191	a
O	115192	115198	static
O	115199	115201	or
O	115202	115210	instance
O	115211	115217	method
O	115218	115225	without
O	115226	115236	parameters
O	115237	115243	called
B-api_mention	115244	115250	stream
I-api_mention	115250	115251	(
I-api_mention	115251	115255	args
I-api_mention	115255	115256	)
O	115257	115258	.

O	115259	115260	#
O	115260	115270	blockquote
O	115271	115272	I
O	115273	115278	think
O	115279	115281	so
O	115281	115282	.

O	115283	115286	The
O	115287	115295	drawback
O	115296	115298	is
O	115299	115303	that
O	115304	115310	stream
O	115311	115313	is
O	115314	115315	a
O	115316	115322	static
O	115323	115329	method
O	115329	115330	,
O	115331	115333	so
O	115334	115339	there
O	115340	115342	is
O	115343	115345	no
O	115346	115349	way
O	115350	115352	to
O	115353	115358	avoid
O	115359	115363	code
O	115364	115375	duplication
O	115375	115376	;
O	115377	115379	it
O	115380	115385	would
O	115386	115390	have
O	115391	115393	to
O	115394	115396	be
O	115397	115402	added
O	115403	115405	to
O	115406	115411	every
O	115412	115416	enum
O	115417	115427	separately
O	115427	115428	.

O	115430	115438	Question
O	115438	115439	-
O	115439	115447	29922296
O	115447	115448	,
O	115449	115455	answer
O	115455	115456	-
O	115456	115464	29926133

O	115465	115466	I
O	115466	115467	'
O	115467	115468	d
O	115469	115471	go
O	115472	115475	for
B-api_mention	115476	115483	EnumSet
O	115484	115485	.

O	115486	115493	Because
B-api_mention	115494	115501	forEach
I-api_mention	115501	115502	(
I-api_mention	115502	115506	args
I-api_mention	115506	115507	)
O	115508	115510	is
O	115511	115515	also
O	115516	115523	defined
O	115524	115526	on
B-api_mention	115527	115535	Iterable
O	115536	115537	,
O	115538	115541	you
O	115542	115545	can
O	115546	115551	avoid
O	115552	115560	creating
O	115561	115564	the
O	115565	115571	stream
O	115572	115582	altogether
O	115582	115583	:
B-api_mention	115584	115591	EnumSet
I-api_mention	115591	115592	.
I-api_mention	115592	115597	allOf
I-api_mention	115597	115598	(
I-api_mention	115598	115602	args
I-api_mention	115602	115603	)
I-api_mention	115603	115604	.
I-api_mention	115604	115611	forEach
I-api_mention	115611	115612	(
I-api_mention	115612	115616	args
I-api_mention	115616	115617	)
O	115617	115618	;
O	115619	115621	Or
O	115622	115626	with
O	115627	115628	a
O	115629	115635	method
O	115636	115645	reference
O	115645	115646	:
B-api_mention	115647	115654	EnumSet
I-api_mention	115654	115655	.
I-api_mention	115655	115660	allOf
I-api_mention	115660	115661	(
I-api_mention	115661	115665	args
I-api_mention	115665	115666	)
I-api_mention	115666	115667	.
I-api_mention	115667	115674	forEach
I-api_mention	115674	115675	(
I-api_mention	115675	115679	args
I-api_mention	115679	115680	)
O	115680	115681	;
O	115682	115687	Still
O	115687	115688	,
O	115689	115692	the
O	115693	115702	oldschool
O	115703	115706	for
O	115706	115707	-
O	115707	115711	loop
O	115712	115717	feels
O	115718	115719	a
O	115720	115723	bit
O	115724	115731	simpler
O	115731	115732	:
O	115733	115734	#
O	115734	115737	pre

O	115739	115747	Question
O	115747	115748	-
O	115748	115756	30125296
O	115756	115757	,
O	115758	115764	answer
O	115764	115765	-
O	115765	115773	30125487

O	115774	115775	I
O	115776	115783	suggest
O	115784	115785	2
O	115786	115790	more
O	115791	115798	options
O	115798	115799	:
O	115800	115801	#
O	115801	115804	pre
O	115805	115808	The
O	115809	115815	second
O	115816	115819	one
O	115820	115824	uses
B-api_mention	115825	115835	Collectors
I-api_mention	115835	115836	.
I-api_mention	115836	115846	summingInt
I-api_mention	115846	115847	(
I-api_mention	115847	115848	)
O	115849	115858	collector
O	115858	115859	.

O	115860	115867	Besides
O	115867	115868	,
O	115869	115873	Java
O	115874	115875	8
O	115876	115886	introduces
O	115887	115888	a
O	115889	115893	very
O	115894	115903	effective
O	115904	115913	LongAdder
O	115914	115925	accumulator
O	115926	115934	designed
O	115935	115937	to
O	115938	115943	speed
O	115943	115944	-
O	115944	115946	up
O	115947	115958	summarizing
O	115959	115961	in
O	115962	115970	parallel
O	115971	115978	streams
O	115979	115982	and
O	115983	115988	multi
O	115988	115989	-
O	115989	115995	thread
O	115996	116008	environments
O	116008	116009	.

O	116010	116014	Here
O	116014	116015	,
O	116016	116018	it
O	116019	116022	may
O	116023	116025	be
O	116026	116030	used
O	116031	116033	as
O	116034	116041	follows
O	116041	116042	:
O	116043	116044	#
O	116044	116047	pre

O	116049	116057	Question
O	116057	116058	-
O	116058	116066	30125296
O	116066	116067	,
O	116068	116074	answer
O	116074	116075	-
O	116075	116083	35035659

O	116084	116087	You
O	116088	116091	can
O	116092	116095	use
O	116096	116102	reduce
O	116103	116109	method
O	116109	116110	:
O	116111	116115	long
O	116116	116131	creditAmountSum
O	116132	116133	=
O	116134	116140	result
B-api_mention	116140	116141	.
I-api_mention	116141	116147	stream
I-api_mention	116147	116148	(
I-api_mention	116148	116152	args
I-api_mention	116152	116153	)
I-api_mention	116153	116154	.
I-api_mention	116154	116157	map
I-api_mention	116157	116158	(
I-api_mention	116158	116162	args
I-api_mention	116162	116163	)
I-api_mention	116163	116164	.
I-api_mention	116164	116170	reduce
I-api_mention	116170	116171	(
I-api_mention	116171	116175	args
I-api_mention	116175	116176	)
O	116176	116177	;

O	116179	116187	Question
O	116187	116188	-
O	116188	116196	29333689
O	116196	116197	,
O	116198	116204	answer
O	116204	116205	-
O	116205	116213	29337734

O	116214	116216	My
O	116217	116226	intuition
O	116227	116229	in
O	116230	116236	Python
O	116237	116239	is
O	116240	116242	to
O	116243	116246	use
O	116247	116250	the
O	116251	116262	collections
O	116262	116263	.
O	116263	116270	Counter
O	116271	116273	as
O	116274	116275	a
O	116276	116284	multiset
O	116284	116285	:
O	116286	116287	#
O	116287	116290	pre
O	116291	116293	So
O	116294	116296	we
O	116297	116301	have
O	116302	116303	a
O	116304	116308	list
O	116309	116311	of
O	116312	116320	integers
O	116321	116325	from
O	116326	116327	0
O	116327	116328	-
O	116328	116330	99
O	116331	116336	twice
O	116337	116343	except
O	116344	116347	for
O	116348	116350	66
O	116350	116351	.

O	116352	116353	#
O	116353	116356	pre
O	116357	116362	Which
O	116363	116367	gets
O	116368	116371	the
O	116372	116377	least
O	116378	116384	common
O	116385	116386	(
O	116386	116390	last
O	116391	116395	item
O	116395	116396	)
O	116397	116401	from
O	116402	116403	a
O	116404	116408	list
O	116409	116415	sorted
O	116416	116418	by
O	116419	116428	frequency
O	116428	116429	.

O	116430	116434	Such
O	116435	116436	a
O	116437	116445	function
O	116446	116451	would
O	116452	116454	be
O	116454	116455	:
O	116456	116457	#
O	116457	116460	pre
O	116461	116464	And
O	116465	116470	usage
O	116470	116471	:
O	116472	116473	#
O	116473	116476	pre
O	116477	116481	This
O	116482	116484	is
O	116485	116486	a
O	116487	116498	generalized
O	116499	116507	solution
O	116508	116512	that
O	116513	116518	works
O	116519	116522	for
O	116523	116526	any
O	116527	116533	number
O	116534	116536	of
O	116537	116542	items
O	116542	116543	.

O	116545	116553	Question
O	116553	116554	-
O	116554	116562	29333689
O	116562	116563	,
O	116564	116570	answer
O	116570	116571	-
O	116571	116579	29341981

O	116580	116583	The
O	116584	116588	best
O	116589	116595	answer
O	116596	116598	is
O	116599	116606	already
O	116607	116612	given
O	116613	116614	(
O	116614	116617	XOR
O	116617	116618	-
O	116618	116621	ing
O	116622	116625	the
O	116626	116634	elements
O	116634	116635	)
O	116635	116636	,
O	116637	116641	this
O	116642	116644	is
O	116645	116647	to
O	116648	116655	provide
O	116656	116658	an
O	116659	116670	alternative
O	116670	116671	,
O	116672	116676	more
O	116677	116684	general
O	116685	116688	way
O	116688	116689	.

O	116690	116692	If
O	116693	116696	the
O	116697	116702	input
O	116703	116708	array
O	116709	116714	would
O	116715	116717	be
O	116718	116724	sorted
O	116725	116726	(
O	116726	116728	we
O	116729	116732	can
O	116733	116737	make
O	116738	116740	it
O	116741	116747	sorted
O	116747	116748	)
O	116748	116749	,
O	116750	116752	we
O	116753	116758	could
O	116759	116765	simply
O	116766	116773	iterate
O	116774	116778	over
O	116779	116782	the
O	116783	116791	elements
O	116792	116794	in
O	116795	116800	pairs
O	116801	116802	(
O	116802	116810	stepping
O	116811	116813	by
O	116814	116815	2
O	116815	116816	)
O	116817	116820	and
O	116821	116823	if
O	116824	116827	the
O	116828	116836	elements
O	116837	116839	of
O	116840	116843	the
O	116844	116845	"
O	116845	116849	pair
O	116849	116850	"
O	116851	116854	are
O	116855	116864	different
O	116864	116865	,
O	116866	116868	we
O	116868	116869	'
O	116869	116871	re
O	116872	116876	done
O	116876	116877	:
O	116878	116879	#
O	116879	116882	pre
O	116883	116887	Note
O	116887	116888	:
O	116889	116893	This
O	116894	116902	solution
O	116903	116908	sorts
O	116909	116912	the
O	116913	116918	input
O	116919	116924	array
O	116924	116925	;
O	116926	116928	if
O	116929	116933	this
O	116934	116936	is
O	116937	116945	unwanted
O	116946	116948	or
O	116949	116952	not
O	116953	116960	allowed
O	116960	116961	,
O	116962	116964	it
O	116965	116968	can
O	116969	116971	be
O	116972	116978	cloned
O	116979	116984	first
O	116984	116985	:
O	116986	116989	arr
O	116990	116991	=
O	116992	116995	arr
B-api_mention	116995	116996	.
I-api_mention	116996	117001	clone
I-api_mention	117001	117002	(
I-api_mention	117002	117006	args
I-api_mention	117006	117007	)
O	117007	117008	;
O	117009	117011	If
O	117012	117017	input
O	117018	117023	array
O	117024	117026	is
O	117027	117033	sorted
O	117033	117034	,
O	117035	117038	the
B-api_mention	117039	117045	Arrays
I-api_mention	117045	117046	.
I-api_mention	117046	117050	sort
I-api_mention	117050	117051	(
I-api_mention	117051	117055	args
I-api_mention	117055	117056	)
O	117057	117061	call
O	117062	117065	can
O	117066	117068	be
O	117069	117073	left
O	117074	117077	out
O	117078	117080	of
O	117081	117087	course
O	117087	117088	.

O	117089	117103	Generalization
O	117104	117107	The
O	117108	117117	advantage
O	117118	117120	of
O	117121	117125	this
O	117126	117134	solution
O	117135	117137	is
O	117138	117142	that
O	117143	117145	it
O	117146	117149	can
O	117150	117152	be
O	117153	117160	applied
O	117161	117163	to
O	117164	117167	all
O	117168	117173	types
O	117174	117179	which
O	117180	117183	are
O	117184	117194	comparable
O	117195	117198	and
O	117199	117208	therefore
O	117209	117212	can
O	117213	117215	be
O	117216	117222	sorted
O	117223	117224	(
O	117224	117229	types
O	117230	117235	which
O	117236	117245	implement
B-api_mention	117246	117256	Comparable
O	117257	117258	)
O	117258	117259	,
O	117260	117263	for
O	117264	117271	example
B-api_mention	117272	117278	String
O	117279	117281	or
B-api_mention	117282	117286	Date
O	117287	117288	.

O	117289	117292	The
O	117293	117296	XOR
O	117297	117305	solution
O	117306	117308	is
O	117309	117316	limited
O	117317	117319	to
O	117320	117327	numbers
O	117328	117332	only
O	117332	117333	.

O	117334	117338	Here
O	117339	117341	is
O	117342	117343	a
O	117344	117352	slightly
O	117353	117361	modified
O	117362	117369	version
O	117370	117375	which
O	117376	117381	takes
O	117382	117384	an
O	117385	117390	input
O	117391	117396	array
O	117397	117399	of
O	117400	117403	any
O	117404	117411	element
O	117412	117416	type
O	117417	117422	which
O	117423	117425	is
O	117426	117436	comparable
O	117436	117437	:
O	117438	117439	#
O	117439	117442	pre
O	117443	117447	Note
O	117447	117448	:
O	117449	117451	In
O	117452	117456	most
O	117457	117462	cases
O	117463	117466	you
O	117467	117472	could
O	117473	117477	also
O	117478	117481	use
O	117482	117485	arr
O	117485	117486	[
O	117486	117487	i
O	117487	117488	]
B-api_mention	117488	117489	.
I-api_mention	117489	117495	equals
I-api_mention	117495	117496	(
I-api_mention	117496	117500	args
I-api_mention	117500	117501	)
O	117502	117504	to
O	117505	117512	compare
O	117513	117521	elements
O	117522	117529	instead
O	117530	117532	of
O	117533	117538	using
B-api_mention	117539	117549	Comparable
I-api_mention	117549	117550	.
I-api_mention	117550	117559	compareTo
I-api_mention	117559	117560	(
I-api_mention	117560	117561	)
O	117562	117563	.

O	117564	117567	For
O	117568	117575	details
O	117576	117580	read
O	117581	117584	the
O	117585	117591	linked
O	117592	117599	javadoc
O	117599	117600	.

O	117601	117608	Quoting
O	117609	117612	the
O	117613	117621	relevant
O	117622	117626	part
O	117626	117627	:
O	117628	117629	#
O	117629	117639	blockquote
O	117640	117643	Now
O	117644	117647	you
O	117648	117651	can
O	117652	117656	call
O	117657	117661	this
O	117662	117666	with
O	117667	117668	a
B-api_mention	117669	117675	String
O	117675	117676	[
O	117676	117677	]
O	117678	117681	for
O	117682	117689	example
O	117689	117690	:
B-api_mention	117691	117697	System
I-api_mention	117697	117698	.
I-api_mention	117698	117701	out
I-api_mention	117701	117702	.
I-api_mention	117702	117709	println
I-api_mention	117709	117710	(
I-api_mention	117710	117714	args
I-api_mention	117714	117715	)
O	117715	117716	;
O	117717	117723	Output
O	117723	117724	:
O	117725	117726	2
O	117727	117732	Final
O	117733	117738	notes
O	117738	117739	:
O	117740	117748	Starting
O	117749	117753	from
O	117754	117757	the
O	117758	117765	problem
O	117766	117775	statement
O	117776	117778	it
O	117779	117781	is
O	117782	117785	not
O	117786	117793	checked
O	117794	117801	whether
O	117802	117807	there
O	117808	117811	are
O	117812	117816	more
O	117817	117821	than
O	117822	117823	2
O	117824	117835	occurrences
O	117836	117838	of
O	117839	117842	the
O	117843	117851	elements
O	117851	117852	,
O	117853	117856	and
O	117857	117864	neither
O	117865	117867	is
O	117868	117875	whether
O	117876	117879	the
O	117880	117885	array
O	117886	117892	length
O	117893	117895	is
O	117896	117899	odd
O	117899	117900	.

O	117901	117905	Also
O	117906	117909	the
O	117910	117916	second
O	117917	117924	example
O	117925	117930	doesn
O	117930	117931	'
O	117931	117932	t
O	117933	117938	check
O	117939	117942	for
O	117943	117947	null
O	117948	117954	values
O	117954	117955	,
O	117956	117961	these
O	117962	117965	are
O	117966	117968	to
O	117969	117971	be
O	117972	117977	added
O	117978	117980	if
O	117981	117990	necessary
O	117990	117991	.
