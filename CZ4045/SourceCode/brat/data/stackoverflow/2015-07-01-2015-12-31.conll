O	0	8	Question
O	8	9	-
O	9	17	33147339

O	18	19	I
O	20	23	was
O	24	31	reading
O	32	36	Java
O	36	37	'
O	37	38	s
B-api_mention	39	48	ArrayList
O	49	55	source
O	56	60	code
O	61	64	and
O	65	72	noticed
O	73	77	some
O	78	89	comparisons
O	90	92	in
O	93	95	if
O	95	96	-
O	96	106	statements
O	106	107	.

O	108	110	In
O	111	115	Java
O	116	117	7
O	117	118	,
O	119	122	the
O	123	129	method
B-api_mention	130	134	grow
I-api_mention	134	135	(
I-api_mention	135	138	int
I-api_mention	138	139	)
O	140	144	uses
O	145	147	if
O	147	148	(
O	148	152	args
O	152	153	)
O	154	165	newCapacity
O	166	167	=
O	168	179	minCapacity
O	179	180	;
O	181	183	In
O	184	188	Java
O	189	190	6
O	190	191	,
O	192	196	grow
O	197	201	didn
O	201	202	'
O	202	203	t
O	204	209	exist
O	209	210	.

O	211	214	The
O	215	221	method
O	222	236	ensureCapacity
O	236	237	(
O	237	240	int
O	240	241	)
O	242	249	however
O	250	254	uses
O	255	257	if
O	257	258	(
O	258	262	args
O	262	263	)
O	264	275	newCapacity
O	276	277	=
O	278	289	minCapacity
O	289	290	;
O	291	295	What
O	296	299	was
O	300	303	the
O	304	310	reason
O	311	317	behind
O	318	321	the
O	322	328	change
O	328	329	?

O	330	333	Was
O	334	336	it
O	337	338	a
O	339	350	performance
O	351	356	issue
O	357	359	or
O	360	364	just
O	365	366	a
O	367	372	style
O	372	373	?

O	374	375	I
O	376	381	could
O	382	389	imagine
O	390	394	that
O	395	404	comparing
O	405	412	against
O	413	417	zero
O	418	420	is
O	421	427	faster
O	427	428	,
O	429	432	but
O	433	443	performing
O	444	445	a
O	446	454	complete
O	455	466	subtraction
O	467	471	just
O	472	474	to
O	475	480	check
O	481	488	whether
O	489	491	it
O	491	492	'
O	492	493	s
O	494	502	negative
O	503	508	seems
O	509	510	a
O	511	514	bit
O	515	523	overkill
O	524	526	to
O	527	529	me
O	529	530	.

O	531	535	Also
O	536	538	in
O	539	544	terms
O	545	547	of
O	548	556	bytecode
O	556	557	,
O	558	562	this
O	563	568	would
O	569	576	involve
O	577	580	two
O	581	593	instructions
O	594	595	(
O	596	600	ISUB
O	601	604	and
O	605	607	IF
O	607	608	_
O	608	614	ICMPGE
O	615	616	)
O	617	624	instead
O	625	627	of
O	628	631	one
O	632	633	(
O	634	638	IFGE
O	639	640	)
O	640	641	.

O	643	651	Question
O	651	652	-
O	652	660	31170459

O	661	662	I
O	663	666	was
O	667	674	testing
O	675	683	boundary
O	684	694	conditions
O	695	697	on
O	698	702	some
O	703	707	code
O	708	717	involving
O	718	719	a
B-api_mention	720	730	BigDecimal
O	731	732	,
O	733	736	and
O	737	738	I
O	739	746	noticed
O	747	751	that
O	752	756	when
O	757	758	a
B-api_mention	759	769	BigDecimal
O	770	772	is
O	773	784	initialized
O	785	789	with
O	790	793	the
B-api_mention	794	800	String
O	801	814	StringLiteral
O	815	817	it
O	818	825	behaves
O	826	838	unexpectedly
O	838	839	.

O	840	842	It
O	843	848	seems
O	849	851	to
O	852	856	have
O	857	858	a
O	859	864	value
O	865	872	between
O	873	874	0
O	875	878	and
O	879	881	1e
O	881	882	-
O	882	892	2147483647
O	893	894	.

O	895	899	When
O	900	901	I
O	902	905	try
O	906	913	calling
B-api_mention	914	922	intValue
I-api_mention	922	923	(
I-api_mention	923	927	args
I-api_mention	927	928	)
O	929	930	,
O	931	932	I
O	933	936	get
O	937	938	a
B-api_mention	939	965	NegativeArraySizeException
O	966	967	.

O	968	969	I
O	970	976	should
O	977	981	note
O	982	986	that
O	987	997	2147483647
O	998	1000	is
O	1001	1004	the
O	1005	1008	max
O	1009	1014	value
O	1015	1017	of
O	1018	1020	an
O	1021	1028	integer
O	1029	1031	on
O	1032	1034	my
O	1035	1041	system
O	1041	1042	.

O	1043	1045	Am
O	1046	1047	I
O	1048	1053	doing
O	1054	1063	something
O	1064	1069	wrong
O	1069	1070	,
O	1071	1073	or
O	1074	1076	is
O	1077	1081	this
O	1082	1083	a
O	1084	1091	problem
O	1092	1096	with
B-api_mention	1097	1107	BigDecimal
O	1108	1109	?

O	1110	1111	#
O	1111	1114	pre

O	1116	1124	Question
O	1124	1125	-
O	1125	1133	32356762

O	1134	1136	Is
O	1137	1142	there
O	1143	1144	a
O	1145	1149	good
O	1150	1156	reason
O	1157	1161	that
O	1162	1165	the
B-api_mention	1166	1177	Collections
I-api_mention	1177	1178	.
I-api_mention	1178	1182	list
I-api_mention	1182	1183	(
I-api_mention	1183	1184	)
O	1185	1191	method
O	1192	1194	in
O	1195	1198	the
O	1199	1203	java
O	1203	1204	.
O	1204	1209	utils
O	1210	1217	package
O	1218	1225	returns
O	1226	1228	an
B-api_mention	1229	1238	ArrayList
I-api_mention	1238	1239	<
I-api_mention	1239	1240	T
I-api_mention	1240	1241	>
O	1242	1249	instead
O	1250	1252	of
B-api_mention	1253	1257	List
I-api_mention	1257	1258	<
I-api_mention	1258	1259	T
I-api_mention	1259	1260	>
O	1261	1262	?

O	1263	1272	Obviously
O	1273	1275	an
B-api_mention	1276	1285	ArrayList
O	1286	1288	is
O	1289	1290	a
B-api_mention	1291	1295	List
O	1296	1297	,
O	1298	1301	but
O	1302	1303	I
O	1303	1304	'
O	1304	1305	m
O	1306	1311	under
O	1312	1315	the
O	1316	1326	impression
O	1327	1331	that
O	1332	1334	it
O	1334	1335	'
O	1335	1336	s
O	1337	1346	generally
O	1347	1351	good
O	1352	1360	practice
O	1361	1363	to
O	1364	1370	return
O	1371	1374	the
O	1375	1384	interface
O	1385	1389	type
O	1390	1397	instead
O	1398	1400	of
O	1401	1415	implementation
O	1416	1420	type
O	1420	1421	.

O	1423	1431	Question
O	1431	1432	-
O	1432	1440	31922866

O	1441	1442	I
O	1442	1443	'
O	1443	1445	ve
O	1446	1450	read
O	1451	1453	on
O	1454	1458	many
O	1459	1462	Web
O	1463	1468	sites
B-api_mention	1469	1477	Optional
O	1478	1484	should
O	1485	1487	be
O	1488	1492	used
O	1493	1495	as
O	1496	1497	a
O	1498	1504	return
O	1505	1509	type
O	1510	1514	only
O	1514	1515	,
O	1516	1519	and
O	1520	1523	not
O	1524	1528	used
O	1529	1531	in
O	1532	1538	method
O	1539	1548	arguments
O	1548	1549	.

O	1550	1551	I
O	1551	1552	'
O	1552	1553	m
O	1554	1564	struggling
O	1565	1567	to
O	1568	1572	find
O	1573	1574	a
O	1575	1582	logical
O	1583	1589	reason
O	1590	1593	why
O	1593	1594	.

O	1595	1598	For
O	1599	1606	example
O	1607	1608	I
O	1609	1613	have
O	1614	1615	a
O	1616	1621	piece
O	1622	1624	of
O	1625	1630	logic
O	1631	1636	which
O	1637	1640	has
O	1641	1642	2
O	1643	1651	optional
O	1652	1662	parameters
O	1662	1663	.

O	1664	1673	Therefore
O	1674	1675	I
O	1676	1681	think
O	1682	1684	it
O	1685	1690	would
O	1691	1695	make
O	1696	1701	sense
O	1702	1704	to
O	1705	1710	write
O	1711	1713	my
O	1714	1720	method
O	1721	1730	signature
O	1731	1735	like
O	1736	1740	this
O	1741	1742	(
O	1742	1750	solution
O	1751	1752	1
O	1752	1753	)
O	1753	1754	:
O	1755	1756	#
O	1756	1759	pre
O	1760	1764	Many
O	1765	1768	web
O	1769	1774	pages
O	1775	1782	specify
B-api_mention	1783	1791	Optional
O	1792	1798	should
O	1799	1802	not
O	1803	1805	be
O	1806	1810	used
O	1811	1813	as
O	1814	1820	method
O	1821	1830	arguments
O	1830	1831	.

O	1832	1836	With
O	1837	1841	this
O	1842	1844	in
O	1845	1849	mind
O	1850	1851	I
O	1852	1857	could
O	1858	1861	use
O	1862	1865	the
O	1866	1875	following
O	1876	1882	method
O	1883	1892	signature
O	1893	1896	and
O	1897	1900	add
O	1901	1902	a
O	1903	1908	clear
O	1909	1916	Javadoc
O	1917	1924	comment
O	1925	1935	specifying
O	1936	1939	the
O	1940	1949	arguments
O	1950	1955	maybe
O	1956	1960	null
O	1961	1967	hoping
O	1968	1974	future
O	1975	1981	future
O	1982	1993	maintainers
O	1994	1998	will
O	1999	2003	read
O	2004	2007	the
O	2008	2015	javadoc
O	2016	2019	and
O	2020	2029	therefore
O	2030	2036	always
O	2037	2042	carry
O	2043	2046	out
O	2047	2051	null
O	2052	2058	checks
O	2059	2064	prior
O	2065	2067	to
O	2068	2073	using
O	2074	2077	the
O	2078	2087	arguments
O	2088	2089	(
O	2089	2097	solution
O	2098	2099	2
O	2099	2100	)
O	2100	2101	:
O	2102	2103	#
O	2103	2106	pre
O	2107	2120	Alternatively
O	2121	2122	I
O	2123	2128	could
O	2129	2136	replace
O	2137	2139	my
O	2140	2146	method
O	2147	2151	with
O	2152	2153	4
O	2154	2160	public
O	2161	2168	methods
O	2169	2171	to
O	2172	2179	provide
O	2180	2181	a
O	2182	2187	nicer
O	2188	2197	interface
O	2198	2201	and
O	2202	2206	make
O	2207	2209	it
O	2210	2214	more
O	2215	2222	obvious
O	2223	2225	p1
O	2226	2229	and
O	2230	2232	p2
O	2233	2236	are
O	2237	2245	optional
O	2246	2247	(
O	2247	2255	solution
O	2256	2257	3
O	2257	2258	)
O	2258	2259	:
O	2260	2261	#
O	2261	2264	pre
O	2265	2268	Now
O	2269	2270	I
O	2271	2274	try
O	2275	2282	writing
O	2283	2286	the
O	2287	2291	code
O	2292	2294	of
O	2295	2298	the
O	2299	2304	class
O	2305	2310	which
O	2311	2318	invokes
O	2319	2323	this
O	2324	2329	piece
O	2330	2332	of
O	2333	2338	logic
O	2339	2342	for
O	2343	2347	each
O	2348	2356	approach
O	2356	2357	.

O	2358	2359	I
O	2360	2365	first
O	2366	2374	retrieve
O	2375	2378	the
O	2379	2380	2
O	2381	2386	input
O	2387	2397	parameters
O	2398	2402	from
O	2403	2410	another
O	2411	2417	object
O	2418	2423	which
O	2424	2431	returns
O	2432	2441	optionals
O	2442	2445	and
O	2446	2450	then
O	2451	2452	I
O	2453	2459	invoke
O	2460	2478	calculateSomething
O	2478	2479	.

O	2480	2489	Therefore
O	2490	2492	if
O	2493	2501	solution
O	2502	2503	1
O	2504	2506	is
O	2507	2511	used
O	2512	2515	the
O	2516	2523	calling
O	2524	2528	code
O	2529	2534	would
O	2535	2539	look
O	2540	2544	like
O	2545	2549	this
O	2549	2550	:
O	2551	2552	#
O	2552	2555	pre
O	2556	2558	if
O	2559	2567	solution
O	2568	2569	2
O	2570	2572	is
O	2573	2577	used
O	2578	2581	the
O	2582	2589	calling
O	2590	2594	code
O	2595	2600	would
O	2601	2605	look
O	2606	2610	like
O	2611	2615	this
O	2615	2616	:
O	2617	2618	#
O	2618	2621	pre
O	2622	2624	if
O	2625	2633	solution
O	2634	2635	3
O	2636	2638	is
O	2639	2643	used
O	2644	2645	I
O	2646	2651	could
O	2652	2655	use
O	2656	2659	the
O	2660	2664	code
O	2665	2670	above
O	2671	2673	or
O	2674	2675	I
O	2676	2681	could
O	2682	2685	use
O	2686	2689	the
O	2690	2699	following
O	2700	2701	(
O	2701	2704	but
O	2705	2708	its
O	2709	2710	a
O	2711	2722	significant
O	2723	2729	amount
O	2730	2734	more
O	2735	2739	code
O	2739	2740	)
O	2740	2741	:
O	2742	2743	#
O	2743	2746	pre
O	2747	2749	So
O	2750	2752	my
O	2753	2761	question
O	2762	2764	is
O	2765	2768	why
O	2769	2771	is
O	2772	2774	it
O	2775	2785	considered
O	2786	2789	bad
O	2790	2798	practice
O	2799	2801	to
O	2802	2805	use
O	2806	2815	Optionals
O	2816	2818	as
O	2819	2825	method
O	2826	2835	arguments
O	2836	2838	as
O	2839	2841	in
O	2842	2850	solution
O	2851	2852	1
O	2852	2853	?

O	2854	2856	It
O	2857	2862	looks
O	2863	2867	like
O	2868	2871	the
O	2872	2876	most
O	2877	2885	readable
O	2886	2894	solution
O	2895	2897	to
O	2898	2900	me
O	2901	2904	and
O	2905	2910	makes
O	2911	2913	it
O	2914	2918	most
O	2919	2926	obvious
O	2927	2931	that
O	2932	2935	the
O	2936	2946	parameters
O	2947	2952	could
O	2953	2955	be
O	2956	2961	empty
O	2961	2962	/
O	2962	2966	null
O	2967	2969	to
O	2970	2976	future
O	2977	2988	maintainers
O	2988	2989	.

O	2990	2991	(
O	2991	2992	I
O	2992	2993	'
O	2993	2994	m
O	2995	3000	aware
O	3001	3004	the
O	3005	3014	designers
O	3015	3017	of
B-api_mention	3018	3026	Optional
O	3027	3035	intended
O	3036	3038	it
O	3039	3041	to
O	3042	3046	only
O	3047	3049	be
O	3050	3054	used
O	3055	3057	as
O	3058	3059	a
O	3060	3066	return
O	3067	3071	type
O	3071	3072	,
O	3073	3076	but
O	3077	3078	I
O	3079	3082	can
O	3082	3083	'
O	3083	3084	t
O	3085	3089	find
O	3090	3093	any
O	3094	3101	logical
O	3102	3109	reasons
O	3110	3113	not
O	3114	3116	to
O	3117	3120	use
O	3121	3123	it
O	3124	3126	in
O	3127	3131	this
O	3132	3140	scenario
O	3140	3141	)

O	3143	3151	Question
O	3151	3152	-
O	3152	3160	32693704

O	3161	3162	I
O	3163	3170	noticed
O	3171	3180	something
O	3181	3188	strange
O	3189	3191	in
O	3192	3195	the
O	3196	3210	implementation
O	3211	3213	of
B-api_mention	3214	3221	HashMap
I-api_mention	3221	3222	.
I-api_mention	3222	3227	clear
I-api_mention	3227	3228	(
I-api_mention	3228	3232	args
I-api_mention	3232	3233	)
O	3234	3235	.

O	3236	3240	This
O	3241	3243	is
O	3244	3247	how
O	3248	3250	it
O	3251	3257	looked
O	3258	3260	in
O	3261	3268	OpenJDK
O	3269	3273	7u40
O	3274	3275	:
O	3276	3277	#
O	3277	3280	pre
O	3281	3284	And
O	3285	3289	this
O	3290	3292	is
O	3293	3296	how
O	3297	3299	it
O	3300	3305	looks
O	3306	3308	as
O	3309	3311	of
O	3312	3319	OpenJDK
O	3320	3324	8u40
O	3325	3326	:
O	3327	3328	#
O	3328	3331	pre
O	3332	3333	I
O	3334	3344	understand
O	3345	3349	that
O	3350	3353	now
O	3354	3357	the
O	3358	3363	table
O	3364	3367	can
O	3368	3370	be
O	3371	3375	null
O	3376	3379	for
O	3380	3385	empty
O	3386	3388	an
O	3389	3392	map
O	3392	3393	,
O	3394	3398	thus
O	3399	3402	the
O	3403	3413	additional
O	3414	3419	check
O	3420	3423	and
O	3424	3431	caching
O	3432	3434	in
O	3435	3436	a
O	3437	3442	local
O	3443	3451	variable
O	3452	3454	is
O	3455	3463	required
O	3463	3464	.

O	3465	3468	But
O	3469	3472	why
O	3473	3476	was
B-api_mention	3477	3483	Arrays
I-api_mention	3483	3484	.
I-api_mention	3484	3488	fill
I-api_mention	3488	3489	(
I-api_mention	3489	3493	args
I-api_mention	3493	3494	)
O	3495	3503	replaced
O	3504	3508	with
O	3509	3510	a
O	3511	3514	for
O	3514	3515	-
O	3515	3519	loop
O	3519	3520	?

O	3521	3523	It
O	3524	3529	seems
O	3530	3534	that
O	3535	3538	the
O	3539	3545	change
O	3546	3549	was
O	3550	3560	introduced
O	3561	3563	in
O	3564	3568	this
O	3569	3575	commit
O	3576	3577	.

O	3578	3591	Unfortunately
O	3592	3593	I
O	3594	3599	found
O	3600	3602	no
O	3603	3614	explanation
O	3615	3618	for
O	3619	3622	why
O	3623	3624	a
O	3625	3630	plain
O	3631	3634	for
O	3635	3639	loop
O	3640	3645	might
O	3646	3648	be
O	3649	3655	better
O	3656	3660	than
B-api_mention	3661	3667	Arrays
I-api_mention	3667	3668	.
I-api_mention	3668	3672	fill
I-api_mention	3672	3673	(
I-api_mention	3673	3677	args
I-api_mention	3677	3678	)
O	3679	3680	.

O	3681	3683	Is
O	3684	3686	it
O	3687	3693	faster
O	3693	3694	?

O	3695	3697	Or
O	3698	3703	safer
O	3703	3704	?

O	3706	3714	Question
O	3714	3715	-
O	3715	3723	31202946

O	3724	3727	Why
O	3728	3731	was
O	3732	3735	the
B-api_mention	3736	3742	Thread
O	3743	3748	class
O	3749	3760	implemented
O	3761	3763	as
O	3764	3765	a
O	3766	3773	regular
O	3774	3779	class
O	3780	3783	and
O	3784	3787	not
O	3788	3790	an
O	3791	3799	abstract
O	3800	3805	class
O	3806	3810	with
B-api_mention	3811	3814	run
I-api_mention	3814	3815	(
I-api_mention	3815	3819	args
I-api_mention	3819	3820	)
O	3821	3827	method
O	3828	3833	being
O	3834	3842	abstract
O	3842	3843	.

O	3844	3848	Will
O	3849	3851	it
O	3852	3860	possibly
O	3861	3870	introduce
O	3871	3874	any
O	3875	3883	problems
O	3883	3884	?

O	3885	3887	Or
O	3888	3892	does
O	3893	3895	it
O	3896	3900	have
O	3901	3904	any
O	3905	3908	use
O	3909	3911	in
O	3912	3917	being
O	3918	3922	this
O	3923	3926	way
O	3926	3927	?

O	3928	3932	Also
O	3932	3933	,
O	3934	3937	the
B-api_mention	3938	3944	Thread
I-api_mention	3944	3945	.
I-api_mention	3945	3950	start
I-api_mention	3950	3951	(
I-api_mention	3951	3955	args
I-api_mention	3955	3956	)
O	3957	3963	method
O	3964	3966	is
O	3967	3975	supposed
O	3976	3978	to
O	3979	3981	be
O	3982	3983	a
O	3984	3988	very
O	3989	3997	specific
O	3998	4004	method
O	4005	4010	whose
O	4011	4024	functionality
O	4025	4031	cannot
O	4032	4034	be
O	4035	4046	implemented
O	4047	4049	by
O	4050	4053	any
O	4054	4059	other
O	4060	4065	class
O	4066	4067	(
O	4067	4069	If
O	4070	4071	I
O	4072	4074	am
O	4075	4078	not
O	4079	4084	wrong
O	4084	4085	)
O	4085	4086	.

O	4087	4090	And
O	4091	4096	hence
O	4097	4098	I
O	4099	4104	guess
O	4105	4108	the
O	4109	4114	final
O	4115	4122	keyword
O	4123	4128	would
O	4129	4131	be
O	4132	4135	apt
O	4136	4139	for
O	4140	4144	this
O	4145	4149	more
O	4150	4154	than
O	4155	4158	any
O	4159	4164	other
O	4165	4171	method
O	4171	4172	.

O	4173	4176	But
O	4177	4178	I
O	4179	4181	am
O	4182	4186	able
O	4187	4189	to
O	4190	4198	override
O	4199	4203	this
O	4204	4210	method
O	4211	4214	and
O	4215	4218	use
O	4219	4221	it
O	4222	4224	as
O	4225	4226	I
O	4227	4231	like
O	4231	4232	,
O	4233	4234	#
O	4234	4237	pre
O	4238	4240	It
O	4241	4250	obviously
O	4251	4255	only
O	4256	4263	printed
O	4263	4264	,
O	4265	4266	#
O	4266	4276	blockquote
O	4277	4279	Is
O	4280	4285	there
O	4286	4289	any
O	4290	4293	use
O	4294	4296	in
O	4297	4307	overriding
O	4308	4313	other
O	4314	4318	than
O	4319	4328	confusing
O	4329	4332	the
O	4333	4341	engineer
O	4342	4351	replacing
O	4352	4355	you
O	4355	4356	?

O	4357	4359	If
O	4360	4363	not
O	4363	4364	,
O	4365	4368	why
O	4369	4372	was
O	4373	4376	the
O	4377	4383	method
O	4384	4387	not
O	4388	4396	declared
O	4397	4402	final
O	4403	4405	in
B-api_mention	4406	4412	Thread
O	4413	4418	class
O	4418	4419	?

O	4421	4429	Question
O	4429	4430	-
O	4430	4438	31993377

O	4439	4447	Question
O	4448	4451	How
O	4452	4454	is
O	4455	4457	it
O	4458	4462	that
O	4463	4466	for
O	4467	4468	a
O	4469	4476	scanner
O	4477	4483	object
O	4484	4487	the
B-api_mention	4488	4499	hasNextLine
I-api_mention	4499	4500	(
I-api_mention	4500	4504	args
I-api_mention	4504	4505	)
O	4506	4512	method
O	4513	4520	returns
O	4521	4525	true
O	4526	4531	while
O	4532	4535	the
B-api_mention	4536	4543	hasNext
I-api_mention	4543	4544	(
I-api_mention	4544	4548	args
I-api_mention	4548	4549	)
O	4550	4556	method
O	4557	4564	returns
O	4565	4570	false
O	4570	4571	?

O	4572	4576	Note
O	4576	4577	:
O	4578	4583	Based
O	4584	4586	on
O	4587	4590	the
O	4591	4596	input
O	4597	4601	file
O	4601	4602	,
O	4603	4606	the
B-api_mention	4607	4614	hasNext
I-api_mention	4614	4615	(
I-api_mention	4615	4619	args
I-api_mention	4619	4620	)
O	4621	4627	method
O	4628	4630	is
O	4631	4640	returning
O	4641	4644	the
O	4645	4651	result
O	4652	4654	as
O	4655	4663	expected
O	4663	4664	;
O	4665	4668	the
B-api_mention	4669	4680	hasNextLine
I-api_mention	4680	4681	(
I-api_mention	4681	4685	args
I-api_mention	4685	4686	)
O	4687	4691	does
O	4692	4695	not
O	4696	4700	seem
O	4701	4703	to
O	4704	4706	be
O	4707	4716	returning
O	4717	4720	the
O	4721	4728	correct
O	4729	4735	result
O	4735	4736	.

O	4737	4741	Code
O	4742	4746	Here
O	4746	4747	'
O	4747	4748	s
O	4749	4752	the
O	4753	4757	code
O	4758	4759	I
O	4759	4760	'
O	4760	4761	m
O	4762	4769	running
O	4770	4774	that
O	4774	4775	'
O	4775	4776	s
O	4777	4785	creating
O	4786	4789	the
O	4790	4797	results
O	4798	4803	below
O	4803	4804	:
O	4805	4806	#
O	4806	4809	pre
O	4810	4815	Input
O	4816	4820	File
O	4821	4824	The
O	4825	4834	following
O	4835	4837	is
O	4838	4841	the
O	4842	4848	actual
O	4849	4856	content
O	4857	4859	of
O	4860	4863	the
O	4864	4868	file
O	4869	4873	that
O	4874	4875	I
O	4875	4876	'
O	4876	4877	m
O	4878	4885	passing
O	4886	4888	to
O	4889	4893	this
O	4894	4901	scanner
O	4901	4902	:
O	4903	4904	#
O	4904	4907	pre
O	4908	4914	Result
O	4915	4918	The
O	4919	4928	following
O	4929	4931	is
O	4932	4935	the
O	4936	4939	end
O	4940	4942	of
O	4943	4947	what
O	4947	4948	'
O	4948	4949	s
O	4950	4957	printed
O	4958	4960	in
O	4961	4964	the
O	4965	4972	console
O	4973	4977	when
O	4978	4979	I
O	4980	4983	run
O	4984	4986	my
O	4987	4991	code
O	4991	4992	,
O	4993	4996	and
O	4997	5005	includes
O	5006	5009	the
O	5010	5017	portion
O	5018	5019	I
O	5020	5023	can
O	5023	5024	'
O	5024	5025	t
O	5026	5030	make
O	5031	5036	sense
O	5037	5039	of
O	5039	5040	:
O	5041	5042	#
O	5042	5045	pre

O	5047	5055	Question
O	5055	5056	-
O	5056	5064	34250207

O	5065	5067	As
O	5068	5069	I
O	5070	5076	recall
O	5076	5077	,
O	5078	5084	before
O	5085	5089	Java
O	5090	5091	8
O	5091	5092	,
O	5093	5096	the
O	5097	5104	default
O	5105	5113	capacity
O	5114	5116	of
B-api_mention	5117	5126	ArrayList
O	5127	5130	was
O	5131	5133	10
O	5133	5134	.

O	5135	5147	Surprisingly
O	5147	5148	,
O	5149	5152	the
O	5153	5160	comment
O	5161	5163	on
O	5164	5167	the
O	5168	5175	default
O	5176	5177	(
O	5177	5181	void
O	5181	5182	)
O	5183	5194	constructor
O	5195	5200	still
O	5201	5205	says
O	5205	5206	:
O	5207	5217	Constructs
O	5218	5220	an
O	5221	5226	empty
O	5227	5231	list
O	5232	5236	with
O	5237	5239	an
O	5240	5247	initial
O	5248	5256	capacity
O	5257	5259	of
O	5260	5263	ten
O	5263	5264	.

O	5265	5269	From
O	5270	5279	ArrayList
O	5279	5280	.
O	5280	5284	java
O	5285	5286	:
O	5287	5288	#
O	5288	5291	pre

O	5293	5301	Question
O	5301	5302	-
O	5302	5310	31188231

O	5311	5313	It
O	5314	5317	has
O	5318	5327	generally
O	5328	5332	been
O	5333	5336	the
O	5337	5341	case
O	5342	5345	the
O	5346	5350	Java
O	5351	5357	source
O	5358	5362	code
O	5363	5366	has
O	5367	5371	been
O	5372	5379	forward
O	5380	5390	compatible
O	5390	5391	.

O	5392	5397	Until
O	5398	5402	Java
O	5403	5404	8
O	5404	5405	,
O	5406	5408	as
O	5409	5412	far
O	5413	5415	as
O	5416	5417	I
O	5418	5422	know
O	5422	5423	,
O	5424	5428	both
O	5429	5437	compiled
O	5438	5445	classes
O	5446	5449	and
O	5450	5456	source
O	5457	5461	have
O	5462	5466	been
O	5467	5474	forward
O	5475	5485	compatible
O	5486	5490	with
O	5491	5496	later
O	5497	5500	JDK
O	5500	5501	/
O	5501	5504	JVM
O	5505	5513	releases
O	5513	5514	.

O	5515	5516	[
O	5516	5522	Update
O	5522	5523	:
O	5524	5528	this
O	5529	5531	is
O	5532	5535	not
O	5536	5543	correct
O	5543	5544	,
O	5545	5548	see
O	5549	5557	comments
O	5558	5560	re
O	5561	5562	'
O	5562	5566	enum
O	5566	5567	'
O	5567	5568	,
O	5569	5572	etc
O	5572	5573	,
O	5574	5579	below
O	5579	5580	.
O	5580	5581	]
O	5582	5589	However
O	5589	5590	,
O	5591	5595	with
O	5596	5599	the
O	5600	5608	addition
O	5609	5611	of
O	5612	5619	default
O	5620	5627	methods
O	5628	5630	in
O	5631	5635	Java
O	5636	5637	8
O	5638	5642	this
O	5643	5650	appears
O	5651	5653	to
O	5654	5656	no
O	5657	5663	longer
O	5664	5666	be
O	5667	5670	the
O	5671	5675	case
O	5675	5676	.

O	5677	5680	For
O	5681	5688	example
O	5688	5689	,
O	5690	5691	a
O	5692	5699	library
O	5700	5701	I
O	5702	5706	have
O	5707	5711	been
O	5712	5717	using
O	5718	5721	has
O	5722	5724	an
O	5725	5739	implementation
O	5740	5742	of
B-api_mention	5743	5747	java
I-api_mention	5747	5748	.
I-api_mention	5748	5752	util
I-api_mention	5752	5753	.
I-api_mention	5753	5757	List
O	5758	5763	which
O	5764	5772	includes
O	5773	5774	a
B-api_mention	5775	5779	List
I-api_mention	5779	5780	<
I-api_mention	5780	5781	T
I-api_mention	5781	5782	>
I-api_mention	5783	5787	sort
I-api_mention	5787	5788	(
I-api_mention	5788	5792	args
I-api_mention	5792	5793	)
O	5794	5795	.

O	5796	5800	This
O	5801	5807	method
O	5808	5815	returns
O	5816	5817	a
O	5818	5822	copy
O	5823	5825	of
O	5826	5829	the
O	5830	5838	contents
O	5839	5841	of
O	5842	5845	the
O	5846	5850	list
O	5851	5857	sorted
O	5857	5858	.

O	5859	5863	This
O	5864	5871	library
O	5871	5872	,
O	5873	5881	deployed
O	5882	5884	as
O	5885	5886	a
O	5887	5890	jar
O	5891	5895	file
O	5896	5906	dependency
O	5906	5907	,
O	5908	5914	worked
O	5915	5919	fine
O	5920	5922	in
O	5923	5924	a
O	5925	5932	project
O	5933	5938	being
O	5939	5944	built
O	5945	5950	using
O	5951	5954	JDK
O	5955	5956	1
O	5956	5957	.
O	5957	5958	8
O	5958	5959	.

O	5960	5967	However
O	5967	5968	,
O	5969	5974	later
O	5975	5976	I
O	5977	5980	had
O	5981	5989	occasion
O	5990	5992	to
O	5993	6002	recompile
O	6003	6006	the
O	6007	6014	library
O	6015	6021	itself
O	6022	6027	using
O	6028	6031	JDK
O	6032	6033	1
O	6033	6034	.
O	6034	6035	8
O	6036	6039	and
O	6040	6041	I
O	6042	6047	found
O	6048	6051	the
O	6052	6059	library
O	6060	6062	no
O	6063	6069	longer
O	6070	6078	compiles
O	6078	6079	:
O	6080	6083	the
B-api_mention	6084	6088	List
O	6089	6090	-
O	6090	6102	implementing
O	6103	6108	class
O	6109	6113	with
O	6114	6117	its
O	6118	6121	own
B-api_mention	6122	6126	sort
I-api_mention	6126	6127	(
I-api_mention	6127	6131	args
I-api_mention	6131	6132	)
O	6133	6139	method
O	6140	6143	now
O	6144	6153	conflicts
O	6154	6158	with
O	6159	6162	the
O	6163	6167	Java
O	6168	6169	8
B-api_mention	6170	6174	java
I-api_mention	6174	6175	.
I-api_mention	6175	6179	util
I-api_mention	6179	6180	.
I-api_mention	6180	6184	List
I-api_mention	6184	6185	.
I-api_mention	6185	6189	sort
I-api_mention	6189	6190	(
I-api_mention	6190	6194	args
I-api_mention	6194	6195	)
O	6196	6203	default
O	6204	6210	method
O	6210	6211	.

O	6212	6215	The
O	6216	6220	Java
O	6221	6222	8
B-api_mention	6223	6227	sort
I-api_mention	6227	6228	(
I-api_mention	6228	6232	args
I-api_mention	6232	6233	)
O	6234	6241	default
O	6242	6248	method
O	6249	6254	sorts
O	6255	6258	the
O	6259	6263	list
O	6264	6266	in
O	6267	6272	place
O	6273	6274	(
O	6274	6281	returns
O	6282	6286	void
O	6287	6288	)
O	6288	6289	;
O	6290	6292	my
O	6293	6300	library
O	6300	6301	'
O	6301	6302	s
B-api_mention	6303	6307	sort
I-api_mention	6307	6308	(
I-api_mention	6308	6312	args
I-api_mention	6312	6313	)
O	6314	6320	method
O	6321	6322	-
O	6323	6328	since
O	6329	6331	it
O	6332	6339	returns
O	6340	6341	a
O	6342	6345	new
O	6346	6352	sorted
O	6353	6357	list
O	6358	6359	-
O	6360	6363	has
O	6364	6366	an
O	6367	6379	incompatible
O	6380	6389	signature
O	6389	6390	.

O	6391	6393	So
O	6394	6396	my
O	6397	6402	basic
O	6403	6411	question
O	6412	6414	is
O	6414	6415	:
O	6416	6417	#
O	6417	6419	li
O	6420	6425	Doesn
O	6425	6426	'
O	6426	6427	t
O	6428	6431	JDK
O	6432	6433	1
O	6433	6434	.
O	6434	6435	8
O	6436	6445	introduce
O	6446	6447	a
O	6448	6455	forward
O	6456	6471	incompatibility
O	6472	6475	for
O	6476	6480	Java
O	6481	6487	source
O	6488	6492	code
O	6493	6496	due
O	6497	6499	to
O	6500	6507	default
O	6508	6515	methods
O	6515	6516	?

O	6517	6521	Also
O	6521	6522	:
O	6523	6524	#
O	6524	6526	li
O	6527	6529	Is
O	6530	6534	this
O	6535	6538	the
O	6539	6544	first
O	6545	6549	such
O	6550	6557	forward
O	6558	6570	incompatible
O	6571	6577	change
O	6577	6578	?

O	6579	6580	#
O	6580	6582	li
O	6583	6586	Was
O	6587	6591	this
O	6592	6602	considered
O	6603	6605	or
O	6606	6615	discussed
O	6616	6620	when
O	6621	6628	default
O	6629	6636	methods
O	6637	6642	where
O	6643	6651	designed
O	6652	6655	and
O	6656	6667	implemented
O	6667	6668	?

O	6669	6671	Is
O	6672	6674	it
O	6675	6685	documented
O	6686	6694	anywhere
O	6694	6695	?

O	6696	6697	#
O	6697	6699	li
O	6700	6703	Was
O	6704	6707	the
O	6708	6709	(
O	6709	6719	admittedly
O	6720	6725	small
O	6725	6726	)
O	6727	6740	inconvenience
O	6741	6751	discounted
O	6752	6758	versus
O	6759	6762	the
O	6763	6771	benefits
O	6771	6772	?

O	6773	6776	The
O	6777	6786	following
O	6787	6789	is
O	6790	6792	an
O	6793	6800	example
O	6801	6803	of
O	6804	6808	some
O	6809	6813	code
O	6814	6818	that
O	6819	6827	compiles
O	6828	6831	and
O	6832	6836	runs
O	6837	6842	under
O	6843	6844	1
O	6844	6845	.
O	6845	6846	7
O	6847	6850	and
O	6851	6855	runs
O	6856	6861	under
O	6862	6863	1
O	6863	6864	.
O	6864	6865	8
O	6866	6867	-
O	6868	6871	but
O	6872	6876	does
O	6877	6880	not
O	6881	6888	compile
O	6889	6894	under
O	6895	6896	1
O	6896	6897	.
O	6897	6898	8
O	6898	6899	:
O	6900	6901	#
O	6901	6904	pre
O	6905	6908	The
O	6909	6918	following
O	6919	6924	shows
O	6925	6929	this
O	6930	6934	code
O	6935	6940	being
O	6941	6949	compiled
O	6950	6951	(
O	6951	6953	or
O	6954	6961	failing
O	6962	6964	to
O	6964	6965	)
O	6966	6969	and
O	6970	6975	being
O	6976	6979	run
O	6979	6980	.

O	6981	6982	#
O	6982	6985	pre

O	6987	6995	Question
O	6995	6996	-
O	6996	7004	32334319

O	7005	7006	I
O	7007	7009	am
O	7010	7015	using
O	7016	7019	JDK
O	7019	7020	-
O	7020	7021	8
O	7022	7023	(
O	7023	7026	x64
O	7026	7027	)
O	7027	7028	.

O	7029	7032	For
B-api_mention	7033	7039	Arrays
I-api_mention	7039	7040	.
I-api_mention	7040	7044	sort
O	7045	7046	I
O	7047	7052	found
O	7053	7056	the
O	7057	7066	following
O	7067	7069	in
O	7070	7073	the
O	7074	7078	Java
O	7079	7092	documentation
O	7092	7093	:
O	7094	7095	#
O	7095	7105	blockquote
O	7106	7109	For
B-api_mention	7110	7121	Collections
I-api_mention	7121	7122	.
I-api_mention	7122	7126	sort
O	7127	7128	I
O	7129	7134	found
O	7135	7139	this
O	7139	7140	:
O	7141	7142	#
O	7142	7152	blockquote
O	7153	7155	If
B-api_mention	7156	7167	Collections
I-api_mention	7167	7168	.
I-api_mention	7168	7172	sort
O	7173	7177	uses
O	7178	7180	an
O	7181	7186	array
O	7186	7187	,
O	7188	7191	why
O	7192	7197	doesn
O	7197	7198	'
O	7198	7199	t
O	7200	7202	it
O	7203	7207	just
O	7208	7212	call
B-api_mention	7213	7219	Arrays
I-api_mention	7219	7220	.
I-api_mention	7220	7224	sort
O	7225	7227	or
O	7228	7231	use
O	7232	7236	dual
O	7236	7237	-
O	7237	7242	pivot
O	7243	7252	QuickSort
O	7253	7254	?

O	7255	7258	Why
O	7259	7262	use
O	7263	7272	Mergesort
O	7273	7274	?

O	7276	7284	Question
O	7284	7285	-
O	7285	7293	31270759

O	7294	7304	Exceptions
O	7304	7305	,
O	7306	7316	especially
O	7317	7324	checked
O	7325	7329	ones
O	7329	7330	,
O	7331	7334	can
O	7335	7343	severely
O	7344	7353	interrupt
O	7354	7357	the
O	7358	7362	flow
O	7363	7365	of
O	7366	7373	program
O	7374	7379	logic
O	7380	7384	when
O	7385	7388	the
O	7389	7391	FP
O	7392	7397	idiom
O	7398	7400	is
O	7401	7405	used
O	7406	7408	in
O	7409	7413	Java
O	7414	7415	8
O	7415	7416	.

O	7417	7421	Here
O	7422	7424	is
O	7425	7427	an
O	7428	7437	arbitrary
O	7438	7445	example
O	7445	7446	:
O	7447	7448	#
O	7448	7451	pre
O	7452	7455	The
O	7456	7461	above
O	7462	7466	code
O	7467	7473	breaks
O	7474	7478	when
O	7479	7484	there
O	7484	7485	'
O	7485	7486	s
O	7487	7489	an
O	7490	7499	exception
O	7500	7503	for
O	7504	7506	an
O	7507	7518	unparseable
O	7519	7525	string
O	7525	7526	.

O	7527	7530	But
O	7531	7534	say
O	7535	7536	I
O	7537	7541	just
O	7542	7546	want
O	7547	7549	to
O	7550	7557	replace
O	7558	7562	that
O	7563	7567	with
O	7568	7569	a
O	7570	7577	default
O	7578	7583	value
O	7583	7584	,
O	7585	7589	much
O	7590	7594	like
O	7595	7596	I
O	7597	7600	can
O	7601	7605	with
B-api_mention	7606	7614	Optional
O	7615	7616	:
B-api_mention	7617	7623	Stream
I-api_mention	7623	7624	.
I-api_mention	7624	7626	of
I-api_mention	7626	7627	(
I-api_mention	7627	7631	args
I-api_mention	7631	7632	)
I-api_mention	7632	7633	.
I-api_mention	7633	7640	forEach
I-api_mention	7640	7641	(
I-api_mention	7641	7645	args
I-api_mention	7645	7646	)
O	7646	7647	;
O	7648	7650	Of
O	7651	7657	course
O	7657	7658	,
O	7659	7663	this
O	7664	7669	still
O	7670	7675	fails
O	7676	7683	because
B-api_mention	7684	7692	Optional
O	7693	7697	only
O	7698	7705	handles
O	7706	7710	null
O	7711	7712	s
O	7712	7713	.

O	7714	7715	I
O	7716	7721	would
O	7722	7726	like
O	7727	7736	something
O	7737	7739	as
O	7740	7747	follows
O	7747	7748	:
B-api_mention	7749	7755	Stream
I-api_mention	7755	7756	.
I-api_mention	7756	7758	of
I-api_mention	7758	7759	(
I-api_mention	7759	7763	args
I-api_mention	7763	7764	)
I-api_mention	7764	7765	.
I-api_mention	7765	7772	forEach
I-api_mention	7772	7773	(
I-api_mention	7773	7777	args
I-api_mention	7777	7778	)
O	7778	7779	;
O	7780	7784	Note
O	7784	7785	:
O	7786	7790	this
O	7791	7793	is
O	7794	7795	a
O	7796	7800	self
O	7800	7801	-
O	7801	7809	answered
O	7810	7818	question
O	7818	7819	.

O	7821	7829	Question
O	7829	7830	-
O	7830	7838	31419029

O	7839	7840	I
O	7840	7841	'
O	7841	7843	ve
O	7844	7849	tried
O	7850	7852	to
O	7853	7858	build
O	7859	7861	my
O	7862	7865	own
B-api_mention	7866	7869	Map
O	7870	7872	to
O	7873	7881	increase
O	7882	7885	the
O	7886	7897	performance
O	7898	7901	for
O	7902	7903	a
O	7904	7911	special
O	7912	7923	environment
O	7923	7924	,
O	7925	7928	and
O	7929	7930	I
O	7931	7939	realized
O	7940	7949	something
O	7950	7956	pretty
O	7957	7968	interesting
O	7968	7969	:
O	7970	7978	Creating
O	7979	7980	a
O	7981	7984	new
B-api_mention	7985	7992	Hashmap
I-api_mention	7992	7993	<
I-api_mention	7993	7994	T
I-api_mention	7994	7995	>
I-api_mention	7995	7996	(
I-api_mention	7996	8000	args
I-api_mention	8000	8001	)
O	8002	8004	is
O	8005	8011	faster
O	8012	8016	than
O	8017	8020	new
B-api_mention	8021	8027	Object
I-api_mention	8027	8028	[
I-api_mention	8028	8032	2000
I-api_mention	8032	8033	]
O	8034	8035	-
O	8036	8038	no
O	8039	8045	matter
O	8046	8048	in
O	8049	8054	which
O	8055	8060	order
O	8061	8062	I
O	8063	8070	execute
O	8071	8076	these
O	8077	8085	commands
O	8085	8086	.

O	8087	8091	That
O	8091	8092	'
O	8092	8093	s
O	8094	8100	pretty
O	8101	8110	confusing
O	8111	8113	to
O	8114	8116	me
O	8116	8117	,
O	8118	8121	esp
O	8121	8122	.
O	8123	8130	because
O	8131	8134	the
B-api_mention	8135	8142	Hashmap
O	8143	8154	constructor
O	8155	8163	contains
O	8164	8165	a
O	8166	8171	table
O	8172	8173	=
O	8174	8177	new
O	8178	8183	Entry
O	8183	8184	[
O	8184	8192	capacity
O	8192	8193	]
O	8194	8195	,
O	8196	8205	according
O	8206	8208	to
O	8209	8213	this
O	8214	8215	.

O	8216	8218	Is
O	8219	8224	there
O	8225	8234	something
O	8235	8240	wrong
O	8241	8245	with
O	8246	8248	my
O	8249	8258	testbench
O	8258	8259	?

O	8260	8261	#
O	8261	8264	pre
O	8265	8266	I
O	8266	8267	'
O	8267	8268	d
O	8269	8273	love
O	8274	8276	to
O	8277	8280	see
O	8281	8284	the
O	8285	8292	results
O	8293	8295	of
O	8296	8303	testing
O	8304	8306	on
O	8307	8314	another
O	8315	8323	computer
O	8323	8324	.

O	8325	8326	I
O	8326	8327	'
O	8327	8329	ve
O	8330	8333	got
O	8334	8336	no
O	8337	8341	clue
O	8342	8345	why
O	8346	8354	creating
O	8355	8356	a
B-api_mention	8357	8364	HashMap
O	8365	8367	is
O	8368	8370	10
O	8371	8376	times
O	8377	8383	faster
O	8384	8388	than
O	8389	8397	creating
O	8398	8399	a
B-api_mention	8400	8406	Object
I-api_mention	8406	8407	[
I-api_mention	8407	8408	]
O	8409	8410	.

O	8412	8420	Question
O	8420	8421	-
O	8421	8429	31370403

O	8430	8431	I
O	8431	8432	'
O	8432	8433	m
O	8434	8443	currently
O	8444	8446	in
O	8447	8450	the
O	8451	8458	process
O	8459	8461	of
O	8462	8469	writing
O	8470	8471	a
O	8472	8477	paint
O	8478	8485	program
O	8486	8488	in
O	8489	8493	java
O	8493	8494	,
O	8495	8503	designed
O	8504	8506	to
O	8507	8511	have
O	8512	8520	flexible
O	8521	8524	and
O	8525	8538	comprehensive
O	8539	8554	functionalities
O	8554	8555	.

O	8556	8558	It
O	8559	8566	stemmed
O	8567	8571	from
O	8572	8574	my
O	8575	8580	final
O	8581	8588	project
O	8588	8589	,
O	8590	8594	that
O	8595	8596	I
O	8597	8602	wrote
O	8603	8612	overnight
O	8613	8616	the
O	8617	8620	day
O	8621	8627	before
O	8627	8628	.

O	8629	8636	Because
O	8637	8639	of
O	8640	8644	that
O	8644	8645	,
O	8646	8648	it
O	8648	8649	'
O	8649	8650	s
O	8651	8654	got
O	8655	8659	tons
O	8660	8663	and
O	8664	8668	tons
O	8669	8671	of
O	8672	8676	bugs
O	8676	8677	,
O	8678	8683	which
O	8684	8685	I
O	8685	8686	'
O	8686	8688	ve
O	8689	8693	been
O	8694	8702	tackling
O	8703	8706	one
O	8707	8709	by
O	8710	8713	one
O	8714	8715	(
O	8715	8716	e
O	8716	8717	.
O	8717	8718	g
O	8718	8719	.
O	8720	8721	I
O	8722	8725	can
O	8726	8730	only
O	8731	8735	save
O	8736	8741	files
O	8742	8746	that
O	8747	8751	will
O	8752	8754	be
O	8755	8760	empty
O	8760	8761	,
O	8762	8764	my
O	8765	8775	rectangles
O	8776	8779	don
O	8779	8780	'
O	8780	8781	t
O	8782	8786	draw
O	8787	8792	right
O	8793	8796	but
O	8797	8799	my
O	8800	8807	circles
O	8808	8810	do
O	8810	8811	.
O	8811	8812	.
O	8812	8813	.
O	8813	8814	)
O	8814	8815	.

O	8816	8820	This
O	8821	8825	time
O	8825	8826	,
O	8827	8828	I
O	8828	8829	'
O	8829	8831	ve
O	8832	8836	been
O	8837	8843	trying
O	8844	8846	to
O	8847	8850	add
O	8851	8855	undo
O	8855	8856	/
O	8856	8860	redo
O	8861	8874	functionality
O	8875	8877	to
O	8878	8880	my
O	8881	8888	program
O	8888	8889	.

O	8890	8897	However
O	8897	8898	,
O	8899	8900	I
O	8901	8904	can
O	8904	8905	'
O	8905	8906	t
O	8907	8908	"
O	8908	8912	undo
O	8912	8913	"
O	8914	8923	something
O	8924	8928	that
O	8929	8930	I
O	8931	8935	have
O	8936	8940	done
O	8940	8941	.

O	8942	8951	Therefore
O	8951	8952	,
O	8953	8954	I
O	8955	8958	got
O	8959	8961	an
O	8962	8966	idea
O	8967	8969	to
O	8970	8974	save
O	8975	8981	copies
O	8982	8984	of
O	8985	8987	my
B-api_mention	8988	9001	BufferedImage
O	9002	9006	each
O	9007	9011	time
O	9012	9013	a
B-api_mention	9014	9027	mouseReleased
O	9028	9033	event
O	9034	9037	was
O	9038	9043	fired
O	9043	9044	.

O	9045	9052	However
O	9052	9053	,
O	9054	9058	with
O	9059	9063	some
O	9064	9066	of
O	9067	9070	the
O	9071	9077	images
O	9078	9083	going
O	9084	9086	to
O	9087	9096	1920x1080
O	9097	9107	resolution
O	9107	9108	,
O	9109	9110	I
O	9111	9118	figured
O	9119	9123	that
O	9124	9128	this
O	9129	9135	wouldn
O	9135	9136	'
O	9136	9137	t
O	9138	9140	be
O	9141	9150	efficient
O	9150	9151	:
O	9152	9159	storing
O	9160	9164	them
O	9165	9170	would
O	9171	9179	probably
O	9180	9184	take
O	9185	9194	gigabytes
O	9195	9197	of
O	9198	9204	memory
O	9204	9205	.

O	9206	9209	The
O	9210	9216	reason
O	9217	9220	for
O	9221	9224	why
O	9225	9226	I
O	9227	9230	can
O	9230	9231	'
O	9231	9232	t
O	9233	9239	simply
O	9240	9245	paint
O	9246	9249	the
O	9250	9254	same
O	9255	9260	thing
O	9261	9265	with
O	9266	9269	the
O	9270	9280	background
O	9281	9287	colour
O	9288	9290	to
O	9291	9295	undo
O	9296	9298	is
O	9299	9306	because
O	9307	9308	I
O	9309	9313	have
O	9314	9318	many
O	9319	9328	different
O	9329	9336	brushes
O	9336	9337	,
O	9338	9343	which
O	9344	9349	paint
O	9350	9355	based
O	9356	9358	on
B-api_mention	9359	9363	Math
I-api_mention	9363	9364	.
I-api_mention	9364	9370	random
I-api_mention	9370	9371	(
I-api_mention	9371	9375	args
I-api_mention	9375	9376	)
O	9377	9378	,
O	9379	9382	and
O	9383	9390	because
O	9391	9396	there
O	9397	9400	are
O	9401	9405	many
O	9406	9415	different
O	9416	9422	layers
O	9423	9424	(
O	9424	9426	in
O	9427	9428	a
O	9429	9435	single
O	9436	9441	layer
O	9441	9442	)
O	9442	9443	.

O	9444	9448	Then
O	9448	9449	,
O	9450	9451	I
O	9451	9452	'
O	9452	9454	ve
O	9455	9465	considered
O	9466	9473	cloning
O	9474	9477	the
B-api_mention	9478	9486	Graphics
O	9487	9494	objects
O	9495	9499	that
O	9500	9501	I
O	9502	9505	use
O	9506	9508	to
O	9509	9514	paint
O	9515	9517	to
O	9518	9521	the
B-api_mention	9522	9535	BufferedImage
O	9536	9537	.

O	9538	9542	Like
O	9543	9547	this
O	9547	9548	:
O	9549	9550	#
O	9550	9553	pre
O	9554	9555	I
O	9556	9561	haven
O	9561	9562	'
O	9562	9563	t
O	9564	9568	done
O	9569	9573	this
O	9574	9580	before
O	9580	9581	,
O	9582	9584	so
O	9585	9586	I
O	9587	9591	have
O	9592	9593	a
O	9594	9600	couple
O	9601	9610	questions
O	9610	9611	:
O	9612	9613	#
O	9613	9615	li
O	9616	9621	Would
O	9622	9623	I
O	9624	9629	still
O	9630	9632	be
O	9633	9640	wasting
O	9641	9650	pointless
O	9651	9657	memory
O	9658	9660	by
O	9661	9666	doing
O	9667	9671	this
O	9671	9672	,
O	9673	9677	like
O	9678	9685	cloning
O	9686	9688	my
B-api_mention	9689	9703	BufferedImages
O	9704	9705	?

O	9706	9707	#
O	9707	9709	li
O	9710	9712	Is
O	9713	9718	there
O	9719	9730	necessarily
O	9731	9732	a
O	9733	9742	different
O	9743	9746	way
O	9747	9748	I
O	9749	9752	can
O	9753	9755	do
O	9756	9760	this
O	9760	9761	?

O	9763	9771	Question
O	9771	9772	-
O	9772	9780	31445024

O	9781	9782	I
O	9782	9783	'
O	9783	9784	m
O	9785	9791	trying
O	9792	9794	to
O	9795	9804	determine
O	9805	9812	whether
O	9813	9816	the
O	9817	9826	following
O	9827	9837	statements
O	9838	9841	are
O	9842	9852	guaranteed
O	9853	9855	to
O	9856	9858	be
O	9859	9863	true
O	9863	9864	:
O	9865	9866	#
O	9866	9869	pre
O	9870	9871	I
O	9871	9872	'
O	9872	9874	ve
O	9875	9881	always
O	9882	9889	assumed
O	9890	9894	that
O	9895	9905	autoboxing
O	9906	9909	was
O	9910	9920	equivalent
O	9921	9923	to
O	9924	9931	calling
B-api_mention	9932	9939	valueOf
I-api_mention	9939	9940	(
I-api_mention	9940	9944	args
I-api_mention	9944	9945	)
O	9946	9948	on
O	9949	9952	the
O	9953	9966	corresponding
O	9967	9971	type
O	9971	9972	.

O	9973	9978	Every
O	9979	9989	discussion
O	9990	9994	that
O	9995	9996	I
O	9996	9997	'
O	9997	9999	ve
O	10000	10004	seen
O	10005	10007	on
O	10008	10011	the
O	10012	10017	topic
O	10018	10023	seems
O	10024	10026	to
O	10027	10034	support
O	10035	10037	my
O	10038	10048	assumption
O	10048	10049	.

O	10050	10053	But
O	10054	10057	all
O	10058	10059	I
O	10060	10065	could
O	10066	10070	find
O	10071	10073	in
O	10074	10077	the
O	10078	10081	JLS
O	10082	10085	was
O	10086	10089	the
O	10090	10099	following
O	10100	10101	(
O	10102	10103	§
O	10103	10104	5
O	10104	10105	.
O	10105	10106	1
O	10106	10107	.
O	10107	10108	7
O	10109	10110	)
O	10110	10111	:
O	10112	10113	#
O	10113	10123	blockquote
O	10124	10128	That
O	10129	10138	describes
O	10139	10147	behavior
O	10148	10157	identical
O	10158	10160	to
O	10161	10165	that
O	10166	10168	of
B-api_mention	10169	10176	valueOf
I-api_mention	10176	10177	(
I-api_mention	10177	10181	args
I-api_mention	10181	10182	)
O	10183	10184	.

O	10185	10188	But
O	10189	10194	there
O	10195	10200	doesn
O	10200	10201	'
O	10201	10202	t
O	10203	10207	seem
O	10208	10210	to
O	10211	10213	be
O	10214	10217	any
O	10218	10227	guarantee
O	10228	10232	that
B-api_mention	10233	10240	valueOf
I-api_mention	10240	10241	(
I-api_mention	10241	10245	args
I-api_mention	10245	10246	)
O	10247	10249	is
O	10250	10258	actually
O	10259	10266	invoked
O	10266	10267	,
O	10268	10275	meaning
O	10276	10281	there
O	10282	10287	could
O	10288	10301	theoretically
O	10302	10304	be
O	10305	10307	an
O	10308	10322	implementation
O	10323	10327	that
O	10328	10333	keeps
O	10334	10335	a
O	10336	10344	separate
O	10344	10345	,
O	10346	10355	dedicated
O	10356	10361	cache
O	10362	10365	for
O	10366	10375	autoboxed
O	10376	10382	values
O	10382	10383	.

O	10384	10386	In
O	10387	10391	such
O	10392	10393	a
O	10394	10398	case
O	10398	10399	,
O	10400	10405	there
O	10406	10411	might
O	10412	10415	not
O	10416	10418	be
O	10419	10427	identity
O	10428	10436	equality
O	10437	10444	between
O	10445	10451	cached
O	10452	10461	autoboxed
O	10462	10468	values
O	10469	10472	and
O	10473	10480	regular
O	10481	10487	cached
O	10488	10493	boxed
O	10494	10500	values
O	10500	10501	.

O	10502	10508	Oracle
O	10508	10509	'
O	10509	10510	s
O	10511	10521	autoboxing
O	10522	10530	tutorial
O	10531	10537	states
O	10538	10544	matter
O	10544	10545	-
O	10545	10547	of
O	10547	10548	-
O	10548	10554	factly
O	10555	10559	that
O	10560	10562	li
B-api_mention	10562	10563	.
I-api_mention	10563	10566	add
I-api_mention	10566	10567	(
I-api_mention	10567	10571	args
I-api_mention	10571	10572	)
O	10573	10575	is
O	10576	10584	compiled
O	10585	10587	to
O	10588	10590	li
B-api_mention	10590	10591	.
I-api_mention	10591	10594	add
I-api_mention	10594	10595	(
I-api_mention	10595	10599	args
I-api_mention	10599	10600	)
O	10601	10602	,
O	10603	10608	where
O	10609	10610	i
O	10611	10613	is
O	10614	10616	an
O	10617	10620	int
O	10621	10622	.

O	10623	10626	But
O	10627	10628	I
O	10629	10632	don
O	10632	10633	'
O	10633	10634	t
O	10635	10639	know
O	10640	10647	whether
O	10648	10651	the
O	10652	10660	tutorial
O	10661	10667	should
O	10668	10670	be
O	10671	10681	considered
O	10682	10684	an
O	10685	10698	authoritative
O	10699	10705	source
O	10705	10706	.

O	10708	10716	Question
O	10716	10717	-
O	10717	10725	32046078

O	10726	10727	I
O	10728	10732	have
O	10733	10734	a
O	10735	10741	server
O	10742	10746	side
O	10747	10758	implemented
O	10759	10761	in
O	10762	10767	Scala
O	10768	10771	and
O	10772	10777	React
O	10777	10778	/
O	10778	10782	Flux
O	10783	10788	based
O	10789	10794	front
O	10795	10798	end
O	10798	10799	.

O	10800	10802	My
O	10803	10811	services
O	10812	10818	return
O	10819	10826	Futures
O	10827	10830	and
O	10831	10835	they
O	10836	10839	are
O	10840	10847	handled
O	10848	10854	within
O	10855	10863	Scalatra
O	10863	10864	'
O	10864	10865	s
O	10866	10877	AsyncResult
O	10878	10881	for
O	10882	10886	JSON
O	10887	10896	responses
O	10896	10897	.

O	10898	10901	For
O	10902	10912	isomorphic
O	10912	10913	/
O	10913	10919	server
O	10920	10924	side
O	10925	10934	rendering
O	10935	10940	setup
O	10941	10942	I
O	10943	10946	did
O	10947	10950	not
O	10951	10955	want
O	10956	10958	to
O	10959	10965	change
O	10966	10974	services
O	10975	10977	to
O	10978	10980	be
O	10981	10989	blocking
O	10990	10992	so
O	10993	10994	I
O	10995	11002	started
O	11003	11007	with
O	11008	11013	Scala
O	11014	11020	Future
O	11020	11021	-
O	11021	11022	>
B-api_mention	11023	11027	java
I-api_mention	11027	11028	.
I-api_mention	11028	11032	util
I-api_mention	11032	11033	.
I-api_mention	11033	11041	function
I-api_mention	11041	11042	.
I-api_mention	11042	11050	Function
O	11051	11061	conversion
O	11062	11067	shown
O	11068	11072	here
O	11073	11074	.

O	11075	11078	But
O	11079	11082	the
O	11083	11093	dispatcher
O	11094	11096	in
O	11097	11101	Flux
O	11102	11107	would
O	11108	11112	like
O	11113	11115	to
O	11116	11120	have
O	11121	11123	JS
O	11124	11131	Promise
O	11131	11132	.

O	11133	11135	So
O	11136	11139	far
O	11140	11141	I
O	11142	11147	found
O	11148	11152	only
O	11153	11159	rather
O	11160	11171	complicated
O	11172	11180	sounding
O	11181	11184	way
O	11185	11191	around
O	11192	11196	this
O	11197	11203	Slides
O	11204	11206	68
O	11206	11207	-
O	11207	11209	81
O	11210	11212	Is
O	11213	11218	there
O	11219	11222	any
O	11223	11234	recommended
O	11235	11238	way
O	11239	11241	to
O	11242	11246	deal
O	11247	11251	with
O	11252	11256	this
O	11257	11262	Scala
O	11263	11269	Future
O	11270	11271	-
O	11271	11272	>
O	11273	11275	JS
O	11276	11283	Promise
O	11284	11294	conversion
O	11294	11295	?

O	11297	11305	Question
O	11305	11306	-
O	11306	11314	31696485

O	11315	11319	When
O	11320	11325	using
O	11326	11329	the
O	11330	11334	Java
O	11335	11336	8
B-api_mention	11337	11345	Optional
O	11346	11351	class
O	11351	11352	,
O	11353	11358	there
O	11359	11362	are
O	11363	11366	two
O	11367	11371	ways
O	11372	11374	in
O	11375	11380	which
O	11381	11382	a
O	11383	11388	value
O	11389	11392	can
O	11393	11395	be
O	11396	11403	wrapped
O	11404	11406	in
O	11407	11409	an
O	11410	11418	optional
O	11418	11419	.

O	11420	11421	#
O	11421	11424	pre
O	11425	11426	I
O	11427	11437	understand
B-api_mention	11438	11446	Optional
I-api_mention	11446	11447	.
I-api_mention	11447	11457	ofNullable
O	11458	11460	is
O	11461	11464	the
O	11465	11469	only
O	11470	11474	safe
O	11475	11478	way
O	11479	11481	of
O	11482	11487	using
B-api_mention	11488	11496	Optional
O	11497	11498	,
O	11499	11502	but
O	11503	11506	why
O	11507	11511	does
B-api_mention	11512	11520	Optional
I-api_mention	11520	11521	.
I-api_mention	11521	11523	of
O	11524	11529	exist
O	11530	11532	at
O	11533	11536	all
O	11536	11537	?

O	11538	11541	Why
O	11542	11545	not
O	11546	11550	just
O	11551	11554	use
B-api_mention	11555	11563	Optional
I-api_mention	11563	11564	.
I-api_mention	11564	11574	ofNullable
O	11575	11578	and
O	11579	11581	be
O	11582	11584	on
O	11585	11588	the
O	11589	11593	safe
O	11594	11598	side
O	11599	11601	at
O	11602	11605	all
O	11606	11611	times
O	11611	11612	?

O	11614	11622	Question
O	11622	11623	-
O	11623	11631	32323081

O	11632	11633	I
O	11634	11638	have
O	11639	11640	a
O	11641	11649	question
O	11650	11659	regarding
O	11660	11664	Java
O	11665	11666	8
O	11667	11676	inference
O	11677	11681	with
O	11682	11689	respect
O	11690	11692	to
O	11693	11700	lambdas
O	11701	11704	and
O	11705	11710	their
O	11711	11718	related
O	11719	11728	exception
O	11729	11739	signatures
O	11739	11740	.

O	11741	11743	If
O	11744	11745	I
O	11746	11752	define
O	11753	11757	some
O	11758	11764	method
O	11765	11768	foo
O	11768	11769	:
O	11770	11771	#
O	11771	11774	pre
O	11775	11779	then
O	11780	11781	I
O	11782	11785	get
O	11786	11789	the
O	11790	11794	nice
O	11795	11798	and
O	11799	11806	concise
O	11807	11815	semantic
O	11816	11818	of
O	11819	11824	being
O	11825	11829	able
O	11830	11832	to
O	11833	11838	write
O	11839	11842	foo
O	11842	11843	(
O	11843	11847	args
O	11847	11848	)
O	11848	11849	;
O	11850	11852	in
O	11853	11857	most
O	11858	11863	cases
O	11864	11867	for
O	11868	11869	a
O	11870	11875	given
O	11876	11877	T
O	11878	11879	.

O	11880	11887	However
O	11887	11888	,
O	11889	11891	in
O	11892	11896	this
O	11897	11904	example
O	11904	11905	,
O	11906	11908	if
O	11909	11911	my
O	11912	11919	getTheT
O	11920	11929	operation
O	11930	11938	declares
O	11939	11943	that
O	11944	11946	it
O	11947	11953	throws
B-api_mention	11954	11963	Exception
O	11964	11965	,
O	11966	11968	my
O	11969	11972	foo
O	11973	11979	method
O	11980	11985	which
O	11986	11991	takes
O	11992	11993	a
B-api_mention	11994	12002	Supplier
O	12003	12005	no
O	12006	12012	longer
O	12013	12021	compiles
O	12021	12022	:
O	12023	12026	the
B-api_mention	12027	12035	Supplier
O	12036	12042	method
O	12043	12052	signature
O	12053	12056	for
O	12057	12060	get
O	12061	12066	doesn
O	12066	12067	'
O	12067	12068	t
O	12069	12074	throw
O	12075	12085	exceptions
O	12085	12086	.

O	12087	12089	It
O	12090	12095	seems
O	12096	12100	like
O	12101	12102	a
O	12103	12109	decent
O	12110	12113	way
O	12114	12116	to
O	12117	12120	get
O	12121	12127	around
O	12128	12132	this
O	12133	12138	would
O	12139	12141	be
O	12142	12144	to
O	12145	12153	overload
O	12154	12157	foo
O	12158	12160	to
O	12161	12167	accept
O	12168	12174	either
O	12175	12181	option
O	12181	12182	,
O	12183	12187	with
O	12188	12191	the
O	12192	12202	overloaded
O	12203	12213	definition
O	12214	12219	being
O	12219	12220	:
O	12221	12222	#
O	12222	12225	pre
O	12226	12231	where
B-api_mention	12232	12248	ThrowingSupplier
O	12249	12251	is
O	12252	12259	defined
O	12260	12262	as
O	12263	12264	#
O	12264	12267	pre
O	12268	12270	In
O	12271	12275	this
O	12276	12279	way
O	12279	12280	,
O	12281	12283	we
O	12284	12288	have
O	12289	12292	one
B-api_mention	12293	12301	Supplier
O	12302	12306	type
O	12307	12312	which
O	12313	12319	throws
O	12320	12330	exceptions
O	12331	12334	and
O	12335	12338	one
O	12339	12344	which
O	12345	12350	doesn
O	12350	12351	'
O	12351	12352	t
O	12352	12353	.

O	12354	12357	The
O	12358	12365	desired
O	12366	12372	syntax
O	12373	12378	would
O	12379	12381	be
O	12382	12391	something
O	12392	12396	like
O	12397	12401	this
O	12401	12402	:
O	12403	12404	#
O	12404	12407	pre
O	12408	12415	However
O	12415	12416	,
O	12417	12421	this
O	12422	12428	causes
O	12429	12435	issues
O	12436	12439	due
O	12440	12442	to
O	12443	12446	the
O	12447	12453	lambda
O	12454	12458	type
O	12459	12464	being
O	12465	12474	ambiguous
O	12475	12476	(
O	12476	12486	presumably
O	12487	12493	unable
O	12494	12496	to
O	12497	12504	resolve
O	12505	12512	between
B-api_mention	12513	12521	Supplier
O	12522	12525	and
B-api_mention	12526	12542	ThrowingSupplier
O	12542	12543	)
O	12543	12544	.

O	12545	12550	Doing
O	12551	12553	an
O	12554	12562	explicit
O	12563	12567	cast
O	12568	12569	a
O	12570	12572	la
O	12573	12576	foo
O	12576	12577	(
O	12577	12581	args
O	12581	12582	)
O	12582	12583	;
O	12584	12589	would
O	12590	12594	work
O	12594	12595	,
O	12596	12599	but
O	12600	12602	it
O	12603	12607	gets
O	12608	12611	rid
O	12612	12614	of
O	12615	12619	most
O	12620	12622	of
O	12623	12626	the
O	12627	12638	conciseness
O	12639	12641	of
O	12642	12645	the
O	12646	12653	desired
O	12654	12660	syntax
O	12660	12661	.

O	12662	12663	I
O	12664	12669	guess
O	12670	12673	the
O	12674	12684	underlying
O	12685	12693	question
O	12694	12696	is
O	12696	12697	:
O	12698	12700	if
O	12701	12704	the
O	12705	12709	Java
O	12710	12718	compiler
O	12719	12721	is
O	12722	12726	able
O	12727	12729	to
O	12730	12737	resolve
O	12738	12741	the
O	12742	12746	fact
O	12747	12751	that
O	12752	12755	one
O	12756	12758	of
O	12759	12761	my
O	12762	12769	lambdas
O	12770	12772	is
O	12773	12785	incompatible
O	12786	12789	due
O	12790	12792	to
O	12793	12795	it
O	12796	12804	throwing
O	12805	12807	an
O	12808	12817	exception
O	12818	12820	in
O	12821	12824	the
B-api_mention	12825	12833	Supplier
O	12833	12834	-
O	12834	12838	only
O	12839	12843	case
O	12843	12844	,
O	12845	12848	why
O	12849	12852	isn
O	12852	12853	'
O	12853	12854	t
O	12855	12857	it
O	12858	12862	able
O	12863	12865	to
O	12866	12869	use
O	12870	12874	that
O	12875	12879	same
O	12880	12891	information
O	12892	12894	to
O	12895	12901	derive
O	12902	12905	the
O	12906	12910	type
O	12911	12913	of
O	12914	12917	the
O	12918	12924	lambda
O	12925	12927	in
O	12928	12931	the
O	12932	12941	secondary
O	12941	12942	,
O	12943	12947	type
O	12947	12948	-
O	12948	12957	inference
O	12958	12962	case
O	12962	12963	?

O	12964	12967	Any
O	12968	12979	information
O	12980	12982	or
O	12983	12992	resources
O	12993	12998	which
O	12999	13005	anyone
O	13006	13011	could
O	13012	13017	point
O	13018	13020	me
O	13021	13023	to
O	13024	13029	would
O	13030	13038	likewise
O	13039	13041	be
O	13042	13046	much
O	13047	13058	appreciated
O	13058	13059	,
O	13060	13062	as
O	13063	13064	I
O	13064	13065	'
O	13065	13066	m
O	13067	13071	just
O	13072	13075	not
O	13076	13079	too
O	13080	13084	sure
O	13085	13090	where
O	13091	13093	to
O	13094	13098	look
O	13099	13102	for
O	13103	13107	more
O	13108	13119	information
O	13120	13122	on
O	13123	13126	the
O	13127	13133	matter
O	13133	13134	.

O	13135	13141	Thanks
O	13141	13142	!

O	13144	13152	Question
O	13152	13153	-
O	13153	13161	32714194

B-api_mention	13162	13168	String
O	13169	13171	is
O	13172	13173	a
O	13174	13181	special
O	13182	13186	case
O	13187	13189	in
O	13190	13194	Java
O	13194	13195	.

O	13196	13198	It
O	13198	13199	'
O	13199	13200	s
O	13201	13202	a
O	13203	13208	class
O	13208	13209	,
O	13210	13215	which
O	13216	13217	I
O	13218	13221	can
O	13222	13229	examine
O	13230	13232	in
O	13233	13236	the
O	13237	13243	source
O	13244	13248	code
O	13249	13250	,
O	13251	13254	but
O	13255	13257	it
O	13258	13262	also
O	13263	13266	has
O	13267	13270	its
O	13271	13274	own
O	13275	13280	infix
O	13281	13289	operator
O	13290	13291	+
O	13292	13293	,
O	13294	13299	which
O	13300	13305	seems
O	13306	13308	to
O	13309	13311	be
O	13312	13321	syntactic
O	13322	13327	sugar
O	13328	13331	for
B-api_mention	13332	13345	StringBuilder
O	13346	13347	.

O	13348	13351	For
O	13352	13359	example
O	13359	13360	,
O	13361	13374	StringLiteral
O	13375	13376	+
O	13377	13385	yourName
O	13385	13386	;
O	13387	13392	could
O	13393	13399	become
O	13400	13403	new
B-api_mention	13404	13417	StringBuilder
I-api_mention	13417	13418	(
I-api_mention	13418	13422	args
I-api_mention	13422	13423	)
I-api_mention	13423	13424	.
I-api_mention	13424	13430	append
I-api_mention	13430	13431	(
I-api_mention	13431	13435	args
I-api_mention	13435	13436	)
I-api_mention	13436	13437	.
I-api_mention	13437	13443	append
I-api_mention	13443	13444	(
I-api_mention	13444	13448	args
I-api_mention	13448	13449	)
I-api_mention	13449	13450	.
I-api_mention	13450	13458	toString
I-api_mention	13458	13459	(
I-api_mention	13459	13463	args
I-api_mention	13463	13464	)
O	13464	13465	;
O	13466	13471	There
O	13472	13475	are
O	13476	13478	no
O	13479	13483	user
O	13483	13484	-
O	13484	13491	defined
O	13492	13501	operators
O	13502	13504	in
O	13505	13509	Java
O	13509	13510	,
O	13511	13513	so
O	13514	13519	where
O	13520	13522	is
O	13523	13524	+
O	13525	13534	specified
O	13535	13538	for
B-api_mention	13539	13545	String
O	13546	13547	?

O	13548	13553	Could
O	13554	13557	the
O	13558	13562	same
O	13563	13572	mechanism
O	13573	13575	be
O	13576	13580	used
O	13581	13583	to
O	13584	13588	make
O	13589	13599	additional
O	13600	13609	operators
O	13609	13610	,
O	13611	13615	such
O	13616	13618	as
O	13619	13622	for
O	13623	13630	vectors
O	13630	13631	?

O	13633	13641	Question
O	13641	13642	-
O	13642	13650	33358248

O	13651	13660	Currently
O	13661	13664	the
O	13665	13675	BlendModes
O	13676	13677	(
O	13677	13685	Subtract
O	13685	13686	,
O	13687	13696	Exclusion
O	13697	13700	etc
O	13700	13701	)
O	13702	13705	use
O	13706	13709	the
O	13710	13723	LauncherImage
O	13724	13726	as
O	13727	13730	the
O	13731	13735	mask
O	13735	13736	.

O	13737	13740	Can
O	13741	13742	I
O	13743	13748	apply
O	13749	13754	these
O	13755	13765	BlendModes
O	13766	13768	to
O	13769	13770	a
O	13771	13782	ColorMatrix
O	13782	13783	?

O	13784	13785	I
O	13785	13786	'
O	13786	13787	m
O	13788	13793	using
O	13794	13797	the
O	13798	13813	GPUImageLibrary
O	13814	13825	colorMatrix
O	13825	13826	[
O	13827	13828	0
O	13828	13829	.
O	13829	13832	393
O	13832	13833	,
O	13834	13835	0
O	13835	13836	.
O	13836	13843	7689999
O	13843	13844	,
O	13845	13846	0
O	13846	13847	.
O	13847	13855	18899999
O	13855	13856	,
O	13857	13858	0
O	13858	13859	,
O	13860	13861	0
O	13861	13862	,
O	13863	13864	0
O	13864	13865	.
O	13865	13868	349
O	13868	13869	,
O	13870	13871	0
O	13871	13872	.
O	13872	13879	6859999
O	13879	13880	,
O	13881	13882	0
O	13882	13883	.
O	13883	13891	16799999
O	13891	13892	,
O	13893	13894	0
O	13894	13895	,
O	13896	13897	0
O	13897	13898	,
O	13899	13900	0
O	13900	13901	.
O	13901	13904	272
O	13904	13905	,
O	13906	13907	0
O	13907	13908	.
O	13908	13915	5339999
O	13915	13916	,
O	13917	13918	0
O	13918	13919	.
O	13919	13927	13099999
O	13927	13928	,
O	13929	13930	0
O	13930	13931	,
O	13932	13933	0
O	13933	13934	,
O	13935	13936	0
O	13936	13937	,
O	13938	13939	0
O	13939	13940	,
O	13941	13942	0
O	13942	13943	,
O	13944	13945	1
O	13945	13946	,
O	13947	13948	0
O	13948	13949	]
O	13949	13950	;
O	13951	13970	SubtractBlendFilter
O	13970	13971	.
O	13971	13975	java
O	13976	13977	#
O	13977	13980	pre
O	13981	14003	GPUIMageTwoInputFilter
O	14003	14004	.
O	14004	14008	java
O	14009	14010	#
O	14010	14013	pre
O	14014	14016	My
O	14017	14022	guess
O	14023	14025	it
O	14026	14034	involves
O	14035	14043	changing
O	14044	14053	something
O	14054	14058	with
B-api_mention	14059	14065	String
O	14066	14074	SUBTRACT
O	14074	14075	_
O	14075	14080	BLEND
O	14080	14081	_
O	14081	14089	GRAGMENT
O	14089	14090	_
O	14090	14096	SHADER
O	14097	14098	&
B-api_mention	14099	14105	String
O	14106	14112	VERTEX
O	14112	14113	_
O	14113	14119	SHADER
O	14120	14121	.

O	14123	14131	Question
O	14131	14132	-
O	14132	14140	34172978

O	14141	14142	#
O	14142	14145	pre
O	14146	14153	Counter
O	14154	14156	to
O	14157	14159	my
O	14160	14171	expectation
O	14171	14172	,
O	14173	14176	the
O	14177	14184	collect
O	14185	14189	call
O	14190	14195	never
O	14196	14203	returns
O	14203	14204	.

O	14205	14212	Setting
O	14213	14218	limit
O	14219	14225	before
O	14226	14232	filter
O	14233	14241	produces
O	14242	14245	the
O	14246	14254	expected
O	14255	14261	result
O	14261	14262	.

O	14263	14266	Why
O	14266	14267	?

O	14269	14277	Question
O	14277	14278	-
O	14278	14286	32859038

O	14287	14288	I
O	14289	14293	have
O	14294	14295	a
B-api_mention	14296	14300	List
I-api_mention	14300	14301	<
I-api_mention	14301	14302	T
I-api_mention	14302	14303	>
O	14304	14314	collection
O	14314	14315	.

O	14316	14317	I
O	14318	14322	need
O	14323	14325	to
O	14326	14333	convert
O	14334	14336	it
O	14337	14341	into
B-api_mention	14342	14345	Map
I-api_mention	14345	14346	<
I-api_mention	14346	14347	T
I-api_mention	14347	14348	>
O	14349	14352	The
O	14353	14356	key
O	14357	14359	of
O	14360	14363	the
O	14364	14367	map
O	14368	14372	must
O	14373	14375	be
O	14376	14379	the
O	14380	14385	index
O	14386	14388	of
O	14389	14392	the
O	14393	14397	item
O	14398	14400	in
O	14401	14404	the
O	14405	14415	collection
O	14415	14416	.

O	14417	14418	I
O	14419	14422	can
O	14423	14426	not
O	14427	14433	figure
O	14434	14436	it
O	14437	14440	out
O	14441	14444	how
O	14445	14447	to
O	14448	14450	do
O	14451	14455	this
O	14456	14460	with
O	14461	14468	streams
O	14468	14469	.

O	14470	14479	Something
O	14480	14484	like
O	14484	14485	:
O	14486	14491	items
B-api_mention	14491	14492	.
I-api_mention	14492	14498	stream
I-api_mention	14498	14499	(
I-api_mention	14499	14503	args
I-api_mention	14503	14504	)
I-api_mention	14504	14505	.
I-api_mention	14505	14512	collect
I-api_mention	14512	14513	(
I-api_mention	14513	14517	args
I-api_mention	14517	14518	)
O	14518	14519	;
O	14520	14523	Any
O	14524	14528	help
O	14528	14529	?

O	14530	14532	As
O	14533	14537	this
O	14538	14546	question
O	14547	14549	is
O	14550	14560	identified
O	14561	14563	as
O	14564	14572	possible
O	14573	14582	duplicate
O	14583	14584	I
O	14585	14589	need
O	14590	14592	to
O	14593	14596	add
O	14597	14601	that
O	14602	14604	my
O	14605	14613	concrete
O	14614	14621	problem
O	14622	14625	was
O	14626	14627	-
O	14628	14631	how
O	14632	14634	to
O	14635	14638	get
O	14639	14642	the
O	14643	14651	position
O	14652	14654	of
O	14655	14658	the
O	14659	14663	item
O	14664	14666	in
O	14667	14670	the
O	14671	14675	list
O	14676	14679	and
O	14680	14683	put
O	14684	14686	it
O	14687	14689	as
O	14690	14691	a
O	14692	14695	key
O	14696	14701	value

O	14703	14711	Question
O	14711	14712	-
O	14712	14720	33635717

O	14721	14722	I
O	14722	14723	'
O	14723	14724	m
O	14725	14732	reading
O	14733	14735	up
O	14736	14741	about
O	14742	14746	Java
O	14747	14754	streams
O	14755	14758	and
O	14759	14770	discovering
O	14771	14774	new
O	14775	14781	things
O	14782	14784	as
O	14785	14786	I
O	14787	14789	go
O	14790	14795	along
O	14795	14796	.

O	14797	14800	One
O	14801	14803	of
O	14804	14807	the
O	14808	14811	new
O	14812	14818	things
O	14819	14820	I
O	14821	14826	found
O	14827	14830	was
O	14831	14834	the
B-api_mention	14835	14839	peek
I-api_mention	14839	14840	(
I-api_mention	14840	14844	args
I-api_mention	14844	14845	)
O	14846	14854	function
O	14854	14855	.

O	14856	14862	Almost
O	14863	14873	everything
O	14874	14875	I
O	14875	14876	'
O	14876	14878	ve
O	14879	14883	read
O	14884	14886	on
O	14887	14891	peek
O	14892	14896	says
O	14897	14899	it
O	14900	14906	should
O	14907	14909	be
O	14910	14914	used
O	14915	14917	to
O	14918	14923	debug
O	14924	14928	your
O	14929	14936	Streams
O	14936	14937	.

O	14938	14942	What
O	14943	14945	if
O	14946	14947	I
O	14948	14951	had
O	14952	14953	a
B-api_mention	14954	14960	Stream
O	14961	14966	where
O	14967	14971	each
O	14972	14979	Account
O	14980	14983	has
O	14984	14985	a
O	14986	14994	username
O	14994	14995	,
O	14996	15004	password
O	15005	15010	field
O	15011	15014	and
O	15015	15016	a
O	15017	15022	login
O	15022	15023	(
O	15023	15024	)
O	15025	15028	and
O	15029	15037	loggedIn
O	15037	15038	(
O	15038	15039	)
O	15040	15046	method
O	15046	15047	.

O	15048	15049	I
O	15050	15054	also
O	15055	15059	have
O	15060	15068	Consumer
O	15068	15069	<
O	15069	15070	T
O	15070	15071	>
O	15072	15077	login
O	15078	15079	=
O	15080	15087	account
O	15088	15089	-
O	15089	15090	>
O	15091	15098	account
O	15098	15099	.
O	15099	15104	login
O	15104	15105	(
O	15105	15109	args
O	15109	15110	)
O	15110	15111	;
O	15112	15115	and
O	15116	15125	Predicate
O	15125	15126	<
O	15126	15127	T
O	15127	15128	>
O	15129	15137	loggedIn
O	15138	15139	=
O	15140	15147	account
O	15148	15149	-
O	15149	15150	>
O	15151	15158	account
O	15158	15159	.
O	15159	15167	loggedIn
O	15167	15168	(
O	15168	15172	args
O	15172	15173	)
O	15173	15174	;
O	15175	15178	Why
O	15179	15184	would
O	15185	15189	this
O	15190	15192	be
O	15193	15195	so
O	15196	15199	bad
O	15199	15200	?

O	15201	15202	#
O	15202	15205	pre
O	15206	15209	Now
O	15210	15212	as
O	15213	15216	far
O	15217	15219	as
O	15220	15221	I
O	15222	15225	can
O	15226	15230	tell
O	15231	15235	this
O	15236	15240	does
O	15241	15248	exactly
O	15249	15253	what
O	15254	15256	it
O	15256	15257	'
O	15257	15258	s
O	15259	15267	intended
O	15268	15270	to
O	15271	15273	do
O	15273	15274	.

O	15275	15277	It
O	15277	15278	;
O	15279	15280	#
O	15280	15282	li
O	15283	15288	Takes
O	15289	15290	a
O	15291	15295	list
O	15296	15298	of
O	15299	15307	accounts
O	15308	15309	#
O	15309	15311	li
O	15312	15317	Tries
O	15318	15320	to
O	15321	15324	log
O	15325	15327	in
O	15328	15330	to
O	15331	15335	each
O	15336	15343	account
O	15344	15345	#
O	15345	15347	li
O	15348	15355	Filters
O	15356	15359	out
O	15360	15363	any
O	15364	15371	account
O	15372	15377	which
O	15378	15382	aren
O	15382	15383	'
O	15383	15384	t
O	15385	15391	logged
O	15392	15394	in
O	15395	15396	#
O	15396	15398	li
O	15399	15407	Collects
O	15408	15411	the
O	15412	15418	logged
O	15419	15421	in
O	15422	15430	accounts
O	15431	15435	into
O	15436	15437	a
O	15438	15441	new
O	15442	15446	list
O	15447	15451	What
O	15452	15454	is
O	15455	15458	the
O	15459	15467	downside
O	15468	15470	of
O	15471	15476	doing
O	15477	15486	something
O	15487	15491	like
O	15492	15496	this
O	15496	15497	?

O	15498	15501	Any
O	15502	15508	reason
O	15509	15510	I
O	15511	15518	shouldn
O	15518	15519	'
O	15519	15520	t
O	15521	15528	proceed
O	15528	15529	?

O	15530	15536	Lastly
O	15536	15537	,
O	15538	15540	if
O	15541	15544	not
O	15545	15549	this
O	15550	15558	solution
O	15559	15563	then
O	15564	15568	what
O	15568	15569	?

O	15570	15573	The
O	15574	15582	original
O	15583	15590	version
O	15591	15593	of
O	15594	15598	this
O	15599	15603	used
O	15604	15607	the
B-api_mention	15608	15609	.
I-api_mention	15609	15615	filter
I-api_mention	15615	15616	(
I-api_mention	15616	15617	)
O	15618	15624	method
O	15625	15627	as
O	15628	15635	follows
O	15635	15636	;
O	15637	15638	#
O	15638	15641	pre

O	15643	15651	Question
O	15651	15652	-
O	15652	15660	33147339
O	15660	15661	,
O	15662	15668	answer
O	15668	15669	-
O	15669	15677	33147610

O	15678	15679	a
O	15680	15681	<
O	15682	15683	b
O	15684	15687	and
O	15688	15689	a
O	15690	15691	-
O	15692	15693	b
O	15694	15695	<
O	15696	15697	0
O	15698	15701	can
O	15702	15706	mean
O	15707	15710	two
O	15711	15720	different
O	15721	15727	things
O	15727	15728	.

O	15729	15737	Consider
O	15738	15741	the
O	15742	15751	following
O	15752	15756	code
O	15756	15757	:
O	15758	15759	#
O	15759	15762	pre
O	15763	15767	When
O	15768	15771	run
O	15771	15772	,
O	15773	15777	this
O	15778	15782	will
O	15783	15787	only
O	15788	15793	print
O	15794	15795	a
O	15796	15797	-
O	15798	15799	b
O	15800	15801	<
O	15802	15803	0
O	15804	15805	.

O	15806	15810	What
O	15811	15818	happens
O	15819	15821	is
O	15822	15826	that
O	15827	15828	a
O	15829	15830	<
O	15831	15832	b
O	15833	15835	is
O	15836	15843	clearly
O	15844	15849	false
O	15849	15850	,
O	15851	15854	but
O	15855	15856	a
O	15857	15858	-
O	15859	15860	b
O	15861	15870	overflows
O	15871	15874	and
O	15875	15882	becomes
O	15883	15884	-
O	15884	15885	1
O	15886	15887	,
O	15888	15893	which
O	15894	15896	is
O	15897	15905	negative
O	15905	15906	.

O	15907	15910	Now
O	15910	15911	,
O	15912	15918	having
O	15919	15923	said
O	15924	15928	that
O	15928	15929	,
O	15930	15938	consider
O	15939	15943	that
O	15944	15947	the
O	15948	15953	array
O	15954	15957	has
O	15958	15959	a
O	15960	15966	length
O	15967	15971	that
O	15972	15974	is
O	15975	15981	really
O	15982	15987	close
O	15988	15990	to
B-api_mention	15991	15998	Integer
I-api_mention	15998	15999	.
I-api_mention	15999	16002	MAX
I-api_mention	16002	16003	_
I-api_mention	16003	16008	VALUE
O	16009	16010	.

O	16011	16014	The
O	16015	16019	code
O	16020	16022	in
B-api_mention	16023	16032	ArrayList
O	16033	16037	goes
O	16038	16042	like
O	16043	16047	this
O	16047	16048	:
O	16049	16050	#
O	16050	16053	pre
O	16054	16065	oldCapacity
O	16066	16068	is
O	16069	16075	really
O	16076	16081	close
O	16082	16084	to
B-api_mention	16085	16092	Integer
I-api_mention	16092	16093	.
I-api_mention	16093	16096	MAX
I-api_mention	16096	16097	_
I-api_mention	16097	16102	VALUE
O	16103	16105	so
O	16106	16117	newCapacity
O	16118	16119	(
O	16119	16124	which
O	16125	16127	is
O	16128	16139	oldCapacity
O	16140	16141	+
O	16142	16143	0
O	16143	16144	.
O	16144	16145	5
O	16146	16147	*
O	16148	16159	oldCapacity
O	16160	16161	)
O	16162	16167	might
O	16168	16176	overflow
O	16177	16180	and
O	16181	16187	become
B-api_mention	16188	16195	Integer
I-api_mention	16195	16196	.
I-api_mention	16196	16199	MIN
I-api_mention	16199	16200	_
I-api_mention	16200	16205	VALUE
O	16206	16207	(
O	16207	16208	i
O	16208	16209	.
O	16209	16210	e
O	16210	16211	.
O	16212	16220	negative
O	16220	16221	)
O	16221	16222	.

O	16223	16227	Then
O	16227	16228	,
O	16229	16240	subtracting
O	16241	16252	minCapacity
O	16253	16263	underflows
O	16264	16268	back
O	16269	16273	into
O	16274	16275	a
O	16276	16284	positive
O	16285	16291	number
O	16291	16292	.

O	16293	16297	This
O	16298	16303	check
O	16304	16311	ensures
O	16312	16316	that
O	16317	16320	the
O	16321	16323	if
O	16324	16326	is
O	16327	16330	not
O	16331	16339	executed
O	16339	16340	.

O	16341	16343	If
O	16344	16347	the
O	16348	16352	code
O	16353	16357	were
O	16358	16365	written
O	16366	16368	as
O	16369	16371	if
O	16371	16372	(
O	16372	16376	args
O	16376	16377	)
O	16378	16379	,
O	16380	16382	it
O	16383	16388	would
O	16389	16391	be
O	16392	16396	true
O	16397	16399	in
O	16400	16404	this
O	16405	16409	case
O	16410	16411	(
O	16411	16416	since
O	16417	16428	newCapacity
O	16429	16431	is
O	16432	16440	negative
O	16440	16441	)
O	16442	16444	so
O	16445	16448	the
O	16449	16460	newCapacity
O	16461	16466	would
O	16467	16469	be
O	16470	16476	forced
O	16477	16479	to
O	16480	16491	minCapacity
O	16492	16502	regardless
O	16503	16505	of
O	16506	16509	the
O	16510	16521	oldCapacity
O	16522	16523	.

O	16524	16528	This
O	16529	16537	overflow
O	16538	16542	case
O	16543	16545	is
O	16546	16553	handled
O	16554	16556	by
O	16557	16560	the
O	16561	16565	next
O	16566	16568	if
O	16568	16569	.

O	16570	16574	When
O	16575	16586	newCapacity
O	16587	16590	has
O	16591	16601	overflowed
O	16601	16602	,
O	16603	16607	this
O	16608	16612	will
O	16613	16615	be
O	16616	16620	true
O	16621	16622	:
O	16623	16626	MAX
O	16626	16627	_
O	16627	16632	ARRAY
O	16632	16633	_
O	16633	16637	SIZE
O	16638	16640	is
O	16641	16648	defined
O	16649	16651	as
B-api_mention	16652	16659	Integer
I-api_mention	16659	16660	.
I-api_mention	16660	16663	MAX
I-api_mention	16663	16664	_
I-api_mention	16664	16669	VALUE
O	16670	16671	-
O	16672	16673	8
O	16674	16677	and
B-api_mention	16678	16685	Integer
I-api_mention	16685	16686	.
I-api_mention	16686	16689	MIN
I-api_mention	16689	16690	_
I-api_mention	16690	16695	VALUE
O	16696	16697	-
O	16698	16699	(
B-api_mention	16699	16706	Integer
I-api_mention	16706	16707	.
I-api_mention	16707	16710	MAX
I-api_mention	16710	16711	_
I-api_mention	16711	16716	VALUE
O	16717	16718	-
O	16719	16720	8
O	16720	16721	)
O	16722	16723	>
O	16724	16725	0
O	16726	16728	is
O	16729	16733	true
O	16734	16735	.

O	16736	16739	The
O	16740	16751	newCapacity
O	16752	16754	is
O	16755	16764	therefore
O	16765	16772	rightly
O	16773	16780	handled
O	16780	16781	:
O	16782	16794	hugeCapacity
O	16795	16801	method
O	16802	16809	returns
O	16810	16813	MAX
O	16813	16814	_
O	16814	16819	ARRAY
O	16819	16820	_
O	16820	16824	SIZE
O	16825	16827	or
B-api_mention	16828	16835	Integer
I-api_mention	16835	16836	.
I-api_mention	16836	16839	MAX
I-api_mention	16839	16840	_
I-api_mention	16840	16845	VALUE
O	16846	16847	.

O	16848	16850	NB
O	16850	16851	:
O	16852	16856	this
O	16857	16859	is
O	16860	16864	what
O	16865	16868	the
O	16869	16870	/
O	16870	16871	/
O	16872	16880	overflow
O	16880	16881	-
O	16881	16890	conscious
O	16891	16895	code
O	16896	16903	comment
O	16904	16906	in
O	16907	16911	this
O	16912	16918	method
O	16919	16921	is
O	16922	16928	saying
O	16928	16929	.

O	16931	16939	Question
O	16939	16940	-
O	16940	16948	33147339
O	16948	16949	,
O	16950	16956	answer
O	16956	16957	-
O	16957	16965	33147762

O	16966	16967	I
O	16968	16973	found
O	16974	16978	this
O	16979	16990	explanation
O	16991	16992	:
O	16993	16994	#
O	16994	17004	blockquote
O	17005	17007	In
O	17008	17012	Java
O	17013	17014	6
O	17014	17015	,
O	17016	17018	if
O	17019	17022	you
O	17023	17026	use
O	17027	17030	the
O	17031	17034	API
O	17035	17037	as
O	17037	17038	:
O	17039	17040	#
O	17040	17043	pre
O	17044	17047	And
O	17048	17056	newCount
O	17057	17066	overflows
O	17067	17068	(
O	17068	17072	this
O	17073	17080	becomes
O	17081	17089	negative
O	17089	17090	)
O	17090	17091	,
O	17092	17094	if
O	17094	17095	(
O	17095	17099	args
O	17099	17100	)
O	17101	17105	will
O	17106	17112	return
O	17113	17118	false
O	17119	17122	and
O	17123	17126	you
O	17127	17130	may
O	17131	17141	mistakenly
O	17142	17148	assume
O	17149	17153	that
O	17154	17157	the
B-api_mention	17158	17167	ArrayList
O	17168	17171	was
O	17172	17181	increased
O	17182	17184	by
B-api_mention	17185	17188	len
O	17189	17190	.

O	17192	17200	Question
O	17200	17201	-
O	17201	17209	33147339
O	17209	17210	,
O	17211	17217	answer
O	17217	17218	-
O	17218	17226	33148103

O	17227	17234	Looking
O	17235	17237	at
O	17238	17241	the
O	17242	17246	code
O	17246	17247	:
O	17248	17251	int
O	17252	17263	newCapacity
O	17264	17265	=
O	17266	17277	oldCapacity
O	17278	17279	+
O	17280	17281	(
O	17281	17292	oldCapacity
O	17293	17294	>
O	17294	17295	>
O	17296	17297	1
O	17297	17298	)
O	17298	17299	;
O	17300	17302	If
O	17303	17314	oldCapacity
O	17315	17317	is
O	17318	17323	quite
O	17324	17329	large
O	17329	17330	,
O	17331	17335	this
O	17336	17340	will
O	17341	17349	overflow
O	17349	17350	,
O	17351	17354	and
O	17355	17366	newCapacity
O	17367	17371	will
O	17372	17374	be
O	17375	17376	a
O	17377	17385	negative
O	17386	17392	number
O	17392	17393	.

O	17394	17395	A
O	17396	17406	comparison
O	17407	17411	like
O	17412	17423	newCapacity
O	17424	17425	<
O	17426	17437	oldCapacity
O	17438	17442	will
O	17443	17454	incorrectly
O	17455	17463	evaluate
O	17464	17468	true
O	17469	17472	and
O	17473	17476	the
B-api_mention	17477	17486	ArrayList
O	17487	17491	will
O	17492	17496	fail
O	17497	17499	to
O	17500	17504	grow
O	17504	17505	.

O	17506	17513	Instead
O	17513	17514	,
O	17515	17518	the
O	17519	17523	code
O	17524	17526	as
O	17527	17534	written
O	17535	17536	(
O	17537	17548	newCapacity
O	17549	17550	-
O	17551	17562	minCapacity
O	17563	17564	<
O	17565	17566	0
O	17567	17574	returns
O	17575	17580	false
O	17580	17581	)
O	17582	17586	will
O	17587	17592	allow
O	17593	17596	the
O	17597	17605	negative
O	17606	17611	value
O	17612	17614	of
O	17615	17626	newCapacity
O	17627	17629	to
O	17630	17632	be
O	17633	17640	further
O	17641	17650	evaluated
O	17651	17653	in
O	17654	17657	the
O	17658	17662	next
O	17663	17667	line
O	17667	17668	,
O	17669	17678	resulting
O	17679	17681	in
O	17682	17695	recalculating
O	17696	17707	newCapacity
O	17708	17710	by
O	17711	17719	invoking
O	17720	17732	hugeCapacity
O	17733	17734	(
O	17735	17746	newCapacity
O	17747	17748	=
O	17749	17761	hugeCapacity
O	17761	17762	(
O	17762	17766	args
O	17766	17767	)
O	17767	17768	;
O	17769	17770	)
O	17771	17773	to
O	17774	17779	allow
O	17780	17783	for
O	17784	17787	the
B-api_mention	17788	17797	ArrayList
O	17798	17800	to
O	17801	17805	grow
O	17806	17808	up
O	17809	17811	to
O	17812	17815	MAX
O	17815	17816	_
O	17816	17821	ARRAY
O	17821	17822	_
O	17822	17826	SIZE
O	17827	17828	.

O	17829	17833	This
O	17834	17836	is
O	17837	17841	what
O	17842	17845	the
O	17846	17847	/
O	17847	17848	/
O	17849	17857	overflow
O	17857	17858	-
O	17858	17867	conscious
O	17868	17872	code
O	17873	17880	comment
O	17881	17883	is
O	17884	17890	trying
O	17891	17893	to
O	17894	17905	communicate
O	17905	17906	,
O	17907	17913	though
O	17914	17920	rather
O	17921	17930	obliquely
O	17930	17931	.

O	17932	17934	So
O	17934	17935	,
O	17936	17942	bottom
O	17943	17947	line
O	17947	17948	,
O	17949	17952	the
O	17953	17956	new
O	17957	17967	comparison
O	17968	17976	protects
O	17977	17984	against
O	17985	17995	allocating
O	17996	17998	an
B-api_mention	17999	18008	ArrayList
O	18009	18015	larger
O	18016	18020	than
O	18021	18024	the
O	18025	18035	predefined
O	18036	18039	MAX
O	18039	18040	_
O	18040	18045	ARRAY
O	18045	18046	_
O	18046	18050	SIZE
O	18051	18056	while
O	18057	18065	allowing
O	18066	18068	it
O	18069	18071	to
O	18072	18076	grow
O	18077	18082	right
O	18083	18085	up
O	18086	18088	to
O	18089	18093	that
O	18094	18099	limit
O	18100	18102	if
O	18103	18109	needed
O	18109	18110	.

O	18112	18120	Question
O	18120	18121	-
O	18121	18129	32323081
O	18129	18130	,
O	18131	18137	answer
O	18137	18138	-
O	18138	18146	32323305

O	18147	18150	Any
B-api_mention	18151	18157	lambda
O	18158	18163	which
O	18164	18169	could
O	18170	18172	be
O	18173	18181	accepted
O	18182	18184	as
O	18185	18186	a
B-api_mention	18187	18195	Supplier
I-api_mention	18195	18196	<
I-api_mention	18196	18197	T
I-api_mention	18197	18198	>
O	18199	18202	can
O	18203	18207	also
O	18208	18210	be
O	18211	18219	accepted
O	18220	18222	as
O	18223	18224	a
B-api_mention	18225	18241	ThrowingSupplier
I-api_mention	18241	18242	<
I-api_mention	18242	18243	T
I-api_mention	18243	18244	>
O	18245	18246	.

O	18247	18250	The
O	18251	18260	following
O	18261	18269	compiles
O	18269	18270	:
O	18271	18272	#
O	18272	18275	pre
O	18276	18281	Given
O	18282	18285	the
O	18286	18291	above
O	18291	18292	,
O	18293	18296	you
O	18297	18305	probably
O	18306	18309	don
O	18309	18310	'
O	18310	18311	t
O	18312	18316	need
O	18317	18321	this
O	18321	18322	,
O	18323	18326	but
O	18327	18329	if
O	18330	18333	foo
O	18334	18338	must
O	18339	18345	accept
O	18346	18347	a
O	18348	18351	non
O	18351	18352	-
O	18352	18360	throwing
B-api_mention	18361	18369	Supplier
I-api_mention	18369	18370	<
I-api_mention	18370	18371	T
I-api_mention	18371	18372	>
O	18373	18374	,
O	18375	18378	you
O	18379	18382	can
O	18383	18389	always
O	18390	18394	wrap
O	18395	18398	the
B-api_mention	18399	18408	Exception
O	18408	18409	-
O	18409	18417	throwing
O	18418	18424	method
O	18425	18427	in
O	18428	18429	a
O	18430	18436	method
O	18437	18442	which
O	18443	18451	launders
O	18452	18454	it
O	18455	18459	into
O	18460	18462	an
O	18463	18472	unchecked
B-api_mention	18473	18482	Exception
O	18482	18483	:
O	18484	18485	#
O	18485	18488	pre

O	18490	18498	Question
O	18498	18499	-
O	18499	18507	32323081
O	18507	18508	,
O	18509	18515	answer
O	18515	18516	-
O	18516	18524	32323641

O	18525	18530	First
O	18531	18533	of
O	18534	18537	all
O	18537	18538	,
O	18539	18542	you
O	18543	18546	don
O	18546	18547	'
O	18548	18552	have
O	18553	18555	to
O	18556	18564	overload
O	18565	18566	:
O	18566	18567	D
O	18568	18569	-
O	18570	18581	overloading
O	18582	18584	is
O	18585	18590	never
O	18591	18592	a
O	18593	18602	necessity
O	18602	18603	;
O	18604	18607	use
O	18608	18609	2
O	18610	18619	different
O	18620	18626	method
O	18627	18632	names
O	18632	18633	,
O	18634	18635	e
O	18635	18636	.
O	18636	18637	g
O	18637	18638	.
O	18639	18642	foo
O	18643	18646	and
O	18647	18651	fooX
O	18652	18660	Secondly
O	18660	18661	,
O	18662	18663	I
O	18664	18667	don
O	18667	18668	'
O	18668	18669	t
O	18670	18673	see
O	18674	18677	why
O	18678	18681	you
O	18682	18686	need
O	18687	18688	2
O	18689	18696	methods
O	18697	18701	here
O	18701	18702	.

O	18703	18705	If
O	18706	18709	you
O	18710	18714	want
O	18715	18717	to
O	18718	18724	handle
O	18725	18732	checked
O	18733	18736	and
O	18737	18746	unchecked
O	18747	18757	exceptions
O	18758	18769	differently
O	18769	18770	,
O	18771	18773	it
O	18774	18777	can
O	18778	18780	be
O	18781	18785	done
O	18786	18788	at
O	18789	18796	runtime
O	18796	18797	.

O	18798	18800	To
O	18801	18808	achieve
O	18809	18810	"
O	18810	18819	exception
O	18820	18832	transparency
O	18832	18833	"
O	18833	18834	,
O	18835	18838	you
O	18839	18842	can
O	18843	18845	do
O	18846	18847	#
O	18847	18850	pre
O	18851	18858	Finally
O	18858	18859	,
O	18860	18872	disambiguity
O	18873	18876	can
O	18877	18879	be
O	18880	18888	achieved
O	18889	18894	throw
O	18895	18901	lambda
O	18902	18908	return
O	18909	18913	type
O	18913	18914	;
O	18915	18918	the
O	18919	18927	compiler
O	18928	18932	uses
O	18933	18936	the
O	18937	18943	return
O	18944	18948	type
O	18949	18951	as
O	18952	18954	if
O	18955	18960	using
O	18961	18963	an
O	18964	18972	argument
O	18973	18977	type
O	18978	18981	for
O	18982	18990	choosing
O	18991	18994	the
O	18995	18999	most
O	19000	19008	specific
O	19009	19015	method
O	19015	19016	.

O	19017	19021	This
O	19022	19027	gives
O	19028	19030	us
O	19031	19034	the
O	19035	19039	idea
O	19040	19042	to
O	19043	19047	wrap
O	19048	19051	the
O	19052	19057	value
O	19058	19066	together
O	19067	19071	with
O	19072	19075	the
O	19076	19085	exception
O	19086	19090	type
O	19090	19091	,
O	19092	19094	as
O	19095	19101	Result
O	19101	19102	<
O	19102	19103	T
O	19103	19104	>
O	19105	19106	,
O	19107	19108	a
O	19109	19110	"
O	19110	19115	monad
O	19115	19116	"
O	19117	19119	as
O	19120	19124	they
O	19125	19128	say
O	19128	19129	.

O	19130	19131	#
O	19131	19134	pre

O	19136	19144	Question
O	19144	19145	-
O	19145	19153	32475166
O	19153	19154	,
O	19155	19161	answer
O	19161	19162	-
O	19162	19170	32475290

O	19171	19174	The
O	19175	19180	chief
O	19181	19191	difference
O	19192	19194	is
O	19195	19199	that
O	19200	19202	an
O	19203	19205	if
O	19206	19210	else
O	19211	19216	block
O	19217	19219	is
O	19220	19221	a
O	19222	19231	statement
O	19232	19239	whereas
O	19240	19243	the
O	19244	19251	ternary
O	19252	19253	(
O	19253	19257	more
O	19258	19263	often
O	19264	19269	known
O	19270	19272	as
O	19273	19276	the
O	19277	19288	conditional
O	19289	19297	operator
O	19298	19300	in
O	19301	19305	Java
O	19305	19306	)
O	19307	19309	is
O	19310	19312	an
O	19313	19323	expression
O	19324	19325	.

O	19326	19327	A
O	19328	19337	statement
O	19338	19341	can
O	19342	19344	do
O	19345	19351	things
O	19352	19356	like
O	19357	19363	return
O	19364	19366	to
O	19367	19370	the
O	19371	19377	caller
O	19378	19380	on
O	19381	19385	some
O	19386	19388	of
O	19389	19392	the
O	19393	19400	control
O	19401	19406	paths
O	19406	19407	.

O	19408	19410	An
O	19411	19421	expression
O	19422	19425	can
O	19426	19428	be
O	19429	19433	used
O	19434	19436	in
O	19437	19439	an
O	19440	19450	assignment
O	19450	19451	:
O	19452	19455	int
O	19456	19457	n
O	19458	19459	=
O	19460	19469	condition
O	19470	19471	?

O	19472	19473	3
O	19474	19475	:
O	19476	19477	2
O	19477	19478	;
O	19479	19481	So
O	19482	19485	the
O	19486	19489	two
O	19490	19501	expressions
O	19502	19504	in
O	19505	19508	the
O	19509	19516	ternary
O	19517	19522	after
O	19523	19526	the
O	19527	19536	condition
O	19537	19541	need
O	19542	19544	to
O	19545	19547	be
O	19548	19557	coercable
O	19558	19560	to
O	19561	19564	the
O	19565	19569	same
O	19570	19574	type
O	19574	19575	.

O	19576	19580	This
O	19581	19584	can
O	19585	19590	cause
O	19591	19595	some
O	19596	19599	odd
O	19600	19607	effects
O	19608	19610	in
O	19611	19615	Java
O	19616	19628	particularly
O	19629	19633	with
O	19634	19638	auto
O	19638	19639	-
O	19639	19645	boxing
O	19646	19649	and
O	19650	19659	automatic
O	19660	19669	reference
O	19670	19677	casting
O	19678	19679	-
O	19680	19684	this
O	19685	19687	is
O	19688	19692	what
O	19693	19696	the
O	19697	19704	comment
O	19705	19707	in
O	19708	19712	your
O	19713	19719	posted
O	19720	19724	code
O	19725	19727	is
O	19728	19737	referring
O	19738	19740	to
O	19740	19741	.

O	19742	19745	The
O	19746	19754	coercion
O	19755	19757	of
O	19758	19761	the
O	19762	19773	expressions
O	19774	19776	in
O	19777	19781	your
O	19782	19786	case
O	19787	19792	would
O	19793	19795	be
O	19796	19798	to
O	19799	19800	a
O	19801	19805	java
O	19805	19806	.
O	19806	19810	lang
O	19810	19811	.
O	19811	19818	reflect
O	19818	19819	.
O	19819	19829	Executable
O	19830	19834	type
O	19835	19836	(
O	19836	19838	as
O	19839	19843	that
O	19843	19844	'
O	19844	19845	s
O	19846	19849	the
O	19850	19854	most
O	19855	19866	specialised
O	19867	19871	type
O	19872	19873	)
O	19874	19877	and
O	19878	19882	that
O	19883	19887	does
O	19888	19891	not
O	19892	19897	exist
O	19898	19900	in
O	19901	19906	older
O	19907	19915	versions
O	19916	19918	of
O	19919	19923	Java
O	19923	19924	.

O	19925	19938	Stylistically
O	19939	19942	you
O	19943	19949	should
O	19950	19953	use
O	19954	19956	an
O	19957	19959	if
O	19960	19964	else
O	19965	19970	block
O	19971	19973	if
O	19974	19977	the
O	19978	19982	code
O	19983	19985	is
O	19986	19995	statement
O	19995	19996	-
O	19996	20000	like
O	20000	20001	,
O	20002	20005	and
O	20006	20007	a
O	20008	20015	ternary
O	20016	20018	if
O	20019	20021	it
O	20021	20022	'
O	20022	20023	s
O	20024	20034	expression
O	20034	20035	-
O	20035	20039	like
O	20039	20040	.

O	20041	20043	Of
O	20044	20050	course
O	20050	20051	,
O	20052	20055	you
O	20056	20059	can
O	20060	20064	make
O	20065	20067	an
O	20068	20070	if
O	20071	20075	else
O	20076	20081	block
O	20082	20088	behave
O	20089	20093	like
O	20094	20096	an
O	20097	20107	expression
O	20108	20110	if
O	20111	20114	you
O	20115	20118	use
O	20119	20120	a
O	20121	20127	lambda
O	20128	20136	function
O	20136	20137	.

O	20139	20147	Question
O	20147	20148	-
O	20148	20156	32475166
O	20156	20157	,
O	20158	20164	answer
O	20164	20165	-
O	20165	20173	32476850

O	20174	20178	When
O	20179	20182	you
O	20183	20188	think
O	20189	20194	about
O	20195	20198	the
O	20199	20203	type
O	20204	20206	of
O	20207	20210	the
O	20211	20219	operands
O	20219	20220	,
O	20221	20224	the
O	20225	20232	problem
O	20233	20240	becomes
O	20241	20245	more
O	20246	20254	apparent
O	20254	20255	:
O	20256	20260	this
O	20260	20261	.
O	20261	20267	method
O	20268	20269	!
O	20269	20270	=
O	20271	20275	null
O	20276	20277	?

O	20278	20282	this
O	20282	20283	.
O	20283	20289	method
O	20290	20291	:
O	20292	20296	this
O	20296	20297	.
O	20297	20308	constructor
O	20309	20312	has
O	20313	20315	as
O	20316	20320	type
O	20321	20324	the
O	20325	20329	most
O	20330	20341	specialized
O	20342	20348	common
O	20349	20353	type
O	20354	20356	of
O	20357	20361	both
O	20362	20365	the
O	20366	20374	operands
O	20374	20375	,
O	20376	20377	i
O	20377	20378	.
O	20378	20379	e
O	20379	20380	.
O	20381	20384	the
O	20385	20389	most
O	20390	20401	specialized
O	20402	20406	type
O	20407	20413	common
O	20414	20416	to
O	20417	20421	both
O	20422	20426	this
O	20426	20427	.
O	20427	20433	method
O	20434	20437	and
O	20438	20442	this
O	20442	20443	.
O	20443	20454	constructor
O	20455	20456	.

O	20457	20459	In
O	20460	20464	Java
O	20465	20466	7
O	20467	20471	this
O	20472	20474	is
B-api_mention	20475	20479	java
I-api_mention	20479	20480	.
I-api_mention	20480	20484	lang
I-api_mention	20484	20485	.
I-api_mention	20485	20492	reflect
I-api_mention	20492	20493	.
I-api_mention	20493	20499	Member
O	20500	20501	,
O	20502	20509	however
O	20510	20513	the
O	20514	20518	Java
O	20519	20520	8
O	20521	20526	class
O	20527	20534	library
O	20535	20545	introduces
O	20546	20547	a
O	20548	20551	new
O	20552	20556	type
O	20557	20561	java
O	20561	20562	.
O	20562	20566	lang
O	20566	20567	.
O	20567	20574	reflect
O	20574	20575	.
O	20575	20585	Executable
O	20586	20591	which
O	20592	20594	is
O	20595	20599	more
O	20600	20611	specialized
O	20612	20616	than
O	20617	20620	the
O	20621	20628	generic
O	20629	20635	Member
O	20636	20637	.

O	20638	20643	Hence
O	20644	20648	with
O	20649	20650	a
O	20651	20655	Java
O	20656	20657	8
O	20658	20663	class
O	20664	20671	library
O	20672	20675	the
O	20676	20682	result
O	20683	20687	type
O	20688	20690	of
O	20691	20694	the
O	20695	20702	ternary
O	20703	20713	expression
O	20714	20716	is
O	20717	20727	Executable
O	20728	20734	rather
O	20735	20739	than
O	20740	20746	Member
O	20747	20748	.

O	20749	20753	Some
O	20754	20755	(
O	20755	20758	pre
O	20758	20759	-
O	20759	20766	release
O	20766	20767	)
O	20768	20776	versions
O	20777	20779	of
O	20780	20783	the
O	20784	20788	Java
O	20789	20790	8
O	20791	20799	compiler
O	20800	20804	seem
O	20805	20807	to
O	20808	20812	have
O	20813	20821	produced
O	20822	20824	an
O	20825	20833	explicit
O	20834	20843	reference
O	20844	20846	to
O	20847	20857	Executable
O	20858	20864	inside
O	20865	20874	generated
O	20875	20879	code
O	20880	20884	when
O	20885	20894	compiling
O	20895	20898	the
O	20899	20906	ternary
O	20907	20915	operator
O	20915	20916	.

O	20917	20921	This
O	20922	20927	would
O	20928	20935	trigger
O	20936	20937	a
O	20938	20943	class
O	20944	20948	load
O	20948	20949	,
O	20950	20953	and
O	20954	20958	thus
O	20959	20961	in
O	20962	20966	turn
O	20967	20968	a
B-api_mention	20969	20991	ClassNotFoundException
O	20992	20994	at
O	20995	21002	runtime
O	21003	21007	when
O	21008	21015	running
O	21016	21020	with
O	21021	21022	a
O	21023	21028	class
O	21029	21036	library
O	21037	21038	<
O	21039	21042	JDK
O	21043	21044	8
O	21044	21045	,
O	21046	21053	because
O	21054	21064	Executable
O	21065	21069	only
O	21070	21076	exists
O	21077	21080	for
O	21081	21084	JDK
O	21085	21086	≥
O	21087	21088	8
O	21088	21089	.

O	21090	21092	As
O	21093	21098	noted
O	21099	21101	by
O	21102	21107	Tagir
O	21108	21114	Valeev
O	21115	21117	in
O	21118	21122	this
O	21123	21129	answer
O	21130	21131	,
O	21132	21136	this
O	21137	21139	is
O	21140	21148	actually
O	21149	21150	a
O	21151	21154	bug
O	21155	21157	in
O	21158	21161	pre
O	21161	21162	-
O	21162	21169	release
O	21170	21178	versions
O	21179	21181	of
O	21182	21185	JDK
O	21186	21187	8
O	21188	21191	and
O	21192	21195	has
O	21196	21201	since
O	21202	21206	been
O	21207	21212	fixed
O	21212	21213	,
O	21214	21216	so
O	21217	21221	both
O	21222	21225	the
O	21226	21228	if
O	21228	21229	-
O	21229	21233	else
O	21234	21244	workaround
O	21245	21248	and
O	21249	21252	the
O	21253	21264	explanatory
O	21265	21272	comment
O	21273	21276	are
O	21277	21280	now
O	21281	21289	obsolete
O	21289	21290	.

O	21291	21301	Additional
O	21302	21306	note
O	21306	21307	:
O	21308	21311	One
O	21312	21317	might
O	21318	21322	come
O	21323	21325	to
O	21326	21329	the
O	21330	21340	conclusion
O	21341	21345	that
O	21346	21350	this
O	21351	21359	compiler
O	21360	21363	bug
O	21364	21367	was
O	21368	21375	present
O	21376	21382	before
O	21383	21387	Java
O	21388	21389	8
O	21389	21390	.

O	21391	21398	However
O	21398	21399	,
O	21400	21403	the
O	21404	21408	byte
O	21409	21413	code
O	21414	21423	generated
O	21424	21427	for
O	21428	21431	the
O	21432	21439	ternary
O	21440	21442	by
O	21443	21450	OpenJDK
O	21451	21452	7
O	21453	21455	is
O	21456	21459	the
O	21460	21464	same
O	21465	21467	as
O	21468	21471	the
O	21472	21476	byte
O	21477	21481	code
O	21482	21491	generated
O	21492	21494	by
O	21495	21502	OpenJDK
O	21503	21504	8
O	21504	21505	.

O	21506	21508	In
O	21509	21513	fact
O	21513	21514	,
O	21515	21518	the
O	21519	21523	type
O	21524	21526	of
O	21527	21530	the
O	21531	21541	expression
O	21542	21546	goes
O	21547	21557	completely
O	21558	21569	unmentioned
O	21570	21572	at
O	21573	21580	runtime
O	21580	21581	,
O	21582	21585	the
O	21586	21590	code
O	21591	21593	is
O	21594	21600	really
O	21601	21605	only
O	21606	21610	test
O	21610	21611	,
O	21612	21618	branch
O	21618	21619	,
O	21620	21624	load
O	21624	21625	,
O	21626	21632	return
O	21633	21640	without
O	21641	21644	any
O	21645	21655	additional
O	21656	21662	checks
O	21663	21668	going
O	21669	21671	on
O	21671	21672	.

O	21673	21675	So
O	21676	21680	rest
O	21681	21688	assured
O	21689	21693	that
O	21694	21698	this
O	21699	21701	is
O	21702	21705	not
O	21706	21707	a
O	21708	21715	problem
O	21716	21717	(
O	21717	21724	anymore
O	21724	21725	)
O	21726	21729	and
O	21730	21736	indeed
O	21737	21742	seems
O	21743	21745	to
O	21746	21750	have
O	21751	21755	been
O	21756	21757	a
O	21758	21767	temporary
O	21768	21775	problem
O	21776	21782	during
O	21783	21794	development
O	21795	21797	of
O	21798	21802	Java
O	21803	21804	8
O	21804	21805	.

O	21807	21815	Question
O	21815	21816	-
O	21816	21824	32820722
O	21824	21825	,
O	21826	21832	answer
O	21832	21833	-
O	21833	21841	32820940

O	21842	21844	An
B-api_mention	21845	21856	IntFunction
I-api_mention	21856	21857	<
I-api_mention	21857	21858	T
I-api_mention	21858	21859	>
O	21860	21862	is
O	21863	21864	a
O	21865	21873	function
O	21874	21877	int
O	21878	21879	-
O	21879	21880	>
O	21881	21882	R
O	21883	21884	.

O	21885	21887	An
O	21888	21904	IntUnaryOperator
O	21905	21907	is
O	21908	21909	a
O	21910	21918	function
O	21919	21922	int
O	21923	21924	-
O	21924	21925	>
O	21926	21929	int
O	21930	21931	.

O	21932	21936	Thus
O	21937	21939	an
B-api_mention	21940	21951	IntFunction
I-api_mention	21951	21952	<
I-api_mention	21952	21953	T
I-api_mention	21953	21954	>
O	21955	21957	is
O	21958	21959	a
O	21960	21968	function
O	21969	21973	that
O	21974	21979	takes
O	21980	21982	an
O	21983	21986	int
O	21987	21989	as
O	21990	21999	parameter
O	22000	22003	and
O	22004	22010	return
O	22011	22012	a
O	22013	22021	function
O	22022	22026	that
O	22027	22032	takes
O	22033	22035	an
O	22036	22039	int
O	22040	22042	as
O	22043	22052	parameter
O	22053	22056	and
O	22057	22063	return
O	22064	22066	an
O	22067	22070	int
O	22071	22072	.

O	22073	22074	#
O	22074	22077	pre
O	22078	22083	Maybe
O	22084	22086	it
O	22087	22089	is
O	22090	22094	more
O	22095	22100	clear
O	22101	22103	if
O	22104	22107	you
O	22108	22111	use
O	22112	22121	anonymous
O	22122	22129	classes
O	22130	22132	to
O	22133	22134	"
O	22134	22143	decompose
O	22143	22144	"
O	22145	22148	the
O	22149	22155	lambda
O	22155	22156	:
O	22157	22158	#
O	22158	22161	pre

O	22163	22171	Question
O	22171	22172	-
O	22172	22180	32820722
O	22180	22181	,
O	22182	22188	answer
O	22188	22189	-
O	22189	22197	32820984

O	22198	22201	Let
O	22201	22202	'
O	22202	22203	s
O	22204	22211	rewrite
O	22212	22216	that
O	22217	22223	lambda
O	22224	22234	expression
O	22235	22239	with
O	22240	22251	parentheses
O	22252	22254	to
O	22255	22259	make
O	22260	22262	it
O	22263	22267	more
O	22268	22273	clear
O	22273	22274	:
B-api_mention	22275	22286	IntFunction
I-api_mention	22286	22287	<
I-api_mention	22287	22288	T
I-api_mention	22288	22289	>
O	22290	22300	curriedAdd
O	22301	22302	=
O	22303	22304	a
O	22305	22306	-
O	22306	22307	>
O	22308	22309	(
O	22309	22310	b
O	22311	22312	-
O	22312	22313	>
O	22314	22315	(
O	22315	22316	a
O	22317	22318	+
O	22319	22320	b
O	22320	22321	)
O	22321	22322	)
O	22322	22323	;
O	22324	22326	So
O	22327	22329	we
O	22330	22333	are
O	22334	22343	declaring
O	22344	22345	a
O	22346	22354	function
O	22355	22361	taking
O	22362	22364	an
O	22365	22368	int
O	22369	22374	which
O	22375	22382	returns
O	22383	22384	a
B-api_mention	22385	22393	Function
O	22394	22395	.

O	22396	22400	More
O	22401	22413	specifically
O	22413	22414	,
O	22415	22418	the
O	22419	22427	function
O	22428	22436	returned
O	22437	22442	takes
O	22443	22445	an
O	22446	22449	int
O	22450	22453	and
O	22454	22461	returns
O	22462	22464	an
O	22465	22468	int
O	22469	22470	(
O	22470	22473	the
O	22474	22477	sum
O	22478	22480	of
O	22481	22484	the
O	22485	22488	two
O	22489	22497	elements
O	22497	22498	)
O	22498	22499	:
O	22500	22504	this
O	22505	22508	can
O	22509	22511	be
O	22512	22523	represented
O	22524	22526	as
O	22527	22529	an
B-api_mention	22530	22546	IntUnaryOperator
O	22547	22548	.

O	22549	22558	Therefore
O	22558	22559	,
O	22560	22570	curriedAdd
O	22571	22573	is
O	22574	22575	a
O	22576	22584	function
O	22585	22591	taking
O	22592	22594	an
O	22595	22598	int
O	22599	22602	and
O	22603	22612	returning
O	22613	22615	an
O	22616	22632	IntUnaryOperator
O	22633	22634	,
O	22635	22637	so
O	22638	22640	it
O	22641	22644	can
O	22645	22647	be
O	22648	22659	represented
O	22660	22662	as
B-api_mention	22663	22674	IntFunction
I-api_mention	22674	22675	<
I-api_mention	22675	22691	IntUnaryOperator
I-api_mention	22691	22692	>
O	22693	22694	.

O	22696	22704	Question
O	22704	22705	-
O	22705	22713	32820722
O	22713	22714	,
O	22715	22721	answer
O	22721	22722	-
O	22722	22730	32821016

O	22731	22733	If
O	22734	22737	you
O	22738	22742	look
O	22743	22745	at
B-api_mention	22746	22757	IntFunction
O	22758	22760	it
O	22761	22766	might
O	22767	22773	become
O	22774	22781	clearer
O	22781	22782	:
B-api_mention	22783	22794	IntFunction
I-api_mention	22794	22795	<
I-api_mention	22795	22796	T
I-api_mention	22796	22797	>
O	22798	22800	is
O	22801	22802	a
O	22803	22822	FunctionalInterface
O	22823	22824	.

O	22825	22827	It
O	22828	22838	represents
O	22839	22840	a
O	22841	22849	function
O	22850	22854	that
O	22855	22860	takes
O	22861	22863	an
O	22864	22867	int
O	22868	22871	and
O	22872	22879	returns
O	22880	22881	a
O	22882	22887	value
O	22888	22890	of
O	22891	22895	type
O	22896	22897	R
O	22898	22899	.

O	22900	22902	In
O	22903	22907	this
O	22908	22912	case
O	22912	22913	,
O	22914	22917	the
O	22918	22924	return
O	22925	22929	type
O	22930	22931	R
O	22932	22934	is
O	22935	22939	also
O	22940	22941	a
O	22942	22961	FunctionalInterface
O	22962	22963	,
O	22964	22970	namely
O	22971	22973	an
O	22974	22990	IntUnaryOperator
O	22991	22992	.

O	22993	22995	So
O	22996	22999	the
O	23000	23005	first
O	23006	23007	(
O	23007	23012	outer
O	23012	23013	)
O	23014	23022	function
O	23023	23029	itself
O	23030	23037	returns
O	23038	23039	a
O	23040	23048	function
O	23048	23049	.

O	23050	23052	In
O	23053	23057	this
O	23058	23062	case
O	23062	23063	:
O	23064	23068	When
O	23069	23076	applied
O	23077	23079	to
O	23080	23082	an
O	23083	23086	int
O	23087	23088	,
O	23089	23099	curriedAdd
O	23100	23102	is
O	23103	23111	supposed
O	23112	23114	to
O	23115	23121	return
O	23122	23123	a
O	23124	23132	function
O	23133	23137	that
O	23138	23143	again
O	23144	23149	takes
O	23150	23152	an
O	23153	23156	int
O	23157	23158	(
O	23158	23161	and
O	23162	23169	returns
O	23170	23175	again
O	23176	23179	int
O	23180	23181	,
O	23182	23189	because
O	23190	23194	that
O	23194	23195	'
O	23195	23196	s
O	23197	23201	what
O	23202	23218	IntUnaryOperator
O	23219	23223	does
O	23223	23224	)
O	23224	23225	.

O	23226	23228	In
O	23229	23239	functional
O	23240	23251	programming
O	23252	23254	it
O	23255	23257	is
O	23258	23264	common
O	23265	23267	to
O	23268	23273	write
O	23274	23277	the
O	23278	23282	type
O	23283	23285	of
O	23286	23287	a
O	23288	23296	function
O	23297	23299	as
O	23300	23305	param
O	23306	23307	-
O	23307	23308	>
O	23309	23315	return
O	23315	23316	_
O	23316	23321	value
O	23322	23325	and
O	23326	23329	you
O	23330	23333	see
O	23334	23341	exactly
O	23342	23346	that
O	23347	23351	here
O	23351	23352	.

O	23353	23355	So
O	23356	23359	the
O	23360	23364	type
O	23365	23367	of
O	23368	23378	curriedAdd
O	23379	23381	is
O	23382	23385	int
O	23386	23387	-
O	23387	23388	>
O	23389	23392	int
O	23393	23394	-
O	23394	23395	>
O	23396	23399	int
O	23400	23401	(
O	23401	23403	or
O	23404	23407	int
O	23408	23409	-
O	23409	23410	>
O	23411	23412	(
O	23412	23415	int
O	23416	23417	-
O	23417	23418	>
O	23419	23422	int
O	23422	23423	)
O	23424	23426	if
O	23427	23430	you
O	23431	23435	like
O	23436	23440	that
O	23441	23447	better
O	23447	23448	)
O	23448	23449	.

O	23450	23454	Java
O	23455	23456	8
O	23456	23457	'
O	23457	23458	s
O	23459	23465	lambda
O	23466	23472	syntax
O	23473	23477	goes
O	23478	23483	along
O	23484	23488	with
O	23489	23493	this
O	23493	23494	.

O	23495	23497	To
O	23498	23504	define
O	23505	23509	such
O	23510	23511	a
O	23512	23520	function
O	23520	23521	,
O	23522	23525	you
O	23526	23531	write
O	23532	23533	a
O	23534	23535	-
O	23535	23536	>
O	23537	23538	b
O	23539	23540	-
O	23540	23541	>
O	23542	23543	a
O	23544	23545	+
O	23546	23547	b
O	23548	23553	which
O	23554	23556	is
O	23557	23561	very
O	23562	23566	much
O	23567	23574	similar
O	23575	23577	to
O	23578	23584	actual
O	23585	23591	lambda
O	23592	23600	calculus
O	23600	23601	:
O	23602	23603	λ
O	23603	23604	a
O	23605	23606	λ
O	23606	23607	b
O	23608	23609	a
O	23610	23611	+
O	23612	23613	b
O	23614	23615	λ
O	23615	23616	b
O	23617	23618	a
O	23619	23620	+
O	23621	23622	b
O	23623	23625	is
O	23626	23627	a
O	23628	23636	function
O	23637	23641	that
O	23642	23647	takes
O	23648	23649	a
O	23650	23656	single
O	23657	23666	parameter
O	23667	23668	b
O	23669	23672	and
O	23673	23680	returns
O	23681	23682	a
O	23683	23688	value
O	23689	23690	(
O	23690	23693	the
O	23694	23697	sum
O	23697	23698	)
O	23698	23699	.

O	23700	23701	λ
O	23701	23702	a
O	23703	23704	λ
O	23704	23705	b
O	23706	23707	a
O	23708	23709	+
O	23710	23711	b
O	23712	23714	is
O	23715	23716	a
O	23717	23725	function
O	23726	23730	that
O	23731	23738	accepts
O	23739	23740	a
O	23741	23747	single
O	23748	23757	parameter
O	23758	23759	a
O	23760	23763	and
O	23764	23771	returns
O	23772	23779	another
O	23780	23788	function
O	23789	23791	of
O	23792	23793	a
O	23794	23800	single
O	23801	23810	parameter
O	23810	23811	.

O	23812	23813	λ
O	23813	23814	a
O	23815	23816	λ
O	23816	23817	b
O	23818	23819	a
O	23820	23821	+
O	23822	23823	b
O	23824	23831	returns
O	23832	23833	λ
O	23833	23834	b
O	23835	23836	a
O	23837	23838	+
O	23839	23840	b
O	23841	23845	with
O	23846	23847	a
O	23848	23851	set
O	23852	23854	to
O	23855	23858	the
O	23859	23868	parameter
O	23869	23874	value
O	23874	23875	.

O	23877	23885	Question
O	23885	23886	-
O	23886	23894	32312876
O	23894	23895	,
O	23896	23902	answer
O	23902	23903	-
O	23903	23911	32313069

O	23912	23916	This
O	23917	23919	is
O	23920	23928	possible
O	23929	23934	using
O	23935	23938	the
O	23939	23952	mergeFunction
O	23953	23962	parameter
O	23963	23965	of
B-api_mention	23966	23976	Collectors
I-api_mention	23976	23977	.
I-api_mention	23977	23982	toMap
I-api_mention	23982	23983	(
I-api_mention	23983	23992	keyMapper
I-api_mention	23992	23993	,
I-api_mention	23994	24005	valueMapper
I-api_mention	24005	24006	,
I-api_mention	24007	24020	mergeFunction
I-api_mention	24020	24021	)
O	24022	24023	:
O	24024	24025	#
O	24025	24028	pre
O	24029	24042	mergeFunction
O	24043	24045	is
O	24046	24047	a
O	24048	24056	function
O	24057	24061	that
O	24062	24070	operates
O	24071	24073	on
O	24074	24077	two
O	24078	24084	values
O	24085	24095	associated
O	24096	24100	with
O	24101	24104	the
O	24105	24109	same
O	24110	24113	key
O	24113	24114	.

O	24115	24122	adress1
O	24123	24134	corresponds
O	24135	24137	to
O	24138	24141	the
O	24142	24147	first
O	24148	24155	address
O	24156	24160	that
O	24161	24164	was
O	24165	24176	encountered
O	24177	24181	when
O	24182	24192	collecting
O	24193	24201	elements
O	24202	24205	and
O	24206	24213	adress2
O	24214	24225	corresponds
O	24226	24228	to
O	24229	24232	the
O	24233	24239	second
O	24240	24247	address
O	24248	24259	encountered
O	24259	24260	:
O	24261	24265	this
O	24266	24272	lambda
O	24273	24277	just
O	24278	24283	tells
O	24284	24286	to
O	24287	24291	keep
O	24292	24295	the
O	24296	24301	first
O	24302	24309	address
O	24310	24313	and
O	24314	24321	ignores
O	24322	24325	the
O	24326	24332	second
O	24332	24333	.

O	24335	24343	Question
O	24343	24344	-
O	24344	24352	31965179
O	24352	24353	,
O	24354	24360	answer
O	24360	24361	-
O	24361	24369	35427268

O	24370	24375	There
O	24375	24376	'
O	24376	24377	s
O	24378	24379	a
O	24380	24384	long
O	24385	24389	list
O	24390	24392	of
O	24393	24399	things
O	24400	24404	that
O	24405	24409	have
O	24410	24414	been
O	24415	24422	changed
O	24423	24425	in
O	24426	24435	Hibernate
O	24436	24437	5
O	24437	24438	:
O	24439	24440	#
O	24440	24442	li
O	24443	24446	New
O	24447	24456	bootstrap
O	24457	24460	API
O	24461	24463	so
O	24464	24466	we
O	24467	24470	can
O	24471	24480	bootstrap
O	24481	24482	a
O	24483	24486	JPA
O	24487	24498	environment
O	24499	24515	programmatically
O	24516	24523	without
O	24524	24527	the
O	24528	24532	need
O	24533	24535	of
O	24536	24537	a
O	24538	24549	persistence
O	24549	24550	.
O	24550	24553	xml
O	24554	24558	file
O	24559	24560	.

O	24561	24562	#
O	24562	24564	li
O	24565	24573	Starting
O	24574	24576	in
O	24577	24578	5
O	24578	24579	.
O	24579	24580	0
O	24581	24590	Hibernate
O	24591	24598	Spatial
O	24599	24601	is
O	24602	24606	part
O	24607	24609	of
O	24610	24613	the
O	24614	24623	Hibernate
O	24624	24631	project
O	24632	24634	so
O	24635	24637	we
O	24638	24641	can
O	24642	24648	handle
O	24649	24652	GIS
O	24653	24657	data
O	24658	24661	too
O	24661	24662	.

O	24663	24664	#
O	24664	24666	li
O	24667	24670	The
O	24671	24675	Java
O	24676	24677	8
B-api_mention	24678	24682	Date
O	24683	24686	and
B-api_mention	24687	24691	Time
O	24692	24697	types
O	24698	24701	are
O	24702	24711	supported
O	24712	24714	in
O	24715	24721	domain
O	24722	24727	model
O	24728	24736	mappings
O	24736	24737	.

O	24738	24741	The
O	24742	24749	mapping
O	24750	24757	between
O	24758	24761	the
O	24762	24770	standard
O	24771	24774	SQL
O	24775	24779	Date
O	24779	24780	/
O	24780	24784	Time
O	24785	24790	types
O	24791	24794	and
O	24795	24798	the
O	24799	24808	supported
O	24809	24813	Java
O	24814	24815	8
B-api_mention	24816	24820	Date
O	24820	24821	/
B-api_mention	24821	24825	Time
O	24826	24831	class
O	24832	24837	types
O	24838	24843	looks
O	24844	24846	as
O	24847	24854	follows
O	24854	24855	;
O	24856	24857	#
O	24857	24859	li
O	24860	24864	DATE
O	24864	24865	:
B-api_mention	24866	24870	java
I-api_mention	24870	24871	.
I-api_mention	24871	24875	time
I-api_mention	24875	24876	.
I-api_mention	24876	24885	LocalDate
O	24886	24887	#
O	24887	24889	li
O	24890	24894	TIME
O	24894	24895	:
B-api_mention	24896	24900	java
I-api_mention	24900	24901	.
I-api_mention	24901	24905	time
I-api_mention	24905	24906	.
I-api_mention	24906	24915	LocalTime
O	24916	24917	,
B-api_mention	24918	24922	java
I-api_mention	24922	24923	.
I-api_mention	24923	24927	time
I-api_mention	24927	24928	.
I-api_mention	24928	24938	OffsetTime
O	24939	24940	#
O	24940	24942	li
O	24943	24952	TIMESTAMP
O	24952	24953	:
B-api_mention	24954	24958	java
I-api_mention	24958	24959	.
I-api_mention	24959	24963	time
I-api_mention	24963	24964	.
I-api_mention	24964	24971	Instant
O	24972	24973	,
B-api_mention	24974	24978	java
I-api_mention	24978	24979	.
I-api_mention	24979	24983	time
I-api_mention	24983	24984	.
I-api_mention	24984	24997	LocalDateTime
O	24998	24999	,
B-api_mention	25000	25004	java
I-api_mention	25004	25005	.
I-api_mention	25005	25009	time
I-api_mention	25009	25010	.
I-api_mention	25010	25024	OffsetDateTime
O	25025	25028	and
B-api_mention	25029	25033	java
I-api_mention	25033	25034	.
I-api_mention	25034	25038	time
I-api_mention	25038	25039	.
I-api_mention	25039	25052	ZonedDateTime
O	25053	25054	#
O	25054	25056	li
O	25057	25060	The
O	25061	25069	bytecode
O	25070	25081	enhancement
O	25082	25091	mechanism
O	25092	25095	was
O	25096	25106	redesigned
O	25107	25111	from
O	25112	25119	scratch
O	25119	25120	,
O	25121	25124	and
O	25125	25134	Hibernate
O	25135	25143	features
O	25144	25148	both
O	25149	25150	a
O	25151	25156	Maven
O	25157	25160	and
O	25161	25162	a
O	25163	25169	Gradle
O	25170	25176	plugin
O	25176	25177	.

O	25178	25183	There
O	25184	25187	are
O	25188	25193	three
O	25194	25198	main
O	25199	25206	aspects
O	25207	25212	which
O	25213	25215	we
O	25216	25219	can
O	25220	25227	enhance
O	25228	25232	with
O	25233	25241	bytecode
O	25242	25257	instrumentation
O	25257	25258	:
O	25259	25260	#
O	25260	25262	li
O	25263	25267	Lazy
O	25268	25282	initialization
O	25282	25283	:
O	25284	25290	Fields
O	25291	25294	can
O	25295	25297	be
O	25298	25306	declared
O	25307	25309	as
O	25310	25314	LAZY
O	25315	25318	and
O	25319	25323	they
O	25324	25328	will
O	25329	25331	be
O	25332	25339	fetched
O	25340	25344	only
O	25345	25349	when
O	25350	25355	being
O	25356	25364	accessed
O	25365	25368	for
O	25369	25372	the
O	25373	25378	first
O	25379	25383	time
O	25383	25384	.

O	25385	25386	#
O	25386	25388	li
O	25389	25394	Dirty
O	25395	25403	checking
O	25403	25404	:
O	25405	25413	Entities
O	25414	25417	are
O	25418	25426	enhanced
O	25427	25429	so
O	25430	25434	that
O	25435	25439	they
O	25440	25443	can
O	25444	25448	keep
O	25449	25454	track
O	25455	25457	of
O	25458	25461	all
O	25462	25465	the
O	25466	25476	properties
O	25477	25481	that
O	25482	25485	get
O	25486	25493	changed
O	25494	25499	after
O	25500	25505	being
O	25506	25512	loaded
O	25513	25515	in
O	25516	25517	a
O	25518	25529	Persistence
O	25530	25537	Context
O	25537	25538	.

O	25539	25540	#
O	25540	25542	li
O	25543	25556	Bidirectional
O	25557	25569	associations
O	25569	25570	:
O	25571	25573	It
O	25573	25574	'
O	25574	25575	s
O	25576	25584	possible
O	25585	25587	to
O	25588	25599	synchronize
O	25600	25604	both
O	25605	25610	sides
O	25611	25613	of
O	25614	25615	a
O	25616	25629	bidirectional
O	25630	25641	association
O	25642	25655	automatically
O	25655	25656	,
O	25657	25661	even
O	25662	25664	if
O	25665	25668	the
O	25669	25678	developer
O	25679	25683	only
O	25684	25691	updates
O	25692	25693	a
O	25694	25700	single
O	25701	25705	side
O	25705	25706	.

O	25707	25708	#
O	25708	25710	li
O	25711	25720	Hibernate
O	25720	25721	'
O	25721	25722	s
O	25723	25729	native
O	25730	25734	APIs
O	25735	25736	(
O	25737	25744	Session
O	25745	25746	,
O	25747	25750	etc
O	25750	25751	)
O	25752	25756	have
O	25757	25761	been
O	25762	25769	updated
O	25770	25772	to
O	25773	25776	use
O	25777	25784	generic
O	25785	25790	typed
O	25790	25791	.

O	25792	25794	No
O	25795	25799	need
O	25800	25802	to
O	25803	25807	cast
O	25808	25812	when
O	25813	25821	fetching
O	25822	25830	entities
O	25830	25831	.

O	25832	25833	#
O	25833	25835	li
O	25836	25845	Hibernate
O	25846	25847	5
O	25847	25848	.
O	25848	25849	0
O	25850	25857	expends
O	25858	25862	this
O	25863	25865	to
O	25866	25867	a
O	25868	25875	broader
O	25876	25879	set
O	25880	25882	of
O	25883	25888	types
O	25889	25890	(
O	25890	25891	e
O	25891	25892	.
O	25892	25893	g
O	25893	25894	.
O	25895	25899	UUID
O	25900	25901	)
O	25901	25902	.

O	25903	25904	#
O	25904	25906	li
O	25907	25913	Second
O	25913	25914	-
O	25914	25919	level
O	25920	25925	cache
O	25926	25928	by
O	25929	25938	reference
O	25938	25939	.

O	25940	25944	This
O	25945	25952	feature
O	25953	25960	enables
O	25961	25967	direct
O	25968	25975	storage
O	25976	25978	of
O	25979	25985	entity
O	25986	25996	references
O	25997	26001	into
O	26002	26005	the
O	26006	26012	second
O	26013	26018	level
O	26019	26024	cache
O	26025	26028	for
O	26029	26038	immutable
O	26039	26047	entities
O	26047	26048	.

O	26049	26050	#
O	26050	26052	li
O	26053	26061	Starting
O	26062	26066	with
O	26067	26076	Hibernate
O	26077	26078	5
O	26078	26079	.
O	26079	26080	0
O	26080	26081	,
O	26082	26084	we
O	26085	26089	have
O	26090	26091	a
O	26092	26102	completely
O	26103	26106	new
O	26107	26111	User
O	26112	26117	Guide
O	26118	26122	that
O	26123	26126	was
O	26127	26134	written
O	26135	26139	from
O	26140	26147	scratch
O	26147	26148	.

O	26150	26158	Question
O	26158	26159	-
O	26159	26167	32714194
O	26167	26168	,
O	26169	26175	answer
O	26175	26176	-
O	26176	26184	32714222

O	26185	26186	+
O	26187	26189	is
O	26190	26201	implemented
O	26202	26204	in
O	26205	26209	java
O	26210	26219	compilers
O	26220	26221	.

O	26222	26225	The
O	26226	26234	compiler
O	26235	26243	replaces
B-api_mention	26244	26250	String
O	26251	26252	+
B-api_mention	26253	26259	String
O	26260	26264	with
O	26265	26271	either
O	26272	26279	compile
O	26280	26284	time
O	26285	26294	constants
O	26295	26297	or
B-api_mention	26298	26311	StringBuilder
O	26312	26316	code
O	26316	26317	.

O	26318	26322	Note
O	26323	26327	that
O	26328	26332	this
O	26333	26340	applies
O	26341	26343	to
O	26344	26354	primitives
O	26355	26358	too
O	26358	26359	.

O	26360	26361	i
O	26361	26362	.
O	26362	26363	e
O	26363	26364	,
O	26365	26368	int
O	26369	26370	i
O	26370	26371	=
O	26371	26372	1
O	26372	26373	+
O	26373	26374	2
O	26375	26380	could
O	26381	26384	get
O	26385	26393	directly
O	26394	26402	replaced
O	26403	26405	to
O	26406	26409	int
O	26410	26411	i
O	26411	26412	=
O	26412	26413	3
O	26414	26420	during
O	26421	26432	compilation
O	26433	26439	itself
O	26439	26440	.

O	26442	26450	Question
O	26450	26451	-
O	26451	26459	32714194
O	26459	26460	,
O	26461	26467	answer
O	26467	26468	-
O	26468	26476	32714537

O	26477	26482	While
O	26483	26492	currently
O	26493	26497	most
O	26498	26500	of
O	26501	26505	Java
O	26506	26515	compilers
O	26516	26521	using
B-api_mention	26522	26535	StringBuilder
O	26536	26541	chain
O	26541	26542	,
O	26543	26545	it
O	26545	26546	'
O	26546	26547	s
O	26548	26551	not
O	26552	26561	specified
O	26562	26566	that
O	26567	26569	it
O	26570	26576	should
O	26577	26579	be
O	26580	26586	always
O	26587	26589	in
O	26590	26594	this
O	26595	26598	way
O	26598	26599	.

O	26600	26602	In
O	26603	26613	particular
O	26614	26619	there
O	26619	26620	'
O	26620	26621	s
O	26622	26623	a
O	26624	26632	proposal
O	26633	26635	to
O	26636	26642	change
O	26643	26647	this
O	26648	26659	drastically
O	26660	26662	in
O	26663	26667	Java
O	26667	26668	-
O	26668	26669	9
O	26670	26679	replacing
O	26680	26684	with
O	26685	26691	single
O	26692	26705	invokedynamic
O	26706	26710	call
O	26711	26714	and
O	26715	26724	introduce
O	26725	26728	new
O	26729	26740	metafactory
O	26741	26746	which
O	26747	26751	will
O	26752	26760	generate
O	26761	26763	an
O	26764	26775	appropriate
O	26776	26788	MethodHandle
O	26789	26791	in
O	26792	26799	runtime
O	26800	26802	to
O	26803	26810	perform
O	26811	26824	concatenation
O	26824	26825	.

O	26827	26835	Question
O	26835	26836	-
O	26836	26844	32175145
O	26844	26845	,
O	26846	26852	answer
O	26852	26853	-
O	26853	26861	32175175

O	26862	26866	Note
O	26867	26871	that
O	26872	26873	a
O	26874	26875	.

O	26876	26877	b
O	26878	26881	and
O	26882	26883	c
O	26884	26887	are
O	26888	26897	instances
O	26898	26900	of
O	26901	26910	primitive
O	26911	26918	wrapper
O	26919	26926	classes
O	26927	26928	(
O	26928	26932	such
O	26933	26935	as
B-api_mention	26936	26943	Integer
O	26943	26944	,
B-api_mention	26945	26951	Double
O	26951	26952	,
O	26953	26956	etc
O	26956	26957	.
O	26957	26958	.
O	26958	26959	.
O	26959	26960	)
O	26960	26961	.

O	26962	26967	These
O	26968	26975	classes
O	26976	26979	are
O	26980	26985	final
O	26986	26989	and
O	26990	26996	cannot
O	26997	26999	be
O	27000	27008	extended
O	27008	27009	,
O	27010	27012	so
O	27013	27016	you
O	27017	27020	can
O	27020	27021	'
O	27021	27022	t
O	27023	27031	override
O	27032	27037	their
O	27038	27044	equals
O	27045	27059	implementation
O	27059	27060	.

O	27061	27070	Therefore
O	27071	27072	a
B-api_mention	27072	27073	.
I-api_mention	27073	27079	equals
I-api_mention	27079	27080	(
I-api_mention	27080	27084	args
I-api_mention	27084	27085	)
O	27086	27090	will
O	27091	27097	always
O	27098	27104	return
O	27105	27109	true
O	27109	27110	,
O	27111	27116	since
O	27117	27122	those
O	27123	27130	classes
O	27131	27140	implement
O	27141	27147	equals
O	27148	27156	properly
O	27156	27157	.

O	27159	27167	Question
O	27167	27168	-
O	27168	27176	32175145
O	27176	27177	,
O	27178	27184	answer
O	27184	27185	-
O	27185	27193	32175224

O	27194	27199	Since
B-api_mention	27200	27206	equals
I-api_mention	27206	27207	(
I-api_mention	27207	27208	.
I-api_mention	27208	27209	.
I-api_mention	27209	27210	.
I-api_mention	27210	27211	)
O	27212	27214	is
O	27215	27218	not
O	27219	27220	a
O	27221	27226	final
O	27227	27233	method
O	27234	27236	of
B-api_mention	27237	27243	Object
O	27244	27245	,
O	27246	27249	yes
O	27249	27250	,
O	27251	27253	it
O	27254	27256	is
O	27257	27261	very
O	27262	27266	well
O	27267	27269	be
O	27270	27278	possible
O	27279	27281	in
O	27282	27283	a
O	27284	27293	different
O	27294	27303	situation
O	27304	27305	.

O	27306	27307	#
O	27307	27310	pre
O	27311	27315	This
O	27316	27324	question
O	27324	27325	,
O	27326	27333	however
O	27333	27334	,
O	27335	27347	specifically
O	27348	27352	says
O	27353	27357	that
O	27358	27363	these
O	27364	27367	are
O	27368	27377	primitive
O	27378	27386	wrappers
O	27387	27388	(
O	27388	27389	e
O	27389	27390	.
O	27390	27391	g
O	27391	27392	.
B-api_mention	27393	27400	Integer
O	27401	27402	,
B-api_mention	27403	27410	Boolean
O	27411	27412	,
O	27413	27416	etc
O	27416	27417	.
O	27417	27418	)
O	27419	27422	and
O	27423	27428	since
O	27429	27434	these
O	27435	27442	classes
O	27443	27446	are
O	27447	27452	final
O	27452	27453	,
O	27454	27457	you
O	27458	27464	cannot
O	27465	27471	extend
O	27472	27476	them
O	27476	27477	,
O	27478	27482	thus
O	27483	27484	a
B-api_mention	27484	27485	.
I-api_mention	27485	27491	equals
I-api_mention	27491	27492	(
I-api_mention	27492	27496	args
I-api_mention	27496	27497	)
O	27498	27502	will
O	27503	27509	always
O	27510	27516	return
O	27517	27521	true
O	27522	27523	.

O	27525	27533	Question
O	27533	27534	-
O	27534	27542	32175145
O	27542	27543	,
O	27544	27550	answer
O	27550	27551	-
O	27551	27559	32177563

O	27560	27563	The
O	27564	27569	other
O	27570	27577	answers
O	27578	27582	have
O	27583	27590	already
O	27591	27599	answered
O	27600	27604	your
O	27605	27613	question
O	27614	27615	-
O	27616	27618	no
O	27618	27619	,
O	27620	27624	this
O	27625	27627	is
O	27628	27631	not
O	27632	27640	possible
O	27641	27645	with
O	27646	27649	the
O	27650	27654	Java
O	27654	27655	'
O	27655	27656	s
O	27657	27666	primitive
O	27667	27674	wrapper
O	27675	27682	classes
O	27682	27683	.

O	27684	27685	I
O	27685	27686	'
O	27686	27688	ll
O	27689	27692	try
O	27693	27695	to
O	27696	27703	address
O	27704	27707	the
O	27708	27709	"
O	27709	27717	question
O	27718	27724	behind
O	27725	27728	the
O	27729	27737	question
O	27737	27738	"
O	27738	27739	:
O	27740	27742	Is
O	27743	27747	this
O	27748	27756	possible
O	27757	27761	with
O	27762	27767	other
O	27768	27775	classes
O	27775	27776	?

O	27777	27778	#
O	27778	27788	blockquote
O	27789	27793	This
O	27794	27796	is
O	27797	27805	actually
O	27806	27807	a
O	27808	27812	good
O	27813	27821	question
O	27821	27822	,
O	27823	27826	and
O	27827	27830	the
O	27831	27837	answer
O	27838	27840	is
O	27840	27841	:
O	27842	27845	Yes
O	27845	27846	,
O	27847	27849	it
O	27850	27852	is
O	27853	27861	possible
O	27862	27864	to
O	27865	27871	create
O	27872	27876	such
O	27877	27878	a
O	27879	27888	situation
O	27888	27889	,
O	27890	27893	and
O	27894	27897	yes
O	27897	27898	,
O	27899	27901	it
O	27902	27907	would
O	27908	27912	make
O	27913	27922	Aristotle
O	27923	27928	angry
O	27928	27929	.

O	27930	27938	Actually
O	27938	27939	,
O	27940	27941	I
O	27942	27945	don
O	27945	27946	'
O	27946	27947	t
O	27948	27952	know
O	27953	27955	if
O	27956	27958	it
O	27959	27964	would
O	27965	27969	make
O	27970	27979	Aristotle
O	27980	27985	angry
O	27985	27986	,
O	27987	27990	not
O	27991	27997	having
O	27998	28003	known
O	28004	28007	him
O	28007	28008	,
O	28009	28012	but
O	28013	28015	it
O	28016	28020	will
O	28021	28030	certainly
O	28031	28036	cause
O	28037	28038	a
O	28039	28042	lot
O	28043	28045	of
O	28046	28051	grief
O	28052	28055	for
O	28056	28063	whoever
O	28064	28067	has
O	28068	28070	to
O	28071	28075	work
O	28076	28080	with
O	28081	28084	the
O	28085	28089	code
O	28089	28090	.

O	28091	28094	The
O	28095	28100	thing
O	28101	28103	is
O	28103	28104	:
O	28105	28110	There
O	28111	28113	is
O	28114	28115	a
O	28116	28124	contract
O	28125	28135	associated
O	28136	28140	with
B-api_mention	28141	28147	Object
I-api_mention	28147	28148	.
I-api_mention	28148	28154	equals
I-api_mention	28154	28155	(
I-api_mention	28155	28159	args
I-api_mention	28159	28160	)
O	28161	28162	:
O	28163	28164	#
O	28164	28174	blockquote
O	28175	28183	Javadocs
O	28184	28187	for
B-api_mention	28188	28194	Object
I-api_mention	28194	28195	.
I-api_mention	28195	28201	equals
O	28202	28205	Yes
O	28205	28206	,
O	28207	28211	when
O	28212	28220	creating
O	28221	28225	your
O	28226	28229	own
O	28230	28235	class
O	28235	28236	,
O	28237	28240	you
O	28241	28244	can
O	28245	28252	violate
O	28253	28257	this
O	28258	28266	contract
O	28266	28267	.

O	28268	28273	There
O	28274	28276	is
O	28277	28278	(
O	28278	28291	unfortunately
O	28291	28292	)
O	28293	28300	nothing
O	28301	28303	in
O	28304	28307	the
O	28308	28316	compiler
O	28317	28319	or
O	28320	28327	runtime
O	28328	28336	stopping
O	28337	28340	you
O	28340	28341	.

O	28342	28349	However
O	28349	28350	,
O	28351	28352	a
O	28353	28356	lot
O	28357	28359	of
O	28360	28364	code
O	28365	28371	relies
O	28372	28374	on
O	28375	28379	this
O	28380	28388	contract
O	28388	28389	,
O	28390	28392	so
O	28393	28395	if
O	28396	28399	you
O	28400	28407	violate
O	28408	28410	it
O	28410	28411	,
O	28412	28415	any
O	28416	28420	code
O	28421	28425	that
O	28426	28430	uses
B-api_mention	28431	28437	equals
O	28438	28442	will
O	28443	28451	probably
O	28452	28456	fail
O	28457	28459	in
O	28460	28470	mysterious
O	28471	28475	ways
O	28475	28476	.

O	28477	28480	One
O	28481	28488	example
O	28488	28489	:
O	28490	28494	Java
O	28494	28495	'
O	28495	28496	s
O	28497	28500	own
B-api_mention	28501	28511	Collection
O	28512	28519	classes
O	28520	28521	(
B-api_mention	28522	28526	java
I-api_mention	28526	28527	.
I-api_mention	28527	28531	util
I-api_mention	28531	28532	.
I-api_mention	28532	28542	Collection
O	28543	28546	and
O	28547	28554	friends
O	28554	28555	)
O	28556	28560	rely
O	28561	28563	on
B-api_mention	28564	28570	equals
O	28571	28572	.

O	28573	28575	If
O	28576	28578	an
O	28579	28587	instance
O	28588	28590	of
O	28591	28592	a
O	28593	28598	class
O	28599	28603	that
O	28604	28608	does
O	28609	28612	not
O	28613	28622	correctly
O	28623	28632	implement
B-api_mention	28633	28639	equals
O	28640	28642	is
O	28643	28646	put
O	28647	28651	into
O	28652	28653	a
O	28654	28664	collection
O	28664	28665	,
O	28666	28671	weird
O	28672	28678	things
O	28679	28685	happen
O	28685	28686	,
O	28687	28691	such
O	28692	28694	as
O	28695	28698	the
O	28699	28709	collection
O	28710	28719	sometimes
O	28720	28730	containing
O	28731	28734	the
O	28735	28743	instance
O	28744	28747	and
O	28748	28757	sometimes
O	28758	28761	not
O	28761	28762	.

O	28764	28772	Question
O	28772	28773	-
O	28773	28781	32175145
O	28781	28782	,
O	28783	28789	answer
O	28789	28790	-
O	28790	28798	32182250

B-api_mention	28799	28806	Integer
O	28807	28808	a
B-api_mention	28808	28809	.
I-api_mention	28809	28815	equals
I-api_mention	28815	28816	(
I-api_mention	28817	28818	a
I-api_mention	28819	28820	)
O	28821	28824	can
O	28825	28831	return
O	28832	28837	false
O	28838	28841	But
O	28842	28845	you
O	28846	28850	have
O	28851	28853	to
O	28854	28856	be
O	28857	28863	really
O	28864	28868	evil
O	28869	28872	and
O	28873	28876	use
O	28877	28888	reflections
O	28889	28892	and
O	28893	28907	Multithreading
O	28907	28908	:
O	28909	28911	If
O	28912	28915	you
O	28916	28919	run
O	28920	28924	this
O	28925	28929	code
O	28929	28930	,
O	28931	28936	there
O	28937	28939	is
O	28940	28941	a
O	28942	28948	chance
O	28949	28953	that
O	28954	28955	a
O	28956	28962	racing
O	28963	28972	condition
O	28973	28976	can
O	28977	28983	change
O	28984	28987	the
O	28988	28996	internal
O	28997	29002	Value
O	29003	29005	of
O	29006	29011	myInt
O	29012	29017	while
O	29018	29021	the
O	29022	29033	comparision
O	29034	29039	takes
O	29040	29045	place
O	29045	29046	.

O	29047	29049	If
O	29050	29053	you
O	29054	29058	want
O	29059	29061	to
O	29062	29070	simulate
O	29071	29075	this
O	29076	29085	condition
O	29085	29086	,
O	29087	29091	just
O	29092	29095	set
O	29096	29097	a
O	29098	29108	breakpoint
O	29109	29115	inside
O	29116	29118	of
B-api_mention	29119	29126	Integer
I-api_mention	29126	29127	.
I-api_mention	29127	29135	intValue
I-api_mention	29135	29136	(
I-api_mention	29136	29140	args
I-api_mention	29140	29141	)
O	29142	29145	run
O	29146	29149	the
O	29150	29154	code
O	29155	29157	in
O	29158	29163	debug
O	29164	29167	and
O	29168	29171	hit
O	29172	29180	continue
O	29180	29181	.

O	29182	29186	This
O	29187	29191	will
O	29192	29198	create
O	29199	29200	a
O	29201	29206	delay
O	29207	29212	which
O	29213	29220	creates
O	29221	29224	the
O	29225	29229	race
O	29230	29239	condition
O	29240	29252	artificially
O	29253	29256	and
O	29257	29260	the
O	29261	29268	console
O	29269	29273	will
O	29274	29280	return
O	29281	29286	false
O	29286	29287	.

O	29288	29289	#
O	29289	29292	pre

O	29294	29302	Question
O	29302	29303	-
O	29303	29311	32623834
O	29311	29312	,
O	29313	29319	answer
O	29319	29320	-
O	29320	29328	32624143

O	29329	29332	You
O	29333	29337	just
O	29338	29345	changed
O	29346	29349	the
B-api_mention	29350	29356	String
O	29357	29359	of
B-api_mention	29360	29366	String
O	29367	29375	constant
O	29376	29380	pool
O	29381	29386	Mario
O	29387	29389	to
O	29390	29395	Luigi
O	29396	29401	which
O	29402	29405	was
O	29406	29416	referenced
O	29417	29419	by
O	29420	29428	multiple
B-api_mention	29429	29435	String
O	29436	29437	s
O	29437	29438	,
O	29439	29441	so
O	29442	29447	every
O	29448	29459	referencing
O	29460	29467	literal
O	29468	29473	Mario
O	29474	29476	is
O	29477	29480	now
O	29481	29486	Luigi
O	29487	29488	.

B-api_mention	29489	29494	Field
O	29495	29506	stringValue
O	29507	29508	=
B-api_mention	29509	29515	String
I-api_mention	29515	29516	.
I-api_mention	29516	29521	class
I-api_mention	29521	29522	.
I-api_mention	29522	29538	getDeclaredField
I-api_mention	29538	29539	(
I-api_mention	29539	29543	args
I-api_mention	29543	29544	)
O	29544	29545	;
O	29546	29549	You
O	29550	29554	have
O	29555	29562	fetched
O	29563	29566	the
O	29567	29571	char
O	29571	29572	[
O	29572	29573	]
O	29574	29579	named
O	29580	29585	value
O	29586	29591	field
O	29592	29596	from
O	29597	29602	class
B-api_mention	29603	29609	String
O	29610	29621	stringValue
B-api_mention	29621	29622	.
I-api_mention	29622	29635	setAccessible
I-api_mention	29635	29636	(
I-api_mention	29636	29640	args
I-api_mention	29640	29641	)
O	29641	29642	;
O	29643	29647	Make
O	29648	29650	it
O	29651	29661	accessible
O	29661	29662	.

O	29663	29674	stringValue
B-api_mention	29674	29675	.
I-api_mention	29675	29678	set
I-api_mention	29678	29679	(
I-api_mention	29679	29683	args
I-api_mention	29683	29684	)
O	29684	29685	;
O	29686	29689	You
O	29690	29697	changed
O	29698	29706	original
B-api_mention	29707	29713	String
O	29714	29719	field
O	29720	29722	to
O	29723	29728	Luigi
O	29729	29730	.

O	29731	29734	But
O	29735	29743	original
O	29744	29746	is
O	29747	29752	Mario
O	29753	29756	the
B-api_mention	29757	29763	String
O	29764	29771	literal
O	29772	29775	and
O	29776	29783	literal
O	29784	29791	belongs
O	29792	29794	to
O	29795	29798	the
B-api_mention	29799	29805	String
O	29806	29810	pool
O	29811	29814	and
O	29815	29818	all
O	29819	29822	are
O	29823	29831	interned
O	29832	29833	.

O	29834	29839	Which
O	29840	29845	means
O	29846	29849	all
O	29850	29853	the
O	29854	29862	literals
O	29863	29868	which
O	29869	29872	has
O	29873	29877	same
O	29878	29885	content
O	29886	29892	refers
O	29893	29895	to
O	29896	29899	the
O	29900	29904	same
O	29905	29911	memory
O	29912	29919	address
O	29919	29920	.

O	29921	29922	#
O	29922	29925	pre
O	29926	29935	Basically
O	29936	29939	you
O	29940	29944	have
O	29945	29952	changed
O	29953	29956	the
O	29957	29962	Mario
O	29963	29965	of
B-api_mention	29966	29972	String
O	29973	29977	pool
O	29978	29983	which
O	29984	29987	got
O	29988	29997	reflected
O	29998	30000	in
O	30001	30004	all
O	30005	30008	the
O	30009	30020	referencing
O	30021	30027	fields
O	30027	30028	.

O	30029	30031	If
O	30032	30035	you
O	30036	30042	create
B-api_mention	30043	30049	String
O	30050	30056	Object
O	30057	30058	(
O	30058	30059	i
O	30059	30060	.
O	30060	30061	e
O	30061	30062	.
O	30063	30066	new
B-api_mention	30067	30073	String
I-api_mention	30073	30074	(
I-api_mention	30074	30078	args
I-api_mention	30078	30079	)
O	30080	30081	)
O	30082	30089	instead
O	30090	30092	of
O	30093	30100	literal
O	30101	30104	you
O	30105	30109	will
O	30110	30113	not
O	30114	30118	face
O	30119	30123	this
O	30124	30132	behavior
O	30133	30140	because
O	30141	30145	than
O	30146	30149	you
O	30150	30154	will
O	30155	30159	have
O	30160	30163	two
O	30164	30173	different
O	30174	30179	Mario
O	30180	30181	s
O	30182	30183	.

O	30185	30193	Question
O	30193	30194	-
O	30194	30202	32623834
O	30202	30203	,
O	30204	30210	answer
O	30210	30211	-
O	30211	30219	32652449

O	30220	30227	Another
O	30228	30235	related
O	30236	30241	point
O	30241	30242	:
O	30243	30246	you
O	30247	30250	can
O	30251	30255	make
O	30256	30259	use
O	30260	30262	of
O	30263	30266	the
O	30267	30275	constant
O	30276	30280	pool
O	30281	30283	to
O	30284	30291	improve
O	30292	30295	the
O	30296	30307	performance
O	30308	30310	of
O	30311	30317	string
O	30318	30329	comparisons
O	30330	30332	in
O	30333	30337	some
O	30338	30351	circumstances
O	30351	30352	,
O	30353	30355	by
O	30356	30361	using
O	30362	30365	the
B-api_mention	30366	30372	String
I-api_mention	30372	30373	.
I-api_mention	30373	30379	intern
I-api_mention	30379	30380	(
I-api_mention	30380	30381	)
O	30382	30388	method
O	30388	30389	.

O	30390	30394	That
O	30395	30401	method
O	30402	30409	returns
O	30410	30413	the
O	30414	30422	instance
O	30423	30425	of
B-api_mention	30426	30432	String
O	30433	30437	with
O	30438	30441	the
O	30442	30446	same
O	30447	30455	contents
O	30456	30458	as
O	30459	30462	the
B-api_mention	30463	30469	String
O	30470	30472	on
O	30473	30478	which
O	30479	30481	it
O	30482	30484	is
O	30485	30492	invoked
O	30493	30497	from
O	30498	30501	the
B-api_mention	30502	30508	String
O	30509	30518	constants
O	30519	30523	pool
O	30523	30524	,
O	30525	30531	adding
O	30532	30534	it
O	30535	30537	it
O	30538	30540	if
O	30541	30543	is
O	30544	30547	not
O	30548	30551	yet
O	30552	30559	present
O	30559	30560	.

O	30561	30563	In
O	30564	30569	other
O	30570	30575	words
O	30575	30576	,
O	30577	30582	after
O	30583	30588	using
B-api_mention	30589	30595	intern
I-api_mention	30595	30596	(
I-api_mention	30596	30600	args
I-api_mention	30600	30601	)
O	30602	30603	,
O	30604	30607	all
O	30608	30615	Strings
O	30616	30620	with
O	30621	30624	the
O	30625	30629	same
O	30630	30638	contents
O	30639	30642	are
O	30643	30653	guaranteed
O	30654	30656	to
O	30657	30659	be
O	30660	30663	the
O	30664	30668	same
B-api_mention	30669	30675	String
O	30676	30684	instance
O	30685	30687	as
O	30688	30692	each
O	30693	30698	other
O	30699	30702	and
O	30703	30705	as
O	30706	30709	any
B-api_mention	30710	30716	String
O	30717	30726	constants
O	30727	30731	with
O	30732	30737	those
O	30738	30746	contents
O	30746	30747	,
O	30748	30755	meaning
O	30756	30759	you
O	30760	30763	can
O	30764	30768	then
O	30769	30772	use
O	30773	30776	the
O	30777	30783	equals
O	30784	30792	operator
O	30793	30794	(
O	30795	30796	=
O	30796	30797	=
O	30798	30799	)
O	30800	30802	on
O	30803	30807	them
O	30807	30808	.

O	30809	30813	This
O	30814	30816	is
O	30817	30821	just
O	30822	30824	an
O	30825	30832	example
O	30833	30838	which
O	30839	30841	is
O	30842	30845	not
O	30846	30850	very
O	30851	30857	useful
O	30858	30860	on
O	30861	30864	its
O	30865	30868	own
O	30868	30869	,
O	30870	30873	but
O	30874	30876	it
O	30877	30888	illustrates
O	30889	30892	the
O	30893	30898	point
O	30898	30899	:
O	30900	30901	#
O	30901	30904	pre
O	30905	30909	This
O	30910	30916	little
O	30917	30922	trick
O	30923	30926	isn
O	30926	30927	'
O	30927	30928	t
O	30929	30934	worth
O	30935	30944	designing
O	30945	30949	your
O	30950	30954	code
O	30955	30961	around
O	30961	30962	,
O	30963	30966	but
O	30967	30969	it
O	30970	30972	is
O	30973	30978	worth
O	30979	30986	keeping
O	30987	30989	in
O	30990	30994	mind
O	30995	30998	for
O	30999	31002	the
O	31003	31006	day
O	31007	31011	when
O	31012	31015	you
O	31016	31022	notice
O	31023	31024	a
O	31025	31031	little
O	31032	31036	more
O	31037	31042	speed
O	31043	31048	could
O	31049	31051	be
O	31052	31056	eked
O	31057	31060	out
O	31061	31063	of
O	31064	31068	some
O	31069	31072	bit
O	31073	31075	of
O	31076	31087	performance
O	31088	31097	sensitive
O	31098	31102	code
O	31103	31105	by
O	31106	31111	using
O	31112	31115	the
O	31116	31117	=
O	31117	31118	=
O	31119	31127	operator
O	31128	31130	on
O	31131	31132	a
O	31133	31139	string
O	31140	31144	with
O	31145	31154	judicious
O	31155	31158	use
O	31159	31161	of
B-api_mention	31162	31168	intern
I-api_mention	31168	31169	(
I-api_mention	31169	31173	args
I-api_mention	31173	31174	)
O	31175	31176	.

O	31178	31186	Question
O	31186	31187	-
O	31187	31195	31170459
O	31195	31196	,
O	31197	31203	answer
O	31203	31204	-
O	31204	31212	31170506

O	31213	31215	No
O	31215	31216	,
O	31217	31220	you
O	31221	31227	appear
O	31228	31230	to
O	31231	31235	have
O	31236	31237	a
O	31238	31243	legit
O	31244	31247	bug
O	31247	31248	.

O	31249	31252	The
O	31253	31256	bug
O	31257	31265	presents
O	31266	31268	in
O	31269	31273	JDK7
O	31274	31277	but
O	31278	31283	fixed
O	31284	31286	in
O	31287	31291	JDK8
O	31291	31292	.

O	31293	31297	Your
O	31298	31304	values
O	31305	31308	are
O	31309	31318	correctly
O	31319	31332	representable
O	31333	31335	as
B-api_mention	31336	31346	BigDecimal
O	31347	31348	s
O	31348	31349	,
O	31350	31353	and
O	31354	31360	should
O	31361	31367	behave
O	31368	31377	correctly
O	31377	31378	,
O	31379	31382	but
O	31383	31386	don
O	31386	31387	'
O	31387	31388	t
O	31388	31389	.

O	31390	31397	Tracing
O	31398	31405	through
O	31406	31409	the
O	31410	31416	source
O	31417	31421	code
O	31422	31424	of
B-api_mention	31425	31435	BigDecimal
O	31436	31437	,
O	31438	31440	on
O	31441	31445	line
O	31446	31450	2585
O	31450	31451	,
O	31452	31456	this
B-api_mention	31456	31457	.
I-api_mention	31457	31466	precision
I-api_mention	31466	31467	(
I-api_mention	31467	31471	args
I-api_mention	31471	31472	)
O	31473	31475	is
O	31476	31477	1
O	31477	31478	,
O	31479	31482	and
O	31483	31487	this
B-api_mention	31487	31488	.
I-api_mention	31488	31493	scale
O	31494	31496	is
O	31497	31498	-
O	31498	31508	2147483647
O	31509	31510	.
O	31511	31515	this
B-api_mention	31515	31516	.
I-api_mention	31516	31525	precision
I-api_mention	31525	31526	(
I-api_mention	31526	31530	args
I-api_mention	31530	31531	)
O	31532	31533	-
O	31534	31538	this
O	31538	31539	.
O	31539	31544	scale
O	31545	31554	therefore
O	31555	31564	overflows
O	31564	31565	,
O	31566	31569	and
O	31570	31573	the
O	31574	31583	following
O	31584	31592	overflow
O	31593	31595	is
O	31596	31599	not
O	31600	31607	handled
O	31608	31617	correctly
O	31617	31618	.

O	31619	31623	This
O	31624	31627	bug
O	31628	31631	has
O	31632	31636	been
O	31637	31642	fixed
O	31643	31645	in
O	31646	31650	JDK8
O	31651	31653	by
O	31654	31659	doing
O	31660	31663	the
O	31664	31675	subtraction
O	31676	31678	in
O	31679	31683	long
O	31684	31694	arithmetic
O	31695	31696	.

O	31698	31706	Question
O	31706	31707	-
O	31707	31715	33804394
O	31715	31716	,
O	31717	31723	answer
O	31723	31724	-
O	31724	31732	33814549

O	31733	31735	In
O	31736	31740	this
O	31741	31745	sort
O	31746	31748	of
O	31749	31758	situation
O	31759	31760	I
O	31761	31766	would
O	31767	31772	write
O	31773	31774	#
O	31774	31777	pre
O	31778	31791	Interestingly
O	31792	31795	you
O	31796	31799	say
O	31800	31804	that
O	31805	31808	the
O	31809	31810	"
O	31810	31813	try
O	31814	31823	statement
O	31824	31828	will
O	31829	31834	never
O	31835	31839	fail
O	31839	31840	"
O	31840	31841	,
O	31842	31845	but
O	31846	31849	you
O	31850	31855	still
O	31856	31860	took
O	31861	31864	the
O	31865	31872	trouble
O	31873	31875	to
O	31876	31881	write
O	31882	31883	a
O	31884	31893	statement
O	31894	31895	e
B-api_mention	31895	31896	.
I-api_mention	31896	31911	printStackTrace
I-api_mention	31911	31912	(
I-api_mention	31912	31916	args
I-api_mention	31916	31917	)
O	31917	31918	;
O	31919	31923	that
O	31924	31927	you
O	31928	31933	claim
O	31934	31938	will
O	31939	31944	never
O	31945	31947	be
O	31948	31956	executed
O	31956	31957	.

O	31958	31961	Why
O	31961	31962	?

O	31963	31970	Perhaps
O	31971	31975	your
O	31976	31982	belief
O	31983	31985	is
O	31986	31989	not
O	31990	31994	that
O	31995	32001	firmly
O	32002	32006	held
O	32006	32007	.

O	32008	32012	That
O	32013	32015	is
O	32016	32020	good
O	32021	32022	(
O	32022	32024	in
O	32025	32027	my
O	32028	32035	opinion
O	32035	32036	)
O	32036	32037	,
O	32038	32043	since
O	32044	32048	your
O	32049	32055	belief
O	32056	32058	is
O	32059	32062	not
O	32063	32068	based
O	32069	32071	on
O	32072	32075	the
O	32076	32080	code
O	32081	32084	you
O	32085	32090	wrote
O	32090	32091	,
O	32092	32095	but
O	32096	32102	rather
O	32103	32105	on
O	32106	32109	the
O	32110	32121	expectation
O	32122	32126	that
O	32127	32131	your
O	32132	32138	client
O	32139	32143	will
O	32144	32147	not
O	32148	32155	violate
O	32156	32159	the
O	32160	32172	precondition
O	32172	32173	.

O	32174	32180	Better
O	32181	32183	to
O	32184	32191	program
O	32192	32198	public
O	32199	32206	methods
O	32207	32218	defensively
O	32218	32219	.

O	32220	32222	By
O	32223	32226	the
O	32227	32230	way
O	32230	32231	,
O	32232	32236	your
O	32237	32241	code
O	32242	32245	won
O	32245	32246	'
O	32246	32247	t
O	32248	32255	compile
O	32256	32259	for
O	32260	32262	me
O	32262	32263	.

O	32264	32267	You
O	32268	32271	can
O	32271	32272	'
O	32272	32273	t
O	32274	32278	call
O	32279	32280	a
B-api_mention	32280	32281	.
I-api_mention	32281	32286	clone
I-api_mention	32286	32287	(
I-api_mention	32287	32291	args
I-api_mention	32291	32292	)
O	32293	32297	even
O	32298	32300	if
O	32301	32304	the
O	32305	32309	type
O	32310	32312	of
O	32313	32314	a
O	32315	32317	is
B-api_mention	32318	32327	Cloneable
O	32328	32329	.

O	32330	32332	At
O	32333	32338	least
O	32339	32346	Eclipse
O	32346	32347	'
O	32347	32348	s
O	32349	32357	compiler
O	32358	32362	says
O	32363	32365	so
O	32365	32366	.

O	32367	32377	Expression
O	32378	32379	a
B-api_mention	32379	32380	.
I-api_mention	32380	32385	clone
I-api_mention	32385	32386	(
I-api_mention	32386	32390	args
I-api_mention	32390	32391	)
O	32392	32397	gives
O	32398	32403	error
O	32404	32405	#
O	32405	32415	blockquote
O	32416	32420	What
O	32421	32422	I
O	32423	32428	would
O	32429	32431	do
O	32432	32435	for
O	32436	32440	your
O	32441	32449	specific
O	32450	32454	case
O	32455	32457	is
O	32458	32459	#
O	32459	32462	pre
O	32463	32468	Where
O	32469	32486	PubliclyCloneable
O	32487	32489	is
O	32490	32497	defined
O	32498	32500	by
O	32501	32502	#
O	32502	32505	pre
O	32506	32508	Or
O	32508	32509	,
O	32510	32512	if
O	32513	32516	you
O	32517	32527	absolutely
O	32528	32532	need
O	32533	32536	the
O	32537	32546	parameter
O	32547	32551	type
O	32552	32554	to
O	32555	32557	be
B-api_mention	32558	32567	Cloneable
O	32568	32569	,
O	32570	32573	the
O	32574	32583	following
O	32584	32586	at
O	32587	32592	least
O	32593	32601	compiles
O	32601	32602	.

O	32603	32604	#
O	32604	32607	pre

O	32609	32617	Question
O	32617	32618	-
O	32618	32626	32356762
O	32626	32627	,
O	32628	32634	answer
O	32634	32635	-
O	32635	32643	32357142

O	32644	32648	When
O	32649	32658	returning
B-api_mention	32659	32663	List
O	32664	32665	,
O	32666	32669	you
O	32669	32670	'
O	32670	32672	ll
O	32673	32675	be
O	32676	32685	promoting
O	32686	32693	program
O	32694	32696	to
O	32697	32699	an
O	32700	32709	interface
O	32710	32711	,
O	32712	32717	which
O	32718	32720	is
O	32721	32722	a
O	32723	32727	very
O	32728	32732	good
O	32733	32741	practice
O	32741	32742	.

O	32743	32750	However
O	32750	32751	,
O	32752	32756	this
O	32757	32765	approach
O	32766	32769	has
O	32770	32773	its
O	32774	32784	limitation
O	32784	32785	.

O	32786	32789	For
O	32790	32797	example
O	32797	32798	,
O	32799	32802	you
O	32803	32809	cannot
O	32810	32813	use
O	32814	32818	some
O	32819	32826	methods
O	32827	32831	that
O	32832	32835	are
O	32836	32843	defined
O	32844	32847	for
B-api_mention	32848	32857	ArrayList
O	32858	32861	and
O	32862	32865	don
O	32865	32866	'
O	32866	32867	t
O	32868	32873	exist
O	32874	32876	in
O	32877	32880	the
B-api_mention	32881	32885	List
O	32886	32895	interface
O	32896	32897	-
O	32898	32901	See
O	32902	32906	this
O	32907	32913	answer
O	32914	32917	for
O	32918	32925	details
O	32925	32926	.

O	32927	32928	I
O	32928	32929	'
O	32929	32930	m
O	32931	32938	quoting
O	32939	32942	the
O	32943	32946	API
O	32947	32953	Design
O	32954	32958	from
O	32959	32962	the
O	32963	32966	The
O	32967	32971	Java
O	32971	32972	™
O	32973	32982	Tutorials
O	32982	32983	:
O	32984	32985	#
O	32985	32995	blockquote
O	32996	33001	Since
B-api_mention	33002	33011	ArrayList
O	33012	33014	is
O	33015	33026	essentially
O	33027	33029	an
O	33030	33035	array
O	33035	33036	,
O	33037	33041	they
O	33042	33045	are
O	33046	33048	my
O	33049	33054	first
O	33055	33061	choice
O	33062	33066	when
O	33067	33068	I
O	33069	33073	need
O	33074	33076	to
O	33077	33081	have
O	33082	33083	a
O	33084	33085	"
O	33085	33095	collection
O	33095	33096	-
O	33096	33101	array
O	33101	33102	"
O	33102	33103	.

O	33104	33106	So
O	33107	33109	if
O	33110	33111	I
O	33112	33116	want
O	33117	33119	to
O	33120	33127	convert
O	33128	33139	enumeration
O	33140	33142	to
O	33143	33144	a
O	33145	33149	list
O	33149	33150	,
O	33151	33153	my
O	33154	33160	choice
O	33161	33166	would
O	33167	33169	be
O	33170	33172	an
O	33173	33178	array
O	33179	33183	list
O	33183	33184	.

O	33185	33187	In
O	33188	33191	any
O	33192	33197	other
O	33198	33203	cases
O	33203	33204	,
O	33205	33207	it
O	33207	33208	'
O	33208	33209	s
O	33210	33215	still
O	33216	33221	valid
O	33222	33224	to
O	33225	33230	write
O	33230	33231	:
B-api_mention	33232	33236	List
I-api_mention	33236	33237	<
I-api_mention	33237	33238	T
I-api_mention	33238	33239	>
O	33240	33244	list
O	33245	33246	=
B-api_mention	33247	33258	Collections
I-api_mention	33258	33259	.
I-api_mention	33259	33263	list
I-api_mention	33263	33264	(
I-api_mention	33264	33268	args
I-api_mention	33268	33269	)
O	33269	33270	;

O	33272	33280	Question
O	33280	33281	-
O	33281	33289	32356762
O	33289	33290	,
O	33291	33297	answer
O	33297	33298	-
O	33298	33306	32357149

O	33307	33317	Disclaimer
O	33317	33318	:
O	33319	33320	I
O	33321	33323	am
O	33324	33327	not
O	33328	33329	a
O	33330	33333	JDK
O	33334	33340	author
O	33340	33341	.

O	33342	33343	I
O	33344	33349	agree
O	33350	33354	that
O	33355	33357	it
O	33357	33358	'
O	33358	33359	s
O	33360	33367	correct
O	33368	33370	to
O	33371	33376	write
O	33377	33381	your
O	33382	33385	own
O	33386	33390	code
O	33391	33393	to
O	33394	33404	interfaces
O	33404	33405	,
O	33406	33409	but
O	33410	33412	if
O	33413	33416	you
O	33416	33417	'
O	33417	33419	re
O	33420	33425	going
O	33426	33432	return
O	33433	33434	a
O	33435	33442	mutable
O	33443	33453	collection
O	33454	33456	to
O	33457	33458	a
O	33459	33464	third
O	33465	33470	party
O	33470	33471	,
O	33472	33474	it
O	33474	33475	'
O	33475	33476	s
O	33477	33486	important
O	33487	33489	to
O	33490	33493	let
O	33494	33497	the
O	33498	33503	third
O	33504	33509	party
O	33510	33514	know
O	33515	33519	what
O	33520	33524	sort
O	33525	33527	of
B-api_mention	33528	33532	List
O	33533	33537	they
O	33537	33538	'
O	33538	33540	re
O	33541	33548	getting
O	33549	33553	back
O	33553	33554	.

B-api_mention	33555	33565	LinkedList
O	33566	33569	and
B-api_mention	33570	33579	ArrayList
O	33580	33583	are
O	33584	33588	very
O	33589	33598	different
O	33598	33599	,
O	33600	33611	performance
O	33612	33616	wise
O	33616	33617	,
O	33618	33621	for
O	33622	33629	various
O	33630	33640	operations
O	33640	33641	.

O	33642	33645	For
O	33646	33653	example
O	33653	33654	,
O	33655	33663	removing
O	33664	33667	the
O	33668	33673	first
O	33674	33681	element
O	33682	33684	of
O	33685	33687	an
B-api_mention	33688	33697	ArrayList
O	33698	33700	is
O	33701	33702	O
O	33702	33703	(
O	33703	33707	args
O	33707	33708	)
O	33709	33710	,
O	33711	33714	but
O	33715	33723	removing
O	33724	33727	the
O	33728	33733	first
O	33734	33741	element
O	33742	33744	of
O	33745	33746	a
B-api_mention	33747	33757	LinkedList
O	33758	33760	is
O	33761	33762	O
O	33762	33763	(
O	33763	33767	args
O	33767	33768	)
O	33769	33770	.

O	33771	33773	By
O	33774	33779	fully
O	33780	33790	specifying
O	33791	33794	the
O	33795	33801	return
O	33802	33806	type
O	33806	33807	,
O	33808	33811	the
O	33812	33815	JDK
O	33816	33823	authors
O	33824	33827	are
O	33828	33841	communicating
O	33842	33847	extra
O	33848	33859	information
O	33860	33861	,
O	33862	33864	in
O	33865	33876	unambiguous
O	33877	33881	code
O	33881	33882	,
O	33883	33888	about
O	33889	33893	what
O	33894	33898	sort
O	33899	33901	of
O	33902	33908	object
O	33909	33913	they
O	33913	33914	'
O	33914	33916	re
O	33917	33923	giving
O	33924	33928	back
O	33929	33931	to
O	33932	33935	you
O	33935	33936	,
O	33937	33939	so
O	33940	33943	you
O	33944	33947	can
O	33948	33953	write
O	33954	33958	your
O	33959	33963	code
O	33964	33966	to
O	33967	33970	use
O	33971	33975	this
O	33976	33982	method
O	33983	33991	properly
O	33991	33992	.

O	33993	33995	If
O	33996	33999	you
O	34000	34006	really
O	34007	34011	need
O	34012	34013	a
B-api_mention	34014	34024	LinkedList
O	34025	34026	,
O	34027	34030	you
O	34031	34035	know
O	34036	34040	that
O	34041	34044	you
O	34045	34049	have
O	34050	34052	to
O	34053	34060	specify
O	34061	34064	one
O	34065	34069	here
O	34069	34070	.

O	34071	34078	Finally
O	34078	34079	,
O	34080	34083	the
O	34084	34088	main
O	34089	34095	reason
O	34096	34098	to
O	34099	34103	code
O	34104	34106	to
O	34107	34109	an
O	34110	34119	interface
O	34120	34124	over
O	34125	34127	an
O	34128	34142	implementation
O	34143	34145	is
O	34146	34148	if
O	34149	34152	you
O	34153	34158	think
O	34159	34163	that
O	34164	34167	the
O	34168	34182	implementation
O	34183	34187	will
O	34188	34194	change
O	34194	34195	.

O	34196	34199	The
O	34200	34203	JDK
O	34204	34211	authors
O	34212	34220	probably
O	34221	34227	figure
O	34228	34232	they
O	34233	34236	are
O	34237	34242	never
O	34243	34248	going
O	34249	34251	to
O	34252	34258	change
O	34259	34263	this
O	34264	34270	method
O	34270	34271	;
O	34272	34274	it
O	34274	34275	'
O	34275	34276	s
O	34277	34282	never
O	34283	34288	going
O	34289	34291	to
O	34292	34298	return
O	34299	34300	a
B-api_mention	34301	34311	LinkedList
O	34312	34314	or
O	34315	34316	a
B-api_mention	34317	34328	Collections
I-api_mention	34328	34329	.
I-api_mention	34329	34345	UnmodifiableList
O	34346	34347	.

O	34348	34355	However
O	34355	34356	,
O	34357	34359	in
O	34360	34364	most
O	34365	34370	cases
O	34370	34371	,
O	34372	34375	you
O	34376	34381	would
O	34382	34390	probably
O	34391	34396	still
O	34397	34399	do
O	34399	34400	:
B-api_mention	34401	34405	List
I-api_mention	34405	34406	<
I-api_mention	34406	34407	T
I-api_mention	34407	34408	>
O	34409	34413	list
O	34414	34415	=
B-api_mention	34416	34427	Collections
I-api_mention	34427	34428	.
I-api_mention	34428	34432	list
I-api_mention	34432	34433	(
I-api_mention	34433	34437	args
I-api_mention	34437	34438	)
O	34438	34439	;

O	34441	34449	Question
O	34449	34450	-
O	34450	34458	32356762
O	34458	34459	,
O	34460	34466	answer
O	34466	34467	-
O	34467	34475	32370677

O	34476	34481	There
O	34482	34484	is
O	34485	34486	a
O	34487	34492	small
O	34493	34501	overhead
O	34502	34504	in
O	34505	34512	calling
O	34513	34520	methods
O	34521	34524	var
O	34525	34527	an
O	34528	34537	interface
O	34538	34544	rather
O	34545	34549	than
O	34550	34558	directly
O	34559	34561	on
O	34562	34564	an
O	34565	34571	object
O	34571	34572	.

O	34573	34577	This
O	34578	34586	overhead
O	34587	34589	is
O	34590	34595	often
O	34596	34598	no
O	34599	34603	more
O	34604	34608	than
O	34609	34610	1
O	34611	34613	or
O	34614	34615	2
O	34616	34625	processor
O	34626	34638	instructions
O	34638	34639	.

O	34640	34643	The
O	34644	34652	overhead
O	34653	34655	of
O	34656	34663	calling
O	34664	34665	a
O	34666	34672	method
O	34673	34675	is
O	34676	34680	even
O	34681	34686	lower
O	34687	34689	if
O	34690	34693	the
O	34694	34697	JIT
O	34698	34703	knows
O	34704	34708	that
O	34709	34712	the
O	34713	34719	method
O	34720	34722	is
O	34723	34728	final
O	34728	34729	.

O	34730	34734	This
O	34735	34737	is
O	34738	34741	not
O	34742	34752	measurable
O	34753	34756	for
O	34757	34761	most
O	34762	34766	code
O	34767	34770	you
O	34771	34774	and
O	34775	34777	me
O	34778	34783	right
O	34783	34784	,
O	34785	34788	but
O	34789	34792	for
O	34793	34796	the
O	34797	34800	low
O	34801	34806	level
O	34807	34814	methods
O	34815	34817	in
O	34818	34822	java
O	34822	34823	.
O	34823	34828	utils
O	34829	34832	may
O	34833	34835	be
O	34836	34840	used
O	34841	34843	in
O	34844	34848	some
O	34849	34853	code
O	34854	34859	where
O	34860	34862	it
O	34863	34865	is
O	34866	34868	an
O	34869	34874	issue
O	34874	34875	.

O	34876	34880	Also
O	34881	34883	as
O	34884	34887	has
O	34888	34892	been
O	34893	34900	pointed
O	34901	34904	out
O	34905	34907	in
O	34908	34913	other
O	34914	34921	answers
O	34921	34922	,
O	34923	34926	the
O	34927	34935	concrete
O	34936	34940	type
O	34941	34943	of
O	34944	34947	the
O	34948	34954	object
O	34955	34959	that
O	34960	34962	is
O	34963	34969	return
O	34970	34971	(
O	34971	34975	even
O	34976	34980	when
O	34981	34987	hidden
O	34988	34994	behind
O	34995	34997	an
O	34998	35007	interface
O	35007	35008	)
O	35009	35016	effects
O	35017	35020	the
O	35021	35032	performance
O	35033	35035	of
O	35036	35040	code
O	35041	35045	that
O	35046	35050	uses
O	35051	35053	it
O	35053	35054	.

O	35055	35059	This
O	35060	35066	change
O	35067	35069	in
O	35070	35081	performance
O	35082	35085	can
O	35086	35088	be
O	35089	35093	very
O	35094	35099	great
O	35099	35100	,
O	35101	35103	so
O	35104	35108	such
O	35109	35111	an
O	35112	35118	extent
O	35119	35123	that
O	35124	35127	the
O	35128	35135	calling
O	35136	35144	software
O	35145	35150	fails
O	35151	35153	to
O	35154	35158	work
O	35158	35159	.

O	35160	35167	Clearly
O	35168	35171	the
O	35172	35179	authors
O	35180	35182	of
O	35183	35187	java
O	35187	35188	.
O	35188	35193	utils
O	35194	35198	have
O	35199	35201	no
O	35202	35205	way
O	35206	35208	to
O	35209	35213	know
O	35214	35218	what
O	35219	35222	all
O	35223	35226	the
O	35227	35235	software
O	35236	35240	that
O	35241	35246	calls
B-api_mention	35247	35258	Collections
I-api_mention	35258	35259	.
I-api_mention	35259	35263	list
I-api_mention	35263	35264	(
I-api_mention	35264	35265	)
O	35266	35270	does
O	35271	35275	with
O	35276	35279	the
O	35280	35286	result
O	35287	35290	and
O	35291	35293	no
O	35294	35297	way
O	35298	35300	to
O	35301	35303	re
O	35303	35304	-
O	35304	35308	test
O	35309	35313	this
O	35314	35322	software
O	35323	35325	if
O	35326	35330	they
O	35331	35337	change
O	35338	35341	the
O	35342	35354	implantation
O	35355	35357	of
B-api_mention	35358	35369	Collections
I-api_mention	35369	35370	.
I-api_mention	35370	35374	list
I-api_mention	35374	35375	(
I-api_mention	35375	35376	)
O	35376	35377	.

O	35378	35387	Therefore
O	35388	35392	they
O	35393	35396	are
O	35397	35400	not
O	35401	35406	going
O	35407	35409	to
O	35410	35416	change
O	35417	35420	the
O	35421	35433	implantation
O	35434	35436	of
B-api_mention	35437	35448	Collections
I-api_mention	35448	35449	.
I-api_mention	35449	35453	list
I-api_mention	35453	35454	(
I-api_mention	35454	35455	)
O	35456	35458	to
O	35459	35465	return
O	35466	35467	a
O	35468	35477	different
O	35478	35482	type
O	35483	35485	of
B-api_mention	35486	35490	List
O	35490	35491	,
O	35492	35496	even
O	35497	35499	if
O	35500	35503	the
O	35504	35508	type
O	35509	35515	system
O	35516	35523	allowed
O	35524	35526	it
O	35526	35527	!

O	35528	35532	When
O	35533	35540	writing
O	35541	35545	your
O	35546	35549	own
O	35550	35558	software
O	35558	35559	,
O	35560	35563	you
O	35564	35565	(
O	35565	35574	hopefully
O	35574	35575	)
O	35576	35580	have
O	35581	35590	automated
O	35591	35595	test
O	35596	35600	that
O	35601	35606	cover
O	35607	35610	all
O	35611	35615	your
O	35616	35620	code
O	35621	35624	and
O	35625	35626	a
O	35627	35631	good
O	35632	35642	understand
O	35643	35645	of
O	35646	35649	how
O	35650	35654	your
O	35655	35659	code
O	35660	35672	interrelates
O	35673	35680	include
O	35681	35685	know
O	35686	35691	where
O	35692	35703	performance
O	35704	35706	is
O	35707	35709	an
O	35710	35715	issue
O	35715	35716	.

O	35717	35722	Being
O	35723	35727	able
O	35728	35730	to
O	35731	35735	make
O	35736	35737	a
O	35738	35744	change
O	35745	35747	to
O	35748	35749	a
O	35750	35756	method
O	35756	35757	,
O	35758	35765	without
O	35766	35772	having
O	35773	35775	to
O	35776	35782	change
O	35783	35786	the
O	35787	35794	callers
O	35795	35797	is
O	35798	35800	of
O	35801	35806	great
O	35807	35812	value
O	35813	35818	while
O	35819	35822	the
O	35823	35829	design
O	35830	35832	of
O	35833	35836	the
O	35837	35845	software
O	35846	35848	is
O	35849	35857	changing
O	35857	35858	.

O	35859	35868	Therefore
O	35869	35872	the
O	35873	35876	two
O	35877	35880	set
O	35881	35883	of
O	35884	35889	trade
O	35890	35894	offs
O	35895	35898	are
O	35899	35903	very
O	35904	35913	different
O	35913	35914	.

O	35916	35924	Question
O	35924	35925	-
O	35925	35933	31922866
O	35933	35934	,
O	35935	35941	answer
O	35941	35942	-
O	35942	35950	31922994

O	35951	35952	I
O	35953	35958	think
O	35959	35963	that
O	35964	35966	is
O	35967	35974	because
O	35975	35978	you
O	35979	35986	usually
O	35987	35992	write
O	35993	35997	your
O	35998	36007	functions
O	36008	36010	to
O	36011	36021	manipulate
O	36022	36026	data
O	36026	36027	,
O	36028	36031	and
O	36032	36036	then
O	36037	36041	lift
O	36042	36044	it
O	36045	36047	to
B-api_mention	36048	36056	Optional
O	36057	36062	using
O	36063	36066	map
O	36067	36070	and
O	36071	36078	similar
O	36079	36088	functions
O	36088	36089	.

O	36090	36094	This
O	36095	36099	adds
O	36100	36103	the
O	36104	36111	default
B-api_mention	36112	36120	Optional
O	36121	36129	behavior
O	36130	36132	to
O	36133	36135	it
O	36135	36136	.

O	36137	36139	Of
O	36140	36146	course
O	36146	36147	,
O	36148	36153	there
O	36154	36159	might
O	36160	36162	be
O	36163	36168	cases
O	36168	36169	,
O	36170	36174	when
O	36175	36177	it
O	36178	36180	is
O	36181	36190	necessary
O	36191	36193	to
O	36194	36199	write
O	36200	36204	your
O	36205	36208	own
O	36209	36217	auxilary
O	36218	36226	function
O	36227	36231	that
O	36232	36237	works
O	36238	36240	on
B-api_mention	36241	36249	Optional
O	36250	36251	.

O	36253	36261	Question
O	36261	36262	-
O	36262	36270	31922866
O	36270	36271	,
O	36272	36278	answer
O	36278	36279	-
O	36279	36287	31923015

O	36288	36289	I
O	36290	36297	believe
O	36298	36301	the
O	36302	36307	reson
O	36308	36310	of
O	36311	36316	being
O	36317	36319	is
O	36320	36323	you
O	36324	36328	have
O	36329	36331	to
O	36332	36337	first
O	36338	36343	check
O	36344	36351	whether
O	36352	36354	or
O	36355	36358	not
B-api_mention	36359	36367	Optional
O	36368	36370	is
O	36371	36375	null
O	36376	36382	itself
O	36383	36386	and
O	36387	36391	then
O	36392	36395	try
O	36396	36398	to
O	36399	36407	evaluate
O	36408	36413	value
O	36414	36416	it
O	36417	36422	wraps
O	36422	36423	.

O	36424	36427	Too
O	36428	36432	many
O	36433	36444	unnecessary
O	36445	36456	validations
O	36456	36457	.

O	36459	36467	Question
O	36467	36468	-
O	36468	36476	31922866
O	36476	36477	,
O	36478	36484	answer
O	36484	36485	-
O	36485	36493	31923042

O	36494	36497	The
O	36498	36505	pattern
O	36506	36510	with
B-api_mention	36511	36519	Optional
O	36520	36522	is
O	36523	36526	for
O	36527	36530	one
O	36531	36533	to
O	36534	36539	avoid
O	36540	36549	returning
O	36550	36554	null
O	36555	36556	.

O	36557	36559	It
O	36559	36560	'
O	36560	36561	s
O	36562	36567	still
O	36568	36577	perfectly
O	36578	36586	possible
O	36587	36589	to
O	36590	36594	pass
O	36595	36597	in
O	36598	36602	null
O	36603	36605	to
O	36606	36607	a
O	36608	36614	method
O	36614	36615	.

O	36616	36621	While
O	36622	36627	these
O	36628	36632	aren
O	36632	36633	'
O	36633	36634	t
O	36635	36641	really
O	36642	36650	official
O	36651	36654	yet
O	36654	36655	,
O	36656	36659	you
O	36660	36663	can
O	36664	36667	use
O	36668	36671	JSR
O	36671	36672	-
O	36672	36675	308
O	36676	36681	style
O	36682	36693	annotations
O	36694	36696	to
O	36697	36705	indicate
O	36706	36713	whether
O	36714	36716	or
O	36717	36720	not
O	36721	36724	you
O	36725	36731	accept
O	36732	36736	null
O	36737	36743	values
O	36744	36748	into
O	36749	36752	the
O	36753	36761	function
O	36761	36762	.

O	36763	36767	Note
O	36768	36772	that
O	36773	36776	you
O	36776	36777	'
O	36777	36778	d
O	36779	36783	have
O	36784	36786	to
O	36787	36791	have
O	36792	36795	the
O	36796	36801	right
O	36802	36809	tooling
O	36810	36812	to
O	36813	36821	actually
O	36822	36830	identify
O	36831	36833	it
O	36833	36834	,
O	36835	36838	and
O	36839	36841	it
O	36841	36842	'
O	36842	36843	d
O	36844	36851	provide
O	36852	36856	more
O	36857	36859	of
O	36860	36861	a
O	36862	36868	static
O	36869	36874	check
O	36875	36879	than
O	36880	36882	an
O	36883	36894	enforceable
O	36895	36902	runtime
O	36903	36909	policy
O	36909	36910	,
O	36911	36914	but
O	36915	36917	it
O	36918	36923	would
O	36924	36928	help
O	36928	36929	.
O	36930	36936	public
O	36937	36940	int
O	36941	36959	calculateSomething
O	36959	36960	(
O	36960	36964	args
O	36964	36965	)
O	36966	36967	{
O	36967	36968	}

O	36970	36978	Question
O	36978	36979	-
O	36979	36987	31922866
O	36987	36988	,
O	36989	36995	answer
O	36995	36996	-
O	36996	37004	31923105

O	37005	37007	Oh
O	37007	37008	,
O	37009	37014	those
O	37015	37021	coding
O	37022	37028	styles
O	37029	37032	are
O	37033	37035	to
O	37036	37038	be
O	37039	37044	taken
O	37045	37049	with
O	37050	37051	a
O	37052	37055	bit
O	37056	37058	of
O	37059	37063	salt
O	37063	37064	.

O	37065	37066	#
O	37066	37068	li
O	37069	37070	(
O	37070	37071	+
O	37071	37072	)
O	37073	37080	Passing
O	37081	37083	an
O	37084	37090	Option
O	37091	37097	result
O	37098	37100	to
O	37101	37108	another
O	37109	37115	method
O	37115	37116	,
O	37117	37124	without
O	37125	37128	any
O	37129	37137	semantic
O	37138	37146	analysis
O	37146	37147	;
O	37148	37155	leaving
O	37156	37160	that
O	37161	37163	to
O	37164	37167	the
O	37168	37174	method
O	37174	37175	,
O	37176	37178	is
O	37179	37184	quite
O	37185	37192	alright
O	37192	37193	.

O	37194	37195	#
O	37195	37197	li
O	37198	37199	(
O	37199	37200	-
O	37200	37201	)
O	37202	37207	Using
B-api_mention	37208	37216	Optional
O	37217	37227	parameters
O	37228	37235	causing
O	37236	37247	conditional
O	37248	37253	logic
O	37254	37260	inside
O	37261	37264	the
O	37265	37272	methods
O	37273	37275	is
O	37276	37285	literally
O	37286	37292	contra
O	37292	37293	-
O	37293	37303	productive
O	37303	37304	.

O	37305	37306	#
O	37306	37308	li
O	37309	37310	(
O	37310	37311	-
O	37311	37312	)
O	37313	37320	Needing
O	37321	37323	to
O	37324	37328	pack
O	37329	37331	an
O	37332	37340	argument
O	37341	37343	in
O	37344	37346	an
B-api_mention	37347	37355	Optional
O	37355	37356	,
O	37357	37359	is
O	37360	37370	suboptimal
O	37371	37374	for
O	37375	37378	the
O	37379	37387	compiler
O	37387	37388	,
O	37389	37392	and
O	37393	37397	does
O	37398	37400	an
O	37401	37412	unnecessary
O	37413	37421	wrapping
O	37421	37422	.

O	37423	37424	#
O	37424	37426	li
O	37427	37428	(
O	37428	37429	-
O	37429	37430	)
O	37431	37433	In
O	37434	37444	comparison
O	37445	37447	to
O	37448	37456	nullable
O	37457	37467	parameters
B-api_mention	37468	37476	Optional
O	37477	37479	is
O	37480	37484	more
O	37485	37491	costly
O	37491	37492	.

O	37493	37495	In
O	37496	37503	general
O	37503	37504	:
B-api_mention	37505	37513	Optional
O	37514	37521	unifies
O	37522	37525	two
O	37526	37532	states
O	37532	37533	,
O	37534	37539	which
O	37540	37544	have
O	37545	37547	to
O	37548	37550	be
O	37551	37560	unraveled
O	37560	37561	.

O	37562	37567	Hence
O	37568	37574	better
O	37575	37581	suited
O	37582	37585	for
O	37586	37592	result
O	37593	37597	than
O	37598	37603	input
O	37603	37604	,
O	37605	37608	for
O	37609	37612	the
O	37613	37623	complexity
O	37624	37626	of
O	37627	37630	the
O	37631	37635	data
O	37636	37640	flow
O	37640	37641	.

O	37643	37651	Question
O	37651	37652	-
O	37652	37660	31922866
O	37660	37661	,
O	37662	37668	answer
O	37668	37669	-
O	37669	37677	31923211

O	37678	37682	This
O	37683	37689	advice
O	37690	37692	is
O	37693	37694	a
O	37695	37702	variant
O	37703	37705	of
O	37706	37709	the
O	37710	37711	"
O	37711	37713	be
O	37714	37716	as
O	37717	37727	unspecific
O	37728	37730	as
O	37731	37739	possible
O	37740	37749	regarding
O	37750	37756	inputs
O	37757	37760	and
O	37761	37763	as
O	37764	37772	specific
O	37773	37775	as
O	37776	37784	possible
O	37785	37794	regarding
O	37795	37802	outputs
O	37802	37803	"
O	37804	37808	rule
O	37809	37811	of
O	37812	37817	thumb
O	37817	37818	.

O	37819	37826	Usually
O	37827	37829	if
O	37830	37833	you
O	37834	37838	have
O	37839	37840	a
O	37841	37847	method
O	37848	37852	that
O	37853	37858	takes
O	37859	37860	a
O	37861	37866	plain
O	37867	37870	non
O	37870	37871	-
O	37871	37875	null
O	37876	37881	value
O	37881	37882	,
O	37883	37886	you
O	37887	37890	can
O	37891	37894	map
O	37895	37897	it
O	37898	37902	over
O	37903	37906	the
B-api_mention	37907	37915	Optional
O	37916	37917	,
O	37918	37920	so
O	37921	37924	the
O	37925	37930	plain
O	37931	37938	version
O	37939	37941	is
O	37942	37950	strictly
O	37951	37955	more
O	37956	37966	unspecific
O	37967	37976	regarding
O	37977	37983	inputs
O	37983	37984	.

O	37985	37992	However
O	37993	37998	there
O	37999	38002	are
O	38003	38004	a
O	38005	38010	bunch
O	38011	38013	of
O	38014	38022	possible
O	38023	38030	reasons
O	38031	38034	why
O	38035	38038	you
O	38039	38044	would
O	38045	38049	want
O	38050	38052	to
O	38053	38060	require
O	38061	38063	an
B-api_mention	38064	38072	Optional
O	38073	38081	argument
O	38082	38093	nonetheless
O	38093	38094	:
O	38095	38096	#
O	38096	38098	li
O	38099	38102	you
O	38103	38107	want
O	38108	38112	your
O	38113	38121	function
O	38122	38124	to
O	38125	38127	be
O	38128	38132	used
O	38133	38135	in
O	38136	38147	conjunction
O	38148	38152	with
O	38153	38160	another
O	38161	38164	API
O	38165	38169	that
O	38170	38177	returns
O	38178	38180	an
B-api_mention	38181	38189	Optional
O	38190	38191	#
O	38191	38193	li
O	38194	38198	Your
O	38199	38207	function
O	38208	38214	should
O	38215	38221	return
O	38222	38231	something
O	38232	38237	other
O	38238	38242	than
O	38243	38245	an
O	38246	38251	empty
B-api_mention	38252	38260	Optional
O	38261	38263	if
O	38264	38267	the
O	38268	38273	given
O	38274	38279	value
O	38280	38282	is
O	38283	38288	empty
O	38289	38290	#
O	38290	38292	li
O	38293	38296	You
O	38297	38302	think
B-api_mention	38303	38311	Optional
O	38312	38314	is
O	38315	38317	so
O	38318	38325	awesome
O	38326	38330	that
O	38331	38338	whoever
O	38339	38343	uses
O	38344	38348	your
O	38349	38352	API
O	38353	38359	should
O	38360	38362	be
O	38363	38371	required
O	38372	38374	to
O	38375	38380	learn
O	38381	38386	about
O	38387	38389	it
O	38390	38391	;
O	38391	38392	-
O	38392	38393	)

O	38395	38403	Question
O	38403	38404	-
O	38404	38412	31922866
O	38412	38413	,
O	38414	38420	answer
O	38420	38421	-
O	38421	38429	31923214

O	38430	38434	This
O	38435	38440	seems
O	38441	38442	a
O	38443	38446	bit
O	38447	38452	silly
O	38453	38455	to
O	38456	38458	me
O	38458	38459	,
O	38460	38463	but
O	38464	38467	the
O	38468	38472	only
O	38473	38479	reason
O	38480	38481	I
O	38482	38485	can
O	38486	38491	think
O	38492	38494	of
O	38495	38497	is
O	38498	38502	that
O	38503	38509	object
O	38510	38519	arguments
O	38520	38522	in
O	38523	38529	method
O	38530	38540	parameters
O	38541	38548	already
O	38549	38552	are
O	38553	38561	optional
O	38562	38564	in
O	38565	38566	a
O	38567	38570	way
O	38571	38572	-
O	38573	38577	they
O	38578	38581	can
O	38582	38584	be
O	38585	38589	null
O	38589	38590	.

O	38591	38600	Therefore
O	38601	38608	forcing
O	38609	38616	someone
O	38617	38619	to
O	38620	38624	take
O	38625	38627	an
O	38628	38636	existing
O	38637	38643	object
O	38644	38647	and
O	38648	38652	wrap
O	38653	38655	it
O	38656	38658	in
O	38659	38661	an
O	38662	38670	optional
O	38671	38673	is
O	38674	38678	sort
O	38679	38681	of
O	38682	38691	pointless
O	38691	38692	.

O	38693	38697	That
O	38698	38703	being
O	38704	38708	said
O	38708	38709	,
O	38710	38718	chaining
O	38719	38726	methods
O	38727	38735	together
O	38736	38740	that
O	38741	38745	take
O	38745	38746	/
O	38746	38752	return
O	38753	38762	optionals
O	38763	38765	is
O	38766	38767	a
O	38768	38778	reasonable
O	38779	38784	thing
O	38785	38787	to
O	38788	38790	do
O	38790	38791	,
O	38792	38793	e
O	38793	38794	.
O	38794	38795	g
O	38795	38796	.
O	38797	38802	Maybe
O	38803	38808	monad
O	38808	38809	.

O	38811	38819	Question
O	38819	38820	-
O	38820	38828	31922866
O	38828	38829	,
O	38830	38836	answer
O	38836	38837	-
O	38837	38845	31923227

O	38846	38855	Optionals
O	38856	38860	aren
O	38860	38861	'
O	38861	38862	t
O	38863	38871	designed
O	38872	38875	for
O	38876	38880	this
O	38881	38888	purpose
O	38888	38889	,
O	38890	38892	as
O	38893	38902	explained
O	38903	38909	nicely
O	38910	38912	by
O	38913	38918	Brian
O	38919	38924	Goetz
O	38925	38926	.

O	38927	38930	You
O	38931	38934	can
O	38935	38941	always
O	38942	38945	use
O	38946	38947	@
O	38947	38955	Nullable
O	38956	38958	to
O	38959	38965	denote
O	38966	38970	that
O	38971	38972	a
O	38973	38979	method
O	38980	38988	argument
O	38989	38992	can
O	38993	38995	be
O	38996	39000	null
O	39000	39001	.

O	39002	39007	Using
O	39008	39010	an
O	39011	39019	optional
O	39020	39024	does
O	39025	39028	not
O	39029	39035	really
O	39036	39042	enable
O	39043	39046	you
O	39047	39049	to
O	39050	39055	write
O	39056	39060	your
O	39061	39067	method
O	39068	39073	logic
O	39074	39078	more
O	39079	39085	neatly
O	39085	39086	.

O	39088	39096	Question
O	39096	39097	-
O	39097	39105	31922866
O	39105	39106	,
O	39107	39113	answer
O	39113	39114	-
O	39114	39122	31924845

O	39123	39128	There
O	39129	39132	are
O	39133	39139	almost
O	39140	39142	no
O	39143	39147	good
O	39148	39155	reasons
O	39156	39159	for
O	39160	39163	not
O	39164	39169	using
B-api_mention	39170	39178	Optional
O	39179	39181	as
O	39182	39192	parameters
O	39192	39193	.

O	39194	39197	The
O	39198	39207	arguments
O	39208	39215	against
O	39216	39220	this
O	39221	39225	rely
O	39226	39228	on
O	39229	39238	arguments
O	39239	39243	from
O	39244	39253	authority
O	39254	39255	(
O	39255	39258	see
O	39259	39264	Brian
O	39265	39270	Goetz
O	39271	39272	-
O	39273	39276	his
O	39277	39285	argument
O	39286	39288	is
O	39289	39291	we
O	39292	39295	can
O	39295	39296	'
O	39296	39297	t
O	39298	39305	enforce
O	39306	39309	non
O	39310	39314	null
O	39315	39324	optionals
O	39324	39325	)
O	39326	39328	or
O	39329	39333	that
O	39334	39337	the
B-api_mention	39338	39346	Optional
O	39347	39356	arguments
O	39357	39360	may
O	39361	39363	be
O	39364	39368	null
O	39369	39370	(
O	39370	39381	essentially
O	39382	39385	the
O	39386	39390	same
O	39391	39399	argument
O	39399	39400	)
O	39400	39401	.

O	39402	39404	Of
O	39405	39411	course
O	39411	39412	,
O	39413	39416	any
O	39417	39426	reference
O	39427	39429	in
O	39430	39434	Java
O	39435	39438	can
O	39439	39441	be
O	39442	39446	null
O	39446	39447	,
O	39448	39450	we
O	39451	39455	need
O	39456	39458	to
O	39459	39468	encourage
O	39469	39474	rules
O	39475	39480	being
O	39481	39489	enforced
O	39490	39492	by
O	39493	39496	the
O	39497	39505	compiler
O	39505	39506	,
O	39507	39510	not
O	39511	39522	programmers
O	39523	39529	memory
O	39530	39531	(
O	39531	39536	which
O	39537	39539	is
O	39540	39551	problematic
O	39552	39555	and
O	39556	39560	does
O	39561	39564	not
O	39565	39570	scale
O	39570	39571	)
O	39571	39572	.

O	39573	39583	Functional
O	39584	39595	programming
O	39596	39605	languages
O	39606	39615	encourage
B-api_mention	39616	39624	Optional
O	39625	39635	parameters
O	39635	39636	.

O	39637	39640	One
O	39641	39643	of
O	39644	39647	the
O	39648	39652	best
O	39653	39657	ways
O	39658	39660	of
O	39661	39666	using
O	39667	39671	this
O	39672	39674	is
O	39675	39677	to
O	39678	39682	have
O	39683	39691	multiple
O	39692	39700	optional
O	39701	39711	parameters
O	39712	39715	and
O	39716	39721	using
O	39722	39728	liftM2
O	39729	39731	to
O	39732	39735	use
O	39736	39737	a
O	39738	39746	function
O	39747	39755	assuming
O	39756	39759	the
O	39760	39770	parameters
O	39771	39774	are
O	39775	39778	not
O	39779	39784	empty
O	39785	39788	and
O	39789	39798	returning
O	39799	39801	an
O	39802	39810	optional
O	39811	39812	(
O	39812	39815	see
O	39816	39817	#
O	39817	39818	a
O	39819	39820	)
O	39820	39821	.

O	39822	39826	Java
O	39827	39828	8
O	39829	39832	has
O	39833	39846	unfortunately
O	39847	39858	implemented
O	39859	39860	a
O	39861	39865	very
O	39866	39873	limited
O	39874	39881	library
O	39882	39892	supporting
O	39893	39901	optional
O	39901	39902	.

O	39903	39905	As
O	39906	39910	Java
O	39911	39922	programmers
O	39923	39925	we
O	39926	39932	should
O	39933	39937	only
O	39938	39940	be
O	39941	39946	using
O	39947	39951	null
O	39952	39954	to
O	39955	39963	interact
O	39964	39968	with
O	39969	39975	legacy
O	39976	39985	libraries
O	39985	39986	.

O	39988	39996	Question
O	39996	39997	-
O	39997	40005	31922866
O	40005	40006	,
O	40007	40013	answer
O	40013	40014	-
O	40014	40022	39005452

O	40023	40026	The
O	40027	40031	best
O	40032	40036	post
O	40037	40038	I
O	40038	40039	'
O	40039	40041	ve
O	40042	40046	seen
O	40047	40049	on
O	40050	40053	the
O	40054	40059	topic
O	40060	40063	was
O	40064	40071	written
O	40072	40074	by
O	40075	40081	Daniel
O	40082	40091	Olszewski
O	40092	40095	and
O	40096	40099	can
O	40100	40102	be
O	40103	40108	found
O	40109	40111	at
O	40112	40113	#
O	40113	40114	a
O	40115	40116	.

O	40117	40122	While
O	40123	40129	others
O	40130	40137	mention
O	40138	40142	when
O	40143	40146	you
O	40147	40153	should
O	40154	40156	or
O	40157	40163	should
O	40164	40167	not
O	40168	40171	use
B-api_mention	40172	40180	Optional
O	40180	40181	,
O	40182	40186	this
O	40187	40191	post
O	40192	40200	actually
O	40201	40209	explains
O	40210	40213	why
O	40214	40215	.

O	40216	40221	Cross
O	40221	40222	-
O	40222	40229	posting
O	40230	40234	here
O	40235	40237	in
O	40238	40242	case
O	40243	40246	the
O	40247	40251	link
O	40252	40256	goes
O	40257	40261	down
O	40261	40262	:
O	40263	40264	#
O	40264	40274	blockquote

O	40276	40284	Question
O	40284	40285	-
O	40285	40293	32693704
O	40293	40294	,
O	40295	40301	answer
O	40301	40302	-
O	40302	40310	32744190

O	40311	40316	There
O	40317	40319	is
O	40320	40322	no
O	40323	40329	actual
O	40330	40340	difference
O	40341	40343	in
O	40344	40347	the
O	40348	40361	functionality
O	40362	40369	between
O	40370	40373	the
O	40374	40375	2
O	40376	40383	version
O	40383	40384	'
O	40384	40385	s
O	40386	40390	loop
O	40390	40391	.

B-api_mention	40392	40398	Arrays
I-api_mention	40398	40399	.
I-api_mention	40399	40403	fill
O	40404	40408	does
O	40409	40412	the
O	40413	40418	exact
O	40419	40423	same
O	40424	40429	thing
O	40429	40430	.

O	40431	40433	So
O	40434	40437	the
O	40438	40444	choice
O	40445	40447	to
O	40448	40451	use
O	40452	40454	it
O	40455	40457	or
O	40458	40461	not
O	40462	40465	may
O	40466	40469	not
O	40470	40481	necessarily
O	40482	40484	be
O	40485	40495	considered
O	40496	40497	a
O	40498	40505	mistake
O	40505	40506	.

O	40507	40509	It
O	40510	40512	is
O	40513	40517	left
O	40518	40520	up
O	40521	40523	to
O	40524	40527	the
O	40528	40537	developer
O	40538	40540	to
O	40541	40547	decide
O	40548	40552	when
O	40553	40555	it
O	40556	40561	comes
O	40562	40564	to
O	40565	40569	this
O	40570	40574	kind
O	40575	40577	of
O	40578	40593	micromanagement
O	40593	40594	.

O	40595	40600	There
O	40601	40604	are
O	40605	40606	2
O	40607	40615	separate
O	40616	40624	concerns
O	40625	40628	for
O	40629	40633	each
O	40634	40642	approach
O	40642	40643	:
O	40644	40645	#
O	40645	40647	li
O	40648	40653	using
O	40654	40657	the
B-api_mention	40658	40664	Arrays
I-api_mention	40664	40665	.
I-api_mention	40665	40669	fill
O	40670	40675	makes
O	40676	40679	the
O	40680	40684	code
O	40685	40689	less
O	40690	40697	verbose
O	40698	40701	and
O	40702	40706	more
O	40707	40715	readable
O	40715	40716	.

O	40717	40718	#
O	40718	40720	li
O	40721	40728	looping
O	40729	40737	directly
O	40738	40740	in
O	40741	40744	the
B-api_mention	40745	40752	HashMap
O	40753	40757	code
O	40758	40759	(
O	40759	40763	like
O	40764	40771	version
O	40772	40773	8
O	40773	40774	)
O	40775	40785	peformance
O	40786	40790	wise
O	40791	40793	is
O	40794	40802	actually
O	40803	40804	a
O	40805	40811	better
O	40812	40818	option
O	40818	40819	.

O	40820	40825	While
O	40826	40829	the
O	40830	40838	overhead
O	40839	40843	that
O	40844	40853	inserting
O	40854	40857	the
B-api_mention	40858	40864	Arrays
O	40865	40870	class
O	40871	40873	is
O	40874	40884	negligible
O	40885	40887	it
O	40888	40891	may
O	40892	40898	become
O	40899	40903	less
O	40904	40906	so
O	40907	40911	when
O	40912	40914	it
O	40915	40920	comes
O	40921	40923	to
O	40924	40933	something
O	40934	40936	as
O	40937	40947	widespread
O	40948	40950	as
B-api_mention	40951	40958	HashMap
O	40959	40964	where
O	40965	40970	every
O	40971	40974	bit
O	40975	40977	of
O	40978	40989	performance
O	40990	41001	enhancement
O	41002	41005	has
O	41006	41007	a
O	41008	41013	large
O	41014	41020	effect
O	41020	41021	(
O	41021	41028	imagine
O	41029	41032	the
O	41033	41040	tiniest
O	41041	41050	footprint
O	41051	41057	reduce
O	41058	41060	of
O	41061	41062	a
B-api_mention	41063	41070	HashMap
O	41071	41073	in
O	41074	41083	fullblown
O	41084	41090	webapp
O	41090	41091	)
O	41091	41092	.

O	41093	41097	Take
O	41098	41102	into
O	41103	41116	consideration
O	41117	41120	the
O	41121	41125	fact
O	41126	41130	that
O	41131	41134	the
B-api_mention	41135	41141	Arrays
O	41142	41147	class
O	41148	41151	was
O	41152	41156	used
O	41157	41161	only
O	41162	41165	for
O	41166	41170	this
O	41171	41174	one
O	41175	41179	loop
O	41179	41180	.

O	41181	41184	The
O	41185	41191	change
O	41192	41194	is
O	41195	41200	small
O	41201	41207	enough
O	41208	41212	that
O	41213	41215	it
O	41216	41221	doesn
O	41221	41222	'
O	41222	41223	t
O	41224	41228	make
O	41229	41232	the
O	41233	41238	clear
O	41239	41245	method
O	41246	41250	less
O	41251	41259	readable
O	41259	41260	.

O	41261	41264	The
O	41265	41272	precise
O	41273	41279	reason
O	41280	41283	can
O	41283	41284	'
O	41284	41285	t
O	41286	41288	be
O	41289	41294	found
O	41295	41298	out
O	41299	41306	without
O	41307	41313	asking
O	41314	41317	the
O	41318	41327	developer
O	41328	41331	who
O	41332	41340	actually
O	41341	41344	did
O	41345	41349	this
O	41349	41350	,
O	41351	41358	however
O	41359	41360	i
O	41361	41368	suspect
O	41369	41371	it
O	41371	41372	'
O	41372	41373	s
O	41374	41380	either
O	41381	41382	a
O	41383	41390	mistake
O	41391	41393	or
O	41394	41395	a
O	41396	41401	small
O	41402	41413	enhancement
O	41413	41414	.
O	41415	41421	better
O	41422	41428	option
O	41428	41429	.

O	41430	41432	My
O	41433	41440	opinion
O	41441	41443	is
O	41444	41446	it
O	41447	41450	can
O	41451	41453	be
O	41454	41464	considered
O	41465	41467	an
O	41468	41479	enhancement
O	41479	41480	,
O	41481	41485	even
O	41486	41488	if
O	41489	41493	only
O	41494	41496	by
O	41497	41505	accident
O	41505	41506	.

O	41508	41516	Question
O	41516	41517	-
O	41517	41525	32693704
O	41525	41526	,
O	41527	41533	answer
O	41533	41534	-
O	41534	41542	32745612

O	41543	41546	For
O	41547	41549	me
O	41549	41550	,
O	41551	41554	the
O	41555	41561	reason
O	41562	41564	is
O	41565	41566	a
O	41567	41573	likely
O	41574	41585	performance
O	41586	41597	inprovement
O	41597	41598	,
O	41599	41601	at
O	41602	41603	a
O	41604	41614	negligible
O	41615	41619	cost
O	41620	41622	in
O	41623	41628	terms
O	41629	41631	of
O	41632	41636	code
O	41637	41644	clarity
O	41644	41645	.

O	41646	41650	Note
O	41651	41655	that
O	41656	41659	the
O	41660	41674	implementation
O	41675	41677	of
O	41678	41681	the
O	41682	41686	fill
O	41687	41693	method
O	41694	41696	is
O	41697	41704	trivial
O	41704	41705	,
O	41706	41707	a
O	41708	41714	simple
O	41715	41718	for
O	41718	41719	-
O	41719	41723	loop
O	41724	41731	setting
O	41732	41736	each
O	41737	41742	array
O	41743	41750	element
O	41751	41753	to
O	41754	41758	null
O	41758	41759	.

O	41760	41762	So
O	41762	41763	,
O	41764	41773	replacing
O	41774	41775	a
O	41776	41780	call
O	41781	41783	to
O	41784	41786	it
O	41787	41791	with
O	41792	41795	the
O	41796	41802	actual
O	41803	41817	implementation
O	41818	41822	does
O	41823	41826	not
O	41827	41832	cause
O	41833	41836	any
O	41837	41848	significant
O	41849	41860	degradation
O	41861	41863	in
O	41864	41867	the
O	41868	41875	clarity
O	41875	41876	/
O	41876	41887	conciseness
O	41888	41890	of
O	41891	41894	the
O	41895	41901	caller
O	41902	41908	method
O	41908	41909	.

O	41910	41913	The
O	41914	41923	potential
O	41924	41935	performance
O	41936	41944	benefits
O	41945	41948	are
O	41949	41952	not
O	41953	41955	so
O	41956	41969	insignificant
O	41969	41970	,
O	41971	41973	if
O	41974	41977	you
O	41978	41986	consider
O	41987	41997	everything
O	41998	42002	that
O	42003	42005	is
O	42006	42014	involved
O	42014	42015	:
O	42016	42017	#
O	42017	42019	li
O	42020	42025	There
O	42026	42030	will
O	42031	42033	be
O	42034	42036	no
O	42037	42041	need
O	42042	42045	for
O	42046	42049	the
O	42050	42053	JVM
O	42054	42056	to
O	42057	42064	resolve
O	42065	42068	the
B-api_mention	42069	42075	Arrays
O	42076	42081	class
O	42081	42082	,
O	42083	42087	plus
O	42088	42095	loading
O	42096	42099	and
O	42100	42112	initializing
O	42113	42115	it
O	42116	42118	if
O	42119	42125	needed
O	42125	42126	.

O	42127	42131	This
O	42132	42134	is
O	42135	42136	a
O	42137	42140	non
O	42140	42141	-
O	42141	42148	trivial
O	42149	42156	process
O	42157	42162	where
O	42163	42166	the
O	42167	42170	JVM
O	42171	42179	performs
O	42180	42187	several
O	42188	42193	steps
O	42193	42194	.

O	42195	42202	Firstly
O	42202	42203	,
O	42204	42206	it
O	42207	42213	checks
O	42214	42217	the
O	42218	42223	class
O	42224	42230	loader
O	42231	42233	to
O	42234	42237	see
O	42238	42240	if
O	42241	42244	the
O	42245	42250	class
O	42251	42253	is
O	42254	42261	already
O	42262	42268	loaded
O	42268	42269	,
O	42270	42273	and
O	42274	42278	this
O	42279	42286	happens
O	42287	42292	every
O	42293	42297	time
O	42298	42299	a
O	42300	42306	method
O	42307	42309	is
O	42310	42316	called
O	42316	42317	;
O	42318	42323	there
O	42324	42327	are
O	42328	42341	optimizations
O	42342	42350	involved
O	42351	42355	here
O	42355	42356	,
O	42357	42359	of
O	42360	42366	course
O	42366	42367	,
O	42368	42371	but
O	42372	42374	it
O	42375	42380	still
O	42381	42386	takes
O	42387	42391	some
O	42392	42398	effort
O	42398	42399	.

O	42400	42402	If
O	42403	42406	the
O	42407	42412	class
O	42413	42415	is
O	42416	42419	not
O	42420	42426	loaded
O	42426	42427	,
O	42428	42431	the
O	42432	42435	JVM
O	42436	42440	will
O	42441	42445	need
O	42446	42448	to
O	42449	42451	go
O	42452	42459	through
O	42460	42463	the
O	42464	42473	expensive
O	42474	42481	process
O	42482	42484	of
O	42485	42492	loading
O	42493	42495	it
O	42495	42496	,
O	42497	42506	verifying
O	42507	42510	the
O	42511	42519	bytecode
O	42519	42520	,
O	42521	42530	resolving
O	42531	42536	other
O	42537	42546	necessary
O	42547	42559	dependencies
O	42559	42560	,
O	42561	42564	and
O	42565	42572	finally
O	42573	42583	performing
O	42584	42590	static
O	42591	42605	initialization
O	42606	42608	of
O	42609	42612	the
O	42613	42618	class
O	42619	42620	(
O	42620	42625	which
O	42626	42629	can
O	42630	42632	be
O	42633	42644	arbitrarily
O	42645	42654	expensive
O	42654	42655	)
O	42655	42656	.

O	42657	42662	Given
O	42663	42667	that
B-api_mention	42668	42675	HashMap
O	42676	42678	is
O	42679	42683	such
O	42684	42685	a
O	42686	42690	core
O	42691	42696	class
O	42696	42697	,
O	42698	42701	and
O	42702	42706	that
B-api_mention	42707	42713	Arrays
O	42714	42716	is
O	42717	42721	such
O	42722	42723	a
O	42724	42728	huge
O	42729	42734	class
O	42735	42736	(
O	42736	42740	3600
O	42740	42741	+
O	42742	42747	lines
O	42747	42748	)
O	42748	42749	,
O	42750	42758	avoiding
O	42759	42764	these
O	42765	42770	costs
O	42771	42774	may
O	42775	42778	add
O	42779	42781	up
O	42782	42784	to
O	42785	42795	noticeable
O	42796	42803	savings
O	42803	42804	.

O	42805	42806	#
O	42806	42808	li
O	42809	42814	Since
O	42815	42820	there
O	42821	42823	is
O	42824	42826	no
B-api_mention	42827	42833	Arrays
I-api_mention	42833	42834	.
I-api_mention	42834	42838	fill
I-api_mention	42838	42839	(
I-api_mention	42839	42843	args
I-api_mention	42843	42844	)
O	42845	42851	method
O	42852	42856	call
O	42856	42857	,
O	42858	42861	the
O	42862	42865	JVM
O	42866	42869	won
O	42869	42870	'
O	42870	42871	t
O	42872	42876	have
O	42877	42879	to
O	42880	42886	decide
O	42887	42894	whether
O	42894	42895	/
O	42895	42899	when
O	42900	42902	to
O	42903	42909	inline
O	42910	42913	the
O	42914	42920	method
O	42921	42925	into
O	42926	42929	the
O	42930	42936	caller
O	42936	42937	'
O	42937	42938	s
O	42939	42943	body
O	42943	42944	.

O	42945	42950	Since
B-api_mention	42951	42958	HashMap
I-api_mention	42958	42959	#
I-api_mention	42959	42964	clear
I-api_mention	42964	42965	(
I-api_mention	42965	42969	args
I-api_mention	42969	42970	)
O	42971	42976	tends
O	42977	42979	to
O	42980	42983	get
O	42984	42990	called
O	42991	42992	a
O	42993	42996	lot
O	42996	42997	,
O	42998	43001	the
O	43002	43005	JVM
O	43006	43010	will
O	43011	43021	eventually
O	43022	43029	perform
O	43030	43033	the
O	43034	43042	inlining
O	43042	43043	,
O	43044	43049	which
O	43050	43058	requires
O	43059	43062	JIT
O	43063	43076	recompilation
O	43077	43079	of
O	43080	43083	the
O	43084	43089	clear
O	43090	43096	method
O	43096	43097	.

O	43098	43102	With
O	43103	43105	no
O	43106	43112	method
O	43113	43118	calls
O	43118	43119	,
O	43120	43125	clear
O	43126	43130	will
O	43131	43137	always
O	43138	43141	run
O	43142	43144	at
O	43145	43148	top
O	43148	43149	-
O	43149	43154	speed
O	43155	43156	(
O	43156	43160	once
O	43161	43170	initially
O	43171	43176	JITed
O	43176	43177	)
O	43177	43178	.

O	43179	43186	Another
O	43187	43194	benefit
O	43195	43197	of
O	43198	43200	no
O	43201	43207	longer
O	43208	43215	calling
O	43216	43223	methods
O	43224	43226	in
B-api_mention	43227	43233	Arrays
O	43234	43236	is
O	43237	43241	that
O	43242	43244	it
O	43245	43255	simplifies
O	43256	43259	the
O	43260	43270	dependency
O	43271	43276	graph
O	43277	43283	inside
O	43284	43287	the
O	43288	43292	java
O	43292	43293	.
O	43293	43297	util
O	43298	43305	package
O	43305	43306	,
O	43307	43312	since
O	43313	43316	one
O	43317	43327	dependency
O	43328	43330	is
O	43331	43338	removed
O	43338	43339	.

O	43341	43349	Question
O	43349	43350	-
O	43350	43358	32693704
O	43358	43359	,
O	43360	43366	answer
O	43366	43367	-
O	43367	43375	32749756

O	43376	43377	I
O	43377	43378	'
O	43378	43379	m
O	43380	43385	going
O	43386	43388	to
O	43389	43394	shoot
O	43395	43397	in
O	43398	43401	the
O	43402	43406	dark
O	43407	43411	here
O	43411	43412	.
O	43412	43413	.
O	43413	43414	.

O	43415	43417	My
O	43418	43423	guess
O	43424	43426	is
O	43427	43431	that
O	43432	43434	it
O	43435	43440	might
O	43441	43445	have
O	43446	43450	been
O	43451	43458	changed
O	43459	43461	in
O	43462	43467	order
O	43468	43470	to
O	43471	43478	prepare
O	43479	43482	the
O	43483	43489	ground
O	43490	43493	for
O	43494	43508	Specialization
O	43509	43510	(
O	43510	43513	aka
O	43514	43522	generics
O	43523	43527	over
O	43528	43537	primitive
O	43538	43543	types
O	43543	43544	)
O	43544	43545	.

O	43546	43551	Maybe
O	43552	43553	(
O	43553	43556	and
O	43557	43558	I
O	43559	43565	insist
O	43566	43568	on
O	43569	43574	maybe
O	43575	43576	)
O	43576	43577	,
O	43578	43582	this
O	43583	43589	change
O	43590	43592	is
O	43593	43598	meant
O	43599	43601	to
O	43602	43606	make
O	43607	43617	transition
O	43618	43620	to
O	43621	43625	Java
O	43626	43628	10
O	43629	43635	easier
O	43635	43636	,
O	43637	43639	in
O	43640	43643	the
O	43644	43649	event
O	43650	43652	of
O	43653	43667	specialization
O	43668	43673	being
O	43674	43678	part
O	43679	43681	of
O	43682	43685	the
O	43686	43689	JDK
O	43689	43690	.

O	43691	43693	If
O	43694	43697	you
O	43698	43702	look
O	43703	43705	at
O	43706	43709	the
O	43710	43715	State
O	43716	43718	of
O	43719	43722	the
O	43723	43737	Specialization
O	43738	43746	document
O	43747	43748	,
O	43749	43757	Language
O	43758	43770	restrictions
O	43771	43778	section
O	43778	43779	,
O	43780	43782	it
O	43783	43787	says
O	43788	43791	the
O	43792	43801	following
O	43801	43802	:
O	43803	43804	#
O	43804	43814	blockquote
O	43815	43816	(
O	43816	43824	Emphasis
O	43825	43827	is
O	43828	43832	mine
O	43832	43833	)
O	43833	43834	.

O	43835	43838	And
O	43839	43844	ahead
O	43845	43847	in
O	43848	43851	the
O	43852	43863	Specializer
O	43864	43879	transformations
O	43880	43887	section
O	43887	43888	,
O	43889	43891	it
O	43892	43896	says
O	43896	43897	:
O	43898	43899	#
O	43899	43909	blockquote
O	43910	43915	Later
O	43916	43918	on
O	43918	43919	,
O	43920	43924	near
O	43925	43928	the
O	43929	43932	end
O	43933	43935	of
O	43936	43939	the
O	43940	43948	document
O	43948	43949	,
O	43950	43952	in
O	43953	43956	the
O	43957	43964	Further
O	43965	43978	investigation
O	43979	43986	section
O	43986	43987	,
O	43988	43990	it
O	43991	43995	says
O	43995	43996	:
O	43997	43998	#
O	43998	44008	blockquote
O	44009	44012	Now
O	44012	44013	,
O	44014	44023	regarding
O	44024	44027	the
O	44028	44034	change
O	44034	44035	.
O	44035	44036	.
O	44036	44037	.

O	44038	44040	If
O	44041	44044	the
B-api_mention	44045	44051	Arrays
I-api_mention	44051	44052	.
I-api_mention	44052	44056	fill
I-api_mention	44056	44057	(
I-api_mention	44057	44061	args
I-api_mention	44061	44062	)
O	44063	44069	method
O	44070	44072	is
O	44073	44078	going
O	44079	44081	to
O	44082	44084	be
O	44085	44096	specialized
O	44096	44097	,
O	44098	44102	then
O	44103	44106	its
O	44107	44116	signature
O	44117	44123	should
O	44124	44130	change
O	44131	44133	to
B-api_mention	44134	44140	Arrays
I-api_mention	44140	44141	.
I-api_mention	44141	44145	fill
I-api_mention	44145	44146	(
I-api_mention	44146	44150	args
I-api_mention	44150	44151	)
O	44152	44153	.

O	44154	44161	However
O	44162	44166	this
O	44167	44171	case
O	44172	44174	is
O	44175	44187	specifically
O	44188	44194	listed
O	44195	44197	in
O	44198	44201	the
O	44202	44203	(
O	44203	44210	already
O	44211	44220	mentioned
O	44220	44221	)
O	44222	44230	Language
O	44231	44243	restrictions
O	44244	44251	section
O	44252	44253	(
O	44253	44255	it
O	44256	44261	would
O	44262	44269	violate
O	44270	44273	the
O	44274	44284	emphasized
O	44285	44290	items
O	44290	44291	)
O	44291	44292	.

O	44293	44295	So
O	44296	44301	maybe
O	44302	44309	someone
O	44310	44317	decided
O	44318	44322	that
O	44323	44325	it
O	44326	44331	would
O	44332	44334	be
O	44335	44341	better
O	44342	44344	to
O	44345	44348	not
O	44349	44352	use
O	44353	44355	it
O	44356	44360	from
O	44361	44364	the
B-api_mention	44365	44372	HashMap
I-api_mention	44372	44373	.
I-api_mention	44373	44378	clear
I-api_mention	44378	44379	(
I-api_mention	44379	44383	args
I-api_mention	44383	44384	)
O	44385	44391	method
O	44391	44392	,
O	44393	44403	especially
O	44404	44406	if
O	44407	44412	value
O	44413	44415	is
O	44416	44420	null
O	44421	44422	.

O	44424	44432	Question
O	44432	44433	-
O	44433	44441	32693704
O	44441	44442	,
O	44443	44449	answer
O	44449	44450	-
O	44450	44458	32752970

O	44459	44460	I
O	44461	44465	will
O	44466	44469	try
O	44470	44472	to
O	44473	44482	summarize
O	44483	44488	three
O	44489	44497	moreless
O	44498	44508	reasonable
O	44509	44517	versions
O	44518	44523	which
O	44524	44528	were
O	44529	44537	proposed
O	44538	44540	in
O	44541	44549	comments
O	44549	44550	.

O	44551	44552	@
O	44552	44558	Holger
O	44559	44563	says
O	44564	44565	:
O	44566	44567	#
O	44567	44577	blockquote
O	44578	44582	This
O	44583	44585	is
O	44586	44589	the
O	44590	44594	most
O	44595	44599	easy
O	44600	44605	thing
O	44606	44608	to
O	44609	44613	test
O	44613	44614	.

O	44615	44618	Let
O	44618	44619	'
O	44619	44620	s
O	44621	44628	compile
O	44629	44633	such
O	44634	44641	program
O	44641	44642	:
O	44643	44644	#
O	44644	44647	pre
O	44648	44651	Run
O	44652	44654	it
O	44655	44659	with
O	44660	44664	java
O	44665	44666	-
O	44666	44673	verbose
O	44673	44674	:
O	44674	44679	class
O	44680	44691	HashMapTest
O	44692	44693	.

O	44694	44698	This
O	44699	44703	will
O	44704	44709	print
O	44710	44713	the
O	44714	44719	class
O	44720	44727	loading
O	44728	44734	events
O	44735	44737	as
O	44738	44742	they
O	44743	44748	occur
O	44748	44749	.

O	44750	44754	With
O	44755	44758	JDK
O	44759	44760	1
O	44760	44761	.
O	44761	44762	8
O	44762	44763	.
O	44763	44764	0
O	44764	44765	_
O	44765	44767	60
O	44768	44769	I
O	44770	44773	see
O	44774	44778	more
O	44779	44783	than
O	44784	44787	400
O	44788	44795	classes
O	44796	44802	loaded
O	44802	44803	:
O	44804	44805	#
O	44805	44808	pre
O	44809	44811	As
O	44812	44815	you
O	44816	44819	can
O	44820	44823	see
O	44823	44824	,
B-api_mention	44825	44832	HashMap
O	44833	44835	is
O	44836	44842	loaded
O	44843	44847	long
O	44848	44854	before
O	44855	44866	application
O	44867	44871	code
O	44872	44875	and
B-api_mention	44876	44882	Arrays
O	44883	44885	is
O	44886	44892	loaded
O	44893	44897	only
O	44898	44900	14
O	44901	44908	classes
O	44909	44914	after
B-api_mention	44915	44922	HashMap
O	44923	44924	.

O	44925	44928	The
B-api_mention	44929	44936	HashMap
O	44937	44941	load
O	44942	44944	is
O	44945	44954	triggered
O	44955	44957	by
B-api_mention	44958	44961	sun
I-api_mention	44961	44962	.
I-api_mention	44962	44969	reflect
I-api_mention	44969	44970	.
I-api_mention	44970	44980	Reflection
O	44981	44995	initialization
O	44996	44998	as
O	44999	45001	it
O	45002	45005	has
B-api_mention	45006	45013	HashMap
O	45014	45020	static
O	45021	45027	fields
O	45027	45028	.

O	45029	45032	The
B-api_mention	45033	45039	Arrays
O	45040	45044	load
O	45045	45047	is
O	45048	45054	likely
O	45055	45057	to
O	45058	45060	be
O	45061	45070	triggered
O	45071	45073	by
O	45074	45085	WeakHashMap
O	45086	45090	load
O	45091	45096	which
O	45097	45105	actually
O	45106	45109	has
B-api_mention	45110	45116	Arrays
I-api_mention	45116	45117	.
I-api_mention	45117	45121	fill
O	45122	45124	in
O	45125	45128	the
B-api_mention	45129	45134	clear
I-api_mention	45134	45135	(
I-api_mention	45135	45139	args
I-api_mention	45139	45140	)
O	45141	45147	method
O	45147	45148	.

O	45149	45152	The
B-api_mention	45153	45164	WeakHashMap
O	45165	45169	load
O	45170	45172	is
O	45173	45182	triggered
O	45183	45185	by
B-api_mention	45186	45190	java
I-api_mention	45190	45191	.
I-api_mention	45191	45195	lang
I-api_mention	45195	45196	.
I-api_mention	45196	45206	ClassValue
I-api_mention	45206	45207	$
I-api_mention	45207	45220	ClassValueMap
O	45221	45226	which
O	45227	45234	extends
B-api_mention	45235	45246	WeakHashMap
O	45247	45248	.

O	45249	45252	The
B-api_mention	45253	45266	ClassValueMap
O	45267	45269	is
O	45270	45277	present
O	45278	45280	in
O	45281	45286	every
B-api_mention	45287	45291	java
I-api_mention	45291	45292	.
I-api_mention	45292	45296	lang
I-api_mention	45296	45297	.
I-api_mention	45297	45302	Class
O	45303	45311	instance
O	45311	45312	.

O	45313	45315	So
O	45316	45318	to
O	45319	45321	me
O	45322	45327	seems
O	45328	45332	that
O	45333	45340	without
B-api_mention	45341	45347	Arrays
O	45348	45353	class
O	45354	45357	the
O	45358	45361	JDK
O	45362	45368	cannot
O	45369	45371	be
O	45372	45383	initialized
O	45384	45386	at
O	45387	45390	all
O	45390	45391	.

O	45392	45396	Also
O	45397	45400	the
B-api_mention	45401	45407	Arrays
O	45408	45414	static
O	45415	45426	initializer
O	45427	45429	is
O	45430	45434	very
O	45435	45440	short
O	45440	45441	,
O	45442	45444	it
O	45445	45449	only
O	45450	45461	initializes
O	45462	45465	the
O	45466	45475	assertion
O	45476	45485	mechanism
O	45485	45486	.

O	45487	45491	This
O	45492	45501	mechanism
O	45502	45504	is
O	45505	45509	used
O	45510	45512	in
O	45513	45517	many
O	45518	45523	other
O	45524	45531	classes
O	45532	45533	(
O	45533	45542	including
O	45542	45543	,
O	45544	45547	for
O	45548	45555	example
O	45555	45556	,
B-api_mention	45557	45561	java
I-api_mention	45561	45562	.
I-api_mention	45562	45566	lang
I-api_mention	45566	45567	.
I-api_mention	45567	45576	Throwable
O	45577	45582	which
O	45583	45585	is
O	45586	45592	loaded
O	45593	45597	very
O	45598	45603	early
O	45603	45604	)
O	45604	45605	.

O	45606	45608	No
O	45609	45614	other
O	45615	45621	static
O	45622	45636	initialization
O	45637	45642	steps
O	45643	45646	are
O	45647	45656	performed
O	45657	45659	in
B-api_mention	45660	45664	java
I-api_mention	45664	45665	.
I-api_mention	45665	45669	util
I-api_mention	45669	45670	.
I-api_mention	45670	45676	Arrays
O	45677	45678	.

O	45679	45683	Thus
O	45684	45685	@
O	45685	45691	Holger
O	45692	45699	version
O	45700	45705	seems
O	45706	45715	incorrect
O	45716	45718	to
O	45719	45721	me
O	45721	45722	.

O	45723	45727	Here
O	45728	45730	we
O	45731	45735	also
O	45736	45741	found
O	45742	45746	very
O	45747	45758	interesting
O	45759	45764	thing
O	45764	45765	.

O	45766	45769	The
B-api_mention	45770	45781	WeakHashMap
I-api_mention	45781	45782	.
I-api_mention	45782	45787	clear
I-api_mention	45787	45788	(
I-api_mention	45788	45792	args
I-api_mention	45792	45793	)
O	45794	45799	still
O	45800	45804	uses
B-api_mention	45805	45811	Arrays
I-api_mention	45811	45812	.
I-api_mention	45812	45816	fill
O	45817	45818	.

O	45819	45821	It
O	45821	45822	'
O	45822	45823	s
O	45824	45835	interesting
O	45836	45840	when
O	45841	45843	it
O	45844	45852	appeared
O	45853	45858	there
O	45858	45859	,
O	45860	45863	but
O	45864	45877	unfortunately
O	45878	45882	this
O	45883	45887	goes
O	45888	45890	to
O	45891	45902	prehistoric
O	45903	45908	times
O	45909	45910	(
O	45910	45912	it
O	45913	45916	was
O	45917	45924	already
O	45925	45930	there
O	45931	45933	in
O	45934	45937	the
O	45938	45942	very
O	45943	45948	first
O	45949	45955	public
O	45956	45963	OpenJDK
O	45964	45974	repository
O	45974	45975	)
O	45975	45976	.

O	45977	45981	Next
O	45981	45982	,
O	45983	45984	@
O	45984	45997	MarcoTopolnik
O	45998	46002	says
O	46003	46004	:
O	46005	46006	#
O	46006	46016	blockquote
O	46017	46019	It
O	46020	46023	was
O	46024	46032	actually
O	46033	46043	surprising
O	46044	46047	for
O	46048	46050	me
O	46051	46055	that
B-api_mention	46056	46062	Arrays
I-api_mention	46062	46063	.
I-api_mention	46063	46067	fill
O	46068	46070	is
O	46071	46074	not
O	46075	46083	directly
O	46084	46096	intrinsified
O	46097	46098	(
O	46098	46101	see
O	46102	46111	intrinsic
O	46112	46116	list
O	46117	46126	generated
O	46127	46129	by
O	46130	46131	@
O	46131	46138	apangin
O	46139	46140	)
O	46140	46141	.

O	46142	46147	Seems
O	46148	46152	that
O	46153	46157	such
O	46158	46162	loop
O	46163	46166	can
O	46167	46169	be
O	46170	46180	recognized
O	46181	46184	and
O	46185	46195	vectorized
O	46196	46198	by
O	46199	46202	JVM
O	46203	46210	without
O	46211	46219	explicit
O	46220	46229	intrinsic
O	46230	46238	handling
O	46238	46239	.

O	46240	46242	So
O	46243	46245	it
O	46245	46246	'
O	46246	46247	s
O	46248	46252	true
O	46253	46257	that
O	46258	46263	extra
O	46264	46268	call
O	46269	46272	can
O	46273	46275	be
O	46276	46279	not
O	46280	46287	inlined
O	46288	46290	in
O	46291	46295	very
O	46296	46304	specific
O	46305	46310	cases
O	46311	46312	(
O	46312	46315	for
O	46316	46323	example
O	46324	46326	if
O	46327	46341	MaxInlineLevel
O	46342	46347	limit
O	46348	46350	is
O	46351	46358	reached
O	46358	46359	)
O	46359	46360	.

O	46361	46363	On
O	46364	46367	the
O	46368	46373	other
O	46374	46378	hand
O	46379	46381	it
O	46381	46382	'
O	46382	46383	s
O	46384	46388	very
O	46389	46393	rare
O	46394	46403	situation
O	46404	46407	and
O	46408	46410	it
O	46410	46411	'
O	46411	46412	s
O	46413	46417	only
O	46418	46419	a
O	46420	46426	single
O	46427	46431	call
O	46431	46432	,
O	46433	46435	it
O	46435	46436	'
O	46436	46437	s
O	46438	46441	not
O	46442	46443	a
O	46444	46448	call
O	46449	46455	inside
O	46456	46460	loop
O	46460	46461	,
O	46462	46465	and
O	46466	46468	it
O	46468	46469	'
O	46469	46470	s
O	46471	46472	a
O	46473	46479	static
O	46479	46480	,
O	46481	46484	not
O	46485	46492	virtual
O	46492	46493	/
O	46493	46502	interface
O	46503	46507	call
O	46507	46508	,
O	46509	46513	thus
O	46514	46517	the
O	46518	46529	performance
O	46530	46541	improvement
O	46542	46547	could
O	46548	46550	be
O	46551	46555	only
O	46556	46564	marginal
O	46565	46568	and
O	46569	46573	only
O	46574	46576	in
O	46577	46581	some
O	46582	46590	specific
O	46591	46600	scenarios
O	46600	46601	.

O	46602	46605	Not
O	46606	46609	the
O	46610	46615	thing
O	46616	46619	the
O	46620	46623	JVM
O	46624	46634	developers
O	46635	46642	usually
O	46643	46647	care
O	46647	46648	.

O	46649	46653	Also
O	46654	46656	it
O	46657	46663	should
O	46664	46666	be
O	46667	46672	noted
O	46673	46677	that
O	46678	46682	even
O	46683	46685	C1
O	46686	46687	'
O	46687	46693	client
O	46693	46694	'
O	46695	46703	compiler
O	46704	46705	(
O	46705	46709	tier
O	46710	46711	1
O	46711	46712	-
O	46712	46713	3
O	46713	46714	)
O	46715	46717	is
O	46718	46725	capable
O	46726	46728	to
O	46729	46735	inline
B-api_mention	46736	46742	Arrays
I-api_mention	46742	46743	.
I-api_mention	46743	46747	fill
O	46748	46754	called
O	46754	46755	,
O	46756	46759	for
O	46760	46767	example
O	46767	46768	,
O	46769	46771	in
B-api_mention	46772	46783	WeakHashMap
I-api_mention	46783	46784	.
I-api_mention	46784	46789	clear
I-api_mention	46789	46790	(
I-api_mention	46790	46794	args
I-api_mention	46794	46795	)
O	46796	46797	,
O	46798	46800	as
O	46801	46809	inlining
O	46810	46813	log
O	46814	46815	(
O	46816	46817	-
O	46817	46819	XX
O	46819	46820	:
O	46820	46821	+
O	46821	46846	UnlockDiagnosticVMOptions
O	46847	46848	-
O	46848	46850	XX
O	46850	46851	:
O	46851	46852	+
O	46852	46868	PrintCompilation
O	46869	46870	-
O	46870	46872	XX
O	46872	46873	:
O	46873	46874	+
O	46874	46887	PrintInlining
O	46888	46889	)
O	46890	46894	says
O	46894	46895	:
O	46896	46897	#
O	46897	46900	pre
O	46901	46903	Of
O	46904	46910	course
O	46910	46911	,
O	46912	46914	it
O	46914	46915	'
O	46915	46916	s
O	46917	46921	also
O	46922	46928	easily
O	46929	46936	inlined
O	46937	46939	by
O	46940	46945	smart
O	46946	46949	and
O	46950	46958	powerful
O	46959	46961	C2
O	46962	46963	'
O	46963	46969	server
O	46969	46970	'
O	46971	46979	compiler
O	46979	46980	.

O	46981	46985	Thus
O	46986	46987	I
O	46988	46991	see
O	46992	46994	no
O	46995	47003	problems
O	47004	47008	here
O	47008	47009	.

O	47010	47015	Seems
O	47016	47020	that
O	47021	47022	@
O	47022	47027	Marco
O	47028	47035	version
O	47036	47038	is
O	47039	47048	incorrect
O	47049	47055	either
O	47055	47056	.

O	47057	47064	Finally
O	47065	47067	we
O	47068	47072	have
O	47073	47074	a
O	47075	47081	couple
O	47082	47084	of
O	47085	47093	comments
O	47094	47098	from
O	47099	47100	@
O	47100	47111	StuartMarks
O	47112	47113	(
O	47113	47116	who
O	47117	47119	is
O	47120	47123	JDK
O	47124	47133	developer
O	47133	47134	,
O	47135	47139	thus
O	47140	47144	some
O	47145	47153	official
O	47154	47159	voice
O	47159	47160	)
O	47160	47161	:
O	47162	47163	#
O	47163	47173	blockquote
O	47174	47180	Indeed
O	47181	47184	the
B-api_mention	47185	47192	HashMap
I-api_mention	47192	47193	.
I-api_mention	47193	47198	clear
I-api_mention	47198	47199	(
I-api_mention	47199	47203	args
I-api_mention	47203	47204	)
O	47205	47214	contained
O	47215	47218	the
O	47219	47223	loop
O	47224	47228	many
O	47229	47234	years
O	47234	47235	,
O	47236	47239	was
O	47240	47248	replaced
O	47249	47253	with
B-api_mention	47254	47260	Arrays
I-api_mention	47260	47261	.
I-api_mention	47261	47265	fill
O	47266	47268	on
O	47269	47272	Apr
O	47273	47277	10th
O	47277	47278	,
O	47279	47283	2013
O	47284	47287	and
O	47288	47294	stayed
O	47295	47299	less
O	47300	47303	one
O	47304	47308	half
O	47308	47309	-
O	47309	47310	a
O	47310	47311	-
O	47311	47315	year
O	47316	47321	until
O	47322	47326	Sept
O	47327	47330	4th
O	47331	47335	when
O	47336	47339	the
O	47340	47349	discussed
O	47350	47356	commit
O	47357	47360	was
O	47361	47371	introduced
O	47371	47372	.

O	47373	47376	The
O	47377	47386	discussed
O	47387	47393	commit
O	47394	47397	was
O	47398	47406	actually
O	47407	47408	a
O	47409	47414	major
O	47415	47422	rewrite
O	47423	47425	of
O	47426	47429	the
B-api_mention	47430	47437	HashMap
O	47438	47447	internals
O	47448	47450	to
O	47451	47454	fix
O	47455	47458	JDK
O	47458	47459	-
O	47459	47466	8023463
O	47467	47472	issue
O	47472	47473	.

O	47474	47476	It
O	47477	47480	was
O	47481	47482	a
O	47483	47487	long
O	47488	47493	story
O	47494	47499	about
O	47500	47511	possibility
O	47512	47514	to
O	47515	47521	poison
O	47522	47525	the
B-api_mention	47526	47533	HashMap
O	47534	47538	with
O	47539	47543	keys
O	47544	47550	having
O	47551	47562	duplicating
O	47563	47572	hashcodes
O	47573	47581	reducing
B-api_mention	47582	47589	HashMap
O	47590	47596	search
O	47597	47602	speed
O	47603	47605	to
O	47606	47612	linear
O	47613	47619	making
O	47620	47622	it
O	47623	47633	vulnerable
O	47634	47636	to
O	47637	47640	DoS
O	47640	47641	-
O	47641	47648	attacks
O	47648	47649	.

O	47650	47653	The
O	47654	47662	attempts
O	47663	47665	to
O	47666	47671	solve
O	47672	47676	this
O	47677	47681	were
O	47682	47691	performed
O	47692	47694	in
O	47695	47698	JDK
O	47698	47699	-
O	47699	47700	7
O	47701	47710	including
O	47711	47715	some
O	47716	47729	randomization
O	47730	47732	of
B-api_mention	47733	47739	String
O	47740	47748	hashCode
O	47748	47749	.

O	47750	47752	So
O	47753	47758	seems
O	47759	47763	that
O	47764	47767	the
B-api_mention	47768	47775	HashMap
O	47776	47790	implementation
O	47791	47794	was
O	47795	47801	forked
O	47802	47806	from
O	47807	47810	the
O	47811	47818	earlier
O	47819	47825	commit
O	47825	47826	,
O	47827	47836	developed
O	47837	47850	independently
O	47850	47851	,
O	47852	47856	then
O	47857	47863	merged
O	47864	47868	into
O	47869	47872	the
O	47873	47879	master
O	47880	47886	branch
O	47887	47898	overwriting
O	47899	47906	several
O	47907	47914	changes
O	47915	47925	introduced
O	47926	47928	in
O	47928	47929	-
O	47929	47936	between
O	47936	47937	.

O	47938	47940	We
O	47941	47944	may
O	47945	47952	support
O	47953	47957	this
O	47958	47968	hypothesis
O	47969	47979	performing
O	47980	47981	a
O	47982	47986	diff
O	47986	47987	.

O	47988	47992	Take
O	47993	47996	the
O	47997	48004	version
O	48005	48010	where
B-api_mention	48011	48017	Arrays
I-api_mention	48017	48018	.
I-api_mention	48018	48022	fill
O	48023	48026	was
O	48027	48034	removed
O	48035	48036	(
O	48036	48040	2013
O	48040	48041	-
O	48041	48043	09
O	48043	48044	-
O	48044	48046	04
O	48046	48047	)
O	48048	48051	and
O	48052	48059	compare
O	48060	48062	it
O	48063	48067	with
O	48068	48076	previous
O	48077	48084	version
O	48085	48086	(
O	48086	48090	2013
O	48090	48091	-
O	48091	48093	07
O	48093	48094	-
O	48094	48096	30
O	48096	48097	)
O	48097	48098	.

O	48099	48102	The
O	48103	48107	diff
O	48108	48109	-
O	48109	48111	U0
O	48112	48118	output
O	48119	48122	has
O	48123	48127	4341
O	48128	48133	lines
O	48133	48134	.

O	48135	48138	Now
O	48139	48142	let
O	48142	48143	'
O	48143	48144	s
O	48145	48149	diff
O	48150	48157	against
O	48158	48161	the
O	48162	48169	version
O	48170	48175	prior
O	48176	48178	to
O	48179	48182	one
O	48183	48187	when
B-api_mention	48188	48194	Arrays
I-api_mention	48194	48195	.
I-api_mention	48195	48199	fill
O	48200	48203	was
O	48204	48209	added
O	48210	48211	(
O	48211	48215	2013
O	48215	48216	-
O	48216	48218	04
O	48218	48219	-
O	48219	48221	01
O	48221	48222	)
O	48222	48223	.

O	48224	48227	Now
O	48228	48232	diff
O	48233	48234	-
O	48234	48236	U0
O	48237	48245	contains
O	48246	48250	only
O	48251	48255	2680
O	48256	48261	lines
O	48261	48262	.

O	48263	48267	Thus
O	48268	48271	the
O	48272	48277	newer
O	48278	48285	version
O	48286	48294	actually
O	48295	48299	more
O	48300	48307	similar
O	48308	48310	to
O	48311	48314	the
O	48315	48320	older
O	48321	48325	than
O	48326	48328	to
O	48329	48338	immediate
O	48339	48345	parent
O	48345	48346	.

O	48347	48357	Conclusion
O	48358	48360	So
O	48361	48363	to
O	48364	48372	conclude
O	48373	48374	I
O	48375	48380	would
O	48381	48386	agree
O	48387	48391	with
O	48392	48398	Stuart
O	48399	48404	Marks
O	48404	48405	.

O	48406	48411	There
O	48412	48416	were
O	48417	48419	no
O	48420	48428	concrete
O	48429	48435	reason
O	48436	48438	to
O	48439	48445	remove
B-api_mention	48446	48452	Arrays
I-api_mention	48452	48453	.
I-api_mention	48453	48457	fill
O	48458	48459	,
O	48460	48462	it
O	48462	48463	'
O	48463	48464	s
O	48465	48469	just
O	48470	48477	because
O	48478	48481	the
O	48482	48484	in
O	48484	48485	-
O	48485	48492	between
O	48493	48499	change
O	48500	48503	was
O	48504	48515	overwritten
O	48516	48518	by
O	48519	48526	mistake
O	48526	48527	.

O	48528	48533	Using
B-api_mention	48534	48540	Arrays
I-api_mention	48540	48541	.
I-api_mention	48541	48545	fill
O	48546	48548	is
O	48549	48558	perfectly
O	48559	48563	fine
O	48564	48568	both
O	48569	48571	in
O	48572	48575	JDK
O	48576	48580	code
O	48581	48584	and
O	48585	48587	in
O	48588	48592	user
O	48593	48605	applications
O	48606	48609	and
O	48610	48614	used
O	48614	48615	,
O	48616	48619	for
O	48620	48627	example
O	48627	48628	,
O	48629	48631	in
B-api_mention	48632	48643	WeakHashMap
O	48644	48645	.

O	48646	48649	The
B-api_mention	48650	48656	Arrays
O	48657	48662	class
O	48663	48665	is
O	48666	48672	loaded
O	48673	48680	anyways
O	48681	48687	pretty
O	48688	48693	early
O	48694	48700	during
O	48701	48704	the
O	48705	48708	JDK
O	48709	48723	initialization
O	48723	48724	,
O	48725	48728	has
O	48729	48733	very
O	48734	48740	simple
O	48741	48747	static
O	48748	48759	initializer
O	48760	48763	and
B-api_mention	48764	48770	Arrays
I-api_mention	48770	48771	.
I-api_mention	48771	48775	fill
O	48776	48782	method
O	48783	48786	can
O	48787	48789	be
O	48790	48796	easily
O	48797	48804	inlined
O	48805	48809	even
O	48810	48812	by
O	48813	48819	client
O	48820	48828	compiler
O	48828	48829	,
O	48830	48832	so
O	48833	48835	no
O	48836	48847	performance
O	48848	48856	drawback
O	48857	48863	should
O	48864	48866	be
O	48867	48872	noted
O	48872	48873	.

O	48875	48883	Question
O	48883	48884	-
O	48884	48892	32693704
O	48892	48893	,
O	48894	48900	answer
O	48900	48901	-
O	48901	48909	32852619

O	48910	48917	Because
O	48918	48920	it
O	48920	48921	'
O	48921	48922	s
O	48923	48927	much
O	48928	48934	faster
O	48934	48935	!

O	48936	48937	I
O	48938	48941	ran
O	48942	48946	some
O	48947	48955	thorough
O	48956	48968	benchmarking
O	48969	48974	tests
O	48975	48977	on
O	48978	48981	cut
O	48982	48986	down
O	48987	48995	versions
O	48996	48998	of
O	48999	49002	the
O	49003	49006	two
O	49007	49014	methods
O	49014	49015	:
O	49016	49017	#
O	49017	49020	pre
O	49021	49030	operating
O	49031	49033	on
O	49034	49040	arrays
O	49041	49043	of
O	49044	49051	various
O	49052	49057	sizes
O	49058	49068	containing
O	49069	49075	random
O	49076	49082	values
O	49082	49083	.

O	49084	49088	Here
O	49089	49092	are
O	49093	49096	the
O	49097	49098	(
O	49098	49105	typical
O	49105	49106	)
O	49107	49114	results
O	49114	49115	:
O	49116	49117	#
O	49117	49120	pre
O	49121	49124	And
O	49125	49129	here
O	49130	49133	are
O	49134	49137	the
O	49138	49145	results
O	49146	49150	when
O	49151	49160	operating
O	49161	49165	over
O	49166	49168	an
O	49169	49174	array
O	49175	49181	filled
O	49182	49186	with
O	49187	49192	nulls
O	49193	49194	(
O	49194	49196	so
O	49197	49204	garbage
O	49205	49215	collection
O	49216	49222	issues
O	49223	49226	are
O	49227	49237	eradicated
O	49237	49238	)
O	49238	49239	:
O	49240	49241	#
O	49241	49244	pre
O	49245	49248	The
O	49249	49256	numbers
O	49257	49260	are
O	49261	49263	in
O	49264	49275	nanoseconds
O	49275	49276	,
O	49277	49278	(
O	49278	49280	sd
O	49280	49281	)
O	49282	49284	is
O	49285	49286	1
O	49287	49295	standard
O	49296	49305	deviation
O	49306	49315	expressed
O	49316	49318	as
O	49319	49320	a
O	49321	49331	percentage
O	49332	49334	of
O	49335	49338	the
O	49339	49345	result
O	49346	49347	(
O	49347	49350	fyi
O	49350	49351	,
O	49352	49353	a
O	49354	49355	"
O	49355	49363	normally
O	49364	49375	distributed
O	49375	49376	"
O	49377	49387	population
O	49388	49391	has
O	49392	49394	an
O	49395	49397	SD
O	49398	49400	of
O	49401	49403	68
O	49403	49404	)
O	49404	49405	,
O	49406	49408	vs
O	49409	49411	is
O	49412	49415	the
O	49416	49419	JDK
O	49420	49421	8
O	49422	49428	timing
O	49429	49437	relative
O	49438	49440	to
O	49441	49444	JDK
O	49445	49446	7
O	49446	49447	.

O	49448	49450	It
O	49451	49453	is
O	49454	49465	interesting
O	49466	49470	that
O	49471	49474	not
O	49475	49479	only
O	49480	49482	is
O	49483	49485	it
O	49486	49499	significantly
O	49500	49506	faster
O	49506	49507	,
O	49508	49511	but
O	49512	49515	the
O	49516	49525	deviation
O	49526	49528	is
O	49529	49533	also
O	49534	49542	slightly
O	49543	49551	narrower
O	49551	49552	,
O	49553	49558	which
O	49559	49564	means
O	49565	49569	that
O	49570	49573	the
O	49574	49577	JDK
O	49578	49579	8
O	49580	49594	implementation
O	49595	49600	gives
O	49601	49609	slightly
O	49610	49614	more
O	49615	49625	consistent
O	49626	49637	performance
O	49637	49638	.

O	49639	49642	The
O	49643	49648	tests
O	49649	49653	were
O	49654	49657	run
O	49658	49660	on
O	49661	49664	jdk
O	49665	49666	1
O	49666	49667	.
O	49667	49668	8
O	49668	49669	.
O	49669	49670	0
O	49670	49671	_
O	49671	49673	45
O	49674	49678	over
O	49679	49680	a
O	49681	49686	large
O	49687	49688	(
O	49688	49696	millions
O	49696	49697	)
O	49698	49704	number
O	49705	49707	of
O	49708	49713	times
O	49714	49716	on
O	49717	49723	arrays
O	49724	49733	populated
O	49734	49738	with
O	49739	49745	random
B-api_mention	49746	49753	Integer
O	49754	49761	objects
O	49761	49762	.

O	49763	49765	To
O	49766	49772	remove
O	49773	49776	out
O	49776	49777	-
O	49777	49782	lying
O	49783	49790	numbers
O	49790	49791	,
O	49792	49794	on
O	49795	49799	each
O	49800	49803	set
O	49804	49806	of
O	49807	49814	results
O	49815	49818	the
O	49819	49826	fastest
O	49827	49830	and
O	49831	49838	slowest
O	49839	49840	3
O	49840	49841	%
O	49842	49844	of
O	49845	49852	timings
O	49853	49857	were
O	49858	49867	discarded
O	49867	49868	.

O	49869	49876	Garbage
O	49877	49887	collection
O	49888	49891	was
O	49892	49901	requested
O	49902	49905	and
O	49906	49909	the
O	49910	49916	thread
O	49917	49924	yielded
O	49925	49928	and
O	49929	49934	slept
O	49935	49939	just
O	49940	49945	prior
O	49946	49948	to
O	49949	49956	running
O	49957	49961	each
O	49962	49972	invocation
O	49973	49975	of
O	49976	49979	the
O	49980	49986	method
O	49986	49987	.

O	49988	49991	JVM
O	49992	49996	warm
O	49997	49999	up
O	50000	50003	was
O	50004	50008	done
O	50009	50011	on
O	50012	50015	the
O	50016	50021	first
O	50022	50024	20
O	50024	50025	%
O	50026	50028	of
O	50029	50033	work
O	50034	50037	and
O	50038	50043	those
O	50044	50051	results
O	50052	50056	were
O	50057	50066	discarded
O	50066	50067	.

O	50069	50077	Question
O	50077	50078	-
O	50078	50086	31202946
O	50086	50087	,
O	50088	50094	answer
O	50094	50095	-
O	50095	50103	31203218

O	50104	50107	You
O	50108	50111	can
O	50112	50114	of
O	50115	50121	course
O	50122	50128	choose
O	50129	50131	to
O	50132	50137	shoot
O	50138	50146	yourself
O	50147	50149	in
O	50150	50153	the
O	50154	50158	foot
O	50158	50159	,
O	50160	50163	but
O	50164	50168	that
O	50169	50174	doesn
O	50174	50175	'
O	50175	50176	t
O	50177	50181	mean
O	50182	50185	you
O	50186	50190	must
O	50190	50191	.

O	50192	50193	#
O	50193	50203	blockquote
O	50204	50211	Because
O	50212	50215	the
O	50216	50227	recommended
O	50228	50231	way
O	50232	50234	to
O	50235	50241	create
O	50242	50243	a
O	50244	50249	start
O	50250	50251	a
O	50252	50258	thread
O	50259	50261	is
O	50262	50265	not
O	50266	50268	to
O	50269	50277	subclass
B-api_mention	50278	50284	Thread
O	50284	50285	.

O	50286	50289	The
O	50290	50301	recommended
O	50302	50305	way
O	50306	50308	is
O	50309	50311	to
O	50312	50318	define
O	50319	50320	a
B-api_mention	50321	50329	Runnable
O	50330	50331	,
O	50332	50335	and
O	50336	50340	pass
O	50341	50343	it
O	50344	50346	as
O	50347	50355	argument
O	50356	50358	to
O	50359	50362	the
B-api_mention	50363	50369	Thread
O	50370	50381	constructor
O	50381	50382	:
O	50383	50384	#
O	50384	50387	pre
O	50388	50389	#
O	50389	50399	blockquote
O	50400	50403	Yes
O	50404	50407	and
O	50408	50410	no
O	50410	50411	.

O	50412	50415	You
O	50416	50419	can
O	50419	50420	'
O	50420	50421	t
O	50422	50429	replace
O	50430	50433	the
O	50434	50448	implementation
O	50449	50451	of
B-api_mention	50452	50457	start
I-api_mention	50457	50458	(
I-api_mention	50458	50459	)
O	50460	50462	by
O	50463	50467	your
O	50468	50471	own
O	50472	50486	implementation
O	50486	50487	,
O	50488	50491	but
O	50492	50495	you
O	50496	50499	can
O	50500	50502	do
O	50503	50513	additional
O	50514	50520	things
O	50521	50523	in
B-api_mention	50524	50529	start
I-api_mention	50529	50530	(
I-api_mention	50530	50531	)
O	50532	50534	if
O	50535	50538	you
O	50539	50543	want
O	50543	50544	:
O	50545	50546	#
O	50546	50549	pre
O	50550	50554	That
O	50555	50559	said
O	50559	50560	,
O	50561	50563	if
O	50564	50568	Java
O	50569	50572	was
O	50573	50583	redesigned
O	50584	50588	from
O	50589	50596	scratch
O	50597	50602	today
O	50602	50603	,
O	50604	50609	there
O	50610	50612	is
O	50613	50614	a
O	50615	50619	good
O	50620	50626	chance
O	50627	50630	the
O	50631	50637	design
O	50638	50643	would
O	50644	50646	be
O	50647	50656	different
O	50656	50657	.

O	50658	50666	Remember
O	50667	50671	that
O	50672	50676	this
O	50677	50682	class
O	50683	50688	dates
O	50689	50693	from
O	50694	50698	Java
O	50699	50700	1
O	50700	50701	.
O	50701	50702	0
O	50702	50703	,
O	50704	50707	and
O	50708	50710	is
O	50711	50716	still
O	50717	50725	backward
O	50725	50726	-
O	50726	50736	compatible
O	50736	50737	.

O	50739	50747	Question
O	50747	50748	-
O	50748	50756	31202946
O	50756	50757	,
O	50758	50764	answer
O	50764	50765	-
O	50765	50773	31203252

O	50774	50775	#
O	50775	50785	blockquote
O	50786	50790	This
O	50791	50799	question
O	50800	50808	actually
O	50809	50814	boils
O	50815	50819	down
O	50820	50822	to
O	50823	50826	the
O	50827	50831	fact
O	50832	50836	that
O	50837	50840	you
O	50841	50847	should
O	50848	50854	always
O	50855	50861	prefer
O	50862	50873	composition
O	50874	50878	over
O	50879	50890	inheritance
O	50890	50891	.

O	50892	50894	If
O	50895	50898	the
B-api_mention	50899	50905	Thread
O	50906	50911	class
O	50912	50915	was
O	50916	50924	declared
O	50925	50927	as
O	50928	50936	abstract
O	50937	50938	,
O	50939	50942	the
O	50943	50951	language
O	50952	50957	would
O	50958	50962	have
O	50963	50965	to
O	50966	50973	provide
O	50974	50981	another
O	50982	50987	class
O	50988	50992	that
O	50993	51001	extended
O	51002	51006	from
O	51007	51009	it
O	51010	51015	which
O	51016	51027	programmers
O	51028	51033	could
O	51034	51037	use
O	51038	51040	to
O	51041	51047	create
O	51048	51049	a
B-api_mention	51050	51056	Thread
O	51057	51058	.

O	51059	51063	Your
O	51064	51072	question
O	51073	51078	would
O	51079	51083	then
O	51084	51086	be
O	51087	51092	about
O	51093	51096	why
O	51097	51101	this
O	51102	51107	class
O	51108	51112	that
O	51113	51120	extends
O	51121	51125	from
B-api_mention	51126	51132	Thread
O	51133	51135	is
O	51136	51139	not
O	51140	51148	abstract
O	51149	51150	.

O	51151	51153	If
O	51154	51157	the
O	51158	51166	language
O	51167	51170	did
O	51171	51174	not
O	51175	51182	provide
O	51183	51190	another
O	51191	51196	class
O	51197	51201	that
O	51202	51209	extends
O	51210	51214	from
B-api_mention	51215	51221	Thread
O	51222	51223	,
O	51224	51235	programmers
O	51236	51241	would
O	51242	51246	have
O	51247	51249	to
O	51250	51256	create
O	51257	51262	their
O	51263	51266	own
O	51267	51272	class
O	51273	51277	that
O	51278	51284	extend
O	51285	51286	s
O	51287	51291	from
B-api_mention	51292	51298	Thread
O	51299	51302	and
O	51303	51311	override
O	51312	51315	the
B-api_mention	51316	51319	run
I-api_mention	51319	51320	(
I-api_mention	51320	51324	args
I-api_mention	51324	51325	)
O	51326	51332	method
O	51332	51333	.

O	51334	51335	#
O	51335	51345	blockquote
O	51346	51349	The
O	51350	51354	only
O	51355	51363	possible
O	51364	51375	explanation
O	51376	51377	I
O	51378	51381	can
O	51382	51386	give
O	51387	51389	is
O	51390	51394	that
O	51395	51398	the
O	51399	51409	developers
O	51410	51412	of
O	51413	51416	the
O	51417	51425	language
O	51426	51429	saw
O	51430	51434	some
O	51435	51438	use
O	51438	51439	-
O	51439	51444	cases
O	51445	51448	for
O	51449	51459	overriding
O	51460	51465	start
O	51466	51470	when
O	51471	51474	the
O	51475	51480	class
O	51481	51484	was
O	51485	51495	introduced
O	51496	51498	to
O	51499	51502	the
O	51503	51506	JDK
O	51506	51507	.

O	51508	51511	The
O	51512	51517	first
O	51518	51525	version
O	51526	51528	of
O	51529	51533	Java
O	51534	51538	that
O	51539	51540	I
O	51541	51545	used
O	51546	51549	was
O	51550	51551	1
O	51551	51552	.
O	51552	51553	5
O	51554	51557	and
O	51558	51559	I
O	51560	51570	personally
O	51571	51575	have
O	51576	51579	not
O	51580	51584	come
O	51585	51591	across
O	51592	51593	a
O	51594	51597	use
O	51597	51598	-
O	51598	51602	case
O	51603	51608	where
O	51609	51610	I
O	51611	51616	found
O	51617	51620	the
O	51621	51625	need
O	51626	51628	to
O	51629	51637	override
O	51638	51643	start
O	51644	51645	.

O	51646	51648	As
O	51649	51651	JB
O	51652	51657	Nizet
O	51658	51664	stated
O	51665	51667	in
O	51668	51671	his
O	51672	51678	answer
O	51679	51680	#
O	51680	51690	blockquote

O	51692	51700	Question
O	51700	51701	-
O	51701	51709	34172978
O	51709	51710	,
O	51711	51717	answer
O	51717	51718	-
O	51718	51726	34173040

O	51727	51732	Since
O	51733	51738	there
O	51739	51742	are
O	51743	51747	only
O	51748	51749	4
O	51750	51758	elements
O	51759	51763	that
O	51764	51768	pass
O	51769	51772	the
O	51773	51779	filter
O	51779	51780	,
B-api_mention	51781	51786	limit
I-api_mention	51786	51787	(
I-api_mention	51787	51791	args
I-api_mention	51791	51792	)
O	51793	51798	never
O	51799	51806	reaches
O	51807	51809	10
O	51810	51818	elements
O	51818	51819	,
O	51820	51822	so
O	51823	51826	the
B-api_mention	51827	51833	Stream
O	51834	51842	pipeline
O	51843	51848	keeps
O	51849	51859	generating
O	51860	51863	new
O	51864	51872	elements
O	51873	51876	and
O	51877	51884	feeding
O	51885	51889	them
O	51890	51892	to
O	51893	51896	the
O	51897	51903	filter
O	51903	51904	,
O	51905	51911	trying
O	51912	51914	to
O	51915	51920	reach
O	51921	51923	10
O	51924	51932	elements
O	51933	51937	that
O	51938	51942	pass
O	51943	51946	the
O	51947	51953	filter
O	51953	51954	,
O	51955	51958	but
O	51959	51964	since
O	51965	51969	only
O	51970	51973	the
O	51974	51979	first
O	51980	51981	4
O	51982	51990	elements
O	51991	51995	pass
O	51996	51999	the
O	52000	52006	filter
O	52006	52007	,
O	52008	52011	the
O	52012	52022	processing
O	52023	52028	never
O	52029	52033	ends
O	52034	52035	(
O	52035	52037	at
O	52038	52043	least
O	52044	52049	until
O	52050	52051	i
O	52052	52061	overflows
O	52061	52062	)
O	52062	52063	.

O	52064	52067	The
B-api_mention	52068	52074	Stream
O	52075	52083	pipeline
O	52084	52086	is
O	52087	52090	not
O	52091	52096	smart
O	52097	52103	enough
O	52104	52106	to
O	52107	52111	know
O	52112	52116	that
O	52117	52119	no
O	52120	52124	more
O	52125	52133	elements
O	52134	52137	can
O	52138	52142	pass
O	52143	52146	the
O	52147	52153	filter
O	52153	52154	,
O	52155	52157	so
O	52158	52160	it
O	52161	52166	keeps
O	52167	52177	processing
O	52178	52181	new
O	52182	52190	elements
O	52190	52191	.

O	52193	52201	Question
O	52201	52202	-
O	52202	52210	34172978
O	52210	52211	,
O	52212	52218	answer
O	52218	52219	-
O	52219	52227	34173110

O	52228	52236	Flipping
O	52237	52240	the
O	52241	52246	limit
O	52247	52250	and
O	52251	52254	the
O	52255	52261	filter
O	52262	52269	clauses
O	52270	52273	has
O	52274	52283	different
O	52284	52293	behaviors
O	52293	52294	.

O	52295	52297	If
O	52298	52301	you
O	52302	52305	put
O	52306	52309	the
O	52310	52315	limit
O	52316	52321	first
O	52321	52322	,
O	52323	52326	the
O	52327	52333	stream
O	52334	52338	will
O	52339	52344	first
O	52345	52353	generate
O	52354	52356	10
O	52357	52365	integers
O	52366	52367	[
O	52367	52368	1
O	52368	52369	.
O	52369	52370	.
O	52370	52372	10
O	52372	52373	]
O	52373	52374	,
O	52375	52378	and
O	52379	52383	then
O	52384	52390	filter
O	52391	52395	them
O	52396	52403	leaving
O	52404	52408	only
O	52409	52414	those
O	52415	52422	smaller
O	52423	52427	than
O	52428	52429	5
O	52429	52430	.

O	52431	52433	In
O	52434	52437	the
O	52438	52446	original
O	52447	52455	ordering
O	52455	52456	,
O	52457	52461	with
O	52462	52465	the
O	52466	52472	filter
O	52473	52480	applied
O	52481	52486	first
O	52486	52487	,
O	52488	52496	integers
O	52497	52500	are
O	52501	52510	generated
O	52511	52514	and
O	52515	52523	filtered
O	52524	52529	until
O	52530	52533	you
O	52534	52539	reach
O	52540	52542	10
O	52543	52551	elements
O	52551	52552	.

O	52553	52557	This
O	52558	52561	isn
O	52561	52562	'
O	52562	52563	t
O	52564	52566	an
O	52567	52575	infinite
O	52576	52584	operator
O	52584	52585	,
O	52586	52588	as
O	52589	52590	i
O	52591	52593	in
O	52594	52597	the
O	52598	52606	supplier
O	52607	52611	will
O	52612	52622	eventually
O	52623	52631	overflow
O	52631	52632	,
O	52633	52636	but
O	52637	52639	it
O	52640	52644	will
O	52645	52649	take
O	52650	52651	a
O	52652	52657	while
O	52657	52658	,
O	52659	52669	especially
O	52670	52672	on
O	52673	52674	a
O	52675	52679	slow
O	52680	52688	computer
O	52688	52689	,
O	52690	52692	to
O	52693	52698	reach
O	52699	52702	MAX
O	52702	52703	_
O	52703	52706	INT
O	52707	52708	.

O	52710	52718	Question
O	52718	52719	-
O	52719	52727	34172978
O	52727	52728	,
O	52729	52735	answer
O	52735	52736	-
O	52736	52744	34173658

O	52745	52747	If
O	52748	52751	you
O	52752	52756	want
O	52757	52759	to
O	52760	52764	stop
O	52765	52771	either
O	52772	52774	if
O	52775	52781	number
O	52782	52783	5
O	52784	52786	is
O	52787	52794	reached
O	52795	52797	or
O	52798	52800	10
O	52801	52809	elements
O	52810	52813	are
O	52814	52823	collected
O	52823	52824	,
O	52825	52830	there
O	52830	52831	'
O	52831	52832	s
B-api_mention	52833	52839	Stream
I-api_mention	52839	52840	.
I-api_mention	52840	52849	takeWhile
I-api_mention	52849	52850	(
I-api_mention	52850	52854	args
I-api_mention	52854	52855	)
O	52856	52862	method
O	52863	52868	added
O	52869	52871	in
O	52872	52876	Java
O	52876	52877	-
O	52877	52878	9
O	52878	52879	:
O	52880	52881	#
O	52881	52884	pre

O	52886	52894	Question
O	52894	52895	-
O	52895	52903	32859038
O	52903	52904	,
O	52905	52911	answer
O	52911	52912	-
O	52912	52920	32859065

O	52921	52924	You
O	52925	52928	can
O	52929	52935	create
O	52936	52937	a
B-api_mention	52938	52944	Stream
O	52945	52947	of
O	52948	52951	the
O	52952	52959	indices
O	52960	52965	using
O	52966	52968	an
B-api_mention	52969	52978	IntStream
O	52979	52982	and
O	52983	52987	then
O	52988	52995	convert
O	52996	53000	them
O	53001	53003	to
O	53004	53005	a
B-api_mention	53006	53009	Map
O	53010	53011	:
B-api_mention	53012	53015	Map
I-api_mention	53015	53016	<
I-api_mention	53016	53017	T
I-api_mention	53017	53018	>
O	53019	53022	map
O	53023	53024	=
B-api_mention	53025	53034	IntStream
I-api_mention	53034	53035	.
I-api_mention	53035	53040	range
I-api_mention	53040	53041	(
I-api_mention	53041	53045	args
I-api_mention	53045	53046	)
I-api_mention	53047	53048	.
I-api_mention	53048	53053	boxed
I-api_mention	53053	53054	(
I-api_mention	53054	53058	args
I-api_mention	53058	53059	)
I-api_mention	53060	53061	.
I-api_mention	53061	53068	collect
I-api_mention	53068	53069	(
I-api_mention	53069	53073	args
I-api_mention	53073	53074	)
O	53074	53075	;

O	53077	53085	Question
O	53085	53086	-
O	53086	53094	32859038
O	53094	53095	,
O	53096	53102	answer
O	53102	53103	-
O	53103	53111	32863263

O	53112	53115	Don
O	53115	53116	'
O	53116	53117	t
O	53118	53122	feel
O	53123	53127	like
O	53128	53131	you
O	53132	53136	have
O	53137	53139	to
O	53140	53142	do
O	53143	53153	everything
O	53154	53156	in
O	53156	53157	/
O	53157	53161	with
O	53162	53165	the
O	53166	53172	stream
O	53172	53173	.

O	53174	53175	I
O	53176	53181	would
O	53182	53186	just
O	53187	53189	do
O	53189	53190	:
O	53191	53192	#
O	53192	53195	pre
O	53196	53198	As
O	53199	53203	long
O	53204	53206	as
O	53207	53210	you
O	53211	53214	don
O	53214	53215	'
O	53215	53216	t
O	53217	53228	parallelise
O	53229	53232	the
O	53233	53239	stream
O	53240	53244	this
O	53245	53249	will
O	53250	53254	work
O	53255	53258	and
O	53259	53261	it
O	53262	53268	avoids
O	53269	53280	potentially
O	53281	53290	expensive
O	53291	53294	and
O	53294	53295	/
O	53295	53297	or
O	53298	53309	problematic
O	53310	53311	(
O	53311	53313	in
O	53314	53317	the
O	53318	53322	case
O	53323	53325	of
O	53326	53336	duplicates
O	53336	53337	)
B-api_mention	53338	53341	get
I-api_mention	53341	53342	(
I-api_mention	53342	53346	args
I-api_mention	53346	53347	)
O	53348	53351	and
B-api_mention	53352	53359	indexOf
I-api_mention	53359	53360	(
I-api_mention	53360	53364	args
I-api_mention	53364	53365	)
O	53366	53376	operations
O	53376	53377	.

O	53378	53379	(
O	53379	53382	You
O	53383	53389	cannot
O	53390	53393	use
O	53394	53395	a
O	53396	53403	regular
O	53404	53407	int
O	53408	53416	variable
O	53417	53419	in
O	53420	53425	place
O	53426	53428	of
O	53429	53432	the
B-api_mention	53433	53446	AtomicInteger
O	53447	53454	because
O	53455	53464	variables
O	53465	53469	used
O	53470	53474	from
O	53475	53482	outside
O	53483	53484	a
O	53485	53491	lambda
O	53492	53502	expression
O	53503	53507	must
O	53508	53510	be
O	53511	53522	effectively
O	53523	53528	final
O	53528	53529	.
O	53530	53534	Note
O	53535	53539	that
O	53540	53544	when
O	53545	53556	uncontested
O	53557	53558	(
O	53558	53560	as
O	53561	53563	in
O	53564	53568	this
O	53569	53573	case
O	53573	53574	)
O	53574	53575	,
B-api_mention	53576	53589	AtomicInteger
O	53590	53592	is
O	53593	53597	very
O	53598	53602	fast
O	53603	53606	and
O	53607	53610	won
O	53610	53611	'
O	53611	53612	t
O	53613	53617	pose
O	53618	53619	a
O	53620	53631	performance
O	53632	53639	problem
O	53639	53640	.
O	53641	53644	But
O	53645	53647	if
O	53648	53650	it
O	53651	53658	worries
O	53659	53662	you
O	53663	53666	you
O	53667	53670	can
O	53671	53674	use
O	53675	53676	a
O	53677	53680	non
O	53680	53681	-
O	53681	53687	thread
O	53687	53688	-
O	53688	53692	safe
O	53693	53700	counter
O	53700	53701	.
O	53701	53702	)

O	53704	53712	Question
O	53712	53713	-
O	53713	53721	32859038
O	53721	53722	,
O	53723	53729	answer
O	53729	53730	-
O	53730	53738	32918035

O	53739	53743	Eran
O	53743	53744	'
O	53744	53745	s
O	53746	53752	answer
O	53753	53755	is
O	53756	53763	usually
O	53764	53767	the
O	53768	53772	best
O	53773	53781	approach
O	53782	53785	for
O	53786	53792	random
O	53792	53793	-
O	53793	53799	access
O	53800	53805	lists
O	53805	53806	.

O	53807	53809	If
O	53810	53814	your
B-api_mention	53815	53819	List
O	53820	53823	isn
O	53823	53824	'
O	53824	53825	t
O	53826	53832	random
O	53833	53839	access
O	53839	53840	,
O	53841	53843	or
O	53844	53846	if
O	53847	53850	you
O	53851	53855	have
O	53856	53857	a
B-api_mention	53858	53864	Stream
O	53865	53872	instead
O	53873	53875	of
O	53876	53877	a
B-api_mention	53878	53882	List
O	53883	53884	,
O	53885	53888	you
O	53889	53892	can
O	53893	53896	use
B-api_mention	53897	53911	forEachOrdered
O	53912	53913	:
O	53914	53915	#
O	53915	53918	pre
O	53919	53923	This
O	53924	53926	is
O	53927	53931	safe
O	53931	53932	,
O	53933	53935	if
O	53936	53939	the
O	53940	53946	stream
O	53947	53949	is
O	53950	53958	parallel
O	53958	53959	,
O	53960	53964	even
O	53965	53971	though
O	53972	53975	the
O	53976	53987	destination
O	53988	53991	map
O	53992	53994	is
O	53995	54001	thread
O	54001	54002	-
O	54002	54008	unsafe
O	54009	54012	and
O	54013	54015	is
O	54016	54024	operated
O	54025	54029	upon
O	54030	54032	as
O	54033	54034	a
O	54035	54039	side
O	54040	54046	effect
O	54046	54047	.

O	54048	54051	The
B-api_mention	54052	54066	forEachOrdered
O	54067	54077	guarantees
O	54078	54082	that
O	54083	54088	items
O	54089	54092	are
O	54093	54102	processed
O	54103	54106	one
O	54106	54107	-
O	54107	54109	at
O	54109	54110	-
O	54110	54111	a
O	54111	54112	-
O	54112	54116	time
O	54116	54117	,
O	54118	54120	in
O	54121	54126	order
O	54126	54127	.

O	54128	54131	For
O	54132	54136	this
O	54137	54143	reason
O	54144	54146	it
O	54146	54147	'
O	54147	54148	s
O	54149	54157	unlikely
O	54158	54162	that
O	54163	54166	any
O	54167	54174	speedup
O	54175	54179	will
O	54180	54186	result
O	54187	54191	from
O	54192	54199	running
O	54200	54202	in
O	54203	54211	parallel
O	54211	54212	.

O	54213	54214	(
O	54214	54219	There
O	54220	54225	might
O	54226	54228	be
O	54229	54233	some
O	54234	54241	speedup
O	54242	54244	if
O	54245	54250	there
O	54251	54254	are
O	54255	54264	expensive
O	54265	54275	operations
O	54276	54278	in
O	54279	54282	the
O	54283	54291	pipeline
O	54292	54298	before
O	54299	54302	the
B-api_mention	54303	54317	forEachOrdered
O	54318	54319	.
O	54319	54320	)

O	54322	54330	Question
O	54330	54331	-
O	54331	54339	31471444
O	54339	54340	,
O	54341	54347	answer
O	54347	54348	-
O	54348	54356	31471520

B-api_mention	54357	54360	org
I-api_mention	54360	54361	.
I-api_mention	54361	54367	apache
I-api_mention	54367	54368	.
I-api_mention	54368	54375	commons
I-api_mention	54375	54376	.
I-api_mention	54376	54380	lang
I-api_mention	54380	54381	.
I-api_mention	54381	54385	math
I-api_mention	54385	54386	.
I-api_mention	54386	54397	NumberUtils
I-api_mention	54397	54398	.
I-api_mention	54398	54405	INTEGER
I-api_mention	54405	54406	_
I-api_mention	54406	54409	ONE
O	54410	54412	it
O	54413	54418	gives
O	54419	54422	you
O	54423	54424	a
O	54425	54430	final
O	54431	54437	static
B-api_mention	54438	54445	Integer
O	54446	54452	object
O	54453	54459	rather
O	54460	54464	than
O	54465	54474	primitive
O	54475	54478	int
O	54479	54480	1
O	54480	54481	,
O	54482	54485	and
O	54486	54488	as
O	54489	54491	it
O	54492	54494	is
O	54495	54500	final
O	54501	54507	static
O	54508	54510	it
O	54511	54515	acts
O	54516	54518	as
O	54519	54520	a
O	54521	54529	constant
O	54530	54533	and
O	54534	54537	can
O	54538	54540	be
O	54541	54545	used
O	54546	54548	in
O	54549	54559	comparison
O	54560	54562	of
B-api_mention	54563	54570	Integer
O	54571	54578	objects
O	54579	54586	because
O	54587	54591	will
O	54592	54598	always
O	54599	54605	return
O	54606	54610	same
O	54611	54619	instance
O	54619	54620	.

O	54621	54623	So
O	54624	54626	in
O	54627	54630	the
O	54631	54636	above
O	54637	54645	scenario
O	54646	54648	it
O	54649	54654	might
O	54655	54658	not
O	54659	54663	look
O	54664	54667	fit
O	54668	54671	but
O	54672	54681	somewhere
O	54682	54684	if
O	54685	54688	you
O	54689	54692	are
O	54693	54698	using
O	54699	54701	it
O	54702	54707	while
O	54708	54718	comparison
O	54718	54719	,
O	54720	54722	it
O	54723	54726	for
O	54727	54731	sure
O	54732	54735	has
O	54736	54742	impact
O	54742	54743	.

O	54744	54752	Moreover
O	54752	54753	,
O	54754	54756	as
O	54757	54761	much
O	54762	54764	as
O	54765	54767	we
O	54768	54771	can
O	54771	54772	,
O	54773	54779	should
O	54780	54786	prefer
O	54787	54790	the
O	54791	54794	use
O	54795	54797	of
O	54798	54807	constants
O	54808	54812	over
O	54813	54822	hardcoded
O	54823	54830	beacuse
O	54830	54831	:
O	54832	54833	#
O	54833	54835	li
O	54836	54838	It
O	54839	54842	can
O	54843	54847	make
O	54848	54852	your
O	54853	54857	code
O	54858	54864	easily
O	54865	54877	maintainable
O	54877	54878	.

O	54879	54881	If
O	54882	54885	any
O	54886	54895	situation
O	54896	54902	occurs
O	54903	54905	in
O	54906	54912	future
O	54913	54916	for
O	54917	54923	change
O	54923	54924	,
O	54925	54928	you
O	54929	54932	can
O	54933	54939	change
O	54940	54944	only
O	54945	54947	at
O	54948	54949	a
O	54950	54956	single
O	54957	54962	place
O	54962	54963	.

O	54964	54965	#
O	54965	54967	li
O	54968	54971	The
O	54972	54976	code
O	54977	54982	looks
O	54983	54990	cleaner
O	54991	54992	&
O	54993	54997	more
O	54998	55006	readable
O	55006	55007	.

O	55009	55017	Question
O	55017	55018	-
O	55018	55026	31471444
O	55026	55027	,
O	55028	55034	answer
O	55034	55035	-
O	55035	55043	31471530

O	55044	55047	You
O	55048	55054	should
O	55055	55058	not
O	55058	55059	.

O	55060	55063	The
O	55064	55071	INTEGER
O	55071	55072	_
O	55072	55075	ONE
O	55076	55080	name
O	55081	55083	is
O	55084	55086	no
O	55087	55091	more
O	55092	55102	meaningful
O	55103	55107	than
O	55108	55109	1
O	55109	55110	.

O	55111	55113	If
O	55114	55121	however
O	55122	55126	this
O	55127	55132	value
O	55133	55136	has
O	55137	55141	some
O	55142	55147	other
O	55148	55155	meaning
O	55156	55157	(
O	55157	55160	for
O	55161	55168	example
O	55168	55169	,
O	55170	55175	month
O	55176	55178	in
O	55179	55182	the
O	55183	55187	year
O	55187	55188	)
O	55188	55189	,
O	55190	55194	then
O	55195	55200	using
O	55201	55202	a
O	55203	55211	constant
O	55212	55213	(
O	55213	55217	like
B-api_mention	55218	55226	Calendar
I-api_mention	55226	55227	.
I-api_mention	55227	55235	FEBRUARY
O	55236	55237	)
O	55238	55242	will
O	55243	55247	make
O	55248	55252	your
O	55253	55257	code
O	55258	55265	clearer
O	55265	55266	.

O	55267	55268	I
O	55269	55272	can
O	55273	55278	guess
O	55279	55283	that
O	55284	55288	this
O	55289	55297	constant
O	55298	55300	in
O	55301	55308	Commons
O	55309	55313	Math
O	55314	55321	library
O	55322	55325	was
O	55326	55333	created
O	55334	55336	in
O	55337	55341	Java
O	55342	55343	1
O	55343	55344	.
O	55344	55345	4
O	55346	55350	when
O	55351	55356	there
O	55357	55361	were
O	55362	55364	no
B-api_mention	55365	55372	Integer
O	55373	55378	cache
O	55379	55382	and
O	55383	55393	autoboxing
O	55393	55394	,
O	55395	55397	so
O	55398	55400	it
O	55401	55404	had
O	55405	55410	sense
O	55411	55413	in
O	55414	55419	terms
O	55420	55424	that
O	55425	55428	you
O	55429	55432	may
O	55433	55438	reuse
O	55439	55442	the
O	55443	55447	same
B-api_mention	55448	55455	Integer
O	55456	55462	object
O	55463	55464	(
O	55464	55467	not
O	55468	55477	primitive
O	55478	55481	int
O	55482	55483	)
O	55484	55486	in
O	55487	55496	different
O	55497	55503	places
O	55504	55506	to
O	55507	55511	save
O	55512	55518	memory
O	55518	55519	.

O	55520	55522	So
O	55523	55525	it
O	55526	55529	was
O	55530	55535	added
O	55536	55539	for
O	55540	55551	performance
O	55552	55559	reasons
O	55559	55560	,
O	55561	55564	not
O	55565	55568	for
O	55569	55573	code
O	55574	55581	clarity
O	55581	55582	.

O	55583	55586	Now
O	55587	55589	it
O	55589	55590	'
O	55590	55591	s
O	55592	55600	obsolete
O	55600	55601	:
O	55602	55606	even
O	55607	55609	if
O	55610	55613	you
O	55614	55618	need
O	55619	55621	an
B-api_mention	55622	55629	Integer
O	55630	55636	object
O	55636	55637	,
O	55638	55641	you
O	55642	55645	can
O	55646	55649	use
B-api_mention	55650	55657	Integer
I-api_mention	55657	55658	.
I-api_mention	55658	55665	valueOf
I-api_mention	55665	55666	(
I-api_mention	55666	55670	args
I-api_mention	55670	55671	)
O	55672	55674	or
O	55675	55683	implicit
O	55684	55694	autoboxing
O	55695	55698	and
O	55699	55702	get
O	55703	55706	the
O	55707	55713	cached
O	55714	55717	one
O	55717	55718	.

O	55720	55728	Question
O	55728	55729	-
O	55729	55737	31471444
O	55737	55738	,
O	55739	55745	answer
O	55745	55746	-
O	55746	55754	31476657

O	55755	55759	From
O	55760	55765	Class
B-api_mention	55766	55777	NumberUtils
O	55778	55781	you
O	55781	55782	'
O	55782	55784	ll
O	55785	55788	see
O	55789	55791	it
O	55791	55792	'
O	55792	55793	s
O	55794	55801	defined
O	55802	55804	as
O	55804	55805	:
O	55806	55807	#
O	55807	55810	pre
O	55811	55813	So
O	55813	55814	,
O	55815	55818	you
O	55818	55819	'
O	55819	55821	ll
O	55822	55825	see
O	55826	55830	that
O	55831	55838	INTEGER
O	55838	55839	_
O	55839	55842	ONE
O	55843	55845	is
O	55846	55849	not
O	55850	55853	the
O	55854	55858	same
O	55859	55861	as
O	55862	55863	1
O	55863	55864	.

O	55865	55867	It
O	55867	55868	'
O	55868	55869	s
O	55870	55872	an
O	55873	55879	object
O	55880	55884	that
O	55884	55885	'
O	55885	55886	s
O	55887	55894	already
O	55895	55899	been
O	55900	55911	constructed
O	55912	55915	for
O	55916	55919	you
O	55919	55920	.

O	55921	55923	So
O	55923	55924	,
O	55925	55927	if
O	55928	55930	we
O	55930	55931	'
O	55931	55933	re
O	55934	55941	needing
O	55942	55944	an
O	55945	55953	instance
O	55954	55956	of
B-api_mention	55957	55964	Integer
I-api_mention	55964	55965	(
I-api_mention	55965	55969	args
I-api_mention	55969	55970	)
O	55971	55972	,
O	55973	55979	rather
O	55980	55984	than
O	55985	55991	create
O	55992	55996	your
O	55997	56000	own
O	56000	56001	,
O	56002	56005	you
O	56006	56009	can
O	56010	56015	reuse
O	56016	56019	the
O	56020	56023	one
O	56024	56028	from
O	56029	56032	the
O	56033	56040	library
O	56041	56047	saving
O	56048	56052	time
O	56053	56056	and
O	56057	56063	memory
O	56063	56064	.

O	56065	56067	It
O	56068	56074	really
O	56075	56082	depends
O	56083	56085	on
O	56086	56090	your
O	56091	56102	application
O	56102	56103	,
O	56104	56106	if
O	56107	56110	you
O	56111	56117	indeed
O	56118	56122	what
O	56123	56126	the
O	56127	56130	int
O	56131	56138	version
O	56139	56141	of
O	56142	56143	1
O	56143	56144	,
O	56145	56149	then
O	56149	56150	,
O	56151	56154	you
O	56154	56155	'
O	56155	56156	d
O	56157	56165	probably
O	56166	56168	be
O	56169	56175	better
O	56176	56178	of
O	56179	56184	using
O	56185	56189	that
O	56190	56197	instead
O	56198	56200	of
O	56201	56205	this
B-api_mention	56206	56213	Integer
O	56214	56219	class
O	56219	56220	.

O	56222	56230	Question
O	56230	56231	-
O	56231	56239	32632364
O	56239	56240	,
O	56241	56247	answer
O	56247	56248	-
O	56248	56256	32633199

O	56257	56259	It
O	56260	56267	shouldn
O	56267	56268	'
O	56268	56269	t
O	56270	56274	have
O	56275	56283	compiled
O	56283	56284	,
O	56285	56294	according
O	56295	56297	to
O	56298	56301	JLS
O	56302	56303	7
O	56304	56305	.
O	56306	56309	int
O	56310	56313	can
O	56314	56316	be
O	56317	56325	compared
O	56326	56328	to
O	56329	56334	boxed
O	56335	56342	numeric
O	56343	56348	types
O	56348	56349	,
O	56350	56351	i
O	56351	56352	.
O	56352	56353	e
O	56353	56354	.
B-api_mention	56355	56359	Byte
O	56359	56360	,
B-api_mention	56361	56366	Short
O	56366	56367	,
B-api_mention	56368	56377	Character
O	56377	56378	,
B-api_mention	56379	56386	Integer
O	56386	56387	,
B-api_mention	56388	56392	Long
O	56392	56393	,
B-api_mention	56394	56399	Float
O	56399	56400	,
B-api_mention	56401	56407	Double
O	56407	56408	.

O	56409	56412	But
O	56413	56417	that
O	56418	56420	is
O	56421	56424	all
O	56424	56425	.

O	56426	56429	And
O	56430	56432	if
O	56433	56443	comparison
O	56444	56446	is
O	56447	56454	between
O	56455	56458	int
O	56459	56462	and
O	56463	56466	say
B-api_mention	56467	56472	Float
O	56473	56474	,
B-api_mention	56475	56480	Float
O	56481	56485	will
O	56486	56488	be
O	56489	56496	unboxed
O	56497	56502	first
O	56502	56503	,
O	56504	56506	so
O	56507	56511	that
O	56512	56515	the
O	56516	56526	comparison
O	56527	56529	is
O	56530	56537	between
O	56538	56543	float
O	56544	56547	and
O	56548	56551	int
O	56552	56553	.

O	56554	56556	It
O	56556	56557	'
O	56557	56559	ll
O	56560	56564	make
O	56565	56567	no
O	56568	56573	sense
O	56574	56576	to
O	56577	56579	do
O	56580	56583	the
O	56584	56589	other
O	56590	56593	way
O	56594	56600	around
O	56601	56602	-
O	56603	56606	box
O	56607	56610	int
O	56611	56615	then
O	56616	56623	examine
O	56624	56627	the
O	56628	56636	identity
O	56637	56639	of
O	56640	56643	the
B-api_mention	56644	56651	Integer
O	56652	56653	(
O	56653	56657	with
O	56658	56659	a
B-api_mention	56660	56665	Float
O	56666	56668	no
O	56669	56673	less
O	56673	56674	)
O	56674	56675	.

O	56677	56685	Question
O	56685	56686	-
O	56686	56694	33477695
O	56694	56695	,
O	56696	56702	answer
O	56702	56703	-
O	56703	56711	33477803

O	56712	56715	The
O	56716	56720	java
O	56720	56721	.
O	56721	56725	time
O	56726	56729	API
O	56730	56732	in
O	56733	56740	general
O	56741	56745	does
O	56746	56750	have
O	56751	56761	nanosecond
O	56762	56771	precision
O	56771	56772	.

O	56773	56776	For
O	56777	56784	example
O	56784	56785	:
O	56786	56787	#
O	56787	56790	pre
O	56791	56797	Output
O	56797	56798	:
O	56799	56803	2015
O	56803	56804	-
O	56804	56806	11
O	56806	56807	-
O	56807	56812	02T12
O	56812	56813	:
O	56813	56815	38
O	56815	56816	:
O	56816	56818	00
O	56818	56819	,
O	56819	56828	123456789
O	56828	56829	+
O	56829	56833	0000
O	56834	56841	However
O	56841	56842	,
O	56843	56845	it
O	56845	56846	'
O	56846	56847	s
O	56848	56851	the
O	56852	56857	clock
O	56858	56863	value
O	56864	56872	returned
O	56873	56875	by
B-api_mention	56876	56890	OffsetDateTime
I-api_mention	56890	56891	.
I-api_mention	56891	56894	now
I-api_mention	56894	56895	(
I-api_mention	56895	56899	args
I-api_mention	56899	56900	)
O	56901	56906	which
O	56907	56909	is
O	56910	56919	returning
O	56920	56921	a
O	56922	56927	value
O	56928	56933	which
O	56934	56938	only
O	56939	56942	has
O	56943	56955	milliseconds
O	56955	56956	.

O	56957	56961	From
B-api_mention	56962	56967	Clock
O	56968	56982	implementation
O	56983	56985	in
O	56986	56990	Java
O	56991	56992	8
O	56992	56993	:
O	56994	56995	#
O	56995	57005	blockquote
O	57006	57008	So
O	57009	57014	there
O	57014	57015	'
O	57015	57016	s
O	57017	57024	nothing
O	57025	57035	inherently
O	57036	57045	imprecise
O	57046	57050	here
O	57051	57052	-
O	57053	57057	just
O	57058	57061	the
O	57062	57069	default
O	57070	57084	implementation
O	57085	57087	of
B-api_mention	57088	57093	Clock
O	57094	57099	using
B-api_mention	57100	57106	System
I-api_mention	57106	57107	.
I-api_mention	57107	57124	currentTimeMillis
I-api_mention	57124	57125	(
I-api_mention	57125	57129	args
I-api_mention	57129	57130	)
O	57131	57132	.

O	57133	57136	You
O	57137	57142	could
O	57143	57154	potentially
O	57155	57161	create
O	57162	57166	your
O	57167	57170	own
O	57171	57175	more
O	57176	57183	precise
O	57184	57192	subclass
O	57192	57193	.

O	57194	57201	However
O	57201	57202	,
O	57203	57206	you
O	57207	57213	should
O	57214	57218	note
O	57219	57223	that
O	57224	57230	adding
O	57231	57235	more
O	57236	57245	precision
O	57246	57253	without
O	57254	57260	adding
O	57261	57265	more
O	57266	57274	accuracy
O	57275	57283	probably
O	57284	57287	isn
O	57287	57288	'
O	57288	57289	t
O	57290	57298	terribly
O	57299	57305	useful
O	57305	57306	.

O	57307	57308	(
O	57308	57313	There
O	57314	57317	are
O	57318	57323	times
O	57324	57328	when
O	57329	57331	it
O	57332	57337	might
O	57338	57340	be
O	57340	57341	,
O	57342	57352	admittedly
O	57352	57353	.
O	57353	57354	.
O	57354	57355	.
O	57355	57356	)

O	57358	57366	Question
O	57366	57367	-
O	57367	57375	31316581
O	57375	57376	,
O	57377	57383	answer
O	57383	57384	-
O	57384	57392	31327420

O	57393	57395	If
O	57396	57400	type
O	57401	57410	inference
O	57411	57419	produces
O	57420	57421	a
O	57422	57428	single
O	57429	57434	upper
O	57435	57440	bound
O	57441	57444	for
O	57445	57446	a
O	57447	57451	type
O	57452	57460	variable
O	57460	57461	,
O	57462	57471	typically
O	57472	57475	the
O	57476	57481	upper
O	57482	57487	bound
O	57488	57490	is
O	57491	57497	chosen
O	57498	57500	as
O	57501	57504	the
O	57505	57513	solution
O	57513	57514	.

O	57515	57518	For
O	57519	57526	example
O	57526	57527	,
O	57528	57530	if
O	57531	57532	T
O	57532	57533	<
O	57533	57534	<
O	57534	57540	Number
O	57541	57542	,
O	57543	57546	the
O	57547	57555	solution
O	57556	57558	is
O	57559	57560	T
O	57560	57561	=
O	57561	57567	Number
O	57568	57569	.

O	57570	57578	Although
B-api_mention	57579	57586	Integer
O	57587	57588	,
B-api_mention	57589	57594	Float
O	57595	57598	etc
O	57598	57599	.
O	57600	57605	could
O	57606	57610	also
O	57611	57618	satisfy
O	57619	57622	the
O	57623	57633	constraint
O	57633	57634	,
O	57635	57640	there
O	57640	57641	'
O	57641	57642	s
O	57643	57645	no
O	57646	57650	good
O	57651	57657	reason
O	57658	57660	to
O	57661	57667	choose
O	57668	57672	them
O	57673	57677	over
B-api_mention	57678	57684	Number
O	57685	57686	.

O	57687	57691	That
O	57692	57695	was
O	57696	57700	also
O	57701	57704	the
O	57705	57709	case
O	57710	57713	for
O	57714	57720	throws
O	57721	57722	T
O	57723	57725	in
O	57726	57730	java
O	57731	57732	5
O	57732	57733	-
O	57733	57734	7
O	57734	57735	:
O	57736	57737	T
O	57737	57738	<
O	57738	57739	<
B-api_mention	57739	57748	Throwable
O	57749	57750	=
O	57750	57751	>
O	57752	57753	T
O	57753	57754	=
B-api_mention	57754	57763	Throwable
O	57764	57765	.

O	57766	57767	(
O	57767	57773	Sneaky
O	57774	57779	throw
O	57780	57789	solutions
O	57790	57793	all
O	57794	57797	had
O	57798	57806	explicit
O	57807	57808	<
B-api_mention	57808	57824	RuntimeException
O	57824	57825	>
O	57826	57830	type
O	57831	57840	arguments
O	57840	57841	,
O	57842	57851	otherwise
O	57852	57853	<
O	57853	57862	Throwable
O	57862	57863	>
O	57864	57866	is
O	57867	57875	inferred
O	57875	57876	.
O	57876	57877	)
O	57878	57880	In
O	57881	57886	java8
O	57886	57887	,
O	57888	57892	with
O	57893	57896	the
O	57897	57909	introduction
O	57910	57912	of
O	57913	57919	lambda
O	57919	57920	,
O	57921	57925	this
O	57926	57933	becomes
O	57934	57945	problematic
O	57945	57946	.

O	57947	57955	Consider
O	57956	57960	this
O	57961	57965	case
O	57966	57967	#
O	57967	57970	pre
O	57971	57973	If
O	57974	57976	we
O	57977	57983	invoke
O	57984	57988	with
O	57989	57991	an
O	57992	57997	empty
O	57998	58004	lambda
O	58004	58005	,
O	58006	58010	what
O	58011	58016	would
O	58017	58018	T
O	58019	58021	be
O	58022	58030	inferred
O	58031	58033	as
O	58033	58034	?

B-api_mention	58035	58041	invoke
I-api_mention	58041	58042	(
I-api_mention	58042	58046	args
I-api_mention	58046	58047	)
O	58047	58048	;
O	58049	58052	The
O	58053	58057	only
O	58058	58068	constraint
O	58069	58071	on
O	58072	58073	T
O	58074	58076	is
O	58077	58079	an
O	58080	58085	upper
O	58086	58091	bound
B-api_mention	58092	58101	Throwable
O	58102	58103	.

O	58104	58106	In
O	58107	58114	earlier
O	58115	58120	stage
O	58121	58123	of
O	58124	58129	java8
O	58129	58130	,
O	58131	58132	T
O	58132	58133	=
B-api_mention	58133	58142	Throwable
O	58143	58148	would
O	58149	58151	be
O	58152	58160	inferred
O	58160	58161	.

O	58162	58165	See
O	58166	58170	this
O	58171	58177	report
O	58178	58179	I
O	58180	58185	filed
O	58185	58186	.

O	58187	58190	But
O	58191	58195	that
O	58196	58198	is
O	58199	58205	pretty
O	58206	58211	silly
O	58211	58212	,
O	58213	58215	to
O	58216	58221	infer
B-api_mention	58222	58231	Throwable
O	58232	58233	,
O	58234	58235	a
O	58236	58243	checked
O	58244	58253	exception
O	58253	58254	,
O	58255	58258	out
O	58259	58261	of
O	58262	58264	an
O	58265	58270	empty
O	58271	58276	block
O	58276	58277	.

O	58278	58279	A
O	58280	58288	solution
O	58289	58292	was
O	58293	58301	proposed
O	58302	58304	in
O	58305	58308	the
O	58309	58315	report
O	58316	58317	(
O	58317	58322	which
O	58323	58325	is
O	58326	58336	apparently
O	58337	58344	adopted
O	58345	58347	by
O	58348	58351	JLS
O	58351	58352	)
O	58353	58354	-
O	58355	58356	#
O	58356	58359	pre
O	58360	58361	i
O	58361	58362	.
O	58362	58363	e
O	58363	58364	.
O	58365	58367	if
O	58368	58371	the
O	58372	58377	upper
O	58378	58383	bound
O	58384	58386	is
B-api_mention	58387	58396	Exception
O	58397	58399	or
B-api_mention	58400	58409	Throwable
O	58410	58411	,
O	58412	58418	choose
B-api_mention	58419	58435	RuntimeException
O	58436	58438	as
O	58439	58442	the
O	58443	58451	solution
O	58451	58452	.

O	58453	58455	In
O	58456	58460	this
O	58461	58465	case
O	58465	58466	,
O	58467	58472	there
O	58473	58475	is
O	58476	58477	a
O	58478	58482	good
O	58483	58489	reason
O	58490	58492	to
O	58493	58499	choose
O	58500	58501	a
O	58502	58512	particular
O	58513	58520	subtype
O	58521	58523	of
O	58524	58527	the
O	58528	58533	upper
O	58534	58539	bound
O	58539	58540	.

O	58542	58550	Question
O	58550	58551	-
O	58551	58559	31993377
O	58559	58560	,
O	58561	58567	answer
O	58567	58568	-
O	58568	58576	31993478

O	58577	58580	You
O	58581	58584	are
O	58585	58594	consuming
O	58595	58598	the
O	58599	58604	value
O	58605	58607	of
B-api_mention	58608	58612	next
I-api_mention	58612	58613	(
I-api_mention	58613	58617	args
I-api_mention	58617	58618	)
O	58619	58620	,
O	58621	58624	but
O	58625	58631	asking
O	58632	58635	for
B-api_mention	58636	58643	hasNext
I-api_mention	58643	58644	(
I-api_mention	58644	58648	args
I-api_mention	58648	58649	)
O	58650	58653	and
B-api_mention	58654	58665	hasNextLine
I-api_mention	58665	58666	(
I-api_mention	58666	58670	args
I-api_mention	58670	58671	)
O	58672	58673	.

B-api_mention	58674	58678	next
I-api_mention	58678	58679	(
I-api_mention	58679	58683	args
I-api_mention	58683	58684	)
O	58685	58686	,
O	58687	58690	per
O	58691	58698	default
O	58698	58699	,
O	58700	58707	returns
O	58708	58718	everything
O	58719	58721	to
O	58722	58725	the
O	58726	58730	next
O	58731	58741	whitespace
O	58741	58742	(
O	58742	58746	args
O	58746	58747	)
O	58748	58749	.

O	58750	58752	So
O	58753	58756	you
O	58757	58760	are
O	58761	58770	iterating
O	58771	58778	through
O	58779	58782	all
O	58783	58793	whitespace
O	58794	58803	seperated
O	58804	58811	strings
O	58811	58812	,
O	58813	58816	and
O	58817	58822	after
O	58823	58827	each
O	58828	58830	of
O	58831	58835	them
O	58836	58839	you
O	58840	58843	are
O	58844	58850	asking
O	58851	58856	about
O	58857	58860	the
B-api_mention	58861	58869	nextLine
I-api_mention	58869	58870	(
I-api_mention	58870	58874	args
I-api_mention	58874	58875	)
O	58876	58877	.

O	58878	58879	i
O	58880	58881	1
O	58882	58883	1
O	58884	58885	-
O	58885	58886	>
B-api_mention	58887	58898	hasNextLine
I-api_mention	58898	58899	(
I-api_mention	58899	58903	args
I-api_mention	58903	58904	)
O	58905	58906	?

O	58907	58911	True
O	58911	58912	.

B-api_mention	58913	58920	hasNext
I-api_mention	58920	58921	(
I-api_mention	58921	58925	args
I-api_mention	58925	58926	)
O	58927	58928	?

O	58929	58933	Also
O	58934	58938	true
O	58938	58939	.

O	58940	58941	1
O	58942	58943	1
O	58944	58945	-
O	58945	58946	>
B-api_mention	58947	58958	hasNextLine
I-api_mention	58958	58959	(
I-api_mention	58959	58963	args
I-api_mention	58963	58964	)
O	58965	58966	?

O	58967	58971	True
O	58971	58972	.

B-api_mention	58973	58980	hasNext
I-api_mention	58980	58981	(
I-api_mention	58981	58985	args
I-api_mention	58985	58986	)
O	58987	58988	?

O	58989	58993	Also
O	58994	58998	true
O	58999	59000	(
O	59000	59005	still
O	59006	59007	a
O	59008	59018	whitespace
O	59019	59023	left
O	59023	59024	)
O	59025	59026	1
O	59027	59028	-
O	59028	59029	>
B-api_mention	59030	59041	hasNextLine
I-api_mention	59041	59042	(
I-api_mention	59042	59046	args
I-api_mention	59046	59047	)
O	59048	59049	?

O	59050	59054	True
O	59055	59056	(
O	59056	59060	Line
O	59061	59070	Seperator
O	59070	59071	,
O	59072	59080	probably
O	59080	59081	)
O	59081	59082	.

B-api_mention	59083	59090	haxNext
O	59090	59091	?

O	59092	59097	False
O	59097	59098	,
O	59099	59101	no
O	59102	59112	whitespace
O	59113	59120	anymore
O	59120	59121	.

O	59123	59131	Question
O	59131	59132	-
O	59132	59140	31993377
O	59140	59141	,
O	59142	59148	answer
O	59148	59149	-
O	59149	59157	31993533

O	59158	59161	The
O	59162	59168	reason
O	59169	59171	is
O	59172	59176	that
B-api_mention	59177	59184	hasNext
I-api_mention	59184	59185	(
I-api_mention	59185	59189	args
I-api_mention	59189	59190	)
O	59191	59197	checks
O	59198	59200	if
O	59201	59206	there
O	59207	59210	are
O	59211	59214	any
O	59215	59219	more
O	59220	59223	non
O	59223	59224	-
O	59224	59234	whitespace
O	59235	59245	characters
O	59246	59255	available
O	59255	59256	.

B-api_mention	59257	59268	hasNextLine
I-api_mention	59268	59269	(
I-api_mention	59269	59273	args
I-api_mention	59273	59274	)
O	59275	59281	checks
O	59282	59284	to
O	59285	59288	see
O	59289	59291	if
O	59292	59297	there
O	59298	59300	is
O	59301	59308	another
O	59309	59313	line
O	59314	59316	of
O	59317	59321	text
O	59322	59331	available
O	59331	59332	.

O	59333	59337	Your
O	59338	59342	text
O	59343	59347	file
O	59348	59356	probably
O	59357	59360	has
O	59361	59362	a
O	59363	59370	newline
O	59371	59373	at
O	59374	59377	the
O	59378	59381	end
O	59382	59384	of
O	59385	59387	it
O	59388	59390	so
O	59391	59393	it
O	59394	59397	has
O	59398	59405	another
O	59406	59410	line
O	59411	59414	but
O	59415	59417	no
O	59418	59422	more
O	59423	59433	characters
O	59434	59438	that
O	59439	59442	are
O	59443	59446	not
O	59447	59457	whitespace
O	59457	59458	.

O	59459	59463	Many
O	59464	59468	text
O	59469	59476	editors
O	59477	59490	automatically
O	59491	59494	add
O	59495	59496	a
O	59497	59504	newline
O	59505	59507	to
O	59508	59511	the
O	59512	59515	end
O	59516	59518	of
O	59519	59520	a
O	59521	59525	file
O	59526	59528	if
O	59529	59534	there
O	59535	59538	isn
O	59538	59539	'
O	59539	59540	t
O	59541	59544	one
O	59545	59552	already
O	59552	59553	.

O	59554	59556	In
O	59557	59562	other
O	59563	59568	words
O	59568	59569	,
O	59570	59574	your
O	59575	59580	input
O	59581	59585	file
O	59586	59588	is
O	59589	59592	not
O	59593	59597	this
O	59598	59599	(
O	59599	59602	the
O	59603	59610	numbers
O	59611	59614	are
O	59615	59619	line
O	59620	59627	numbers
O	59627	59628	)
O	59628	59629	:
O	59630	59631	#
O	59631	59634	pre
O	59635	59637	It
O	59638	59640	is
O	59641	59649	actually
O	59650	59654	this
O	59654	59655	:
O	59656	59657	#
O	59657	59660	pre

O	59662	59670	Question
O	59670	59671	-
O	59671	59679	31993377
O	59679	59680	,
O	59681	59687	answer
O	59687	59688	-
O	59688	59696	31993534

O	59697	59700	You
O	59701	59705	have
O	59706	59707	a
O	59708	59714	single
O	59715	59720	extra
O	59721	59728	newline
O	59729	59731	at
O	59732	59735	the
O	59736	59739	end
O	59740	59742	of
O	59743	59747	your
O	59748	59752	file
O	59752	59753	.

O	59754	59755	#
O	59755	59757	li
B-api_mention	59758	59769	hasNextLine
I-api_mention	59769	59770	(
I-api_mention	59770	59771	)
O	59772	59778	checks
O	59779	59781	to
O	59782	59785	see
O	59786	59788	if
O	59789	59794	there
O	59795	59797	is
O	59798	59805	another
B-api_mention	59806	59817	linePattern
O	59818	59820	in
O	59821	59824	the
O	59825	59831	buffer
O	59831	59832	.

O	59833	59834	#
O	59834	59836	li
B-api_mention	59837	59844	hasNext
I-api_mention	59844	59845	(
I-api_mention	59845	59846	)
O	59847	59853	checks
O	59854	59856	to
O	59857	59860	see
O	59861	59863	if
O	59864	59869	there
O	59870	59872	is
O	59873	59874	a
O	59875	59884	parseable
O	59885	59890	token
O	59891	59893	in
O	59894	59897	the
O	59898	59904	buffer
O	59904	59905	,
O	59906	59908	as
O	59909	59918	separated
O	59919	59921	by
O	59922	59925	the
O	59926	59933	scanner
O	59933	59934	'
O	59934	59935	s
O	59936	59945	delimiter
O	59945	59946	.

O	59947	59952	Since
O	59953	59956	the
O	59957	59964	scanner
O	59964	59965	'
O	59965	59966	s
O	59967	59976	delimiter
O	59977	59979	is
O	59980	59990	whitespace
O	59990	59991	,
O	59992	59995	and
O	59996	59999	the
B-api_mention	60000	60011	linePattern
O	60012	60014	is
O	60015	60019	also
O	60020	60025	white
O	60026	60031	space
O	60031	60032	,
O	60033	60035	it
O	60036	60038	is
O	60039	60047	possible
O	60048	60051	for
O	60052	60057	there
O	60058	60060	to
O	60061	60063	be
O	60064	60065	a
B-api_mention	60066	60077	linePattern
O	60078	60080	in
O	60081	60084	the
O	60085	60091	buffer
O	60092	60095	but
O	60096	60098	no
O	60099	60108	parseable
O	60109	60115	tokens
O	60115	60116	.

O	60117	60126	Typically
O	60126	60127	,
O	60128	60131	the
O	60132	60136	most
O	60137	60143	common
O	60144	60147	way
O	60148	60150	to
O	60151	60155	deal
O	60156	60160	with
O	60161	60165	this
O	60166	60171	issue
O	60172	60174	by
O	60175	60181	always
O	60182	60189	calling
B-api_mention	60190	60198	nextLine
I-api_mention	60198	60199	(
I-api_mention	60199	60203	args
I-api_mention	60203	60204	)
O	60205	60210	after
O	60211	60218	parsing
O	60219	60222	all
O	60223	60226	the
O	60227	60233	tokens
O	60234	60235	(
O	60235	60236	e
O	60236	60237	.
O	60237	60238	g
O	60238	60239	.
O	60240	60247	numbers
O	60247	60248	)
O	60249	60251	in
O	60252	60256	each
O	60257	60261	line
O	60262	60264	of
O	60265	60269	your
O	60270	60274	text
O	60274	60275	.

O	60276	60279	You
O	60280	60284	need
O	60285	60287	to
O	60288	60290	do
O	60291	60295	this
O	60296	60300	when
O	60301	60306	using
B-api_mention	60307	60314	Scanner
O	60315	60319	when
O	60320	60327	reading
O	60328	60329	a
O	60330	60334	user
O	60334	60335	'
O	60335	60336	s
O	60337	60342	input
O	60343	60346	too
O	60347	60351	from
B-api_mention	60352	60358	System
I-api_mention	60358	60359	.
I-api_mention	60359	60361	in
O	60362	60363	.

O	60364	60366	To
O	60367	60374	advance
O	60375	60378	the
O	60379	60386	scanner
O	60387	60391	past
O	60392	60396	this
O	60397	60407	whitespace
O	60408	60417	delimiter
O	60417	60418	,
O	60419	60422	you
O	60423	60427	must
O	60428	60431	use
O	60432	60439	scanner
B-api_mention	60439	60440	.
I-api_mention	60440	60448	nextLine
I-api_mention	60448	60449	(
I-api_mention	60449	60453	args
I-api_mention	60453	60454	)
O	60455	60457	to
O	60458	60463	clear
O	60464	60467	the
O	60468	60472	line
O	60473	60482	delimiter
O	60482	60483	.

O	60484	60487	See
O	60487	60488	:
O	60489	60494	Using
O	60495	60502	scanner
B-api_mention	60502	60503	.
I-api_mention	60503	60511	nextLine
I-api_mention	60511	60512	(
I-api_mention	60512	60513	)
O	60514	60522	Appendix
O	60522	60523	:
B-api_mention	60524	60535	LinePattern
O	60536	60538	is
O	60539	60546	defined
O	60547	60549	to
O	60550	60552	be
O	60553	60554	a
B-api_mention	60555	60562	Pattern
O	60563	60567	that
O	60568	60575	matches
O	60576	60580	this
O	60580	60581	:
O	60582	60583	#
O	60583	60586	pre
O	60587	60590	The
O	60591	60598	default
O	60599	60604	token
O	60605	60614	delimiter
O	60615	60617	is
O	60618	60622	this
B-api_mention	60623	60630	Pattern
O	60631	60632	:
O	60633	60640	private
O	60641	60647	static
B-api_mention	60648	60655	Pattern
O	60656	60666	WHITESPACE
O	60666	60667	_
O	60667	60674	PATTERN
O	60675	60676	=
B-api_mention	60677	60684	Pattern
I-api_mention	60684	60685	.
I-api_mention	60685	60692	compile
I-api_mention	60692	60693	(
I-api_mention	60693	60697	args
I-api_mention	60697	60698	)
O	60698	60699	;

O	60701	60709	Question
O	60709	60710	-
O	60710	60718	34250207
O	60718	60719	,
O	60720	60726	answer
O	60726	60727	-
O	60727	60735	34250231

O	60736	60747	Technically
O	60747	60748	,
O	60749	60751	it
O	60751	60752	'
O	60752	60753	s
O	60754	60756	10
O	60757	60758	,
O	60759	60762	not
O	60763	60767	zero
O	60767	60768	,
O	60769	60771	if
O	60772	60775	you
O	60776	60781	admit
O	60782	60785	for
O	60786	60787	a
O	60788	60792	lazy
O	60793	60807	initialisation
O	60808	60810	of
O	60811	60814	the
O	60815	60822	backing
O	60823	60828	array
O	60828	60829	.

O	60830	60833	See
O	60833	60834	:
O	60835	60836	#
O	60836	60839	pre
O	60840	60845	where
O	60846	60847	/
O	60847	60848	*
O	60848	60849	*
O	60850	60851	*
O	60852	60859	Default
O	60860	60867	initial
O	60868	60876	capacity
O	60876	60877	.

O	60878	60879	*
O	60879	60880	/
O	60881	60888	private
O	60889	60895	static
O	60896	60901	final
O	60902	60905	int
O	60906	60913	DEFAULT
O	60913	60914	_
O	60914	60922	CAPACITY
O	60923	60924	=
O	60925	60927	10
O	60927	60928	;
O	60929	60933	What
O	60934	60937	you
O	60937	60938	'
O	60938	60940	re
O	60941	60950	referring
O	60951	60953	to
O	60954	60956	is
O	60957	60961	just
O	60962	60965	the
O	60966	60970	zero
O	60970	60971	-
O	60971	60976	sized
O	60977	60984	initial
O	60985	60990	array
O	60991	60997	object
O	60998	61002	that
O	61003	61005	is
O	61006	61012	shared
O	61013	61018	among
O	61019	61022	all
O	61023	61032	initially
O	61033	61038	empty
B-api_mention	61039	61048	ArrayList
O	61049	61056	objects
O	61056	61057	.

O	61058	61059	I
O	61059	61060	.
O	61060	61061	e
O	61061	61062	.
O	61063	61066	the
O	61067	61075	capacity
O	61076	61078	of
O	61079	61081	10
O	61082	61084	is
O	61085	61095	guaranteed
O	61096	61102	lazily
O	61103	61104	,
O	61105	61107	an
O	61108	61120	optimisation
O	61121	61125	that
O	61126	61128	is
O	61129	61136	present
O	61137	61141	also
O	61142	61144	in
O	61145	61149	Java
O	61150	61151	7
O	61151	61152	.

O	61153	61163	Admittedly
O	61163	61164	,
O	61165	61168	the
O	61169	61180	constructor
O	61181	61189	contract
O	61190	61192	is
O	61193	61196	not
O	61197	61205	entirely
O	61206	61214	accurate
O	61214	61215	.

O	61216	61223	Perhaps
O	61224	61228	this
O	61229	61231	is
O	61232	61235	the
O	61236	61242	source
O	61243	61245	of
O	61246	61255	confusion
O	61256	61260	here
O	61260	61261	.

O	61262	61272	Background
O	61273	61277	Here
O	61277	61278	'
O	61278	61279	s
O	61280	61282	an
O	61283	61284	E
O	61284	61285	-
O	61285	61289	Mail
O	61290	61292	by
O	61293	61297	Mike
O	61298	61304	Duigou
O	61305	61306	#
O	61306	61316	blockquote

O	61318	61326	Question
O	61326	61327	-
O	61327	61335	32676771
O	61335	61336	,
O	61337	61343	answer
O	61343	61344	-
O	61344	61352	32677400

O	61353	61360	Despite
O	61361	61363	of
O	61364	61367	the
O	61368	61372	fact
O	61373	61377	that
O	61378	61383	there
O	61384	61386	is
O	61387	61389	no
B-api_mention	61390	61402	AtomicDouble
O	61403	61405	or
B-api_mention	61406	61423	AtomicDoubleArray
O	61424	61426	in
O	61427	61431	java
O	61431	61432	,
O	61433	61436	you
O	61437	61440	can
O	61441	61447	easily
O	61448	61454	create
O	61455	61459	your
O	61460	61463	own
O	61464	61469	based
O	61470	61472	on
B-api_mention	61473	61488	AtomicLongArray
O	61489	61490	.

O	61491	61492	#
O	61492	61495	pre
O	61496	61498	As
O	61499	61502	you
O	61503	61506	can
O	61507	61510	see
O	61510	61511	,
O	61512	61513	I
O	61514	61517	use
B-api_mention	61518	61524	Double
I-api_mention	61524	61525	.
I-api_mention	61525	61541	doubleToLongBits
O	61542	61545	and
B-api_mention	61546	61552	Double
I-api_mention	61552	61553	.
I-api_mention	61553	61569	longBitsToDouble
O	61570	61572	to
O	61573	61578	store
B-api_mention	61579	61586	Doubles
O	61587	61589	as
B-api_mention	61590	61595	Longs
O	61596	61598	in
B-api_mention	61599	61614	AtomicLongArray
O	61615	61616	.

O	61617	61621	They
O	61622	61626	both
O	61627	61631	have
O	61632	61635	the
O	61636	61640	same
O	61641	61645	size
O	61646	61648	in
O	61649	61653	bits
O	61653	61654	,
O	61655	61657	so
O	61658	61667	precision
O	61668	61670	is
O	61671	61674	not
O	61675	61679	lost
O	61680	61681	(
O	61681	61687	except
O	61688	61691	for
O	61692	61693	-
O	61693	61696	NaN
O	61696	61697	,
O	61698	61701	but
O	61702	61703	I
O	61704	61707	don
O	61707	61708	'
O	61708	61709	t
O	61710	61715	think
O	61716	61718	it
O	61719	61721	is
O	61722	61731	important
O	61731	61732	)
O	61732	61733	.

O	61734	61736	In
O	61737	61741	Java
O	61742	61743	8
O	61744	61747	the
O	61748	61762	implementation
O	61763	61765	of
O	61766	61769	add
O	61770	61773	can
O	61774	61776	be
O	61777	61781	even
O	61782	61788	easier
O	61788	61789	,
O	61790	61792	as
O	61793	61796	you
O	61797	61800	can
O	61801	61804	use
B-api_mention	61805	61821	accumulateAndGet
O	61822	61828	method
O	61829	61831	of
B-api_mention	61832	61847	AtomicLongArray
O	61848	61852	that
O	61853	61856	was
O	61857	61862	added
O	61863	61865	in
O	61866	61870	java
O	61871	61872	1
O	61872	61873	.
O	61873	61874	8
O	61874	61875	.

O	61876	61879	Upd
O	61880	61881	:
O	61882	61884	It
O	61885	61892	appears
O	61893	61897	that
O	61898	61899	I
O	61900	61909	virtually
O	61910	61912	re
O	61912	61913	-
O	61913	61924	implemented
O	61925	61930	guava
O	61930	61931	'
O	61931	61932	s
B-api_mention	61933	61950	AtomicDoubleArray
O	61951	61952	.

O	61954	61962	Question
O	61962	61963	-
O	61963	61971	31188231
O	61971	61972	,
O	61973	61979	answer
O	61979	61980	-
O	61980	61988	31188818

O	61989	61999	Ironically
O	62000	62007	default
O	62008	62015	methods
O	62016	62018	in
O	62019	62029	interfaces
O	62030	62034	were
O	62035	62045	introduced
O	62046	62048	to
O	62049	62054	allow
O	62055	62063	existing
O	62064	62073	libraries
O	62074	62079	using
O	62080	62085	those
O	62086	62096	interfaces
O	62097	62100	not
O	62101	62103	to
O	62104	62109	break
O	62109	62110	,
O	62111	62116	while
O	62117	62128	introducing
O	62129	62136	massive
O	62137	62140	new
O	62141	62154	functionality
O	62155	62157	in
O	62158	62161	the
O	62162	62172	interfaces
O	62172	62173	.

O	62174	62175	(
O	62175	62183	backward
O	62184	62197	compatibility
O	62197	62198	.
O	62198	62199	)
O	62200	62209	Conflicts
O	62210	62214	like
O	62215	62219	that
O	62220	62224	sort
O	62225	62231	method
O	62232	62237	might
O	62238	62243	arise
O	62243	62244	.

O	62245	62254	Something
O	62255	62257	to
O	62258	62261	pay
O	62262	62265	for
O	62266	62269	the
O	62270	62275	extra
O	62276	62289	functionality
O	62289	62290	.

O	62291	62293	In
O	62294	62298	your
O	62299	62303	case
O	62304	62308	also
O	62309	62318	something
O	62319	62321	to
O	62322	62333	investigate
O	62334	62335	(
O	62335	62341	should
O	62342	62345	new
O	62346	62359	functionality
O	62360	62362	be
O	62363	62367	used
O	62368	62375	instead
O	62375	62376	?
O	62376	62377	)
O	62377	62378	.

O	62379	62383	Java
O	62384	62391	forward
O	62392	62405	compatibility
O	62406	62412	breaks
O	62413	62416	are
O	62417	62423	little
O	62423	62424	,
O	62425	62429	more
O	62430	62432	in
O	62433	62436	its
O	62437	62443	typing
O	62444	62450	system
O	62450	62451	,
O	62452	62457	which
O	62458	62461	was
O	62462	62472	constantly
O	62473	62481	enlarged
O	62481	62482	.

O	62483	62488	First
O	62489	62493	with
O	62494	62501	generic
O	62502	62507	types
O	62508	62511	and
O	62512	62515	now
O	62516	62520	with
O	62521	62529	inferred
O	62530	62535	types
O	62536	62540	from
O	62541	62551	functional
O	62552	62562	interfaces
O	62562	62563	.

O	62564	62568	From
O	62569	62576	version
O	62577	62579	to
O	62580	62587	version
O	62588	62591	and
O	62592	62596	from
O	62597	62605	compiler
O	62606	62608	to
O	62609	62617	compiler
O	62618	62623	there
O	62624	62628	were
O	62629	62635	slight
O	62636	62647	differences
O	62647	62648	.

O	62650	62658	Question
O	62658	62659	-
O	62659	62667	31188231
O	62667	62668	,
O	62669	62675	answer
O	62675	62676	-
O	62676	62684	31190722

O	62685	62687	We
O	62688	62691	can
O	62692	62696	draw
O	62697	62698	a
O	62699	62707	parallel
O	62708	62712	with
O	62713	62721	abstract
O	62722	62727	class
O	62727	62728	.

O	62729	62731	An
O	62732	62740	abstract
O	62741	62746	class
O	62747	62749	is
O	62750	62758	intended
O	62759	62761	to
O	62762	62764	be
O	62765	62775	subclassed
O	62776	62778	so
O	62779	62783	that
O	62784	62787	the
O	62788	62796	abstract
O	62797	62804	methods
O	62805	62808	can
O	62809	62811	be
O	62812	62823	implemented
O	62823	62824	.

O	62825	62828	The
O	62829	62837	abstract
O	62838	62843	class
O	62844	62850	itself
O	62851	62859	contains
O	62860	62868	concrete
O	62869	62876	methods
O	62877	62881	that
O	62882	62888	invoke
O	62889	62892	the
O	62893	62901	abstract
O	62902	62909	methods
O	62909	62910	.

O	62911	62914	The
O	62915	62923	abstract
O	62924	62929	class
O	62930	62932	is
O	62933	62937	free
O	62938	62940	to
O	62941	62947	evolve
O	62948	62950	by
O	62951	62957	adding
O	62958	62962	more
O	62963	62971	concrete
O	62972	62979	methods
O	62979	62980	;
O	62981	62984	and
O	62985	62989	this
O	62990	62998	practice
O	62999	63002	may
O	63003	63008	break
O	63009	63019	subclasses
O	63019	63020	.

O	63021	63030	Therefore
O	63031	63034	the
O	63035	63040	exact
O	63041	63048	problem
O	63049	63052	you
O	63053	63062	described
O	63063	63070	existed
O	63071	63075	even
O	63076	63082	before
O	63083	63088	Java8
O	63088	63089	.

O	63090	63093	The
O	63094	63101	problem
O	63102	63104	is
O	63105	63109	much
O	63110	63114	more
O	63115	63125	manifested
O	63126	63128	on
B-api_mention	63129	63139	Collection
O	63140	63144	APIs
O	63145	63152	because
O	63153	63158	there
O	63159	63162	are
O	63163	63164	a
O	63165	63168	lot
O	63169	63171	of
O	63172	63182	subclasses
O	63183	63186	out
O	63187	63189	in
O	63190	63193	the
O	63194	63198	wild
O	63198	63199	.

O	63200	63205	While
O	63206	63209	the
O	63210	63217	leading
O	63218	63228	motivation
O	63229	63231	of
O	63232	63239	default
O	63240	63246	method
O	63247	63250	was
O	63251	63253	to
O	63254	63257	add
O	63258	63262	some
O	63263	63269	useful
O	63270	63277	methods
O	63278	63280	to
O	63281	63289	existing
B-api_mention	63290	63300	Collection
O	63301	63305	APIs
O	63306	63313	without
O	63314	63322	breaking
O	63323	63333	subclasses
O	63333	63334	,
O	63335	63339	they
O	63340	63343	had
O	63344	63346	to
O	63347	63355	exercise
O	63356	63361	great
O	63362	63366	self
O	63366	63367	-
O	63367	63374	control
O	63375	63377	of
O	63378	63383	doing
O	63384	63386	it
O	63387	63390	too
O	63391	63395	much
O	63395	63396	,
O	63397	63400	for
O	63401	63405	fear
O	63406	63408	of
O	63409	63417	breaking
O	63418	63428	subclasses
O	63428	63429	.

O	63430	63431	A
O	63432	63439	default
O	63440	63446	method
O	63447	63449	is
O	63450	63455	added
O	63456	63460	only
O	63461	63463	if
O	63464	63466	it
O	63466	63467	'
O	63467	63468	s
O	63469	63479	absolutely
O	63480	63489	necessary
O	63489	63490	.

O	63491	63494	The
O	63495	63499	real
O	63500	63508	question
O	63509	63513	here
O	63514	63516	is
O	63516	63517	,
O	63518	63521	why
B-api_mention	63522	63526	List
I-api_mention	63526	63527	.
I-api_mention	63527	63531	sort
O	63532	63534	is
O	63535	63545	considered
O	63546	63556	absolutely
O	63557	63566	necessary
O	63566	63567	.

O	63568	63569	I
O	63570	63575	think
O	63576	63580	that
O	63581	63583	is
O	63584	63593	debatable
O	63593	63594	.

O	63595	63605	Regardless
O	63606	63608	of
O	63609	63612	why
O	63613	63620	default
O	63621	63627	method
O	63628	63631	was
O	63632	63642	introduced
O	63643	63645	in
O	63646	63649	the
O	63650	63653	1st
O	63654	63659	place
O	63659	63660	,
O	63661	63663	it
O	63664	63666	is
O	63667	63670	now
O	63671	63672	a
O	63673	63678	great
O	63679	63683	tool
O	63684	63687	for
O	63688	63691	API
O	63692	63701	designers
O	63701	63702	,
O	63703	63706	and
O	63707	63709	we
O	63710	63715	ought
O	63716	63718	to
O	63719	63724	treat
O	63725	63727	it
O	63728	63731	the
O	63732	63736	same
O	63737	63739	as
O	63740	63748	concrete
O	63749	63756	methods
O	63757	63759	in
O	63760	63768	abstract
O	63769	63776	classes
O	63777	63778	-
O	63779	63783	they
O	63784	63788	need
O	63789	63791	to
O	63792	63794	be
O	63795	63803	designed
O	63804	63813	carefully
O	63814	63816	up
O	63817	63822	front
O	63822	63823	;
O	63824	63827	and
O	63828	63831	new
O	63832	63836	ones
O	63837	63841	must
O	63842	63844	be
O	63845	63855	introduced
O	63856	63860	with
O	63861	63866	great
O	63867	63874	caution
O	63874	63875	.

O	63877	63885	Question
O	63885	63886	-
O	63886	63894	34509566
O	63894	63895	,
O	63896	63902	answer
O	63902	63903	-
O	63903	63911	34509655

O	63912	63914	As
O	63915	63918	you
O	63919	63923	said
O	63924	63934	internally
O	63935	63938	the
O	63939	63943	last
O	63944	63957	concatenation
O	63958	63960	is
O	63961	63965	done
O	63966	63968	to
O	63969	63978	something
O	63979	63986	similar
O	63987	63989	to
B-api_mention	63990	63996	String
O	63997	63998	e
O	63999	64000	=
O	64001	64004	new
B-api_mention	64005	64018	StringBuilder
I-api_mention	64018	64019	(
I-api_mention	64019	64023	args
I-api_mention	64023	64024	)
I-api_mention	64024	64025	.
I-api_mention	64025	64031	append
I-api_mention	64031	64032	(
I-api_mention	64032	64036	args
I-api_mention	64036	64037	)
I-api_mention	64037	64038	.
I-api_mention	64038	64044	append
I-api_mention	64044	64045	(
I-api_mention	64045	64049	args
I-api_mention	64049	64050	)
I-api_mention	64050	64051	.
I-api_mention	64051	64059	toString
I-api_mention	64059	64060	(
I-api_mention	64060	64064	args
I-api_mention	64064	64065	)
O	64065	64066	;
O	64067	64070	the
O	64071	64085	implementation
O	64086	64088	of
B-api_mention	64089	64097	toString
I-api_mention	64097	64098	(
I-api_mention	64098	64102	args
I-api_mention	64102	64103	)
O	64104	64106	of
B-api_mention	64107	64120	StringBuilder
O	64121	64128	creates
O	64129	64130	a
O	64131	64134	new
B-api_mention	64135	64141	String
O	64142	64143	.

O	64144	64148	Here
O	64149	64151	is
O	64152	64155	the
O	64156	64170	implementation
O	64170	64171	.

O	64172	64173	#
O	64173	64176	pre
O	64177	64186	Comparing
O	64187	64194	strings
O	64195	64200	using
O	64201	64202	=
O	64202	64203	=
O	64204	64211	instead
O	64212	64214	of
B-api_mention	64215	64216	.
I-api_mention	64216	64222	equals
I-api_mention	64222	64223	(
I-api_mention	64223	64227	args
I-api_mention	64227	64228	)
O	64229	64236	returns
O	64237	64241	true
O	64242	64246	only
O	64247	64249	if
O	64250	64254	both
O	64255	64262	strings
O	64263	64266	are
O	64267	64270	the
O	64271	64275	same
O	64276	64277	.

O	64278	64280	In
O	64281	64285	this
O	64286	64290	case
O	64291	64295	they
O	64296	64299	are
O	64300	64303	not
O	64304	64307	the
O	64308	64312	same
O	64313	64320	because
O	64321	64324	the
O	64325	64331	second
O	64332	64338	string
O	64339	64341	is
O	64342	64349	created
O	64350	64352	as
O	64353	64354	a
O	64355	64358	new
O	64359	64365	object
O	64366	64368	of
O	64369	64373	type
B-api_mention	64374	64380	String
O	64381	64382	.

O	64383	64386	The
O	64387	64392	other
O	64393	64407	concatenations
O	64408	64411	are
O	64412	64421	performed
O	64422	64430	directly
O	64431	64433	by
O	64434	64437	the
O	64438	64446	compiler
O	64447	64449	so
O	64450	64452	no
O	64453	64456	new
B-api_mention	64457	64463	String
O	64464	64466	is
O	64467	64474	created
O	64474	64475	.

O	64477	64485	Question
O	64485	64486	-
O	64486	64494	34509566
O	64494	64495	,
O	64496	64502	answer
O	64502	64503	-
O	64503	64511	34509659

O	64512	64516	Four
O	64517	64523	things
O	64524	64527	are
O	64528	64533	going
O	64534	64536	on
O	64536	64537	:
O	64538	64539	#
O	64539	64541	li
O	64542	64543	(
O	64543	64546	You
O	64547	64554	clearly
O	64555	64559	know
O	64560	64564	this
O	64564	64565	,
O	64566	64569	but
O	64570	64573	for
O	64574	64581	lurkers
O	64581	64582	)
O	64583	64584	=
O	64584	64585	=
O	64586	64591	tests
O	64592	64594	to
O	64595	64598	see
O	64599	64601	if
O	64602	64605	the
O	64606	64615	variables
O	64616	64621	point
O	64622	64624	to
O	64625	64628	the
O	64629	64633	same
B-api_mention	64634	64640	String
O	64641	64647	object
O	64648	64649	,
O	64650	64653	not
O	64654	64664	equivalent
O	64665	64672	strings
O	64672	64673	.

O	64674	64676	So
O	64677	64681	even
O	64682	64684	if
O	64685	64686	x
O	64687	64689	is
O	64690	64703	StringLiteral
O	64704	64707	and
O	64708	64709	y
O	64710	64712	is
O	64713	64717	also
O	64718	64731	StringLiteral
O	64732	64733	,
O	64734	64735	x
O	64736	64737	=
O	64737	64738	=
O	64739	64740	y
O	64741	64744	may
O	64745	64747	be
O	64748	64752	true
O	64753	64755	or
O	64756	64761	false
O	64761	64762	,
O	64763	64772	depending
O	64773	64775	on
O	64776	64783	whether
O	64784	64785	x
O	64786	64789	and
O	64790	64791	y
O	64792	64797	refer
O	64798	64800	to
O	64801	64804	the
O	64805	64809	same
B-api_mention	64810	64816	String
O	64817	64823	object
O	64824	64826	or
O	64827	64836	different
O	64837	64841	ones
O	64841	64842	.

O	64843	64847	That
O	64847	64848	'
O	64848	64849	s
O	64850	64853	why
O	64854	64856	we
O	64857	64860	use
O	64861	64867	equals
O	64868	64869	,
O	64870	64873	not
O	64874	64875	=
O	64875	64876	=
O	64877	64878	,
O	64879	64881	to
O	64882	64889	compare
O	64890	64897	strings
O	64898	64901	for
O	64902	64913	equivalence
O	64913	64914	.

O	64915	64918	All
O	64919	64921	of
O	64922	64925	the
O	64926	64935	following
O	64936	64938	is
O	64939	64943	just
O	64944	64949	meant
O	64950	64952	to
O	64953	64960	explain
O	64961	64964	why
O	64965	64966	=
O	64966	64967	=
O	64968	64970	is
O	64971	64980	sometimes
O	64981	64985	true
O	64985	64986	,
O	64987	64989	it
O	64989	64990	'
O	64990	64991	s
O	64992	64995	not
O	64996	64997	a
O	64998	65008	suggestion
O	65009	65011	to
O	65012	65015	use
O	65016	65017	=
O	65017	65018	=
O	65019	65021	to
O	65022	65029	compare
O	65030	65037	strings
O	65037	65038	.

O	65039	65040	:
O	65040	65041	-
O	65041	65042	)
O	65043	65044	#
O	65044	65046	li
O	65047	65057	Equivalent
O	65058	65064	string
O	65065	65074	constants
O	65075	65076	(
O	65076	65083	strings
O	65084	65087	the
O	65088	65096	compiler
O	65097	65102	knows
O	65103	65106	are
O	65107	65116	constants
O	65117	65126	according
O	65127	65129	to
O	65130	65137	various
O	65138	65143	rules
O	65144	65146	in
O	65147	65150	the
O	65151	65154	JLS
O	65154	65155	)
O	65156	65162	within
O	65163	65166	the
O	65167	65171	same
O	65172	65177	class
O	65178	65181	are
O	65182	65186	made
O	65187	65189	to
O	65190	65195	refer
O	65196	65198	to
O	65199	65202	the
O	65203	65207	same
O	65208	65214	string
O	65215	65217	by
O	65218	65221	the
O	65222	65230	compiler
O	65231	65232	(
O	65232	65237	which
O	65238	65242	also
O	65243	65248	lists
O	65249	65253	them
O	65254	65256	in
O	65257	65260	the
O	65261	65266	class
O	65266	65267	'
O	65267	65268	s
O	65269	65270	"
O	65270	65278	constant
O	65279	65283	pool
O	65283	65284	"
O	65285	65286	)
O	65286	65287	.

O	65288	65292	That
O	65292	65293	'
O	65293	65294	s
O	65295	65298	why
O	65299	65300	a
O	65301	65302	=
O	65302	65303	=
O	65304	65305	b
O	65306	65308	is
O	65309	65313	true
O	65313	65314	.

O	65315	65316	#
O	65316	65318	li
O	65319	65323	When
O	65324	65327	the
O	65328	65333	class
O	65334	65336	is
O	65337	65343	loaded
O	65343	65344	,
O	65345	65349	each
O	65350	65352	of
O	65353	65356	its
O	65357	65363	string
O	65364	65373	constants
O	65374	65376	is
O	65377	65390	automatically
O	65391	65399	interned
O	65400	65401	—
O	65402	65405	the
O	65406	65409	JVM
O	65409	65410	'
O	65410	65411	s
O	65412	65418	string
O	65419	65423	pool
O	65424	65426	is
O	65427	65434	checked
O	65435	65438	for
O	65439	65441	an
O	65442	65452	equivalent
O	65453	65459	string
O	65460	65463	and
O	65464	65466	if
O	65467	65470	one
O	65471	65473	is
O	65474	65479	found
O	65479	65480	,
O	65481	65485	that
B-api_mention	65486	65492	String
O	65493	65499	object
O	65500	65502	is
O	65503	65507	used
O	65508	65509	(
O	65509	65511	if
O	65512	65515	not
O	65515	65516	,
O	65517	65520	the
O	65521	65524	new
B-api_mention	65525	65531	String
O	65532	65538	object
O	65539	65542	for
O	65543	65546	the
O	65547	65550	new
O	65551	65559	constant
O	65560	65562	is
O	65563	65568	added
O	65569	65571	to
O	65572	65575	the
O	65576	65580	pool
O	65580	65581	)
O	65581	65582	.

O	65583	65585	So
O	65586	65590	even
O	65591	65593	if
O	65594	65595	x
O	65596	65598	is
O	65599	65600	a
O	65601	65607	string
O	65608	65616	constant
O	65617	65628	initialized
O	65629	65631	in
O	65632	65637	class
O	65638	65641	Foo
O	65642	65645	and
O	65646	65647	y
O	65648	65650	is
O	65651	65652	a
O	65653	65659	string
O	65660	65668	constant
O	65669	65680	initialized
O	65681	65683	in
O	65684	65689	class
O	65690	65693	Bar
O	65694	65695	,
O	65696	65700	they
O	65700	65701	'
O	65701	65703	ll
O	65704	65706	be
O	65707	65708	=
O	65708	65709	=
O	65710	65714	each
O	65715	65720	other
O	65720	65721	.

O	65722	65728	Points
O	65729	65730	2
O	65731	65734	and
O	65735	65736	3
O	65737	65742	above
O	65743	65746	are
O	65747	65754	covered
O	65755	65757	in
O	65758	65762	part
O	65763	65765	by
O	65766	65769	JLS
O	65769	65770	§
O	65770	65771	3
O	65771	65772	.
O	65772	65774	10
O	65774	65775	.
O	65775	65776	5
O	65777	65778	.

O	65779	65780	(
O	65780	65783	The
O	65784	65787	bit
O	65788	65793	about
O	65794	65797	the
O	65798	65803	class
O	65804	65812	constant
O	65813	65817	pool
O	65818	65820	is
O	65821	65822	a
O	65823	65826	bit
O	65827	65829	of
O	65830	65832	an
O	65833	65847	implementation
O	65848	65854	detail
O	65854	65855	,
O	65856	65861	hence
O	65862	65865	the
O	65866	65870	link
O	65871	65873	to
O	65874	65877	the
O	65878	65881	JVM
O	65882	65886	spec
O	65887	65894	earlier
O	65894	65895	;
O	65896	65899	the
O	65900	65903	JLS
O	65904	65908	just
O	65909	65915	speaks
O	65916	65918	of
O	65919	65928	interning
O	65928	65929	.
O	65929	65930	)
O	65931	65932	#
O	65932	65934	li
O	65935	65938	The
O	65939	65947	compiler
O	65948	65952	does
O	65953	65959	string
O	65960	65973	concatenation
O	65974	65976	if
O	65977	65979	it
O	65979	65980	'
O	65980	65981	s
O	65982	65989	dealing
O	65990	65994	with
O	65995	66003	constant
O	66004	66010	values
O	66010	66011	,
O	66012	66014	so
B-api_mention	66015	66021	String
O	66022	66023	d
O	66024	66025	=
O	66026	66039	StringLiteral
O	66040	66041	+
O	66042	66055	StringLiteral
O	66055	66056	;
O	66057	66059	is
O	66060	66068	compiled
O	66069	66071	to
B-api_mention	66072	66078	String
O	66079	66080	d
O	66081	66082	=
O	66083	66096	StringLiteral
O	66096	66097	;
O	66098	66101	and
O	66102	66115	StringLiteral
O	66116	66118	is
O	66119	66120	a
O	66121	66127	string
O	66128	66136	constant
O	66137	66140	the
O	66141	66149	compiler
O	66150	66153	and
O	66154	66157	JVM
O	66158	66163	apply
O	66164	66170	points
O	66171	66172	2
O	66173	66176	and
O	66177	66178	3
O	66179	66184	above
O	66185	66187	to
O	66187	66188	.

O	66189	66190	E
O	66190	66191	.
O	66191	66192	g
O	66192	66193	.
O	66193	66194	,
O	66195	66197	no
B-api_mention	66198	66211	StringBuilder
O	66212	66214	is
O	66215	66219	used
O	66219	66220	,
O	66221	66224	the
O	66225	66238	concatenation
O	66239	66246	happens
O	66247	66249	at
O	66250	66257	compile
O	66257	66258	-
O	66258	66262	time
O	66263	66264	,
O	66265	66268	not
O	66269	66276	runtime
O	66276	66277	.

O	66278	66282	This
O	66283	66285	is
O	66286	66293	covered
O	66294	66296	in
O	66297	66300	JLS
O	66300	66301	§
O	66301	66303	15
O	66303	66304	.
O	66304	66306	28
O	66307	66308	-
O	66309	66317	Constant
O	66318	66329	Expressions
O	66330	66331	.

O	66332	66334	So
O	66335	66336	a
O	66337	66338	=
O	66338	66339	=
O	66340	66341	d
O	66342	66344	is
O	66345	66349	true
O	66350	66353	for
O	66354	66357	the
O	66358	66362	same
O	66363	66369	reason
O	66370	66371	a
O	66372	66373	=
O	66373	66374	=
O	66375	66376	b
O	66377	66379	is
O	66380	66384	true
O	66384	66385	:
O	66386	66390	They
O	66391	66396	refer
O	66397	66399	to
O	66400	66403	the
O	66404	66408	same
O	66409	66417	constant
O	66418	66424	string
O	66424	66425	,
O	66426	66428	so
O	66429	66432	the
O	66433	66441	compiler
O	66442	66449	ensured
O	66450	66454	they
O	66455	66459	were
O	66460	66469	referring
O	66470	66472	to
O	66473	66476	the
O	66477	66481	same
O	66482	66488	string
O	66489	66491	in
O	66492	66495	the
O	66496	66501	class
O	66501	66502	'
O	66502	66503	s
O	66504	66512	constant
O	66513	66517	pool
O	66517	66518	.

O	66519	66522	The
O	66523	66531	compiler
O	66532	66535	can
O	66535	66536	'
O	66536	66537	t
O	66538	66540	do
O	66541	66545	that
O	66546	66550	when
O	66551	66554	any
O	66555	66557	of
O	66558	66561	the
O	66562	66570	operands
O	66571	66573	is
O	66574	66577	not
O	66578	66579	a
O	66580	66588	constant
O	66588	66589	,
O	66590	66592	so
O	66593	66595	it
O	66596	66599	can
O	66599	66600	'
O	66600	66601	t
O	66602	66604	do
O	66605	66609	that
O	66610	66614	with
O	66614	66615	:
B-api_mention	66616	66622	String
O	66623	66624	e
O	66625	66626	=
O	66627	66628	c
O	66629	66630	+
O	66631	66644	StringLiteral
O	66644	66645	;
O	66646	66647	.
O	66647	66648	.
O	66648	66649	.
O	66649	66653	even
O	66654	66660	though
O	66661	66665	code
O	66666	66674	analysis
O	66675	66680	could
O	66681	66687	easily
O	66688	66692	show
O	66693	66697	that
O	66698	66701	the
O	66702	66707	value
O	66708	66710	of
O	66711	66712	c
O	66713	66717	will
O	66718	66728	definitely
O	66729	66731	be
O	66732	66745	StringLiteral
O	66746	66749	and
O	66750	66754	thus
O	66755	66756	e
O	66757	66761	will
O	66762	66772	definitely
O	66773	66775	be
O	66776	66789	StringLiteral
O	66790	66791	.

O	66792	66795	The
O	66796	66809	specification
O	66810	66814	only
O	66815	66818	has
O	66819	66822	the
O	66823	66831	compiler
O	66832	66834	do
O	66835	66838	the
O	66839	66852	concatenation
O	66853	66857	with
O	66858	66866	constant
O	66867	66873	values
O	66873	66874	,
O	66875	66887	specifically
O	66887	66888	.

O	66889	66891	So
O	66892	66897	since
O	66898	66901	the
O	66902	66910	compiler
O	66911	66914	can
O	66914	66915	'
O	66915	66916	t
O	66917	66919	do
O	66920	66922	it
O	66922	66923	,
O	66924	66926	it
O	66927	66934	outputs
O	66935	66938	the
B-api_mention	66939	66952	StringBuilder
O	66953	66957	code
O	66958	66961	you
O	66962	66970	referred
O	66971	66973	to
O	66974	66977	and
O	66978	66982	that
O	66983	66987	work
O	66988	66990	is
O	66991	66995	done
O	66996	66998	at
O	66999	67006	runtime
O	67006	67007	,
O	67008	67016	creating
O	67017	67018	a
O	67019	67022	new
B-api_mention	67023	67029	String
O	67030	67036	object
O	67036	67037	.

O	67038	67042	That
O	67043	67049	string
O	67050	67053	isn
O	67053	67054	'
O	67054	67055	t
O	67056	67069	automatically
O	67070	67078	interned
O	67078	67079	,
O	67080	67082	so
O	67083	67084	e
O	67085	67089	ends
O	67090	67092	up
O	67093	67102	referring
O	67103	67105	to
O	67106	67107	a
O	67108	67117	different
B-api_mention	67118	67124	String
O	67125	67131	object
O	67132	67136	than
O	67137	67138	a
O	67139	67143	does
O	67143	67144	,
O	67145	67148	and
O	67149	67151	so
O	67152	67153	a
O	67154	67155	=
O	67155	67156	=
O	67157	67158	e
O	67159	67161	is
O	67162	67167	false
O	67167	67168	.

O	67169	67173	Note
O	67174	67178	that
O	67179	67181	as
O	67182	67187	Vinod
O	67188	67192	said
O	67193	67194	,
O	67195	67197	if
O	67198	67201	you
O	67202	67210	declared
O	67211	67212	c
O	67213	67215	as
O	67216	67221	final
O	67222	67223	:
O	67224	67229	final
B-api_mention	67230	67236	String
O	67237	67238	c
O	67239	67240	=
O	67241	67254	StringLiteral
O	67254	67255	;
O	67256	67260	Then
O	67261	67263	it
O	67264	67269	would
O	67270	67272	be
O	67273	67274	a
O	67275	67283	constant
O	67284	67292	variable
O	67293	67294	(
O	67294	67297	yes
O	67297	67298	,
O	67299	67303	they
O	67303	67304	'
O	67304	67306	re
O	67307	67313	really
O	67314	67320	called
O	67321	67325	that
O	67325	67326	)
O	67327	67330	and
O	67331	67333	so
O	67334	67335	§
O	67335	67337	15
O	67337	67338	.
O	67338	67340	28
O	67341	67346	would
O	67347	67352	apply
O	67353	67356	and
O	67357	67360	the
O	67361	67369	compiler
O	67370	67375	would
O	67376	67380	turn
B-api_mention	67381	67387	String
O	67388	67389	e
O	67390	67391	=
O	67392	67393	c
O	67394	67395	+
O	67396	67409	StringLiteral
O	67409	67410	;
O	67411	67415	into
B-api_mention	67416	67422	String
O	67423	67424	e
O	67425	67426	=
O	67427	67440	StringLiteral
O	67440	67441	;
O	67442	67445	and
O	67446	67447	a
O	67448	67449	=
O	67449	67450	=
O	67451	67452	e
O	67453	67458	would
O	67459	67463	also
O	67464	67466	be
O	67467	67471	true
O	67471	67472	.

O	67473	67477	Just
O	67478	67480	to
O	67481	67490	reiterate
O	67490	67491	:
O	67492	67496	None
O	67497	67499	of
O	67500	67505	which
O	67506	67511	means
O	67512	67514	we
O	67515	67521	should
O	67522	67525	use
O	67526	67527	=
O	67527	67528	=
O	67529	67531	to
O	67532	67539	compare
O	67540	67547	strings
O	67548	67551	for
O	67552	67563	equivalence
O	67563	67564	.

O	67565	67566	:
O	67566	67567	-
O	67567	67568	)
O	67569	67573	That
O	67573	67574	'
O	67574	67575	s
O	67576	67580	what
O	67581	67587	equals
O	67588	67590	is
O	67591	67594	for
O	67594	67595	.

O	67597	67605	Question
O	67605	67606	-
O	67606	67614	34509566
O	67614	67615	,
O	67616	67622	answer
O	67622	67623	-
O	67623	67631	34509669

O	67632	67635	The
O	67636	67646	difference
O	67647	67654	between
O	67655	67656	d
O	67657	67660	and
O	67661	67662	e
O	67663	67665	is
O	67666	67670	that
O	67671	67675	when
O	67676	67679	you
O	67680	67691	concatenate
O	67692	67698	string
O	67699	67707	literals
O	67708	67709	,
O	67710	67713	the
O	67714	67727	concatenation
O	67728	67730	is
O	67731	67740	performed
O	67741	67743	at
O	67744	67751	compile
O	67752	67756	time
O	67756	67757	.

O	67758	67762	Java
O	67763	67771	compiler
O	67772	67778	treats
O	67779	67792	StringLiteral
O	67793	67794	+
O	67795	67808	StringLiteral
O	67809	67819	expression
O	67820	67822	in
O	67823	67826	the
O	67827	67831	same
O	67832	67835	way
O	67836	67838	as
O	67839	67852	StringLiteral
O	67853	67863	expression
O	67863	67864	,
O	67865	67874	producing
O	67875	67878	the
O	67879	67883	same
O	67884	67891	literal
O	67892	67894	at
O	67895	67902	compile
O	67903	67907	time
O	67907	67908	.

O	67909	67914	Since
O	67915	67918	all
B-api_mention	67919	67925	String
O	67926	67934	literals
O	67935	67938	get
O	67939	67947	interned
O	67947	67948	,
O	67949	67950	d
O	67951	67952	,
O	67953	67958	which
O	67959	67961	is
O	67962	67963	a
O	67964	67970	result
O	67971	67973	of
O	67974	67987	StringLiteral
O	67988	67989	+
O	67990	68003	StringLiteral
O	68004	68005	,
O	68006	68010	also
O	68011	68015	ends
O	68016	68018	up
O	68019	68030	referencing
O	68031	68034	the
O	68035	68039	same
O	68040	68046	object
O	68047	68049	as
O	68050	68051	a
O	68052	68055	and
O	68056	68057	b
O	68058	68059	'
O	68059	68060	s
O	68061	68074	StringLiteral
O	68075	68076	.

O	68077	68080	The
O	68081	68091	expression
O	68092	68095	for
O	68096	68097	e
O	68098	68099	,
O	68100	68105	which
O	68106	68108	is
O	68109	68110	c
O	68111	68112	+
O	68113	68126	StringLiteral
O	68127	68128	,
O	68129	68131	is
O	68132	68141	evaluated
O	68142	68144	at
O	68145	68152	runtime
O	68153	68154	.

O	68155	68159	Even
O	68160	68166	though
O	68167	68169	it
O	68170	68178	produces
O	68179	68182	the
O	68183	68187	same
O	68188	68194	string
O	68194	68195	,
O	68196	68200	this
O	68201	68205	fact
O	68206	68208	is
O	68209	68212	not
O	68213	68217	used
O	68218	68220	by
O	68221	68224	the
O	68225	68233	compiler
O	68233	68234	.

O	68235	68239	That
O	68239	68240	'
O	68240	68241	s
O	68242	68245	why
O	68246	68247	a
O	68248	68257	different
B-api_mention	68258	68264	String
O	68265	68271	object
O	68272	68274	is
O	68275	68283	produced
O	68283	68284	,
O	68285	68294	resulting
O	68295	68297	in
O	68298	68304	failed
O	68305	68315	comparison
O	68316	68318	on
O	68319	68320	=
O	68320	68321	=
O	68322	68323	.

O	68325	68333	Question
O	68333	68334	-
O	68334	68342	34509566
O	68342	68343	,
O	68344	68350	answer
O	68350	68351	-
O	68351	68359	34529067

O	68360	68364	Keep
O	68365	68367	in
O	68368	68372	mind
O	68373	68377	that
O	68378	68382	Java
O	68383	68388	holds
O	68389	68390	a
O	68391	68395	pool
O	68396	68398	of
O	68399	68402	all
O	68403	68409	string
O	68410	68418	literals
O	68419	68424	found
O	68425	68427	in
O	68428	68435	program
O	68435	68436	,
O	68437	68441	used
O	68442	68445	for
O	68446	68454	matching
O	68455	68463	purposes
O	68464	68469	among
O	68470	68476	others
O	68476	68477	,
O	68478	68480	so
O	68481	68484	any
O	68485	68494	different
O	68495	68501	string
O	68502	68509	literal
O	68510	68523	concatenation
O	68524	68529	above
O	68530	68534	will
O	68535	68539	lead
O	68540	68542	to
O	68543	68546	the
O	68547	68551	same
O	68552	68558	object
O	68558	68559	,
O	68560	68562	to
O	68563	68566	the
O	68567	68571	same
O	68572	68578	string
O	68579	68586	literal
O	68586	68587	.

O	68588	68591	You
O	68592	68595	can
O	68596	68601	check
O	68602	68605	out
O	68606	68610	this
O	68611	68617	useful
O	68618	68625	article
O	68626	68629	for
O	68630	68634	more
O	68634	68635	.

O	68636	68638	On
O	68639	68642	the
O	68643	68648	other
O	68649	68653	hand
O	68653	68654	,
O	68655	68658	the
O	68659	68672	concatenation
O	68673	68675	of
O	68676	68677	a
B-api_mention	68678	68684	String
O	68685	68691	object
O	68692	68695	and
O	68696	68697	a
O	68698	68705	literal
O	68706	68707	(
O	68707	68711	case
O	68712	68713	c
O	68714	68715	+
O	68716	68729	StringLiteral
O	68730	68731	)
O	68732	68736	will
O	68737	68741	lead
O	68742	68744	to
O	68745	68748	the
O	68749	68757	creation
O	68758	68760	of
O	68761	68762	a
O	68763	68765	as
B-api_mention	68766	68779	StringBuilder
O	68780	68786	object
O	68787	68789	at
O	68790	68797	runtime
O	68797	68798	,
O	68799	68808	different
O	68809	68811	to
O	68812	68815	the
O	68816	68824	literals
O	68825	68830	found
O	68831	68833	in
O	68834	68838	pool
O	68838	68839	.

O	68841	68849	Question
O	68849	68850	-
O	68850	68858	32334319
O	68858	68859	,
O	68860	68866	answer
O	68866	68867	-
O	68867	68875	32334651

O	68876	68879	The
O	68880	68883	API
O	68884	68894	guarantees
O	68895	68896	a
O	68897	68903	stable
O	68904	68911	sorting
O	68912	68917	which
O	68918	68927	Quicksort
O	68928	68933	doesn
O	68933	68934	’
O	68934	68935	t
O	68936	68941	offer
O	68941	68942	.

O	68943	68950	However
O	68950	68951	,
O	68952	68956	when
O	68957	68964	sorting
O	68965	68974	primitive
O	68975	68981	values
O	68982	68984	by
O	68985	68990	their
O	68991	68998	natural
O	68999	69004	order
O	69005	69008	you
O	69009	69012	won
O	69012	69013	’
O	69013	69014	t
O	69015	69021	notice
O	69022	69023	a
O	69024	69034	difference
O	69035	69037	as
O	69038	69047	primitive
O	69048	69054	values
O	69055	69059	have
O	69060	69062	no
O	69063	69071	identity
O	69071	69072	.

O	69073	69082	Therefore
O	69082	69083	,
O	69084	69093	Quicksort
O	69094	69096	is
O	69097	69101	used
O	69102	69105	for
O	69106	69115	primitive
O	69116	69122	arrays
O	69123	69125	as
O	69126	69128	it
O	69129	69131	is
O	69132	69140	slightly
O	69141	69145	more
O	69146	69155	efficient
O	69155	69156	.

O	69157	69160	For
O	69161	69168	objects
O	69169	69172	you
O	69173	69176	may
O	69177	69183	notice
O	69183	69184	,
O	69185	69189	when
O	69190	69197	objects
O	69198	69203	which
O	69204	69207	are
O	69208	69214	deemed
O	69215	69220	equal
O	69221	69230	according
O	69231	69233	to
O	69234	69239	their
O	69240	69246	equals
O	69247	69261	implementation
O	69262	69264	or
O	69265	69268	the
O	69269	69277	provided
B-api_mention	69278	69288	Comparator
O	69289	69295	change
O	69296	69301	their
O	69302	69307	order
O	69307	69308	.

O	69309	69318	Therefore
O	69318	69319	,
O	69320	69329	Quicksort
O	69330	69332	is
O	69333	69336	not
O	69337	69339	an
O	69340	69346	option
O	69346	69347	.

O	69348	69350	So
O	69351	69352	a
O	69353	69360	variant
O	69361	69363	of
O	69364	69373	MergeSort
O	69374	69376	is
O	69377	69381	used
O	69381	69382	,
O	69383	69386	the
O	69387	69394	current
O	69395	69399	Java
O	69400	69408	versions
O	69409	69412	use
O	69413	69420	TimSort
O	69421	69422	.

O	69423	69427	This
O	69428	69435	applies
O	69436	69438	to
O	69439	69443	both
O	69443	69444	,
B-api_mention	69445	69451	Arrays
I-api_mention	69451	69452	.
I-api_mention	69452	69456	sort
O	69457	69460	and
B-api_mention	69461	69472	Collections
I-api_mention	69472	69473	.
I-api_mention	69473	69477	sort
O	69478	69479	,
O	69480	69486	though
O	69487	69491	with
O	69492	69496	Java
O	69497	69498	8
O	69498	69499	,
O	69500	69503	the
B-api_mention	69504	69508	List
O	69509	69515	itself
O	69516	69519	may
O	69520	69528	override
O	69529	69532	the
O	69533	69537	sort
O	69538	69548	algorithms
O	69548	69549	.

O	69551	69559	Question
O	69559	69560	-
O	69560	69568	32334319
O	69568	69569	,
O	69570	69576	answer
O	69576	69577	-
O	69577	69585	39380442

O	69586	69588	As
O	69589	69595	stated
O	69596	69602	across
O	69603	69607	many
O	69608	69610	of
O	69611	69614	the
O	69615	69622	answers
O	69622	69623	.

O	69624	69627	The
O	69628	69637	Quicksort
O	69638	69640	is
O	69641	69645	used
O	69646	69648	by
B-api_mention	69649	69655	Arrays
I-api_mention	69655	69656	.
I-api_mention	69656	69660	sort
O	69661	69664	for
O	69665	69672	sorting
O	69673	69682	primitive
O	69683	69694	collections
O	69695	69702	because
O	69703	69712	stability
O	69713	69716	isn
O	69716	69717	'
O	69717	69718	t
O	69719	69727	required
O	69728	69729	(
O	69729	69732	you
O	69733	69736	won
O	69736	69737	'
O	69737	69738	t
O	69739	69743	know
O	69744	69746	or
O	69747	69751	care
O	69752	69754	if
O	69755	69758	two
O	69759	69768	identical
O	69769	69773	ints
O	69774	69778	were
O	69779	69786	swapped
O	69787	69789	in
O	69790	69793	the
O	69794	69798	sort
O	69798	69799	)
O	69800	69809	MergeSort
O	69810	69812	or
O	69813	69817	more
O	69818	69830	specifically
O	69831	69838	Timsort
O	69839	69841	is
O	69842	69846	used
O	69847	69849	by
B-api_mention	69850	69856	Arrays
I-api_mention	69856	69857	.
I-api_mention	69857	69861	sort
O	69862	69865	for
O	69866	69873	sorting
O	69874	69885	collections
O	69886	69888	of
O	69889	69896	objects
O	69896	69897	.

O	69898	69907	Stability
O	69908	69910	is
O	69911	69919	required
O	69919	69920	.

O	69921	69930	Quicksort
O	69931	69935	does
O	69936	69939	not
O	69940	69947	provide
O	69948	69951	for
O	69952	69961	stability
O	69961	69962	,
O	69963	69970	Timsort
O	69971	69975	does
O	69975	69976	.

B-api_mention	69977	69988	Collections
I-api_mention	69988	69989	.
I-api_mention	69989	69993	sort
O	69994	70003	delegates
O	70004	70006	to
B-api_mention	70007	70013	Arrays
I-api_mention	70013	70014	.
I-api_mention	70014	70018	sort
O	70019	70024	which
O	70025	70027	is
O	70028	70031	why
O	70032	70035	you
O	70036	70039	see
O	70040	70043	the
O	70044	70051	javadoc
O	70052	70063	referencing
O	70064	70067	the
O	70068	70077	MergeSort
O	70077	70078	.

O	70080	70088	Question
O	70088	70089	-
O	70089	70097	31270759
O	70097	70098	,
O	70099	70105	answer
O	70105	70106	-
O	70106	70114	31270760

O	70115	70124	Presented
O	70125	70130	below
O	70131	70133	is
O	70134	70137	the
O	70138	70142	full
O	70143	70147	code
O	70148	70150	of
O	70151	70154	the
B-api_mention	70155	70166	Exceptional
O	70167	70172	class
O	70172	70173	.

O	70174	70176	It
O	70177	70180	has
O	70181	70182	a
O	70183	70188	quite
O	70189	70194	large
O	70195	70198	API
O	70199	70204	which
O	70205	70207	is
O	70208	70209	a
O	70210	70214	pure
O	70215	70224	extension
O	70225	70227	of
O	70228	70231	the
B-api_mention	70232	70240	Optional
O	70241	70244	API
O	70245	70247	so
O	70248	70250	it
O	70251	70254	can
O	70255	70257	be
O	70258	70259	a
O	70260	70264	drop
O	70264	70265	-
O	70265	70267	in
O	70268	70279	replacement
O	70280	70283	for
O	70284	70286	it
O	70287	70289	in
O	70290	70293	any
O	70294	70302	existing
O	70303	70307	code
O	70307	70308	—
O	70308	70314	except
O	70315	70319	that
O	70320	70322	it
O	70323	70326	isn
O	70326	70327	'
O	70327	70328	t
O	70329	70330	a
O	70331	70338	subtype
O	70339	70341	of
O	70342	70345	the
O	70346	70351	final
B-api_mention	70352	70360	Optional
O	70361	70366	class
O	70366	70367	.

O	70368	70371	The
O	70372	70377	class
O	70378	70381	can
O	70382	70384	be
O	70385	70389	seen
O	70390	70392	as
O	70393	70398	being
O	70399	70401	in
O	70402	70405	the
O	70406	70410	same
O	70411	70423	relationship
O	70424	70428	with
O	70429	70432	the
O	70433	70436	Try
O	70437	70442	monad
O	70443	70445	as
B-api_mention	70446	70454	Optional
O	70455	70457	is
O	70458	70462	with
O	70463	70466	the
O	70467	70472	Maybe
O	70473	70478	monad
O	70478	70479	:
O	70480	70482	it
O	70483	70488	draws
O	70489	70500	inspiration
O	70501	70505	from
O	70506	70508	it
O	70508	70509	,
O	70510	70513	but
O	70514	70516	is
O	70517	70524	adapted
O	70525	70527	to
O	70528	70531	the
O	70532	70536	Java
O	70537	70542	idiom
O	70543	70544	(
O	70544	70548	such
O	70549	70551	as
O	70552	70560	actually
O	70561	70569	throwing
O	70570	70580	exceptions
O	70580	70581	,
O	70582	70586	even
O	70587	70591	from
O	70592	70595	non
O	70595	70596	-
O	70596	70604	terminal
O	70605	70615	operations
O	70615	70616	)
O	70616	70617	.

O	70618	70623	These
O	70624	70627	are
O	70628	70632	some
O	70633	70636	key
O	70637	70647	guidelines
O	70648	70656	followed
O	70657	70659	by
O	70660	70663	the
O	70664	70669	class
O	70669	70670	:
O	70671	70672	#
O	70672	70674	li
O	70675	70677	as
O	70678	70685	opposed
O	70686	70688	to
O	70689	70692	the
O	70693	70700	monadic
O	70701	70709	approach
O	70709	70710	,
O	70711	70716	doesn
O	70716	70717	'
O	70717	70718	t
O	70719	70725	ignore
O	70726	70730	Java
O	70730	70731	'
O	70731	70732	s
O	70733	70742	exception
O	70743	70752	mechanism
O	70752	70753	;
O	70754	70755	#
O	70755	70757	li
O	70758	70765	instead
O	70766	70768	it
O	70769	70777	relieves
O	70778	70781	the
O	70782	70791	impedance
O	70792	70800	mismatch
O	70801	70808	between
O	70809	70819	exceptions
O	70820	70823	and
O	70824	70830	higher
O	70830	70831	-
O	70831	70836	order
O	70837	70846	functions
O	70846	70847	;
O	70848	70849	#
O	70849	70851	li
O	70852	70861	exception
O	70862	70870	handling
O	70871	70874	not
O	70875	70885	statically
O	70886	70894	typesafe
O	70895	70896	(
O	70896	70899	due
O	70900	70902	to
O	70903	70909	sneaky
O	70910	70918	throwing
O	70918	70919	)
O	70919	70920	,
O	70921	70924	but
O	70925	70931	always
O	70932	70936	safe
O	70937	70939	at
O	70940	70947	runtime
O	70948	70949	(
O	70949	70954	never
O	70955	70963	swallows
O	70964	70966	an
O	70967	70976	exception
O	70977	70983	except
O	70984	70986	on
O	70987	70995	explicit
O	70996	71003	request
O	71003	71004	)
O	71004	71005	.

O	71006	71009	The
O	71010	71015	class
O	71016	71021	tries
O	71022	71024	to
O	71025	71030	cover
O	71031	71034	all
O	71035	71038	the
O	71039	71046	typical
O	71047	71051	ways
O	71052	71054	to
O	71055	71061	handle
O	71062	71064	an
O	71065	71074	exception
O	71074	71075	:
O	71076	71077	#
O	71077	71079	li
O	71080	71087	recover
O	71088	71092	with
O	71093	71097	some
O	71098	71106	handling
O	71107	71111	code
O	71112	71117	which
O	71118	71126	provides
O	71127	71128	a
O	71129	71139	substitute
O	71140	71145	value
O	71145	71146	;
O	71147	71148	#
O	71148	71150	li
B-api_mention	71151	71162	flatRecover
O	71163	71168	which
O	71168	71169	,
O	71170	71179	analogous
O	71180	71182	to
B-api_mention	71183	71190	flatMap
O	71191	71192	,
O	71193	71199	allows
O	71200	71202	to
O	71203	71209	return
O	71210	71211	a
O	71212	71215	new
B-api_mention	71216	71227	Exceptional
O	71228	71236	instance
O	71237	71242	which
O	71243	71247	will
O	71248	71250	be
O	71251	71260	unwrapped
O	71261	71264	and
O	71265	71268	the
O	71269	71274	state
O	71275	71277	of
O	71278	71281	the
O	71282	71289	current
O	71290	71298	instance
O	71299	71307	suitably
O	71308	71315	updated
O	71315	71316	;
O	71317	71318	#
O	71318	71320	li
O	71321	71330	propagate
O	71331	71333	an
O	71334	71343	exception
O	71343	71344	,
O	71345	71353	throwing
O	71354	71356	it
O	71357	71361	from
O	71362	71365	the
B-api_mention	71366	71377	Exceptional
O	71378	71388	expression
O	71389	71392	and
O	71393	71399	making
O	71400	71403	the
O	71404	71413	propagate
O	71414	71418	call
O	71419	71426	declare
O	71427	71431	this
O	71432	71441	exception
O	71442	71446	type
O	71446	71447	;
O	71448	71449	#
O	71449	71451	li
O	71452	71461	propagate
O	71462	71464	it
O	71465	71470	after
O	71471	71479	wrapping
O	71480	71484	into
O	71485	71492	another
O	71493	71502	exception
O	71503	71504	(
O	71505	71514	translate
O	71515	71517	it
O	71517	71518	)
O	71518	71519	;
O	71520	71521	#
O	71521	71523	li
O	71524	71530	handle
O	71531	71533	it
O	71533	71534	,
O	71535	71544	resulting
O	71545	71547	in
O	71548	71550	an
O	71551	71556	empty
B-api_mention	71557	71568	Exceptional
O	71569	71570	;
O	71571	71572	#
O	71572	71574	li
O	71575	71577	as
O	71578	71579	a
O	71580	71587	special
O	71588	71592	case
O	71593	71595	of
O	71596	71604	handling
O	71604	71605	,
O	71606	71613	swallow
O	71614	71616	it
O	71617	71621	with
O	71622	71624	an
O	71625	71630	empty
O	71631	71638	handler
O	71639	71644	block
O	71644	71645	.

O	71646	71649	The
O	71650	71659	propagate
O	71660	71668	approach
O	71669	71675	allows
O	71676	71679	one
O	71680	71682	to
O	71683	71694	selectively
O	71695	71699	pick
O	71700	71705	which
O	71706	71713	checked
O	71714	71724	exceptions
O	71725	71727	he
O	71728	71733	wants
O	71734	71736	to
O	71737	71743	expose
O	71744	71748	from
O	71749	71752	his
O	71753	71757	code
O	71757	71758	.

B-api_mention	71759	71769	Exceptions
O	71770	71775	which
O	71776	71782	remain
O	71783	71792	unhandled
O	71793	71795	at
O	71796	71799	the
O	71800	71804	time
O	71805	71806	a
O	71807	71815	terminal
O	71816	71825	operation
O	71826	71828	is
O	71829	71835	called
O	71836	71837	(
O	71837	71841	like
O	71842	71845	get
O	71846	71847	)
O	71848	71852	will
O	71853	71855	be
O	71856	71864	sneakily
O	71865	71871	thrown
O	71872	71879	without
O	71880	71891	declaration
O	71891	71892	.

O	71893	71897	This
O	71898	71900	is
O	71901	71906	often
O	71907	71917	considered
O	71918	71920	as
O	71921	71923	an
O	71924	71932	advanced
O	71933	71936	and
O	71937	71946	dangerous
O	71947	71955	approach
O	71955	71956	,
O	71957	71960	but
O	71961	71963	is
O	71964	71976	nevertheless
O	71977	71982	often
O	71983	71991	employed
O	71992	71994	as
O	71995	71996	a
O	71997	72000	way
O	72001	72003	to
O	72004	72012	somewhat
O	72013	72022	alleviate
O	72023	72026	the
O	72027	72035	nuisance
O	72036	72038	of
O	72039	72046	checked
O	72047	72057	exceptions
O	72058	72060	in
O	72061	72072	combination
O	72073	72077	with
O	72078	72084	lambda
O	72085	72091	shapes
O	72092	72097	which
O	72098	72100	do
O	72101	72104	not
O	72105	72112	declare
O	72113	72117	them
O	72117	72118	.

O	72119	72122	The
B-api_mention	72123	72134	Exceptional
O	72135	72140	class
O	72141	72146	hopes
O	72147	72149	to
O	72150	72155	offer
O	72156	72157	a
O	72158	72165	cleaner
O	72166	72169	and
O	72170	72174	more
O	72175	72184	selective
O	72185	72196	alternative
O	72197	72199	to
O	72200	72206	sneaky
O	72207	72212	throw
O	72212	72213	.

O	72214	72215	#
O	72215	72218	pre
O	72219	72220	#
O	72220	72223	pre
O	72224	72225	#
O	72225	72228	pre

O	72230	72238	Question
O	72238	72239	-
O	72239	72247	31270759
O	72247	72248	,
O	72249	72255	answer
O	72255	72256	-
O	72256	72264	31273726

O	72265	72269	What
O	72270	72272	if
O	72273	72278	every
O	72279	72289	functional
O	72290	72299	interface
O	72300	72308	provided
O	72309	72311	by
B-api_mention	72312	72316	java
I-api_mention	72316	72317	.
I-api_mention	72317	72321	util
I-api_mention	72321	72322	.
I-api_mention	72322	72330	function
O	72331	72334	was
O	72335	72342	allowed
O	72343	72345	to
O	72346	72351	throw
O	72352	72354	an
O	72355	72364	exception
O	72364	72365	?

O	72366	72367	#
O	72367	72370	pre
O	72371	72373	We
O	72374	72379	could
O	72380	72383	use
O	72384	72388	some
O	72389	72396	default
O	72397	72404	methods
O	72405	72407	to
O	72408	72415	provide
O	72416	72419	the
O	72420	72428	behavior
O	72429	72432	you
O	72433	72437	want
O	72437	72438	.

O	72439	72440	#
O	72440	72442	li
O	72443	72446	You
O	72447	72452	could
O	72453	72461	fallback
O	72462	72464	to
O	72465	72469	some
O	72470	72477	default
O	72478	72483	value
O	72484	72486	or
O	72487	72493	action
O	72494	72495	#
O	72495	72497	li
O	72498	72500	Or
O	72501	72504	you
O	72505	72510	could
O	72511	72514	try
O	72515	72517	to
O	72518	72525	perform
O	72526	72533	another
O	72534	72540	action
O	72541	72546	which
O	72547	72550	may
O	72551	72556	throw
O	72557	72559	an
O	72560	72569	exception
O	72570	72571	I
O	72571	72572	'
O	72572	72574	ve
O	72575	72582	written
O	72583	72584	a
O	72585	72592	library
O	72593	72598	which
O	72599	72608	redefines
O	72609	72613	most
O	72614	72616	of
O	72617	72620	the
O	72621	72631	interfaces
O	72632	72634	in
B-api_mention	72635	72639	java
I-api_mention	72639	72640	.
I-api_mention	72640	72644	util
I-api_mention	72644	72645	.
I-api_mention	72645	72653	function
O	72654	72658	this
O	72659	72662	way
O	72662	72663	.

O	72664	72665	I
O	72666	72670	even
O	72671	72678	provide
O	72679	72680	a
B-api_mention	72681	72695	ThrowingStream
O	72696	72701	which
O	72702	72705	let
O	72705	72706	'
O	72706	72707	s
O	72708	72711	you
O	72712	72715	use
O	72716	72721	these
O	72722	72725	new
O	72726	72736	interfaces
O	72737	72741	with
O	72742	72745	the
O	72746	72750	same
O	72751	72754	API
O	72755	72757	as
O	72758	72759	a
O	72760	72767	regular
B-api_mention	72768	72774	Stream
O	72775	72776	.

O	72777	72778	#
O	72778	72781	pre
O	72782	72783	(
O	72784	72791	Nothing
O	72792	72794	is
O	72795	72796	a
B-api_mention	72797	72813	RuntimeException
O	72814	72818	that
O	72819	72822	can
O	72823	72828	never
O	72829	72831	be
O	72832	72838	thrown
O	72838	72839	.
O	72839	72840	)
O	72841	72845	Your
O	72846	72854	original
O	72855	72862	example
O	72863	72868	would
O	72869	72875	become
O	72876	72877	#
O	72877	72880	pre

O	72882	72890	Question
O	72890	72891	-
O	72891	72899	31419029
O	72899	72900	,
O	72901	72907	answer
O	72907	72908	-
O	72908	72916	31419047

O	72917	72919	An
O	72920	72925	empty
B-api_mention	72926	72933	HashMap
O	72934	72940	object
O	72941	72943	is
O	72944	72948	much
O	72949	72956	smaller
O	72957	72961	than
O	72962	72964	an
O	72965	72970	array
O	72971	72973	of
O	72974	72978	2000
B-api_mention	72979	72985	Object
O	72986	72996	references
O	72996	72997	.

O	72998	73002	Even
O	73003	73009	though
O	73010	73013	you
O	73014	73018	pass
O	73019	73023	2000
O	73024	73026	to
O	73027	73030	the
O	73031	73046	initialCapacity
O	73047	73056	parameter
O	73057	73059	of
O	73060	73063	the
B-api_mention	73064	73071	HashMap
O	73072	73083	constructor
O	73083	73084	,
O	73085	73087	it
O	73087	73088	'
O	73088	73089	s
O	73090	73093	not
O	73094	73102	actually
O	73103	73111	creating
O	73112	73116	2000
O	73117	73123	spaces
O	73124	73127	for
O	73128	73135	objects
O	73136	73139	yet
O	73139	73140	.

O	73142	73150	Question
O	73150	73151	-
O	73151	73159	31419029
O	73159	73160	,
O	73161	73167	answer
O	73167	73168	-
O	73168	73176	31419077

O	73177	73179	If
O	73180	73183	you
O	73184	73188	look
O	73189	73191	at
O	73192	73195	the
O	73196	73210	implementation
O	73211	73213	of
B-api_mention	73214	73221	HashMap
O	73222	73223	,
O	73224	73227	the
O	73228	73239	constructor
O	73240	73245	looks
O	73246	73250	like
O	73250	73251	:
O	73252	73253	#
O	73253	73256	pre
O	73257	73260	And
B-api_mention	73261	73265	init
I-api_mention	73265	73266	(
I-api_mention	73266	73270	args
I-api_mention	73270	73271	)
O	73272	73277	looks
O	73278	73282	like
O	73282	73283	:
O	73284	73285	#
O	73285	73288	pre
O	73289	73291	So
O	73292	73307	initialCapacity
O	73308	73313	doesn
O	73313	73314	'
O	73314	73315	t
O	73316	73324	actually
O	73325	73328	get
O	73329	73333	used
O	73334	73336	to
O	73337	73343	create
O	73344	73346	an
O	73347	73352	array
O	73352	73353	.

O	73354	73359	Where
O	73360	73364	does
O	73365	73367	it
O	73368	73371	get
O	73372	73376	used
O	73376	73377	?

O	73378	73382	Look
O	73383	73385	at
O	73386	73389	the
B-api_mention	73390	73393	put
I-api_mention	73393	73394	(
I-api_mention	73394	73398	args
I-api_mention	73398	73399	)
O	73400	73406	method
O	73406	73407	.

O	73408	73409	#
O	73409	73412	pre
O	73413	73417	When
O	73418	73423	doing
O	73424	73425	a
O	73426	73429	put
O	73429	73430	,
O	73431	73434	the
O	73435	73440	array
O	73441	73443	is
O	73444	73452	actually
O	73453	73460	created
O	73460	73461	.

O	73462	73463	I
O	73464	73468	didn
O	73468	73469	'
O	73469	73470	t
O	73471	73475	show
O	73476	73488	inflateTable
O	73488	73489	(
O	73489	73493	args
O	73493	73494	)
O	73495	73498	but
O	73499	73501	it
O	73502	73506	does
O	73507	73511	some
O	73512	73516	math
O	73517	73520	and
O	73521	73532	initializes
O	73533	73536	the
O	73537	73542	array
O	73542	73543	.

O	73545	73553	Question
O	73553	73554	-
O	73554	73562	32294367
O	73562	73563	,
O	73564	73570	answer
O	73570	73571	-
O	73571	73579	32294898

O	73580	73581	#
O	73581	73591	blockquote
O	73592	73595	Let
O	73596	73598	me
O	73599	73602	ask
O	73603	73604	a
O	73605	73620	counterquestion
O	73620	73621	:
O	73622	73625	why
O	73626	73628	do
O	73629	73632	you
O	73633	73638	think
B-api_mention	73639	73645	Thread
I-api_mention	73645	73646	.
I-api_mention	73646	73650	stop
I-api_mention	73650	73651	(
I-api_mention	73651	73655	args
I-api_mention	73655	73656	)
O	73657	73660	has
O	73661	73665	been
O	73666	73676	deprecated
O	73677	73680	for
O	73681	73685	more
O	73686	73690	than
O	73691	73692	a
O	73693	73699	decade
O	73699	73700	?

O	73701	73704	The
O	73705	73711	reason
O	73712	73715	why
O	73716	73718	is
O	73719	73728	precisely
O	73729	73732	the
O	73733	73741	negation
O	73742	73744	of
O	73745	73749	your
O	73750	73759	statement
O	73760	73765	above
O	73765	73766	.

O	73767	73769	To
O	73770	73774	give
O	73775	73778	two
O	73779	73787	specific
O	73788	73796	examples
O	73796	73797	:
O	73798	73801	you
B-api_mention	73802	73806	stop
I-api_mention	73806	73807	(
I-api_mention	73807	73811	args
I-api_mention	73811	73812	)
O	73813	73814	a
O	73815	73821	thread
O	73822	73827	while
O	73828	73830	it
O	73830	73831	'
O	73831	73832	s
O	73833	73842	executing
O	73843	73852	something
O	73853	73855	as
O	73856	73865	innocuous
O	73865	73866	-
O	73866	73874	sounding
O	73875	73877	as
B-api_mention	73878	73884	System
I-api_mention	73884	73885	.
I-api_mention	73885	73888	out
I-api_mention	73888	73889	.
I-api_mention	73889	73896	println
I-api_mention	73896	73897	(
I-api_mention	73897	73901	args
I-api_mention	73901	73902	)
O	73903	73905	or
B-api_mention	73906	73910	Math
I-api_mention	73910	73911	.
I-api_mention	73911	73917	random
I-api_mention	73917	73918	(
I-api_mention	73918	73922	args
I-api_mention	73922	73923	)
O	73924	73925	.

O	73926	73932	Result
O	73932	73933	:
O	73934	73939	those
O	73940	73943	two
O	73944	73952	features
O	73953	73956	are
O	73957	73960	now
O	73961	73967	broken
O	73968	73971	for
O	73972	73975	the
O	73976	73982	entire
O	73983	73986	JVM
O	73986	73987	.

O	73988	73991	The
O	73992	73996	same
O	73997	74005	pertains
O	74006	74008	to
O	74009	74012	any
O	74013	74018	other
O	74019	74031	synchronized
O	74032	74036	code
O	74037	74041	your
O	74042	74053	application
O	74054	74057	may
O	74058	74065	execute
O	74065	74066	.

O	74067	74068	#
O	74068	74078	blockquote
O	74079	74082	The
O	74083	74094	application
O	74095	74098	may
O	74099	74112	theoretically
O	74113	74115	be
O	74116	74121	coded
O	74122	74126	such
O	74127	74131	that
O	74132	74142	absolutely
O	74143	74145	no
O	74146	74152	shared
O	74153	74161	resource
O	74162	74171	protected
O	74172	74174	by
O	74175	74180	locks
O	74181	74183	is
O	74184	74188	ever
O	74189	74193	used
O	74193	74194	;
O	74195	74202	however
O	74203	74207	that
O	74208	74212	will
O	74213	74217	only
O	74218	74222	help
O	74223	74225	to
O	74226	74231	point
O	74232	74235	out
O	74236	74239	the
O	74240	74245	exact
O	74246	74252	extent
O	74253	74255	to
O	74256	74261	which
O	74262	74266	Java
O	74267	74274	threads
O	74275	74278	are
O	74279	74290	codependent
O	74290	74291	.

O	74292	74295	And
O	74296	74299	the
O	74300	74301	"
O	74301	74313	independence
O	74313	74314	"
O	74315	74323	achieved
O	74324	74328	will
O	74329	74333	only
O	74334	74341	pertain
O	74342	74344	to
O	74345	74348	the
O	74349	74356	request
O	74356	74357	-
O	74357	74367	processing
O	74368	74375	threads
O	74375	74376	,
O	74377	74380	not
O	74381	74383	to
O	74384	74387	all
O	74388	74395	threads
O	74396	74398	in
O	74399	74403	such
O	74404	74406	an
O	74407	74418	application
O	74418	74419	.

O	74421	74429	Question
O	74429	74430	-
O	74430	74438	32294367
O	74438	74439	,
O	74440	74446	answer
O	74446	74447	-
O	74447	74455	32378895

O	74456	74457	#
O	74457	74467	blockquote
O	74468	74471	Yes
O	74472	74475	and
O	74476	74478	No
O	74478	74479	.

O	74480	74481	I
O	74482	74489	explain
O	74489	74490	:
O	74491	74492	#
O	74492	74494	li
O	74495	74504	Referring
O	74505	74507	to
O	74508	74514	shared
O	74515	74521	memory
O	74521	74522	:
O	74523	74532	Different
O	74533	74540	threads
O	74541	74543	in
O	74544	74545	a
O	74546	74550	Java
O	74551	74558	process
O	74559	74564	share
O	74565	74568	the
O	74569	74574	whole
O	74575	74579	heap
O	74579	74580	,
O	74581	74590	therefore
O	74591	74598	threads
O	74599	74602	can
O	74603	74611	interact
O	74612	74614	in
O	74615	74616	a
O	74617	74621	huge
O	74622	74628	number
O	74629	74631	of
O	74632	74639	planned
O	74640	74643	and
O	74644	74653	unplanned
O	74654	74658	ways
O	74658	74659	.

O	74660	74667	However
O	74668	74675	objects
O	74676	74678	in
O	74679	74682	the
O	74683	74688	stack
O	74689	74690	(
O	74690	74691	e
O	74691	74692	.
O	74692	74693	g
O	74693	74694	.
O	74695	74696	a
O	74697	74704	context
O	74705	74708	you
O	74709	74713	pass
O	74714	74718	down
O	74719	74721	to
O	74722	74728	called
O	74729	74735	method
O	74735	74736	)
O	74737	74739	or
O	74740	74741	a
B-api_mention	74742	74753	ThreadLocal
O	74754	74757	are
O	74758	74763	their
O	74764	74767	own
O	74768	74774	thread
O	74774	74775	'
O	74775	74776	s
O	74777	74778	(
O	74778	74784	unless
O	74785	74789	they
O	74790	74795	start
O	74796	74803	sharing
O	74804	74814	references
O	74814	74815	)
O	74815	74816	.

O	74817	74818	#
O	74818	74820	li
O	74821	74829	Crashing
O	74829	74830	:
O	74831	74833	If
O	74834	74835	a
O	74836	74842	thread
O	74843	74850	crashes
O	74851	74853	in
O	74854	74858	Java
O	74859	74860	(
O	74860	74861	a
B-api_mention	74862	74871	Throwable
O	74872	74874	is
O	74875	74885	propagated
O	74886	74890	into
B-api_mention	74891	74897	Thread
I-api_mention	74897	74898	.
I-api_mention	74898	74901	run
I-api_mention	74901	74902	(
I-api_mention	74902	74906	args
I-api_mention	74906	74907	)
O	74908	74909	,
O	74910	74912	or
O	74913	74922	something
O	74923	74927	gets
O	74928	74934	looped
O	74935	74937	or
O	74938	74945	blocked
O	74945	74946	)
O	74946	74947	,
O	74948	74952	that
O	74953	74959	mishap
O	74960	74965	might
O	74966	74969	not
O	74970	74976	affect
O	74977	74982	other
O	74983	74990	threads
O	74991	74992	(
O	74992	74993	e
O	74993	74994	.
O	74994	74995	g
O	74995	74996	.
O	74997	74998	a
O	74999	75003	pool
O	75004	75006	of
O	75007	75018	connections
O	75019	75021	in
O	75022	75023	a
O	75024	75030	server
O	75031	75035	will
O	75036	75044	continue
O	75045	75047	to
O	75048	75055	operate
O	75055	75056	)
O	75056	75057	.

O	75058	75065	However
O	75066	75068	as
O	75069	75078	different
O	75079	75086	threads
O	75087	75095	interact
O	75095	75096	.

O	75097	75102	Other
O	75103	75110	threads
O	75111	75115	will
O	75116	75122	easily
O	75123	75126	get
O	75127	75135	stranded
O	75136	75138	if
O	75139	75142	one
O	75143	75145	of
O	75146	75150	them
O	75151	75155	ends
O	75156	75166	abnormally
O	75167	75168	(
O	75168	75169	e
O	75169	75170	.
O	75170	75171	g
O	75171	75172	.
O	75173	75176	one
O	75177	75183	thread
O	75184	75190	trying
O	75191	75193	to
O	75194	75198	read
O	75199	75203	from
O	75204	75206	an
O	75207	75212	empty
O	75213	75217	pipe
O	75218	75222	from
O	75223	75230	another
O	75231	75237	thread
O	75238	75243	which
O	75244	75247	did
O	75248	75251	not
O	75252	75257	close
O	75258	75261	its
O	75262	75265	end
O	75265	75266	)
O	75266	75267	.

O	75268	75270	So
O	75271	75277	unless
O	75278	75281	the
O	75282	75292	developers
O	75293	75296	are
O	75297	75303	highly
O	75304	75312	paranoid
O	75313	75320	careful
O	75320	75321	,
O	75322	75324	it
O	75325	75327	is
O	75328	75332	very
O	75333	75339	likely
O	75340	75344	that
O	75345	75349	side
O	75350	75357	effects
O	75358	75362	will
O	75363	75368	occur
O	75368	75369	.

O	75370	75371	I
O	75372	75377	doubt
O	75378	75382	that
O	75383	75386	any
O	75387	75392	other
O	75393	75401	paradigm
O	75402	75409	intends
O	75410	75417	threads
O	75418	75420	to
O	75421	75428	operate
O	75429	75431	as
O	75432	75439	totally
O	75440	75451	independent
O	75452	75459	islands
O	75459	75460	.

O	75461	75465	They
O	75466	75470	must
O	75471	75476	share
O	75477	75488	information
O	75489	75492	and
O	75493	75503	coordinate
O	75504	75511	somehow
O	75511	75512	.

O	75513	75516	And
O	75517	75521	then
O	75522	75527	there
O	75528	75532	will
O	75533	75535	be
O	75536	75539	the
O	75540	75546	chance
O	75547	75549	to
O	75550	75554	mess
O	75555	75561	things
O	75562	75564	up
O	75564	75565	.

O	75566	75568	It
O	75569	75571	is
O	75572	75576	just
O	75577	75581	they
O	75582	75586	will
O	75587	75591	take
O	75592	75593	a
O	75594	75598	more
O	75599	75608	defensive
O	75609	75617	approach
O	75618	75622	that
O	75623	75624	"
O	75624	75629	gives
O	75630	75633	you
O	75634	75638	less
O	75639	75643	rope
O	75644	75646	to
O	75647	75651	hang
O	75652	75660	yourself
O	75660	75661	"
O	75662	75663	(
O	75663	75667	same
O	75668	75673	idiom
O	75674	75676	as
O	75677	75681	with
O	75682	75690	pointers
O	75690	75691	)
O	75691	75692	.

O	75694	75702	Question
O	75702	75703	-
O	75703	75711	32164385
O	75711	75712	,
O	75713	75719	answer
O	75719	75720	-
O	75720	75728	32164423

O	75729	75730	#
O	75730	75740	blockquote
O	75741	75744	The
O	75745	75749	only
O	75750	75753	way
O	75754	75756	is
O	75757	75759	to
O	75760	75764	read
O	75765	75768	the
O	75769	75773	code
O	75774	75787	unfortunately
O	75787	75788	.

O	75789	75790	#
O	75790	75800	blockquote
O	75801	75804	The
O	75805	75811	common
O	75812	75822	convention
O	75823	75825	is
O	75826	75828	to
O	75829	75833	pass
O	75834	75836	an
O	75837	75843	object
O	75844	75849	which
O	75850	75856	cannot
O	75857	75859	be
O	75860	75868	modified
O	75868	75869	,
O	75870	75875	using
O	75876	75877	a
O	75878	75885	wrapper
O	75886	75888	if
O	75889	75895	needed
O	75895	75896	.

O	75897	75901	This
O	75902	75908	ensure
O	75909	75912	the
O	75913	75918	class
O	75919	75925	cannot
O	75926	75932	modify
O	75933	75936	the
O	75937	75943	object
O	75943	75944	.

B-api_mention	75945	75949	List
I-api_mention	75949	75950	<
I-api_mention	75950	75951	T
I-api_mention	75951	75952	>
O	75953	75961	readOnly
O	75962	75963	=
B-api_mention	75964	75975	Collections
I-api_mention	75975	75976	.
I-api_mention	75976	75992	unmodifiableList
I-api_mention	75992	75993	(
I-api_mention	75993	75997	args
I-api_mention	75997	75998	)
O	75998	75999	;
O	76000	76002	If
O	76003	76006	the
O	76007	76013	object
O	76014	76016	is
B-api_mention	76017	76026	Cloneable
O	76026	76027	,
O	76028	76031	you
O	76032	76035	can
O	76036	76040	also
O	76041	76044	use
B-api_mention	76045	76050	clone
I-api_mention	76050	76051	(
I-api_mention	76051	76055	args
I-api_mention	76055	76056	)
O	76057	76060	but
O	76061	76068	another
O	76069	76075	common
O	76076	76084	approach
O	76085	76087	is
O	76088	76090	to
O	76091	76094	use
O	76095	76096	a
O	76097	76101	copy
O	76101	76102	.

B-api_mention	76103	76107	List
I-api_mention	76107	76108	<
I-api_mention	76108	76109	T
I-api_mention	76109	76110	>
O	76111	76119	readOnly
O	76120	76121	=
O	76122	76125	new
B-api_mention	76126	76135	ArrayList
I-api_mention	76135	76136	<
I-api_mention	76136	76137	T
I-api_mention	76137	76138	>
I-api_mention	76138	76139	(
I-api_mention	76139	76143	args
I-api_mention	76143	76144	)
O	76144	76145	;
O	76146	76148	If
O	76149	76152	you
O	76153	76157	care
O	76158	76163	about
O	76164	76168	such
O	76169	76178	behaviour
O	76178	76179	,
O	76180	76184	unit
O	76185	76190	tests
O	76191	76194	can
O	76195	76199	show
O	76200	76207	whether
O	76208	76209	a
O	76210	76216	method
O	76217	76225	modifies
O	76226	76228	an
O	76229	76235	object
O	76236	76238	or
O	76239	76242	not
O	76242	76243	.

O	76244	76246	If
O	76247	76250	you
O	76251	76255	have
O	76256	76260	unit
O	76261	76266	tests
O	76267	76274	already
O	76274	76275	,
O	76276	76278	it
O	76279	76281	is
O	76282	76289	usually
O	76290	76293	one
O	76294	76296	or
O	76297	76300	two
O	76301	76306	lines
O	76307	76312	extra
O	76313	76315	to
O	76316	76321	check
O	76322	76325	for
O	76326	76330	this
O	76330	76331	.

O	76333	76341	Question
O	76341	76342	-
O	76342	76350	32164385
O	76350	76351	,
O	76352	76358	answer
O	76358	76359	-
O	76359	76367	32167166

O	76368	76369	#
O	76369	76379	blockquote
O	76380	76381	I
O	76382	76386	must
O	76387	76392	agree
O	76393	76397	with
O	76398	76403	other
O	76404	76411	answers
O	76412	76416	that
O	76417	76422	there
O	76423	76425	is
O	76426	76428	no
O	76429	76435	direct
O	76436	76439	way
O	76440	76442	to
O	76443	76452	determine
O	76453	76457	that
O	76458	76464	method
O	76465	76469	will
O	76470	76476	modify
O	76477	76481	your
O	76482	76488	object
O	76489	76491	or
O	76492	76495	not
O	76496	76499	and
O	76500	76503	yes
O	76504	76506	to
O	76507	76511	make
O	76512	76516	sure
O	76517	76521	that
O	76522	76528	method
O	76529	76532	can
O	76533	76536	not
O	76537	76543	modify
O	76544	76548	your
B-api_mention	76549	76555	Object
O	76556	76559	you
O	76560	76563	all
O	76564	76568	have
O	76569	76571	to
O	76572	76574	do
O	76575	76577	it
O	76578	76580	is
O	76581	76585	from
O	76586	76590	your
O	76591	76595	side
O	76595	76596	.

O	76597	76598	#
O	76598	76608	blockquote
O	76609	76613	Here
O	76614	76617	the
O	76618	76624	method
O	76625	76629	name
O	76630	76635	comes
O	76636	76638	to
O	76639	76642	the
O	76643	76648	scene
O	76648	76649	.

O	76650	76656	Moving
O	76657	76662	ahead
O	76663	76667	with
O	76668	76671	the
O	76672	76678	naming
O	76679	76689	convention
O	76690	76692	of
O	76693	76699	method
O	76700	76702	we
O	76703	76707	have
O	76708	76710	to
O	76711	76715	take
O	76716	76717	a
O	76718	76722	look
O	76723	76725	at
O	76726	76730	some
O	76731	76737	method
O	76738	76750	declarations
O	76751	76756	which
O	76757	76764	clearly
O	76765	76773	convince
O	76774	76777	you
O	76778	76782	that
O	76783	76787	your
B-api_mention	76788	76794	Object
O	76795	76799	will
O	76800	76803	not
O	76804	76806	be
O	76807	76814	changed
O	76815	76817	at
O	76818	76821	all
O	76821	76822	.

O	76823	76826	For
O	76827	76834	example
O	76834	76835	,
O	76836	76839	You
O	76840	76844	know
O	76845	76849	that
B-api_mention	76850	76856	Arrays
I-api_mention	76856	76857	.
I-api_mention	76857	76863	copyOf
O	76864	76868	will
O	76869	76872	not
O	76873	76879	change
O	76880	76884	your
O	76885	76891	actual
O	76892	76897	array
O	76897	76898	,
B-api_mention	76899	76905	System
I-api_mention	76905	76906	.
I-api_mention	76906	76909	out
I-api_mention	76909	76910	.
I-api_mention	76910	76917	println
I-api_mention	76917	76918	(
I-api_mention	76918	76922	args
I-api_mention	76922	76923	)
O	76924	76928	will
O	76929	76932	not
O	76933	76939	change
O	76940	76944	your
O	76945	76948	boo
O	76949	76955	Method
O	76956	76961	names
O	76962	76965	are
O	76966	76970	real
O	76971	76978	weapons
O	76979	76981	to
O	76982	76989	provide
O	76990	76992	as
O	76993	76997	much
O	76998	77009	information
O	77010	77012	as
O	77013	77021	possible
O	77022	77024	to
O	77025	77028	the
O	77029	77035	method
O	77036	77040	user
O	77040	77041	.

O	77042	77043	(
O	77043	77046	Yes
O	77046	77047	!
O	77048	77050	it
O	77050	77051	'
O	77051	77052	s
O	77053	77059	always
O	77060	77063	not
O	77064	77072	possible
O	77073	77076	but
O	77077	77082	quite
O	77083	77084	a
O	77085	77089	good
O	77090	77098	practice
O	77099	77101	to
O	77102	77108	follow
O	77108	77109	.
O	77109	77110	)
O	77111	77114	Let
O	77114	77115	'
O	77115	77116	s
O	77117	77125	consider
O	77126	77128	it
O	77129	77131	in
O	77132	77136	your
O	77137	77141	case
O	77142	77146	that
O	77147	77150	say
O	77151	77159	printBoo
O	77160	77164	will
O	77165	77169	only
O	77170	77175	print
O	77175	77176	,
O	77177	77184	copyBoo
O	77185	77189	will
O	77190	77194	only
O	77195	77199	copy
O	77199	77200	,
O	77201	77209	clearBoo
O	77210	77214	will
O	77215	77220	reset
O	77221	77224	all
O	77225	77235	attributes
O	77235	77236	,
O	77237	77257	checkAndCreateNewBoo
O	77258	77262	will
O	77263	77268	check
O	77269	77273	your
O	77274	77277	boo
B-api_mention	77278	77284	Object
O	77285	77288	and
O	77289	77295	create
O	77296	77299	new
O	77300	77302	if
O	77303	77311	required
O	77311	77312	.

O	77313	77315	So
O	77315	77316	,
O	77317	77327	ultimately
O	77328	77330	if
O	77331	77333	we
O	77334	77337	can
O	77338	77341	use
O	77342	77346	them
O	77347	77349	in
O	77350	77351	a
O	77352	77358	proper
O	77359	77362	way
O	77363	77369	caller
O	77370	77373	can
O	77374	77376	be
O	77377	77384	assured
O	77385	77389	with
O	77390	77393	the
O	77394	77398	fact
O	77399	77403	that
B-api_mention	77404	77410	Object
O	77411	77415	will
O	77416	77422	remain
O	77423	77426	the
O	77427	77431	same
O	77432	77437	after
O	77438	77445	calling
O	77446	77449	the
O	77450	77456	method
O	77456	77457	.

O	77459	77467	Question
O	77467	77468	-
O	77468	77476	31370403
O	77476	77477	,
O	77478	77484	answer
O	77484	77485	-
O	77485	77493	31466466

O	77494	77498	Idea
O	77499	77500	#
O	77500	77501	1
O	77501	77502	,
O	77503	77510	storing
O	77511	77514	the
B-api_mention	77515	77523	Graphics
O	77524	77531	objects
O	77532	77538	simply
O	77539	77545	wouldn
O	77545	77546	'
O	77546	77547	t
O	77548	77552	work
O	77552	77553	.

O	77554	77557	The
B-api_mention	77558	77566	Graphics
O	77567	77573	should
O	77574	77577	not
O	77578	77580	be
O	77581	77591	considered
O	77592	77594	as
O	77595	77596	"
O	77596	77603	holding
O	77603	77604	"
O	77605	77609	some
O	77610	77617	display
O	77618	77624	memory
O	77624	77625	,
O	77626	77629	but
O	77630	77636	rather
O	77637	77639	as
O	77640	77641	a
O	77642	77648	handle
O	77649	77651	to
O	77652	77658	access
O	77659	77661	an
O	77662	77666	area
O	77667	77669	of
O	77670	77677	display
O	77678	77684	memory
O	77684	77685	.

O	77686	77688	In
O	77689	77692	the
O	77693	77697	case
O	77698	77700	of
B-api_mention	77701	77714	BufferedImage
O	77715	77716	,
O	77717	77721	each
B-api_mention	77722	77730	Graphics
O	77731	77737	object
O	77738	77742	will
O	77743	77745	be
O	77746	77752	always
O	77753	77756	the
O	77757	77763	handle
O	77764	77766	to
O	77767	77770	the
O	77771	77775	same
O	77776	77781	given
O	77782	77787	image
O	77788	77794	memory
O	77795	77801	buffer
O	77801	77802	,
O	77803	77805	so
O	77806	77810	they
O	77811	77814	all
O	77815	77819	will
O	77820	77829	represent
O	77830	77833	the
O	77834	77838	same
O	77839	77844	image
O	77844	77845	.

O	77846	77850	Even
O	77851	77855	more
O	77856	77867	importantly
O	77867	77868	,
O	77869	77872	you
O	77873	77876	can
O	77876	77877	'
O	77877	77878	t
O	77879	77887	actually
O	77888	77890	do
O	77891	77899	anything
O	77900	77904	with
O	77905	77908	the
O	77909	77915	stored
B-api_mention	77916	77924	Graphics
O	77925	77926	:
O	77927	77929	As
O	77930	77934	they
O	77935	77937	do
O	77938	77941	not
O	77942	77947	store
O	77948	77956	anything
O	77956	77957	,
O	77958	77963	there
O	77964	77966	is
O	77967	77969	no
O	77970	77973	way
O	77974	77984	whatsoever
O	77985	77989	they
O	77990	77995	could
O	77996	77997	"
O	77997	77999	re
O	77999	78000	-
O	78000	78005	store
O	78005	78006	"
O	78007	78015	anything
O	78015	78016	.

O	78017	78021	Idea
O	78022	78023	#
O	78023	78024	2
O	78024	78025	,
O	78026	78033	cloning
O	78034	78037	the
B-api_mention	78038	78051	BufferedImage
O	78052	78053	s
O	78054	78056	is
O	78057	78058	a
O	78059	78063	much
O	78064	78070	better
O	78071	78075	idea
O	78075	78076	,
O	78077	78080	but
O	78081	78084	you
O	78084	78085	'
O	78085	78087	ll
O	78088	78094	indeed
O	78095	78097	be
O	78098	78105	wasting
O	78106	78112	memory
O	78112	78113	,
O	78114	78117	and
O	78118	78125	quickly
O	78126	78129	run
O	78130	78133	out
O	78134	78136	of
O	78137	78139	it
O	78139	78140	.

O	78141	78143	It
O	78144	78149	helps
O	78150	78154	only
O	78155	78157	to
O	78158	78163	store
O	78164	78169	those
O	78170	78175	parts
O	78176	78178	of
O	78179	78182	the
O	78183	78188	image
O	78189	78197	affected
O	78198	78200	by
O	78201	78204	the
O	78205	78209	draw
O	78209	78210	,
O	78211	78214	for
O	78215	78222	example
O	78223	78228	using
O	78229	78240	rectangular
O	78241	78246	areas
O	78246	78247	,
O	78248	78251	but
O	78252	78254	it
O	78255	78260	still
O	78261	78266	costs
O	78267	78268	a
O	78269	78272	lot
O	78273	78275	of
O	78276	78282	memory
O	78282	78283	.

O	78284	78293	Buffering
O	78294	78299	those
O	78300	78304	undo
O	78305	78311	images
O	78312	78314	to
O	78315	78319	disk
O	78320	78325	could
O	78326	78330	help
O	78330	78331	,
O	78332	78335	but
O	78336	78338	it
O	78339	78343	will
O	78344	78348	make
O	78349	78353	your
O	78354	78356	UI
O	78357	78361	slow
O	78362	78365	and
O	78366	78378	unresponsive
O	78378	78379	,
O	78380	78383	and
O	78384	78388	that
O	78388	78389	'
O	78389	78390	s
O	78391	78394	bad
O	78395	78396	;
O	78397	78408	furthermore
O	78408	78409	,
O	78410	78412	it
O	78413	78418	makes
O	78419	78422	you
O	78423	78434	application
O	78435	78439	more
O	78440	78447	complex
O	78448	78451	and
O	78452	78457	error
O	78457	78458	-
O	78458	78463	prone
O	78464	78465	.

O	78466	78468	My
O	78469	78480	alternative
O	78481	78486	would
O	78487	78489	be
O	78490	78492	to
O	78493	78498	store
O	78499	78504	store
O	78505	78508	the
O	78509	78514	image
O	78515	78528	modifications
O	78529	78531	in
O	78532	78533	a
O	78534	78538	list
O	78538	78539	,
O	78540	78548	rendered
O	78549	78553	from
O	78554	78559	first
O	78560	78562	to
O	78563	78567	last
O	78568	78570	on
O	78571	78574	top
O	78575	78577	of
O	78578	78581	the
O	78582	78587	image
O	78587	78588	.

O	78589	78591	An
O	78592	78596	undo
O	78597	78606	operation
O	78607	78611	then
O	78612	78618	simply
O	78619	78627	consists
O	78628	78630	of
O	78631	78639	removing
O	78640	78643	the
O	78644	78656	modification
O	78657	78661	from
O	78662	78665	the
O	78666	78670	list
O	78670	78671	.

O	78672	78676	This
O	78677	78685	requires
O	78686	78689	you
O	78690	78692	to
O	78693	78694	"
O	78694	78699	reify
O	78699	78700	"
O	78701	78704	the
O	78705	78710	image
O	78711	78724	modifications
O	78725	78726	,
O	78727	78728	i
O	78728	78729	.
O	78729	78730	e
O	78730	78731	.
O	78732	78738	create
O	78739	78740	a
O	78741	78746	class
O	78747	78751	that
O	78752	78762	implements
O	78763	78764	a
O	78765	78771	single
O	78772	78784	modification
O	78784	78785	,
O	78786	78788	by
O	78789	78798	providing
O	78799	78800	a
O	78801	78805	void
B-api_mention	78806	78810	draw
I-api_mention	78810	78811	(
I-api_mention	78811	78815	args
I-api_mention	78815	78816	)
O	78817	78823	method
O	78824	78829	which
O	78830	78838	performs
O	78839	78842	the
O	78843	78849	actual
O	78850	78857	drawing
O	78857	78858	.

O	78859	78861	As
O	78862	78865	you
O	78866	78870	said
O	78870	78871	,
O	78872	78878	random
O	78879	78892	modifications
O	78893	78897	pose
O	78898	78900	an
O	78901	78911	additional
O	78912	78919	problem
O	78919	78920	.

O	78921	78928	However
O	78928	78929	,
O	78930	78933	the
O	78934	78937	key
O	78938	78945	problem
O	78946	78948	is
O	78949	78953	your
O	78954	78957	use
O	78958	78960	of
B-api_mention	78961	78965	Math
I-api_mention	78965	78966	.
I-api_mention	78966	78972	random
I-api_mention	78972	78973	(
I-api_mention	78973	78977	args
I-api_mention	78977	78978	)
O	78979	78981	to
O	78982	78988	create
O	78989	78995	random
O	78996	79003	numbers
O	79003	79004	.

O	79005	79012	Instead
O	79012	79013	,
O	79014	79021	perform
O	79022	79026	each
O	79027	79033	random
O	79034	79046	modification
O	79047	79051	with
O	79052	79053	a
B-api_mention	79054	79060	Random
O	79061	79068	created
O	79069	79073	from
O	79074	79075	a
O	79076	79081	fixed
O	79082	79086	seed
O	79087	79092	value
O	79092	79093	,
O	79094	79096	so
O	79097	79101	that
O	79102	79105	the
O	79106	79107	(
O	79107	79113	pseudo
O	79113	79114	-
O	79114	79115	)
O	79115	79121	random
O	79122	79128	number
O	79129	79138	sequences
O	79139	79142	are
O	79143	79146	the
O	79147	79151	same
O	79152	79154	on
O	79155	79159	each
O	79160	79170	invocation
O	79171	79173	of
O	79174	79178	draw
O	79178	79179	(
O	79179	79183	args
O	79183	79184	)
O	79185	79186	,
O	79187	79188	i
O	79188	79189	.
O	79189	79190	e
O	79190	79191	.
O	79191	79192	,
O	79193	79197	each
O	79198	79202	draw
O	79203	79206	has
O	79207	79214	exactly
O	79215	79218	the
O	79219	79223	same
O	79224	79231	effects
O	79231	79232	.

O	79233	79234	(
O	79234	79238	That
O	79238	79239	'
O	79239	79240	s
O	79241	79244	why
O	79245	79249	they
O	79250	79253	are
O	79254	79260	called
O	79261	79262	"
O	79262	79268	pseudo
O	79268	79269	-
O	79269	79275	random
O	79275	79276	"
O	79277	79278	-
O	79278	79279	-
O	79280	79283	the
O	79284	79293	generated
O	79294	79301	numbers
O	79302	79306	look
O	79307	79313	random
O	79313	79314	,
O	79315	79318	but
O	79319	79323	they
O	79324	79327	are
O	79328	79332	just
O	79333	79335	as
O	79336	79349	deterministic
O	79350	79352	as
O	79353	79356	any
O	79357	79362	other
O	79363	79371	function
O	79371	79372	.
O	79372	79373	)
O	79374	79376	In
O	79377	79385	contrast
O	79386	79388	to
O	79389	79392	the
O	79393	79398	image
O	79399	79406	storing
O	79407	79416	technique
O	79416	79417	,
O	79418	79423	which
O	79424	79427	has
O	79428	79434	memory
O	79435	79443	problems
O	79443	79444	,
O	79445	79448	the
O	79449	79456	problem
O	79457	79461	with
O	79462	79466	this
O	79467	79476	technique
O	79477	79479	is
O	79480	79484	that
O	79485	79489	many
O	79490	79503	modifications
O	79504	79507	may
O	79508	79512	make
O	79513	79516	the
O	79517	79520	GUI
O	79521	79525	slow
O	79525	79526	,
O	79527	79537	especially
O	79538	79540	if
O	79541	79544	the
O	79545	79558	modifications
O	79559	79562	are
O	79563	79578	computationally
O	79579	79588	intensive
O	79588	79589	.

O	79590	79592	To
O	79593	79600	prevent
O	79601	79605	this
O	79605	79606	,
O	79607	79610	the
O	79611	79619	simplest
O	79620	79623	way
O	79624	79629	would
O	79630	79632	be
O	79633	79635	to
O	79636	79639	fix
O	79640	79642	an
O	79643	79654	appropriate
O	79655	79662	maximum
O	79663	79667	size
O	79668	79670	of
O	79671	79674	the
O	79675	79679	list
O	79680	79682	of
O	79683	79691	undoable
O	79692	79705	modifications
O	79706	79707	.

O	79708	79710	If
O	79711	79715	this
O	79716	79721	limit
O	79722	79727	would
O	79728	79730	be
O	79731	79739	exceeded
O	79740	79742	by
O	79743	79749	adding
O	79750	79751	a
O	79752	79755	new
O	79756	79768	modification
O	79768	79769	,
O	79770	79776	remove
O	79777	79780	the
O	79781	79787	oldest
O	79788	79800	modification
O	79801	79804	the
O	79805	79809	list
O	79810	79813	and
O	79814	79819	apply
O	79820	79822	it
O	79823	79825	to
O	79826	79829	the
O	79830	79837	backing
O	79838	79851	BufferedImage
O	79852	79858	itself
O	79858	79859	.

O	79860	79863	The
O	79864	79873	following
O	79874	79880	simple
O	79881	79885	demo
O	79886	79897	application
O	79898	79903	shows
O	79904	79908	that
O	79909	79910	(
O	79910	79913	and
O	79914	79917	how
O	79917	79918	)
O	79919	79923	this
O	79924	79927	all
O	79928	79933	works
O	79934	79942	together
O	79942	79943	.

O	79944	79946	It
O	79947	79951	also
O	79952	79960	includes
O	79961	79962	a
O	79963	79967	nice
O	79968	79969	"
O	79969	79973	redo
O	79973	79974	"
O	79975	79982	feature
O	79983	79986	for
O	79987	79994	redoing
O	79995	80001	undone
O	80002	80009	actions
O	80009	80010	.

O	80011	80012	#
O	80012	80015	pre

O	80017	80025	Question
O	80025	80026	-
O	80026	80034	31445024
O	80034	80035	,
O	80036	80042	answer
O	80042	80043	-
O	80043	80051	31445150

O	80052	80053	I
O	80054	80059	first
O	80060	80066	tought
O	80067	80071	your
O	80072	80080	question
O	80081	80084	was
O	80085	80086	a
O	80087	80091	dupe
O	80092	80094	of
O	80095	80099	What
O	80100	80104	code
O	80105	80109	does
O	80110	80113	the
O	80114	80122	compiler
O	80123	80131	generate
O	80132	80135	for
O	80136	80146	autoboxing
O	80146	80147	?

O	80148	80155	However
O	80155	80156	,
O	80157	80162	after
O	80163	80167	your
O	80168	80175	comment
O	80176	80178	on
O	80179	80180	@
O	80180	80193	ElliottFrisch
O	80194	80195	I
O	80196	80204	realized
O	80205	80207	it
O	80208	80211	was
O	80212	80221	different
O	80222	80223	:
O	80224	80225	#
O	80225	80235	blockquote
O	80236	80239	For
O	80240	80245	other
O	80246	80253	readers
O	80253	80254	,
O	80255	80261	assume
O	80262	80266	that
O	80267	80268	"
O	80268	80275	behaves
O	80276	80280	that
O	80281	80284	way
O	80284	80285	"
O	80286	80291	means
O	80292	80297	using
B-api_mention	80298	80305	valueOf
O	80306	80307	.

O	80308	80316	Remember
O	80317	80321	that
O	80322	80327	there
O	80328	80331	are
O	80332	80341	multiples
O	80342	80351	compilers
O	80352	80355	for
O	80356	80360	Java
O	80360	80361	.

O	80362	80364	To
O	80365	80367	be
O	80368	80369	"
O	80369	80374	legal
O	80374	80375	"
O	80376	80380	they
O	80381	80385	must
O	80386	80392	follow
O	80393	80396	the
O	80397	80405	contract
O	80406	80411	given
O	80412	80414	in
O	80415	80418	the
O	80419	80422	JLS
O	80423	80424	.

O	80425	80434	Therefore
O	80434	80435	,
O	80436	80438	as
O	80439	80443	long
O	80444	80446	as
O	80447	80450	all
O	80451	80454	the
O	80455	80460	rules
O	80461	80465	here
O	80466	80469	are
O	80470	80479	respected
O	80479	80480	,
O	80481	80486	there
O	80487	80489	is
O	80490	80492	no
O	80493	80502	guarantee
O	80503	80505	of
O	80506	80509	how
O	80510	80520	autoboxing
O	80521	80523	is
O	80524	80534	internally
O	80535	80546	implemented
O	80546	80547	.

O	80548	80551	But
O	80552	80553	I
O	80554	80557	don
O	80557	80558	'
O	80558	80559	t
O	80560	80563	see
O	80564	80567	any
O	80568	80574	reason
O	80575	80577	to
O	80578	80581	not
O	80582	80585	use
B-api_mention	80586	80593	valueOf
O	80594	80595	,
O	80596	80605	specially
O	80606	80610	that
O	80611	80613	it
O	80614	80618	uses
O	80619	80622	the
O	80623	80629	cached
O	80630	80636	values
O	80637	80640	and
O	80641	80643	is
O	80644	80647	the
O	80648	80659	recommended
O	80660	80663	way
O	80664	80666	as
O	80667	80670	per
O	80671	80675	this
O	80676	80683	article
O	80684	80686	by
O	80687	80693	Joseph
O	80694	80695	D
O	80695	80696	.
O	80697	80702	Darcy
O	80702	80703	.

O	80705	80713	Question
O	80713	80714	-
O	80714	80722	31445024
O	80722	80723	,
O	80724	80730	answer
O	80730	80731	-
O	80731	80739	31760309

O	80740	80745	Until
O	80746	80749	the
O	80750	80758	language
O	80759	80772	specification
O	80773	80781	mentions
O	80782	80784	it
O	80784	80785	,
O	80786	80788	it
O	80789	80791	is
O	80792	80795	not
O	80796	80806	guaranteed
O	80807	80811	that
O	80812	80822	autoboxing
O	80823	80825	is
O	80826	80836	equivalent
O	80837	80839	to
O	80840	80841	a
O	80842	80846	call
O	80847	80849	to
O	80850	80853	the
O	80854	80860	static
B-api_mention	80861	80868	valueOf
O	80869	80876	methods
O	80876	80877	.

O	80878	80880	It
O	80881	80883	is
O	80884	80886	an
O	80887	80901	implementation
O	80902	80908	aspect
O	80908	80909	,
O	80910	80913	not
O	80914	80918	part
O	80919	80921	of
O	80922	80925	the
O	80926	80932	boxing
O	80933	80943	conversion
O	80944	80957	specification
O	80957	80958	.

O	80959	80961	An
O	80962	80976	implementation
O	80977	80979	is
O	80980	80993	theoretically
O	80994	80998	free
O	80999	81001	to
O	81002	81005	use
O	81006	81013	another
O	81014	81023	mechanism
O	81024	81026	as
O	81027	81031	long
O	81032	81034	as
O	81035	81037	it
O	81038	81046	conforms
O	81047	81049	to
O	81050	81053	the
O	81054	81058	rule
O	81059	81062	you
O	81063	81072	mentioned
O	81073	81077	from
O	81078	81081	the
O	81082	81085	JLS
O	81085	81086	.

O	81087	81089	In
O	81090	81098	practice
O	81098	81099	,
O	81100	81105	there
O	81106	81109	are
O	81110	81114	many
O	81115	81118	Sun
O	81119	81122	JDK
O	81123	81126	bug
O	81127	81134	reports
O	81135	81136	(
O	81136	81137	e
O	81137	81138	.
O	81138	81139	g
O	81139	81140	.
O	81141	81144	JDK
O	81144	81145	-
O	81145	81152	4990346
O	81153	81156	and
O	81157	81160	JDK
O	81160	81161	-
O	81161	81168	6628737
O	81169	81170	)
O	81171	81175	that
O	81176	81183	clearly
O	81184	81189	imply
O	81190	81194	that
O	81195	81199	when
O	81200	81210	autoboxing
O	81211	81214	was
O	81215	81225	introduced
O	81226	81228	in
O	81229	81233	Java
O	81234	81235	5
O	81235	81236	,
O	81237	81240	the
O	81241	81250	intention
O	81251	81254	was
O	81255	81261	having
O	81262	81265	the
O	81266	81274	compiler
O	81275	81277	to
O	81278	81282	rely
O	81283	81285	on
B-api_mention	81286	81293	valueOf
O	81294	81296	as
O	81297	81303	stated
O	81304	81306	in
O	81307	81310	JDK
O	81310	81311	-
O	81311	81318	6628737
O	81319	81320	:
O	81321	81322	#
O	81322	81332	blockquote
O	81333	81336	But
O	81337	81341	that
O	81341	81342	'
O	81342	81343	s
O	81344	81348	only
O	81349	81352	for
O	81353	81358	javac
O	81358	81359	,
O	81360	81363	not
O	81364	81375	necessarily
O	81376	81379	all
O	81380	81389	compilers
O	81389	81390	.

O	81392	81400	Question
O	81400	81401	-
O	81401	81409	31445024
O	81409	81410	,
O	81411	81417	answer
O	81417	81418	-
O	81418	81426	31871515

O	81427	81437	Autoboxing
O	81438	81440	is
O	81441	81451	absolutely
O	81452	81463	implemented
O	81464	81469	using
B-api_mention	81470	81477	valueOf
I-api_mention	81477	81478	(
I-api_mention	81478	81482	args
I-api_mention	81482	81483	)
O	81484	81485	.
O	81485	81486	.
O	81486	81487	.
O	81487	81489	in
O	81490	81493	the
O	81494	81501	OpenJDK
O	81501	81502	.

O	81503	81505	If
O	81506	81510	that
O	81510	81511	'
O	81511	81512	s
O	81513	81517	your
O	81518	81532	implementation
O	81532	81533	,
O	81534	81538	read
O	81539	81541	on
O	81541	81542	.
O	81542	81543	.
O	81543	81544	.

O	81545	81547	if
O	81548	81551	not
O	81551	81552	,
O	81553	81557	skip
O	81558	81560	to
O	81561	81566	below
O	81566	81567	.

O	81568	81569	#
O	81569	81572	pre
O	81573	81577	Java
O	81578	81591	documentation
O	81592	81598	states
O	81599	81603	that
B-api_mention	81604	81611	Boolean
I-api_mention	81611	81612	.
I-api_mention	81612	81619	valueOf
I-api_mention	81619	81620	(
I-api_mention	81620	81624	args
I-api_mention	81624	81625	)
O	81626	81632	always
O	81633	81640	returns
B-api_mention	81641	81648	Boolean
I-api_mention	81648	81649	.
I-api_mention	81649	81653	TRUE
O	81654	81656	or
B-api_mention	81657	81664	Boolean
I-api_mention	81664	81665	.
I-api_mention	81665	81670	FALSE
O	81671	81672	,
O	81673	81682	therefore
O	81683	81687	your
O	81688	81697	reference
O	81698	81709	comparisons
O	81710	81712	in
O	81713	81718	these
O	81719	81724	cases
O	81725	81729	will
O	81730	81737	succeed
O	81737	81738	.

O	81739	81740	(
O	81740	81741	(
B-api_mention	81741	81748	Integer
O	81748	81749	)
O	81749	81750	1
O	81750	81751	)
O	81752	81753	=
O	81753	81754	=
B-api_mention	81755	81762	Integer
I-api_mention	81762	81763	.
I-api_mention	81763	81770	valueOf
I-api_mention	81770	81771	(
I-api_mention	81771	81775	args
I-api_mention	81775	81776	)
O	81777	81780	For
O	81781	81785	this
O	81786	81796	particular
O	81797	81804	example
O	81804	81805	,
O	81806	81811	under
O	81812	81815	the
O	81816	81823	OpenJDK
O	81824	81838	implementation
O	81839	81843	with
O	81844	81851	default
O	81852	81860	settings
O	81860	81861	,
O	81862	81864	it
O	81865	81869	will
O	81870	81878	probably
O	81879	81883	work
O	81884	81886	by
O	81887	81893	virtue
O	81894	81896	of
O	81897	81900	the
O	81901	81905	fact
O	81906	81910	that
O	81911	81914	you
O	81915	81921	picked
O	81922	81923	a
O	81924	81929	value
O	81930	81931	<
O	81932	81935	128
O	81936	81941	which
O	81942	81944	is
O	81945	81951	cached
O	81952	81954	at
O	81955	81962	startup
O	81963	81964	(
O	81964	81972	although
O	81973	81977	this
O	81978	81981	can
O	81982	81984	be
O	81985	81995	overridden
O	81996	81998	as
O	81999	82000	a
O	82001	82012	commandline
O	82013	82016	arg
O	82016	82017	)
O	82017	82018	.

O	82019	82021	It
O	82022	82025	may
O	82026	82030	also
O	82031	82035	work
O	82036	82039	for
O	82040	82046	larger
O	82047	82053	values
O	82054	82056	if
O	82057	82059	it
O	82059	82060	'
O	82060	82061	s
O	82062	82072	frequently
O	82073	82077	used
O	82078	82084	enough
O	82085	82087	to
O	82088	82090	be
O	82091	82097	cached
O	82097	82098	.

O	82099	82105	Unless
O	82106	82109	you
O	82109	82110	'
O	82110	82112	re
O	82113	82120	working
O	82121	82126	under
O	82127	82128	"
O	82128	82132	safe
O	82132	82133	"
O	82134	82145	assumptions
O	82146	82151	about
O	82152	82155	the
B-api_mention	82156	82163	Integer
O	82164	82169	cache
O	82169	82170	,
O	82171	82174	don
O	82174	82175	'
O	82175	82176	t
O	82177	82183	expect
O	82184	82187	the
O	82188	82197	reference
O	82198	82208	comparison
O	82209	82211	to
O	82212	82214	be
O	82215	82217	an
O	82218	82226	equality
O	82226	82227	.

B-api_mention	82228	82232	Long
O	82233	82234	,
B-api_mention	82235	82240	Short
O	82241	82242	,
B-api_mention	82243	82252	Character
O	82253	82256	and
B-api_mention	82257	82261	Byte
O	82262	82274	incidentally
O	82275	82284	implement
O	82285	82289	this
O	82290	82297	caching
O	82298	82301	too
O	82301	82302	,
O	82303	82306	but
O	82307	82313	unlike
B-api_mention	82314	82321	Integer
O	82322	82323	,
O	82324	82326	it
O	82326	82327	'
O	82327	82328	s
O	82329	82332	not
O	82333	82340	tunable
O	82340	82341	.

O	82342	82346	Byte
O	82347	82351	will
O	82352	82358	always
O	82359	82363	work
O	82364	82366	if
O	82367	82370	you
O	82370	82371	'
O	82371	82373	re
O	82374	82383	comparing
O	82384	82391	autobox
O	82391	82392	/
B-api_mention	82393	82400	valueOf
I-api_mention	82400	82401	(
I-api_mention	82401	82405	args
I-api_mention	82405	82406	)
O	82407	82417	references
O	82418	82423	since
O	82424	82433	obviously
O	82433	82434	,
O	82435	82438	you
O	82439	82442	can
O	82442	82443	'
O	82443	82444	t
O	82445	82447	go
O	82448	82451	out
O	82452	82454	of
O	82455	82460	range
O	82460	82461	.

B-api_mention	82462	82467	Float
O	82468	82471	and
B-api_mention	82472	82478	Double
O	82479	82483	will
O	82484	82498	unsurprisingly
O	82499	82505	always
O	82506	82512	create
O	82513	82514	a
O	82515	82518	new
O	82519	82527	instance
O	82527	82528	.

O	82529	82532	Now
O	82532	82533	,
O	82534	82536	in
O	82537	82543	purely
O	82544	82551	generic
O	82552	82557	terms
O	82557	82558	?

O	82559	82562	See
O	82563	82567	this
O	82568	82575	section
O	82576	82578	of
O	82579	82582	the
O	82583	82586	JLS
O	82587	82588	-
O	82589	82592	you
O	82593	82597	MUST
O	82598	82600	be
O	82601	82606	given
O	82607	82612	equal
O	82613	82623	references
O	82624	82627	for
O	82628	82635	boolean
O	82636	82639	and
O	82640	82643	any
O	82644	82647	int
O	82648	82650	or
O	82651	82655	char
O	82656	82662	within
O	82663	82666	the
O	82667	82668	-
O	82668	82671	128
O	82672	82674	to
O	82675	82678	127
O	82679	82684	range
O	82684	82685	.

O	82686	82691	There
O	82692	82695	are
O	82696	82698	no
O	82699	82709	guarantees
O	82710	82713	for
O	82714	82722	anything
O	82723	82727	else
O	82727	82728	.

O	82730	82738	Question
O	82738	82739	-
O	82739	82747	31696485
O	82747	82748	,
O	82749	82755	answer
O	82755	82756	-
O	82756	82764	31696584

O	82765	82769	Your
O	82770	82778	question
O	82779	82781	is
O	82782	82787	based
O	82788	82790	on
O	82791	82801	assumption
O	82802	82806	that
O	82807	82810	the
O	82811	82815	code
O	82816	82821	which
O	82822	82825	may
O	82826	82831	throw
B-api_mention	82832	82852	NullPointerException
O	82853	82855	is
O	82856	82861	worse
O	82862	82866	than
O	82867	82870	the
O	82871	82875	code
O	82876	82881	which
O	82882	82885	may
O	82886	82889	not
O	82889	82890	.

O	82891	82895	This
O	82896	82906	assumption
O	82907	82909	is
O	82910	82915	wrong
O	82915	82916	.

O	82917	82919	If
O	82920	82923	you
O	82924	82930	expect
O	82931	82935	that
O	82936	82940	your
O	82941	82947	foobar
O	82948	82950	is
O	82951	82956	never
O	82957	82961	null
O	82962	82965	due
O	82966	82968	to
O	82969	82972	the
O	82973	82980	program
O	82981	82986	logic
O	82986	82987	,
O	82988	82990	it
O	82990	82991	'
O	82991	82992	s
O	82993	82997	much
O	82998	83004	better
O	83005	83007	to
O	83008	83011	use
B-api_mention	83012	83020	Optional
I-api_mention	83020	83021	.
I-api_mention	83021	83023	of
I-api_mention	83023	83024	(
I-api_mention	83024	83028	args
I-api_mention	83028	83029	)
O	83030	83032	as
O	83033	83036	you
O	83037	83041	will
O	83042	83045	see
O	83046	83047	a
B-api_mention	83048	83068	NullPointerException
O	83069	83074	which
O	83075	83079	will
O	83080	83088	indicate
O	83089	83093	that
O	83094	83098	your
O	83099	83106	program
O	83107	83110	has
O	83111	83112	a
O	83113	83116	bug
O	83116	83117	.

O	83118	83120	If
O	83121	83124	you
O	83125	83128	use
B-api_mention	83129	83137	Optional
I-api_mention	83137	83138	.
I-api_mention	83138	83148	ofNullable
I-api_mention	83148	83149	(
I-api_mention	83149	83153	args
I-api_mention	83153	83154	)
O	83155	83158	and
O	83159	83162	the
O	83163	83169	foobar
O	83170	83177	happens
O	83178	83180	to
O	83181	83183	be
O	83184	83188	null
O	83189	83192	due
O	83193	83195	to
O	83196	83199	the
O	83200	83203	bug
O	83203	83204	,
O	83205	83209	then
O	83210	83214	your
O	83215	83222	program
O	83223	83227	will
O	83228	83236	silently
O	83237	83245	continue
O	83246	83253	working
O	83254	83265	incorrectly
O	83265	83266	,
O	83267	83272	which
O	83273	83276	may
O	83277	83279	be
O	83280	83281	a
O	83282	83288	bigger
O	83289	83297	disaster
O	83297	83298	.

O	83299	83303	This
O	83304	83307	way
O	83308	83310	an
O	83311	83316	error
O	83317	83320	may
O	83321	83326	occur
O	83327	83331	much
O	83332	83337	later
O	83338	83341	and
O	83342	83344	it
O	83345	83350	would
O	83351	83353	be
O	83354	83358	much
O	83359	83365	harder
O	83366	83368	to
O	83369	83379	understand
O	83380	83382	at
O	83383	83388	which
O	83389	83394	point
O	83395	83397	it
O	83398	83402	went
O	83403	83408	wrong
O	83408	83409	.
