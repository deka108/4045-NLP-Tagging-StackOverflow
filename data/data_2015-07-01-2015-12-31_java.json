{"has_more": false, "items": [{"body": "<p>I was reading Java's <code>ArrayList</code> source code and noticed some comparisons in if-statements.</p>\n\n<p>In Java 7, the method <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/7-b147/java/util/ArrayList.java#ArrayList.grow%28int%29\"><code>grow(int)</code></a> uses</p>\n\n<pre><code>if (newCapacity - minCapacity &lt; 0)\n    newCapacity = minCapacity;\n</code></pre>\n\n<p>In Java 6, <code>grow</code> didn't exist. The method <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b27/java/util/ArrayList.java#ArrayList.ensureCapacity%28int%29\"><code>ensureCapacity(int)</code></a> however uses</p>\n\n<pre><code>if (newCapacity &lt; minCapacity)\n    newCapacity = minCapacity;\n</code></pre>\n\n<p>What was the reason behind the change? Was it a performance issue or just a style? </p>\n\n<p>I could imagine that comparing against zero is faster, but performing a complete subtraction just to check whether it's negative seems a bit overkill to me. Also in terms of bytecode, this would involve two instructions (<code>ISUB</code> and <code>IF_ICMPGE</code>) instead of one (<code>IFGE</code>).</p>\n", "tags": ["java", "if-statement", "arraylist"], "title": "Difference between if (a - b &lt; 0) and if (a &lt; b)", "answer_count": 4, "creation_date": 1444908482, "score": 218, "link": "http://stackoverflow.com/questions/33147339/difference-between-if-a-b-0-and-if-a-b", "answers": [{"body": "<p><code>a &lt; b</code> and <code>a - b &lt; 0</code> can mean two different things. Consider the following code:</p>\n\n<pre><code>int a = Integer.MAX_VALUE;\nint b = Integer.MIN_VALUE;\nif (a &lt; b) {\n    System.out.println(\"a &lt; b\");\n}\nif (a - b &lt; 0) {\n    System.out.println(\"a - b &lt; 0\");\n}\n</code></pre>\n\n<p>When run, this will only print <code>a - b &lt; 0</code>. What happens is that <code>a &lt; b</code> is clearly false, but <code>a - b</code> overflows and becomes <code>-1</code>, which is negative.</p>\n\n<p>Now, having said that, consider that the array has a length that is really close to <code>Integer.MAX_VALUE</code>. The code in <code>ArrayList</code> goes like this:</p>\n\n<pre><code>int oldCapacity = elementData.length;\nint newCapacity = oldCapacity + (oldCapacity &gt;&gt; 1);\nif (newCapacity - minCapacity &lt; 0)\n    newCapacity = minCapacity;\nif (newCapacity - MAX_ARRAY_SIZE &gt; 0)\n    newCapacity = hugeCapacity(minCapacity);\n</code></pre>\n\n<p><code>oldCapacity</code> is really close to <code>Integer.MAX_VALUE</code> so <code>newCapacity</code> (which is <code>oldCapacity + 0.5 * oldCapacity</code>) might overflow and become <code>Integer.MIN_VALUE</code> (i.e. negative). Then, subtracting <code>minCapacity</code> <em>underflows</em> back into a positive number.</p>\n\n<p>This check ensures that the <code>if</code> is not executed. If the code were written as <code>if (newCapacity &lt; minCapacity)</code>, it would be <code>true</code> in this case (since <code>newCapacity</code> is negative) so the <code>newCapacity</code> would be forced to <code>minCapacity</code> regardless of the <code>oldCapacity</code>.</p>\n\n<p>This overflow case is handled by the next if. When <code>newCapacity</code> has overflowed, this will be <code>true</code>: <code>MAX_ARRAY_SIZE</code> is defined as <code>Integer.MAX_VALUE - 8</code> and <code>Integer.MIN_VALUE - (Integer.MAX_VALUE - 8) &gt; 0</code> is <code>true</code>. The <code>newCapacity</code> is therefore rightly handled: <code>hugeCapacity</code> method returns <code>MAX_ARRAY_SIZE</code> or <code>Integer.MAX_VALUE</code>.</p>\n\n<p>NB: this is what the <code>// overflow-conscious code</code> comment in this method is saying.</p>\n", "title": "Difference between if (a - b &lt; 0) and if (a &lt; b)", "answer_id": 33147610, "link": "http://stackoverflow.com/questions/33147339/difference-between-if-a-b-0-and-if-a-b/33147610#33147610", "tags": ["java", "if-statement", "arraylist"]}, {"body": "<p>I found <a href=\"http://mail.openjdk.java.net/pipermail/core-libs-dev/2010-March/003736.html\">this explanation</a>:</p>\n\n<blockquote>\n  <p>On Tue, Mar 9, 2010 at 03:02, Kevin L. Stern  wrote: <br/></p>\n  \n  <blockquote>\n    <p>I did a quick search and it appears that Java is indeed two's complement\n    based. Nonetheless, please allow me to point out that, in general, this\n    type of code worries me since I fully expect that at some point someone will\n    come along and do exactly what Dmytro suggested; that is, someone will\n    change:</p>\n\n<pre><code>if (a - b &gt; 0)\n</code></pre>\n    \n    <p>to</p>\n\n<pre><code>if (a &gt; b)\n</code></pre>\n    \n    <p>and the entire ship will sink. I, personally, like to avoid obscurities\n    such as making integer overflow an essential basis for my algorithm unless\n    there is a good reason to do so. I would, in general, prefer to avoid\n    overflow altogether and to make the overflow scenario more explicit:</p>\n\n<pre><code>if (oldCapacity &gt; RESIZE_OVERFLOW_THRESHOLD) {\n   // Do something\n} else {\n  // Do something else\n}\n</code></pre>\n  </blockquote>\n  \n  <p>It's a good point.</p>\n  \n  <p>In <code>ArrayList</code> we cannot do this (or at least not compatibly), because\n  <code>ensureCapacity</code> is a public API and effectively already accepts\n  negative numbers as requests for a positive capacity that cannot be\n  satisfied.</p>\n  \n  <p>The current API is used like this:</p>\n\n<pre><code>int newcount = count + len;\nensureCapacity(newcount);\n</code></pre>\n  \n  <p>If you want to avoid overflow, you would need to change to something\n  less natural like</p>\n\n<pre><code>ensureCapacity(count, len);\nint newcount = count + len;\n</code></pre>\n  \n  <p>Anyway, I'm keeping the overflow-conscious code, but adding more\n  warning comments, and \"out-lining\" huge array creation so that\n  <code>ArrayList</code>'s code now looks like:</p>\n\n<pre><code>/**\n * Increases the capacity of this &lt;tt&gt;ArrayList&lt;/tt&gt; instance, if\n * necessary, to ensure that it can hold at least the number of elements\n * specified by the minimum capacity argument.\n *\n * @param minCapacity the desired minimum capacity\n */\npublic void ensureCapacity(int minCapacity) {\n    modCount++;\n\n    // Overflow-conscious code\n    if (minCapacity - elementData.length &gt; 0)\n        grow(minCapacity);\n}\n\n/**\n * The maximum size of array to allocate.\n * Some VMs reserve some header words in an array.\n * Attempts to allocate larger arrays may result in\n * OutOfMemoryError: Requested array size exceeds VM limit\n */\nprivate static final int MAX_ARRAY_SIZE = Integer.MAX_VALUE - 8;\n\n/**\n * Increases the capacity to ensure that it can hold at least the\n * number of elements specified by the minimum capacity argument.\n *\n * @param minCapacity the desired minimum capacity\n */\nprivate void grow(int minCapacity) {\n    // Overflow-conscious code\n    int oldCapacity = elementData.length;\n    int newCapacity = oldCapacity + (oldCapacity &gt;&gt; 1);\n    if (newCapacity - minCapacity &lt; 0)\n        newCapacity = minCapacity;\n    if (newCapacity - MAX_ARRAY_SIZE &gt; 0)\n        newCapacity = hugeCapacity(minCapacity);\n\n    // minCapacity is usually close to size, so this is a win:\n    elementData = Arrays.copyOf(elementData, newCapacity);\n}\n\nprivate int hugeCapacity(int minCapacity) {\n    if (minCapacity &lt; 0) // overflow\n        throw new OutOfMemoryError();\n    return (minCapacity &gt; MAX_ARRAY_SIZE) ?\n        Integer.MAX_VALUE :\n        MAX_ARRAY_SIZE;\n}\n</code></pre>\n  \n  <p>Webrev regenerated.</p>\n  \n  <p>Martin</p>\n</blockquote>\n\n<p>In Java 6, if you use the API as:</p>\n\n<pre><code>int newcount = count + len;\nensureCapacity(newcount);\n</code></pre>\n\n<p>And <code>newCount</code> overflows (this becomes negative), <code>if (minCapacity &gt; oldCapacity)</code> will return false and you may mistakenly assume that the <code>ArrayList</code> was increased by <code>len</code>.</p>\n", "title": "Difference between if (a - b &lt; 0) and if (a &lt; b)", "answer_id": 33147762, "link": "http://stackoverflow.com/questions/33147339/difference-between-if-a-b-0-and-if-a-b/33147762#33147762", "tags": ["java", "if-statement", "arraylist"]}, {"body": "<p>Looking at the code:</p>\n\n<pre><code>int newCapacity = oldCapacity + (oldCapacity &gt;&gt; 1);\n</code></pre>\n\n<p>If <code>oldCapacity</code> is quite large, this will overflow, and <code>newCapacity</code> will be a negative number. A comparison like <code>newCapacity &lt; oldCapacity</code> will incorrectly evaluate <code>true</code> and the <code>ArrayList</code> will fail to grow.</p>\n\n<p>Instead, the code as written (<code>newCapacity - minCapacity &lt; 0</code> returns false) will allow the negative value of <code>newCapacity</code> to be further evaluated in the next line, resulting in recalculating <code>newCapacity</code> by invoking <code>hugeCapacity</code> (<code>newCapacity = hugeCapacity(minCapacity);</code>) to allow for the <code>ArrayList</code> to grow up to <code>MAX_ARRAY_SIZE</code>.</p>\n\n<p>This is what the <code>// overflow-conscious code</code> comment is trying to communicate, though rather obliquely.</p>\n\n<p>So, bottom line, the new comparison protects against allocating an <code>ArrayList</code> larger than the predefined <code>MAX_ARRAY_SIZE</code> while allowing it to grow right up to that limit if needed.</p>\n", "title": "Difference between if (a - b &lt; 0) and if (a &lt; b)", "answer_id": 33148103, "link": "http://stackoverflow.com/questions/33147339/difference-between-if-a-b-0-and-if-a-b/33148103#33148103", "tags": ["java", "if-statement", "arraylist"]}, {"body": "<p>The two forms behave exactly the same unless the expression <code>a - b</code> overflows, in which case they are opposite.  If <code>a</code> is a large negative, and <code>b</code> is a large positive, then <code>(a &lt; b)</code> is clearly true, but <code>a - b</code> will overflow to become positive, so <code>(a - b &lt; 0)</code> is false.</p>\n\n<p>If you're familiar with x86 assembly code, consider that <code>(a &lt; b)</code> is implemented by a <code>jge</code>, which branches around the body of the if statement when SF = OF.  On the other hand, <code>(a - b &lt; 0)</code> will act like a <code>jns</code>, which branches when SF = 0.  Hence, these behave differently precisely when OF = 1.</p>\n", "title": "Difference between if (a - b &lt; 0) and if (a &lt; b)", "answer_id": 36520025, "link": "http://stackoverflow.com/questions/33147339/difference-between-if-a-b-0-and-if-a-b/36520025#36520025", "tags": ["java", "if-statement", "arraylist"]}], "question_id": 33147339}, {"body": "<p>Intellij Idea 14.1.4\nMac OS X Yosemite 10.10.3</p>\n\n<p>From the IDE:\n    Import Project ->\n    (Chosen directory to import) ->\n    Import project from external model, Gradle ->\n    Gradle Home: /usr/local/Cellar/gradle/2.4/libexec\n    Gradle JVM: Use JAVA_HOME (not defined yet)</p>\n\n<p>From shell:\n    echo $JAVA_HOME</p>\n\n<p>/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home\n(defined in .profile: export JAVA_HOME=\"$(/usr/libexec/java_home -v 1.8)\"</p>\n\n<p>What am I missing. I have checked other discussions in SO, for example, <a href=\"http://stackoverflow.com/questions/30960103/intellij-java-home-variable\">Intellij JAVA_HOME variable</a>, but don't have Project SDK prompt. </p>\n\n<p><img src=\"http://i.stack.imgur.com/Dt6zH.png\" alt=\"enter image description here\">\nThanks</p>\n", "tags": ["java", "intellij-idea", "gradle"], "title": "Intellij Idea: Importing Gradle project - getting JAVA_HOME not defined yet", "answer_count": 6, "creation_date": 1435967796, "score": 124, "link": "http://stackoverflow.com/questions/31215452/intellij-idea-importing-gradle-project-getting-java-home-not-defined-yet", "answers": [{"body": "<p>Try starting IntelliJ from terminal.\nYou can find application file under: \n/Applications/IntelliJ\\ IDEA\\ 14.app/Contents/MacOS</p>\n", "title": "Intellij Idea: Importing Gradle project - getting JAVA_HOME not defined yet", "answer_id": 31280703, "link": "http://stackoverflow.com/questions/31215452/intellij-idea-importing-gradle-project-getting-java-home-not-defined-yet/31280703#31280703", "tags": ["java", "intellij-idea", "gradle"]}, {"body": "<p>Make sure you have a jdk setup. To do this, create a new project and then go to file -> project structure. From there you can add a new jdk. Once that is setup, go back to your gradle project and you should have a jdk to select in the 'Gradle JVM' field.</p>\n", "title": "Intellij Idea: Importing Gradle project - getting JAVA_HOME not defined yet", "answer_id": 31352826, "link": "http://stackoverflow.com/questions/31215452/intellij-idea-importing-gradle-project-getting-java-home-not-defined-yet/31352826#31352826", "tags": ["java", "intellij-idea", "gradle"]}, {"body": "<p>You need to setup a SDK for Java projects, like @rizzletang said, but you don't need to create a new project, you can do it from the <code>Welcome</code> screen.</p>\n\n<p>On the bottom right, select <code>Configure &gt; Project Defaults &gt; Project Structure</code>:\n<img src=\"http://i.stack.imgur.com/xijoa.png\" alt=\"enter image description here\"></p>\n\n<p>Picking the <code>Project</code> tab on the left will show that you have no SDK selected:</p>\n\n<p><img src=\"http://i.stack.imgur.com/g2XZf.png\" alt=\"enter image description here\"></p>\n\n<p>Just click the <code>New...</code> button on the right hand side of the dropdown and point it to your JDK. After that, you can go back to the import screen and it should just show up.</p>\n", "title": "Intellij Idea: Importing Gradle project - getting JAVA_HOME not defined yet", "answer_id": 31420120, "link": "http://stackoverflow.com/questions/31215452/intellij-idea-importing-gradle-project-getting-java-home-not-defined-yet/31420120#31420120", "tags": ["java", "intellij-idea", "gradle"]}, {"body": "<p>Just to add completness to the above selected answer, one can also go the 'Project Setting' windows (if not on the Welcome screen) in IntelliJ IDEA by clicking:</p>\n\n<blockquote>\n  <p>File > Project Structure (Ctrl + Alt + Shift + S)</p>\n</blockquote>\n\n<p>And can define Project SDK there!</p>\n", "title": "Intellij Idea: Importing Gradle project - getting JAVA_HOME not defined yet", "answer_id": 33429944, "link": "http://stackoverflow.com/questions/31215452/intellij-idea-importing-gradle-project-getting-java-home-not-defined-yet/33429944#33429944", "tags": ["java", "intellij-idea", "gradle"]}, {"body": "<p>If you'd like to have your JAVA_HOME recognised by intellij, you can do one of these:</p>\n\n<ul>\n<li>Start your intellij from terminal /Applications/IntelliJ IDEA 14.app/Contents/MacOS (this will pick your bash env variables)</li>\n<li>Add login env variable by executing: <code>launchctl setenv JAVA_HOME \"/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home\"</code></li>\n</ul>\n\n<p>As others have answered you can ignore JAVA_HOME by setting up SDK in project structure.</p>\n", "title": "Intellij Idea: Importing Gradle project - getting JAVA_HOME not defined yet", "answer_id": 33559474, "link": "http://stackoverflow.com/questions/31215452/intellij-idea-importing-gradle-project-getting-java-home-not-defined-yet/33559474#33559474", "tags": ["java", "intellij-idea", "gradle"]}, {"body": "<p>For <strong>Windows</strong> Platform:</p>\n\n<p>try Running the 64 Bit exe version of IntelliJ from a path similar to following\nnote that it is available beside the default idea.exe</p>\n\n<p>\"C:\\Program Files (x86)\\JetBrains\\IntelliJ IDEA 15.0\\bin\\idea64.exe\"</p>\n\n<p><a href=\"http://stackoverflow.com/a/29897690/184572\">link</a></p>\n", "title": "Intellij Idea: Importing Gradle project - getting JAVA_HOME not defined yet", "answer_id": 33752400, "link": "http://stackoverflow.com/questions/31215452/intellij-idea-importing-gradle-project-getting-java-home-not-defined-yet/33752400#33752400", "tags": ["java", "intellij-idea", "gradle"]}], "question_id": 31215452}, {"body": "<p>I'm trying to get the exact JSON that is being sent in the request. Here is my code:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>OkHttpClient client = new OkHttpClient();\nclient.interceptors().add(new Interceptor(){\n   @Override public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {\n      Request request = chain.request();\n      Log.e(String.format(\"\\nrequest:\\n%s\\nheaders:\\n%s\",\n                          request.body().toString(), request.headers()));\n      com.squareup.okhttp.Response response = chain.proceed(request);\n      return response;\n   }\n});\nRetrofit retrofit = new Retrofit.Builder()\n   .baseUrl(API_URL)\n   .addConverterFactory(GsonConverterFactory.create())\n   .client(client).build();\n</code></pre>\n\n<p>But I only see this in the logs:</p>\n\n<pre><code>request:\ncom.squareup.okhttp.RequestBody$1@3ff4074d\nheaders:\nContent-Type: application/vnd.ll.event.list+json\n</code></pre>\n\n<p>How am I supposed to do proper logging, given the removal of <code>setLog()</code> and <code>setLogLevel()</code> which we used to use with Retrofit 1?</p>\n", "tags": ["java", "retrofit", "retrofit2", "okhttp3"], "title": "Logging with Retrofit 2", "answer_count": 10, "creation_date": 1441937247, "score": 119, "link": "http://stackoverflow.com/questions/32514410/logging-with-retrofit-2", "answers": [{"body": "<p>hey guys\uff0ci already find solution:</p>\n\n<pre><code>  public static &lt;T&gt; T createApi(Context context, Class&lt;T&gt; clazz, String host, boolean debug) {\n    if (singleton == null) {\n        synchronized (RetrofitUtils.class) {\n            if (singleton == null) {\n                RestAdapter.Builder builder = new RestAdapter.Builder();\n                builder\n                        .setEndpoint(host)\n                        .setClient(new OkClient(OkHttpUtils.getInstance(context)))\n                        .setRequestInterceptor(RequestIntercepts.newInstance())\n                        .setConverter(new GsonConverter(GsonUtils.newInstance()))\n                        .setErrorHandler(new ErrorHandlers())\n                        .setLogLevel(debug ? RestAdapter.LogLevel.FULL : RestAdapter.LogLevel.NONE)/*LogLevel.BASIC will cause response.getBody().in() close*/\n                        .setLog(new RestAdapter.Log() {\n                            @Override\n                            public void log(String message) {\n                                if (message.startsWith(\"{\") || message.startsWith(\"[\"))\n                                    Logger.json(message);\n                                else {\n                                    Logger.i(message);\n                                }\n                            }\n                        });\n                singleton = builder.build();\n            }\n        }\n    }\n    return singleton.create(clazz);\n}\n</code></pre>\n", "title": "Logging with Retrofit 2", "answer_id": 32517154, "link": "http://stackoverflow.com/questions/32514410/logging-with-retrofit-2/32517154#32517154", "tags": ["java", "retrofit", "retrofit2", "okhttp3"]}, {"body": "<p>I don't know if setLogLevel() will return in the final 2.0 version of Retrofit but for now you can use an interceptor for logging.</p>\n\n<p>A good example can found in OkHttp wiki: <a href=\"https://github.com/square/okhttp/wiki/Interceptors\" rel=\"nofollow\">https://github.com/square/okhttp/wiki/Interceptors</a></p>\n\n<pre><code>OkHttpClient client = new OkHttpClient();\nclient.interceptors().add(new LoggingInterceptor());\n\nRetrofit retrofit = new Retrofit.Builder()\n        .baseUrl(\"http://www.yourjsonapi.com\")\n        .addConverterFactory(GsonConverterFactory.create())\n        .client(client)\n        .build();\n</code></pre>\n", "title": "Logging with Retrofit 2", "answer_id": 32597816, "link": "http://stackoverflow.com/questions/32514410/logging-with-retrofit-2/32597816#32597816", "tags": ["java", "retrofit", "retrofit2", "okhttp3"]}, {"body": "<p>Try this:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>Request request = chain.request();\nBuffer buffer = new Buffer();\nrequest.body().writeTo(buffer);\nString body = buffer.readUtf8();\n</code></pre>\n\n<p>After this, in the <code>body</code> there is the JSON you are interested in.</p>\n", "title": "Logging with Retrofit 2", "answer_id": 32633003, "link": "http://stackoverflow.com/questions/32514410/logging-with-retrofit-2/32633003#32633003", "tags": ["java", "retrofit", "retrofit2", "okhttp3"]}, {"body": "<p>Here is an <code>Interceptor</code> that logs both the request and response bodies (using Timber, based on an example from the OkHttp docs and some other SO answers):</p>\n\n<pre><code>public class TimberLoggingInterceptor implements Interceptor {\n    @Override\n    public Response intercept(Chain chain) throws IOException {\n        Request request = chain.request();\n\n        long t1 = System.nanoTime();\n        Timber.i(\"Sending request %s on %s%n%s\", request.url(), chain.connection(), request.headers());\n        Timber.v(\"REQUEST BODY BEGIN\\n%s\\nREQUEST BODY END\", bodyToString(request));\n\n        Response response = chain.proceed(request);\n\n        ResponseBody responseBody = response.body();\n        String responseBodyString = response.body().string();\n\n        // now we have extracted the response body but in the process\n        // we have consumed the original reponse and can't read it again\n        // so we need to build a new one to return from this method\n\n        Response newResponse = response.newBuilder().body(ResponseBody.create(responseBody.contentType(), responseBodyString.getBytes())).build();\n\n        long t2 = System.nanoTime();\n        Timber.i(\"Received response for %s in %.1fms%n%s\", response.request().url(), (t2 - t1) / 1e6d, response.headers());\n        Timber.v(\"RESPONSE BODY BEGIN:\\n%s\\nRESPONSE BODY END\", responseBodyString);\n\n        return newResponse;\n    }\n\n    private static String bodyToString(final Request request){\n\n        try {\n            final Request copy = request.newBuilder().build();\n            final Buffer buffer = new Buffer();\n            copy.body().writeTo(buffer);\n            return buffer.readUtf8();\n        } catch (final IOException e) {\n            return \"did not work\";\n        }\n    }\n}\n</code></pre>\n", "title": "Logging with Retrofit 2", "answer_id": 32800976, "link": "http://stackoverflow.com/questions/32514410/logging-with-retrofit-2/32800976#32800976", "tags": ["java", "retrofit", "retrofit2", "okhttp3"]}, {"body": "<p>For those who need high level logging in Retrofit, use the interceptor like this</p>\n\n<pre><code>public static class LoggingInterceptor implements Interceptor {\n    @Override public Response intercept(Chain chain) throws IOException {\n        Request request = chain.request();\n        long t1 = System.nanoTime();\n        String requestLog = String.format(\"Sending request %s on %s%n%s\",\n                request.url(), chain.connection(), request.headers());\n        //YLog.d(String.format(\"Sending request %s on %s%n%s\",\n        //        request.url(), chain.connection(), request.headers()));\n        if(request.method().compareToIgnoreCase(\"post\")==0){\n            requestLog =\"\\n\"+requestLog+\"\\n\"+bodyToString(request);\n        }\n        Log.d(\"TAG\",\"request\"+\"\\n\"+requestLog);\n\n        Response response = chain.proceed(request);\n        long t2 = System.nanoTime();\n\n        String responseLog = String.format(\"Received response for %s in %.1fms%n%s\",\n                response.request().url(), (t2 - t1) / 1e6d, response.headers());\n\n        String bodyString = response.body().string();\n\n        Log.d(\"TAG\",\"response\"+\"\\n\"+responseLog+\"\\n\"+bodyString);\n\n        return response.newBuilder()\n                .body(ResponseBody.create(response.body().contentType(), bodyString))\n                .build();\n        //return response;\n    }\n}\n\npublic static String bodyToString(final Request request) {\n    try {\n        final Request copy = request.newBuilder().build();\n        final Buffer buffer = new Buffer();\n        copy.body().writeTo(buffer);\n        return buffer.readUtf8();\n    } catch (final IOException e) {\n        return \"did not work\";\n    }\n}`\n</code></pre>\n\n<p><strong>Courtesy</strong>: <a href=\"https://github.com/square/retrofit/issues/1072#\" rel=\"nofollow\">https://github.com/square/retrofit/issues/1072#</a></p>\n", "title": "Logging with Retrofit 2", "answer_id": 32858297, "link": "http://stackoverflow.com/questions/32514410/logging-with-retrofit-2/32858297#32858297", "tags": ["java", "retrofit", "retrofit2", "okhttp3"]}, {"body": "<p>In Retrofit 2 you should use <a href=\"https://github.com/square/okhttp/tree/master/okhttp-logging-interceptor\">HttpLoggingInterceptor</a>.</p>\n\n<p>Add dependency to <code>build.gradle</code>:</p>\n\n<pre><code>compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'\n</code></pre>\n\n<p>Create <code>Retrofit</code> object like the following:</p>\n\n<pre><code>HttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();\ninterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);\nOkHttpClient client = new OkHttpClient.Builder().addInterceptor(interceptor).build();\n\nRetrofit retrofit = new Retrofit.Builder()\n        .baseUrl(\"https://backend.example.com\")\n        .client(client)\n        .addConverterFactory(GsonConverterFactory.create())\n        .build();\n\nreturn retrofit.create(ApiClient.class);\n</code></pre>\n\n<p>Above solution gives you logcat logs very similar to the old ones set by</p>\n\n<pre><code>setLogLevel(RestAdapter.LogLevel.FULL)\n</code></pre>\n\n<p><br/>\n<strong>Update for Retrofit 2.1.0:</strong></p>\n\n<p>Use interceptor v3.3.1 otherwise you will get following error-\n<code>java.lang.NoSuchMethodError: No virtual method log(Ljava/lang/String;)V in class Lokhttp3/internal/Platform; or its super classes</code></p>\n\n<p>Configuration for 2.1.0 looks like this:</p>\n\n<pre><code>compile 'com.squareup.retrofit2:retrofit:2.1.0'\ncompile 'com.squareup.okhttp3:logging-interceptor:3.3.1'\n</code></pre>\n", "title": "Logging with Retrofit 2", "answer_id": 33256827, "link": "http://stackoverflow.com/questions/32514410/logging-with-retrofit-2/33256827#33256827", "tags": ["java", "retrofit", "retrofit2", "okhttp3"]}, {"body": "<p>I met the thing as you and I tried to ask the author of the book <strong><em>Retrofit: Love working with APIs on Android</em></strong> (here is the <a href=\"https://futurestud.io/books/retrofit\">link</a>)\n(nope! I am not making some ads for them....but they are really nice guys :)\nAnd the author replied to me very soon, with both Log method on Retrofit 1.9 and Retrofit 2.0-beta.</p>\n\n<p>And here is the code of Retrofit 2.0-beta:</p>\n\n<pre><code>HttpLoggingInterceptor logging = new HttpLoggingInterceptor();  \n// set your desired log level\nlogging.setLevel(Level.BODY);\n\nOkHttpClient httpClient = new OkHttpClient();  \n// add your other interceptors \u2026\n\n// add logging as last interceptor\nhttpClient.interceptors().add(logging);  // &lt;-- this is the important line!\n\nRetrofit retrofit = new Retrofit.Builder()  \n   .baseUrl(API_BASE_URL)\n   .addConverterFactory(GsonConverterFactory.create())\n   .client(httpClient)\n   .build();\n</code></pre>\n\n<p>This is how to add logging method with the help of <strong>HttpLoggingInterceptor</strong>. Also if you are the reader of that book I mentioned above, you may find that it says there is not log method with Retrofit 2.0 anymore -- which, I had asked the author, is not correct and they will update the book next year talking about it.</p>\n\n<p>// In case you are not that familiar with the Log method in Retrofit, I would like to share something more.</p>\n\n<p>Also should be noticed that there are some Logging Levels you could pick. I use the <strong>Level.BODY</strong> most of the time, which will give some thing like this:</p>\n\n<p><a href=\"http://i.stack.imgur.com/b1C2E.png\"><img src=\"http://i.stack.imgur.com/b1C2E.png\" alt=\"enter image description here\"></a></p>\n\n<p>You can find almost all the http staff inside the picture: the header, the content and response, etc.</p>\n\n<p>And sometimes you really don't need all the guests to attend your party: I just want to know whether it's successfully connected, that internet call is successfully made within my Activiy &amp; Fragmetn. Then you are free to use <strong>Level.BASIC</strong>, which will return something like this:</p>\n\n<p><a href=\"http://i.stack.imgur.com/nkpB9.png\"><img src=\"http://i.stack.imgur.com/nkpB9.png\" alt=\"enter image description here\"></a></p>\n\n<p>Can you find the status code <strong>200 OK</strong> inside? That is it :)</p>\n\n<p>Also there is another one, <strong>Level.HEADERS</strong>, which will only return the header of the network. Ya of course another picture here:</p>\n\n<p><a href=\"http://i.stack.imgur.com/eAk66.png\"><img src=\"http://i.stack.imgur.com/eAk66.png\" alt=\"enter image description here\"></a></p>\n\n<p>That's all of the Logging trick ;)</p>\n\n<p>And I would like to share you with the tutorial I learned a lot <a href=\"https://futurestud.io/blog/retrofit-2-log-requests-and-responses\">there</a>. They have a bunch of great post talking about almost everything related to Retrofit, and they are continuing updating the post, at the same time Retrofit 2.0 is coming. Please take a look at those work, which I think will save you lots of time.</p>\n", "title": "Logging with Retrofit 2", "answer_id": 34236997, "link": "http://stackoverflow.com/questions/32514410/logging-with-retrofit-2/34236997#34236997", "tags": ["java", "retrofit", "retrofit2", "okhttp3"]}, {"body": "<p>The main problem which I faced was dynamical adding headers and logging them into debug logcat. I've tried to add two interceptors. One for logging and one for adding headers on-the-go (token authorization). The problem was that we may .addInterceptor or .addNetworkInterceptor. As Jake Wharton said to me: \"Network interceptors always come after application interceptors. See <a href=\"https://github.com/square/okhttp/wiki/Interceptors\" rel=\"nofollow\">https://github.com/square/okhttp/wiki/Interceptors</a>\". So here is working example with headers and logs:</p>\n\n<pre><code>OkHttpClient httpClient = new OkHttpClient.Builder()\n            //here we can add Interceptor for dynamical adding headers\n            .addNetworkInterceptor(new Interceptor() {\n                @Override\n                public Response intercept(Chain chain) throws IOException {\n                    Request request = chain.request().newBuilder().addHeader(\"test\", \"test\").build();\n                    return chain.proceed(request);\n                }\n            })\n            //here we adding Interceptor for full level logging\n            .addNetworkInterceptor(new HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY))\n            .build();\n\n    Retrofit retrofit = new Retrofit.Builder()\n            .addConverterFactory(GsonConverterFactory.create(gsonBuilder.create()))\n            .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n            .client(httpClient)\n            .baseUrl(AppConstants.SERVER_ADDRESS)\n            .build();\n</code></pre>\n", "title": "Logging with Retrofit 2", "answer_id": 36847027, "link": "http://stackoverflow.com/questions/32514410/logging-with-retrofit-2/36847027#36847027", "tags": ["java", "retrofit", "retrofit2", "okhttp3"]}, {"body": "<p>You can also add Facebook's Stetho and look at the network traces in Chrome:\n<a href=\"http://facebook.github.io/stetho/\" rel=\"nofollow\">http://facebook.github.io/stetho/</a></p>\n\n<pre><code>final OkHttpClient.Builder builder = new OkHttpClient.Builder();\nif (BuildConfig.DEBUG) {\n    builder.networkInterceptors().add(new StethoInterceptor());\n}\n</code></pre>\n\n<p>Then open \"chrome://inspect\" in Chrome...</p>\n", "title": "Logging with Retrofit 2", "answer_id": 38489224, "link": "http://stackoverflow.com/questions/32514410/logging-with-retrofit-2/38489224#38489224", "tags": ["java", "retrofit", "retrofit2", "okhttp3"]}, {"body": "<p>I found way for Print Log in Retrofit</p>\n\n<pre><code>OkHttpClient okHttpClient = new OkHttpClient.Builder()\n            .addInterceptor(new Interceptor() {\n                @Override\n                public Response intercept(Chain chain) throws IOException {\n                    Request request = chain.request();\n                    if (BuildConfig.DEBUG) {\n                        Log.e(getClass().getName(), request.method() + \" \" + request.url());\n                        Log.e(getClass().getName(), \"\" + request.header(\"Cookie\"));\n                        RequestBody rb = request.body();\n                        Buffer buffer = new Buffer();\n                        if (rb != null)\n                            rb.writeTo(buffer);\n                        LogUtils.LOGE(getClass().getName(), \"Payload- \" + buffer.readUtf8());\n                    }\n                    return chain.proceed(request);\n                }\n            })\n            .readTimeout(60, TimeUnit.SECONDS)\n            .connectTimeout(60, TimeUnit.SECONDS)\n            .build();\n\n            iIdgardServices = new Retrofit.Builder()\n                    .baseUrl(\"Your Base URL\")\n                    .client(okHttpClient)\n                    .addConverterFactory(GsonConverterFactory.create())\n                    .build()\n                    .create(Your Service Interface .class);\n</code></pre>\n\n<p>Works for me.</p>\n", "title": "Logging with Retrofit 2", "answer_id": 38867189, "link": "http://stackoverflow.com/questions/32514410/logging-with-retrofit-2/38867189#38867189", "tags": ["java", "retrofit", "retrofit2", "okhttp3"]}], "question_id": 32514410}, {"body": "<p>Recently I'm reading the source code of Spring Framework.  Something I can't understand goes here:</p>\n\n<pre><code>public Member getMember() {\n    // NOTE: no ternary expression to retain JDK &lt;8 compatibility even when using\n    // the JDK 8 compiler (potentially selecting java.lang.reflect.Executable\n    // as common type, with that new base class not available on older JDKs)\n    if (this.method != null) {\n        return this.method;\n    }\n    else {\n        return this.constructor;\n    }\n}\n</code></pre>\n\n<p>This method is a member of class <code>org.springframework.core.MethodParameter</code>. The code is easy to understand while the comments are hard.</p>\n\n<blockquote>\n  <p>NOTE: no ternary expression to retain JDK &lt;8 compatibility even when using the JDK 8 compiler (potentially selecting <code>java.lang.reflect.Executable</code> as common type, with that new base class not available on older JDKs)</p>\n</blockquote>\n\n<p>What's the difference between using ternary expression and using <code>if...else...</code> construct in this context?</p>\n", "tags": ["java", "java-8", "ternary-operator"], "title": "Java ternary operator vs if/else in &lt;JDK8 compatibility", "answer_count": 4, "creation_date": 1441788967, "score": 112, "link": "http://stackoverflow.com/questions/32475166/java-ternary-operator-vs-if-else-in-jdk8-compatibility", "answers": [{"body": "<p>The chief difference is that an <code>if</code> <code>else</code> block is a <em>statement</em> whereas the ternary (more often known as the <em>conditional</em> operator in Java) is an <em>expression</em>.</p>\n\n<p>A <em>statement</em> can do things like <code>return</code> to the caller on some of the control paths. An <em>expression</em> can be used in an assignment:</p>\n\n<p><code>int n = condition ? 3 : 2;</code></p>\n\n<p>So the two expressions in the ternary after the condition need to be coercable to the same type. This can cause some odd effects in Java particularly with auto-boxing and automatic reference casting - this is what the comment in your posted code is referring to. The coercion of the expressions in your case would be to a <code>java.lang.reflect.Executable</code> type (as that's the <em>most specialised type</em>) and that does not exist in older versions of Java.</p>\n\n<p>Stylistically you should use an <code>if</code> <code>else</code> block if the code is statement-like, and a ternary if it's expression-like.</p>\n\n<p>Of course, you can make an <code>if</code> <code>else</code> block behave like an expression if you use a lambda function.</p>\n", "title": "Java ternary operator vs if/else in &lt;JDK8 compatibility", "answer_id": 32475290, "link": "http://stackoverflow.com/questions/32475166/java-ternary-operator-vs-if-else-in-jdk8-compatibility/32475290#32475290", "tags": ["java", "java-8", "ternary-operator"]}, {"body": "<p>The return value type in a ternary expression is affected by parent classes, which changed as described in Java 8.</p>\n\n<p>Hard to see why a cast couldn't have been written.</p>\n", "title": "Java ternary operator vs if/else in &lt;JDK8 compatibility", "answer_id": 32476828, "link": "http://stackoverflow.com/questions/32475166/java-ternary-operator-vs-if-else-in-jdk8-compatibility/32476828#32476828", "tags": ["java", "java-8", "ternary-operator"]}, {"body": "<p>When you think about the type of the operands, the problem becomes more apparent:</p>\n\n<pre><code>this.method != null ? this.method : this.constructor\n</code></pre>\n\n<p>has as type the most specialized common type of both the operands, i.e. the most specialized type common to both <code>this.method</code> and <code>this.constructor</code>. </p>\n\n<p>In Java 7 this is <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Member.html\"><code>java.lang.reflect.Member</code></a>, however the Java 8 class library introduces a new type <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Executable.html\"><code>java.lang.reflect.Executable</code></a> which is more specialized than the generic <code>Member</code>. Hence with a Java 8 class library the result type of the ternary expression is <code>Executable</code> rather than <code>Member</code>.</p>\n\n<p>Some (pre-release) versions of the Java 8 compiler seem to have produced an explicit reference to <code>Executable</code> inside generated code when compiling the ternary operator. This would trigger a class load, and thus in turn a <code>ClassNotFoundException</code> at runtime when running with a class library &lt; JDK 8, because <code>Executable</code> only exists for JDK \u2265 8.</p>\n\n<p>As noted by Tagir Valeev in <a href=\"http://stackoverflow.com/questions/32475166/java-ternary-operator-vs-if-else-in-jdk8-compatibility/32476850#answer-32477696\">this answer</a>, this is actually a bug in pre-release versions of JDK 8 and has since been fixed, so both the <code>if-else</code> workaround and the explanatory comment are now obsolete.</p>\n\n<p><strong>Additional note:</strong> One might come to the conclusion that this compiler bug was present before Java 8. However, the byte code generated for the ternary by OpenJDK 7 is the same as the byte code generated by OpenJDK 8. In fact, the type of the expression goes completely unmentioned at runtime,  the code is really only test, branch, load, return without any additional checks going on. So rest assured that this is not a problem (anymore) and indeed seems to have been a temporary problem during development of Java 8.</p>\n", "title": "Java ternary operator vs if/else in &lt;JDK8 compatibility", "answer_id": 32476850, "link": "http://stackoverflow.com/questions/32475166/java-ternary-operator-vs-if-else-in-jdk8-compatibility/32476850#32476850", "tags": ["java", "java-8", "ternary-operator"]}, {"body": "<p>This was introduced in <a href=\"https://github.com/spring-projects/spring-framework/commit/b9ca0fb947b30ebbfec6e40732202c839936fe82\">quite old commit</a> at May 3rd, 2013, almost a year before official JDK-8 release. The compiler was under heavy development those times, so such compatibility problems could occur. I guess, the Spring team just tested the JDK-8 build and tried to fix problems, even though they are actually compiler problems. By JDK-8 official release this became irrelevant. Now the ternary operator in this code works fine as expected (no reference to <code>Executable</code> class in compiled .class-file is present).</p>\n\n<p>Currently similar things appear in JDK-9: some code which can be nicely compiled in JDK-8 is failed with JDK-9 javac. I guess, most of such problems will be fixed till the release.</p>\n", "title": "Java ternary operator vs if/else in &lt;JDK8 compatibility", "answer_id": 32477696, "link": "http://stackoverflow.com/questions/32475166/java-ternary-operator-vs-if-else-in-jdk8-compatibility/32477696#32477696", "tags": ["java", "java-8", "ternary-operator"]}], "question_id": 32475166}, {"body": "<p>I have read several Java 8 tutorials before.</p>\n\n<p>Right now I encountered following topic:\n<a href=\"http://stackoverflow.com/questions/6134278/does-java-support-currying\">Does java support Currying?</a></p>\n\n<p>Here, I see following code:</p>\n\n<pre><code>IntFunction&lt;IntUnaryOperator&gt; curriedAdd = a -&gt; b -&gt; a + b;\nSystem.out.println(curriedAdd.apply(1).applyAsInt(12));\n</code></pre>\n\n<p>I understand that this example sum 2 elements but I cannot understand the construction:</p>\n\n<pre><code>a -&gt; b -&gt; a + b;\n</code></pre>\n\n<p>According to the left part of expression, this row should implement following function:</p>\n\n<pre><code>R apply(int value); \n</code></pre>\n\n<p>Before this, I only met lambdas only with one arrow.</p>\n", "tags": ["java", "lambda", "java-8", "currying"], "title": "What does lambda with 2 arrows mean in Java 8?", "answer_count": 6, "creation_date": 1443435837, "score": 101, "link": "http://stackoverflow.com/questions/32820722/what-does-lambda-with-2-arrows-mean-in-java-8", "answers": [{"body": "<p>If you express this as non-shorthand lambda syntax or pre-lambda Java anonymous class syntax it is clearer what is happening...</p>\n\n<p>The original question. Why are two arrows? Simple, there are two functions being defined... The first function is a function-defining-function, the second is the result of that function, which also happens to be function. Each requires an <code>-&gt;</code> operator to define it.</p>\n\n<h2>Non-shorthand</h2>\n\n<pre><code>IntFunction&lt;IntUnaryOperator&gt; curriedAdd = (a) -&gt; {\n    return (b) -&gt; {\n        return a + b;\n    };\n};\n</code></pre>\n\n<h2>Pre-Lambda before Java 8</h2>\n\n<pre><code>IntFunction&lt;IntUnaryOperator&gt; curriedAdd = new IntFunction&lt;IntUnaryOperator&gt;() {\n    @Override\n    public IntUnaryOperator apply(final int value) {\n        IntUnaryOperator op = new IntUnaryOperator() {\n            @Override\n            public int applyAsInt(int operand) {\n                return operand + value;\n            }\n        };\n        return op;\n    }\n};\n</code></pre>\n", "title": "What does lambda with 2 arrows mean in Java 8?", "answer_id": 32820927, "link": "http://stackoverflow.com/questions/32820722/what-does-lambda-with-2-arrows-mean-in-java-8/32820927#32820927", "tags": ["java", "lambda", "java-8", "currying"]}, {"body": "<p>An <code>IntFunction&lt;R&gt;</code> is a function <code>int -&gt; R</code>. An <code>IntUnaryOperator</code> is a function <code>int -&gt; int</code>.</p>\n\n<p>Thus an <code>IntFunction&lt;IntUnaryOperator&gt;</code> is a function that takes an <code>int</code> as parameter and return a function that takes an <code>int</code> as parameter and return an <code>int</code>.</p>\n\n<pre><code>a -&gt; b -&gt; a + b;\n^    |         |\n|     ---------\n|         ^\n|         |\n|         The IntUnaryOperator (that takes an int, b) and return an int (the sum of a and b)\n|\nThe parameter you give to the IntFunction\n</code></pre>\n\n<p>Maybe it is more clear if you use anonymous classes to \"decompose\" the lambda:</p>\n\n<pre><code>IntFunction&lt;IntUnaryOperator&gt; add = new IntFunction&lt;IntUnaryOperator&gt;() {\n    @Override\n    public IntUnaryOperator apply(int a) {\n        return new IntUnaryOperator() {\n            @Override\n            public int applyAsInt(int b) {\n                return a + b;\n            }\n        };\n    }\n};\n</code></pre>\n", "title": "What does lambda with 2 arrows mean in Java 8?", "answer_id": 32820940, "link": "http://stackoverflow.com/questions/32820722/what-does-lambda-with-2-arrows-mean-in-java-8/32820940#32820940", "tags": ["java", "lambda", "java-8", "currying"]}, {"body": "<p>Let's rewrite that lambda expression with parentheses to make it more clear:</p>\n\n<pre><code>IntFunction&lt;IntUnaryOperator&gt; curriedAdd = a -&gt; (b -&gt; (a + b));\n</code></pre>\n\n<p>So we are declaring a function taking an <code>int</code> which returns a <code>Function</code>. More specifically, the function returned takes an <code>int</code> and returns an <code>int</code> (the sum of the two elements): this can be represented as an <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/IntUnaryOperator.html\"><code>IntUnaryOperator</code></a>.</p>\n\n<p>Therefore, <code>curriedAdd</code> is a function taking an <code>int</code> and returning an <code>IntUnaryOperator</code>, so it can be represented as <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/IntFunction.html\"><code>IntFunction&lt;IntUnaryOperator&gt;</code></a>.</p>\n", "title": "What does lambda with 2 arrows mean in Java 8?", "answer_id": 32820984, "link": "http://stackoverflow.com/questions/32820722/what-does-lambda-with-2-arrows-mean-in-java-8/32820984#32820984", "tags": ["java", "lambda", "java-8", "currying"]}, {"body": "<p>Adding parentheses may make this more clear:</p>\n\n<pre><code>IntFunction&lt;IntUnaryOperator&gt; curriedAdd = a -&gt; (b -&gt; (a + b));\n</code></pre>\n\n<p>Or probably intermediate variable may help:</p>\n\n<pre><code>IntFunction&lt;IntUnaryOperator&gt; curriedAdd = a -&gt; {\n    IntUnaryOperator op = b -&gt; a + b;\n    return op;\n};\n</code></pre>\n", "title": "What does lambda with 2 arrows mean in Java 8?", "answer_id": 32820987, "link": "http://stackoverflow.com/questions/32820722/what-does-lambda-with-2-arrows-mean-in-java-8/32820987#32820987", "tags": ["java", "lambda", "java-8", "currying"]}, {"body": "<p>If you look at <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/IntFunction.html\" rel=\"nofollow\"><code>IntFunction</code></a> it might become clearer: <code>IntFunction&lt;R&gt;</code> is a <code>FunctionalInterface</code>. It represents a function that takes an <code>int</code> and returns a value of type <code>R</code>.</p>\n\n<p>In this case, the return type <code>R</code> is also a <code>FunctionalInterface</code>, namely an <code>IntUnaryOperator</code>. So the <em>first</em> (outer) function itself returns a function. </p>\n\n<p>In this case: When applied to an <code>int</code>, <code>curriedAdd</code> is supposed to return a function that again takes an <code>int</code> (and returns again <code>int</code>, because that's what <code>IntUnaryOperator</code> does).</p>\n\n<p>In functional programming it is common to write the type of a function as <code>param -&gt; return_value</code> and you see exactly that here. So the type of <code>curriedAdd</code> is <code>int -&gt; int -&gt; int</code> (or <code>int -&gt; (int -&gt; int)</code> if you like that better).</p>\n\n<p>Java 8's lambda syntax goes along with this. To define such a function, you write</p>\n\n<pre><code>a -&gt; b -&gt; a + b\n</code></pre>\n\n<p>which is very much similar to actual lambda calculus:</p>\n\n<pre><code>\u03bba \u03bbb a + b\n</code></pre>\n\n<p><code>\u03bbb a + b</code> is a function that takes a single parameter <code>b</code> and returns a value (the sum). <code>\u03bba \u03bbb a + b</code> is a function that accepts a single parameter <code>a</code> and returns another function of a single parameter. <code>\u03bba \u03bbb a + b</code> returns <code>\u03bbb a + b</code> with <code>a</code> set to the parameter value.</p>\n", "title": "What does lambda with 2 arrows mean in Java 8?", "answer_id": 32821016, "link": "http://stackoverflow.com/questions/32820722/what-does-lambda-with-2-arrows-mean-in-java-8/32821016#32821016", "tags": ["java", "lambda", "java-8", "currying"]}, {"body": "<p>It's two lambda expressions.</p>\n\n<pre><code>IntFunction&lt;IntUnaryOperator&gt; curriedAdd = \n  a -&gt; { //this is for the fixed value\n    return b -&gt; { //this is for the add operation\n      return a + b;\n    };\n  }\n\nIntUnaryOperator addTwo = curriedAdd.apply(2);\nSystem.out.println(addTwo.applyAsInt(12)); //prints 14\n</code></pre>\n", "title": "What does lambda with 2 arrows mean in Java 8?", "answer_id": 32821112, "link": "http://stackoverflow.com/questions/32820722/what-does-lambda-with-2-arrows-mean-in-java-8/32821112#32821112", "tags": ["java", "lambda", "java-8", "currying"]}], "question_id": 32820722}, {"body": "<p>I have a class used for navigating back and forth through a list of ordered pages. The pages are generally but not always accessed sequentially. Sometimes one or more pages may be skipped based on certain rules.</p>\n\n<p>To manage this, I maintain two stacks, forward and backward, to track which pages have previously been visited in either direction.</p>\n\n<p>As far as the functionality of this class is concerned, there is no reason for it to expose these stacks. However, when unit testing the navigation methods, <code>first()</code>, <code>next()</code>, <code>previous()</code> and <code>last()</code>, which all reorganize the stacks and return the appropriate page, I need to check that the stacks are in the right \"state\" at the end of the process.</p>\n\n<p>For example, calling <code>first()</code> should cause the forward stack to be cleared and every other page that has previously been visited to be pushed into the backward stack.</p>\n\n<p>Is this alone a good enough reason to provide getters for the forward and backward stacks? One reason I am hesitant to do so is that I worry that this also exposes them to (perhaps inadvertent) outside manipulation that might cause the class to malfunction. What if a client clears a stack for example?</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Some people have suggested that this question is a duplicate of the one posted <a href=\"http://stackoverflow.com/questions/7075938/making-a-private-method-public-to-unit-test-it-good-idea\">here</a>. I think the 2 questions aren't quite the same. The other question discusses the idea of <strong>refactoring a private method to make it public in order to be able to test it</strong>. This question, on the other hand, is specifically about <strong>testing public methods by examining the internal state of the object under tes</strong>t. I think there is a subtle but significant difference there, and the accepted answer clearly shows how to test the very same public methods without examining internal state.</p>\n", "tags": ["java", "unit-testing"], "title": "Is unit testing alone ever a good reason to expose private instance variables via getters?", "answer_count": 0, "creation_date": 1437977843, "score": 101, "link": "http://stackoverflow.com/questions/31646092/is-unit-testing-alone-ever-a-good-reason-to-expose-private-instance-variables-vi", "question_id": 31646092}, {"body": "<p>i am trying to integrate google sign in , in my app,i added these libraries:</p>\n\n<pre><code>compile 'com.google.android.gms:play-services-identity:8.1.0'\ncompile 'com.google.android.gms:play-services-plus:8.1.0'\n</code></pre>\n\n<p>also add this to project build gradle:</p>\n\n<pre><code>classpath 'com.google.gms:google-services:1.4.0-beta3'\n</code></pre>\n\n<p>also add plugin to app build gradle:</p>\n\n<pre><code>apply plugin: 'com.google.gms.google-services'\n</code></pre>\n\n<p>then add required permissions\nbut when i try to run my app , received this error:</p>\n\n<pre><code>    Error:Execution failed for task ':app:transformClassesWithDexForDebug'.\n    com.android.build.transform.api.TransformException: com.android.ide.common.process.ProcessException: \n    org.gradle.process.internal.ExecException: Process 'command 'C:\\Program Files\\Java\\jdk1.8.0\\bin\\java.exe'' finished with non-zero exit value 2\n</code></pre>\n", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"], "title": "com.android.build.transform.api.TransformException", "answer_count": 15, "creation_date": 1443354640, "score": 100, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception", "answers": [{"body": "<p>Try adding <code>multiDexEnabled true</code> to your app <strong>build.gradle</strong> file.</p>\n\n<pre><code> defaultConfig {\n    multiDexEnabled true\n}\n</code></pre>\n\n<p><strong>EDIT:</strong></p>\n\n<p>Try Steve's [answer][1] first. In case it happens frequently or first step didn't help <code>multiDexEnabled</code> might help. For those who love to dig deeper here is couple similar issues (with more answers):</p>\n\n<p><a href=\"http://stackoverflow.com/q/30001051/2146871\">:app:dexDebug ExecException finished with non-zero exit value 2</a>  </p>\n\n<p><a href=\"http://stackoverflow.com/q/28917696/2146871\">Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException</a></p>\n", "title": "com.android.build.transform.api.TransformException", "answer_id": 32811133, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception/32811133#32811133", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"]}, {"body": "<p>I just had to Clean my project and then it built successfully afterwards.</p>\n", "title": "com.android.build.transform.api.TransformException", "answer_id": 32826010, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception/32826010#32826010", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"]}, {"body": "<p>Another thing to watch for, is that you don't use </p>\n\n<pre><code>compile 'com.google.android.gms:play-services:8.3.0'\n</code></pre>\n\n<p>That will import ALL the play services, and it'll only take little more than a hello world to exceed the 65535 method limit of a single dex APK.</p>\n\n<p>Always specify only the services you need, for instance: </p>\n\n<pre><code>compile 'com.google.android.gms:play-services-identity:8.3.0'\ncompile 'com.google.android.gms:play-services-plus:8.3.0'\ncompile 'com.google.android.gms:play-services-gcm:8.3.0'\n</code></pre>\n", "title": "com.android.build.transform.api.TransformException", "answer_id": 33690032, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception/33690032#33690032", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"]}, {"body": "<p>If you are using the latest gradle version ie  <code>classpath 'com.android.tools.build:gradle:1.5.0' and  classpath 'com.google.gms:google-services:1.4.0-beta3'</code>, then try updating the latest support respository from the SDK manager and rebuild the entire project.</p>\n", "title": "com.android.build.transform.api.TransformException", "answer_id": 33865668, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception/33865668#33865668", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"]}, {"body": "<p>I also faced similar issue in Android Studio 1.5.1 and gradle 1.5.0.\nI just have to remove unwanted libraries from dependencies which may be automatically added in my app's build.gradle file.\nOne was :  compile 'com.google.android.gms:play-services:8.4.0'.\nSo for best practices try to only include specific play services library like for ads include only</p>\n\n<pre><code>dependencies {\n    compile 'com.google.android.gms:play-services-ads:8.4.0'\n}\n</code></pre>\n\n<p>Although</p>\n\n<pre><code>defaultConfig {\n    multiDexEnabled true\n}\n</code></pre>\n\n<p>this will also solve the issue, but provides with a lot of Notes in gradle console, making it confusing to find the other real issues during build</p>\n", "title": "com.android.build.transform.api.TransformException", "answer_id": 34819284, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception/34819284#34819284", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"]}, {"body": "<p>I'm using AS 1.5.1 and encountered the same problem. But just cleaning the project just wont do, so I tried something.</p>\n\n<ul>\n<li>clean project</li>\n<li>restart AS</li>\n<li>Sync Project</li>\n</ul>\n\n<p>This worked with me, so I hope this helps.</p>\n", "title": "com.android.build.transform.api.TransformException", "answer_id": 35099208, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception/35099208#35099208", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"]}, {"body": "<p>This error began appearing for me when I added some new methods to my project. I knew that I was nowhere near the 65k method limit and did not want to enable multiDex support for my project if I could help it.</p>\n\n<p>I resolved it by increasing the memory available to the <code>:app:transformClassesForDexForDebug</code> task. I did this by specifying <strong>javaMaxHeapSize</strong> in <code>gradle.build</code>.</p>\n\n<p><strong>gradle.build</strong></p>\n\n<pre><code>android {\n    ...\n    dexOptions {\n        javaMaxHeapSize \"4g\" //specify the heap size for the dex process\n    }\n}\n</code></pre>\n\n<p>I tried this after having had no success with other common solutions to this problem:</p>\n\n<ul>\n<li>Running a project <code>clean</code></li>\n<li>Manually deleting the <code>/app/build</code> and <code>/build</code> directories from my project</li>\n<li>Invalidating Gradle Cache and restarting Android Studio</li>\n</ul>\n\n<p><strong>Error</strong></p>\n\n<blockquote>\n  <p>Error:Execution failed for task\n  > ':app:transformClassesWithDexForDebug'. \n  com.android.build.api.transform.TransformException:\n  com.android.ide.common.process.ProcessException:\n  org.gradle.process.internal.ExecException: Process 'command\n  '/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/bin/java''\n  finished with non-zero exit value 1</p>\n</blockquote>\n\n<p>Note: increasing the memory available to the DEX task can cause performance problems on systems with lower memory - <a href=\"http://stackoverflow.com/questions/26378413/how-to-limit-dex-memory-usage\">link</a>. </p>\n", "title": "com.android.build.transform.api.TransformException", "answer_id": 35299382, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception/35299382#35299382", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"]}, {"body": "<p>you can see the documentation of <a href=\"http://developer.android.com/intl/es/tools/building/multidex.html\" rel=\"nofollow\">Android</a></p>\n\n<pre><code>android {\n    compileSdkVersion 21\n    buildToolsVersion \"21.1.0\"\n\n    defaultConfig {\n        ...\n        minSdkVersion 14\n        targetSdkVersion 21\n        ...\n\n        // Enabling multidex support.\n        multiDexEnabled true\n    }\n    ...\n}\n\ndependencies {\n  compile 'com.android.support:multidex:1.0.0'\n}\n</code></pre>\n\n<p>Manifest.xml</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.android.multidex.myapplication\"&gt;\n    &lt;application\n        ...\n        android:name=\"android.support.multidex.MultiDexApplication\"&gt;\n        ...\n    &lt;/application&gt;\n&lt;/manifest&gt;\n</code></pre>\n", "title": "com.android.build.transform.api.TransformException", "answer_id": 35590389, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception/35590389#35590389", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"]}, {"body": "<p>I had same problem when i rolled back to old version via git, and that version had previous .jar library of one 3rd party api, and for some reason turned out that both jar of the same sdk, just different versions were in /libs folder. </p>\n", "title": "com.android.build.transform.api.TransformException", "answer_id": 35804287, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception/35804287#35804287", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"]}, {"body": "<p>If you need add this reference for cordova plugin add next line in your plugin.xml file.</p>\n\n<pre><code>&lt;framework src=\"com.android.support:support-v4:+\" /&gt;\n</code></pre>\n", "title": "com.android.build.transform.api.TransformException", "answer_id": 37391817, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception/37391817#37391817", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"]}, {"body": "<p>If the different dependencies have a same jar also cause this build error.</p>\n\n<p>For example:</p>\n\n<pre><code>compile('com.a.b:library1');\ncompile('com.c.d:library2');\n</code></pre>\n\n<p>If \"library1\" and \"library2\" has a same jar named <code>xxx.jar</code>, this will make such an error.</p>\n", "title": "com.android.build.transform.api.TransformException", "answer_id": 37939600, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception/37939600#37939600", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"]}, {"body": "<p>It happened to me because of Eclipse memory leak. I had to restart my computer.</p>\n", "title": "com.android.build.transform.api.TransformException", "answer_id": 38401015, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception/38401015#38401015", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"]}, {"body": "<p>I changed a couple of pngs and the build number in the gradle and now I get this.  No amount of cleaning and restarting helped.  Disabling Instant Run fixed it for me.  YMMV</p>\n", "title": "com.android.build.transform.api.TransformException", "answer_id": 39060662, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception/39060662#39060662", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"]}, {"body": "<p>At my case change buildToolsVersion from \"24\" to \"23.0.2\", solve the problem.</p>\n", "title": "com.android.build.transform.api.TransformException", "answer_id": 39439923, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception/39439923#39439923", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"]}, {"body": "<p>I had the same option and as soon as I turned off Instant run, it worked fine on my API16 device, but on the API24 device it worked fine with Instant run. </p>\n\n<p>Hope this helps someone having the same issue</p>\n", "title": "com.android.build.transform.api.TransformException", "answer_id": 39469800, "link": "http://stackoverflow.com/questions/32807587/com-android-build-transform-api-transformexception/39469800#39469800", "tags": ["java", "android", "gradle", "google-play-services", "google-signin"]}], "question_id": 32807587}, {"body": "<p>I'm updating our app to use the new M Permissions system.\nIt is all working besides the onRequestPermissionsResult(). I need to check a permission on a button press, and if it is successful, send a text message. When I grant permission to do it, the dialog closes, but it doesn't trigger the Send Text until I press the button again.</p>\n\n<p>I've debugged and set breakpoints in the onRequestPermissionsResult() method but it never goes into it.</p>\n\n<p>This method gets called first:</p>\n\n<pre><code>    private void askForPermission() {\n    String[] permissions = new String[]{Manifest.permission.SEND_SMS};\n    ActivityCompat.requestPermissions(getActivity(), permissions, PERMISSIONS_CODE);\n}\n</code></pre>\n\n<p>And then my callback looks like this:</p>\n\n<pre><code>    @Override\npublic void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {\n    super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n\n    if (requestCode == PERMISSIONS_CODE) {\n        for (int i = 0; i &lt; permissions.length; i++) {\n            String permission = permissions[i];\n            int grantResult = grantResults[i];\n\n            if (permission.equals(Manifest.permission.SEND_SMS)) {\n                if (grantResult == PackageManager.PERMISSION_GRANTED) {\n                    onPPSButtonPress();\n                } else {\n                    requestPermissions(new String[]{Manifest.permission.SEND_SMS}, PERMISSIONS_CODE);\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Has anybody ran into a similar issue?\nAppreciate any help with this.\nThanks</p>\n", "tags": ["java", "android", "permissions", "android-permissions"], "title": "Android M Permissions: onRequestPermissionsResult() not being called", "answer_count": 13, "creation_date": 1442918533, "score": 98, "link": "http://stackoverflow.com/questions/32714787/android-m-permissions-onrequestpermissionsresult-not-being-called", "answers": [{"body": "<p>You can try this: </p>\n\n<pre><code>requestPermissions(permissions, PERMISSIONS_CODE);\n</code></pre>\n\n<p>If you are calling this code from a fragment it has it's own requestPermissions method. I believe the problem is that you are calling static method.</p>\n\n<p>Pro Tip if you want the <code>onRequestPermissionsResult()</code> in a fragment:\n<code>FragmentCompat.requestPermissions(Fragment fragment, String[] permissions, int requestCode)</code></p>\n", "title": "Android M Permissions: onRequestPermissionsResult() not being called", "answer_id": 32715419, "link": "http://stackoverflow.com/questions/32714787/android-m-permissions-onrequestpermissionsresult-not-being-called/32715419#32715419", "tags": ["java", "android", "permissions", "android-permissions"]}, {"body": "<p>You have the <em>checkPermissions</em> function for pre Marshmallow devices in <em>FragmentCompat</em>.\nI use like this:</p>\n\n<pre><code>FragmentCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION},\n                    MY_PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION);\n</code></pre>\n", "title": "Android M Permissions: onRequestPermissionsResult() not being called", "answer_id": 32865306, "link": "http://stackoverflow.com/questions/32714787/android-m-permissions-onrequestpermissionsresult-not-being-called/32865306#32865306", "tags": ["java", "android", "permissions", "android-permissions"]}, {"body": "<p>I ran into the same issue and I just found the solution. When using the Support library, you have to use the correct method calls. For example:</p>\n\n<ul>\n<li>When in <strong>AppCompatActivity</strong>, you should use <strong>ActivityCompat.requestPermissions</strong>;</li>\n<li>When in <strong>android.support.v4.app.Fragment</strong>, you should use simply <strong>requestPermissions</strong> (this is an instance method of android.support.v4.app.Fragment)</li>\n</ul>\n\n<p>If you call ActivityCompat.requestPermissions in a fragment, the <strong>onRequestPermissionsResult</strong> callback is called on the activity and not the fragment.</p>\n\n<p>Hope this helps!</p>\n", "title": "Android M Permissions: onRequestPermissionsResult() not being called", "answer_id": 33080682, "link": "http://stackoverflow.com/questions/32714787/android-m-permissions-onrequestpermissionsresult-not-being-called/33080682#33080682", "tags": ["java", "android", "permissions", "android-permissions"]}, {"body": "<p>This issue was actually being caused by NestedFragments.\nBasically most fragments we have extend a HostedFragment which in turn extends a CompatFragment. Having these nested fragments caused issues which eventually were solved by another developer on the project.</p>\n\n<p>He was doing some low level stuff like bit switching to get this working so I'm not too sure of the actual final solution</p>\n", "title": "Android M Permissions: onRequestPermissionsResult() not being called", "answer_id": 33081173, "link": "http://stackoverflow.com/questions/32714787/android-m-permissions-onrequestpermissionsresult-not-being-called/33081173#33081173", "tags": ["java", "android", "permissions", "android-permissions"]}, {"body": "<p>If you have <code>onRequestPermissionsResult</code> in both activity and fragment, make sure to call <code>super.onRequestPermissionsResult</code> in activity. It is not required in fragment, but it is in activity.</p>\n", "title": "Android M Permissions: onRequestPermissionsResult() not being called", "answer_id": 33995827, "link": "http://stackoverflow.com/questions/32714787/android-m-permissions-onrequestpermissionsresult-not-being-called/33995827#33995827", "tags": ["java", "android", "permissions", "android-permissions"]}, {"body": "<p>If you are using requestPermissions in fragment, it accepts 2 parameters instead of 3.</p>\n\n<p>You should use <code>requestPermissions(permissions, PERMISSIONS_CODE);</code></p>\n", "title": "Android M Permissions: onRequestPermissionsResult() not being called", "answer_id": 34309921, "link": "http://stackoverflow.com/questions/32714787/android-m-permissions-onrequestpermissionsresult-not-being-called/34309921#34309921", "tags": ["java", "android", "permissions", "android-permissions"]}, {"body": "<p>If for some reason you have extended a custom Activity located in some external library that do not call the super you will need to manually call the Fragment super.onRequestPermissionsResult yourself in your Activity onRequestPermissionsResult.</p>\n\n<pre><code>YourActivity extends SomeActivityNotCallingSuperOnRequestPermissionsResult{\nFragment requestingFragment;//the fragment requesting the permission\n...\n@Override\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n        if(requestingFragment!=null)\n            requestingFragment.onRequestPermissionsResult(requestCode, permissions, grantResults);\n    }\n...\n</code></pre>\n", "title": "Android M Permissions: onRequestPermissionsResult() not being called", "answer_id": 34945511, "link": "http://stackoverflow.com/questions/32714787/android-m-permissions-onrequestpermissionsresult-not-being-called/34945511#34945511", "tags": ["java", "android", "permissions", "android-permissions"]}, {"body": "<p>This will work..</p>\n\n<pre><code>@Override\n    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n    }\n</code></pre>\n", "title": "Android M Permissions: onRequestPermissionsResult() not being called", "answer_id": 35245235, "link": "http://stackoverflow.com/questions/32714787/android-m-permissions-onrequestpermissionsresult-not-being-called/35245235#35245235", "tags": ["java", "android", "permissions", "android-permissions"]}, {"body": "<p>I have found out that is important where you call <code>android.support.v4.app.Fragment.requestPermissions</code>.</p>\n\n<p>If you do it in <code>onCreate()</code>, <code>onRequestPermissionsResult()</code> is never called.</p>\n\n<p>Solution: Call it in <code>onActivityCreated()</code>;</p>\n\n<pre><code>@Override\npublic void onActivityCreated(Bundle savedInstanceState) {\n\n    super.onActivityCreated(savedInstanceState);\n\n    if (ContextCompat.checkSelfPermission(context, Manifest.permission.READ_CONTACTS) == PackageManager.PERMISSION_DENIED) \n        requestPermissions(new String[]{Manifest.permission.READ_CONTACTS}, 0);\n\n}\n</code></pre>\n", "title": "Android M Permissions: onRequestPermissionsResult() not being called", "answer_id": 35421061, "link": "http://stackoverflow.com/questions/32714787/android-m-permissions-onrequestpermissionsresult-not-being-called/35421061#35421061", "tags": ["java", "android", "permissions", "android-permissions"]}, {"body": "<pre><code> /* use the object of your fragment to call the \n * onRequestPermissionsResult in fragment after\n * in activity and use different request Code for \n * both Activity and Fragment */\n\n   if (isFragment)\n    mFragment.requestPermissions(permissions.toArray(new\n    String[permissions.size()]),requestPermission);\n\n   else\n    ActivityCompat.requestPermissions(mActivity,permissions.toArray(new\n    String[permissions.size()]),requestPermission);\n</code></pre>\n", "title": "Android M Permissions: onRequestPermissionsResult() not being called", "answer_id": 35701385, "link": "http://stackoverflow.com/questions/32714787/android-m-permissions-onrequestpermissionsresult-not-being-called/35701385#35701385", "tags": ["java", "android", "permissions", "android-permissions"]}, {"body": "<p>I encountered this problem too. If you want the activity that handles permissions not in the history/recents, then you will be tempted to change your <code>AndroidManifest.xml</code> entry.</p>\n\n<p>If you set the activity that you call <code>requestPermissions</code> or <code>AppCompatActivity.requestPermissions</code> with  </p>\n\n<pre><code>android:noHistory=\"true\"\nandroid:excludeFromRecents=\"true\"\n</code></pre>\n\n<p>in your <code>AndroidManifest.xml</code> then <code>onRequestPermissionsResult()</code> will not be called. This is true if your Activity is derived from <code>Activity</code> or <code>AppCompatActivity</code>. </p>\n\n<p>This can be fixed by removing both flags from 'AndroidManifest.xml' and finishing your activity with <code>finishAndRemoveTask()</code> instead. </p>\n", "title": "Android M Permissions: onRequestPermissionsResult() not being called", "answer_id": 35772265, "link": "http://stackoverflow.com/questions/32714787/android-m-permissions-onrequestpermissionsresult-not-being-called/35772265#35772265", "tags": ["java", "android", "permissions", "android-permissions"]}, {"body": "<p>Inside fragment, you need to call:</p>\n\n<pre><code>FragmentCompat.requestPermissions(permissionsList, RequestCode)\n</code></pre>\n\n<p>Not:</p>\n\n<pre><code>ActivityCompat.requestPermissions(Activity, permissionsList, RequestCode);\n</code></pre>\n", "title": "Android M Permissions: onRequestPermissionsResult() not being called", "answer_id": 37854430, "link": "http://stackoverflow.com/questions/32714787/android-m-permissions-onrequestpermissionsresult-not-being-called/37854430#37854430", "tags": ["java", "android", "permissions", "android-permissions"]}, {"body": "<p>Before you check everything according to above answers, make sure your request code is not 0!!!</p>\n\n<p>check the code of onRequestPermissionsResult() in FragmentActivity.java:</p>\n\n<pre><code>public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,\n        @NonNull int[] grantResults) {\n    int index = (requestCode&gt;&gt;16)&amp;0xffff;\n    if (index != 0) {\n        index--;\n\n        String who = mPendingFragmentActivityResults.get(index);\n        mPendingFragmentActivityResults.remove(index);\n        if (who == null) {\n            Log.w(TAG, \"Activity result delivered for unknown Fragment.\");\n            return;\n        }\n        Fragment frag = mFragments.findFragmentByWho(who);\n        if (frag == null) {\n            Log.w(TAG, \"Activity result no fragment exists for who: \" + who);\n        } else {\n            frag.onRequestPermissionsResult(requestCode&amp;0xffff, permissions, grantResults);\n        }\n    }\n}\n</code></pre>\n", "title": "Android M Permissions: onRequestPermissionsResult() not being called", "answer_id": 38236485, "link": "http://stackoverflow.com/questions/32714787/android-m-permissions-onrequestpermissionsresult-not-being-called/38236485#38236485", "tags": ["java", "android", "permissions", "android-permissions"]}], "question_id": 32714787}, {"body": "<p>If <code>short</code> is automatically promoted to <code>int</code> in arithmetic operations, then why is:</p>\n\n<pre><code>short thirty = 10 * 3;\n</code></pre>\n\n<p>A legal assignment to the <code>short</code> variable <code>thirty</code>?</p>\n\n<p>In turn, this:</p>\n\n<pre><code>short ten = 10;\nshort three = 3;\nshort thirty = ten * three; // DOES NOT COMPILE AS EXPECTED\n</code></pre>\n\n<p>as well as this:</p>\n\n<pre><code>int ten = 10;\nint three = 3;\nshort thirty = ten * three; // DOES NOT COMPILE AS EXPECTED\n</code></pre>\n\n<p>does not compile because assigning an <code>int</code> value to a <code>short</code> is not allowed without casting as expected.</p>\n\n<p>Is there something special going on about numerical literals?</p>\n", "tags": ["java", "short", "type-promotion"], "title": "Why is &quot;short thirty = 3 * 10&quot; a legal assignment?", "answer_count": 2, "creation_date": 1440504026, "score": 95, "link": "http://stackoverflow.com/questions/32203462/why-is-short-thirty-3-10-a-legal-assignment", "answers": [{"body": "<p>Yes there is something special going on with the literal case: <code>10 * 3</code> will be evaluated at <em>compile</em> time. So you don't need an explicit <code>(short)</code> conversion for multiplied literals.</p>\n\n<p><code>ten * three</code> is not compile-time evaluable so therefore needs an explicit conversion.</p>\n\n<p>It would be a different matter if <code>ten</code> and <code>three</code> were marked <code>final</code>.</p>\n", "title": "Why is &quot;short thirty = 3 * 10&quot; a legal assignment?", "answer_id": 32203530, "link": "http://stackoverflow.com/questions/32203462/why-is-short-thirty-3-10-a-legal-assignment/32203530#32203530", "tags": ["java", "short", "type-promotion"]}, {"body": "<p>Because the compiler replaces <code>10*3</code> with 30 at <em>compile time</em> itself. So,effectively : <code>short thirty = 10 * 3</code> is calculated at compile time. </p>\n\n<p>Try changing <code>ten</code> and <code>three</code> to <code>final short</code> (making them compile time constants) and see what happens :P</p>\n\n<p>Examine byte-code using <code>javap -v</code>  for both verisions (<code>10*3</code> and <code>final short</code>). You will be able to see that there is little difference.</p>\n\n<p>Ok, So, here is the byte code difference for different cases.</p>\n\n<p><strong>Case -1 :</strong> </p>\n\n<blockquote>\n  <p>Java Code :\n      main() {\n          short s = 10*3;\n      }</p>\n</blockquote>\n\n<p>Byte code :</p>\n\n<pre><code>stack=1, locals=2, args_size=1\n         0: bipush        30  // directly push 30 into \"s\"\n         2: istore_1      \n         3: return   \n</code></pre>\n\n<p><strong>Case -2 :</strong> </p>\n\n<pre><code>public static void main(String arf[])  {\n   final short s1= 10;\n   final short s2 = 3;\n   short s = s1*s2;\n}\n</code></pre>\n\n<p>Byte code :</p>\n\n<pre><code>  stack=1, locals=4, args_size=1\n         0: bipush        10\n         2: istore_1      \n         3: iconst_3      \n         4: istore_2      \n         5: bipush        30 // AGAIN, push 30 directly into \"s\"\n         7: istore_3      \n         8: return   \n</code></pre>\n\n<p><strong>Case -3 :</strong> </p>\n\n<pre><code>public static void main(String arf[]) throws Exception {\n     short s1= 10;\n     short s2 = 3;\n     int s = s1*s2;\n}\n</code></pre>\n\n<p>Byte-code :</p>\n\n<pre><code>stack=2, locals=4, args_size=1\n         0: bipush        10  // push constant 10\n         2: istore_1      \n         3: iconst_3        // use constant 3 \n         4: istore_2      \n         5: iload_1       \n         6: iload_2       \n         7: imul          \n         8: istore_3      \n         9: return \n</code></pre>\n\n<p>In the above case, <code>10</code> and <code>3</code> are taken from the local variables <code>s1</code> and <code>s2</code></p>\n", "title": "Why is &quot;short thirty = 3 * 10&quot; a legal assignment?", "answer_id": 32203556, "link": "http://stackoverflow.com/questions/32203462/why-is-short-thirty-3-10-a-legal-assignment/32203556#32203556", "tags": ["java", "short", "type-promotion"]}], "question_id": 32203462}, {"body": "<p>I have JDK 8u60 installed. I checked the <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\">Oracle website</a> today and they have released two versions simultaneously: <a href=\"http://www.oracle.com/technetwork/java/javase/8u65-relnotes-2687063.html\">8u65</a> and <a href=\"http://www.oracle.com/technetwork/java/javase/8u66-relnotes-2692847.html\">8u66</a>. Both are public release versions.</p>\n\n<ul>\n<li>Why did they release two versions simultaneously? </li>\n<li>What conditions/reasons would make one choose one over the other?</li>\n</ul>\n", "tags": ["java", "version", "oraclejdk"], "title": "What&#39;s the difference between odd and even Java updates?", "answer_count": 4, "creation_date": 1445434068, "score": 95, "link": "http://stackoverflow.com/questions/33260616/whats-the-difference-between-odd-and-even-java-updates", "answers": [{"body": "<p>From <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\">the download page</a> (<strong>emphasis</strong> added):</p>\n\n<blockquote>\n  <p>Java SE 8u65 includes important security fixes. Oracle strongly\n  recommends that all Java SE 8 users upgrade to this release. Java SE\n  8u66 is a patch-set update, including all of 8u65 <strong>plus additional\n  features (described in the release notes).</strong></p>\n</blockquote>\n\n<p><a href=\"http://www.oracle.com/technetwork/java/javase/cpu-psu-explained-2331472.html\">Oracle often does this</a>. It's all about how you as a customer want to handle the risks.</p>\n\n<blockquote>\n  <p>Users should only use the corresponding PSU release if they are being \n  impacted by one of the additional bugs fixed in that version as noted in \n  the release notes.</p>\n</blockquote>\n\n<p>8u65 has security fixes and <a href=\"http://www.oracle.com/technetwork/java/javase/8all-relnotes-2226344.html\">sets a new security \"baseline\"</a> for <strike>companies to achieve</strike> <a href=\"http://www.oracle.com/technetwork/java/javase/family-clsid-140615.html\">Java 8 applications</a>. 8u66 has those same security updates, <a href=\"http://www.oracle.com/technetwork/java/javase/2col/8u66-bugfixes-2692105.html\">plus additional bug fixes</a>. However, even bug fixes can sometimes cause changes to behaviour that present compatibility issues for users. Thus the changes in 8u66 are <em>optional</em> (note that the baseline linked above is still 1.8.0_65, and companies that want more stability in their platform might well prefer to only apply the security fixes, which are necessary.</p>\n\n<p>Oracle is certainly not obligated to split their updates in this fashion, but I'm sure some of their most risk-averse customers are glad to have the option.</p>\n", "title": "What&#39;s the difference between odd and even Java updates?", "answer_id": 33271482, "link": "http://stackoverflow.com/questions/33260616/whats-the-difference-between-odd-and-even-java-updates/33271482#33271482", "tags": ["java", "version", "oraclejdk"]}, {"body": "<p>If you have an existing project use 8u65. If you are starting one from scratch use 8u66. I'm installing NetBeans 8.1 so I'm using 8u66 in case NB8.1 code has any of the 15 bugs in 8u65 which are not solved in 8u66.</p>\n", "title": "What&#39;s the difference between odd and even Java updates?", "answer_id": 34459572, "link": "http://stackoverflow.com/questions/33260616/whats-the-difference-between-odd-and-even-java-updates/34459572#34459572", "tags": ["java", "version", "oraclejdk"]}, {"body": "<p>I found this info on Haven and Hearth:</p>\n\n<blockquote>\n  <p>u73(-b02) is the public release<br>\n  u74(-b02) is public Bundled Patch Release (contains extra non security related fixes)</p>\n</blockquote>\n\n<p>I'm thinking you'd only need to download 74, then.</p>\n", "title": "What&#39;s the difference between odd and even Java updates?", "answer_id": 35332869, "link": "http://stackoverflow.com/questions/33260616/whats-the-difference-between-odd-and-even-java-updates/35332869#35332869", "tags": ["java", "version", "oraclejdk"]}, {"body": "<p>This is the official <a href=\"http://www.oracle.com/technetwork/java/javase/cpu-psu-explained-2331472.html\">Oracle's answer</a>:</p>\n\n<blockquote>\n  <h1>Java CPU and PSU Releases Explained</h1>\n  \n  <p>Starting with the release of Java SE 7 Update 71 (Java SE 7u71) in\n  October 2014, Oracle will release a Critical Patch Update (CPU) at the\n  same time as a corresponding Patch Set Update (PSU) for Java SE 7.</p>\n  \n  <hr>\n  \n  <h3>Which Java version should I choose: the CPU or the PSU?</h3>\n  \n  <p>Oracle strongly recommends that all Java SE users upgrade to the\n  latest CPU release available for a release family. Most users should\n  choose the CPU release.</p>\n  \n  <p>Users should only use the corresponding PSU release if they are being\n  impacted by one of the additional bugs fixed in that version as noted\n  in the release notes.</p>\n  \n  <p>The subsequent CPU release will contain all of the fixes from the\n  current PSU. For this reason, organizations should test the current\n  PSU in their environment in anticipation of these fixes being included\n  in the next CPU.</p>\n  \n  <h3>What is the difference between a Java CPU and PSU release?</h3>\n  \n  <p>Java SE Critical Patch Updates (CPU) contain fixes to security\n  vulnerabilities and critical bug fixes. Oracle strongly recommends\n  that all Java SE users upgrade to the latest CPU releases as they are\n  made available. Java SE CPU releases are odd numbered versions (i.e.\n  7u71, 7u65 \u2013 see more on Java SE version numbering schemes here).</p>\n  \n  <p>Java SE Patch Set Updates (PSU) contain all of fixes in the\n  corresponding CPU, as well as additional non-critical fixes. Java PSU\n  releases should only be used if you are being impacted by one of the\n  additional bugs fixed in that version. The release notes call out the\n  additional fixes available in Java SE PSU releases.</p>\n  \n  <h3>Is the cadence of CPU releases changing?</h3>\n  \n  <p>As before, Java SE CPU releases are scheduled for release on the\n  Tuesday closest to the 17th day of January, April, July and October\n  under the normal Oracle Critical Patch Update schedule.</p>\n  \n  <p>Starting in October 2014 with the release of Java SE 7u71 (CPU) and\n  Java SE 7u72 (PSU), Oracle plans to additionally release a\n  corresponding PSU release along with each CPU release for Java SE 7.\n  PSU releases provide organizations and developers with access to\n  non-critical fixes in addition to the critical fixes contained in the\n  corresponding CPU.</p>\n</blockquote>\n\n<p><br>\nUse u73 unless you know you need a bug fix that's in u74.</p>\n", "title": "What&#39;s the difference between odd and even Java updates?", "answer_id": 35443576, "link": "http://stackoverflow.com/questions/33260616/whats-the-difference-between-odd-and-even-java-updates/35443576#35443576", "tags": ["java", "version", "oraclejdk"]}], "question_id": 33260616}, {"body": "<p>After a recent update to Android Studio, we're having problems getting a project to compile that previously worked. At first we were getting the following error:</p>\n\n<pre><code>/Users/james/Development/AndroidProjects/myapp/app/build/intermediates/exploded-aar/com.android.support/appcompat-v7/23.0.0/res/values-v23/values-v23.xml\nError:(2) Error retrieving parent for item: No resource found that matches the given name 'android:TextAppearance.Material.Widget.Button.Inverse'.\nError:(2) Error retrieving parent for item: No resource found that matches the given name 'android:Widget.Material.Button.Colored'.\n</code></pre>\n\n<p>I updated the sdk build target in our gradle file to 23, which made this specific issue go away, but it left us with a ton of apache.http package errors (specifically, a ton of apache packages we use for http stuff are now gone in sdk 23).</p>\n\n<p>What I want to do is solve the strange resource error, but without updating to sdk 23. I don't have the time to re-write our tools library right now to use whatever new implementation of apache http components has been issued. Does anyone have any ideas?</p>\n", "tags": ["java", "android", "apache"], "title": "resource error in android studio after update: No Resource Found", "answer_count": 14, "creation_date": 1439978909, "score": 94, "link": "http://stackoverflow.com/questions/32092511/resource-error-in-android-studio-after-update-no-resource-found", "answers": [{"body": "<p>Change the appcompat version in your build.gradle file back to 22.2.1 (or whatever you were using before).</p>\n", "title": "resource error in android studio after update: No Resource Found", "answer_id": 32092805, "link": "http://stackoverflow.com/questions/32092511/resource-error-in-android-studio-after-update-no-resource-found/32092805#32092805", "tags": ["java", "android", "apache"]}, {"body": "<p>in your projects build.gradle file...\nwrite as below..\ni have solved that error by change the appcompat version from v7.23.0.0 to v7.22.2.1..</p>\n\n<pre><code>dependencies\n</code></pre>\n\n<p>{</p>\n\n<pre><code>compile fileTree(dir: 'libs', include: ['*.jar'])\ncompile 'com.android.support:appcompat-v7:22.2.1'\n</code></pre>\n\n<p>}</p>\n\n<p><a href=\"http://i.stack.imgur.com/FHysh.jpg\"><img src=\"http://i.stack.imgur.com/FHysh.jpg\" alt=\"Below screen shot is for better understanding. \"></a></p>\n", "title": "resource error in android studio after update: No Resource Found", "answer_id": 32110726, "link": "http://stackoverflow.com/questions/32092511/resource-error-in-android-studio-after-update-no-resource-found/32110726#32110726", "tags": ["java", "android", "apache"]}, {"body": "<p>You need to set compileSdkVersion to 23.</p>\n\n<p>Since API 23 Android removed the deprecated Apache Http packages, so if you use them for server requests, you'll need to add <code>useLibrary 'org.apache.http.legacy'</code> to build.gradle as stated in <a href=\"https://developer.android.com/preview/behavior-changes.html#behavior-apache-http-client\">this</a> link:</p>\n\n<pre><code>android {\n    compileSdkVersion 23\n    buildToolsVersion \"23.0.0\"\n    ...\n\n    //only if you use Apache packages\n    useLibrary 'org.apache.http.legacy'\n}\n</code></pre>\n", "title": "resource error in android studio after update: No Resource Found", "answer_id": 32112023, "link": "http://stackoverflow.com/questions/32092511/resource-error-in-android-studio-after-update-no-resource-found/32112023#32112023", "tags": ["java", "android", "apache"]}, {"body": "<p>It's works just when the build.grade was changed to that:</p>\n\n<pre><code>android {\n    compileSdkVersion 22\n    buildToolsVersion \"22.0.1\"\n\n    defaultConfig {\n        applicationId \"blablabla\"\n        minSdkVersion 15\n        targetSdkVersion 22\n        versionCode 1\n        versionName \"1.0\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    compile 'com.android.support:appcompat-v7:22.0.0'\n}\n</code></pre>\n", "title": "resource error in android studio after update: No Resource Found", "answer_id": 32125027, "link": "http://stackoverflow.com/questions/32092511/resource-error-in-android-studio-after-update-no-resource-found/32125027#32125027", "tags": ["java", "android", "apache"]}, {"body": "<p>you should change your compiledsdkversion and targetversion to 23 in the build gradle file specific to the app.Make sure you installed sdk 23, version 6.0 before this.You can watch this vid for more help.<a href=\"https://www.youtube.com/watch?v=pw4jKsOU7go\" rel=\"nofollow\">https://www.youtube.com/watch?v=pw4jKsOU7go</a></p>\n", "title": "resource error in android studio after update: No Resource Found", "answer_id": 32154184, "link": "http://stackoverflow.com/questions/32092511/resource-error-in-android-studio-after-update-no-resource-found/32154184#32154184", "tags": ["java", "android", "apache"]}, {"body": "<p>I noticed I didn't have sdk 23 installed. So I first installed it then re-built my project. And it worked fine.\nAlso compilesdkVersion should be 23</p>\n", "title": "resource error in android studio after update: No Resource Found", "answer_id": 32192466, "link": "http://stackoverflow.com/questions/32092511/resource-error-in-android-studio-after-update-no-resource-found/32192466#32192466", "tags": ["java", "android", "apache"]}, {"body": "<p>First of all, </p>\n\n<p>Try to check your SDK folder, for me, it was mydocuments/appdata/sdk.... etc. So basically my sdk folder was not fully downloaded, the source of this problem mainly. You have to either use another fully downloaded android sdk(including Tools section and extras that you really need) or use the eclipse sdk that you may downloaded earlier for your Eclipse android developments. Then build->clean your project once again.</p>\n\n<p>Worth to try.</p>\n", "title": "resource error in android studio after update: No Resource Found", "answer_id": 32201537, "link": "http://stackoverflow.com/questions/32092511/resource-error-in-android-studio-after-update-no-resource-found/32201537#32201537", "tags": ["java", "android", "apache"]}, {"body": "<p>Attention, wrong answer coming! \nBut anyone without apache libraries or so might find </p>\n\n<pre><code>compileSdkVersion 23\nbuildToolsVersion \"23.0.0\"\n\n\n\n//...\n\n\ndependencies {\ncompile 'com.android.support:appcompat-v7:23.0.0'\ncompile 'com.android.support:design:23.0.0'    \n\n}\n</code></pre>\n\n<p>helpful, it did the trick for me.</p>\n", "title": "resource error in android studio after update: No Resource Found", "answer_id": 32215811, "link": "http://stackoverflow.com/questions/32092511/resource-error-in-android-studio-after-update-no-resource-found/32215811#32215811", "tags": ["java", "android", "apache"]}, {"body": "<p>if u are getting errors even after downloading newest SDK and Android Studio I am a newbie: What i did was 1. Download the recent SDK (i was ) 2.Open file-Project structure (ctrl+alt+shift+S) 3. In modules select app 4.In properties tab..change compile sdk version to api 23 Android 6.0 marshmallow(latest)</p>\n\n<p>make sure compile adk versionand buildtools are of same version(23)</p>\n\n<p>Hope it helps someone so that he wont suffer like i did for these couple of days.</p>\n", "title": "resource error in android studio after update: No Resource Found", "answer_id": 32317799, "link": "http://stackoverflow.com/questions/32092511/resource-error-in-android-studio-after-update-no-resource-found/32317799#32317799", "tags": ["java", "android", "apache"]}, {"body": "<p>compileSDK should match appCompat version.\nTargetSDK can still be 22 (e.g. in case you didn't update to the new permission model yet)</p>\n", "title": "resource error in android studio after update: No Resource Found", "answer_id": 32610036, "link": "http://stackoverflow.com/questions/32092511/resource-error-in-android-studio-after-update-no-resource-found/32610036#32610036", "tags": ["java", "android", "apache"]}, {"body": "<p>Upgrade to use API 23 (Android 6.0) or change back the appcompat-v7 to 22.2.2 version in Gradle. This work for me when add google play service</p>\n", "title": "resource error in android studio after update: No Resource Found", "answer_id": 33772468, "link": "http://stackoverflow.com/questions/32092511/resource-error-in-android-studio-after-update-no-resource-found/33772468#33772468", "tags": ["java", "android", "apache"]}, {"body": "<p>Try to match all version:</p>\n\n<pre><code>compileSdkVersion 23\nbuildToolsVersion '23.0.0'\ntargetSdkVersion 23\ncompile 'com.android.support:appcompat-v7:23.0.0'\n</code></pre>\n\n<p>It's work for me.</p>\n", "title": "resource error in android studio after update: No Resource Found", "answer_id": 34349635, "link": "http://stackoverflow.com/questions/32092511/resource-error-in-android-studio-after-update-no-resource-found/34349635#34349635", "tags": ["java", "android", "apache"]}, {"body": "<p>if you have :</p>\n\n<pre><code>/Users/james/Development/AndroidProjects/myapp/app/build/intermediates/exploded-aar/com.android.support/appcompat-v7/23.0.0/res/values-v23/values-v23.xml\nError:(2) Error retrieving parent for item: No resource found that matches the given name 'android:TextAppearance.Material.Widget.Button.Inverse'.\nError:(2) Error retrieving parent for item: No resource found that matches the given name 'android:Widget.Material.Button.Colored'.\n</code></pre>\n\n<p>error , you must change your <code>appcompat</code> , <code>buildtools</code> , <code>sdk</code> to <strong>23</strong>\nbut , if you don't like to change it and must be in <strong>22</strong>\ndo this :</p>\n\n<ul>\n<li>compile <em>23</em> </li>\n<li>target <em>22</em></li>\n</ul>\n", "title": "resource error in android studio after update: No Resource Found", "answer_id": 35013814, "link": "http://stackoverflow.com/questions/32092511/resource-error-in-android-studio-after-update-no-resource-found/35013814#35013814", "tags": ["java", "android", "apache"]}, {"body": "<p>Method 1:\nIt is showing.you did not install Api 23.\nSo please install API 23.</p>\n\n<p>Method 2:</p>\n\n<p>Change the appcompat version in your build.gradle file back to 22.0.1 (or less).</p>\n", "title": "resource error in android studio after update: No Resource Found", "answer_id": 38217803, "link": "http://stackoverflow.com/questions/32092511/resource-error-in-android-studio-after-update-no-resource-found/38217803#38217803", "tags": ["java", "android", "apache"]}], "question_id": 32092511}, {"body": "<p>In RxJava there are <a href=\"http://reactivex.io/RxJava/javadoc/rx/schedulers/Schedulers.html\">5 different schedulers</a> to choose from:</p>\n\n<blockquote>\n  <ol>\n  <li><p><strong>immediate()</strong>: Creates and returns a Scheduler that executes work immediately on the current thread.</p></li>\n  <li><p><strong>trampoline()</strong>: Creates and returns a Scheduler that queues work on the current thread to be executed after the current work completes.</p></li>\n  <li><p><strong>newThread()</strong>: Creates and returns a Scheduler that creates a new Thread for each unit of work.</p></li>\n  <li><p><strong>computation()</strong>: Creates and returns a Scheduler intended for computational work. This can be used for event-loops, processing callbacks and other computational work. Do not perform IO-bound work on this scheduler. Use Schedulers.<strong>io()</strong> instead.</p></li>\n  <li><p><strong>io()</strong>: Creates and returns a Scheduler intended for IO-bound work.\n  The implementation is backed by an Executor thread-pool that will grow as needed. This can be used for asynchronously performing blocking IO. Do not perform computational work on this scheduler. Use Schedulers.<strong>computation()</strong> instead.</p></li>\n  </ol>\n</blockquote>\n\n<h2>Questions:</h2>\n\n<p>The first 3 schedulers are pretty self explanatory; however, I'm a little confused about <strong>computation</strong> and <strong>io</strong>.</p>\n\n<ol>\n<li>What exactly is \"IO-bound work\"? Is it used for dealing with streams (<code>java.io</code>) and files (<code>java.nio.files</code>)? Is it used for database queries? Is it used for downloading files or accessing REST APIs?</li>\n<li>How is <strong>computation()</strong> different from <strong>newThread()</strong>? Is it that all <strong>computation()</strong> calls are on a single (background) thread instead of a new (background) thread each time?</li>\n<li>Why is it bad to call <strong>computation()</strong> when doing IO work?</li>\n<li>Why is it bad to call <strong>io()</strong> when doing computational work?</li>\n</ol>\n", "tags": ["java", "multithreading", "thread-safety", "rx-java", "rx-android"], "title": "rxJava Schedulers Use Cases", "answer_count": 1, "creation_date": 1436292403, "score": 85, "link": "http://stackoverflow.com/questions/31276164/rxjava-schedulers-use-cases", "answers": [{"body": "<p>Great questions, I think the documentation could do with some more detail.</p>\n\n<ol>\n<li><code>io()</code> is backed by an unbounded thread-pool and is the sort of thing you'd use for non-computationally intensive tasks, that is stuff that doesn't put much load on the CPU. So yep interaction with the file system, interaction with databases or services on a different host are good examples. </li>\n<li><code>computation()</code> is backed by a bounded thread-pool with size equal to the number of available processors. If you tried to schedule cpu intensive work in parallel across more than the available processors (say using <code>newThread()</code>) then you are up for thread creation overhead and context switching overhead as threads vie for a processor and it's potentially a big performance hit.</li>\n<li>It's best to leave <code>computation()</code> for CPU intensive work only otherwise you won't get good CPU utilization.</li>\n<li>It's bad to call <code>io()</code> for computational work for the reason discussed in 2. <code>io()</code> is unbounded and if you schedule a thousand computational tasks on <code>io()</code> in parallel then each of those thousand tasks will each have their own thread and be competing for CPU incurring context switching costs.</li>\n</ol>\n", "title": "rxJava Schedulers Use Cases", "answer_id": 31282775, "link": "http://stackoverflow.com/questions/31276164/rxjava-schedulers-use-cases/31282775#31282775", "tags": ["java", "multithreading", "thread-safety", "rx-java", "rx-android"]}], "question_id": 31276164}, {"body": "<p>Suppose we have the following classes:</p>\n\n<pre><code>class A {\n\n    void recursive(int i) {\n        System.out.println(\"A.recursive(\" + i + \")\");\n        if (i &gt; 0) {\n            recursive(i - 1);\n        }\n    }\n\n}\n\nclass B extends A {\n\n    void recursive(int i) {\n        System.out.println(\"B.recursive(\" + i + \")\");\n        super.recursive(i + 1);\n    }\n\n}\n</code></pre>\n\n<p>Now lets call <code>recursive</code> in class A:</p>\n\n<pre><code>public class Demo {\n\n    public static void main(String[] args) {\n        A a = new A();\n        a.recursive(10);\n    }\n\n}\n</code></pre>\n\n<p>The output is, as expected counting down from 10.   </p>\n\n<pre><code>A.recursive(10)\nA.recursive(9)\nA.recursive(8)\nA.recursive(7)\nA.recursive(6)\nA.recursive(5)\nA.recursive(4)\nA.recursive(3)\nA.recursive(2)\nA.recursive(1)\nA.recursive(0)\n</code></pre>\n\n<p>Let's get to the the confusing part. Now we call <code>recursive</code> in class B.</p>\n\n<p><strong>Expected</strong>:</p>\n\n<pre><code>B.recursive(10)\nA.recursive(11)\nA.recursive(10)\nA.recursive(9)\nA.recursive(8)\nA.recursive(7)\nA.recursive(6)\nA.recursive(5)\nA.recursive(4)\nA.recursive(3)\nA.recursive(2)\nA.recursive(1)\nA.recursive(0)\n</code></pre>\n\n<p><strong>Actual</strong>:</p>\n\n<pre><code>B.recursive(10)\nA.recursive(11)\nB.recursive(10)\nA.recursive(11)\nB.recursive(10)\nA.recursive(11)\nB.recursive(10)\n..infinite loop...\n</code></pre>\n\n<p>How does this happen? I know this is a devised example, but it makes me wonder.</p>\n\n<p>Older question with a <a href=\"https://stackoverflow.com/questions/10357029/java-inheritance-and-recursion\" title=\"Older question\">concrete use case</a>.</p>\n", "tags": ["java", "inheritance", "recursion"], "title": "Inheritance and recursion", "answer_count": 6, "creation_date": 1451484700, "score": 83, "link": "http://stackoverflow.com/questions/34531180/inheritance-and-recursion", "answers": [{"body": "<p><code>super.recursive(i + 1);</code> in class <code>B</code> calls the super class's method explicitly, so <code>recursive</code> of <code>A</code> is called once.</p>\n\n<p>Then, <code>recursive(i - 1);</code> in class A would call the <code>recursive</code> method in class <code>B</code> which overrides <code>recursive</code> of class <code>A</code>, since it is executed on an instance of class <code>B</code>.</p>\n\n<p>Then <code>B</code>'s <code>recursive</code> would call <code>A</code>'s <code>recursive</code> explicitly, and so on.</p>\n", "title": "Inheritance and recursion", "answer_id": 34531216, "link": "http://stackoverflow.com/questions/34531180/inheritance-and-recursion/34531216#34531216", "tags": ["java", "inheritance", "recursion"]}, {"body": "<p>Because <code>recursive(i - 1);</code> in <code>A</code> refers to <code>this.recursive(i - 1);</code> which is <code>B#recursive</code> in second case. So, <code>super</code> and <code>this</code> will be called in <em>recursive</em> function <em>alternatively</em>.</p>\n\n<pre><code>void recursive(int i) {\n    System.out.println(\"B.recursive(\" + i + \")\");\n    super.recursive(i + 1);//Method of A will be called\n}\n</code></pre>\n\n<p>in <code>A</code></p>\n\n<pre><code>void recursive(int i) {\n    System.out.println(\"A.recursive(\" + i + \")\");\n    if (i &gt; 0) {\n        this.recursive(i - 1);// call B#recursive\n    }\n}\n</code></pre>\n", "title": "Inheritance and recursion", "answer_id": 34531221, "link": "http://stackoverflow.com/questions/34531180/inheritance-and-recursion/34531221#34531221", "tags": ["java", "inheritance", "recursion"]}, {"body": "<p>This is expected. This is what happens for an instance of <code>B</code>.</p>\n\n<pre><code>class A {\n\n    void recursive(int i) { // &lt;-- 3. this gets called\n        System.out.println(\"A.recursive(\" + i + \")\");\n        if (i &gt; 0) {\n            recursive(i - 1); // &lt;-- 4. this calls the overriden \"recursive\" method in class B, going back to 1.\n        }\n    }\n\n}\n\nclass B extends A {\n\n    void recursive(int i) { // &lt;-- 1. this gets called\n        System.out.println(\"B.recursive(\" + i + \")\");\n        super.recursive(i + 1); // &lt;-- 2. this calls the \"recursive\" method of the parent class\n    }\n\n}\n</code></pre>\n\n<p>As such, the calls are alternating between <code>A</code> and <code>B</code>.</p>\n\n<p>This doesn't happen in the case of an instance of <code>A</code> because the overriden method won't be called.</p>\n", "title": "Inheritance and recursion", "answer_id": 34531229, "link": "http://stackoverflow.com/questions/34531180/inheritance-and-recursion/34531229#34531229", "tags": ["java", "inheritance", "recursion"]}, {"body": "<p>When a <code>B</code> instance's <code>recursive</code> method calls the <code>super</code>class implementation, the instance being acted on is still of <code>B</code>. Therefore when the super class's implementation calls <code>recursive</code> without further qualification, <em>that's the subclass implementation</em>. The result is the never-ending loop you're seeing. </p>\n", "title": "Inheritance and recursion", "answer_id": 34531234, "link": "http://stackoverflow.com/questions/34531180/inheritance-and-recursion/34531234#34531234", "tags": ["java", "inheritance", "recursion"]}, {"body": "<p>That actually cannot go any other way.</p>\n\n<p>When you call <code>B.recursive(10);</code>, then it prints <code>B.recursive(10)</code> then calls the implementation of this method in <code>A</code> with <code>i+1</code>. </p>\n\n<p>So you call <code>A.recursive(11)</code>, which prints <code>A.recursive(11)</code> which calls the <code>recursive(i-1);</code> method on the current instance which is <code>B</code> with input parameter <code>i-1</code>, so it calls <code>B.recursive(10)</code>, which then calls the super implementation with <code>i+1</code> which is <code>11</code>, which then recursively calls the current instance recursive with <code>i-1</code> which is <code>10</code>, and you'll get the loop that you see here.</p>\n\n<p>This is all because if you call the method of the instance in the superclass, you'll still call the implementation of the instance on which you're calling it.</p>\n\n<p>Imagine this,</p>\n\n<pre><code> public abstract class Animal {\n\n     public Animal() {\n         makeSound();\n     }\n\n     public abstract void makeSound();         \n }\n\n public class Dog extends Animal {\n     public Dog() {\n         super(); //implicitly called\n     }\n\n     @Override\n     public void makeSound() {\n         System.out.println(\"BARK\");\n     }\n }\n\n public class Main {\n     public static void main(String[] args) {\n         Dog dog = new Dog();\n     }\n }\n</code></pre>\n\n<p>You'll get \"BARK\" instead of a compilation error such as \"the abstract method cannot be called on this instance\" or a runtime error <code>AbstractMethodError</code> or even <code>pure virtual method call</code> or something like that. So this is all to support <a href=\"https://docs.oracle.com/javase/tutorial/java/IandI/polymorphism.html\">polymorphism</a>.</p>\n", "title": "Inheritance and recursion", "answer_id": 34531371, "link": "http://stackoverflow.com/questions/34531180/inheritance-and-recursion/34531371#34531371", "tags": ["java", "inheritance", "recursion"]}, {"body": "<p>The other answers have all explained the essential point, that once an instance method is overridden it stays overridden and there's no getting it back except through <code>super</code>. <code>B.recursive()</code> invokes <code>A.recursive()</code>. <code>A.recursive()</code> then invokes <code>recursive()</code>, which resolves to the override in <code>B</code>. And we ping pong back and forth until the end of the universe or a <code>StackOverflowError</code>, whichever comes first.</p>\n\n<p>It would be nice if one could write <code>this.recursive(i-1)</code> in <code>A</code> to get its own implementation, but that would probably break things and have other unfortunate consequences, so <code>this.recursive(i-1)</code> in <code>A</code> invokes <code>B.recursive()</code> and so forth.</p>\n\n<p>There is a way to get the expected behavior, but it requires foresight. In other words, you must know in advance that you want a <code>super.recursive()</code> in a subtype of <code>A</code> to get trapped, so to speak, in the <code>A</code> implementation. It is done like so:</p>\n\n<pre><code>class A {\n\n    void recursive(int i) {\n        doRecursive(i);\n    }\n\n    private void doRecursive(int i) {\n        System.out.println(\"A.recursive(\" + i + \")\");\n        if (i &gt; 0) {\n            doRecursive(i - 1);\n        }\n    }\n}\n\nclass B extends A {\n\n    void recursive(int i) {\n        System.out.println(\"B.recursive(\" + i + \")\");\n        super.recursive(i + 1);\n    }\n}\n</code></pre>\n\n<p>Since <code>A.recursive()</code> invokes <code>doRecursive()</code> and <code>doRecursive()</code> can never be overridden, <code>A</code> is assured that it is calling its own logic.</p>\n", "title": "Inheritance and recursion", "answer_id": 34531799, "link": "http://stackoverflow.com/questions/34531180/inheritance-and-recursion/34531799#34531799", "tags": ["java", "inheritance", "recursion"]}], "question_id": 34531180}, {"body": "<p>Java string pool coupled with reflection can produce some unimaginable result in Java:</p>\n\n<pre><code>import java.lang.reflect.Field;\n\nclass MessingWithString {\n    public static void main (String[] args) {\n        String str = \"Mario\";\n        toLuigi(str);\n        System.out.println(str + \" \" + \"Mario\");\n    }\n\n    public static void toLuigi(String original) {\n        try {\n            Field stringValue = String.class.getDeclaredField(\"value\");\n            stringValue.setAccessible(true);\n            stringValue.set(original, \"Luigi\".toCharArray());\n        } catch (Exception ex) {\n            // Ignore exceptions\n        }\n    }\n}\n</code></pre>\n\n<p>Above code will print:</p>\n\n<pre><code>\"Luigi Luigi\" \n</code></pre>\n\n<p>What happened to Mario?</p>\n", "tags": ["java", "string", "reflection", "string-pool"], "title": "How does this Java code snippet work? (String pool and reflection)", "answer_count": 7, "creation_date": 1442471383, "score": 82, "link": "http://stackoverflow.com/questions/32623834/how-does-this-java-code-snippet-work-string-pool-and-reflection", "answers": [{"body": "<blockquote>\n  <p>What happened to Mario ??</p>\n</blockquote>\n\n<p>You changed it, basically. Yes, with reflection you can violate the immutability of strings... and due to string interning, that means any use of \"Mario\" (other than in a larger string constant expression, which would have been resolved at compile-time) will end up as \"Luigi\" in the rest of the program.</p>\n\n<p>This kinds of thing is why reflection requires security permissions...</p>\n\n<p>Note that the expression <code>str + \" \" + \"Mario\"</code> does <em>not</em> perform any compile-time concatenation, due to the left-associativity of <code>+</code>. It's effectively <code>(str + \" \") + \"Mario\"</code>, which is why you still see <code>Luigi Luigi</code>. If you change the code to:</p>\n\n<pre><code>System.out.println(str + (\" \" + \"Mario\"));\n</code></pre>\n\n<p>... then you'll see <code>Luigi Mario</code> as the compiler will have interned <code>\" Mario\"</code> to a different string to <code>\"Mario\"</code>.</p>\n", "title": "How does this Java code snippet work? (String pool and reflection)", "answer_id": 32623895, "link": "http://stackoverflow.com/questions/32623834/how-does-this-java-code-snippet-work-string-pool-and-reflection/32623895#32623895", "tags": ["java", "string", "reflection", "string-pool"]}, {"body": "<p>It was set to Luigi. Strings in Java are immutable; thus, the compiler can interpret all mentions of <code>\"Mario\"</code> as references to the same String constant pool item (roughly, \"memory location\"). You used reflection to change that item; so all <code>\"Mario\"</code> in your code are now as if you wrote <code>\"Luigi\"</code>.</p>\n", "title": "How does this Java code snippet work? (String pool and reflection)", "answer_id": 32623908, "link": "http://stackoverflow.com/questions/32623834/how-does-this-java-code-snippet-work-string-pool-and-reflection/32623908#32623908", "tags": ["java", "string", "reflection", "string-pool"]}, {"body": "<p>String literals are stored in the string pool and their canonical value is used. Both <code>\"Mario\"</code> literals aren't just strings with the same value, they are <strong>the same object</strong>. Manipulating one of them (using reflection) will modify \"both\" of them, as they are just two references to the same object.</p>\n", "title": "How does this Java code snippet work? (String pool and reflection)", "answer_id": 32623911, "link": "http://stackoverflow.com/questions/32623834/how-does-this-java-code-snippet-work-string-pool-and-reflection/32623911#32623911", "tags": ["java", "string", "reflection", "string-pool"]}, {"body": "<p>To explain the existing answers a bit more, let's take a look at your generated byte code (Only the <code>main()</code> method here).</p>\n\n<p><a href=\"http://i.stack.imgur.com/dwTIi.jpg\"><img src=\"http://i.stack.imgur.com/dwTIi.jpg\" alt=\"Byte Code\"></a></p>\n\n<p>Now, any changes to the content's of that location will affect both the <strong>references</strong> (And any other you give too).</p>\n", "title": "How does this Java code snippet work? (String pool and reflection)", "answer_id": 32623994, "link": "http://stackoverflow.com/questions/32623834/how-does-this-java-code-snippet-work-string-pool-and-reflection/32623994#32623994", "tags": ["java", "string", "reflection", "string-pool"]}, {"body": "<p>You just changed the <code>String</code> of <strong><em>String constant pool</em></strong> <code>Mario</code> to <code>Luigi</code> which was referenced by multiple <code>String</code>s, so every referencing <em>literal</em> <code>Mario</code> is now <code>Luigi</code>.</p>\n\n<pre><code>Field stringValue = String.class.getDeclaredField(\"value\");\n</code></pre>\n\n<p>You have fetched the <code>char[]</code> named <code>value</code> field from class <code>String</code></p>\n\n<pre><code>stringValue.setAccessible(true);\n</code></pre>\n\n<p>Make it accessible.</p>\n\n<pre><code>stringValue.set(original, \"Luigi\".toCharArray());\n</code></pre>\n\n<p>You changed <code>original</code> <code>String</code>  field to <code>Luigi</code>. But original is <code>Mario</code> the <code>String</code> <em>literal</em> and literal belongs to the <code>String</code> pool and all are <em>interned</em>.  Which means all the literals which has same content refers to the same memory address.</p>\n\n<pre><code>String a = \"Mario\";//Created in String pool\nString b = \"Mario\";//Refers to the same Mario of String pool\na == b//TRUE\n//You changed 'a' to Luigi and 'b' don't know that\n//'a' has been internally changed and \n//'b' still refers to the same address.\n</code></pre>\n\n<p>Basically you have changed the Mario of <code>String</code> pool which got <em>reflected</em> in all the referencing fields. If you create <code>String</code> <code>Object</code> (i.e. <code>new String(\"Mario\")</code>) instead of literal you will not face this behavior because than you will have two different <code>Mario</code>s . </p>\n", "title": "How does this Java code snippet work? (String pool and reflection)", "answer_id": 32624143, "link": "http://stackoverflow.com/questions/32623834/how-does-this-java-code-snippet-work-string-pool-and-reflection/32624143#32624143", "tags": ["java", "string", "reflection", "string-pool"]}, {"body": "<p>The other answers adequately explain what's going on. I just wanted to add the point that this only works if there is no <a href=\"https://docs.oracle.com/javase/tutorial/essential/environment/security.html\">security manager</a> installed. When running code from the command line by default there is not, and you can do things like this. However in an environment where trusted code is mixed with untrusted code, such as an application server in a production environment or an applet sandbox in a browser, there would typically be a security manager present and you would not be allowed these kinds of shenanigans, so this is less of a terrible security hole as it seems.</p>\n", "title": "How does this Java code snippet work? (String pool and reflection)", "answer_id": 32628210, "link": "http://stackoverflow.com/questions/32623834/how-does-this-java-code-snippet-work-string-pool-and-reflection/32628210#32628210", "tags": ["java", "string", "reflection", "string-pool"]}, {"body": "<p>Another related point: you can make use of the constant pool to improve the performance of string comparisons in some circumstances, by using the <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#intern--\" rel=\"nofollow\"><code>String.intern()</code></a> method.</p>\n\n<p>That method returns the instance of String with the same contents as the String on which it is invoked from the String constants pool, adding it it if is not yet present. In other words, after using <code>intern()</code>, all Strings with the same contents are guaranteed to be the same String instance as each other and as any String constants with those contents, meaning you can then use the equals operator (<code>==</code>) on them.</p>\n\n<p>This is just an example which is not very useful on its own, but it illustrates the point:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>class Key {\n    Key(String keyComponent) {\n        this.keyComponent = keyComponent.intern();\n    }\n\n    public boolean equals(Object o) {\n        // String comparison using the equals operator allowed due to the\n        // intern() in the constructor, which guarantees that all values\n        // of keyComponent with the same content will refer to the same\n        // instance of String:\n        return (o instanceof Key) &amp;&amp; (keyComponent == ((Key) o).keyComponent);\n    }\n\n    public int hashCode() {\n        return keyComponent.hashCode();\n    }\n\n    boolean isSpecialCase() {\n        // String comparison using equals operator valid due to use of\n        // intern() in constructor, which guarantees that any keyComponent\n        // with the same contents as the SPECIAL_CASE constant will\n        // refer to the same instance of String:\n        return keyComponent == SPECIAL_CASE;\n    }\n\n    private final String keyComponent;\n\n    private static final String SPECIAL_CASE = \"SpecialCase\";\n}\n</code></pre>\n\n<p>This little trick isn't worth designing your code around, but it is worth keeping in mind for the day when you notice a little more speed could be eked out of some bit of performance sensitive code by using the <code>==</code> operator on a string with judicious use of <code>intern()</code>.</p>\n", "title": "How does this Java code snippet work? (String pool and reflection)", "answer_id": 32652449, "link": "http://stackoverflow.com/questions/32623834/how-does-this-java-code-snippet-work-string-pool-and-reflection/32652449#32652449", "tags": ["java", "string", "reflection", "string-pool"]}], "question_id": 32623834}, {"body": "<p>I would like to know regarding following behavior of <code>instanceof</code> operator in Java.</p>\n\n<pre><code>interface C {}\n\nclass B {}\n\npublic class A {\n    public static void main(String args[]) {\n        B obj = new B();\n        System.out.println(obj instanceof A);      //Gives compiler error\n        System.out.println(obj instanceof C);      //Gives false as output\n    }\n}\n</code></pre>\n\n<p>Why is it so? There is no relation between <code>interface C</code> and <code>class B</code>, but it gives false whereas in case of <code>obj instanceof A</code> it gives compiler error?</p>\n", "tags": ["java", "class", "inheritance", "interface", "instanceof"], "title": "The &#39;instanceof&#39; operator behaves differently for interfaces and classes", "answer_count": 1, "creation_date": 1436852384, "score": 82, "link": "http://stackoverflow.com/questions/31398444/the-instanceof-operator-behaves-differently-for-interfaces-and-classes", "answers": [{"body": "<p>Because Java has no multiple class inheritance it's absolutely known during the compilation that <code>obj</code> object of type <code>B</code> cannot be subtype of <code>A</code>. On the other hand it possibly can be subtype of interface <code>C</code>, for example in this case:</p>\n\n<pre><code>interface C {}\n\nclass B {}\n\nclass D extends B implements C {}\n\npublic class A {\n    public static void main(String args[]) {\n        B obj = new D();\n        System.out.println(obj instanceof C);      //compiles and gives true as output  \n    }\n}\n</code></pre>\n\n<p>So looking only at <code>obj instanceof C</code> expression compiler cannot tell in advance whether it will be true or false, but looking at <code>obj instanceof A</code> it knows that this is always false, thus meaningless and helps you to prevent an error. If you still want to have this meaningless check in your program, you can add an explicit casting to the <code>Object</code>:</p>\n\n<pre><code>System.out.println(((Object)obj) instanceof A);      //compiles fine\n</code></pre>\n", "title": "The &#39;instanceof&#39; operator behaves differently for interfaces and classes", "answer_id": 31398577, "link": "http://stackoverflow.com/questions/31398444/the-instanceof-operator-behaves-differently-for-interfaces-and-classes/31398577#31398577", "tags": ["java", "class", "inheritance", "interface", "instanceof"]}], "question_id": 31398444}, {"body": "<p>I was testing boundary conditions on some code involving a <code>BigDecimal</code>, and I noticed that when a <code>BigDecimal</code> is initialized with the String <code>\"1e2147483647\"</code> it behaves unexpectedly. It seems to have a value between <code>0</code> and <code>1e-2147483647</code>. When I try calling <code>intValue()</code>, I get a <code>NegativeArraySizeException</code>. I should note that <code>2147483647</code> is the max value of an integer on my system. Am I doing something wrong, or is this a problem with <code>BigDecimal</code>?</p>\n\n<pre><code>BigDecimal test = new BigDecimal(\"1e2147483647\");\n\ntest.compareTo(new BigDecimal(0));  //Returns 1\ntest.compareTo(new BigDecimal(\"1e-2147483647\"));  //Returns -1\ntest.intValue();  //Throws NegativeArraySizeException\n</code></pre>\n", "tags": ["java", "bigdecimal"], "title": "Java BigDecimal Possible Overflow Bug", "answer_count": 1, "creation_date": 1435780399, "score": 79, "link": "http://stackoverflow.com/questions/31170459/java-bigdecimal-possible-overflow-bug", "answers": [{"body": "<p>No, you appear to have a legit bug. The bug presents in JDK7 but fixed in JDK8. Your values are correctly representable as <code>BigDecimal</code>s, and should behave correctly, but don't.</p>\n\n<p>Tracing through <a href=\"http://www.docjar.com/html/api/java/math/BigDecimal.java.html#2571\">the source code of <code>BigDecimal</code></a>, on line 2585, <code>this.precision()</code> is 1, and <code>this.scale</code> is <code>-2147483647</code>.  <code>this.precision() - this.scale</code> therefore overflows, and the following overflow is not handled correctly.</p>\n\n<p>This bug <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/rev/216a4b93cee8\">has been fixed</a> in JDK8 by <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/math/BigDecimal.java#BigDecimal.compareMagnitude%28java.math.BigDecimal%29\">doing the subtraction in <code>long</code> arithmetic</a>.</p>\n", "title": "Java BigDecimal Possible Overflow Bug", "answer_id": 31170506, "link": "http://stackoverflow.com/questions/31170459/java-bigdecimal-possible-overflow-bug/31170506#31170506", "tags": ["java", "bigdecimal"]}], "question_id": 31170459}, {"body": "<p>Consider the following code:</p>\n\n<pre><code>public Object getClone(Cloneable a) throws TotallyFooException {\n\n    if (a == null) {\n        throw new TotallyFooException();\n    }\n    else {\n        try {\n            return a.clone();\n        } catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    //cant be reached, in for syntax\n    return null;\n\n}\n</code></pre>\n\n<p>The <code>return null;</code> is necessary since an exception may be caught, however in such a case since we already checked if it was null (and lets assume we know the class we are calling supports cloning) so we know the try statement will never fail.</p>\n\n<p>Is it bad practice to put in the extra return statement at the end just to satisfy the syntax and avoid compile errors (with a comment explaining it will not be reached), or is there a better way to code something like this so that the extra return statement is unnecessary?</p>\n", "tags": ["java", "return", "try-catch"], "title": "Is having a return statement just to satisfy syntax bad practice?", "answer_count": 13, "creation_date": 1447937155, "score": 75, "link": "http://stackoverflow.com/questions/33804394/is-having-a-return-statement-just-to-satisfy-syntax-bad-practice", "answers": [{"body": "<p>It definitely can be reached. Note that you're only printing the stacktrace in the <code>catch</code> clause.</p>\n\n<p>In the scenario where <code>a != null</code> and there <em>will</em> be an exception, the <code>return null</code> <strong>will</strong> be reached. You can remove that statement and replace it with <code>throw new TotallyFooException();</code>.</p>\n\n<p>In general<sup>*</sup>, if <code>null</code> is a <strong>valid</strong> result of a method (i.e. the user <em>expects</em> it and it means something) then returning it as a signal for \"data not found\" or exception happened is <strong>not</strong> a good idea. Otherwise, I don't see any problem why you shouldn't return <code>null</code>.</p>\n\n<p>Take for example the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/Scanner.html#ioException--\" rel=\"nofollow\"><code>Scanner#ioException</code></a> method:</p>\n\n<blockquote>\n  <p>Returns the <code>IOException</code> last thrown by this Scanner's underlying Readable. This method <em>returns</em> <strong>null</strong> <em>if no such exception exists</em>.</p>\n</blockquote>\n\n<p>In this case, the returned value <code>null</code> has a clear meaning, when I use the method I can be sure that I got <code>null</code> only because there was no such exception and not because the method tried to do something and it failed.</p>\n\n<p><sup>*</sup>Note that sometimes you do want to return <code>null</code> even when the meaning is ambiguous. For example the <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html#get-java.lang.Object-\" rel=\"nofollow\"><code>HashMap#get</code></a>:</p>\n\n<blockquote>\n  <p>A return value of <strong>null</strong> <em>does not necessarily indicate that the map contains no mapping for the key; it's also possible that the map explicitly maps the key to</em> <strong>null</strong>. The <code>containsKey</code> operation may be used to distinguish these two cases.</p>\n</blockquote>\n\n<p>In this case <code>null</code> can indicate that the <em>value</em> <code>null</code> was found and returned, or that the hashmap doesn't contain the requested key.</p>\n", "title": "Is having a return statement just to satisfy syntax bad practice?", "answer_id": 33804443, "link": "http://stackoverflow.com/questions/33804394/is-having-a-return-statement-just-to-satisfy-syntax-bad-practice/33804443#33804443", "tags": ["java", "return", "try-catch"]}, {"body": "<p>A clearer way without an extra return statement is as follows. I wouldn't catch <code>CloneNotSupportedException</code> either, but let it go to the caller.</p>\n\n<pre><code>if (a != null) {\n    try {\n        return a.clone();\n    } catch (CloneNotSupportedException e) {\n        e.printStackTrace();\n    }\n}\nthrow new TotallyFooException();\n</code></pre>\n\n<p>It's almost always possible to fiddle with the order to end up with a more straight-forward syntax than what you initially have.</p>\n", "title": "Is having a return statement just to satisfy syntax bad practice?", "answer_id": 33804455, "link": "http://stackoverflow.com/questions/33804394/is-having-a-return-statement-just-to-satisfy-syntax-bad-practice/33804455#33804455", "tags": ["java", "return", "try-catch"]}, {"body": "<p>I would prefer to use <code>Objects.requireNonNull()</code> to check if the Parameter a is not null. So it's clear when you read the code that the parameter should not be null.</p>\n\n<p>And to avoid checked Exceptions I would re throw the <code>CloneNotSupportedException</code> as a <code>RuntimeException</code>.</p>\n\n<p>For both you could add nice text with the intention why this shouldn't happen or be the case.</p>\n\n<pre><code>public Object getClone(Object a) {\n\n    Objects.requireNonNull(a);\n\n    try {\n        return a.clone();\n    } catch (CloneNotSupportedException e) {\n        throw new IllegalArgumentException(e);\n    }\n\n}\n</code></pre>\n", "title": "Is having a return statement just to satisfy syntax bad practice?", "answer_id": 33804631, "link": "http://stackoverflow.com/questions/33804394/is-having-a-return-statement-just-to-satisfy-syntax-bad-practice/33804631#33804631", "tags": ["java", "return", "try-catch"]}, {"body": "<p>Your example is not ideal to illustrate your question as stated in the last paragraph:</p>\n\n<blockquote>\n  <p>Is it bad practice to put in the extra return statement at the end\n  just to satisfy the syntax and avoid compile errors (with a comment\n  explaining it will not be reached), or is there a better way to code\n  something like this so that the extra return statement is unnecessary?</p>\n</blockquote>\n\n<p>A better example would be the implementation of clone itself:</p>\n\n<pre><code> public class A implements Cloneable {\n      public Object clone() {\n           try {\n               return super.clone() ;\n           } catch (CloneNotSupportedException e) {\n               throw new InternalError(e) ; // vm bug.\n           }\n      }\n }\n</code></pre>\n\n<p>Here the catch clause should <em>never</em> be entered. Still the syntax either requires to throw something or return a value. Since returning something does not make sense, an <code>InternalError</code> is used to indicate a severe VM condition.</p>\n", "title": "Is having a return statement just to satisfy syntax bad practice?", "answer_id": 33804635, "link": "http://stackoverflow.com/questions/33804394/is-having-a-return-statement-just-to-satisfy-syntax-bad-practice/33804635#33804635", "tags": ["java", "return", "try-catch"]}, {"body": "<blockquote>\n  <p>Is it bad practice to put in the extra return statement at the end just to satisfy the syntax and avoid compile errors (with a comment explaining it will not be reached)</p>\n</blockquote>\n\n<p>I think <code>return null</code> is bad practice for the terminus of an unreachable branch. It is better to throw a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/RuntimeException.html\"><code>RuntimeException</code></a> (<a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/AssertionError.html\"><code>AssertionError</code></a> would also be acceptable) as to get to that line something has gone very wrong and the application is in an unknown state. \nMost like this is (like above) because the developer has missed something (Objects can be none-null and un-cloneable). </p>\n\n<p>I'd likely not use <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/InternalError.html\"><code>InternalError</code></a> unless I'm very very sure that the code is unreachable (for example after a <code>System.exit()</code>) as it is more likely that I make a mistake than the VM.</p>\n\n<p>I'd only use a custom exception (such as <code>TotallyFooException</code>) if getting to that \"unreachable line\" means the same thing as anywhere else you throw that exception.</p>\n", "title": "Is having a return statement just to satisfy syntax bad practice?", "answer_id": 33804785, "link": "http://stackoverflow.com/questions/33804394/is-having-a-return-statement-just-to-satisfy-syntax-bad-practice/33804785#33804785", "tags": ["java", "return", "try-catch"]}, {"body": "<blockquote>\n  <p>Is having a return statement just to satisfy syntax bad practice?</p>\n</blockquote>\n\n<p>As others have mentioned, in your case this does not actually apply.</p>\n\n<p>To answer the question, though, Lint type programs sure haven't figured it out!  I have seen two different ones fight it out over this in a switch statement.</p>\n\n<pre><code>    switch (var)\n   {\n     case A:\n       break;\n     default:\n       return;\n       break;    // Unreachable code.  Coding standard violation?\n   }\n</code></pre>\n\n<p>One complained that <strong>not</strong> having the break was a coding standard violation.  The other complained that <strong>having</strong> it was one because it was unreachable code.</p>\n\n<p>I noticed this because two different programmers kept re-checking the code in with the break added then removed then added then removed, depending on which code analyzer they ran that day.</p>\n\n<p>If you end up in this situation, pick one and comment the anomaly, which is the good form you showed yourself.  That's the best and most important takeaway.</p>\n", "title": "Is having a return statement just to satisfy syntax bad practice?", "answer_id": 33808517, "link": "http://stackoverflow.com/questions/33804394/is-having-a-return-statement-just-to-satisfy-syntax-bad-practice/33808517#33808517", "tags": ["java", "return", "try-catch"]}, {"body": "<p>In this sort of situation I would write</p>\n\n<pre><code>public Object getClone(SomeInterface a) throws TotallyFooException {\n    // Precondition: \"a\" should be null or should have a someMethod method that\n    // does not throw a SomeException.\n    if (a == null) {\n        throw new TotallyFooException() ; }\n    else {\n        try {\n            return a.someMethod(); }\n        catch (SomeException e) {\n            throw new IllegalArgumentException(e) ; } }\n}\n</code></pre>\n\n<p>Interestingly you say that the \"try statement will never fail\", but you still took the trouble to write a statement <code>e.printStackTrace();</code> that you claim will never be executed.  Why?</p>\n\n<p>Perhaps your belief is not that firmly held.  That is good (in my opinion), since your belief is not based on the code you wrote, but rather on the expectation that your client will not violate the precondition.  Better to program public methods defensively. </p>\n\n<p>By the way, your code won't compile for me.  You can't call <code>a.clone()</code> even if the type of <code>a</code> is <code>Cloneable</code>.  At least Eclipse's compiler says so. Expression <code>a.clone()</code> gives error</p>\n\n<blockquote>\n  <p>The method clone() is undefined for the type Cloneable</p>\n</blockquote>\n\n<p>What I would do for your specific case is</p>\n\n<pre><code>public Object getClone(PubliclyCloneable a) throws TotallyFooException {\n    if (a == null) {\n        throw new TotallyFooException(); }\n    else {\n        return a.clone(); }\n}\n</code></pre>\n\n<p>Where <code>PubliclyCloneable</code> is defined by</p>\n\n<pre><code>interface PubliclyCloneable {\n    public Object clone() ;\n}\n</code></pre>\n\n<p>Or, if you absolutely need the parameter type to be <code>Cloneable</code>, the following at least compiles.</p>\n\n<pre><code>public static Object getClone(Cloneable a) throws TotallyFooException {\n//  Precondition: \"a\" should be null or point to an object that can be cloned without\n// throwing any checked exception.\n    if (a == null) {\n        throw new TotallyFooException(); }\n    else {\n        try {\n            return a.getClass().getMethod(\"clone\").invoke(a) ; }\n        catch( IllegalAccessException e ) {\n            throw new AssertionError(null, e) ; }\n        catch( InvocationTargetException e ) {\n            Throwable t = e.getTargetException() ;\n            if( t instanceof Error ) {\n                // Unchecked exceptions are bubbled\n                throw (Error) t ; }\n            else if( t instanceof RuntimeException ) {\n                // Unchecked exceptions are bubbled\n                throw (RuntimeException) t ; }\n            else {\n                // Checked exceptions indicate a precondition violation.\n                throw new IllegalArgumentException(t) ; } }\n        catch( NoSuchMethodException e ) {\n            throw new AssertionError(null, e) ; } }\n}\n</code></pre>\n", "title": "Is having a return statement just to satisfy syntax bad practice?", "answer_id": 33814549, "link": "http://stackoverflow.com/questions/33804394/is-having-a-return-statement-just-to-satisfy-syntax-bad-practice/33814549#33814549", "tags": ["java", "return", "try-catch"]}, {"body": "<p>It isn't 'just to satisfy syntax'. It is a semantic requirement of the language that every code path leads to a return or a throw. This code doesn't comply. If the exception is caught a following return is required.</p>\n\n<p>No 'bad practice' about it, or about satisfying the compiler in general.</p>\n\n<p>In any case, whether syntax or semantic, you don't have any choice about it.</p>\n", "title": "Is having a return statement just to satisfy syntax bad practice?", "answer_id": 33815439, "link": "http://stackoverflow.com/questions/33804394/is-having-a-return-statement-just-to-satisfy-syntax-bad-practice/33815439#33815439", "tags": ["java", "return", "try-catch"]}, {"body": "<p>You caught the <code>CloneNotSupportedException</code> which means your code can handle it. But after you catch it, you have literally no idea what to do when you reach the end of the function, which implies that you couldn't handle it. So you're right that it is a code smell in this case, and in my view means you should not have caught <code>CloneNotSupportedException</code>.</p>\n", "title": "Is having a return statement just to satisfy syntax bad practice?", "answer_id": 33816922, "link": "http://stackoverflow.com/questions/33804394/is-having-a-return-statement-just-to-satisfy-syntax-bad-practice/33816922#33816922", "tags": ["java", "return", "try-catch"]}, {"body": "<p>I would rewrite this to have the return at the end. Pseudocode:</p>\n\n<pre><code>if a == null throw ...\n// else not needed, if this is reached, a is not null\nObject b\ntry {\n  b = a.clone\n}\ncatch ...\n\nreturn b\n</code></pre>\n", "title": "Is having a return statement just to satisfy syntax bad practice?", "answer_id": 33820427, "link": "http://stackoverflow.com/questions/33804394/is-having-a-return-statement-just-to-satisfy-syntax-bad-practice/33820427#33820427", "tags": ["java", "return", "try-catch"]}, {"body": "<p>No one mentioned this yet so here goes:</p>\n\n<pre><code>public static final Object ERROR_OBJECT = ...\n\n//...\n\npublic Object getClone(Cloneable a) throws TotallyFooException {\nObject ret;\n\nif (a == null) \n    throw new TotallyFooException();\n\n//no need for else here\ntry {\n    ret = a.clone();\n} catch (CloneNotSupportedException e) {\n    e.printStackTrace();\n    //something went wrong! ERROR_OBJECT could also be null\n    ret = ERROR_OBJECT; \n}\n\nreturn ret;\n\n}\n</code></pre>\n\n<p>I dislike <code>return</code> inside <code>try</code> blocks for that very reason.</p>\n", "title": "Is having a return statement just to satisfy syntax bad practice?", "answer_id": 33838690, "link": "http://stackoverflow.com/questions/33804394/is-having-a-return-statement-just-to-satisfy-syntax-bad-practice/33838690#33838690", "tags": ["java", "return", "try-catch"]}, {"body": "<p>The examples above are valid and very Java.  However, here's how I would address the OP's question on how to handle that return:</p>\n\n<pre><code>public Object getClone(Cloneable a) throws CloneNotSupportedException {\n    return a.clone();\n}\n</code></pre>\n\n<p>There's no benefit for checking <code>a</code> to see if it is null. It's going to NPE.  Printing a stack trace is also not helpful. The stack trace is the same regardless of where it is handled.</p>\n\n<p>There is no benefit to junking up the code with unhelpful null tests and unhelpful exception handling. By removing the junk, the return issue is moot.</p>\n\n<p>(Note that the OP included a bug in the exception handling; this is why the return was needed.  The OP would not have gotten wrong the method I propose.)</p>\n", "title": "Is having a return statement just to satisfy syntax bad practice?", "answer_id": 33844668, "link": "http://stackoverflow.com/questions/33804394/is-having-a-return-statement-just-to-satisfy-syntax-bad-practice/33844668#33844668", "tags": ["java", "return", "try-catch"]}, {"body": "<blockquote>\n  <p>The return null; is necessary since an exception may be caught,\n  however in such a case since we already checked if it was null (and\n  lets assume we know the class we are calling supports cloning) so we\n  know the try statement will never fail.</p>\n</blockquote>\n\n<p>If you know details about the inputs involved in a way where you know the <code>try</code> statement can never fail, what is the point of having it? Avoid the <code>try</code> if you know for sure things are always going to succeed (though it is rare that you can be absolutely sure for the whole lifetime of your codebase).</p>\n\n<p>In any case, the compiler unfortunately isn't a mind reader. It sees the function and its inputs, and given the information it has, it needs that <code>return</code> statement at the bottom as you have it.</p>\n\n<blockquote>\n  <p>Is it bad practice to put in the extra return statement at the end\n  just to satisfy the syntax and avoid compile errors (with a comment\n  explaining it will not be reached), or is there a better way to code\n  something like this so that the extra return statement is unnecessary?</p>\n</blockquote>\n\n<p>Quite the opposite, I'd suggest it's good practice to avoid any compiler warnings, e.g., even if that costs another line of code. Don't worry too much about line count here. Establish the reliability of the function through testing and then move on. Just pretending you could omit the <code>return</code> statement, imagine coming back to that code a year later and then try to decide if that <code>return</code> statement at the bottom is going to cause more confusion than some comment detailing the minutia of why it was omitted because of assumptions you can make about the input parameters. Most likely the <code>return</code> statement is going to be easier to deal with.</p>\n\n<p>That said, specifically about this part:</p>\n\n<pre><code>try {\n    return a.clone();\n} catch (CloneNotSupportedException e) {\n   e.printStackTrace();\n}\n...\n//cant be reached, in for syntax\nreturn null;\n</code></pre>\n\n<p>I think there's something slightly odd with the exception-handling mindset here. You generally want to swallow exceptions at a site where you have something meaningful you can do in response.</p>\n\n<p>You can think of <code>try/catch</code> as a transaction mechanism. <code>try</code> making these changes, if they fail and we branch into the <code>catch</code> block, do this (whatever is in the <code>catch</code> block) in response as part of the rollback and recovery process.</p>\n\n<p>In this case, merely printing a stacktrace and then being forced to return null isn't exactly a transaction/recovery mindset. The code transfers the error-handling responsibility to all the code calling <code>getClone</code> to manually check for failures. You might prefer to catch the <code>CloneNotSupportedException</code> and translate it into another, more meaningful form of exception and throw that, but you don't want to simply swallow the exception and return a null in this case since this is not like a transaction-recovery site.</p>\n\n<p>You'll end up leaking the responsibilities to the callers to manually check and deal with failure that way, when throwing an exception would avoid this.</p>\n\n<p>It's like if you load a file, that's the high-level transaction. You might have a <code>try/catch</code> there. During the process of <code>trying</code> to load a file, you might clone objects. If there's a failure anywhere in this high-level operation (loading the file), you typically want to throw exceptions all the way back to this top-level transaction <code>try/catch</code> block so that you can gracefully recover from a failure in loading a file (whether it's due to an error in cloning or anything else). So we generally don't want to just swallow up an exception in some granular place like this and then return a null, e.g., since that would defeat a lot of the value and purpose of exceptions. Instead we want to propagate exceptions all the way back to a site where we can meaningfully deal with it.</p>\n", "title": "Is having a return statement just to satisfy syntax bad practice?", "answer_id": 33862158, "link": "http://stackoverflow.com/questions/33804394/is-having-a-return-statement-just-to-satisfy-syntax-bad-practice/33862158#33862158", "tags": ["java", "return", "try-catch"]}], "question_id": 33804394}, {"body": "<p>Is there a good reason that the <a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#list(java.util.Enumeration)\">Collections.list()</a> method in the <code>java.utils</code> package returns an <code>ArrayList&lt;T&gt;</code> instead of <code>List&lt;T&gt;</code>?</p>\n\n<p>Obviously an <code>ArrayList</code> is a <code>List</code>, but I'm under the impression that it's generally good practice to return the interface type instead of implementation type.</p>\n", "tags": ["java", "arraylist", "collections", "return-type", "utils"], "title": "Why does Enumeration get converted to ArrayList and not List in java.utils?", "answer_count": 4, "creation_date": 1441206348, "score": 73, "link": "http://stackoverflow.com/questions/32356762/why-does-enumeration-get-converted-to-arraylist-and-not-list-in-java-utils", "answers": [{"body": "<p>When returning <code>List</code>, you'll be promoting <em>program to an interface</em>, which is a very good practice. However, this approach has its limitation. For example, you cannot use some methods that are defined for <code>ArrayList</code> and don't exist in the <code>List</code> interface - See <a href=\"http://stackoverflow.com/questions/10328658/should-i-return-list-or-arraylist\">this answer</a> for details.</p>\n\n<p>I'm quoting the <a href=\"https://docs.oracle.com/javase/tutorial/collections/interoperability/api-design.html\">API Design</a> from the The Java\u2122 Tutorials:</p>\n\n<blockquote>\n  <p>... It's fine to return an object of <strong>any type</strong> that <em>implements</em> or <em>extends</em> one of the collection interfaces. This can be one of the interfaces or a special-purpose type that extends or implements one of these interfaces.</p>\n  \n  <p>.. In one sense, return values should have the opposite behavior of input parameters: It's <em>best</em> to return the <em>most specific applicable collection interface rather than the most general</em>. For example, if you're sure that you'll always return a <code>SortedMap</code>, you should give the relevant method the return type of <code>SortedMap</code> rather than <code>Map</code>. <code>SortedMap</code> instances are more time-consuming to build than ordinary <code>Map</code> instances and are also more powerful. Given that your module has already invested the time to build a <code>SortedMap</code>, it makes good sense to give the user access to its increased power. Furthermore, the user will be able to pass the returned object to methods that demand a <code>SortedMap</code>, as well as those that accept any <code>Map</code>.</p>\n</blockquote>\n\n<p>Since <code>ArrayList</code> is essentially an array, they are my first choice when I need to have a \"collection-array\". So if I want to convert enumeration to a list, my choice would be an array list.</p>\n\n<p>In any other cases, it's still valid to write:</p>\n\n<pre><code>List&lt;T&gt; list = Collections.list(e);\n</code></pre>\n", "title": "Why does Enumeration get converted to ArrayList and not List in java.utils?", "answer_id": 32357142, "link": "http://stackoverflow.com/questions/32356762/why-does-enumeration-get-converted-to-arraylist-and-not-list-in-java-utils/32357142#32357142", "tags": ["java", "arraylist", "collections", "return-type", "utils"]}, {"body": "<p><strong>Disclaimer: I am not a JDK author.</strong></p>\n\n<p>I agree that it's correct to write your <em>own code</em> to interfaces, but if you're going return a <strong>mutable</strong> collection to a third party, it's important to let the third party know what sort of <code>List</code> they're getting back.</p>\n\n<p><code>LinkedList</code> and <code>ArrayList</code> are very different, performance wise, for various operations. For example, removing the first element of an <code>ArrayList</code> is <code>O(n)</code>, but removing the first element of a <code>LinkedList</code> is <code>O(1)</code>.</p>\n\n<p>By fully specifying the return type, the JDK authors are <strong>communicating extra information</strong>, in unambiguous code, about what sort of object they're giving back to you, so you can write your code to use this method properly. If you really need a <code>LinkedList</code>, you know that you have to specify one here.</p>\n\n<p>Finally, the main reason to code to an interface over an implementation is if you think that the implementation will change. The JDK authors probably figure they are <em>never</em> going to change this method; it's never going to return a <code>LinkedList</code> or a <code>Collections.UnmodifiableList</code>. However, in most cases, you would probably still do:</p>\n\n<pre><code>List&lt;T&gt; list = Collections.list(enumeration);\n</code></pre>\n", "title": "Why does Enumeration get converted to ArrayList and not List in java.utils?", "answer_id": 32357149, "link": "http://stackoverflow.com/questions/32356762/why-does-enumeration-get-converted-to-arraylist-and-not-list-in-java-utils/32357149#32357149", "tags": ["java", "arraylist", "collections", "return-type", "utils"]}, {"body": "<p>Functions which return \"exclusive ownership\" of newly-created mutable objects should often be the most specific type practical; those which return immutable objects, especially if they might be shared, should often return less-specific types.</p>\n\n<p>The reason for the distinction is that in the former case, an object will always be able to produce a new object of the indicated type, and since the recipient will own the object and there's no telling what actions the recipient might wish to perform, there would generally be no way for the code returning the object to know whether any alternative interface implementations could meet the recipient's needs.</p>\n\n<p>In the latter case, the fact that the object is immutable means that the function may be able to identify an alternative type which can do everything a more complicated type could do <em>given its exact content</em>.  For example, an <code>Immutable2dMatrix</code> interface might be implemented by an <code>ImmutableArrayBacked2dMatrix</code> class and an <code>ImmutableDiagonal2dMatrix</code> class.  A function which is supposed to return a square <code>Immutable2dMatrix</code> could decide to return a <code>ImmutableDiagonalMatrix</code> instance if all the elements off the main diagonal happen to be zero, or an <code>ImmutableArrayBackedMatrix</code> if not.  The former type would take a lot less storage space, but the recipient shouldn't care about the difference between them.</p>\n\n<p>Returning <code>Immutable2dMatrix</code> rather than a concrete <code>ImmutableArrayBackedMatrix</code> allows code to choose the return type based upon what the array contains; it also means that if the code which is supposed to return the array happens to be holding a suitable implementation of <code>Immutable2dMatrix</code> it can simply return that, rather than having to construct a new instance.  Both of these factors can be major \"wins\" when working with immutable objects.</p>\n\n<p>When working with mutable objects, however, neither factor comes into play.  The fact that a mutable array might not have any elements off the main diagonal when it's generated doesn't mean it will never have any such elements.  Consequently, while an <code>ImmutableDiagonalMatrix</code> is effectively a subtype of an <code>Immutable2dMatrix</code>, a <code>MutableDiagonalMatrix</code> is not a subtype of a <code>Mutable2dMatrix</code>, since the latter could accept stores off the main diagonal while the former cannot.  Further, while immutable objects often can and should be shared, mutable objects generally cannot.  A function which is asked for a new mutable collection initialized with certain content will need to a create a new collection whether or not its backing store matches the type being requested.</p>\n", "title": "Why does Enumeration get converted to ArrayList and not List in java.utils?", "answer_id": 32360905, "link": "http://stackoverflow.com/questions/32356762/why-does-enumeration-get-converted-to-arraylist-and-not-list-in-java-utils/32360905#32360905", "tags": ["java", "arraylist", "collections", "return-type", "utils"]}, {"body": "<p>There is a <strong>small</strong> overhead in calling methods var an interface rather than directly on an object.   </p>\n\n<p>This overhead is often no more than 1 or 2 processor instructions.     The overhead of calling a method is even lower if the JIT knows that the method is final.   This is not measurable for most code you and me right, but for the low level methods in java.utils may be used in some code where it is an issue.</p>\n\n<p>Also as has been pointed out in other answers, the concrete type of the object that is return (even when hidden behind an interface) effects the performance of code that uses it.    This change in performance can be very great, so such an extent that the calling software fails to work.</p>\n\n<p>Clearly the authors of <code>java.utils</code> have no way to know what all the software that calls Collections.list() does with the result and no way to re-test this software if they change the implantation of Collections.list().    <strong>Therefore they are not going to change the implantation of Collections.list() to return a different type of List, even if the type system allowed it!</strong></p>\n\n<p>When writing your own software, you (hopefully) have automated test that cover all your code and a good understand of how your code interrelates include know where performance is an issue.   Being able to make a change to a method, without having to change the callers is of great value while the design of the software is changing.</p>\n\n<p><strong>Therefore the two set of trade offs are very different.</strong></p>\n", "title": "Why does Enumeration get converted to ArrayList and not List in java.utils?", "answer_id": 32370677, "link": "http://stackoverflow.com/questions/32356762/why-does-enumeration-get-converted-to-arraylist-and-not-list-in-java-utils/32370677#32370677", "tags": ["java", "arraylist", "collections", "return-type", "utils"]}], "question_id": 32356762}, {"body": "<p>I've read on many Web sites Optional should be used as a return type only, and not used in method arguments.  I'm struggling to find a logical reason why.  For example I have a piece of logic which has 2 optional parameters.  Therefore I think it would make sense to write my method signature like this (solution 1):</p>\n\n<pre><code>public int calculateSomething(Optional&lt;String&gt; p1, Optional&lt;BigDecimal&gt; p2 {\n    // my logic\n}\n</code></pre>\n\n<p>Many web pages specify Optional should not be used as method arguments. With this in mind I could use the following method signature and add a clear Javadoc comment specifying the arguments maybe null hoping future future maintainers will read the javadoc and therefore always carry out null checks prior to using the arguments (solution 2):</p>\n\n<pre><code>public int calculateSomething(String p1, BigDecimal p2) {\n    // my logic\n}\n</code></pre>\n\n<p>Alternatively I could replace my method with 4 public methods to provide a nicer interface and make it more obvious p1 and p2 are optional (solution 3):</p>\n\n<pre><code>public int calculateSomething() {\n    calculateSomething(null, null);\n}\n\npublic int calculateSomething(String p1) {\n    calculateSomething(p1, null);\n}\n\npublic int calculateSomething(BigDecimal p2) {\n    calculateSomething(null, p2);\n}\n\npublic int calculateSomething(String p1, BigDecimal p2) {\n    // my logic\n}\n</code></pre>\n\n<p>Now I try writing the code of the class which invokes this piece of logic for each approach.  I first retrieve the 2 input parameters from another object which returns optionals and then I invoke calculateSomething.  Therefore if solution 1 is used the calling code would look like this:</p>\n\n<pre><code>Optional&lt;String&gt; p1 = otherObject.getP1();\nOptional&lt;BigInteger&gt; p2 = otherObject.getP2();\nint result = myObject.calculateSomething(p1, p2);\n</code></pre>\n\n<p>if solution 2 is used the calling code would look like this:</p>\n\n<pre><code>Optional&lt;String&gt; p1 = otherObject.getP1();\nOptional&lt;BigInteger&gt; p2 = otherObject.getP2();\nint result = myObject.calculateSomething(p1.orElse(null), p2.orElse(null));\n</code></pre>\n\n<p>if solution 3 is used I could use the code above or I could use the following (but its a significant amount more code):</p>\n\n<pre><code>Optional&lt;String&gt; p1 = otherObject.getP1();\nOptional&lt;BigInteger&gt; p2 = otherObject.getP2();\nint result;\nif (p1.isPresent()) {\n    if (p2.isPresent()) {\n        result = myObject.calculateSomething(p1, p2);\n    } else {\n        result = myObject.calculateSomething(p1);\n    }\n} else {\n    if (p2.isPresent()) {\n        result = myObject.calculateSomething(p2);\n    } else {\n        result = myObject.calculateSomething();\n    }\n}\n</code></pre>\n\n<p><strong>So my question is why is it considered bad practice to use Optionals as method arguments as in solution 1?</strong>  It looks like the most readable solution to me and makes it most obvious that the parameters could be empty/null to future maintainers.  (I'm aware the designers of Optional intended it to only be used as a return type, but I can't find any logical reasons not to use it in this scenario)</p>\n", "tags": ["java", "java-8", "optional"], "title": "Why should Java 8&#39;s Optional not be used in arguments", "answer_count": 9, "creation_date": 1439218680, "score": 69, "link": "http://stackoverflow.com/questions/31922866/why-should-java-8s-optional-not-be-used-in-arguments", "answers": [{"body": "<p>I think that is because you usually write your functions to manipulate data, and then lift it to <code>Optional</code> using <code>map</code> and similar functions. This adds the default <code>Optional</code> behavior to it.\nOf course, there might be cases, when it is necessary to write your own auxilary function that works on <code>Optional</code>.</p>\n", "title": "Why should Java 8&#39;s Optional not be used in arguments", "answer_id": 31922994, "link": "http://stackoverflow.com/questions/31922866/why-should-java-8s-optional-not-be-used-in-arguments/31922994#31922994", "tags": ["java", "java-8", "optional"]}, {"body": "<p>I believe the reson of being is you have to first check whether or not Optional is null itself and then try to evaluate value it wraps. Too many unnecessary validations.</p>\n", "title": "Why should Java 8&#39;s Optional not be used in arguments", "answer_id": 31923015, "link": "http://stackoverflow.com/questions/31922866/why-should-java-8s-optional-not-be-used-in-arguments/31923015#31923015", "tags": ["java", "java-8", "optional"]}, {"body": "<p>The pattern with <code>Optional</code> is for one to avoid <em>returning</em> <code>null</code>.  It's still perfectly possible to pass in <code>null</code> to a method.</p>\n\n<p>While these aren't really official yet, you can use <a href=\"http://stackoverflow.com/questions/4963300/which-notnull-java-annotation-should-i-use\">JSR-308 style</a> annotations to indicate whether or not you accept <code>null</code> values into the function.  Note that you'd have to have the right tooling to actually identify it, and it'd provide more of a static check than an enforceable runtime policy, but it would help.</p>\n\n<pre><code>public int calculateSomething(@NotNull final String p1, @NotNull final String p2) {}\n</code></pre>\n", "title": "Why should Java 8&#39;s Optional not be used in arguments", "answer_id": 31923042, "link": "http://stackoverflow.com/questions/31922866/why-should-java-8s-optional-not-be-used-in-arguments/31923042#31923042", "tags": ["java", "java-8", "optional"]}, {"body": "<p>Oh, those coding styles are to be taken with a bit of salt.</p>\n\n<ol>\n<li>(+) Passing an Option result to another method, without any semantic analysis; leaving that to the method, is quite alright.</li>\n<li>(-) Using Optional parameters causing conditional logic inside the methods is literally contra-productive.</li>\n<li>(-) Needing to pack an argument in an Optional, is suboptimal for the compiler, and does an unnecessary wrapping.</li>\n<li>(-) In comparison to nullable parameters Optional is more costly.</li>\n</ol>\n\n<p>In general: Optional unifies two states, which have to be unraveled. Hence better suited for result than input, for the complexity of the data flow.</p>\n", "title": "Why should Java 8&#39;s Optional not be used in arguments", "answer_id": 31923105, "link": "http://stackoverflow.com/questions/31922866/why-should-java-8s-optional-not-be-used-in-arguments/31923105#31923105", "tags": ["java", "java-8", "optional"]}, {"body": "<p>This advice is a variant of the \"be as unspecific as possible regarding inputs and as specific as possible regarding outputs\" rule of thumb.</p>\n\n<p>Usually if you have a method that takes a plain non-null value, you can map it over the <code>Optional</code>, so the plain version is strictly more unspecific regarding inputs. <em>However</em> there are a bunch of possible reasons why you would want to require an <code>Optional</code> argument nonetheless:</p>\n\n<ul>\n<li>you want your function to be used in conjunction with another API that returns an <code>Optional</code></li>\n<li>Your function should return something other than an empty <code>Optional</code> if the given value is empty</li>\n<li><s>You think <code>Optional</code> is so awesome that whoever uses your API should be required to learn about it ;-)</s></li>\n</ul>\n", "title": "Why should Java 8&#39;s Optional not be used in arguments", "answer_id": 31923211, "link": "http://stackoverflow.com/questions/31922866/why-should-java-8s-optional-not-be-used-in-arguments/31923211#31923211", "tags": ["java", "java-8", "optional"]}, {"body": "<p>This seems a bit silly to me, but the only reason I can think of is that object arguments in method parameters already are optional in a way - they can be null. Therefore forcing someone to take an existing object and wrap it in an optional is sort of pointless. </p>\n\n<p>That being said, chaining methods together that take/return optionals is a reasonable thing to do, e.g. Maybe monad.</p>\n", "title": "Why should Java 8&#39;s Optional not be used in arguments", "answer_id": 31923214, "link": "http://stackoverflow.com/questions/31922866/why-should-java-8s-optional-not-be-used-in-arguments/31923214#31923214", "tags": ["java", "java-8", "optional"]}, {"body": "<p>Optionals aren't designed for this purpose, as explained nicely by <a href=\"http://stackoverflow.com/questions/26327957/should-java-8-getters-return-optional-type/26328555#26328555\">Brian Goetz</a>.</p>\n\n<p>You can always use <a href=\"http://stackoverflow.com/questions/14076296/nullable-annotation-usage\">@Nullable</a> to denote that a method argument can be null. Using an optional does not really enable you to write your method logic more neatly.</p>\n", "title": "Why should Java 8&#39;s Optional not be used in arguments", "answer_id": 31923227, "link": "http://stackoverflow.com/questions/31922866/why-should-java-8s-optional-not-be-used-in-arguments/31923227#31923227", "tags": ["java", "java-8", "optional"]}, {"body": "<p>There are almost no good reasons for not using Optional as parameters.  The arguments against this rely on arguments from authority (see Brian Goetz - his argument is we can't enforce non null optionals) or that the Optional arguments may be null (essentially the same argument).  Of course, any reference in Java can be null, we need to encourage rules being enforced by the compiler, not programmers memory (which is problematic and does not scale).  </p>\n\n<p>Functional programming languages encourage Optional parameters.  One of the best ways of using this is to have multiple optional parameters and using liftM2 to use a function assuming the parameters are not empty and returning an optional (see <a href=\"http://www.functionaljava.org/javadoc/4.4/functionaljava/fj/data/Option.html#liftM2-fj.F-\">http://www.functionaljava.org/javadoc/4.4/functionaljava/fj/data/Option.html#liftM2-fj.F-</a>).  Java 8 has unfortunately implemented a very limited library supporting optional.</p>\n\n<p>As Java programmers we should only be using null to interact with legacy libraries.</p>\n", "title": "Why should Java 8&#39;s Optional not be used in arguments", "answer_id": 31924845, "link": "http://stackoverflow.com/questions/31922866/why-should-java-8s-optional-not-be-used-in-arguments/31924845#31924845", "tags": ["java", "java-8", "optional"]}, {"body": "<p>The best post I've seen on the topic was written by <a href=\"http://stackoverflow.com/users/1487809/daniel-olszewski\">Daniel Olszewski</a> and can be found at <a href=\"http://dolszewski.com/java/java-8-optional-use-cases/\" rel=\"nofollow\">http://dolszewski.com/java/java-8-optional-use-cases/</a>. While others mention when you should or should not use Optional, this post actually explains <strong>why</strong>. Cross-posting here in case the link goes down:</p>\n\n<blockquote>\n  <p>It\u2019s been almost two years since Java 8 was officially released and\n  many excellent articles about new enhancements and related best\n  practices have been written through that time. <strong>Surprisingly, one of\n  the more controversial topics amongst all the added features is the\n  Optional class</strong>. The type is a container, which can be either empty\n  or contain a non-null value. Such construction reminds the user of an\n  Optional object that the situation when there\u2019s nothing inside must be\n  handled appropriately. Although <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html\" rel=\"nofollow\">the definition of the type on\n  Javadoc</a>\n  is quite descriptive, when it comes to identifying valid use cases\n  it\u2019s getting more problematic.</p>\n  \n  <p><strong>Method result</strong></p>\n  \n  <p>The first possible use case is actually a no-brainer. Brian Goetz, who is working on the Java language at Oracle, stated this purpose <a href=\"http://stackoverflow.com/a/26328555/1487809\">in his answer on Stack Overflow</a> as <strong>the main motivator to add the type to the standard library</strong>.</p>\n  \n  <blockquote>\n    <p>Our intention was to provide a limited mechanism for library method return types where there needed to be a clear way to represent \u201cno result\u201d, and using null for such was overwhelmingly likely to cause errors.</p>\n  </blockquote>\n  \n  <p>Before Java 8, receiving a null value from a method was ambiguous. It\n  could mean there\u2019s nothing to return or that an error occurred during\n  execution. Besides, developers tended to forget verifying if the\n  result was null, which led to nasty NullPointerException at runtime.\n  Optional solves both problems by providing a convenient way to force\n  the user of the method to check its self-explanatory output.</p>\n  \n  <p><strong>Collection wrapper</strong></p>\n  \n  <p>While putting a nullable method result inside Optional is advisable,\n  the rule doesn\u2019t apply when the output is a collection or an array. In\n  case when there\u2019s no element to return, <strong>an empty instance is\n  superior to empty Optional and null</strong> as it conveys all necessary\n  information. Optional doesn\u2019t provide any additional value and only\n  complicates client code, hence it should be avoided. Here\u2019s a bad\n  practice sample:</p>\n\n<pre><code>Optional&lt;List&lt;Item&gt;&gt; itemsOptional = getItems();\nif (itemsOptional.isPresent()) { // do we really need this?\n    itemsOptional.get().forEach(item -&gt; {\n        // process item\n    });\n} else {\n    // the result is empty\n}\n</code></pre>\n  \n  <p>As long as the <code>getItems()</code> method returned the unwrapped list\n  instance, client code could get rid of one condition check and simply\n  iterate over the collection. If we want to verify the absence of the\n  result, each collection has the <code>isEmpty()</code> method and in case of\n  arrays, the length property can be used. On the whole, Optional adds\n  unnecessary complexity.</p>\n  \n  <p><strong>Constructor and method parameters</strong></p>\n  \n  <p>Although it might be tempting to consider Optional for not mandatory method parameters, such a solution pale in comparison with other possible alternatives. To illustrate the problem, examine the following constructor declaration:</p>\n\n<pre><code>public SystemMessage(String title, String content, Optional&lt;Attachment&gt; attachment) {\n    // assigning field values\n}\n</code></pre>\n  \n  <p>At first glance it may look as a right design decision. After all, we\n  explicitly marked the attachment parameter as optional. However, as\n  for calling the constructor, client code can become a little bit\n  clumsy.</p>\n\n<pre><code>SystemMessage withoutAttachment = new SystemMessage(\"title\", \"content\", Optional.empty());\nAttachment attachment = new Attachment();\nSystemMessage withAttachment = new SystemMessage(\"title\", \"content\", Optional.ofNullable(attachment));\n</code></pre>\n  \n  <p>Instead of providing clarity, the factory methods of the Optional\n  class only distract the reader. Note there\u2019s only one optional\n  parameter, but imagine having two or three. Uncle Bob definitely\n  wouldn\u2019t be proud of such code \ud83d\ude09</p>\n  \n  <p><strong>When a method can accept optional parameters, it\u2019s preferable to adopt the well-proven approach and design such case using method\n  overloading.</strong> In the example of the SystemMessage class, declaring\n  two separate constructors are superior to using Optional.</p>\n\n<pre><code>public SystemMessage(String title, String content) {\n    this(title, content, null);\n}\n\npublic SystemMessage(String title, String content, Attachment attachment) {\n    // assigning field values\n}\n</code></pre>\n  \n  <p>That change makes client code much simpler and easier to read.</p>\n\n<pre><code>SystemMessage withoutAttachment = new SystemMessage(\"title\", \"content\");\nAttachment attachment = new Attachment();\nSystemMessage withAttachment = new SystemMessage(\"title\", \"content\", attachment);\n</code></pre>\n  \n  <p><strong>POJOs</strong></p>\n  \n  <p>POJO fields or getters are probably the most controversial candidates\n  for Optional usage and judging by different blog posts, articles, and\n  comments we all can agree only on one thing: another holy war has\n  already been started. On the one hand, in the aforementioned Stack\n  Overflow post, <strong>Brian Goetz left no doubt the type isn\u2019t suitable for\n  accessors</strong>.</p>\n  \n  <blockquote>\n    <p>I think routinely using it as a return value for getters would definitely be over-use.</p>\n  </blockquote>\n  \n  <p>What is more, <a href=\"http://mail.openjdk.java.net/pipermail/jdk8-dev/2013-September/003274.html\" rel=\"nofollow\">Optional deliberately doesn\u2019t implement the\n  Serializable\n  interface</a>,\n  which essentially disqualifies the type as a member of any class that\n  relies on the mechanism. For a number of developers these two\n  justifications are sufficient to reject the idea of Optional POJO\n  fields.</p>\n  \n  <p>On the other side of the coin, others started to question the\n  previously mentioned arguments. As a matter of fact, a nullable model\n  field isn\u2019t a rare case and considering Optional is reasonable.\n  Stephen Colebourne, mostly known as a principal contributor of\n  Joda-Time and the JSR-310 specification, proposed <a href=\"http://blog.joda.org/2015/08/java-se-8-optional-pragmatic-approach.html\" rel=\"nofollow\">on his blog\n  post</a>\n  to <strong>keep nullable fields inside of a class, but wrap them up with\n  Optional when they leave the private scope through public getters</strong>.\n  Just like in the case of the method result, we want to aware other\n  developers of possible lack of value.</p>\n  \n  <p>Besides memory overhead, <strong>the main obstacle which prevents using\n  Optional as a POJO field is support of libraries and frameworks</strong>.\n  Reflection is widely used to read and manipulate objects and Optional\n  requires special treatment. For instance, the Jackson development team\n  has already provided an additional module that handles Optional fields\n  while converting a POJO into JSON format. Hibernate validator also\n  works with Optional entity fields, but in many cases you don\u2019t get\n  support out of the box and some additional work might be inevitable.</p>\n  \n  <p>If you choose the dark side and ignore the advice from Brian Goetz,\n  you have to <strong>make sure all libraries and frameworks that you use can\n  fully deal with the Optional class</strong>. No matter what your team decides\n  when starting a new application, the best advice is to keep it\n  consistent across the whole project.</p>\n  \n  <p><strong>Optional class dependency</strong></p>\n  \n  <p>Sometimes features or some part of business logic can be toggled on and off based on an application configuration. When such code is externalized into a separate class, it becomes an optional runtime dependency. Stateless classes don\u2019t implement the Serializable interface, so there are no technical obstacles to use Optional as a class field. Consider the following example:</p>\n\n<pre><code>public class OrderProcessor {\n\n    private Optional&lt;SmsNotifier&gt; smsNotifier = Optional.empty();\n\n    public void process(final Order order) {\n        // some processing logic here\n        smsNotifier.ifPresent(n -&gt; n.sendConfirmation(order));\n    }\n\n    public void setSmsNotifier(SmsNotifier smsNotifier) {\n        this.smsNotifier = Optional.ofNullable(smsNotifier);\n    }\n\n}\n</code></pre>\n  \n  <p>If a nullable field were used, we\u2019d risk someone, while extending the\n  class, would unknowingly use the field without verifying its presence.\n  <strong>In the world dominated by dependency injection frameworks, a multitude of developers automatically assume if there\u2019s a field in a\n  business logic class then it must be set by a container</strong>. The\n  Optional type is highly expressive in this situation and prevents\n  automatic behavior from occurring.</p>\n  \n  <p>As usual in programming, there\u2019s no one best way to tackle the\n  problem. Another possible solution for optional dependencies is the\n  <a href=\"https://en.wikipedia.org/wiki/Null_Object_pattern\" rel=\"nofollow\">Null Object\n  pattern</a>, which in\n  some cases may be preferable.</p>\n  \n  <p><strong>Not a silver bullet</strong></p>\n  \n  <p>Although in many situations the temptation to use Optional may be\n  strong, the original idea behind the type wasn\u2019t to create an\n  all-purpose replacement for every nullable value. Before applying the\n  type, all possible alternatives should be considered as <strong>overusing of\n  Optional may lead to introducing new burdensome code smells</strong>. If you\n  have practical experience with Optional, especially as POJO fields or\n  getter outputs, I\u2019d be glad to read about what you\u2019ve learned. Every\n  comment is highly appreciated, so don\u2019t hesitate to share your\n  observations.</p>\n</blockquote>\n", "title": "Why should Java 8&#39;s Optional not be used in arguments", "answer_id": 39005452, "link": "http://stackoverflow.com/questions/31922866/why-should-java-8s-optional-not-be-used-in-arguments/39005452#39005452", "tags": ["java", "java-8", "optional"]}], "question_id": 31922866}, {"body": "<p>I noticed something strange in the implementation of <code>HashMap.clear()</code>. This is how it looked in <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/7u40-b43/java/util/HashMap.java#737\" rel=\"nofollow\">OpenJDK 7u40</a>:</p>\n\n<pre><code>public void clear() {\n    modCount++;\n    Arrays.fill(table, null);\n    size = 0;\n}\n</code></pre>\n\n<p>And this is how it looks as of <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8u40-b25/java/util/HashMap.java#857\" rel=\"nofollow\">OpenJDK 8u40</a>:</p>\n\n<pre><code>public void clear() {\n    Node&lt;K,V&gt;[] tab;\n    modCount++;\n    if ((tab = table) != null &amp;&amp; size &gt; 0) {\n        size = 0;\n        for (int i = 0; i &lt; tab.length; ++i)\n            tab[i] = null;\n    }\n}\n</code></pre>\n\n<p>I understand that now the <code>table</code> can be null for empty an map, thus the additional check and caching in a local variable is required. But why was <code>Arrays.fill()</code> replaced with a for-loop?</p>\n\n<p>It seems that the change was introduced in <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/diff/d62c911aebbb/src/share/classes/java/util/HashMap.java#l1.2459\" rel=\"nofollow\">this commit</a>. Unfortunately I found no explanation for why a plain for loop might be better than <code>Arrays.fill()</code>. Is it faster? Or safer?</p>\n", "tags": ["java", "arrays", "hashmap", "java-8"], "title": "Why is Arrays.fill() not used in HashMap.clear() anymore?", "answer_count": 5, "creation_date": 1442833777, "score": 67, "link": "http://stackoverflow.com/questions/32693704/why-is-arrays-fill-not-used-in-hashmap-clear-anymore", "answers": [{"body": "<p>There is no actual difference in the functionality between the 2 version's loop. <code>Arrays.fill</code> does the exact same thing.</p>\n\n<p>So the choice to use it or not may not necessarily be considered a mistake. It is left up to the developer to decide when it comes to this kind of micromanagement.</p>\n\n<p>There are 2 separate concerns for each approach:</p>\n\n<ul>\n<li>using the <code>Arrays.fill</code> makes the code less verbose and more readable.</li>\n<li>looping directly in the <code>HashMap</code> code (like version 8) peformance wise is actually a better option. While the overhead that inserting the <code>Arrays</code> class is negligible it may become less so when it comes to something as widespread as <code>HashMap</code> where every bit of performance enhancement has a large effect(imagine the tiniest footprint reduce of a HashMap in fullblown webapp). Take into consideration the fact that the Arrays class was used only for this one loop. The change is small enough that it doesn't make the clear method less readable.</li>\n</ul>\n\n<p>The precise reason can't be found out without asking the developer who actually did this, however i suspect it's either a mistake or a small enhancement.\nbetter option.</p>\n\n<p>My opinion is it can be considered an enhancement, even if only by accident. </p>\n", "title": "Why is Arrays.fill() not used in HashMap.clear() anymore?", "answer_id": 32744190, "link": "http://stackoverflow.com/questions/32693704/why-is-arrays-fill-not-used-in-hashmap-clear-anymore/32744190#32744190", "tags": ["java", "arrays", "hashmap", "java-8"]}, {"body": "<p>For me, the reason is a likely performance inprovement, at a negligible cost in terms of code clarity.</p>\n\n<p>Note that the implementation of the <code>fill</code> method is trivial, a simple for-loop setting each array element to null. So, replacing a call to it with the actual implementation does not cause any significant degradation in the clarity/conciseness of the caller method.</p>\n\n<p>The potential performance benefits are not so insignificant, if you consider everything that is involved:</p>\n\n<ol>\n<li><p>There will be no need for the JVM to resolve the <code>Arrays</code> class, plus loading and initializing it if needed. This is a non-trivial process where the JVM performs several steps. Firstly, it checks the class loader to see if the class is already loaded, and this happens every time a method is called; there are optimizations involved here, of course, but it still takes some effort. If the class is not loaded, the JVM will need to go through the expensive process of loading it, verifying the bytecode, resolving other necessary dependencies, and finally performing static initialization of the class (which can be arbitrarily expensive). Given that <code>HashMap</code> is such a core class, and that <code>Arrays</code> is such a huge class (3600+ lines), avoiding these costs may add up to noticeable savings.</p></li>\n<li><p>Since there is no <code>Arrays.fill(...)</code> method call, the JVM won't have to decide whether/when to inline the method into the caller's body. Since <code>HashMap#clear()</code> tends to get called a lot, the JVM will eventually perform the inlining, which requires JIT recompilation of the <code>clear</code> method. With no method calls, <code>clear</code> will always run at top-speed (once initially JITed).</p></li>\n</ol>\n\n<p>Another benefit of no longer calling methods in <code>Arrays</code> is that it simplifies the dependency graph inside the <code>java.util</code> package, since one dependency is removed.</p>\n", "title": "Why is Arrays.fill() not used in HashMap.clear() anymore?", "answer_id": 32745612, "link": "http://stackoverflow.com/questions/32693704/why-is-arrays-fill-not-used-in-hashmap-clear-anymore/32745612#32745612", "tags": ["java", "arrays", "hashmap", "java-8"]}, {"body": "<p>I'm going to shoot in the dark here... </p>\n\n<p>My <em>guess</em> is that it might have been changed in order to prepare the ground for <a href=\"http://openjdk.java.net/jeps/218\" rel=\"nofollow\">Specialization</a> (aka generics over primitive types). <em>Maybe</em> (and I insist on <em>maybe</em>), this change is meant to make transition to Java 10 easier, in the event of specialization being part of the JDK.</p>\n\n<p>If you look at the <a href=\"http://cr.openjdk.java.net/~briangoetz/valhalla/specialization.html\" rel=\"nofollow\">State of the Specialization document</a>, <strong>Language restrictions</strong> section, it says the following:</p>\n\n<blockquote>\n  <p>Because any type variables can take on value as well as reference types, the type checking rules involving such type variables (henceforth, \"avars\"). For example, for an avar T:</p>\n  \n  <ul>\n  <li><strong>Cannot convert null to a variable whose type is T</strong></li>\n  <li>Cannot compare T to null</li>\n  <li><strong>Cannot convert T to Object</strong></li>\n  <li><strong>Cannot convert T[] to Object[]</strong></li>\n  <li>...</li>\n  </ul>\n</blockquote>\n\n<p>(Emphasis is mine).</p>\n\n<p>And ahead in the <strong>Specializer transformations</strong> section, it says:</p>\n\n<blockquote>\n  <p>When specializing an any-generic class, the specializer is going to perform a number of transformations, most localized, but some requiring a global view of a class or method, including:</p>\n  \n  <ul>\n  <li>...</li>\n  <li><strong>Type variable substitution and name mangling is performed on the signatures of all methods</strong></li>\n  <li>...</li>\n  </ul>\n</blockquote>\n\n<p>Later on, near the end of the document, in the <strong>Further investigation</strong> section, it says:</p>\n\n<blockquote>\n  <p>While our experiments have proven that specialization in this manner is practical, much more investigation is needed. Specifically, we need to perform a number of targeted experiments aimed at any-fying core JDK libraries, specifically Collections and Streams.</p>\n</blockquote>\n\n<hr>\n\n<p>Now, regarding the change...</p>\n\n<p>If the <code>Arrays.fill(Object[] array, Object value)</code> method is going to be specialized, then its signature should change to <code>Arrays.fill(T[] array, T value)</code>. However this case is specifically listed in the (already mentioned) <em>Language restrictions</em> section (it would violate the emphasized items). So <em>maybe</em> someone decided that it would be better to not use it from the <code>HashMap.clear()</code> method, especially if <code>value</code> is <code>null</code>.</p>\n", "title": "Why is Arrays.fill() not used in HashMap.clear() anymore?", "answer_id": 32749756, "link": "http://stackoverflow.com/questions/32693704/why-is-arrays-fill-not-used-in-hashmap-clear-anymore/32749756#32749756", "tags": ["java", "arrays", "hashmap", "java-8"]}, {"body": "<p>I will try to summarize three moreless reasonable versions which were proposed in comments.</p>\n\n<p>@Holger <a href=\"http://stackoverflow.com/questions/32693704/why-arrays-fill-is-not-used-in-hashmap-clear-anymore#comment53230781_32693704\">says</a>:</p>\n\n<blockquote>\n  <p>I guess that this is to avoid the class java.util.Arrays getting loading as a side effect of this method. For application code, this is usually not a concern.</p>\n</blockquote>\n\n<p>This is the most easy thing to test. Let's compile such program:</p>\n\n<pre><code>public class HashMapTest {\n    public static void main(String[] args) {\n        new java.util.HashMap();\n    }\n}\n</code></pre>\n\n<p>Run it with <code>java -verbose:class HashMapTest</code>. This will print the class loading events as they occur. With JDK 1.8.0_60 I see more than 400 classes loaded:</p>\n\n<pre><code>... 155 lines skipped ...\n[Loaded java.util.Set from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.util.AbstractSet from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.util.Collections$EmptySet from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.util.Collections$EmptyList from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.util.Collections$EmptyMap from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.util.Collections$UnmodifiableCollection from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.util.Collections$UnmodifiableList from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.util.Collections$UnmodifiableRandomAccessList from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded sun.reflect.Reflection from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n**[Loaded java.util.HashMap from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.util.HashMap$Node from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.lang.Class$3 from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.lang.Class$ReflectionData from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.lang.Class$Atomic from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded sun.reflect.generics.repository.AbstractRepository from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded sun.reflect.generics.repository.GenericDeclRepository from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded sun.reflect.generics.repository.ClassRepository from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.lang.Class$AnnotationData from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded sun.reflect.annotation.AnnotationType from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.util.WeakHashMap from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.lang.ClassValue$ClassValueMap from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.lang.reflect.Modifier from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded sun.reflect.LangReflectAccess from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n[Loaded java.lang.reflect.ReflectAccess from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n**[Loaded java.util.Arrays from C:\\Program Files\\Java\\jre1.8.0_60\\lib\\rt.jar]\n...\n</code></pre>\n\n<p>As you can see, <code>HashMap</code> is loaded long before application code and <code>Arrays</code> is loaded only 14 classes after <code>HashMap</code>. The <code>HashMap</code> load is triggered by <code>sun.reflect.Reflection</code> initialization as it has <code>HashMap</code> static fields. The <code>Arrays</code> load is likely to be triggered by <code>WeakHashMap</code> load which actually has <code>Arrays.fill</code> in the <code>clear()</code> method. The <code>WeakHashMap</code> load is triggered by <code>java.lang.ClassValue$ClassValueMap</code> which extends <code>WeakHashMap</code>. The <code>ClassValueMap</code> is present in every <code>java.lang.Class</code> instance. So to me seems that without <code>Arrays</code> class the JDK cannot be initialized at all. Also the <code>Arrays</code> static initializer is very short, it only initializes the assertion mechanism. This mechanism is used in many other classes (including, for example, <code>java.lang.Throwable</code> which is loaded very early). No other static initialization steps are performed in <code>java.util.Arrays</code>. Thus @Holger version seems incorrect to me.</p>\n\n<p>Here we also found very interesting thing. The <code>WeakHashMap.clear()</code> still uses <code>Arrays.fill</code>. It's interesting when it appeared there, but unfortunately this goes to <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/annotate/37a05a11f281/src/share/classes/java/util/WeakHashMap.java#l633\">prehistoric times</a> (it was already there in the very first public OpenJDK repository).</p>\n\n<p>Next, @MarcoTopolnik <a href=\"http://stackoverflow.com/questions/32693704/why-arrays-fill-is-not-used-in-hashmap-clear-anymore#comment53230663_32693704\">says</a>:</p>\n\n<blockquote>\n  <p>Safer surely not, but it <em>might</em> be faster when the <code>fill</code> call is not inlined and <code>tab</code> is short. On HotSpot both the loop and the explicit <code>fill</code> call will result in a fast compiler intrinsic (in a happy-day scenario). </p>\n</blockquote>\n\n<p>It was actually surprising for me that <code>Arrays.fill</code> is not directly intrinsified (see <a href=\"https://gist.github.com/apangin/7a9b7062a4bd0cd41fcc\">intrinsic list</a> generated by <a href=\"http://stackoverflow.com/users/3448419/apangin\">@apangin</a>). Seems that such loop can be recognized and vectorized by JVM without explicit intrinsic handling. So it's true that extra call can be not inlined in very specific cases (for example if <code>MaxInlineLevel</code> limit is reached). On the other hand it's very rare situation and it's only a single call, it's not a call inside loop, and it's a static, not virtual/interface call, thus the performance improvement could be only marginal and only in some specific scenarios. Not the thing the JVM developers usually care.</p>\n\n<p>Also it should be noted that even C1 'client' compiler (tier 1-3) is capable to inline <code>Arrays.fill</code> called, for example, in <code>WeakHashMap.clear()</code>, as inlining log (<code>-XX:+UnlockDiagnosticVMOptions -XX:+PrintCompilation -XX:+PrintInlining</code>) says:</p>\n\n<pre><code>36       3  java.util.WeakHashMap::clear (50 bytes)\n     !m        @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)\n                 @ 17   java.lang.ref.ReferenceQueue::reallyPoll (66 bytes)   callee is too large\n               @ 28   java.util.Arrays::fill (21 bytes)\n     !m        @ 40   java.lang.ref.ReferenceQueue::poll (28 bytes)\n                 @ 17   java.lang.ref.ReferenceQueue::reallyPoll (66 bytes)   callee is too large\n               @ 1   java.util.AbstractMap::&lt;init&gt; (5 bytes)   inline (hot)\n                 @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)\n               @ 9   java.lang.ref.ReferenceQueue::&lt;init&gt; (27 bytes)   inline (hot)\n                 @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)\n                 @ 10   java.lang.ref.ReferenceQueue$Lock::&lt;init&gt; (5 bytes)   unloaded signature classes\n               @ 62   java.lang.Float::isNaN (12 bytes)   inline (hot)\n               @ 112   java.util.WeakHashMap::newTable (8 bytes)   inline (hot)\n</code></pre>\n\n<p>Of course, it's also easily inlined by smart and powerful C2 'server' compiler. Thus I see no problems here. Seems that @Marco version is incorrect either.</p>\n\n<p>Finally we have a couple of <a href=\"http://stackoverflow.com/questions/32693704/why-arrays-fill-is-not-used-in-hashmap-clear-anymore/32752970#comment53251284_32693704\">comments</a> from @StuartMarks (who is JDK developer, thus some official voice):</p>\n\n<blockquote>\n  <p>Interesting. My hunch is that this is a mistake. The review thread for this changeset is <a href=\"http://mail.openjdk.java.net/pipermail/core-libs-dev/2013-August/020131.html\">here</a> and it references an <a href=\"http://mail.openjdk.java.net/pipermail/core-libs-dev/2013-July/018685.html\">earlier thread</a> that is <a href=\"http://mail.openjdk.java.net/pipermail/core-libs-dev/2013-August/019853.html\">continued here</a>. The initial message in that earlier thread points to a prototype of HashMap.java in Doug Lea's CVS repository. I don't know where this came from. It doesn't seem to match anything in the OpenJDK history.</p>\n  \n  <p>... In any case, it might have been some old snapshot; the for-loop was in the clear() method for many years. The Arrays.fill() call was introduced by <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/rev/2e3cc7f599ca\">this changeset</a>, so it was in the tree only for a few months. Note also that the power-of-two computation based on Integer.highestOneBit() introduced by <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/rev/36f4cf8872f3\">this changeset</a> also disappeared at the same time, though this was noted but dismissed during the review. Hmmm.</p>\n</blockquote>\n\n<p>Indeed the <code>HashMap.clear()</code> contained the loop many years, was <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/rev/2e3cc7f599ca#l2.156\">replaced</a> with <code>Arrays.fill</code> on Apr 10th, 2013 and stayed less one half-a-year until Sept 4th when the discussed <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/diff/d62c911aebbb/src/share/classes/java/util/HashMap.java#l1.2459\">commit</a> was introduced. The discussed commit was actually a major rewrite of the <code>HashMap</code> internals to fix <a href=\"https://bugs.openjdk.java.net/browse/JDK-8023463\">JDK-8023463</a> issue. It was a long story about possibility to poison the <code>HashMap</code> with keys having duplicating hashcodes reducing <code>HashMap</code> search speed to linear making it vulnerable to DoS-attacks. The attempts to solve this were performed in JDK-7 including some randomization of String hashCode. So seems that the <code>HashMap</code> implementation was forked from the earlier commit, developed independently, then merged into the master branch overwriting several changes introduced in-between.</p>\n\n<p>We may support this hypothesis performing a diff. Take the <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/raw-file/d62c911aebbb/src/share/classes/java/util/HashMap.java\">version</a> where <code>Arrays.fill</code> was removed (2013-09-04) and compare it with <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/raw-file/36f4cf8872f3/src/share/classes/java/util/HashMap.java\">previous version</a> (2013-07-30). The <code>diff -U0</code> output has 4341 lines. Now let's diff against the <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/raw-file/de228734b742/src/share/classes/java/util/HashMap.java\">version</a> prior to one when <code>Arrays.fill</code> was added (2013-04-01). Now <code>diff -U0</code> contains only 2680 lines. Thus the newer version actually more similar to the older than to immediate parent.</p>\n\n<p><strong>Conclusion</strong></p>\n\n<p>So to conclude I would agree with Stuart Marks. There were no concrete reason to remove <code>Arrays.fill</code>, it's just because the in-between change was overwritten by mistake. Using <code>Arrays.fill</code> is perfectly fine both in JDK code and in user applications and used, for example, in <code>WeakHashMap</code>. The <code>Arrays</code> class is loaded anyways pretty early during the JDK initialization, has very simple static initializer and <code>Arrays.fill</code> method can be easily inlined even by client compiler, so no performance drawback should be noted.</p>\n", "title": "Why is Arrays.fill() not used in HashMap.clear() anymore?", "answer_id": 32752970, "link": "http://stackoverflow.com/questions/32693704/why-is-arrays-fill-not-used-in-hashmap-clear-anymore/32752970#32752970", "tags": ["java", "arrays", "hashmap", "java-8"]}, {"body": "<p>Because it's <em>much</em> faster!</p>\n\n<p>I ran some thorough benchmarking tests on cut down versions of the two methods:</p>\n\n<pre><code>void jdk7clear() {\n    Arrays.fill(table, null);\n}\n\nvoid jdk8clear() {\n    Object[] tab;\n    if ((tab = table) != null) {\n        for (int i = 0; i &lt; tab.length; ++i)\n            tab[i] = null;\n    }\n}\n</code></pre>\n\n<p>operating on arrays of various sizes containing random values. Here are the (typical) results:</p>\n\n<pre><code>Map size |  JDK 7 (sd)|  JDK 8 (sd)| JDK 8 vs 7\n       16|   2267 (36)|   1521 (22)| 67%\n       64|   3781 (63)|   1434 ( 8)| 38%\n      256|   3092 (72)|   1620 (24)| 52%\n     1024|   4009 (38)|   2182 (19)| 54%\n     4096|   8622 (11)|   4732 (26)| 55%\n    16384|  27478 ( 7)|  12186 ( 8)| 44%\n    65536| 104587 ( 9)|  46158 ( 6)| 44%\n   262144| 445302 ( 7)| 183970 ( 8)| 41%\n</code></pre>\n\n<p>And here are the results when operating over an array filled with nulls (so garbage collection issues are eradicated):</p>\n\n<pre><code>Map size |  JDK 7 (sd)|  JDK 8 (sd)| JDK 8 vs 7\n       16|     75 (15)|     65 (10)|  87%\n       64|    116 (34)|     90 (15)|  78%\n      256|    246 (36)|    191 (20)|  78%\n     1024|    751 (40)|    562 (20)|  75%\n     4096|   2857 (44)|   2105 (21)|  74%\n    16384|  13086 (51)|   8837 (19)|  68%\n    65536|  52940 (53)|  36080 (16)|  68%\n   262144| 225727 (48)| 155981 (12)|  69%\n</code></pre>\n\n<p>The numbers are in nanoseconds, <code>(sd)</code> is 1 standard deviation expressed as a percentage of the result (fyi, a \"normally distributed\" population has an SD of 68), <code>vs</code> is the JDK 8 timing relative to JDK 7.</p>\n\n<p>It is interesting that not only is it significantly faster, but the deviation is also slightly narrower, which means that the JDK 8 implementation gives slightly more <em>consistent</em> performance.</p>\n\n<p>The tests were run on jdk 1.8.0_45 over a large (millions) number of times on arrays populated with random <code>Integer</code> objects. To remove out-lying numbers, on each set of results the fastest and slowest 3% of timings were discarded. Garbage collection was requested and the thread yielded and slept just prior to running each invocation of the method. JVM warm up was done on the first 20% of work and those results were discarded.</p>\n", "title": "Why is Arrays.fill() not used in HashMap.clear() anymore?", "answer_id": 32852619, "link": "http://stackoverflow.com/questions/32693704/why-is-arrays-fill-not-used-in-hashmap-clear-anymore/32852619#32852619", "tags": ["java", "arrays", "hashmap", "java-8"]}], "question_id": 32693704}, {"body": "<p>Why was the <code>Thread</code> class implemented as a regular class and not an <strong>abstract</strong> class with <code>run()</code> method being abstract.</p>\n\n<p>Will it possibly introduce any problems? Or does it have any use in being this way?</p>\n\n<p>Also, the <code>Thread.start()</code> method is supposed to be a very specific method <strong>whose functionality cannot be implemented by any other class</strong> (If I am not wrong). And hence I guess the <code>final</code> keyword would be apt for this more than any other method.</p>\n\n<p>But I am able to override this method and use it as I like,</p>\n\n<pre><code>public class Test extends Thread {\n    public static void main (String... args) {\n        Thread test = new Test();\n        test.start();\n    }\n\n    @Override\n    public void run() {\n        System.out.println(\"New thread started...\");\n    }\n\n    @Override\n    public void start() {\n        System.out.println(\"Did anyone tell you I will spawn a new thread??\");\n    }\n}\n</code></pre>\n\n<p>It obviously only printed,</p>\n\n<blockquote>\n  <p>Did anyone tell you I will spawn a new thread??</p>\n</blockquote>\n\n<p>Is there any use in overriding other than confusing the engineer replacing you?</p>\n\n<p>If not, why was the method not declared final in Thread class?</p>\n", "tags": ["java", "multithreading"], "title": "Why is Thread not an abstract class and start() not final?", "answer_count": 3, "creation_date": 1435914768, "score": 66, "link": "http://stackoverflow.com/questions/31202946/why-is-thread-not-an-abstract-class-and-start-not-final", "answers": [{"body": "<p>You can of course choose to shoot yourself in the foot, but that doesn't mean you must.</p>\n\n<blockquote>\n  <p>Why was the Thread class implemented as a regular class and not an abstract class with run() method being abstract.</p>\n</blockquote>\n\n<p>Because the recommended way to create a start a thread is not to subclass Thread. The recommended way is to define a <code>Runnable</code>, and pass it as argument to the Thread constructor:</p>\n\n<pre><code>Runnable r = new Runnable() {\n    @Override\n    public void run() {\n        ...\n    }\n};\nThread t = new Thread(r);\nt.start();\n</code></pre>\n\n<blockquote>\n  <p>And hence I guess the final keyword would be apt for this more than any other method.</p>\n</blockquote>\n\n<p>Yes and no. You can't replace the implementation of start() by your own implementation, but you can do <em>additional</em> things in start() if you want:</p>\n\n<pre><code>@Override\npublic void start() {\n    System.out.println(\"Did anyone tell you I will spawn a new thread??\");\n    super.start();\n}\n</code></pre>\n\n<p>That said, if Java was redesigned from scratch today, there is a good chance the design would be different. Remember that this class dates from Java 1.0, and is still backward-compatible.</p>\n", "title": "Why is Thread not an abstract class and start() not final?", "answer_id": 31203218, "link": "http://stackoverflow.com/questions/31202946/why-is-thread-not-an-abstract-class-and-start-not-final/31203218#31203218", "tags": ["java", "multithreading"]}, {"body": "<blockquote>\n  <p>Why was the Thread class implemented as a regular class and not an\n  abstract class with run() method being abstract.</p>\n</blockquote>\n\n<p>This question actually boils down to the fact that you should always prefer composition over inheritance.</p>\n\n<p>If the <code>Thread</code> class was declared as <code>abstract</code>, the language would have to provide another class that extended from it which programmers could use to create a <code>Thread</code>. Your question would then be about why this class that <code>extends</code> from <code>Thread</code> is not <code>abstract</code>. If the language did not provide another class that <code>extends</code> from <code>Thread</code>, programmers would have to create their own class that <code>extend</code>s from <code>Thread</code> and override the <code>run()</code> method.</p>\n\n<blockquote>\n  <p>If not, why was the method not declared final in Thread class??</p>\n</blockquote>\n\n<p>The only possible explanation I can give is that the developers of the language saw some use-cases for overriding <code>start</code> when the class was introduced to the JDK. The first version of Java that I used was 1.5 and I personally have not come across a use-case where I found the need to override <code>start</code>. As JB Nizet stated in his answer</p>\n\n<blockquote>\n  <p>if Java was redesigned from scratch today, there is a good chance the design would be different</p>\n</blockquote>\n", "title": "Why is Thread not an abstract class and start() not final?", "answer_id": 31203252, "link": "http://stackoverflow.com/questions/31202946/why-is-thread-not-an-abstract-class-and-start-not-final/31203252#31203252", "tags": ["java", "multithreading"]}, {"body": "<blockquote>\n  <p>Why is <code>Thread.start()</code> not <code>final</code>?</p>\n</blockquote>\n\n<p>Are you <em>sure</em> you would never want to override it?</p>\n\n<pre><code>Class MyThreadFactory implements ThreadFactory {\n    @Override\n    public Thread newThread(Runnable r) {\n        return new Thread(r) {\n            @Override\n            public void start() {\n                LOGGER.info(\"Starting thread \" + this);\n                super.start();\n            }\n        };\n    }\n}\n</code></pre>\n", "title": "Why is Thread not an abstract class and start() not final?", "answer_id": 31203979, "link": "http://stackoverflow.com/questions/31202946/why-is-thread-not-an-abstract-class-and-start-not-final/31203979#31203979", "tags": ["java", "multithreading"]}], "question_id": 31202946}, {"body": "<p>I have created a simple <strong>CollapsingToolbarLayout</strong> and it works like a charm. My problem is, that if I try to use a fling scroll on the <strong>nestedscrollview</strong>, it just stops when I release my finger. Normal scrolling works like it should.</p>\n\n<p>My activities code is <strong><em>unchanged => auto</em></strong> generated empty activity. (I just clicked on create new empty activity in android studio and edited the XML yet).</p>\n\n<p>I read here, that scroll gestures on the imageview itself are buggy, but not, that the scrolling itself is buggy: <a href=\"https://code.google.com/p/android/issues/detail?id=176673\">see here</a>.</p>\n\n<p>I tried activating <strong><em>\"smooth scrolling\"</em></strong> through java code. It seems like if I scroll far enough that the imageview isn't visible anymore, fling gestures then are recognized. </p>\n\n<p><strong>TLDR:</strong> Why does the fling gesture not work as long as the imageview is visible ?\nMy XML Code looks like this:</p>\n\n<pre><code>    &lt;android.support.design.widget.CoordinatorLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:fitsSystemWindows=\"true\"&gt;\n\n    &lt;android.support.design.widget.AppBarLayout\n        android:id=\"@+id/profile_app_bar_layout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\"\n        android:fitsSystemWindows=\"true\"&gt;\n\n        &lt;android.support.design.widget.CollapsingToolbarLayout\n            android:id=\"@+id/profile_collapsing_toolbar_layout\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            app:layout_scrollFlags=\"scroll|exitUntilCollapsed\"\n            app:contentScrim=\"?attr/colorPrimary\"\n            app:expandedTitleMarginStart=\"48dp\"\n            app:expandedTitleMarginEnd=\"64dp\"\n            android:fitsSystemWindows=\"true\"&gt;\n\n            &lt;ImageView\n                android:id=\"@+id/image\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"420dp\"\n                android:scaleType=\"centerCrop\"\n                android:fitsSystemWindows=\"true\"\n                android:src=\"@drawable/headerbg\"\n                android:maxHeight=\"192dp\"\n\n                app:layout_collapseMode=\"parallax\"/&gt;\n\n            &lt;android.support.v7.widget.Toolbar\n                android:id=\"@+id/toolbar\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"?attr/actionBarSize\"\n                app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\n                app:layout_collapseMode=\"pin\" /&gt;\n\n        &lt;/android.support.design.widget.CollapsingToolbarLayout&gt;\n\n    &lt;/android.support.design.widget.AppBarLayout&gt;\n\n    &lt;android.support.design.widget.FloatingActionButton\n        android:id=\"@+id/fab\"\n        app:layout_anchor=\"@id/profile_app_bar_layout\"\n        app:layout_anchorGravity=\"bottom|right|end\"\n        android:layout_height=\"@dimen/fab_size_normal\"\n        android:layout_width=\"@dimen/fab_size_normal\"\n        app:elevation=\"2dp\"\n        app:pressedTranslationZ=\"12dp\"\n        android:layout_marginRight=\"8dp\"\n        android:layout_marginEnd=\"8dp\"/&gt;\n\n    &lt;android.support.v4.widget.NestedScrollView\n        android:id=\"@+id/profile_content_scroll\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:clipToPadding=\"false\"\n        app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n        android:layout_gravity=\"fill_vertical\"\n        android:minHeight=\"192dp\"\n        android:overScrollMode=\"ifContentScrolls\"\n        &gt;\n\n        &lt;RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"&gt;\n\n            &lt;TextView\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"@string/LoremIpsum\"/&gt;\n\n        &lt;/RelativeLayout&gt;\n\n    &lt;/android.support.v4.widget.NestedScrollView&gt;\n\n&lt;/android.support.design.widget.CoordinatorLayout&gt;\n</code></pre>\n", "tags": ["java", "android", "xml", "collapsingtoolbarlayout"], "title": "CollapsingToolbarLayout doesn&#39;t recognize scroll fling", "answer_count": 1, "creation_date": 1438630981, "score": 66, "link": "http://stackoverflow.com/questions/31795483/collapsingtoolbarlayout-doesnt-recognize-scroll-fling", "answers": [{"body": "<p><a href=\"http://stackoverflow.com/a/32454407/2281718\">This answer</a> solved this problem for me. Create a custom <code>AppBarLayout.Behavior</code> like this:</p>\n\n<pre><code>public final class FlingBehavior extends AppBarLayout.Behavior {\n    private static final int TOP_CHILD_FLING_THRESHOLD = 3;\n    private boolean isPositive;\n\n    public FlingBehavior() {\n    }\n\n    public FlingBehavior(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    @Override\n    public boolean onNestedFling(CoordinatorLayout coordinatorLayout, AppBarLayout child, View target, float velocityX, float velocityY, boolean consumed) {\n        if (velocityY &gt; 0 &amp;&amp; !isPositive || velocityY &lt; 0 &amp;&amp; isPositive) {\n            velocityY = velocityY * -1;\n        }\n        if (target instanceof RecyclerView &amp;&amp; velocityY &lt; 0) {\n            final RecyclerView recyclerView = (RecyclerView) target;\n            final View firstChild = recyclerView.getChildAt(0);\n            final int childAdapterPosition = recyclerView.getChildAdapterPosition(firstChild);\n            consumed = childAdapterPosition &gt; TOP_CHILD_FLING_THRESHOLD;\n        }\n        return super.onNestedFling(coordinatorLayout, child, target, velocityX, velocityY, consumed);\n    }\n\n    @Override\n    public void onNestedPreScroll(CoordinatorLayout coordinatorLayout, AppBarLayout child, View target, int dx, int dy, int[] consumed) {\n        super.onNestedPreScroll(coordinatorLayout, child, target, dx, dy, consumed);\n        isPositive = dy &gt; 0;\n    }\n}\n</code></pre>\n\n<p>and add it to the <code>AppBarLayout</code> like this:</p>\n\n<pre><code>&lt;android.support.design.widget.AppBarLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        ...\n        app:layout_behavior=\"com.example.test.FlingBehavior\"&gt;\n</code></pre>\n", "title": "CollapsingToolbarLayout doesn&#39;t recognize scroll fling", "answer_id": 33540492, "link": "http://stackoverflow.com/questions/31795483/collapsingtoolbarlayout-doesnt-recognize-scroll-fling/33540492#33540492", "tags": ["java", "android", "xml", "collapsingtoolbarlayout"]}], "question_id": 31795483}, {"body": "<p>I am confused to understand after executing <code>m1 = null;</code> <code>m2 = null;</code>. How many objects will be eligible for garbage collection?</p>\n\n<pre><code>public class MyTest {\n    MyTest m;\n\n    void show() {\n        System.out.println(\"Hello this is show method.\");\n    }\n\n    public static void main(String args[]) {\n        MyTest m1 = new MyTest();\n        MyTest m2 = new MyTest();\n        MyTest m3 = new MyTest();\n        m1.m = m2;\n        m2.m = m3;\n        m3.m = m1;\n        m1 = null;\n        m2 = null;\n        // Question here: How many objects will be eligible for garbage collection?\n    }\n}\n</code></pre>\n", "tags": ["java", "garbage-collection"], "title": "How many objects will be eligible for garbage collection after executing &quot;m1=null; m2=null;&quot;?", "answer_count": 4, "creation_date": 1445428464, "score": 64, "link": "http://stackoverflow.com/questions/33258627/how-many-objects-will-be-eligible-for-garbage-collection-after-executing-m1-nul", "answers": [{"body": "<p>None as they are still all reachable through the circular reference you build there through <code>m3</code></p>\n", "title": "How many objects will be eligible for garbage collection after executing &quot;m1=null; m2=null;&quot;?", "answer_id": 33258661, "link": "http://stackoverflow.com/questions/33258627/how-many-objects-will-be-eligible-for-garbage-collection-after-executing-m1-nul/33258661#33258661", "tags": ["java", "garbage-collection"]}, {"body": "<p>Zero.</p>\n\n<p>Object reference diagram looks like this:</p>\n\n<p><a href=\"http://i.stack.imgur.com/gcJai.png\"><img src=\"http://i.stack.imgur.com/gcJai.png\" alt=\"Circular\"></a></p>\n\n<p>You can see that the reference is circular. A reference from <code>main</code> to <code>m3</code> keeps the <code>m3</code> object alive. In turn, <code>m3</code> keeps alive <code>m1</code>, which keeps <code>m2</code> from GC.</p>\n\n<p>Note that if you set <code>m3</code> to <code>null</code>, all three objects would become eligible for GC at once, despite circular references existing for each one of them. GC is smart enough to figure out that all references are coming from GC-eligible objects, and collect all three.</p>\n", "title": "How many objects will be eligible for garbage collection after executing &quot;m1=null; m2=null;&quot;?", "answer_id": 33258740, "link": "http://stackoverflow.com/questions/33258627/how-many-objects-will-be-eligible-for-garbage-collection-after-executing-m1-nul/33258740#33258740", "tags": ["java", "garbage-collection"]}, {"body": "<p>Voila! <em>GC</em> will collect nothing here! Let's see what actually is going on here. When you created three objects of <code>m1</code>, <code>m2</code> and <code>m3</code> of <code>MyTest</code>, the object was created like below (say the object reference id starts from 410):</p>\n\n<pre><code>m1    MyTest  (id=410)\n    m    null\nm2    MyTest  (id=412)\n    m    null\nm3    MyTest  (id=414)\n    m    null\n</code></pre>\n\n<p>When you initialize</p>\n\n<pre><code>m1.m = m2;\nm2.m = m3;\nm3.m = m1;\n</code></pre>\n\n<p>The objects are now looks like:</p>\n\n<pre><code>m1    MyTest  (id=410)\n    m    MyTest  (id=412)\nm2    MyTest  (id=412)\n    m    MyTest  (id=414)\nm3    MyTest  (id=414)\n    m    MyTest  (id=410)\n        m    MyTest  (id=412)\n            m    MyTest  (id=414)\n                m    MyTest  (id=410)\n                    .\n                    .\n                    . (This is circular)\n</code></pre>\n\n<p>But after you reinitialized <code>m1</code> and <code>m2</code> to <code>null</code>, the objects look like:</p>\n\n<pre><code>m1    null\nm2    null\nm3    MyTest  (id=414)\n    m    MyTest  (id=410)\n        m    MyTest  (id=412)\n            m    MyTest  (id=414)\n                m    MyTest  (id=410)\n                .\n                .\n                .\n</code></pre>\n\n<p>Look, <code>m1</code> and <code>m2</code> are <code>null</code> now, but their references are still alive in <code>m3</code>!</p>\n", "title": "How many objects will be eligible for garbage collection after executing &quot;m1=null; m2=null;&quot;?", "answer_id": 33259114, "link": "http://stackoverflow.com/questions/33258627/how-many-objects-will-be-eligible-for-garbage-collection-after-executing-m1-nul/33259114#33259114", "tags": ["java", "garbage-collection"]}, {"body": "<p>Potentially all 3 of them. No variables are referenced after the <code>//</code> marker, so the optimizer is within its rights to drop them off the frame at this point.</p>\n", "title": "How many objects will be eligible for garbage collection after executing &quot;m1=null; m2=null;&quot;?", "answer_id": 33263384, "link": "http://stackoverflow.com/questions/33258627/how-many-objects-will-be-eligible-for-garbage-collection-after-executing-m1-nul/33263384#33263384", "tags": ["java", "garbage-collection"]}], "question_id": 33258627}, {"body": "<h2>Background</h2>\n\n<p>On Android Marshmallow, Google has completely removed the support of Apache HTTP client (link <a href=\"http://developer.android.com/preview/behavior-changes.html#behavior-apache-http-client\"><strong>here</strong></a>) because it doesn't have good performance compared to the alternatives.</p>\n\n<p>This might also be the cause for so many apps crashing on Android Marshmallow.</p>\n\n<h2>The problem</h2>\n\n<p>Google allows you to still use this API, just not as a built in one, by adding this line to the gradle file:</p>\n\n<pre><code>useLibrary 'org.apache.http.legacy'\n</code></pre>\n\n<p>So, this is what I did:</p>\n\n<pre><code>dependencies {\n    classpath 'com.android.tools.build:gradle:1.3.0'\n}\n</code></pre>\n\n<p>And:</p>\n\n<pre><code>android {\n    compileSdkVersion 'android-MNC'\n    buildToolsVersion \"23.0.0 rc3\"\n    useLibrary 'org.apache.http.legacy'\n\n    defaultConfig {\n        applicationId \"com.example.user.androidmtest\"\n        minSdkVersion 'MNC'\n        targetSdkVersion 'MNC'\n        versionCode 1\n        versionName \"1.0\"\n    }\n</code></pre>\n\n<p>When I tried it, it compiled fine (no errors being shown, and I could run the proof-of-concept app, as it doesn't have any special code), but when I tried using some of the classes that I know that are part of the old API (like \"HttpClient\" class), I see that it doesn't allow me to do so.</p>\n\n<p>I know it's not recommended to use this solution, but we must have the app ready to work there at least temporarily, till we work 100% on all of the things that should change for Android Marshmallow, and we don't want surprises in the form of crashes.</p>\n\n<p>Here's a screenshot:</p>\n\n<p><a href=\"http://i.stack.imgur.com/0IsR2.png\"><img src=\"http://i.stack.imgur.com/0IsR2.png\" alt=\"enter image description here\"></a></p>\n\n<h2>The question</h2>\n\n<p>Why does it occur? Did I use it correctly? </p>\n\n<hr>\n\n<p>EDIT: reported about this issue here:</p>\n\n<p><a href=\"https://code.google.com/p/android/issues/detail?id=181474\">https://code.google.com/p/android/issues/detail?id=181474</a></p>\n", "tags": ["java", "android", "android-gradle", "android-6.0-marshmallow"], "title": "How to use the legacy Apache HTTP client on Android Marshmallow?", "answer_count": 13, "creation_date": 1437999774, "score": 64, "link": "http://stackoverflow.com/questions/31653002/how-to-use-the-legacy-apache-http-client-on-android-marshmallow", "answers": [{"body": "<p>Perfect solution here by running a simple file path check.\nby running </p>\n\n<pre><code>   android {\n    compileSdkVersion 'android-MNC'\n    buildToolsVersion \"23.0.0 rc3\"\n    useLibrary 'org.apache.http.legacy'\n\n    defaultConfig {\n        applicationId \"com.example.user.androidmtest\"\n        minSdkVersion 'MNC'\n        targetSdkVersion 'MNC'\n        versionCode 1\n        versionName \"1.0\"\n\n    }\n\n        getBootClasspath().each{File file -&gt;\n           println file.absolutePath\n        }\n    }\n}\n</code></pre>\n\n<p>You will get something like below</p>\n\n<blockquote>\n  <p>/Users/\"yourname\"/Development/android-sdk-macosx/platforms/android-MNC/android.jar\n  /Users/\"yourname\"/Development/android-sdk-macosx/platforms/android-MNC/optional/org.apache.http.legacy.jar</p>\n</blockquote>\n\n<p>So there you go, the jar is there.For some reason it didn't get added to the project. but you can always add it manually I guess.</p>\n", "title": "How to use the legacy Apache HTTP client on Android Marshmallow?", "answer_id": 31824719, "link": "http://stackoverflow.com/questions/31653002/how-to-use-the-legacy-apache-http-client-on-android-marshmallow/31824719#31824719", "tags": ["java", "android", "android-gradle", "android-6.0-marshmallow"]}, {"body": "<p>Android Studio was complaining that <code>org.apache.http</code> classes like</p>\n\n<pre><code>org.apache.http.NameValuePair\norg.apache.http.client.utils.URLEncodedUtils\n</code></pre>\n\n<p>were missing.</p>\n\n<p>So I added <code>org.apache.http.legacy.jar</code> which is in\n<code>Android/Sdk/platforms/android-23/optional</code> folder to to <code>app/libs</code> </p>\n\n<p>I also added this line to my <code>app.gradle</code> file</p>\n\n<pre><code>compile files('libs/org.apache.http.legacy.jar')\n</code></pre>\n\n<p>But if you're using more libraries, you can use this way </p>\n\n<pre><code>compile fileTree(dir: 'libs', include: ['*.jar'])\n</code></pre>\n\n<p>This resolved all my errors that were caused because google removed support of Apache HTTP client.</p>\n", "title": "How to use the legacy Apache HTTP client on Android Marshmallow?", "answer_id": 32066606, "link": "http://stackoverflow.com/questions/31653002/how-to-use-the-legacy-apache-http-client-on-android-marshmallow/32066606#32066606", "tags": ["java", "android", "android-gradle", "android-6.0-marshmallow"]}, {"body": "<p>useLibrary 'org.apache.http.legacy' did not work for me until I upgraded the Gradle tools version in my main build.gradle file of my Android Studio project, as follows:</p>\n\n<pre><code>dependencies {\n    classpath 'com.android.tools.build:gradle:1.3.0'\n}\n</code></pre>\n", "title": "How to use the legacy Apache HTTP client on Android Marshmallow?", "answer_id": 32190106, "link": "http://stackoverflow.com/questions/31653002/how-to-use-the-legacy-apache-http-client-on-android-marshmallow/32190106#32190106", "tags": ["java", "android", "android-gradle", "android-6.0-marshmallow"]}, {"body": "<p>Legacy Apache library located in</p>\n\n<pre><code>[ANDROID_SDK]\\platforms\\android-23\\optional\\org.apache.http.legacy.jar \n</code></pre>\n\n<p>So you can copy it inside you project <strong>libs</strong> or just use</p>\n\n<pre><code>compile files(\"${android.getSdkDirectory().getAbsolutePath()}\" + File.separator + \"platforms\" + File.separator + \"android-23\" + File.separator + \"optional\" + File.separator + \"org.apache.http.legacy.jar\")\n</code></pre>\n\n<p>in your <strong>/app/build.gradle</strong></p>\n", "title": "How to use the legacy Apache HTTP client on Android Marshmallow?", "answer_id": 32626803, "link": "http://stackoverflow.com/questions/31653002/how-to-use-the-legacy-apache-http-client-on-android-marshmallow/32626803#32626803", "tags": ["java", "android", "android-gradle", "android-6.0-marshmallow"]}, {"body": "<p>The answer above just helps the debug builds to run, and release builds that are utilizing gradle.</p>\n\n<p>Insert this inside the application tag on the manifest file, on all project instances that uses the legacy apache classes:</p>\n\n<pre><code>&lt;uses-library android:name=\"org.apache.http.legacy\" android:required=\"false\" /&gt;\n</code></pre>\n\n<p>This helps for those who are still using Eclipse and ant scripts during compile.</p>\n", "title": "How to use the legacy Apache HTTP client on Android Marshmallow?", "answer_id": 33512294, "link": "http://stackoverflow.com/questions/31653002/how-to-use-the-legacy-apache-http-client-on-android-marshmallow/33512294#33512294", "tags": ["java", "android", "android-gradle", "android-6.0-marshmallow"]}, {"body": "<p>I know this is silly reason but at list try it... </p>\n\n<p>I experienced this problem recently, and it is caused by the path length restriction I think it\u00b4s 256 characters maximum. </p>\n\n<p>Relocate your Project and the build will succeed.Hope this work for you.</p>\n", "title": "How to use the legacy Apache HTTP client on Android Marshmallow?", "answer_id": 33970012, "link": "http://stackoverflow.com/questions/31653002/how-to-use-the-legacy-apache-http-client-on-android-marshmallow/33970012#33970012", "tags": ["java", "android", "android-gradle", "android-6.0-marshmallow"]}, {"body": "<p>simple way to solve this issue is C:\\Users\\usrename\\AppData\\Local\\Android\\sdk\\platforms\nhere delete your android-23 and from sdk manager update you api 23 again it will solve your issue </p>\n", "title": "How to use the legacy Apache HTTP client on Android Marshmallow?", "answer_id": 34286571, "link": "http://stackoverflow.com/questions/31653002/how-to-use-the-legacy-apache-http-client-on-android-marshmallow/34286571#34286571", "tags": ["java", "android", "android-gradle", "android-6.0-marshmallow"]}, {"body": "<p>First you have to check that in your libs folder</p>\n\n<p><a href=\"http://i.stack.imgur.com/V6B4y.png\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/V6B4y.png\" alt=\"Make sure in Libs Folder Check that apache library\"></a></p>\n\n<pre><code>Then add into your gradle file like this \n\n    android {\n        compileSdkVersion 23\n        buildToolsVersion '23.0.2'\n\n        defaultConfig {\n            applicationId \"info.tranetech.laundry\"\n            minSdkVersion 15\n            targetSdkVersion 23\n            versionCode 1\n            versionName \"1.0\"\n        }\n        buildTypes {\n            release {\n                minifyEnabled false\n                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n            }\n        }\n    }\n    android {\n        useLibrary 'org.apache.http.legacy'\n    }\n    dependencies {\n        compile fileTree(dir: 'libs', include: ['*.jar'])\n        compile 'com.android.support:appcompat-v7:23.0.1\n        compile 'com.android.support:design:23.0.1\n        testCompile 'junit:junit:4.12'\n        compile files('libs/android-async-http-1.4.4.jar')\n        compile 'com.google.android.gms:play-services:8.4.0'\n    }\n</code></pre>\n\n<p><a href=\"http://i.stack.imgur.com/6VxrE.png\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/6VxrE.png\" alt=\"This Is my gradle file\"></a></p>\n\n<p><a href=\"http://i.stack.imgur.com/p2q5o.png\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/p2q5o.png\" alt=\"Also check external library\"></a></p>\n", "title": "How to use the legacy Apache HTTP client on Android Marshmallow?", "answer_id": 34741246, "link": "http://stackoverflow.com/questions/31653002/how-to-use-the-legacy-apache-http-client-on-android-marshmallow/34741246#34741246", "tags": ["java", "android", "android-gradle", "android-6.0-marshmallow"]}, {"body": "<p>Enable this in sdk/platforms/android-23/optional/optional.json</p>\n\n<pre><code>[\n  {\n    \"name\": \"org.apache.http.legacy\",\n    \"jar\": \"org.apache.http.legacy.jar\",\n    \"manifest\": false\n  }\n]\n</code></pre>\n", "title": "How to use the legacy Apache HTTP client on Android Marshmallow?", "answer_id": 35645731, "link": "http://stackoverflow.com/questions/31653002/how-to-use-the-legacy-apache-http-client-on-android-marshmallow/35645731#35645731", "tags": ["java", "android", "android-gradle", "android-6.0-marshmallow"]}, {"body": "<p>Remove</p>\n\n<pre><code>useLibrary 'org.apache.http.legacy' \n</code></pre>\n\n<p>from the build.gradle and I also added this line to my app.gradle file</p>\n\n<pre><code>compile files('libs/org.apache.http.legacy.jar')\n</code></pre>\n\n<p>But if you're using more libraries, you can use this way</p>\n\n<pre><code>compile fileTree(dir: 'libs', include: ['*.jar'])\n</code></pre>\n\n<p>CoPLaS answer fixed my problems.</p>\n", "title": "How to use the legacy Apache HTTP client on Android Marshmallow?", "answer_id": 36001537, "link": "http://stackoverflow.com/questions/31653002/how-to-use-the-legacy-apache-http-client-on-android-marshmallow/36001537#36001537", "tags": ["java", "android", "android-gradle", "android-6.0-marshmallow"]}, {"body": "<blockquote>\n  <p>How to use the legacy Apache HTTP client on Android Marshmallow?</p>\n</blockquote>\n\n<p>To continue using Apache HTTP classes for API 23+:</p>\n\n<p>First of all, be sure to add the gradle dependencie into the <code>build.gradle</code> f</p>\n\n<pre><code>buildscript {\n\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.0.0'\n    }\n}\n</code></pre>\n\n<p>Then add the reference inside <code>build.gradle</code> of your project:</p>\n\n<pre><code>android {\n    compileSdkVersion 23\n    buildToolsVersion \"23.0.0\"\n    useLibrary 'org.apache.http.legacy'\n    ...\n}\n</code></pre>\n", "title": "How to use the legacy Apache HTTP client on Android Marshmallow?", "answer_id": 37039624, "link": "http://stackoverflow.com/questions/31653002/how-to-use-the-legacy-apache-http-client-on-android-marshmallow/37039624#37039624", "tags": ["java", "android", "android-gradle", "android-6.0-marshmallow"]}, {"body": "<p>After many frustrating hours, the following worked: </p>\n\n<p><strong>1. Locate the apache jar.</strong>\nIt should reside somewhere like:</p>\n\n<pre><code>C:\\Users\\&lt;yourname&gt;\\AppData\\Local\\Android\\sdk\\platforms\\android-23\\optional\n</code></pre>\n\n<p><strong>2. Copy</strong>  <code>org.apache.http.legacy.jar</code> <strong>to your libs folder.</strong></p>\n\n<p>Either right click on libs -> paste , or use your file explorer to navigate to the libs folder of your project and paste.</p>\n\n<p>If you don't have a libs folder, as I did, make a new project and import all relevant files into their respective places.</p>\n\n<p><strong>3. Click <code>ok</code></strong>\n<a href=\"http://i.stack.imgur.com/9bhFX.png\" rel=\"nofollow\">see this</a></p>\n\n<p><strong>4. Most important step: Right click on the apache folder and select <code>Add As Library</code>.</strong>\n<a href=\"http://i.stack.imgur.com/vMuLD.png\" rel=\"nofollow\">see this</a></p>\n\n<p>Hope this helps someone get on with their life.</p>\n", "title": "How to use the legacy Apache HTTP client on Android Marshmallow?", "answer_id": 37218516, "link": "http://stackoverflow.com/questions/31653002/how-to-use-the-legacy-apache-http-client-on-android-marshmallow/37218516#37218516", "tags": ["java", "android", "android-gradle", "android-6.0-marshmallow"]}, {"body": "<p>Try to avoid using apache legacy - there is no real reason for it. Legacy library is old, has bugs and lucks many optimizations. You should use newest versions of apache's libraries like I described in this answer: <a href=\"http://stackoverflow.com/a/37623038/1727132\">http://stackoverflow.com/a/37623038/1727132</a></p>\n", "title": "How to use the legacy Apache HTTP client on Android Marshmallow?", "answer_id": 37646428, "link": "http://stackoverflow.com/questions/31653002/how-to-use-the-legacy-apache-http-client-on-android-marshmallow/37646428#37646428", "tags": ["java", "android", "android-gradle", "android-6.0-marshmallow"]}], "question_id": 31653002}, {"body": "<p>im using Android Studio\nwhy every time I create a new project always comes up <code>Error:(23, 17) Failed to resolve: junit:junit:4.12?</code></p>\n\n<p>when I remove        <code>testCompile 'junit:junit:4.12'</code>\napplications in dependencies no problem anymore...</p>\n\n<p><strong>build.gradle</strong></p>\n\n<pre><code>apply plugin: 'com.android.application'\n\nandroid {\n    compileSdkVersion 23\n    buildToolsVersion \"23.0.1\"\n\n    defaultConfig {\n        applicationId \"com.okedroid.myapplication\"\n        minSdkVersion 17\n        targetSdkVersion 23\n        versionCode 1\n        versionName \"1.0\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    testCompile 'junit:junit:4.12'\n    compile 'com.android.support:appcompat-v7:23.0.1'\n}\n</code></pre>\n", "tags": ["java", "android", "junit"], "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_count": 28, "creation_date": 1441961012, "score": 63, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12", "answers": [{"body": "<p>I had the same problem. Solved by adding url for missing repository:</p>\n\n<pre><code>android {\n    [...]\n    repositories {\n        maven { url 'http://repo1.maven.org/maven2' }\n    }\n    [...]\n}\n</code></pre>\n\n<p>That's it.</p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 32566057, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/32566057#32566057", "tags": ["java", "android", "junit"]}, {"body": "<p>Just remove the \"testCompile 'junit:junit:4.12'\" from build.gradle file:</p>\n\n<pre><code>dependencies {\ncompile fileTree(dir: 'libs', include: ['*.jar'])\ntestCompile 'junit:junit:4.12'//remove this line and sync again... worked for me\ncompile 'com.android.support:appcompat-v7:23.0.1'\n }\n</code></pre>\n\n<p>worked for me and I am Happy! :) </p>\n\n<p><em>Remember that this is not the actual answer of this question. I mentioned this because it works when you remove above lines.</em></p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 32925834, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/32925834#32925834", "tags": ["java", "android", "junit"]}, {"body": "<h1>Remove the line <code>testCompile 'junit:junit:4.12'</code></h1>\n\n<pre><code>dependencies {\n  compile fileTree(dir: 'libs', include: ['*.jar'])\n  compile 'com.android.support:appcompat-v7:23.0.1'\n }\n</code></pre>\n\n<p>After that sync the project again.</p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 33142343, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/33142343#33142343", "tags": ["java", "android", "junit"]}, {"body": "<p>add repository in youe build.gradle file</p>\n\n<pre><code>repositories {\n    maven { url 'http://repo1.maven.org/maven2' }\n}\n</code></pre>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 33413064, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/33413064#33413064", "tags": ["java", "android", "junit"]}, {"body": "<p>I received this error after creating a new project. In the build.gradle file, I had this:  </p>\n\n<pre><code>jcenter()\n</code></pre>\n\n<p>I change it to the following and the error went away:  </p>\n\n<pre><code>jcenter {\n    url \"http://jcenter.bintray.com/\"\n}\n</code></pre>\n\n<p>I think this is because I am behind a firewall and specifying the url like so changes it from https to http</p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 33575640, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/33575640#33575640", "tags": ["java", "android", "junit"]}, {"body": "<p>Probably you are behind proxy. Happened to me, used my mobile tethering (no proxy) rebuild project and error disappeared. Returned to original connection (with proxy) and rebuild with no errors.</p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 33626993, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/33626993#33626993", "tags": ["java", "android", "junit"]}, {"body": "<p>It's not able to get junit library.</p>\n\n<pre><code>repositories {\n        maven { url 'http://repo1.maven.org/maven2' }\n    }\n</code></pre>\n\n<p>After adding above line inside android block in build.gradle file, it resolved problem.\nThis can be because your Android studio doesn't have junit library.</p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 33690981, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/33690981#33690981", "tags": ["java", "android", "junit"]}, {"body": "<p>Simply try to compile and run you project while having active internet connection. </p>\n\n<p>it worked for me in Android studio 1.5 Ubuntu 15.04</p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 34111612, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/34111612#34111612", "tags": ["java", "android", "junit"]}, {"body": "<pre><code>dependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n       compile 'com.android.support:appcompat-v7:23.1.1'\n}\n</code></pre>\n\n<p><strong>Note: Remove testCompile 'junit:junit:4.12' line has been solved my problem.</strong></p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 34261690, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/34261690#34261690", "tags": ["java", "android", "junit"]}, {"body": "<p>CHANGE your build.gradle like with this, work fine for me:</p>\n\n<pre><code>apply plugin: 'com.android.application'\n\nandroid {\n    compileSdkVersion 23\n    buildToolsVersion \"22.0.1\"\n    repositories {\n        maven { url 'http://repo1.maven.org/maven2' }\n    }\n    defaultConfig {\n        applicationId \"YOUR PACKAGE NAME\"\n        minSdkVersion 15\n        targetSdkVersion 23\n        versionCode 1\n        versionName \"1.0\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    testCompile 'junit:junit:4.12'\n    compile 'com.android.support:appcompat-v7:23.0.0'\n}\n</code></pre>\n\n<p>added </p>\n\n<pre><code>    repositories {\n        maven { url 'http://repo1.maven.org/maven2' }\n    }\n</code></pre>\n\n<p>to <code>android</code></p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 34460337, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/34460337#34460337", "tags": ["java", "android", "junit"]}, {"body": "<p>It might be it is not able to get it at the specified online location for the jar.check this part of build.gradle (gradle file for project). you might not be having access to the location(firewall or other issues)</p>\n\n<pre><code>repositories{\n//some location like jcenter() or maven{.some location  }\n}\n</code></pre>\n\n<p>Do this:\ndownload the jar \nadd this line inside the </p>\n\n<pre><code>repositories {\n        //previous codes untouched\n        flatDir {\n            dirs 'location to jar'\n        }\n}\n</code></pre>\n\n<p>hope that works ;)</p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 34527001, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/34527001#34527001", "tags": ["java", "android", "junit"]}, {"body": "<p>Probably your gradle is incomplete, I recommend you add the following   </p>\n\n<pre><code>android{\n    repositories {\n    maven { url 'http://repo1.maven.org/maven2' }\n}\n</code></pre>\n\n<p>but in some cases won't work , you can completely delete it from you dependencies in your gradle.</p>\n\n<p><strong>I think it will be OK if you reinstall the android studio with the deleting gradle folder condition which is in user folder <code>.gradle</code></strong></p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 35372793, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/35372793#35372793", "tags": ["java", "android", "junit"]}, {"body": "<p>Go to File -> Project Structure. Following window will open:</p>\n\n<p><a href=\"http://i.stack.imgur.com/5WvS3.png\"><img src=\"http://i.stack.imgur.com/5WvS3.png\" alt=\"enter image description here\"></a></p>\n\n<p>From there:</p>\n\n<ol>\n<li>remove the junit library (select junit and press \"-\" button below ) and</li>\n<li>add it again (select \"+\" button below, select \"library dep.\", search for \"junit\", press OK ). Press OK to apply changes. After around 30 seconds your gradle sync should work fine.</li>\n</ol>\n\n<p>Hope it works for you too :D </p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 35503936, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/35503936#35503936", "tags": ["java", "android", "junit"]}, {"body": "<p>Try this:</p>\n\n<pre><code>dependencies {\n    compile fileTree(include: ['*.jar'], dir: 'libs')\n    //testCompile 'junit:junit:4.12'\n    compile 'com.android.support:appcompat-v7:23.3.0'\n    compile 'com.android.support:design:23.3.0'\n    compile 'com.google.code.gson:gson:2.2.4'\n}\n</code></pre>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 36558003, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/36558003#36558003", "tags": ["java", "android", "junit"]}, {"body": "<ul>\n<li>1\u00ba Be sure you are not behind a proxy! </li>\n<li>2\u00ba If you configured your Android Strudio to work whit proxy be sure to\ndisable that option under the Android Studio preferences </li>\n<li>3\u00ba Go to gradle.properties under Android view in Android Studio and\ndelete all proxy configuration</li>\n<li>4\u00ba Sync your gradle now</li>\n<li>5\u00ba Enjoy coding!</li>\n</ul>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 36666119, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/36666119#36666119", "tags": ["java", "android", "junit"]}, {"body": "<p>Go to File -> Project Structure -> dependency\nThere you will find ->  junit:unit:4.12</p>\n\n<p>On the right hand side ..select compile from the drop down.\nSimple.. its done.</p>\n\n<p>Reference Image: <a href=\"http://i.stack.imgur.com/5WvS3.png\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/5WvS3.png\" alt=\"http://i.stack.imgur.com/5WvS3.png\"></a></p>\n\n<p>Reds'\nVV</p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 36844331, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/36844331#36844331", "tags": ["java", "android", "junit"]}, {"body": "<p>If you are behind a proxy. Android Studio will add proxy for http to Gradle, but will not for https.\nAdd proxy settings for https to gradle.properties</p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 37022559, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/37022559#37022559", "tags": ["java", "android", "junit"]}, {"body": "<p>If you're behind a proxy server, just add your proxy settings in <strong>gradle.properties</strong> </p>\n\n<pre><code>systemProp.http.proxyHost=x.xx.xx.x\n\nsystemProp.http.proxyPort=xxxx\n\nsystemProp.https.proxyHost=x.xx.xx.x\n\nsystemProp.https.proxyPort=xxxx\n</code></pre>\n\n<p>It worked for me.</p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 37372295, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/37372295#37372295", "tags": ["java", "android", "junit"]}, {"body": "<p>Here is what I did to solve the same problem. I am behind a firewall, which is same issue as yours I suppose.\nSo I had tried removing the </p>\n\n<pre><code>testCompile 'junit:junit:4.12' line \n</code></pre>\n\n<p>but that didnt work for me.\nI tried adding below lines of code:</p>\n\n<pre><code>repositories {\n    maven { url 'http://repo1.maven.org/maven2' }\n}\n</code></pre>\n\n<p>Even that did not work for me.</p>\n\n<p>I tried removing (-) and readding (+) Junit4.12 from the library dependencies under Module Settings.\nStill that did not work for me.</p>\n\n<p>Tried syncing and rebuilding project several times. Still did not work for me.</p>\n\n<p>Finally what I did was to manually download the Junit4.12.jar file from mvnrepository website. I put this jar file in the Androids Workspace under the Project folder inside libs folder.\nThen go to Module Settings > Dependencies Tab > (+) > File Dependency >\nunder Sleect path window, expand the 'libs' folder and you will find the Jar file you copied inside there.\nSelect the File and click 'OK'\nNow remove the previous version of junit4.12 from the list of dependencies.</p>\n\n<p>You should have one entry <code>\"libs\\junit-4.12.jar\"</code> in the Dependencies list.\nNow click 'OK'.</p>\n\n<p>Now Gradle will rebuild the project and you should be good to go.</p>\n\n<p>Hope this helps!</p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 37483061, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/37483061#37483061", "tags": ["java", "android", "junit"]}, {"body": "<p>It happens HTTPS is blocked by Proxy.\nTry to change from default jcenter (which uses HTTPS) into HTTP. <br></p>\n\n<p>Before</p>\n\n<pre><code>repositories {\n     jcenter()\n}\n</code></pre>\n\n<p>After</p>\n\n<pre><code>repositories {\n    jcenter {\n        //Default one is HTTPS\n        url \"http://jcenter.bintray.com/\"\n    }\n}\n</code></pre>\n\n<p>Repeat the above step for allprojects.<br></p>\n\n<pre><code>allprojects {\n  repositories {\n    jcenter {\n        url \"http://jcenter.bintray.com/\"\n    }\n  }\n}\n</code></pre>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 37661064, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/37661064#37661064", "tags": ["java", "android", "junit"]}, {"body": "<p>My installation of Android Studio is completely offline. To resolve these kind of problems I have used the Process Monitor. It showed that a few files are missing within \"Android Studio\\gradle\\m2repository\".\nI have downloaded all files from</p>\n\n<ol>\n<li><a href=\"http://repo1.maven.org/maven2/junit/junit/4.12/\" rel=\"nofollow\">http://repo1.maven.org/maven2/junit/junit/4.12/</a></li>\n<li><a href=\"http://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/\" rel=\"nofollow\">http://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/</a></li>\n<li>repo1.maven.org/maven2/org/hamcrest/hamcrest-parent/1.3/\n(I can only post two links...;-))</li>\n</ol>\n\n<p>and copied these files in \"Android Studio\\gradle\\m2repository\". You have to create the structure below \"m2repository\" as it is below \"maven2\".\nMaybe there are more missing files, but at this time at least Gradle build is finished without errors.</p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 38110600, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/38110600#38110600", "tags": ["java", "android", "junit"]}, {"body": "<p><strong>if you faced this problem you can completely resolve it by changing :</strong></p>\n\n<p>build.gradle(project: ...)</p>\n\n<p><strong><em>replace this</em></strong></p>\n\n<pre><code>    buildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.0.0'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        mavenCentral()\n\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n</code></pre>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 38151747, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/38151747#38151747", "tags": ["java", "android", "junit"]}, {"body": "<p>I'll tryed everithing, but the only thing that helps me resolve the problem was delete the line </p>\n\n<pre><code>testCompile 'junit:junit:4.12'\n</code></pre>\n\n<p>from the app gradel.</p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 38216464, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/38216464#38216464", "tags": ["java", "android", "junit"]}, {"body": "<p><strong>Are you using proxy</strong>? If so, the problem can be in missing network configuration for <strong>https</strong> in your <code>gradle.properties</code> file. </p>\n\n<p>AndroidStudio puts automatically your default proxy settings to <code>gradle.properties</code> file in your project, but only for http and forgets https.</p>\n\n<p>So basically your <code>gradle.properties</code> file needs to contain both http and https config:</p>\n\n<pre><code>systemProp.http.proxyPassword=xxx\nsystemProp.http.proxyHost=xxx\nsystemProp.http.nonProxyHosts=xxx\nsystemProp.http.proxyUser=xxx\nsystemProp.http.proxyPort=xxx\n\nsystemProp.https.proxyPassword=xxx\nsystemProp.https.proxyHost=xxx\nsystemProp.https.nonProxyHosts=xxx\nsystemProp.https.proxyUser=xxx\nsystemProp.https.proxyPort=xxx\n</code></pre>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 38968688, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/38968688#38968688", "tags": ["java", "android", "junit"]}, {"body": "<p>Mostly this issue will come when ever you update your SDK, at the time of project creation Gradle build fails. If you add the <strong>maven</strong> and <strong>jcenter</strong> repositories to your <em>build.gradle(Module:app)</em> your problem will solved.</p>\n\n<pre><code>repositories {\n    maven { url 'http://repo1.maven.org/maven2' }\n    jcenter { url \"http://jcenter.bintray.com/\" }\n}\n</code></pre>\n\n<p>These are the two line you have to add after </p>\n\n<pre><code>apply plugin: 'com.android.application' \n</code></pre>\n\n<p><strong><em>This is how your code look like after adding those two lines</em></strong></p>\n\n<pre><code>apply plugin: 'com.android.application'\n\n repositories {\n        maven { url 'http://repo1.maven.org/maven2' }\n        jcenter { url \"http://jcenter.bintray.com/\" }\n    }\n\nandroid {\n    compileSdkVersion 23\n    buildToolsVersion \"23.0.1\"\n\n    defaultConfig {\n        applicationId \"com.okedroid.myapplication\"\n        minSdkVersion 17\n        targetSdkVersion 23\n        versionCode 1\n        versionName \"1.0\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n</code></pre>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 39025978, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/39025978#39025978", "tags": ["java", "android", "junit"]}, {"body": "<p>I had the same problem, but with another problem.</p>\n\n<p>My other problem was that the Gradle build was too slow!</p>\n\n<p>I resolved my problem by doing thisL</p>\n\n<p>If you do like mdew you need to this any time you're creating your project to do this</p>\n\n<p>So if you want to set default option to maven </p>\n\n<p>Do this: </p>\n\n<p>Go to the folder:</p>\n\n<pre><code>C:\\Program Files\\Android\\Android Studio\\plugins\\android\\lib\\templates\\gradle-projects\\NewAndroidProject\\root\n</code></pre>\n\n<p>Then open the <code>build.gradle.ftl</code> file with notepad++ or notepad\nand replace all <code>jcenter()</code> with <code>mavenCentral()</code>.</p>\n\n<p>EDIT: Why its going down voted? you don't like it?</p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 39060091, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/39060091#39060091", "tags": ["java", "android", "junit"]}, {"body": "<p>I was having same problem.</p>\n\n<ul>\n<li><p>1 option: Download junit 4.12.jar and copy it in your lib folder and restart android studio. Benefit u don't have to create any new project</p></li>\n<li><p>2 option: Create a new project having a internet connections and copy all the java and XML code in the newly created project. Benefit this problem will be solved permantly</p></li>\n</ul>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 39225612, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/39225612#39225612", "tags": ["java", "android", "junit"]}, {"body": "<p>Look through for many answers but nothing works. Fortunately had found the easy solution. No need to comment junit4.12 or delete it. The problem is here:</p>\n\n<pre><code>- androidTestCompile files('libs/junit-4.12.jar')\n</code></pre>\n\n<p>This part shows us the path to look for the file in the library in your's project. No idea why but for some reason by the default it is empty. <strong>In my case</strong> path is:\n <em>C:\\Users\\arzakhar\\AndroidStudioProjects\\MyApp\\app\\libs</em> \nSure you can delete this line in code <em>build.grandle(Module.app)</em> but you may need it later. Here is the solution:</p>\n\n<p>1 - download junit-4.12.jar or copy it from you Android Studio folder, normally it should be there. In my case, it was here: <em>C:\\Program Files\\Android\\Android Studio\\lib</em> to the directory mentioned above(to your project)</p>\n\n<p>2 - delete &amp; add\n<a href=\"http://i.stack.imgur.com/X4gBs.png\" rel=\"nofollow\">here you should re-enter the root to your junit-4.12.jar </a></p>\n\n<p>3 - rebuild</p>\n\n<p>4 - work hard</p>\n", "title": "Error:(23, 17) Failed to resolve: junit:junit:4.12", "answer_id": 39465448, "link": "http://stackoverflow.com/questions/32519219/error23-17-failed-to-resolve-junitjunit4-12/39465448#39465448", "tags": ["java", "android", "junit"]}], "question_id": 32519219}, {"body": "<p>Why should I write (as my collegue says):</p>\n\n<pre><code>import static org.apache.commons.lang.math.NumberUtils.INTEGER_ONE;\nif (myIntVariable == INTEGER_ONE) { ... }\n</code></pre>\n\n<p>instead of:</p>\n\n<pre><code>if (myIntVariable == 1) { ... }\n</code></pre>\n\n<p>?</p>\n\n<p>I know that the use of constants is recommended but I think the value of <code>NumberUtils.INTEGER_ONE</code> will never change! So I write <code>1</code>.</p>\n", "tags": ["java", "constants"], "title": "Morbid use of constants", "answer_count": 7, "creation_date": 1437121759, "score": 62, "link": "http://stackoverflow.com/questions/31471444/morbid-use-of-constants", "answers": [{"body": "<p>You may know whether it will never change, but I won't if I start editing your code...</p>\n\n<p>Basically it's a way of documenting your code <strong>in your actual code</strong>. The reason to use constants and examples like this is to avoid <a href=\"http://stackoverflow.com/questions/47882/what-is-a-magic-number-and-why-is-it-bad\">Magic Numbers in code and their disadvantages.</a></p>\n\n<p>This being said, you can use it to a point where it is not advantageous anymore and clutter inducing. I tend to do it for things that are used more than once or have the concept of being changed by me or someone else... or in simpler terms <strong>important</strong> values.</p>\n", "title": "Morbid use of constants", "answer_id": 31471517, "link": "http://stackoverflow.com/questions/31471444/morbid-use-of-constants/31471517#31471517", "tags": ["java", "constants"]}, {"body": "<p><code>org.apache.commons.lang.math.NumberUtils.INTEGER_ONE</code> it gives you a <code>final static Integer</code> object rather than primitive <code>int</code> 1, and as it is <code>final static</code> it acts as a constant and can be used in comparison of <code>Integer</code> objects because will always return same instance.</p>\n\n<p>So in the above scenario it might not look <em>fit</em> but somewhere if you are using it while comparison, it for sure has impact.</p>\n\n<p>Moreover, as much as we can, should prefer the use of constants over hardcoded beacuse:</p>\n\n<ol>\n<li>It can make your code easily maintainable. If any situation occurs in future for change, you can change only at a single place.</li>\n<li>The code looks cleaner &amp; more readable.</li>\n</ol>\n", "title": "Morbid use of constants", "answer_id": 31471520, "link": "http://stackoverflow.com/questions/31471444/morbid-use-of-constants/31471520#31471520", "tags": ["java", "constants"]}, {"body": "<p>You should not. The <code>INTEGER_ONE</code> name is no more meaningful than 1. If however this value has some other meaning (for example, month in the year), then using a constant (like <code>Calendar.FEBRUARY</code>) will make your code clearer.</p>\n\n<p>I can guess that this constant in Commons Math library was created in Java 1.4 when there were no Integer cache and autoboxing, so it had sense in terms that you may reuse the same <code>Integer</code> object (not primitive <code>int</code>) in different places to save memory. So it was added for performance reasons, not for code clarity. Now it's obsolete: even if you need an <code>Integer</code> object, you can use <code>Integer.valueOf(1)</code> or implicit autoboxing and get the cached one.</p>\n", "title": "Morbid use of constants", "answer_id": 31471530, "link": "http://stackoverflow.com/questions/31471444/morbid-use-of-constants/31471530#31471530", "tags": ["java", "constants"]}, {"body": "<p>Imagine that you have this </p>\n\n<pre><code>if (myIntVariable == 1) { ... }\n</code></pre>\n\n<p>But a few thousand times...</p>\n\n<p>And suddenly in needs to be a 2.</p>\n\n<p>What it easier for you to change?</p>\n\n<p>EDIT: Before downvoting, im answering from the perspective of the advantages of not using magic numbers, im not in any way (i thought this was inferable, come on people) advising to change the library constant.</p>\n", "title": "Morbid use of constants", "answer_id": 31471538, "link": "http://stackoverflow.com/questions/31471444/morbid-use-of-constants/31471538#31471538", "tags": ["java", "constants"]}, {"body": "<p>You should <em>not</em> write <code>INTEGER_ONE</code>! Neither should you write <code>1</code> (see exception below)!</p>\n\n<p>Why? A literal like <code>1</code> is called a <a href=\"https://en.wikipedia.org/wiki/Magic_number_(programming)#Unnamed_numerical_constants\">magic number</a>. Magic numbers are \"unique values with unexplained meaning or multiple occurrences which could (preferably) be replaced with named constants\" (explanation from the same Wikipedia page).</p>\n\n<p>So what usually should be done is making those magic numbers to constants whose name represents or explains the meaning of that number. The constant <code>INTEGER_ONE</code> does not explain the meaning.</p>\n\n<p>So what you actually have to do is to find the meaning of the value in this context and create a constant with exactly that name. If the <code>1</code> represents the maximum number of allowed threads for example, you should have a constant like:</p>\n\n<pre><code>static final int MAX_NUMBER_OF_THREADS = 1;\n</code></pre>\n\n<hr>\n\n<p>EDIT as per Tagir's comment</p>\n\n<p>If the literal itself has a meaning in the domain for which you are writing the code, then it should not be replaced by a named constant. Tagir's example for calculating the inverse element is a good one:</p>\n\n<pre><code>double invert(double x) {\n    return 1/x;\n}\n</code></pre>\n\n<p>Here the literal <code>1</code> has a meaning in this context inside the math domain. So it can be used as is.</p>\n", "title": "Morbid use of constants", "answer_id": 31471583, "link": "http://stackoverflow.com/questions/31471444/morbid-use-of-constants/31471583#31471583", "tags": ["java", "constants"]}, {"body": "<p>From <a href=\"https://commons.apache.org/proper/commons-lang/javadocs/api-2.6/org/apache/commons/lang/math/NumberUtils.html#INTEGER_ONE\" rel=\"nofollow\">Class NumberUtils</a> you'll see it's defined as:</p>\n\n<pre><code>/** Reusable Integer constant for one. */\npublic static final Integer INTEGER_ONE = new Integer(1)\n</code></pre>\n\n<p>So, you'll see that INTEGER_ONE is not the same as 1. It's an object that's already been constructed for you. So, if we're needing an instance of <code>Integer(1)</code>, rather than create your own, you can reuse the one from the library saving time and memory.</p>\n\n<p>It really depends on your application, if you indeed what the <code>int</code> version of 1, then, you'd probably be better of using that instead of this <code>Integer</code> class.</p>\n", "title": "Morbid use of constants", "answer_id": 31476657, "link": "http://stackoverflow.com/questions/31471444/morbid-use-of-constants/31476657#31476657", "tags": ["java", "constants"]}, {"body": "<p>I happen to have just written style guidelines for my company and I'd suggest the following:</p>\n\n<blockquote>\n  <p>Don't use hard coded, \"magic\" values. If a value is constant, define it as such.\n  Numbers such as -1, 0, 1,  2, 100 can be used in some situations.</p>\n</blockquote>\n\n<p><em>My examples are in Objective-C as that's the language I was writing guidelines for, but the rules still apply.</em></p>\n\n<p><strong>Good Usage</strong></p>\n\n<pre><code>static NSString* const DatabaseName = @\"database.name\";\n\n//Acceptable use of \"2\"\nfloat x = (ScreenWidth / 2) - (ImageWidth / 2);\n\n//Acceptable use of 0\nfor (int i = 0; i &lt; NumberOfItems; i++)\n\n//Acceptable use of 100, but only because the variable is called \"percentage\"\nfloat percentage = (someObjects * 100) / allObjects.count;\n</code></pre>\n\n<p><strong>Bad Usage</strong></p>\n\n<pre><code>float x = (480 / 2) - (120 / 2); //We have to guess these are sizes?\n\n//Unneccessary constants.\nfor (int i = ZERO; i &lt; NumberOfItems; i += ONE)\n\nfloat percentage = (someObjects.count * 100) / 120; //What is 120?\n</code></pre>\n", "title": "Morbid use of constants", "answer_id": 31478867, "link": "http://stackoverflow.com/questions/31471444/morbid-use-of-constants/31478867#31478867", "tags": ["java", "constants"]}], "question_id": 31471444}, {"body": "<p>Code</p>\n\n<pre><code>public class TestOverload {\n\n    public TestOverload(int i){System.out.println(\"Int\");}\n    public TestOverload(char... c){System.out.println(\"char\");}\n\n    public static void main(String[] args) {\n        new TestOverload('a');\n        new TestOverload(65);\n    }\n}\n</code></pre>\n\n<p>Output</p>\n\n<pre><code>Int\nInt\n</code></pre>\n\n<p>Is it expected behaviour? If so, then why? I am expecting:  char, Int</p>\n\n<p>Note: I am using Java 8</p>\n", "tags": ["java", "method-overloading"], "title": "Why does the compiler prefer an int overload to a varargs char overload for a char?", "answer_count": 3, "creation_date": 1441776326, "score": 62, "link": "http://stackoverflow.com/questions/32471499/why-does-the-compiler-prefer-an-int-overload-to-a-varargs-char-overload-for-a-ch", "answers": [{"body": "<p>Methods with varargs (<code>...</code>) have the lowest priority when the compiler determines which overloaded method to choose. Therefore <code>TestOverload(int i)</code> is chosen over <code>TestOverload(char... c)</code> when you call <code>TestOverload</code> with a single <code>char</code> parameter <code>'a'</code>, since a <code>char</code> can be automatically promoted to an <code>int</code>.</p>\n\n<p><a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.12.2\">JLS 15.12.2</a> :</p>\n\n<blockquote>\n  <ol>\n  <li><p>The first phase (\u00a715.12.2.2) performs overload resolution <strong>without permitting</strong> boxing or unboxing conversion, or <strong>the use of variable arity\n  method invocation</strong>. If no applicable method is found during this phase\n  then processing continues to the second phase.\n  This guarantees that any calls that were valid in the Java programming\n  language before Java SE 5.0 are not considered ambiguous as the result\n  of the introduction of variable arity methods, implicit boxing and/or\n  unboxing. However, the declaration of a variable arity method (\u00a78.4.1)\n  can change the method chosen for a given method method invocation\n  expression, because a variable arity method is treated as a fixed\n  arity method in the first phase. For example, declaring m(Object...)\n  in a class which already declares m(Object) causes m(Object) to no\n  longer be chosen for some invocation expressions (such as m(null)), as\n  m(Object[]) is more specific.</p></li>\n  <li><p>The second phase (\u00a715.12.2.3) performs overload resolution while allowing boxing and unboxing, but <strong>still precludes the use of variable arity method invocation</strong>. If no applicable method is found during this\n  phase then processing continues to the third phase. This ensures that a method is never chosen through variable arity\n  method invocation if it is applicable through fixed arity method\n  invocation.</p></li>\n  <li><p>The third phase (\u00a715.12.2.4) <strong>allows overloading to be combined with variable arity methods</strong>, boxing, and unboxing.</p></li>\n  </ol>\n</blockquote>\n\n<p>EDIT:</p>\n\n<p>It you wish to force the compiler to call the <code>TestOverload(char... c)</code> constructor, you can pass to the constructor call a <code>char[]</code> :</p>\n\n<pre><code>new TestOverload (new char[] {'a'});\n</code></pre>\n", "title": "Why does the compiler prefer an int overload to a varargs char overload for a char?", "answer_id": 32471523, "link": "http://stackoverflow.com/questions/32471499/why-does-the-compiler-prefer-an-int-overload-to-a-varargs-char-overload-for-a-ch/32471523#32471523", "tags": ["java", "method-overloading"]}, {"body": "<p>Yes, it is expected behaviour. The precedence for method calling goes like this :</p>\n\n<ol>\n<li>Widending</li>\n<li>Boxing</li>\n<li>Varargs</li>\n</ol>\n\n<p>Below is excerpt from <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.12.2\">Java docs</a> related to same :-</p>\n\n<blockquote>\n  <p>The process of determining applicability begins by determining the potentially applicable methods (\u00a715.12.2.1).</p>\n  \n  <p>The remainder of the process is split into three phases, to ensure compatibility with versions of the Java programming language prior to Java SE 5.0. The phases are:</p>\n  \n  <p>The first phase (\u00a715.12.2.2) performs overload resolution without permitting boxing or unboxing conversion, or the use of variable arity method invocation. If no applicable method is found during this phase then processing continues to the second phase.</p>\n  \n  <p>This guarantees that any calls that were valid in the Java programming language before Java SE 5.0 are not considered ambiguous as the result of the introduction of variable arity methods, implicit boxing and/or unboxing. However, the declaration of a variable arity method (\u00a78.4.1) can change the method chosen for a given method method invocation expression, because a variable arity method is treated as a fixed arity method in the first phase. For example, declaring m(Object...) in a class which already declares m(Object) causes m(Object) to no longer be chosen for some invocation expressions (such as m(null)), as m(Object[]) is more specific.</p>\n  \n  <p>The second phase (\u00a715.12.2.3) performs overload resolution while allowing boxing and unboxing, but still precludes the use of variable arity method invocation. If no applicable method is found during this phase then processing continues to the third phase.</p>\n  \n  <p>This ensures that a method is never chosen through variable arity method invocation if it is applicable through fixed arity method invocation.</p>\n  \n  <p>The third phase (\u00a715.12.2.4) allows overloading to be combined with variable arity methods, boxing, and unboxing.</p>\n</blockquote>\n", "title": "Why does the compiler prefer an int overload to a varargs char overload for a char?", "answer_id": 32471625, "link": "http://stackoverflow.com/questions/32471499/why-does-the-compiler-prefer-an-int-overload-to-a-varargs-char-overload-for-a-ch/32471625#32471625", "tags": ["java", "method-overloading"]}, {"body": "<p>Solid advice from Joshua Bloch (Effective Java, 2nd Ed): </p>\n\n<blockquote>\n  <p><em>\"only choose as arguments for an overloaded method those that have -radically- different types.\"</em></p>\n</blockquote>\n\n<p>An object with a radically different type is one that can not reasonably be cast into another of the argument types.  Following this rule can potentially save you hours of debugging a mysterious error that can happen when the compiler chooses at compile time the method overloading that you did not expect.</p>\n\n<p>Your lines of code violate this rule and open the door for bugs:</p>\n\n<pre><code>public TestOverload(int i){System.out.println(\"Int\");}\npublic TestOverload(char... c){System.out.println(\"char\");}\n</code></pre>\n\n<p>A <code>char</code> is interconvertible with an <code>int</code> and so the only way you can predict what will happen with the invocations is to go to the Java Language Specification and read the somewhat arcane rules about how overloadings are resolved.</p>\n\n<p>Luckily, this situation shouldn't need JLS research. If you have arguments that are not radically different from each other, probably the best option is to <em>not overload</em>.  Give the methods different names so that there is no possibility for error or confusion on the part of anyone who may need to maintain the code.</p>\n\n<p>Time is money.</p>\n", "title": "Why does the compiler prefer an int overload to a varargs char overload for a char?", "answer_id": 32474788, "link": "http://stackoverflow.com/questions/32471499/why-does-the-compiler-prefer-an-int-overload-to-a-varargs-char-overload-for-a-ch/32474788#32474788", "tags": ["java", "method-overloading"]}], "question_id": 32471499}, {"body": "<p>The following code,</p>\n\n<pre><code>private boolean compare(Object a, int b) {\n    return a == b;\n}\n</code></pre>\n\n<p>compiles in Java 7, but it results in the following error in Java 8:</p>\n\n<blockquote>\n  <p>incomparable types: int and Object</p>\n</blockquote>\n\n<p>Looking at the following question:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/18500209/comparing-object-and-int-in-java-7\">Comparing Object and int in Java 7</a></p>\n\n<p>It seems like Java&nbsp;6 and Java&nbsp;8 don't let you compare <code>int</code> and <code>Object</code>, while 7 does. Is there any documentation on this?</p>\n\n<p>I'm interested in the background knowledge that informed these decisions. It seems like they were undecided or something.</p>\n\n<p>I'm using <a href=\"http://en.wikipedia.org/wiki/IntelliJ_IDEA\">IntelliJ IDEA</a> 14.1.4 with JDK 1.7.0.51.</p>\n", "tags": ["java"], "title": "Why is an int-to-Object comparison valid in Java 7, but not in Java 8?", "answer_count": 4, "creation_date": 1442498697, "score": 61, "link": "http://stackoverflow.com/questions/32632364/why-is-an-int-to-object-comparison-valid-in-java-7-but-not-in-java-8", "answers": [{"body": "<p>Java 7 applies autoboxing to the int.</p>\n\n<pre><code> private boolean compare(java.lang.Object, int);\n   Code:\n      0: aload_1\n      1: iload_2\n      2: invokestatic  #2       // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n      5: if_acmpne     12\n      8: iconst_1\n      9: goto          13\n     12: iconst_0\n     13: ireturn\n</code></pre>\n\n<p>I created this with <code>build 1.7.0_71-b14</code></p>\n\n<p>EDIT:</p>\n\n<p>This behaviour was recognized and treated as bug by Oracle:<br>\n<a href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=8013357\">JDK-8013357</a>: Javac accepts erroneous binary comparison operations</p>\n\n<blockquote>\n  <p>Relevant JLS section is 15.21. Javac seems to treat this as a\n  reference comparison, but a reference comparison is only allowed when\n  BOTH operands are reference types.\n  <br>...<br>\n  The type rules for binary comparisons in JLS Section 15.21 will now be\n  correctly enforced by javac.  Since <strong>JDK5</strong>, javac has accepted some\n  programs with Object-primitive comparisons that are incorrectly typed\n  according to JLS 15.21.  These comparisons will now be correctly\n  identified as type errors.</p>\n</blockquote>\n", "title": "Why is an int-to-Object comparison valid in Java 7, but not in Java 8?", "answer_id": 32632692, "link": "http://stackoverflow.com/questions/32632364/why-is-an-int-to-object-comparison-valid-in-java-7-but-not-in-java-8/32632692#32632692", "tags": ["java"]}, {"body": "<p>I could not get an example to compile (fixing bool \u2192 boolean) with javac 1.7.0_75, nor with javac 1.8.0_60. I don't have a JDK6, but I don't think it should have worked there either. Perhaps it is an earlier ecj incompatibility, as Axel hints, or a bug in a different minor version of javac.</p>\n\n<p>In any event, if it works, it is due to autoboxing. This may have been pared back in preparation for Java 8, because streams and autoboxing don't mix too well.</p>\n", "title": "Why is an int-to-Object comparison valid in Java 7, but not in Java 8?", "answer_id": 32632695, "link": "http://stackoverflow.com/questions/32632364/why-is-an-int-to-object-comparison-valid-in-java-7-but-not-in-java-8/32632695#32632695", "tags": ["java"]}, {"body": "<p>The <a href=\"https://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.21\" rel=\"nofollow\">JLS - Chapter 15. Equality Operators</a> mentions 3 different <code>==</code> operators: <em>numerical</em>, <em>boolean</em> and <em>reference</em>. <strong>None</strong> of the <code>==</code> operators can happen in your example, so we conclude that the statement <strong>is illegal</strong>.</p>\n\n<p>Let's see why <code>==</code> cannot be applied in your example:</p>\n\n<ul>\n<li><p><a href=\"https://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.21.2\" rel=\"nofollow\">15.21.2. Boolean Equality Operators == and !=</a></p>\n\n<p>No need to mention why it's not relevant..</p></li>\n<li><p><a href=\"https://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.21.3\" rel=\"nofollow\">15.21.3. Reference Equality Operators == and !=</a></p>\n\n<blockquote>\n  <p>If the operands of an equality operator are both of either reference type or the null type, then the operation is object equality.</p>\n  \n  <p><strong>It is a compile-time error if it is impossible to convert the type of either operand to the type of the other by a casting conversion (<a href=\"https://docs.oracle.com/javase/specs/jls/se7/html/jls-5.html#jls-5.5\" rel=\"nofollow\">\u00a75.5</a>). The run-time values of the two operands would necessarily be unequal.</strong></p>\n</blockquote></li>\n<li><p><a href=\"https://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.21.1\" rel=\"nofollow\">15.21.1. Numerical Equality Operators == and !=</a></p>\n\n<blockquote>\n  <p>If the operands of an equality operator are both of numeric type, or one is of numeric type and the other is convertible (<a href=\"https://docs.oracle.com/javase/specs/jls/se7/html/jls-5.html#jls-5.1.8\" rel=\"nofollow\">\u00a75.1.8</a>) to numeric type, binary numeric promotion is performed on the operands (<a href=\"https://docs.oracle.com/javase/specs/jls/se7/html/jls-5.html#jls-5.6.2\" rel=\"nofollow\">\u00a75.6.2</a>).</p>\n</blockquote></li>\n</ul>\n\n<p>Now let's assume it's legal and the compiler changed the line to:</p>\n\n<pre><code>if (a == new Integer(b))\n</code></pre>\n\n<p>What do you expect the result to be? The condition will never evaluate to <code>true</code>, so it makes sense that <strong>it's a bug</strong> that was fixed in Java 8.</p>\n", "title": "Why is an int-to-Object comparison valid in Java 7, but not in Java 8?", "answer_id": 32632773, "link": "http://stackoverflow.com/questions/32632364/why-is-an-int-to-object-comparison-valid-in-java-7-but-not-in-java-8/32632773#32632773", "tags": ["java"]}, {"body": "<p>It shouldn't have compiled, according to <a href=\"http://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.21\" rel=\"nofollow\">JLS 7</a>. <code>int</code> can be compared to boxed numeric types, i.e. Byte, Short, Character, Integer, Long, Float, Double. But that is all.</p>\n\n<p>And if comparison is between <code>int</code> and say <code>Float</code>, <code>Float</code> will be unboxed first, so that the comparison is between <code>float</code> and <code>int</code>. It'll make no sense to do the other way around - box <code>int</code> then examine the identity of the <code>Integer</code> (with a <code>Float</code> no less).</p>\n", "title": "Why is an int-to-Object comparison valid in Java 7, but not in Java 8?", "answer_id": 32633199, "link": "http://stackoverflow.com/questions/32632364/why-is-an-int-to-object-comparison-valid-in-java-7-but-not-in-java-8/32633199#32633199", "tags": ["java"]}], "question_id": 32632364}, {"body": "<p>I'm a little confused about Java's <em>varargs</em> methods:</p>\n\n<pre><code>public static int sum(int ...a) {\n    return 0;\n}\n\npublic static double sum(double ...a) {\n    return 0.0;\n}\n</code></pre>\n\n<p>When I tried to invoke <code>sum()</code> without passing any argument, then the <code>int</code> version of method was invoked. I don't understand why; normally the compiler must raise an error.</p>\n\n<p>By contrast, the following piece of code generates a compiler error when I try to invoke <code>sum</code> without any argument:</p>\n\n<pre><code>public static int sum(int ...a) {\n    return 0;\n}\n\npublic static boolean sum(boolean ...a) {\n    return true;\n}\n</code></pre>\n", "tags": ["java", "methods", "method-overloading", "varargs"], "title": "Varargs Java Ambiguous Call", "answer_count": 2, "creation_date": 1437832845, "score": 60, "link": "http://stackoverflow.com/questions/31627236/varargs-java-ambiguous-call", "answers": [{"body": "<p>The general rule that applies here is this: if one method signature is strictly <em>more specific</em> than the other, then Java chooses it without an error.</p>\n\n<p>Intuituively, a method signature is more specific if you could delete it entirely and the other, less specific one would be applicable to each existing invocation.</p>\n\n<p>When presented with a choice between the signatures <code>sum(int... args)</code> and <code>sum(double... args)</code>, the signature <code>sum(int... args)</code> is more specific because any invocation of that method could also be passed on to <code>sum(double... args)</code> by applying a widening conversion. The same does not hold for a <code>sum(boolean... args)</code> method, which cannot be similarly converted. </p>\n\n<p>Java Language Specification, SE 8 version:</p>\n\n<blockquote>\n  <h2>15.12. Method Invocation Expressions</h2>\n  \n  <h3><a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.12.2.5\">15.12.2.5. Choosing the Most Specific Method</a></h3>\n  \n  <p>The Java programming language uses the rule that the <em>most specific</em> method is chosen.</p>\n  \n  <p>...</p>\n  \n  <p>One applicable method m1 is more specific than another applicable method m2, for an invocation with argument expressions e1, ..., ek, if any of the following are true:</p>\n  \n  <p>...</p>\n  \n  <ul>\n  <li>m2 is not generic, and m1 and m2 are applicable by strict or loose invocation, and where m1 has formal parameter types S1, ..., Sn and m2 has formal parameter types T1, ..., Tn, the type Si is <em>more specific</em> than Ti for argument ei for all i (1 \u2264 i \u2264 n, n = k).</li>\n  </ul>\n  \n  <p>...</p>\n  \n  <p>A type S is more specific than a type T for any expression if S &lt;: T (\u00a74.10).</p>\n</blockquote>\n\n<hr>\n\n<blockquote>\n  <h2>4.10. Subtyping</h2>\n  \n  <h3><a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.10.1\">4.10.1. Subtyping among Primitive Types</a></h3>\n  \n  <p>double >1 float</p>\n  \n  <p>float >1 long</p>\n  \n  <p>long >1 int</p>\n</blockquote>\n", "title": "Varargs Java Ambiguous Call", "answer_id": 31627534, "link": "http://stackoverflow.com/questions/31627236/varargs-java-ambiguous-call/31627534#31627534", "tags": ["java", "methods", "method-overloading", "varargs"]}, {"body": "<p>As mentioned in <a href=\"http://stackoverflow.com/a/12879991/5101345\">this answer</a>, there are rules followed when selecting which overloaded method to use.</p>\n\n<p>To quote:</p>\n\n<blockquote>\n  <ol>\n  <li>Primitive widening uses the smallest method argument possible </li>\n  <li>Wrapper type cannot be widened to another Wrapper type</li>\n  <li>You can Box from int to Integer and widen to Object but no to Long</li>\n  <li>Widening beats Boxing, Boxing beats Var-args.</li>\n  <li>You can Box and then Widen (An int can become Object via Integer) </li>\n  <li>You cannot Widen and then Box (An int cannot become Long)</li>\n  <li>You cannot combine var-args, with <em>both</em> widening <em>and</em> boxing.</li>\n  </ol>\n</blockquote>\n\n<p>(Let's redefine rule 1 like so: \"Primitive widening uses the <em>most specific</em> method argument as possible.\")</p>\n\n<p>So with these rules in mind we can get an idea of what's going on here:</p>\n\n<p>According to rule number one, primitive widening uses the most specific method argument as possible. Since an <code>int</code> is representing by a non-decimal number (e.g. <code>1</code>) and a <code>double</code> is represented by a decimal-number with precision 32 bytes more than that of a <code>float</code> (e.g. <code>1.0</code>), we can say that <code>int</code>s are \"less than\" or \"smaller than\" <code>double</code>s, and by that logic, <code>int</code>s can be \"promoted\" to <code>double</code>s and <code>double</code>s can be \"demoted\" to <code>int</code>s.</p>\n\n<p>Put simply, a primitive that can be widened to another primitive (e.g. <code>int</code> -> <code>float</code> -> <code>double</code>) is <em>more specific</em> than another. For example, an <code>int</code> is <em>more specific</em> than a <code>double</code> because <code>1</code> can be promoted to <code>1.0</code>.</p>\n\n<p>When you passed in no arguments to these overloaded vararg methods of the same name, since the return is effectively the same (0 and 0.0 respectively), the compiler would choose to use the method that takes in a vararg of type <code>int</code> since it is <em>more specific</em>.</p>\n\n<p>So, then, when you introduced these same methods that take in <code>int</code>s and <code>boolean</code>s (types that cannot be widened to each other) respectively, the compiler now cannot choose a method to use since <code>int</code>s cannot be \"promoted\" or \"demoted\" like <code>int</code>s, <code>float</code>s and <code>double</code>s. Therefore, it will throw a compile error.</p>\n\n<p>I hope this helps you to understand what's happening.</p>\n", "title": "Varargs Java Ambiguous Call", "answer_id": 31627536, "link": "http://stackoverflow.com/questions/31627236/varargs-java-ambiguous-call/31627536#31627536", "tags": ["java", "methods", "method-overloading", "varargs"]}], "question_id": 31627236}, {"body": "<p>One of the features of the new Date Time API in Java 8 is supposed to be nanosecond precision. However when I print the current Date Time to the console like so</p>\n\n<pre><code>DateTimeFormatter formatter = DateTimeFormatter\n    .ofPattern(\"yyyy-MM-dd'T'HH:mm:ss,nnnnnnnnnZ\");\nSystem.out.println(OffsetDateTime.now().format(formatter)); \n</code></pre>\n\n<p>I only see millisecond precision: 2015-11-02T12:33:26,746000000+0100</p>\n\n<p>The operating system does seem to support nanosecond precision. When I print the current date time via the Terminal</p>\n\n<pre><code>date -Ins\n</code></pre>\n\n<p>I see 2015-11-02T12:33:26,746134417+0100</p>\n\n<p>How do I get nanosecond precision in Java? I'm running Oracle Java 1.8.0_66 on Ubuntu 14.04 64-bit</p>\n", "tags": ["java", "java-8", "java-time"], "title": "Why does the new Java 8 Date Time API not have nanosecond precision?", "answer_count": 2, "creation_date": 1446467639, "score": 59, "link": "http://stackoverflow.com/questions/33477695/why-does-the-new-java-8-date-time-api-not-have-nanosecond-precision", "answers": [{"body": "<p>The <code>java.time</code> API in general <em>does</em> have nanosecond precision. For example:</p>\n\n<pre><code>DateTimeFormatter formatter = DateTimeFormatter\n    .ofPattern(\"yyyy-MM-dd'T'HH:mm:ss,nnnnnnnnnZ\");\nOffsetDateTime odt = OffsetDateTime.of(2015, 11, 2, 12, 38, 0, 123456789, ZoneOffset.UTC);\nSystem.out.println(odt.format(formatter));\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>2015-11-02T12:38:00,123456789+0000\n</code></pre>\n\n<p>However, it's the clock value returned by <code>OffsetDateTime.now()</code> which is returning a value which only has milliseconds.</p>\n\n<p>From <a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Clock.html\" rel=\"nofollow\"><code>Clock</code></a> implementation in Java 8:</p>\n\n<blockquote>\n  <p>The clock implementation provided here is based on <code>System.currentTimeMillis()</code>. That method provides little to no guarantee about the accuracy of the clock. Applications requiring a more accurate clock must implement this abstract class themselves using a different external clock, such as an NTP server.</p>\n</blockquote>\n\n<p>So there's nothing inherently imprecise here - just the default implementation of <code>Clock</code> using <code>System.currentTimeMillis()</code>. You could potentially create your own more precise subclass. However, you should note that adding more precision without adding more <em>accuracy</em> probably isn't terribly useful. (There are times when it might be, admittedly...)</p>\n", "title": "Why does the new Java 8 Date Time API not have nanosecond precision?", "answer_id": 33477803, "link": "http://stackoverflow.com/questions/33477695/why-does-the-new-java-8-date-time-api-not-have-nanosecond-precision/33477803#33477803", "tags": ["java", "java-8", "java-time"]}, {"body": "<p>To make an important addition to the answer of Jon Skeet, <strong>Java 9 is supposed to deliver a clock in improved precision</strong> - see <a href=\"https://bugs.openjdk.java.net/browse/JDK-8068730\">the bug log</a>. Background: On many operating systems (especially Linux), there are better clocks available.</p>\n\n<blockquote>\n  <p>The Java SE 8 specification for java.time.Clock states that \"The\n  system factory methods provide clocks based on the best available<br>\n  system clock. This may use System.currentTimeMillis(), or a higher\n  resolution clock if one is available.\". In JDK 8 the implementation<br>\n  of the clock returned was based on System.currentTimeMillis(), and\n  thus has only a millisecond resolution. In JDK 9, the implementation<br>\n  is based on the underlying native clock that\n  System.currentTimeMillis() is using, providing the maximum resolution\n  available from that clock.   On most systems this can be microseconds,\n  or sometimes even tenth of microseconds. </p>\n  \n  <p>An application making the assumption that the clock returned by these\n  system factory methods will always have milliseconds precision   and\n  actively depends on it, may therefore need to be updated in order to\n  take into account the possibility of a greater resolution, as was<br>\n  stated in the API documentation.</p>\n</blockquote>\n\n<p>It should also be noted the (exotic) fact that second precision will not exist near leap seconds - not even in Java 9.</p>\n", "title": "Why does the new Java 8 Date Time API not have nanosecond precision?", "answer_id": 33478391, "link": "http://stackoverflow.com/questions/33477695/why-does-the-new-java-8-date-time-api-not-have-nanosecond-precision/33478391#33478391", "tags": ["java", "java-8", "java-time"]}], "question_id": 33477695}, {"body": "<p>If I try to compile </p>\n\n<pre><code>for(;;)\n{\n\n}\nSystem.out.println(\"End\");\n</code></pre>\n\n<p>The Java compiler produces an error saying <code>Unreachable statement</code>. But if I add another \"<em>unreachable</em>\"(according to me) <code>break</code> statement and make it: </p>\n\n<pre><code>for(;;)\n{\n    if(false) break;\n}\nSystem.out.println(\"End\");\n</code></pre>\n\n<p>It compiles. Why does it not produce an error? Is Java trying to say that\n<em>Two wrongs <strong>do</strong> make a right?</em></p>\n", "tags": ["java", "if-statement", "unreachable-code", "unreachable-statement"], "title": "Why does a Java Compiler not produce an unreachable statement error for an unreachable then statement?", "answer_count": 5, "creation_date": 1450963857, "score": 58, "link": "http://stackoverflow.com/questions/34453585/why-does-a-java-compiler-not-produce-an-unreachable-statement-error-for-an-unrea", "answers": [{"body": "<p>The behaviour is defined in <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-14.html#jls-14.21\">the JLS description of unreachable statements</a>:</p>\n\n<blockquote>\n  <p>The then-statement is reachable iff the if-then statement is reachable.</p>\n</blockquote>\n\n<p>So the compiler determines that the then-statement (<code>break;</code>) is reachable, regardless of the condition in the <code>if</code>.</p>\n\n<p>And a bit further, emphasis mine:</p>\n\n<blockquote>\n  <p>A basic <code>for</code> statement can complete normally iff at least one of the following is true:  </p>\n  \n  <ul>\n  <li>The for statement is reachable, there is a condition expression, and the condition expression is not a constant expression (\u00a715.28) with value true.</li>\n  <li><strong><em>There is a reachable <code>break</code> statement that exits the for statement.</em></strong></li>\n  </ul>\n</blockquote>\n\n<p>So the for can complete normally because the then-statement contains a <code>break</code>. As you noticed, it would not work if you replaced <code>break</code> with <code>return</code>.</p>\n\n<hr>\n\n<p>The rationale is explained towards the end of the section. In substance, <code>if</code> has a special treatment to allow constructs such as:</p>\n\n<pre><code>if(DEBUG) { ... }\n</code></pre>\n\n<p>where DEBUG may be a compile time constant.</p>\n", "title": "Why does a Java Compiler not produce an unreachable statement error for an unreachable then statement?", "answer_id": 34453672, "link": "http://stackoverflow.com/questions/34453585/why-does-a-java-compiler-not-produce-an-unreachable-statement-error-for-an-unrea/34453672#34453672", "tags": ["java", "if-statement", "unreachable-code", "unreachable-statement"]}, {"body": "<p>From <a href=\"http://docs.oracle.com/javase/specs/jls/se7/html/jls-14.html#jls-14.21\">the JLS</a></p>\n\n<blockquote>\n  <p>An if-then statement can complete normally if at least one of the\n  following is true:</p>\n  \n  <p><strong>> The if-then statement is reachable and the condition expression is not\n  a constant expression whose value is true.</strong></p>\n  \n  <p><strong>> The then-statement can complete normally.</strong></p>\n</blockquote>\n\n<p>So <code>if(false)</code> is allowed.</p>\n\n<blockquote>\n  <p>This ability to \"conditionally compile\" has a significant impact on,\n  and relationship to, binary compatibility. If a set of classes\n  that use such a \"flag\" variable are compiled and conditional code is\n  omitted, it does not suffice later to distribute just a new version of\n  the class or interface that contains the definition of the flag. A\n  change to the value of a flag is, therefore, not binary compatible\n  with pre-existing binaries . (There are other reasons for\n  such incompatibility as well, such as the use of constants in case\n  labels in switch statements;)</p>\n</blockquote>\n", "title": "Why does a Java Compiler not produce an unreachable statement error for an unreachable then statement?", "answer_id": 34453701, "link": "http://stackoverflow.com/questions/34453585/why-does-a-java-compiler-not-produce-an-unreachable-statement-error-for-an-unrea/34453701#34453701", "tags": ["java", "if-statement", "unreachable-code", "unreachable-statement"]}, {"body": "<p>As explained in <a href=\"http://stackoverflow.com/a/20299947/1189885\">my answer to a similar question</a>, the specific construct <code>if(compile-time-false)</code> is exempt from the unreachability rules as an explicit backdoor. In this case, the compiler treats your <code>break</code> as reachable because of that. </p>\n", "title": "Why does a Java Compiler not produce an unreachable statement error for an unreachable then statement?", "answer_id": 34453704, "link": "http://stackoverflow.com/questions/34453585/why-does-a-java-compiler-not-produce-an-unreachable-statement-error-for-an-unrea/34453704#34453704", "tags": ["java", "if-statement", "unreachable-code", "unreachable-statement"]}, {"body": "<p>Basically, <em>unreachable code</em> is detected by analyzing the program <em>statically</em> <strong><em>without</em></strong> actually running the code. While the condition will be checked at <em>runtime</em>. So, when this analysis takes place it does not actually look in to the condition but just check that <code>break;</code> is accessible(<em>reachable</em>) via <code>if</code>.</p>\n", "title": "Why does a Java Compiler not produce an unreachable statement error for an unreachable then statement?", "answer_id": 34455434, "link": "http://stackoverflow.com/questions/34453585/why-does-a-java-compiler-not-produce-an-unreachable-statement-error-for-an-unrea/34455434#34455434", "tags": ["java", "if-statement", "unreachable-code", "unreachable-statement"]}, {"body": "<p>The core reason Java doesn't detect <strong>all</strong> unreachable statements is that it's generally impossible to answer whether the code is reachable or not. This follows from the fact that <a href=\"https://en.wikipedia.org/wiki/Halting_problem\" rel=\"nofollow\">halting problem</a> is undecidable over Turing machines. </p>\n\n<p>So, it's clear that all unreachable statements cannot be detected, but why not to try evaluating conditions? Imagine now that the condition used is not just <code>false</code> but something like <code>~x == x</code>. For example, all these statements will print <code>true</code> for every <code>int x</code> (<a href=\"http://habrahabr.ru/post/202162/\" rel=\"nofollow\">source</a>). </p>\n\n<pre><code>    System.out.println((x + x &amp; 1) == 0);\n    System.out.println((x + -x &amp; 1) == 0);\n    System.out.println((-x &amp; 1) == (x &amp; 1));\n    System.out.println(((-x ^ x) &amp; 1) == 0);\n    System.out.println((x * 0x80 &amp; 0x56) == 0);\n    System.out.println((x &lt;&lt; 1 ^ 0x1765) != 0);\n</code></pre>\n\n<p>The statements can be rather complicated; it takes time to resolve them. It would significantly increase build time, and after all, it will not detect all unreachable statements. Compiler was designed to take some efforts but not spend too much time for that. </p>\n\n<p>The only question remained is: where to stop resolving conditions? The reasons for that don't seem to have mathematical justification and are based on usage scenario. Rationale for your particular case is given by <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-14.html#jls-14.21\" rel=\"nofollow\">JLS-14.21</a></p>\n", "title": "Why does a Java Compiler not produce an unreachable statement error for an unreachable then statement?", "answer_id": 34526507, "link": "http://stackoverflow.com/questions/34453585/why-does-a-java-compiler-not-produce-an-unreachable-statement-error-for-an-unrea/34526507#34526507", "tags": ["java", "if-statement", "unreachable-code", "unreachable-statement"]}], "question_id": 34453585}, {"body": "<p>I have been investigating this error for a whole three days, but still no progress. I hope I can get some tips from here. </p>\n\n<p>What I am trying to do is to inline a MethodNode into a MethodHandle Call Site (#5, #17, and #30) with ASM library. For simplification, the MethodHandle at #5 references a static method <code>static Functions.isFooString(String)boolen</code>. </p>\n\n<p>At the call site, the instruction before inlining is like </p>\n\n<pre><code>    //Before\n  stack=3, locals=3, args_size=3\n     0: aload_0\n     1: getfield      #15                 // Field guard:Ljava/lang/invoke/MethodHandle;\n     4: aload_1\n     5: invokevirtual #29                 // Method java/lang/invoke/MethodHandle.invokeExact:(Ljava/lang/String;)Z\n     8: ifeq          24\n    11: aload_0\n    12: getfield      #17                 // Field trueTarget:Ljava/lang/invoke/MethodHandle;\n    15: aload_1\n    16: aload_2\n    17: invokevirtual #31                 // Method java/lang/invoke/MethodHandle.invokeExact:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n    20: checkcast     #33                 // class java/lang/String\n    23: areturn\n    24: aload_0\n    25: getfield      #19                 // Field falseTarget:Ljava/lang/invoke/MethodHandle;\n    28: aload_1\n    29: aload_2\n    30: invokevirtual #31                 // Method java/lang/invoke/MethodHandle.invokeExact:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n    33: checkcast     #33                 // class java/lang/String\n    36: areturn\n   StackMapTable: number_of_entries = 1\n   frame_type = 24 /* same */\n Exceptions:\n    throws java.lang.Throwable\n</code></pre>\n\n<p>The inlining rule is that copy inline's body into the call site after storing the arguments to local variables. After inlining, the instruction list is: </p>\n\n<pre><code>  //After\nClassfile /C:/temp/DYNGuardWithTestHandle1439587569404.class\n  Last modified Aug 14, 2015; size 913 bytes\n  MD5 checksum 055a99d52cb622a7e86c59de79347f3e\npublic class DYNGuardWithTestHandle1439587569404 extends java.lang.invoke.BaseTemplate\n  minor version: 0\n  major version: 51\n  flags: ACC_PUBLIC, ACC_SUPER\nConstant pool:\n   #1 = Utf8               DYNGuardWithTestHandle1439587569404\n   #2 = Class              #1             // DYNGuardWithTestHandle1439587569404\n   #3 = Utf8               java/lang/invoke/BaseTemplate\n   #4 = Class              #3             // java/lang/invoke/BaseTemplate\n   #5 = Utf8               guard\n   #6 = Utf8               Ljava/lang/invoke/MethodHandle;\n   #7 = Utf8               trueTarget\n   #8 = Utf8               falseTarget\n   #9 = Utf8               &lt;init&gt;\n  #10 = Utf8               (Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)V\n  #11 = Utf8               ()V\n  #12 = NameAndType        #9:#11         // \"&lt;init&gt;\":()V\n  #13 = Methodref          #4.#12         // java/lang/invoke/BaseTemplate.\"&lt;init&gt;\":()V\n  #14 = NameAndType        #5:#6          // guard:Ljava/lang/invoke/MethodHandle;\n  #15 = Fieldref           #2.#14         // DYNGuardWithTestHandle1439587569404.guard:Ljava/lang/invoke/MethodHandle;\n  #16 = NameAndType        #7:#6          // trueTarget:Ljava/lang/invoke/MethodHandle;\n  #17 = Fieldref           #2.#16         // DYNGuardWithTestHandle1439587569404.trueTarget:Ljava/lang/invoke/MethodHandle;\n  #18 = NameAndType        #8:#6          // falseTarget:Ljava/lang/invoke/MethodHandle;\n  #19 = Fieldref           #2.#18         // DYNGuardWithTestHandle1439587569404.falseTarget:Ljava/lang/invoke/MethodHandle;\n  #20 = Utf8               eval\n  #21 = Utf8               invokeExact\n  #22 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n  #23 = Utf8               java/lang/Throwable\n  #24 = Class              #23            // java/lang/Throwable\n  #25 = Utf8               test/code/jit/asm/methodhandle/Functions\n  #26 = Class              #25            // test/code/jit/asm/methodhandle/Functions\n  #27 = Utf8               isFooString\n  #28 = Utf8               (Ljava/lang/String;)Z\n  #29 = NameAndType        #27:#28        // isFooString:(Ljava/lang/String;)Z\n  #30 = Methodref          #26.#29        // test/code/jit/asm/methodhandle/Functions.isFooString:(Ljava/lang/String;)Z\n  #31 = Utf8               printTrueTarget\n  #32 = NameAndType        #31:#22        // printTrueTarget:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n  #33 = Methodref          #26.#32        // test/code/jit/asm/methodhandle/Functions.printTrueTarget:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n  #34 = Utf8               java/lang/String\n  #35 = Class              #34            // java/lang/String\n  #36 = Utf8               java/lang/Object\n  #37 = Class              #36            // java/lang/Object\n  #38 = Utf8               printFalseTarget\n  #39 = NameAndType        #38:#22        // printFalseTarget:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n  #40 = Methodref          #26.#39        // test/code/jit/asm/methodhandle/Functions.printFalseTarget:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n  #41 = Utf8               Code\n  #42 = Utf8               StackMapTable\n  #43 = Utf8               Exceptions\n{\n  final java.lang.invoke.MethodHandle guard;\n    descriptor: Ljava/lang/invoke/MethodHandle;\n    flags: ACC_FINAL\n\n  final java.lang.invoke.MethodHandle trueTarget;\n    descriptor: Ljava/lang/invoke/MethodHandle;\n    flags: ACC_FINAL\n\n  final java.lang.invoke.MethodHandle falseTarget;\n    descriptor: Ljava/lang/invoke/MethodHandle;\n    flags: ACC_FINAL\n\n  public DYNGuardWithTestHandle1439587569404(java.lang.invoke.MethodHandle, java.lang.invoke.MethodHandle, java.lang.invoke.MethodHandle);\n    descriptor: (Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)V\n    flags: ACC_PUBLIC\n    Code:\n      stack=2, locals=4, args_size=4\n         0: aload_0\n         1: invokespecial #13                 // Method java/lang/invoke/BaseTemplate.\"&lt;init&gt;\":()V\n         4: aload_0\n         5: aload_1\n         6: putfield      #15                 // Field guard:Ljava/lang/invoke/MethodHandle;\n         9: aload_0\n        10: aload_2\n        11: putfield      #17                 // Field trueTarget:Ljava/lang/invoke/MethodHandle;\n        14: aload_0\n        15: aload_3\n        16: putfield      #19                 // Field falseTarget:Ljava/lang/invoke/MethodHandle;\n        19: return\n\n  public void eval();\n    descriptor: ()V\n    flags: ACC_PUBLIC\n    Code:\n      stack=0, locals=1, args_size=1\n         0: return\n\n  public java.lang.String invokeExact(java.lang.String, java.lang.String) throws java.lang.Throwable;\n    descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n    flags: ACC_PUBLIC\n    Code:\n      stack=3, locals=8, args_size=3\n         0: aload_0\n         1: getfield      #15                 // Field guard:Ljava/lang/invoke/MethodHandle;\n         4: aload_1\n         5: astore_3\n         6: aload_3\n         7: invokestatic  #0                  // #0\n        10: fload_2\n        11: nop\n        12: iconst_0\n        13: swap\n        14: pop\n        15: ifeq          44\n        18: aload_0\n        19: getfield      #17                 // Field trueTarget:Ljava/lang/invoke/MethodHandle;\n        22: aload_1\n        23: aload_2\n        24: astore        4\n        26: astore        5\n        28: aload         5\n        30: aload         4\n        32: invokestatic  #33                 // Method test/code/jit/asm/methodhandle/Functions.printTrueTarget:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n        35: goto          38\n        38: swap\n        39: pop\n        40: checkcast     #35                 // class java/lang/String\n        43: areturn\n        44: aload_0\n        45: getfield      #19                 // Field falseTarget:Ljava/lang/invoke/MethodHandle;\n        48: aload_1\n        49: aload_2\n        50: astore        6\n        52: astore        7\n        54: aload         7\n        56: aload         6\n        58: invokestatic  #40                 // Method test/code/jit/asm/methodhandle/Functions.printFalseTarget:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n        61: goto          64\n        64: swap\n        65: pop\n        66: checkcast     #35                 // class java/lang/String\n        69: areturn\n      StackMapTable: number_of_entries = 1\n        frame_type = 254 /* append */\n          offset_delta = 44\n          locals = [ class java/lang/Object, class java/lang/Object, class java/lang/Object ]\n    Exceptions:\n      throws java.lang.Throwable\n\n}\n</code></pre>\n\n<p>Clearly, the #5 (before)in the original instruction is replaced by WRONG instructions #7--#12 (after), which should not exist here. Instead, there should only be one instruction, here: </p>\n\n<pre><code>   invokestatic Method test/code/jit/asm/methodhandle/Functions.isFooString:(Ljava/lang/String;)Z;\n</code></pre>\n\n<p>Worse, the #7 of the invokeExact(after) is completely illegal which caused the JVM crash down. \nThe other two instructions #17 and #30 (before) are correctly substituted. </p>\n\n<p>It is clear from the generated bytecodes, but this is different from the behavior defined by my code. The way to build the MethodNode is: </p>\n\n<pre><code>   MethodNode buildMethod(...){\n     ...\n    access=ACC_PUBLIC+ACC_STATIC;\n    String owner = Type.getType(definingClass).getInternalName();\n    String desc = type.toMethodDescriptorString();\n    MethodNode methodNode = new MethodNode(Opcodes.ASM5, access, mhName, type.toString(), null, null);\n    if(name.equals(\"isFooString\")){\n        methodNode.instructions.add(new VarInsnNode(Opcodes.ALOAD, 0));\n        System.out.println(\"owner=\"+owner+\" name=\"+name+\"  desc=\"+desc);\n       //owner=test/code/jit/asm/methodhandle/Functions name=isFooString  desc=(Ljava/lang/String;)Z\n        methodNode.instructions.add(new MethodInsnNode(Opcodes.INVOKESTATIC, owner, name, desc, false));\n        methodNode.instructions.add(new InsnNode(Opcodes.IRETURN));\n        return methodNode;\n    }\n\n    AbstractInsnNode insn = new MethodInsnNode(originIsFindVirtual?Opcodes.INVOKEVIRTUAL: Opcodes.INVOKESTATIC, owner, name, desc, false);\n    Type[] args = Type.getArgumentTypes(desc);\n\n    for(Type arg : args){\n        AbstractInsnNode node = new VarInsnNode(arg.getOpcode(Opcodes.ILOAD), start);\n        start += arg.getSize();\n        methodNode.instructions.add(node);\n    }\n    methodNode.instructions.add(insn);\n    int Return = Type.getReturnType(desc).getOpcode(Opcodes.IRETURN);\n\n    methodNode.instructions.add(new InsnNode(Return));\n    return methodNode;\n    }\n</code></pre>\n\n<p>And InliningAdapter: </p>\n\n<pre><code>//The full version can be accessed by https://github.com/xushijie/InlineMethod/blob/typeinference/src/main/java/code/jit/asm/core/InliningAdapter.java\npublic class InliningAdapter extends RemappingMethodAdapter{\n\n/** The main task in the Constructor is to store pushed parameters of the MethodNode to a new local variables and store the remaining arguments of the stack to another temporary stacks in case of exceptions in the MethodNode */ \npublic InliningAdapter(LocalVariablesSorter lvsMV, int acc, String desc,\nRemapper remapper, Label end, MethodContext context) {\n   super(acc, desc, lvsMV, remapper);\n   lvs = lvsMV;\n   mv = context.getRawMV();\n   this.end = end;\n   _context = context;\n   List&lt;Type&gt; types = _context.getOperandStack();\n   int offset = ((acc &amp; Opcodes.ACC_STATIC) != 0 ? 0 : 1);\n   Type[] args = Type.getArgumentTypes(desc);\n   for (int i = args.length - 1; i &gt;= 0; i--) {\n      super.visitVarInsn(args[i].getOpcode(Opcodes.ISTORE), i + offset);\n   }\n   int poped = args.length;\n   if (offset &gt; 0) {\n   poped++;\n   super.visitVarInsn(Opcodes.ASTORE, 0);\n   }\n   int left = types.size() - poped - 1;\n   while (left &gt; 0) {\n   // NON-parameters in the stack =&gt; pop up too and restore back after\n   // complete.\n   int variable = newLocal(types.get(left));\n   int opcode = types.get(left).getOpcode(Opcodes.ISTORE);\n   __callerstacks.add(0, new StackEle(types.get(left), variable)); //    |--&gt;TOP\n   mv.visitVarInsn(opcode, variable);\n   left--;\n   }\n}\n\n@Override\npublic void visitMethodInsn(final int opcode, final String owner,\n        final String name, final String desc, final boolean itf) {\n    System.out.println(\"[Callee: ] invokeVirtual \"+ owner +\"  \"+name+\"  \"+ desc);\n    _context.getRawMV().visitMethodInsn(opcode, owner, name, desc, itf);\n    //_context.getRawMV() is a MethodWriter. and the value of the (owner, name, desc) is /.//Functions, isFooString, (String;)Z, which is correct. \n}\n\n@Override\npublic void visitVarInsn(final int opcode, final int var) {\n    //I confirm this method is not invoked after visitMethodInsn. \n    super.visitVarInsn(opcode, var + firstLocal);\n}\n}\n</code></pre>\n\n<p>For each invokevirtual instruction (#5, #17. #30) in the original bytecodes, it is like: </p>\n\n<pre><code>mn = buildMethodNode(...);\nmn.accept(new InliningAdapter(this,\n                    opcode == Opcodes.INVOKESTATIC ? Opcodes.ACC_STATIC : 0, desc,  _context));  //mn is my constructed MethodNode previsouly, which contains one method invocation. \n</code></pre>\n\n<p>To resolve the issue( the parameters for the first visited <code>invokestatic</code> is missing and some illegal instructions are added). I debug my code (Sorry I cannot post all of it here because there are too many files), and it monitors all parameters that are written to the MethodWriter in the<code>visitMethodInsn</code> of the <code>InliningAdapter</code>. It proves that all these values (Functions, isFooString, (String;)Z) are correct, which are the same as my expectation. </p>\n\n<p>So my questions are: </p>\n\n<ul>\n<li>Is there something wrong in my MethodNode builder? </li>\n<li><p>What kinds of reasons can result to this issue?  There are also other similar cases, where the first <code>invokevirtual</code> instructions are wrongly substituted by something like, nop, fdouble, and asatore (These substitutions do not exist in my code). </p></li>\n<li><p>Also, I confirm the override method <code>visitMethodInsn</code> is not invoked after the <code>visitMethodInsn</code> before <code>accept</code> completes. That means, the wrong instructions, i.e., #10 <code>fload</code> and #12 <code>iconst</code>, are not from the built MethodNode. </p></li>\n<li><p>I made another try that disable the inlining of the first invokevirtual (#5 //Before). The generated class succeeds and can be launched. For me, it looks like the problem is at <code>isFooString</code> MethodNode  building.</p></li>\n</ul>\n", "tags": ["java", "jvm", "bytecode", "java-bytecode-asm"], "title": "Method invocation instruction (invokevirtual/invokestatic) is substituted by some unexpected instructions", "answer_count": 0, "creation_date": 1439499310, "score": 57, "link": "http://stackoverflow.com/questions/31998248/method-invocation-instruction-invokevirtual-invokestatic-is-substituted-by-som", "question_id": 31998248}, {"body": "<p>While writing code for another answer on this site I came across this peculiarity:</p>\n\n<pre><code>static void testSneaky() {\n  final Exception e = new Exception();\n  sneakyThrow(e);    //no problems here\n  nonSneakyThrow(e); //ERRROR: Unhandled exception: java.lang.Exception\n}\n\n@SuppressWarnings(\"unchecked\")\nstatic &lt;T extends Throwable&gt; void sneakyThrow(Throwable t) throws T {\n  throw (T) t;\n}\n\nstatic &lt;T extends Throwable&gt; void nonSneakyThrow(T t) throws T {\n  throw t;\n}\n</code></pre>\n\n<p>First, I am quite confused why the <code>sneakyThrow</code> call is OK to the compiler. What possible type did it infer for <code>T</code> when there is no mention anywhere of an unchecked exception type?</p>\n\n<p>Second, accepting that this works, why then does the compiler complain on the <code>nonSneakyThrow</code> call? They seem very much alike.</p>\n", "tags": ["java", "generics", "java-8", "type-inference"], "title": "A peculiar feature of exception type inference in Java 8", "answer_count": 3, "creation_date": 1436442544, "score": 56, "link": "http://stackoverflow.com/questions/31316581/a-peculiar-feature-of-exception-type-inference-in-java-8", "answers": [{"body": "<p>With <code>sneakyThrow</code>, the type <code>T</code> is a bounded generic type variable <em>without</em> a specific type (because there is no where the type could come from).</p>\n\n<p>With <code>nonSneakyThrow</code>, the type <code>T</code> is the same type as the argument, thus in your example, the <code>T</code> of <code>nonSneakyThrow(e);</code> is <code>Exception</code>. As <code>testSneaky()</code> does not declare a thrown <code>Exception</code>, an error is shown.</p>\n\n<p>Note that this is a known interference of Generics with checked exceptions.</p>\n", "title": "A peculiar feature of exception type inference in Java 8", "answer_id": 31316721, "link": "http://stackoverflow.com/questions/31316581/a-peculiar-feature-of-exception-type-inference-in-java-8/31316721#31316721", "tags": ["java", "generics", "java-8", "type-inference"]}, {"body": "<p>The T of <code>sneakyThrow</code> is inferred to be <code>RuntimeException</code>. This can be followed from the langauge spec on type inference (<a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-18.html\">http://docs.oracle.com/javase/specs/jls/se8/html/jls-18.html</a>)</p>\n\n<p>Firstly, there's a note in section 18.1.3:</p>\n\n<blockquote>\n  <p>A bound of the form <code>throws \u03b1</code> is purely informational: it directs resolution to optimize the instantiation of \u03b1 so that, if possible, it is not a checked exception type.</p>\n</blockquote>\n\n<p>This doesn't affect anything, but it points us to the Resolution section (18.4), which has got more information on inferred exception types with a special case:</p>\n\n<blockquote>\n  <p>... Otherwise, if the bound set contains <code>throws \u03b1i</code>, and the proper upper bounds of \u03b1i are, at most, <code>Exception</code>, <code>Throwable</code>, and <code>Object</code>, then Ti = <code>RuntimeException</code>. </p>\n</blockquote>\n\n<p>This case applies to <code>sneakyThrow</code> - the only upper bound is <code>Throwable</code>, so <code>T</code> is inferred to be <code>RuntimeException</code> as per the spec, so it compiles. The body of the method is immaterial - the unchecked cast succeeds at runtime because it doesn't actually happen, leaving a method that can defeat the compile-time checked exception system.</p>\n\n<p><code>nonSneakyThrow</code> does not compile as that method's <code>T</code> has got a lower bound of <code>Exception</code> (ie <code>T</code> must be a supertype of <code>Exception</code>, or <code>Exception</code> itself), which is a checked exception, due to the type it's being called with, so that <code>T</code> gets inferred as <code>Exception</code>.</p>\n", "title": "A peculiar feature of exception type inference in Java 8", "answer_id": 31316879, "link": "http://stackoverflow.com/questions/31316581/a-peculiar-feature-of-exception-type-inference-in-java-8/31316879#31316879", "tags": ["java", "generics", "java-8", "type-inference"]}, {"body": "<p>If type inference produces a single upper bound for a type variable, typically the upper bound is chosen as the solution. For example, if <code>T&lt;&lt;Number</code>, the solution is <code>T=Number</code>. Although <code>Integer</code>, <code>Float</code> etc. could also satisfy the constraint, there's no good reason to choose them over <code>Number</code>.</p>\n\n<p>That was also the case for <code>throws T</code> in java 5-7: <code>T&lt;&lt;Throwable  =&gt;  T=Throwable</code>. (Sneaky throw solutions all had explicit <code>&lt;RuntimeException&gt;</code> type arguments, otherwise <code>&lt;Throwable&gt;</code> is inferred.)</p>\n\n<p>In java8, with the introduction of lambda, this becomes problematic. Consider this case</p>\n\n<pre><code>interface Action&lt;T extends Throwable&gt;\n{\n    void doIt() throws T;\n}\n\n&lt;T extends Throwable&gt; void invoke(Action&lt;T&gt; action) throws T\n{\n    action.doIt(); // throws T\n}    \n</code></pre>\n\n<p>If we invoke with an empty lambda, what would <code>T</code> be inferred as?</p>\n\n<pre><code>    invoke( ()-&gt;{} ); \n</code></pre>\n\n<p>The only constraint on <code>T</code> is an upper bound <code>Throwable</code>. In earlier stage of java8, <code>T=Throwable</code> would be inferred. See this <a href=\"http://mail.openjdk.java.net/pipermail/lambda-dev/2013-February/007981.html\">report</a> I filed.</p>\n\n<p>But that is pretty silly, to infer <code>Throwable</code>, a checked exception, out of an empty block. A solution was proposed in the report (which is apparently adopted by JLS) -</p>\n\n<pre><code>If E has not been inferred from previous steps, and E is in the throw clause, \nand E has an upper constraint E&lt;&lt;X,\n    if X:&gt;RuntimeException, infer E=RuntimeException\n    otherwise, infer E=X. (X is an Error or a checked exception)\n</code></pre>\n\n<p>i.e. if the upper bound is <code>Exception</code> or <code>Throwable</code>, choose <code>RuntimeException</code> as the solution. In this case, there <em>is</em> a good reason to choose a particular subtype of the upper bound. </p>\n", "title": "A peculiar feature of exception type inference in Java 8", "answer_id": 31327420, "link": "http://stackoverflow.com/questions/31316581/a-peculiar-feature-of-exception-type-inference-in-java-8/31327420#31327420", "tags": ["java", "generics", "java-8", "type-inference"]}], "question_id": 31316581}, {"body": "<p>Consider the following example code</p>\n\n<pre><code>class MyClass {\n    public String var = \"base\";\n\n    public void printVar() {\n        System.out.println(var);\n    }\n}\n\nclass MyDerivedClass extends MyClass {\n    public String var = \"derived\";\n\n    public void printVar() {\n        System.out.println(var);\n    }\n}\n\npublic class Binding {\n    public static void main(String[] args) {\n        MyClass base = new MyClass();\n        MyClass derived = new MyDerivedClass();\n\n        System.out.println(base.var);\n        System.out.println(derived.var);\n        base.printVar();\n        derived.printVar();\n    }\n}\n</code></pre>\n\n<p>it gives the following output</p>\n\n<pre><code>base\nbase\nbase\nderived\n</code></pre>\n\n<p>Method calls are resolved at runtime and the correct overridden method is called, as expected.<br>\nThe variables access is instead resolved at compile time as I later learned.\nI was expecting an output as</p>\n\n<pre><code>base\nderived\nbase\nderived\n</code></pre>\n\n<p>because in the derived class the re-definition of <code>var</code> shadows the one in the base class.<br>\nWhy does the binding of variables happens at compile time and not at runtime? Is this only for performance reasons?</p>\n", "tags": ["java", "inheritance", "jls"], "title": "Why does Java bind variables at compile time?", "answer_count": 4, "creation_date": 1441538049, "score": 55, "link": "http://stackoverflow.com/questions/32422923/why-does-java-bind-variables-at-compile-time", "answers": [{"body": "<p>While you might be right about performance, there is another reason why fields are not dynamically dispatched: You wouldn't be able to access the <code>MyClass.var</code> field at all if you had a <code>MyDerivedClass</code> instance. </p>\n\n<p>Generally, I don't know about any statically typed language that actually has dynamic variable resolution. But if you really need it, you can make getters or accessor methods (which should be done in most cases to avoid <code>public</code> fields, anyway):</p>\n\n<pre><code>class MyClass\n{\n    private String var = \"base\";\n\n    public String getVar() // or simply 'var()'\n    {\n        return this.var;\n    }\n}\n\nclass MyDerivedClass extends MyClass {\n    private String var = \"derived\";\n\n    @Override\n    public String getVar() {\n        return this.var;\n    }\n}\n</code></pre>\n", "title": "Why does Java bind variables at compile time?", "answer_id": 32422990, "link": "http://stackoverflow.com/questions/32422923/why-does-java-bind-variables-at-compile-time/32422990#32422990", "tags": ["java", "inheritance", "jls"]}, {"body": "<p>The polymorphic behaviour of the java language works with methods and not member variables: they designed the language to bind member variables at compile time.</p>\n", "title": "Why does Java bind variables at compile time?", "answer_id": 32423051, "link": "http://stackoverflow.com/questions/32422923/why-does-java-bind-variables-at-compile-time/32423051#32423051", "tags": ["java", "inheritance", "jls"]}, {"body": "<p>The reason is explained in the Java Language Specification in an example in <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.11\">Section 15.11</a>, quoted below:</p>\n\n<blockquote>\n  <p>...</p>\n  \n  <p><em>The last line shows that, indeed, the field that is accessed does not depend on the run-time class of the referenced object; even if <code>s</code> holds a reference to an object of class <code>T</code>, the expression <code>s.x</code> refers to the <code>x</code> field of class <code>S</code>, because the type of the expression <code>s</code> is <code>S</code>. Objects of class T contain two fields named <code>x</code>, one for class <code>T</code> and one for its superclass <code>S</code>.</em></p>\n  \n  <p><strong><em>This lack of dynamic lookup for field accesses allows programs to be run efficiently with straightforward implementations. The power of late binding and overriding is available, but only when instance methods are used</strong>...</em></p>\n</blockquote>\n\n<p>So yes performance is a reason. The specification of how the field access expression is evaluated is stated as follows:</p>\n\n<blockquote>\n  <ul>\n  <li><p>If the field is not <code>static</code>:</p>\n  \n  <p>...</p>\n  \n  <ul>\n  <li>If the field is a non-blank <code>final</code>, then the result is the value of the named member field in type <code>T</code> found in the object referenced by the value of the <em>Primary</em>.</li>\n  </ul></li>\n  </ul>\n</blockquote>\n\n<p>where <em>Primary</em> in your case refers the variable <code>derived</code> which is of type <code>MyClass</code>.</p>\n\n<p>Another reason, as @Clashsoft suggested, is that in subclasses, fields are not overriden, they are <em>hidden</em>. So it makes sense to allow which fields to access based on the declared type or using a cast. This is also true for static methods. This is why the field is determined based on the declared type. Unlike overriding by instance methods where it depends on the actual type. The JLS quote above indeed mentions this reason implicitly:</p>\n\n<blockquote>\n  <p><strong>The power of late binding and overriding is available, but only when instance methods are used.</strong></p>\n</blockquote>\n", "title": "Why does Java bind variables at compile time?", "answer_id": 32423092, "link": "http://stackoverflow.com/questions/32422923/why-does-java-bind-variables-at-compile-time/32423092#32423092", "tags": ["java", "inheritance", "jls"]}, {"body": "<p>In java, this is by design.\nBecause, the set up of fields to be dynamically resolved would make things to run a bit slower. And in real, there's not any reason of doing so.\nSince, you can make your fields in any class <strong>private</strong> and access them with <strong>methods</strong> which are <strong>dynamically resolved</strong>.</p>\n\n<p>So, fields are made to resolved better at <strong>compile time</strong> instead :)</p>\n", "title": "Why does Java bind variables at compile time?", "answer_id": 32470752, "link": "http://stackoverflow.com/questions/32422923/why-does-java-bind-variables-at-compile-time/32470752#32470752", "tags": ["java", "inheritance", "jls"]}], "question_id": 32422923}, {"body": "<p>Suppose I have an enum <code>Color</code> with 2 possible values: <code>RED</code> and <code>BLUE</code>:</p>\n\n<pre><code>public enum Color {\n    RED,\n    BLUE\n}\n</code></pre>\n\n<p>Now suppose I have a switch statement for this enum where I have code for both possible values:</p>\n\n<pre><code>Color color = getColor(); // a method which returns a value of enum \"Color\"\nswitch (color) {\ncase RED:\n   ...\n   break;\n\ncase BLUE:\n   ...\n   break;\n\ndefault:\n   break;\n}\n</code></pre>\n\n<p>Since I have code block for both possible values of the enum, what is the usage of <code>default</code> in the above code?</p>\n\n<p>Should I throw an exception if the code somehow reaches the <code>default</code> block like this?</p>\n\n<pre><code>Color color = getColor(); // a method which returns a value of enum \"Color\"\nswitch (color) {\ncase RED:\n   ...\n   break;\n\ncase BLUE:\n   ...\n   break;\n\ndefault:\n   throw new IllegalArgumentException(\"This should not have happened\");\n}\n</code></pre>\n", "tags": ["java", "enums"], "title": "What is the usage of default when the switch is for an enum?", "answer_count": 12, "creation_date": 1444316765, "score": 54, "link": "http://stackoverflow.com/questions/33019562/what-is-the-usage-of-default-when-the-switch-is-for-an-enum", "answers": [{"body": "<p>In small programs, there is no practical use for that, but think of a complex system that speards among large number of files and developers - if you define the <code>enum</code> in one file and use it in another one, and later on someone adds a value to the <code>enum</code> without updating the <code>switch</code> statement, you'll find it very useful...</p>\n", "title": "What is the usage of default when the switch is for an enum?", "answer_id": 33019652, "link": "http://stackoverflow.com/questions/33019562/what-is-the-usage-of-default-when-the-switch-is-for-an-enum/33019652#33019652", "tags": ["java", "enums"]}, {"body": "<p>When the enum constants are too many and you need to handle only for few cases, then the <code>default</code> will handle the rest of the constants.</p>\n\n<p>Also, enum constants are references, if the reference is not yet set, or <code>null</code>. You may have to handle such cases too. </p>\n", "title": "What is the usage of default when the switch is for an enum?", "answer_id": 33019656, "link": "http://stackoverflow.com/questions/33019562/what-is-the-usage-of-default-when-the-switch-is-for-an-enum/33019656#33019656", "tags": ["java", "enums"]}, {"body": "<p>To satisfy IDEs and other static linters, I often leave the default case in as a no-op, along with a comment such as <code>// Can't happen</code> or <code>// Unreachable</code></p>\n\n<p>i.e., if the switch is doing the typical thing of handling all possible enum values, either explicitly or via fall-throughs, then the default case is probably programmer error.</p>\n\n<p>Depending on the application, I sometimes put an assertion in the case to guard against programmer error during development. But this has limited value in shipping code (unless you ship with assertions enabled.)</p>\n\n<p>Again, depending on the situation I might be convinced to throw an Error, as this is really an unrecoverable situation -- nothing the user can do will correct what is probably programmer error.</p>\n", "title": "What is the usage of default when the switch is for an enum?", "answer_id": 33019673, "link": "http://stackoverflow.com/questions/33019562/what-is-the-usage-of-default-when-the-switch-is-for-an-enum/33019673#33019673", "tags": ["java", "enums"]}, {"body": "<p>Yes, you should do it. You may change <code>enum</code> but don't change <code>switch</code>. In the future it'll lead to mistakes. I think that <code>throw new IllegalArgumentException(msg)</code> is the good practice.</p>\n", "title": "What is the usage of default when the switch is for an enum?", "answer_id": 33019682, "link": "http://stackoverflow.com/questions/33019562/what-is-the-usage-of-default-when-the-switch-is-for-an-enum/33019682#33019682", "tags": ["java", "enums"]}, {"body": "<p>It is good practice to throw an Exception as you have shown in the second example. You improve the maintainability of your code by failing fast. </p>\n\n<p>In this case it would mean if you later (perhaps years later) add an enum value and it reaches the switch statement you will immediately discover the error. </p>\n\n<p>If the default value were not set, the code would perhaps run through even with the new enum value and could possibly have undesired behavior.</p>\n", "title": "What is the usage of default when the switch is for an enum?", "answer_id": 33019695, "link": "http://stackoverflow.com/questions/33019562/what-is-the-usage-of-default-when-the-switch-is-for-an-enum/33019695#33019695", "tags": ["java", "enums"]}, {"body": "<p>Yes, it is dead code until someone add a value to the enum, which will make your switch statement follow the principle of 'fail fast' (<a href=\"https://en.wikipedia.org/wiki/Fail-fast\">https://en.wikipedia.org/wiki/Fail-fast</a>)</p>\n\n<p>This could relates to this question : <a href=\"http://stackoverflow.com/questions/16797529/how-to-ensure-completeness-in-an-enum-switch-at-compile-time\">How to ensure completeness in an enum switch at compile time?</a></p>\n", "title": "What is the usage of default when the switch is for an enum?", "answer_id": 33019719, "link": "http://stackoverflow.com/questions/33019562/what-is-the-usage-of-default-when-the-switch-is-for-an-enum/33019719#33019719", "tags": ["java", "enums"]}, {"body": "<p>Compile time completeness of the switch cases doesn't guarantee runtime completenes.</p>\n\n<p>Class with a switch statement compiled against an older version of enum may be executed with a newer enum version (with more values). That's a common case with library dependencies.</p>\n\n<p>For reasons like these, the compiler considers the <code>switch</code> without <code>default</code> case incomplete.</p>\n", "title": "What is the usage of default when the switch is for an enum?", "answer_id": 33019749, "link": "http://stackoverflow.com/questions/33019562/what-is-the-usage-of-default-when-the-switch-is-for-an-enum/33019749#33019749", "tags": ["java", "enums"]}, {"body": "<p>The other answers are correct in saying that you should implement a <code>default</code> branch that throws an exception, in case a new value gets added to your enum in the future. However, I would go one step further and question why you're even using a <code>switch</code> statement in the first place.</p>\n\n<p>Unlike languages like C++ and C#, Java represents Enum values as actual objects, which means that you can leverage object-oriented programming. Let's say that the purpose of your method is to provide an RGB value for each color:</p>\n\n<pre><code>switch (color)\n    case RED:\n       return \"#ff0000\";\n    ...\n</code></pre>\n\n<p>Well, arguably, if you want each color to have an RGB value, you should include that as part of its description:</p>\n\n<pre><code>public enum Color\n{\n    RED(\"#FF0000\"),\n    BLUE(\"#0000FF\");\n\n    String rgb;\n    public Color(String rgb) {\n        this.rgb = rgb;\n    }\n    public getRgb() { return this.rgb; }\n}\n</code></pre>\n\n<p>That way, if you add a new color later, you're pretty much forced to provide an RGB value. It's even more fail-fast than the other approach, because you'll fail at compile-time rather than run-time.</p>\n\n<p>Note that you can do even more complicated things if you need to, including having each color provide its own custom implementation of an abstract method. Enums in Java are really powerful and object-oriented, and in most cases I've found I can avoid needing to <code>switch</code> on them in the first place.</p>\n", "title": "What is the usage of default when the switch is for an enum?", "answer_id": 33020865, "link": "http://stackoverflow.com/questions/33019562/what-is-the-usage-of-default-when-the-switch-is-for-an-enum/33020865#33020865", "tags": ["java", "enums"]}, {"body": "<p>If you've covered all of the possibilities with your various <code>cases</code> and the <code>default</code> cannot happen, this is the classic use case for <a href=\"http://docs.oracle.com/javase/7/docs/technotes/guides/language/assert.html\"><em>assertions</em></a>:</p>\n\n<pre><code>Color color = getColor(); // a method which returns a value of enum \"Color\"\nswitch (color) {\n    case RED:\n       // ...\n       break;\n\n    case BLUE:\n       // ...\n       break;\n\n    default:\n       assert false; // This cannot happen\n       // or:\n       throw new AssertionError(\"Invalid Colors enum\");\n}\n</code></pre>\n", "title": "What is the usage of default when the switch is for an enum?", "answer_id": 33033281, "link": "http://stackoverflow.com/questions/33019562/what-is-the-usage-of-default-when-the-switch-is-for-an-enum/33033281#33033281", "tags": ["java", "enums"]}, {"body": "<p>Apart from the possible future extending of the enum, which was pointed out by many, some day someone may 'improve' yout <code>getColor()</code> or override it in a derived class and let it return an invalid value. Of course a compiler should catch that, unless someone explicitly forces unsafe type casting...</p>\n\n<p>But bad things just happen, and it's a good practice not to leave any unexpected <code>else</code> or <code>default</code> path unguarded.</p>\n", "title": "What is the usage of default when the switch is for an enum?", "answer_id": 33040364, "link": "http://stackoverflow.com/questions/33019562/what-is-the-usage-of-default-when-the-switch-is-for-an-enum/33040364#33040364", "tags": ["java", "enums"]}, {"body": "<p>I'm surprised nobody else mentioned this. You can cast an int to an enum and it won't throw just because the value is not one of the enumerated values. This means (among other things), the compiler cannot tell that all the enum values are in the switch.</p>\n\n<p>Even if you write your code correctly, this really does come up when serializing objects that contain enums. A future version might add to the enum and your code choke on reading it back, or somebody looking to create mayhem may hexedit a new value in. Either way, running off the switch rarely does the right thing. So, we throw in default unless we know better.</p>\n", "title": "What is the usage of default when the switch is for an enum?", "answer_id": 33041850, "link": "http://stackoverflow.com/questions/33019562/what-is-the-usage-of-default-when-the-switch-is-for-an-enum/33041850#33041850", "tags": ["java", "enums"]}, {"body": "<p>Here is how I would handle it, beside <code>NULL</code> value which would result in a null pointer exception which you can handle.</p>\n\n<p>If <code>Color color</code> is not <code>null</code>, it has to be one of the singletons in <code>enum Color</code>, if you assign any reference to an object that is not one of the them this will cause a Runtime error.</p>\n\n<p>So my solution is to account for values that are not supported.</p>\n\n<p><a href=\"http://ideone.com/eVeqPd\" rel=\"nofollow\">Test Run</a></p>\n\n<p><em>Test.java</em></p>\n\n<pre><code>public Test\n{\n  public static void main (String [] args)\n  {\n    try { test_1(null); }\n    catch (NullPointerException e) { System.out.println (\"NullPointerException\"); }\n\n    try { test_2(null); }\n    catch (Exception e) { System.out.println(e.getMessage()); }\n\n    try { test_1(Color.Green); }\n    catch (Exception e) { System.out.println(e.getMessage()); }\n  }\n\n  public static String test_1 (Color color) throws Exception\n  {\n    String out = \"\";\n\n    switch (color) // NullPointerException expected\n    {\n      case Color.Red:\n        out = Red.getName();\n        break;\n      case Color.Blue:\n        out = Red.getName();\n        break;\n      default:\n        throw new UnsupportedArgumentException (\"unsupported color: \" + color.getName());\n    }\n\n    return out;\n  }\n</code></pre>\n\n<p>.. or you can consider <code>null</code> as unsupported too</p>\n\n<pre><code>  public static String test_2 (Color color) throws Exception\n  {\n    if (color == null) throw new UnsupportedArgumentException (\"unsupported color: NULL\");\n    return test_1(color);\n  }\n}\n</code></pre>\n\n<p><em>Color.java</em></p>\n\n<pre><code>enum Color\n{\n  Red(\"Red\"), Blue(\"Blue\"), Green(\"Green\");\n  private final String name;\n  private Color(String n) { name = n; }\n  public String getName() { return name; }\n}\n</code></pre>\n\n<p><em>UnsupportedArgumentException.java</em></p>\n\n<pre><code>class UnsupportedArgumentException extends Exception\n{\n  private String message = null;\n\n  public UnsupportedArgumentException() { super(); }\n\n  public UnsupportedArgumentException (String message)\n  {\n    super(message);\n    this.message = message;\n  }\n\n  public UnsupportedArgumentException (Throwable cause) { super(cause); }\n\n  @Override public String toString() { return message; }\n\n  @Override public String getMessage() { return message; }\n}\n</code></pre>\n", "title": "What is the usage of default when the switch is for an enum?", "answer_id": 33123081, "link": "http://stackoverflow.com/questions/33019562/what-is-the-usage-of-default-when-the-switch-is-for-an-enum/33123081#33123081", "tags": ["java", "enums"]}], "question_id": 33019562}, {"body": "<h2>Question</h2>\n\n<p>How is it that for a scanner object the <code>hasNextLine()</code> method returns true  while the <code>hasNext()</code> method returns false?</p>\n\n<p>Note: Based on the input file, the <code>hasNext()</code> method is returning the result as expected; the <code>hasNextLine()</code> does not seem to be returning the correct result.</p>\n\n<h2>Code</h2>\n\n<p>Here's the code I'm running that's creating the results below:</p>\n\n<pre><code>public void ScannerTest(Reader fileReaderObject){\n    Scanner scannerObj = new Scanner(fileReaderObject);\n\n    for(int i = 1; scannerObj.hasNext(); i++){\n        System.out.println(i + \": \" + scannerObj.next());\n        System.out.println(\"Has next line: \" + scannerObj.hasNextLine());\n        System.out.println(\"Has next: \" + scannerObj.hasNext());\n    }\n    System.out.println();\n\n    scannerObj.close();\n}\n</code></pre>\n\n<h2>Input File</h2>\n\n<p>The following is the actual content of the file that I'm passing to this scanner:</p>\n\n<pre><code>a   3   9\nb   3   6\nc   3   3\nd   2   8\ne   2   5\nf   2   2\ng   1   7\nh   1   4\ni   1   1\n</code></pre>\n\n<h2>Result</h2>\n\n<p>The following is the end of what's printed in the console when I run my code, and includes the portion I can't make sense of:</p>\n\n<pre><code>25: i\nHas next line: true\nHas next: true\n26: 1\nHas next line: true\nHas next: true\n27: 1\nHas next line: true\nHas next: false\n</code></pre>\n", "tags": ["java", "java.util.scanner"], "title": "Why is hasNext() False, but hasNextLine() is True?", "answer_count": 4, "creation_date": 1439482195, "score": 53, "link": "http://stackoverflow.com/questions/31993377/why-is-hasnext-false-but-hasnextline-is-true", "answers": [{"body": "<p>You are consuming the value of <code>next()</code>, but asking for <code>hasNext()</code> and <code>hasNextLine()</code>. <code>next()</code>, per default, returns everything to the next <code>whitespace()</code>. So you are iterating through all whitespace seperated strings, and after each of them you are asking about the <code>nextLine()</code>.</p>\n\n<p><code>i   1   1</code> -> <code>hasNextLine()</code>? True. <code>hasNext()</code>? Also true.</p>\n\n<p><code>1   1</code> -> <code>hasNextLine()</code>? True. <code>hasNext()</code>? Also true (still a whitespace left)</p>\n\n<p><code>1</code> -> <code>hasNextLine()</code>? True (Line Seperator, probably). haxNext? False, no whitespace anymore.</p>\n", "title": "Why is hasNext() False, but hasNextLine() is True?", "answer_id": 31993478, "link": "http://stackoverflow.com/questions/31993377/why-is-hasnext-false-but-hasnextline-is-true/31993478#31993478", "tags": ["java", "java.util.scanner"]}, {"body": "<p>The reason is that <code>hasNext()</code> checks if there are any more non-whitespace characters available. <code>hasNextLine()</code> checks to see if there is another line of text available. Your text file probably has a newline at the end of it so it has another line but no more characters that are not whitespace.</p>\n\n<p>Many text editors automatically add a newline to the end of a file if there isn't one already.</p>\n\n<p>In other words, your input file is not this (the numbers are line numbers):</p>\n\n<pre><code>1. a   3   9\n2. b   3   6\n3. c   3   3\n4. d   2   8\n5. e   2   5\n</code></pre>\n\n<p>It is actually this:</p>\n\n<pre><code>1. a   3   9\n2. b   3   6\n3. c   3   3\n4. d   2   8\n5. e   2   5\n6. \n</code></pre>\n", "title": "Why is hasNext() False, but hasNextLine() is True?", "answer_id": 31993533, "link": "http://stackoverflow.com/questions/31993377/why-is-hasnext-false-but-hasnextline-is-true/31993533#31993533", "tags": ["java", "java.util.scanner"]}, {"body": "<h3>You have a single extra newline at the end of your file.</h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html#hasNextLine()\"><code>hasNextLine()</code></a> checks to see if there is another <code>linePattern</code> in the buffer.</li>\n<li><a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html#hasNext()\"><code>hasNext()</code></a> checks to see if there is a parseable token in the buffer, as separated by the scanner's delimiter.</li>\n</ul>\n\n<p>Since the scanner's delimiter is whitespace, and the <code>linePattern</code> is also white space, it is possible for there to be a <code>linePattern</code> in the buffer but no parseable tokens.</p>\n\n<p>Typically, the most common way to deal with this issue by always calling <code>nextLine()</code> after parsing all the tokens (e.g. numbers) in each line of your text. You need to do this when using <code>Scanner</code> when reading a user's input too from <code>System.in</code>. To advance the scanner past this whitespace delimiter, you must use <code>scanner.nextLine()</code> to clear the line delimiter. See: <a href=\"http://stackoverflow.com/q/5032356/1768232\">Using scanner.nextLine()</a></p>\n\n<hr>\n\n<p><strong>Appendix:</strong></p>\n\n<p><code>LinePattern</code> is defined to be a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html\"><code>Pattern</code></a> that matches this:</p>\n\n<pre><code>private static final String LINE_SEPARATOR_PATTERN =\n                                       \"\\r\\n|[\\n\\r\\u2028\\u2029\\u0085]\";\nprivate static final String LINE_PATTERN = \".*(\"+LINE_SEPARATOR_PATTERN+\")|.+$\";\n</code></pre>\n\n<p>The default token delimiter is this <code>Pattern</code>:</p>\n\n<pre><code>private static Pattern WHITESPACE_PATTERN = Pattern.compile(\n                                            \"\\\\p{javaWhitespace}+\");\n</code></pre>\n", "title": "Why is hasNext() False, but hasNextLine() is True?", "answer_id": 31993534, "link": "http://stackoverflow.com/questions/31993377/why-is-hasnext-false-but-hasnextline-is-true/31993534#31993534", "tags": ["java", "java.util.scanner"]}, {"body": "<h2>Short answer</h2>\n\n<p>You have an empty line at the end of the file.</p>\n\n<hr>\n\n<h2>Reason for the empty line</h2>\n\n<p>If you take your content and save it for example into a txt file, some editors will add an empty new line to your file.</p>\n\n<p>The editors behave this way, because this is part of the <a href=\"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_206\" rel=\"nofollow\">POSIX</a> standard:</p>\n\n<blockquote>\n  <p><strong>3.206 Line</strong> </p>\n  \n  <p>A sequence of zero or more non-  characters plus a terminating  character.</p>\n</blockquote>\n\n<p>This topic has been discussed in <a href=\"http://stackoverflow.com/questions/729692/why-should-files-end-with-a-newline\">this thread</a>.</p>\n\n<hr>\n\n<h2>Java Scanner documentation</h2>\n\n<p>Here is the documentation from the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/Scanner.html\" rel=\"nofollow\">Java 8 Scanner class</a>.</p>\n\n<blockquote>\n  <p><strong><code>hasNext()</code></strong></p>\n  \n  <p>Returns true if this scanner has another token in its input.</p>\n</blockquote>\n\n<hr>\n\n<blockquote>\n  <p><strong><code>hasNextLine()</code></strong></p>\n  \n  <p>Returns true if there is another line in the input of this scanner.</p>\n</blockquote>\n\n<hr>\n\n<h2>Reason for the Java code behavior</h2>\n\n<p>Because of the above described facts, <code>hasNextLine()</code> will return <code>true</code>, but <code>hasNext()</code> cannot find anything, which it can recognize as <code>Token</code> and returns therefore <code>false</code>.</p>\n\n<p>For additional infos see <a href=\"http://stackoverflow.com/a/31993534/1943228\">durron597</a> post.</p>\n", "title": "Why is hasNext() False, but hasNextLine() is True?", "answer_id": 31993656, "link": "http://stackoverflow.com/questions/31993377/why-is-hasnext-false-but-hasnextline-is-true/31993656#31993656", "tags": ["java", "java.util.scanner"]}], "question_id": 31993377}, {"body": "<p>Exactly what are the differences between <strong>variables</strong>, <strong>objects</strong>, and <strong>references</strong>?</p>\n\n<p>For example: they all point to some type, and they must all hold values (unless of course you have the temporary null-able type), but precisely how are their functions and implementations different from each other?</p>\n\n<p>Example:</p>\n\n<pre><code>Dog myDog = new Dog(); //variable myDog that holds a reference to object Dog\nint x = 12; //variable x that hold a value of 12\n</code></pre>\n\n<p>They have the same concepts, but how are they different?</p>\n", "tags": ["java", "c#", "variables", "object", "reference"], "title": "What is the difference between a variable, object, and reference?", "answer_count": 5, "creation_date": 1439555417, "score": 52, "link": "http://stackoverflow.com/questions/32010172/what-is-the-difference-between-a-variable-object-and-reference", "answers": [{"body": "<p>(Just to be clear, the explanation I'm giving here is specific to Java and C#. Don't assume it applies to other languages, although bits of it may.)</p>\n\n<p>I like to use an analogy of telling someone where I live. I might write my address on a piece of paper:</p>\n\n<ul>\n<li>A variable is like a piece of paper. It holds a value, but it isn't the value in itself. You can cross out whatever's there and write something else instead.</li>\n<li>The address that I write on the piece of paper is like a reference. It isn't my house, but it's a way of <em>navigating</em> to my house.</li>\n<li>My house itself is like an object. I can give out multiple references to the same object, but there's only one object.</li>\n</ul>\n\n<p>Does that help?</p>\n\n<p>The difference between a value type and a reference type is what gets written on the piece of paper. For example, here:</p>\n\n<pre><code>int x = 12;\n</code></pre>\n\n<p>is like having a piece of paper with the number 12 written on it directly. Whereas:</p>\n\n<pre><code>Dog myDog = new Dog();\n</code></pre>\n\n<p>doesn't write the Dog object contents itself on the piece of paper - it creates a new <code>Dog</code>, and then writes a reference to the dog on that paper.</p>\n\n<p>In non-analogy terms:</p>\n\n<ul>\n<li>A variable represents a storage location in memory. It has a name by which you can refer to it at compile time, and at execution time it has a value, which will always be compatible with its compile-time type. (For example, if you've got a <code>Button</code> variable, the value will always be a reference to an object of type <code>Button</code> or some subclass - or the <code>null</code> reference.)</li>\n<li>An object is a sort of separate entity. Importantly, the value of a variable or any expression is <em>never</em> an object, only a reference. An object effectively consists of:\n\n<ul>\n<li>Fields (the state)</li>\n<li>A type reference (can never change through the lifetime of the object)</li>\n<li>A monitor (for synchronization)</li>\n</ul></li>\n<li>A reference is a value used to access an object - e.g. to call methods on it, access fields etc. You typically navigate the reference with the <code>.</code> operator. For example, if <code>foo</code> is a <code>Person</code> variable, <code>foo.getAddress().getLength()</code> would take the value of <code>foo</code> (a reference) and call <code>getAddress()</code> on the object that that reference refers to. The result might be a <code>String</code> reference... we then call <code>getLength()</code> on the object that <em>that</em> reference refers to.</li>\n</ul>\n", "title": "What is the difference between a variable, object, and reference?", "answer_id": 32010236, "link": "http://stackoverflow.com/questions/32010172/what-is-the-difference-between-a-variable-object-and-reference/32010236#32010236", "tags": ["java", "c#", "variables", "object", "reference"]}, {"body": "<p>new Dog() will instantiate an object Dog ie) it will create a memory for the object. You need to access the variable to manipulate some operations. For that you need an reference that is Dog myDog. If you try to print the object it will print an non readable value which is nothing but the address.</p>\n\n<pre><code>      myDog -------&gt; new Dog().\n</code></pre>\n", "title": "What is the difference between a variable, object, and reference?", "answer_id": 32010239, "link": "http://stackoverflow.com/questions/32010172/what-is-the-difference-between-a-variable-object-and-reference/32010239#32010239", "tags": ["java", "c#", "variables", "object", "reference"]}, {"body": "<p>I often use the following analogy when explaining these concepts.</p>\n\n<hr>\n\n<p>Imagine that an object is a balloon. A variable is a person. Every person is either in the <em>value type</em> team or in the <em>reference type</em> team. And they all play a little game with the following rules:</p>\n\n<p>Rules for <em>value types</em>: </p>\n\n<ul>\n<li>You hold in your arms a balloon filled with air.  <em>(Value type variables store the object.)</em></li>\n<li>You must always be holding exactly one balloon. <em>(Value types are not nullable.)</em></li>\n<li>When someone else wants your balloon, they can blow up their own identical one, and hold that in their arms. <em>(In value types, the object is copied.)</em></li>\n<li>Two people can't hold the same balloon. <em>(Value types are not shared.)</em></li>\n<li>If you want to hold a different balloon, you have to pop the one you're already holding and grab another. <em>(A value type object is destroyed when replaced.)</em></li>\n</ul>\n\n<p>Rules for <em>reference types</em>:</p>\n\n<ul>\n<li>You may hold a piece of string that leads to a balloon filled with helium. <em>(Reference type variables store a reference to the object.)</em></li>\n<li>You are allowed to hold one piece of string, or no piece of string at all. <em>(Reference type variables are nullable.)</em></li>\n<li>When someone else wants your balloon, they can get their own piece of string and tie it to the same balloon as you have. <em>(In reference types, the reference is copied.)</em></li>\n<li>Multiple people can hold pieces of string that all lead to the same balloon. <em>(Reference type objects can be shared.)</em></li>\n<li>As long as there is at least one person still holding the string to a particular balloon, the balloon is safe. <em>(A reference type object is alive as long as it is reachable.)</em></li>\n<li>For any particular balloon, if everyone eventually lets go of it, then that balloon flies away and nobody can reach it anymore. <em>(A reference type object may become unreachable at some point.)</em></li>\n<li>At some later point before the game ends, a lost balloon may pop by itself due to atmospheric pressure. <em>(Unreachable objects are eligible for garbage collection, which is non-deterministic.)</em></li>\n</ul>\n", "title": "What is the difference between a variable, object, and reference?", "answer_id": 32011685, "link": "http://stackoverflow.com/questions/32010172/what-is-the-difference-between-a-variable-object-and-reference/32011685#32011685", "tags": ["java", "c#", "variables", "object", "reference"]}, {"body": "<p>You can think of it like a answering questions.<br></p>\n\n<p><strong>An object is a what...</strong><br>\nIt's like any physical thing in the world, a \"thing\" which is recognizable by itself and has significant properties that distinguishes from other \"thing\".\nLike you know a dog is a dog because it barks, move its tail and go after a ball if you throw it.<br><br>\n<strong>A variable is a which...</strong><br>\nLike if you watch your own hands. Each one is a hand itself. They have fingers, nails and bones within the skin but you know one is your left hand and the other the right one.\nThat is to say, you can have two \"things\" of the same type/kind but every one could be different in it's own way, can have different values.</p>\n\n<p><strong>A reference is a where...</strong><br>\nIf you look at two houses in a street, although they're have their own facade, you can get to each one by their one unique address, meaning, if you're far away like three blocks far or in another country, you could tell the address of the house cause they'll still be there where you left them, even if you cannot point them directly.</p>\n\n<p>Now for programming's sake, examples in a C++ way<br></p>\n\n<pre><code>class Person{...}\nPerson Ana = new Person(); //An object is an instance of a class(normally)\n</code></pre>\n\n<p>That is to say, Ana is a person, but she has unique properties that distinguishes her from another person.</p>\n\n<pre><code>&amp;Ana //This is a reference to Ana, that is to say, a \"where\" does the variable \n     //\"Ana\" is stored, wether or not you know it's value(s)\n</code></pre>\n\n<p><code>Ana</code> itself is the variable for storing the properties of the person named \"Ana\"</p>\n", "title": "What is the difference between a variable, object, and reference?", "answer_id": 32013566, "link": "http://stackoverflow.com/questions/32010172/what-is-the-difference-between-a-variable-object-and-reference/32013566#32013566", "tags": ["java", "c#", "variables", "object", "reference"]}, {"body": "<p>Jon's answer is great for approaching it from analogy.  If a more concrete wording is useful for you, I can pitch in.</p>\n\n<p>Let's start with a variable.  A variable is a [named] thing which contains a value.  For instance, <code>int x = 3</code> defines a variable named x, which contains the integer 3.  If I then follow it up with an assignment, <code>x=4</code>, x now contains the integer 4.  The key thing is that we didn't replace the variable.  We don't have a new \"variable x whose value is now 4,\" we merely replaced the value of x with a new value.</p>\n\n<p>Now let's move to objects.  Objects are useful because often you need one \"thing\" to be referenced from many places.  For example, if you have a document open in an editor and want to send it to the printer, it'd be nice to only have one document, referenced both by the editor and the printer.  That'd save you having to copy it more times than you might want.</p>\n\n<p>However, because you don't want to copy it more than once, we can't just put an object in a variable.  Variables hold onto a value, so if two variables held onto an object, they'd have to make two copies, one for each variable.  References are the go-between that resolves this.  References are small, easily copied values which can be stored in variables.</p>\n\n<p>So, in code, when you type <code>Dog dog = new Dog()</code>, the new operator creates a new Dog Object, and returns a Reference to that object, so that it can be assigned to a variable.  The assignment then gives <code>dog</code> the value of a Reference to your newly created Object.</p>\n", "title": "What is the difference between a variable, object, and reference?", "answer_id": 32019015, "link": "http://stackoverflow.com/questions/32010172/what-is-the-difference-between-a-variable-object-and-reference/32019015#32019015", "tags": ["java", "c#", "variables", "object", "reference"]}], "question_id": 32010172}, {"body": "<p>As I recall, before Java 8, the default capacity of <code>ArrayList</code> was 10.</p>\n\n<p>Surprisingly, the comment on the default (void) constructor still says: <code>Constructs an empty list with an initial capacity of ten.</code></p>\n\n<p>From <code>ArrayList.java</code>:</p>\n\n<pre><code>/**\n * Shared empty array instance used for default sized empty instances. We\n * distinguish this from EMPTY_ELEMENTDATA to know how much to inflate when\n * first element is added.\n */\nprivate static final Object[] DEFAULTCAPACITY_EMPTY_ELEMENTDATA = {};\n\n...\n\n/**\n * Constructs an empty list with an initial capacity of ten.\n */\npublic ArrayList() {\n    this.elementData = DEFAULTCAPACITY_EMPTY_ELEMENTDATA;\n}\n</code></pre>\n", "tags": ["java", "arraylist", "java-8"], "title": "In Java 8, why is the default capacity of ArrayList now zero?", "answer_count": 4, "creation_date": 1450003272, "score": 52, "link": "http://stackoverflow.com/questions/34250207/in-java-8-why-is-the-default-capacity-of-arraylist-now-zero", "answers": [{"body": "<p>Technically, it's <code>10</code>, not zero, if you admit for a lazy initialisation of the backing array. See:</p>\n\n<pre><code>public boolean add(E e) {\n    ensureCapacityInternal(size + 1);\n    elementData[size++] = e;\n    return true;\n}\n\nprivate void ensureCapacityInternal(int minCapacity) {\n    if (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) {\n        minCapacity = Math.max(DEFAULT_CAPACITY, minCapacity);\n    }\n\n    ensureExplicitCapacity(minCapacity);\n}\n</code></pre>\n\n<p>where</p>\n\n<pre><code>/**\n * Default initial capacity.\n */\nprivate static final int DEFAULT_CAPACITY = 10;\n</code></pre>\n\n<p>What you're referring to is just the zero-sized initial array object that is shared among all initially empty <code>ArrayList</code> objects. I.e. the capacity of <code>10</code> is guaranteed <em>lazily</em>, an optimisation that is present also in Java 7.</p>\n\n<p>Admittedly, the constructor contract is not entirely accurate. Perhaps this is the source of confusion here.</p>\n\n<h3>Background</h3>\n\n<p>Here's an E-Mail by Mike Duigou</p>\n\n<blockquote>\n  <p>I have posted an updated version of the empty ArrayList and HashMap patch.</p>\n  \n  <p><a href=\"http://cr.openjdk.java.net/~mduigou/JDK-7143928/1/webrev/\">http://cr.openjdk.java.net/~mduigou/JDK-7143928/1/webrev/</a></p>\n  \n  <p>This revised implementation introduces <em>no new fields</em> to either class. For ArrayList the lazy allocation of the backing array occurs only if the list is created at default size. According to our performance analysis team, approximately 85% of ArrayList instances are created at default size so this optimization will be valid for an overwhelming majority of cases. </p>\n  \n  <p>For HashMap, creative use is made of the threshold field to track the requested initial size until the bucket array is needed. On the read side the empty map case is tested with isEmpty(). On the write size a comparison of (table == EMPTY_TABLE) is used to detect the need to inflate the bucket array. In readObject there's a little more work to try to choose an efficient initial capacity.</p>\n  \n  <p><em>From: <a href=\"http://mail.openjdk.java.net/pipermail/core-libs-dev/2013-April/015585.html\">http://mail.openjdk.java.net/pipermail/core-libs-dev/2013-April/015585.html</a></em></p>\n</blockquote>\n", "title": "In Java 8, why is the default capacity of ArrayList now zero?", "answer_id": 34250231, "link": "http://stackoverflow.com/questions/34250207/in-java-8-why-is-the-default-capacity-of-arraylist-now-zero/34250231#34250231", "tags": ["java", "arraylist", "java-8"]}, {"body": "<p>The question is 'why?'.</p>\n\n<p>Memory profiling inspections (for example (<a href=\"https://www.yourkit.com/docs/java/help/inspections_mem.jsp#sparse_arrays\" rel=\"nofollow\">https://www.yourkit.com/docs/java/help/inspections_mem.jsp#sparse_arrays</a>) shows that empty (filled with nulls) arrays occupy tons of memory . </p>\n\n<p>Default size of 10 objects means that we allocate 10 pointers (40 or 80 bytes) for underlying array at creation and fill them in with nulls. Real java applications create millions of array lists.</p>\n\n<p>The introduced modification removes^W postpone this memory consumption till moment you will actually use the array list.</p>\n", "title": "In Java 8, why is the default capacity of ArrayList now zero?", "answer_id": 34250630, "link": "http://stackoverflow.com/questions/34250207/in-java-8-why-is-the-default-capacity-of-arraylist-now-zero/34250630#34250630", "tags": ["java", "arraylist", "java-8"]}, {"body": "<p>If the very first operation that is done with an ArrayList is to pass <code>addAll</code> a collection which has more than ten elements, then any effort put into creating an initial ten-element array to hold the ArrayList's contents would be thrown out the window.  Whenever something is added to an ArrayList it's necessary to test whether the size of the resulting list will exceed the size of the backing store; allowing the initial backing store to have size zero rather than ten will cause this test to fail one extra time in the lifetime of a list whose first operation is an \"add\" which would require creating the initial ten-item array, but that cost is less than the cost of creating a ten-item array that never ends up getting used.</p>\n\n<p>That having been said, it might have been possible to improve performance further in some contexts if there were a overload of \"addAll\" which specified how many items (if any) would likely be added to the list after the present one, and which could use that to influence its allocation behavior.  In some cases code which adds the last few items to a list will have a pretty good idea that the list is never going to need any space beyond that.  There are many situations where a list will get populated once and never modified after that.  If at the point code knows that the ultimate size of a list will be 170 elements, it has 150 elements and a backing store of size 160, growing the backing store to size 320 will be unhelpful and leaving it at size 320 or trimming it to 170 will be less efficient than simply having the next allocation grow it to 170.</p>\n", "title": "In Java 8, why is the default capacity of ArrayList now zero?", "answer_id": 34256637, "link": "http://stackoverflow.com/questions/34250207/in-java-8-why-is-the-default-capacity-of-arraylist-now-zero/34256637#34256637", "tags": ["java", "arraylist", "java-8"]}, {"body": "<p>After the above question I gone through ArrayList Document of Java 8. I found the default size is still 10 only.</p>\n\n<p><a href=\"http://i.stack.imgur.com/YL83K.jpg\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/YL83K.jpg\" alt=\"Please see below\"></a></p>\n", "title": "In Java 8, why is the default capacity of ArrayList now zero?", "answer_id": 38659043, "link": "http://stackoverflow.com/questions/34250207/in-java-8-why-is-the-default-capacity-of-arraylist-now-zero/38659043#38659043", "tags": ["java", "arraylist", "java-8"]}], "question_id": 34250207}, {"body": "<p>Some may find it similar to the SO question <a href=\"http://stackoverflow.com/questions/24990691/will-java-final-variables-have-default-values?lq=1\">Will Java Final variables have  default values?</a> but that answer doesn't completely solve this, as that question doesn't directly print the value of x within instance initializer block. </p>\n\n<p>The problem arises when I try to print x directly inside the instance initializer block, while having assigned a value to x before the end of the block :</p>\n\n<h2>Case 1</h2>\n\n<pre><code>class HelloWorld {\n\n    final int x;\n\n    {\n        System.out.println(x);\n        x = 7;\n        System.out.println(x);    \n    }\n\n    HelloWorld() {\n        System.out.println(\"hi\");\n    }\n\n    public static void main(String[] args) {\n        HelloWorld t = new HelloWorld();\n    }\n}\n</code></pre>\n\n<p>This gives a compile time error stating that variable x might not have been initialized.</p>\n\n<pre><code>$ javac HelloWorld.java\nHelloWorld.java:6: error: variable x might not have been initialized\n        System.out.println(x);\n                           ^\n1 error\n</code></pre>\n\n<h2>Case 2</h2>\n\n<p>Instead of directly printing, I am calling a function to print:</p>\n\n<pre><code>class HelloWorld {\n\n    final int x;\n\n    {\n        printX();\n        x = 7;\n        printX();\n    }\n\n    HelloWorld() {\n        System.out.println(\"hi\");\n    }\n\n    void printX() {\n        System.out.println(x);\n    }\n\n    public static void main(String[] args) {\n        HelloWorld t = new HelloWorld();\n    }\n}\n</code></pre>\n\n<p>This compiles correctly and gives output</p>\n\n<pre><code>0\n7\nhi\n</code></pre>\n\n<p>What is the conceptual difference between the two cases?</p>\n", "tags": ["java", "initialization", "final"], "title": "Why attempt to print uninitialized variable does not always result in an error message", "answer_count": 6, "creation_date": 1448876102, "score": 51, "link": "http://stackoverflow.com/questions/33995384/why-attempt-to-print-uninitialized-variable-does-not-always-result-in-an-error-m", "answers": [{"body": "<p><strong>Case 1 :</strong></p>\n\n<p>Gives you a compile-error,</p>\n\n<p>Because at <code>System.out.println(x);</code> </p>\n\n<blockquote>\n  <p>you are trying to print x which was never initialized.</p>\n</blockquote>\n\n<p><strong>Case 2:</strong></p>\n\n<p>Works because you are not directly using any literal values, instead you are calling some method, which is correct.</p>\n\n<p><strong>General Rule is,</strong></p>\n\n<blockquote>\n  <p>If you are trying to access any variable which is never initialized\n  then it will give a compilation error.</p>\n</blockquote>\n", "title": "Why attempt to print uninitialized variable does not always result in an error message", "answer_id": 33995550, "link": "http://stackoverflow.com/questions/33995384/why-attempt-to-print-uninitialized-variable-does-not-always-result-in-an-error-m/33995550#33995550", "tags": ["java", "initialization", "final"]}, {"body": "<p>The difference is that in the first case you are calling <code>System.out.println</code> from <em>initializer block</em> so the block which is invoked before constructor. In the first line </p>\n\n<pre><code>System.out.println(x);\n</code></pre>\n\n<p>variable <code>x</code> is not yet initialized so that you get compilation error.</p>\n\n<p>But in the second case you call instance method which doesn't know if variable has already been initialized so you don't have compilation error and you can see the default value for <code>x</code></p>\n", "title": "Why attempt to print uninitialized variable does not always result in an error message", "answer_id": 33995656, "link": "http://stackoverflow.com/questions/33995384/why-attempt-to-print-uninitialized-variable-does-not-always-result-in-an-error-m/33995656#33995656", "tags": ["java", "initialization", "final"]}, {"body": "<p>Ok, here is my 2 cents.</p>\n\n<p>We all know that final variables can be initialized only While declaring or later on in constructors. Keeping that fact in mind, let see what happened here so far.</p>\n\n<p><strong>No errors Case:</strong></p>\n\n<blockquote>\n  <p>So when you use inside a method, it have already a value.</p>\n</blockquote>\n\n<pre><code> 1) If you initialize it, that value.\n 2) If not, the default value of data type. \n</code></pre>\n\n<p><strong>Error case :</strong> </p>\n\n<blockquote>\n  <p>When you do that in an initialization block, which you are seeing errors.</p>\n</blockquote>\n\n<p>If you  look at the <a href=\"https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html\" rel=\"nofollow\"><code>docs of initialization  block</code></a> </p>\n\n<pre><code>{\n    // whatever code is needed for initialization goes here\n}\n</code></pre>\n\n<p>and </p>\n\n<blockquote>\n  <p><strong>The Java compiler copies initializer blocks into every constructor.</strong> Therefore, this approach can be used to share a block of code between multiple constructors.</p>\n</blockquote>\n\n<p>In compiler's eye, your code is literally equals  to </p>\n\n<pre><code>class HelloWorld {\n\n    final int x;\n    HelloWorld() {\n        System.out.println(x);  ------------ ERROR here obviously\n        x = 7;\n        System.out.println(x);  \n        System.out.println(\"hi\");\n    }\n\n    public static void main(String[] args) {\n        HelloWorld t = new HelloWorld();\n    }\n}\n</code></pre>\n\n<p>You are using it before even initializing it.</p>\n", "title": "Why attempt to print uninitialized variable does not always result in an error message", "answer_id": 33995753, "link": "http://stackoverflow.com/questions/33995384/why-attempt-to-print-uninitialized-variable-does-not-always-result-in-an-error-m/33995753#33995753", "tags": ["java", "initialization", "final"]}, {"body": "<p>Reading the JLS, the answer appears to be in <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-16.html#jls-16.2.2\">section 16.2.2</a>:</p>\n\n<blockquote>\n  <p>A blank <code>final</code> member field <code>V</code> is definitely assigned (and moreover is not definitely unassigned) before the block (\u00a714.2) that is the body of any method in the scope of <code>V</code> and before the declaration of any class declared within the scope of <code>V</code>.</p>\n</blockquote>\n\n<p>This means that when a method is called, the final field is assigned to its default value 0 before invoking it, so when you reference it inside the method, it compiles successfully and prints the value 0.</p>\n\n<p>However, when you access the field outside of a method, it is considered unassigned, hence the compilation error. The following code will also not compile:</p>\n\n<pre><code>public class Main {\n    final int x;\n    {\n        method();\n        System.out.println(x);\n        x = 7;\n    }\n    void method() { }\n    public static void main(String[] args) { }\n}\n</code></pre>\n\n<p>because:</p>\n\n<blockquote>\n  <ul>\n  <li><code>V</code> is [un]assigned before any other statement <code>S</code> of the block iff <code>V</code> is [un]assigned after the statement immediately preceding <code>S</code> in the block.</li>\n  </ul>\n</blockquote>\n\n<p>Since the final field <code>x</code> is unassigned before the method invocation, it is still unassigned after it.</p>\n\n<p>This note in the JLS is also relevant:</p>\n\n<blockquote>\n  <p>Note that there are no rules that would allow us to conclude that <code>V</code> is definitely unassigned before the block that is the body of any constructor, method, instance initializer, or static initializer declared in <code>C</code>. We can informally conclude that <code>V</code> is not definitely unassigned before the block that is the body of any constructor, method, instance initializer, or static initializer declared in C, but there is no need for such a rule to be stated explicitly. </p>\n</blockquote>\n", "title": "Why attempt to print uninitialized variable does not always result in an error message", "answer_id": 33995804, "link": "http://stackoverflow.com/questions/33995384/why-attempt-to-print-uninitialized-variable-does-not-always-result-in-an-error-m/33995804#33995804", "tags": ["java", "initialization", "final"]}, {"body": "<p>In the JLS, <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.3.3\">\u00a78.3.3. Forward References During Field Initialization</a>, its stated that there's a compile-time error when:</p>\n\n<blockquote>\n  <p>Use of instance variables whose declarations appear textually after the use is sometimes restricted, even though these instance variables\n  are in scope. Specifically, it is a compile-time error if all of the\n  following are true:</p>\n  \n  <ul>\n  <li><p>The declaration of an instance variable in a class or interface C appears textually after a use of the instance variable;</p></li>\n  <li><p>The use is a simple name in either an instance variable initializer of C or an instance initializer of C;</p></li>\n  <li><p>The use is not on the left hand side of an assignment;</p></li>\n  <li><p>C is the innermost class or interface enclosing the use.</p></li>\n  </ul>\n</blockquote>\n\n<p>The following rules come with a few examples, of which the closest to yours is this one:</p>\n\n<pre><code>class Z {\n    static int peek() { return j; }\n    static int i = peek();\n    static int j = 1;\n}\nclass Test {\n    public static void main(String[] args) {\n        System.out.println(Z.i);\n    }\n}\n</code></pre>\n\n<p>Accesses [to static or instance variables] by <strong>methods are not checked in this way</strong>, so the code above produces output <code>0</code>, because the variable initializer for <code>i</code> uses the class method <code>peek()</code> to access the value of the variable <code>j</code> before <code>j</code> has been initialized by its variable initializer, at which point it still has its default value (<a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.12.5\">\u00a74.12.5 Initial Values of Variables</a>).</p>\n\n<p>So, to summarize, your second example compiles and executes fine, because the compiler does not check if the <code>x</code> variable was already initialized when you invoke <code>printX()</code> and when <code>printX()</code> actually takes place at Runtime, the <code>x</code> variable will be assigned with its default value (<code>0</code>).</p>\n", "title": "Why attempt to print uninitialized variable does not always result in an error message", "answer_id": 33995839, "link": "http://stackoverflow.com/questions/33995384/why-attempt-to-print-uninitialized-variable-does-not-always-result-in-an-error-m/33995839#33995839", "tags": ["java", "initialization", "final"]}, {"body": "<p>We deal here with initializer block. The Java compiler copies initializer blocks into every constructor. </p>\n\n<p>The compiler error don't occure in second example, because printing x is in another Frame, please refer to spec.</p>\n", "title": "Why attempt to print uninitialized variable does not always result in an error message", "answer_id": 33995878, "link": "http://stackoverflow.com/questions/33995384/why-attempt-to-print-uninitialized-variable-does-not-always-result-in-an-error-m/33995878#33995878", "tags": ["java", "initialization", "final"]}], "question_id": 33995384}, {"body": "<p>I found the following Java code.</p>\n\n<pre><code>for (int type = 0; type &lt; typeCount; type++)\n    synchronized(result) {\n        result[type] += parts[type];\n    }\n}\n</code></pre>\n\n<p>where <code>result</code> and <code>parts</code> are <code>double[]</code>.</p>\n\n<p>I know basic operations on primitive types are thread-safe, but I am not sure about <code>+=</code>. If the above <code>synchronized</code> is necessary, is there maybe a better class to handle such operation?</p>\n", "tags": ["java", "multithreading"], "title": "Is the += operator thread-safe in Java?", "answer_count": 4, "creation_date": 1442732789, "score": 50, "link": "http://stackoverflow.com/questions/32676771/is-the-operator-thread-safe-in-java", "answers": [{"body": "<p>Even the normal 'double' data type is not thread-safe (because it is not atomic) in 32-bit JVMs as it takes eight bytes in Java (which involves 2*32 bit operations).</p>\n", "title": "Is the += operator thread-safe in Java?", "answer_id": 32676798, "link": "http://stackoverflow.com/questions/32676771/is-the-operator-thread-safe-in-java/32676798#32676798", "tags": ["java", "multithreading"]}, {"body": "<p>No.  The <code>+=</code> operation is not thread-safe.  It requires locking and / or a proper chain of \"happens-before\" relationships for any expression involving assignment to a shared field or array element to be thread-safe.  </p>\n\n<p>(With a field declared as <code>volatile</code>, the \"happens-before\" relationships exist ... but only on read and write operations.  The <code>+=</code> operation consists of a read and a write.  These are individually atomic, but the sequence isn't.  And most assignment expressions using <code>=</code> involve both one or more reads (on the right hand side) and a write.  That <em>sequence</em> is not atomic either.)</p>\n\n<p>For the complete story, read JLS <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-17.html#jls-17.4\">17.4</a> ... or the relevant chapter of \"Java Concurrency in Action\" by Brian Goetz et al.</p>\n\n<blockquote>\n  <p>As I know basic operations on primitive types are thread-safe ...</p>\n</blockquote>\n\n<p>Actually, that is an incorrect premise:</p>\n\n<ul>\n<li>consider the case of arrays</li>\n<li>consider that expressions are typically composed of a sequence of operations, and that a sequence of atomic operations is not guaranteed to be atomic.</li>\n</ul>\n\n<hr>\n\n<p>There is an additional issue for the <code>double</code> type.  The JLS (<a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-17.html#jls-17.7\">17.7</a>) says this:</p>\n\n<blockquote>\n  <p>\"For the purposes of the Java programming language memory model, a single write to a non-volatile long or double value is treated as two separate writes: one to each 32-bit half. This can result in a situation where a thread sees the first 32 bits of a 64-bit value from one write, and the second 32 bits from another write.\"</p>\n  \n  <p>\"Writes and reads of volatile long and double values are always atomic.\" </p>\n</blockquote>\n\n<hr>\n\n<p>In a comment, you asked:</p>\n\n<blockquote>\n  <p>So what type I should use to avoid global synchronization, which stops all threads inside this loop? </p>\n</blockquote>\n\n<p>In this case (where you are updating a <code>double[]</code>, there is no alternative to synchronization with locks or primitive mutexes.</p>\n\n<p>If you had an <code>int[]</code> or a <code>long[]</code> you could replace them with <code>AtomicIntegerArray</code> or <code>AtomicLongArray</code> and make use of those classes' lock-free update.  However there is no <code>AtomicDoubleArray</code> class, or even an <code>AtomicDouble</code> class.  </p>\n\n<p>(<strong>UPDATE</strong> - someone pointed out that Guava provides an <code>AtomicDoubleArray</code> class, so that <em>would</em> be an option.  A good one actually.)</p>\n\n<p>One way of avoiding a \"global lock\" and massive contention problems might be to divide the array into notional regions, each with its own lock.  That way, one thread only needs to block another thread if they are using the same region of the array.  (Single writer / multiple reader locks could help too ... if the vast majority of accesses are reads.)</p>\n", "title": "Is the += operator thread-safe in Java?", "answer_id": 32676836, "link": "http://stackoverflow.com/questions/32676771/is-the-operator-thread-safe-in-java/32676836#32676836", "tags": ["java", "multithreading"]}, {"body": "<p>As it's already explained, this code is not thread safe. One possible solution to avoid synchronization in Java-8 is to use new <code>DoubleAdder</code> class which is capable to maintain the sum of double numbers in thread-safe manner.</p>\n\n<p>Create array of <code>DoubleAdder</code> objects before parallelizing:</p>\n\n<pre><code>DoubleAdder[] adders = Stream.generate(DoubleAdder::new)\n                             .limit(typeCount).toArray(DoubleAdder[]::new);\n</code></pre>\n\n<p>Then accumulate the sum in parallel threads like this:</p>\n\n<pre><code>for(int type = 0; type &lt; typeCount; type++) \n    adders[type].add(parts[type]);\n}\n</code></pre>\n\n<p>Finally get the result after parallel subtasks finished:</p>\n\n<pre><code>double[] result = Arrays.stream(adders).mapToDouble(DoubleAdder::sum).toArray();\n</code></pre>\n", "title": "Is the += operator thread-safe in Java?", "answer_id": 32677362, "link": "http://stackoverflow.com/questions/32676771/is-the-operator-thread-safe-in-java/32677362#32677362", "tags": ["java", "multithreading"]}, {"body": "<p>Despite of the fact that there is no <code>AtomicDouble</code> or <code>AtomicDoubleArray</code> in java, you can easily create your own based on <code>AtomicLongArray</code>.</p>\n\n<pre><code>static class AtomicDoubleArray {\n    private final AtomicLongArray inner;\n\n    public AtomicDoubleArray(int length) {\n        inner = new AtomicLongArray(length);\n    }\n\n    public int length() {\n        return inner.length();\n    }\n\n    public double get(int i) {\n        return Double.longBitsToDouble(inner.get(i));\n    }\n\n    public void set(int i, double newValue) {\n        inner.set(i, Double.doubleToLongBits(newValue));\n    }\n\n    public void add(int i, double delta) {\n        long prevLong, nextLong;\n        do {\n            prevLong = inner.get(i);\n            nextLong = Double.doubleToLongBits(Double.longBitsToDouble(prevLong) + delta);\n        } while (!inner.compareAndSet(i, prevLong, nextLong));\n    }\n}\n</code></pre>\n\n<p>As you can see, I use <code>Double.doubleToLongBits</code> and <code>Double.longBitsToDouble</code> to store <code>Doubles</code> as <code>Longs</code> in <code>AtomicLongArray</code>. They both have the same size in bits, so precision is not lost (except for -NaN, but I don't think it is important).</p>\n\n<p>In Java 8 the implementation of <code>add</code> can be even easier, as you can use <code>accumulateAndGet</code> method of <code>AtomicLongArray</code> that was added in java 1.8.</p>\n\n<p><strong>Upd</strong>: It appears that I virtually re-implemented guava's <a href=\"https://code.google.com/p/guava-libraries/source/browse/guava/src/com/google/common/util/concurrent/AtomicDoubleArray.java?r=8b5f8e0945ee9e0bbd7048945f17d2fdc2b108e0\">AtomicDoubleArray</a>.</p>\n", "title": "Is the += operator thread-safe in Java?", "answer_id": 32677400, "link": "http://stackoverflow.com/questions/32676771/is-the-operator-thread-safe-in-java/32677400#32677400", "tags": ["java", "multithreading"]}], "question_id": 32676771}, {"body": "<p>It has generally been the case the Java source code has been forward compatible.  Until Java 8, as far as I know, both compiled classes <em>and</em> source have been forward compatible with later JDK/JVM releases.  [Update: this is not correct, see comments re 'enum', etc, below.]  However, with the addition of default methods in Java 8 this appears to no longer be the case.</p>\n\n<p>For example, a library I have been using has an implementation of <code>java.util.List</code> which includes a <code>List&lt;V&gt; sort()</code>.  This method returns a copy of the contents of the list sorted. This library, deployed as a jar file dependency, worked fine in a project being built using JDK 1.8.</p>\n\n<p>However, later I had occasion to recompile the library itself using JDK 1.8 and\nI found the library no longer compiles: the <code>List</code>-implementing class with its own <code>sort()</code> method now conflicts with the Java 8 <code>java.util.List.sort()</code> default method.  The Java 8 <code>sort()</code> default method sorts the list in place (returns <code>void</code>); my library's <code>sort()</code> method - since it returns a new sorted list - has an incompatible signature.</p>\n\n<p>So my basic question is:</p>\n\n<ul>\n<li>Doesn't JDK 1.8 introduce a forward incompatibility for Java source code due to default methods?</li>\n</ul>\n\n<p>Also:</p>\n\n<ul>\n<li>Is this the first such forward incompatible change?</li>\n<li>Was this considered or discussed when default methods where designed and implemented?  Is it documented anywhere?</li>\n<li>Was the (admittedly small) inconvenience discounted versus the benefits?</li>\n</ul>\n\n<p>The following is an example of some code that compiles and runs under 1.7 and\nruns under 1.8 - but does not compile under 1.8:</p>\n\n<pre><code>import java.util.*;\n\npublic final class Sort8 {\n\n    public static void main(String[] args) {\n        SortableList&lt;String&gt; l = new SortableList&lt;String&gt;(Arrays.asList(args));\n        System.out.println(\"unsorted: \"+l);\n        SortableList&lt;String&gt; s = l.sort(Collections.reverseOrder());\n        System.out.println(\"sorted  : \"+s);\n    }\n\n    public static class SortableList&lt;V&gt; extends ArrayList&lt;V&gt; {\n\n        public SortableList() { super(); }\n        public SortableList(Collection&lt;? extends V&gt; col) { super(col); }\n\n        public SortableList&lt;V&gt; sort(Comparator&lt;? super V&gt; cmp) {\n            SortableList&lt;V&gt; l = new SortableList&lt;V&gt;();\n            l.addAll(this);\n            Collections.sort(l, cmp);\n            return l;\n        }\n\n    }\n\n}\n</code></pre>\n\n<p>The following shows this code being compiled (or failing to) and being run.</p>\n\n<pre><code>&gt; c:\\tools\\jdk1.7.0_10\\bin\\javac Sort8.java\n\n&gt; c:\\tools\\jdk1.7.0_10\\bin\\java Sort8 this is a test\nunsorted: [this, is, a, test]\nsorted  : [this, test, is, a]\n\n&gt; c:\\tools\\jdk1.8.0_05\\bin\\java Sort8 this is a test\nunsorted: [this, is, a, test]\nsorted  : [this, test, is, a]\n\n&gt; del Sort8*.class\n\n&gt; c:\\tools\\jdk1.8.0_05\\bin\\javac Sort8.java\nSort8.java:46: error: sort(Comparator&lt;? super V&gt;) in SortableList cannot implement sort(Comparator&lt;? super E&gt;) in List\n                public SortableList&lt;V&gt; sort(Comparator&lt;? super V&gt; cmp) {\n                                       ^\n  return type SortableList&lt;V&gt; is not compatible with void\n  where V,E are type-variables:\n    V extends Object declared in class SortableList\n    E extends Object declared in interface List\n1 error\n</code></pre>\n", "tags": ["java", "java-8", "default-method", "forward-compatibility"], "title": "Do Java 8 default methods break source compatibility?", "answer_count": 4, "creation_date": 1435849525, "score": 50, "link": "http://stackoverflow.com/questions/31188231/do-java-8-default-methods-break-source-compatibility", "answers": [{"body": "<blockquote>\n  <p>Doesn't JDK 1.8 introduce a forward incompatibility for Java source code due to default methods?</p>\n</blockquote>\n\n<p>Yes as you've seen your self.</p>\n\n<blockquote>\n  <p>Is this the first such forward incompatible change?</p>\n</blockquote>\n\n<p>No.  Java 5 <code>enum</code>keyword was also breaking because before that you could have variables named that which would no longer compile in Java 5 +</p>\n\n<blockquote>\n  <p>Was this considered or discussed when default methods where designed and implemented? Is it documented anywhere?</p>\n</blockquote>\n\n<p>Yes <a href=\"http://www.oracle.com/technetwork/java/javase/8-compatibility-guide-2156366.html#A999097\">Orcale Java 8 source incompatibility description</a></p>\n\n<blockquote>\n  <p>Was the (admittedly small) inconvenience discounted versus the benefits?</p>\n</blockquote>\n\n<p>Yes</p>\n", "title": "Do Java 8 default methods break source compatibility?", "answer_id": 31188416, "link": "http://stackoverflow.com/questions/31188231/do-java-8-default-methods-break-source-compatibility/31188416#31188416", "tags": ["java", "java-8", "default-method", "forward-compatibility"]}, {"body": "<p><strong><em>Doesn't JDK 1.8 introduce a forward incompatibility for Java source code due to default methods?</em></strong></p>\n\n<p>Any new method in a superclass or interface can break compatibility. Default methods make it <em>less likely</em> that a change in an interface will break compatibility. In the sense that default methods open the door to adding methods to interfaces, you could say that default methods may contribute to some broken compatibility.</p>\n\n<p><strong><em>Is this the first such forward incompatible change?</em></strong></p>\n\n<p>Almost certainly not, since we've been subclassing classes from the standard library since Java 1.0. </p>\n\n<p><strong><em>Was this considered or discussed when default methods were designed and implemented? Is it documented anywhere?</em></strong></p>\n\n<p>Yes, it was considered. See Brian Goetz's August 2010 paper <a href=\"http://cr.openjdk.java.net/~briangoetz/lambda/Defender%20Methods%20v3.pdf\">\"Interface evolution via \u201cpublic defender\u201d methods\"</a>:</p>\n\n<blockquote>\n  <ol start=\"10\">\n  <li>Source compatibility</li>\n  </ol>\n  \n  <p>It is possible that this scheme could introduce source incompatibilities to the extent that library interfaces are modified to insert new methods that are incompatible with methods in existing classes. (For example, if a class has a float-valued xyz() method and implements Collection, and we add an int-valued xyz() method to Collection, the existing class will no longer compile.) </p>\n</blockquote>\n\n<p><strong><em>Was the (admittedly small) inconvenience discounted versus the benefits?</em></strong></p>\n\n<p>Before, changing an interface would <em>definitely</em> break compatibility. Now, it <em>might</em>. Going from 'definitely' to 'might' can be seen either positively or negatively. On the one hand, it makes it feasible to add methods to interfaces. On the other hand, it opens the door to the kind of incompatibility you saw, not just with classes, but with interfaces too.</p>\n\n<p>The benefits are larger than the inconveniences, though, as cited at the top of Goetz's paper:</p>\n\n<blockquote>\n  <ol>\n  <li>Problem statement</li>\n  </ol>\n  \n  <p>Once published, it is impossible to add methods to an interface without breaking existing implementations. The longer the time since a library has been published, the more likely it is that this restriction will cause grief for its maintainers.</p>\n  \n  <p>The addition of closures to the Java language in JDK 7 place additional stress on the aging Collection interfaces; one of the most significant benefits of closures is that it enables the development of more powerful libraries. It would be disappointing to add a language feature that enables better libraries while at the same time not extending the core libraries to take advantage of that feature. </p>\n</blockquote>\n", "title": "Do Java 8 default methods break source compatibility?", "answer_id": 31188698, "link": "http://stackoverflow.com/questions/31188231/do-java-8-default-methods-break-source-compatibility/31188698#31188698", "tags": ["java", "java-8", "default-method", "forward-compatibility"]}, {"body": "<p>Ironically default methods in interfaces were introduced to allow existing libraries using those interfaces <em>not</em> to break, while introducing massive <em>new</em> functionality in the interfaces. (backward compatibility.)</p>\n\n<p>Conflicts like that <code>sort</code> method might arise. Something to pay for the extra functionality. In your case also something to investigate (should new functionality be used instead?).</p>\n\n<p>Java forward compatibility breaks are little, more in its typing system, which was constantly enlarged. First with generic types and now with inferred types from functional interfaces. From version to version and from compiler to compiler there were slight differences.</p>\n", "title": "Do Java 8 default methods break source compatibility?", "answer_id": 31188818, "link": "http://stackoverflow.com/questions/31188231/do-java-8-default-methods-break-source-compatibility/31188818#31188818", "tags": ["java", "java-8", "default-method", "forward-compatibility"]}, {"body": "<p>We can draw a parallel with abstract class. An abstract class is intended to be subclassed so that the abstract methods can be implemented. The abstract class itself contains concrete methods that invoke the abstract methods. The abstract class is free to evolve by adding more concrete methods; and this practice may break subclasses.</p>\n\n<p>Therefore the exact problem you described existed even before Java8. The problem is much more manifested on Collection APIs because there are a lot of subclasses out in the wild.</p>\n\n<p>While the leading motivation of default method was to add some useful methods to existing Collection APIs without breaking subclasses, they had to exercise great self-control of doing it too much, for fear of breaking subclasses. A default method is added only if it's absolutely necessary. The real question here is, why <code>List.sort</code> is considered absolutely necessary. I think that is debatable. </p>\n\n<p>Regardless of why default method was introduced in the 1st place, it is now a great tool for API designers, and we ought to treat it the same as concrete methods in abstract classes - they need to be designed carefully up front; and new ones must be introduced with great caution. </p>\n", "title": "Do Java 8 default methods break source compatibility?", "answer_id": 31190722, "link": "http://stackoverflow.com/questions/31188231/do-java-8-default-methods-break-source-compatibility/31190722#31190722", "tags": ["java", "java-8", "default-method", "forward-compatibility"]}], "question_id": 31188231}, {"body": "<pre><code>    String a = \"devender\";\n    String b = \"devender\";\n    String c = \"dev\";\n    String d = \"dev\" + \"ender\";\n    String e = c + \"ender\";\n\n    System.out.println(a == b);     //case 1: o/p true\n\n    System.out.println(a == d);     //case 2: o/p true\n\n    System.out.println(a == e);     //case 3: o/p false\n</code></pre>\n\n<p><strong>a</strong> &amp; <strong>b</strong> both are pointing to the same String Literal in string constant pool. So <code>true</code> in case 1</p>\n\n<pre><code>String d = \"dev\" + \"ender\";\n</code></pre>\n\n<p>should be internally using something like -</p>\n\n<pre><code>String d = new StringBuilder().append(\"dev\").append(\"ender\").toString();\n</code></pre>\n\n<p>How <strong>a</strong> &amp; <strong>d</strong> are pointing to the same reference &amp; not <strong>a</strong> &amp; <strong>e</strong> ?</p>\n", "tags": ["java", "string"], "title": "&quot;==&quot; in case of String concatenation in Java", "answer_count": 7, "creation_date": 1451386697, "score": 49, "link": "http://stackoverflow.com/questions/34509566/in-case-of-string-concatenation-in-java", "answers": [{"body": "<p>As you said internally the last concatenation is done to something similar to</p>\n\n<pre><code>String e = new StringBuilder().append(c).append(\"ender\").toString();\n</code></pre>\n\n<p>the implementation of <code>toString()</code> of <code>StringBuilder</code> <strong>creates a new String</strong>. Here is the implementation.</p>\n\n<pre><code>public String toString() {\n     // Create a copy, don't share the array\n     return new String(value, 0, count);\n}\n</code></pre>\n\n<p>Comparing strings using <code>==</code> instead of <code>.equals()</code> <strong>returns <code>true</code> only if both strings are the same</strong>. In this case <strong>they are not the same because the second string is created as a new</strong> object of type <strong><code>String</code></strong>.</p>\n\n<p>The other concatenations are performed directly by the compiler so no new String is created.</p>\n", "title": "&quot;==&quot; in case of String concatenation in Java", "answer_id": 34509655, "link": "http://stackoverflow.com/questions/34509566/in-case-of-string-concatenation-in-java/34509655#34509655", "tags": ["java", "string"]}, {"body": "<p>Four things are going on:</p>\n\n<ol>\n<li><p>(You clearly know this, but for lurkers) <code>==</code> tests to see if the variables point to the <strong>same <code>String</code> object</strong>, not <em>equivalent</em> strings. So even if <code>x</code> is <code>\"foo\"</code> and <code>y</code> is also <code>\"foo\"</code>, <code>x == y</code> may be true or false, depending on whether <code>x</code> and <code>y</code> refer to the same <code>String</code> object or different ones. That's why we use <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/String.html#equals-java.lang.Object-\"><code>equals</code></a>, not <code>==</code>, to compare strings for equivalence. All of the following is just meant to explain why <code>==</code> is sometimes true, it's not a suggestion to use <code>==</code> to compare strings. :-)</p></li>\n<li><p>Equivalent string constants (strings the compiler knows are constants according to various rules in the JLS) within the same class are made to refer to the same string by the compiler (which also lists them in the class's <a href=\"https://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.4\">\"constant pool\"</a>). That's why <code>a == b</code> is true.</p></li>\n<li><p>When the class is loaded, each of its string constants is automatically <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/String.html#intern--\"><em>interned</em></a>&nbsp;&mdash; the JVM's string pool is checked for an equivalent string and if one is found, that <code>String</code> object is used (if not, the new <code>String</code> object for the new constant is added to the pool). So even if <code>x</code> is a string constant initialized in class <code>Foo</code> and <code>y</code> is a string constant initialized in class <code>Bar</code>, they'll be <code>==</code> each other.</p>\n\n<p>Points 2 and 3 above are covered in part by <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html#jls-3.10.5\">JLS\u00a73.10.5</a>. (The bit about the class constant pool is a bit of an implementation detail, hence the link to the JVM spec earlier; the JLS just speaks of interning.)</p></li>\n<li><p>The compiler does string concatenation if it's dealing with constant values, so </p>\n\n<pre><code>String d = \"dev\" + \"ender\";\n</code></pre>\n\n<p>is compiled to</p>\n\n<pre><code>String d = \"devender\";\n</code></pre>\n\n<p>and <code>\"devender\"</code> is a string constant the compiler and JVM apply points 2 and 3 above to. E.g., no <code>StringBuilder</code> is used, the concatenation happens at <em>compile-time</em>, not runtime. This is covered in <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.28\">JLS\u00a715.28 - <em>Constant Expressions</em></a>. So <code>a == d</code> is true for the same reason <code>a == b</code> is true: They refer to the same constant string, so the compiler ensured they were referring to the same string in the class's constant pool.</p>\n\n<p>The compiler can't do that when any of the operands is not a constant, so it can't do that with:</p>\n\n<pre><code>String e = c + \"ender\";\n</code></pre>\n\n<p>...even though code analysis could easily show that the value of <code>c</code> will definitely be <code>\"dev\"</code> and thus <code>e</code> will definitely be <code>\"devender\"</code>. The specification only has the compiler do the concatenation with constant values, specifically. So since the compiler can't do it, it outputs the <code>StringBuilder</code> code you referred to and that work is done at runtime, creating a new <code>String</code> object. That string isn't automatically interned, so <code>e</code> ends up referring to a different <code>String</code> object than <code>a</code> does, and so <code>a == e</code> is false.</p>\n\n<p>Note that <a href=\"http://stackoverflow.com/questions/34509566/in-case-of-string-concatenation-in-java/34509659#comment56760592_34509566\">as Vinod said</a>, if you declared <code>c</code> as <code>final</code>:</p>\n\n<pre><code>final String c = \"dev\";\n</code></pre>\n\n<p>Then it would be a <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.12.4\"><em>constant variable</em></a> (yes, they're really called that) and so \u00a715.28 would apply and the compiler would turn</p>\n\n<pre><code>String e = c + \"ender\";\n</code></pre>\n\n<p>into</p>\n\n<pre><code>String e = \"devender\";\n</code></pre>\n\n<p>and <code>a == e</code> would also be true.</p></li>\n</ol>\n\n<p>Just to reiterate: None of which means we should use <code>==</code> to compare strings for equivalence. :-) That's what <code>equals</code> is for.</p>\n", "title": "&quot;==&quot; in case of String concatenation in Java", "answer_id": 34509659, "link": "http://stackoverflow.com/questions/34509566/in-case-of-string-concatenation-in-java/34509659#34509659", "tags": ["java", "string"]}, {"body": "<p><code>\"dev\" + \"ender\"</code> is a compile-time evaluable constant expression: both arguments are string literals. The expression is therefore <code>\"devender\"</code>.</p>\n\n<p>The same cannot be said for <code>c + \"ender\"</code>: certain circumstances (some code running on a different thread for example) could lead to <code>c</code> being set to a different value. Qualifying <code>c</code> as <code>final</code> obviates this possibility, and in that case <code>e</code> would also refer to the same object as <code>a</code>.</p>\n\n<p>So <code>a</code>, <code>b</code>, and <code>d</code> all refer to the same object.</p>\n", "title": "&quot;==&quot; in case of String concatenation in Java", "answer_id": 34509663, "link": "http://stackoverflow.com/questions/34509566/in-case-of-string-concatenation-in-java/34509663#34509663", "tags": ["java", "string"]}, {"body": "<p>The difference between <code>d</code> and <code>e</code> is that when you concatenate string <em>literals</em>, the concatenation is performed at compile time. Java compiler treats <code>\"dev\" + \"ender\"</code> expression in the same way as <code>\"devender\"</code> expression, producing the same literal at compile time. Since all <code>String</code> literals get interned, <code>d</code>, which is a result of <code>\"dev\" + \"ender\"</code>, also ends up referencing the same object as <code>a</code> and <code>b</code>'s <code>\"devender\"</code>. </p>\n\n<p>The expression for <code>e</code>, which is <code>c + \"ender\"</code>, is evaluated at <em>runtime</em>. Even though it produces the same string, this fact is not used by the compiler. That's why a different <code>String</code> object is produced, resulting in failed comparison on <code>==</code>.</p>\n", "title": "&quot;==&quot; in case of String concatenation in Java", "answer_id": 34509669, "link": "http://stackoverflow.com/questions/34509566/in-case-of-string-concatenation-in-java/34509669#34509669", "tags": ["java", "string"]}, {"body": "<p>The compiler does a lot of optimisation under the hood.</p>\n\n<blockquote>\n<pre><code>String d = \"dev\" + \"ender\";\n</code></pre>\n</blockquote>\n\n<p>Here the compiler will replace <code>\"dev\" + \"ender\"</code> with <code>\"devender\"</code> when the program is being compiled. If you are adding 2 literals (this applies to both primitives as well as Strings), the compiler does this optimisation. </p>\n\n<p>Java code :</p>\n\n<pre><code>String d = \"dev\" + \"ender\";\n</code></pre>\n\n<p>Byte code :</p>\n\n<pre><code>  0: ldc           #16                 // String devender\n</code></pre>\n\n<p>Coming to a special case :</p>\n\n<blockquote>\n<pre><code>final String c = \"dev\"; // mark this as final\nString e = c + \"ender\";\n</code></pre>\n</blockquote>\n\n<p>Making <code>c</code> final will make the String a <em>compile-time-constant</em>. The compiler will realize that the value of <code>c</code> cannot change and hence will replace all occurances of <code>c</code> with the value \"dev\" when compiling, thus <code>e</code> will be resolved during <em>compile time</em> itself.</p>\n", "title": "&quot;==&quot; in case of String concatenation in Java", "answer_id": 34509671, "link": "http://stackoverflow.com/questions/34509566/in-case-of-string-concatenation-in-java/34509671#34509671", "tags": ["java", "string"]}, {"body": "<p>String d = \"dev\" + \"ender\"; constant + constant, \u2018d\u2019 is still a constant(the same one), so (a == d) is true;</p>\n\n<p>String e = c + \"ender\"; variable + constant, the result 'e' is a variable, it will use StringBuilder internally,and create a new reference.</p>\n", "title": "&quot;==&quot; in case of String concatenation in Java", "answer_id": 34509933, "link": "http://stackoverflow.com/questions/34509566/in-case-of-string-concatenation-in-java/34509933#34509933", "tags": ["java", "string"]}, {"body": "<p>Keep in mind that Java holds a pool of all string literals found in program, used for matching purposes among others, so any different string <strong>literal</strong> concatenation above will lead to the same object, to the same string literal. You can check out <a href=\"http://www.xyzws.com/javafaq/what-is-string-literal-pool/3\" rel=\"nofollow\">this</a> useful article for more.</p>\n\n<p>On the other hand, the concatenation of a <code>String</code> object and a literal (case <code>c + \"ender\"</code>) will lead to the creation of a as <code>StringBuilder</code> object at runtime, different to the literals found in pool.</p>\n", "title": "&quot;==&quot; in case of String concatenation in Java", "answer_id": 34529067, "link": "http://stackoverflow.com/questions/34509566/in-case-of-string-concatenation-in-java/34529067#34529067", "tags": ["java", "string"]}], "question_id": 34509566}, {"body": "<p>This is not really a question, however, I would like to share some of my working code here for your reference when you need.</p>\n\n<p>As we know that <code>HttpEntity</code> is deprecated from API22 and comletely removed since API23. At the moment, we cannot access <a href=\"http://developer.android.com/reference/org/apache/http/HttpEntity.html?is-external=true\">HttpEntity Reference on Android Developer</a> anymore (404).  So, the following is my working sample code for <strong>POST Multipart Request with Volley and without HttpEntity</strong>. It's working, tested with <code>Asp.Net Web API</code>. Of course, the code perhaps is just a basic sample that posts two existed drawable files, also is not the best solution for all cases, and not good tuning.</p>\n\n<p>Any suggestions for better / more beautiful code will be appreciated.</p>\n\n<p>Hope this helps!</p>\n\n<p><strong>MultipartActivity.java:</strong></p>\n\n<pre><code>package com.example.multipartvolley;\n\nimport android.app.Activity;\nimport android.content.Context;\nimport android.graphics.Bitmap;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.os.Bundle;\nimport android.support.v4.content.ContextCompat;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.widget.Toast;\n\nimport com.android.volley.NetworkResponse;\nimport com.android.volley.Response;\nimport com.android.volley.VolleyError;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.DataOutputStream;\nimport java.io.IOException;\n\n\npublic class MultipartActivity extends Activity {\n\n    private final Context context = this;\n    private final String twoHyphens = \"--\";\n    private final String lineEnd = \"\\r\\n\";\n    private final String boundary = \"apiclient-\" + System.currentTimeMillis();\n    private final String mimeType = \"multipart/form-data;boundary=\" + boundary;\n    private byte[] multipartBody;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_multipart);\n\n        byte[] fileData1 = getFileDataFromDrawable(context, R.drawable.ic_action_android);\n        byte[] fileData2 = getFileDataFromDrawable(context, R.drawable.ic_action_book);\n\n        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n        DataOutputStream dos = new DataOutputStream(bos);\n        try {\n            // the first file\n            buildPart(dos, fileData1, \"ic_action_android.png\");\n            // the second file\n            buildPart(dos, fileData2, \"ic_action_book.png\");\n            // send multipart form data necesssary after file data\n            dos.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);\n            // pass to multipart body\n            multipartBody = bos.toByteArray();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        String url = \"http://192.168.1.100/api/postfile\";\n        MultipartRequest multipartRequest = new MultipartRequest(url, null, mimeType, multipartBody, new Response.Listener&lt;NetworkResponse&gt;() {\n            @Override\n            public void onResponse(NetworkResponse response) {\n                Toast.makeText(context, \"Upload successfully!\", Toast.LENGTH_SHORT).show();\n            }\n        }, new Response.ErrorListener() {\n            @Override\n            public void onErrorResponse(VolleyError error) {\n                Toast.makeText(context, \"Upload failed!\\r\\n\" + error.toString(), Toast.LENGTH_SHORT).show();\n            }\n        });\n\n        VolleySingleton.getInstance(context).addToRequestQueue(multipartRequest);\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.menu_multipart, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n\n        //noinspection SimplifiableIfStatement\n        if (id == R.id.action_settings) {\n            return true;\n        }\n\n        return super.onOptionsItemSelected(item);\n    }\n\n    private void buildPart(DataOutputStream dataOutputStream, byte[] fileData, String fileName) throws IOException {\n        dataOutputStream.writeBytes(twoHyphens + boundary + lineEnd);\n        dataOutputStream.writeBytes(\"Content-Disposition: form-data; name=\\\"uploaded_file\\\"; filename=\\\"\"\n                + fileName + \"\\\"\" + lineEnd);\n        dataOutputStream.writeBytes(lineEnd);\n\n        ByteArrayInputStream fileInputStream = new ByteArrayInputStream(fileData);\n        int bytesAvailable = fileInputStream.available();\n\n        int maxBufferSize = 1024 * 1024;\n        int bufferSize = Math.min(bytesAvailable, maxBufferSize);\n        byte[] buffer = new byte[bufferSize];\n\n        // read file and write it into form...\n        int bytesRead = fileInputStream.read(buffer, 0, bufferSize);\n\n        while (bytesRead &gt; 0) {\n            dataOutputStream.write(buffer, 0, bufferSize);\n            bytesAvailable = fileInputStream.available();\n            bufferSize = Math.min(bytesAvailable, maxBufferSize);\n            bytesRead = fileInputStream.read(buffer, 0, bufferSize);\n        }\n\n        dataOutputStream.writeBytes(lineEnd);\n    }\n\n    private byte[] getFileDataFromDrawable(Context context, int id) {\n        Drawable drawable = ContextCompat.getDrawable(context, id);\n        Bitmap bitmap = ((BitmapDrawable) drawable).getBitmap();\n        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n        bitmap.compress(Bitmap.CompressFormat.PNG, 0, byteArrayOutputStream);\n        return byteArrayOutputStream.toByteArray();\n    }\n}\n</code></pre>\n\n<p><strong>MultipartRequest.java:</strong></p>\n\n<pre><code>package com.example.multipartvolley;\n\nimport com.android.volley.AuthFailureError;\nimport com.android.volley.NetworkResponse;\nimport com.android.volley.ParseError;\nimport com.android.volley.Request;\nimport com.android.volley.Response;\nimport com.android.volley.VolleyError;\nimport com.android.volley.toolbox.HttpHeaderParser;\n\nimport java.util.Map;\n\nclass MultipartRequest extends Request&lt;NetworkResponse&gt; {\n    private final Response.Listener&lt;NetworkResponse&gt; mListener;\n    private final Response.ErrorListener mErrorListener;\n    private final Map&lt;String, String&gt; mHeaders;\n    private final String mMimeType;\n    private final byte[] mMultipartBody;\n\n    public MultipartRequest(String url, Map&lt;String, String&gt; headers, String mimeType, byte[] multipartBody, Response.Listener&lt;NetworkResponse&gt; listener, Response.ErrorListener errorListener) {\n        super(Method.POST, url, errorListener);\n        this.mListener = listener;\n        this.mErrorListener = errorListener;\n        this.mHeaders = headers;\n        this.mMimeType = mimeType;\n        this.mMultipartBody = multipartBody;\n    }\n\n    @Override\n    public Map&lt;String, String&gt; getHeaders() throws AuthFailureError {\n        return (mHeaders != null) ? mHeaders : super.getHeaders();\n    }\n\n    @Override\n    public String getBodyContentType() {\n        return mMimeType;\n    }\n\n    @Override\n    public byte[] getBody() throws AuthFailureError {\n        return mMultipartBody;\n    }\n\n    @Override\n    protected Response&lt;NetworkResponse&gt; parseNetworkResponse(NetworkResponse response) {\n        try {\n            return Response.success(\n                    response,\n                    HttpHeaderParser.parseCacheHeaders(response));\n        } catch (Exception e) {\n            return Response.error(new ParseError(e));\n        }\n    }\n\n    @Override\n    protected void deliverResponse(NetworkResponse response) {\n        mListener.onResponse(response);\n    }\n\n    @Override\n    public void deliverError(VolleyError error) {\n        mErrorListener.onErrorResponse(error);\n    }\n}\n</code></pre>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>For text part, please refer to @RacZo's answer below.</p>\n", "tags": ["java", "android", "asp.net-web-api", "android-volley", "httpentity"], "title": "Working POST Multipart Request with Volley and without HttpEntity", "answer_count": 2, "creation_date": 1440645959, "score": 49, "link": "http://stackoverflow.com/questions/32240177/working-post-multipart-request-with-volley-and-without-httpentity", "answers": [{"body": "<p>Nice answer @BNK!</p>\n\n<p>Just want to add to the answer... I was trying to figure how to append text fields to the body and created the following function to do it:</p>\n\n<pre><code>private void buildTextPart(DataOutputStream dataOutputStream, String parameterName, String parameterValue) throws IOException {\n    dataOutputStream.writeBytes(twoHyphens + boundary + lineEnd);\n    dataOutputStream.writeBytes(\"Content-Disposition: form-data; name=\\\"\" + parameterName + \"\\\"\" + lineEnd);\n    dataOutputStream.writeBytes(\"Content-Type: text/plain; charset=UTF-8\" + lineEnd);\n    dataOutputStream.writeBytes(lineEnd);\n    dataOutputStream.writeBytes(parameterValue + lineEnd);\n}\n</code></pre>\n\n<p>It is working pretty well, so I hope it helps .</p>\n", "title": "Working POST Multipart Request with Volley and without HttpEntity", "answer_id": 32704606, "link": "http://stackoverflow.com/questions/32240177/working-post-multipart-request-with-volley-and-without-httpentity/32704606#32704606", "tags": ["java", "android", "asp.net-web-api", "android-volley", "httpentity"]}, {"body": "<p>I rewrite your code @RacZo and @BNK more modular and easy to use like</p>\n\n<pre><code>VolleyMultipartRequest multipartRequest = new VolleyMultipartRequest(Request.Method.POST, url, new Response.Listener&lt;NetworkResponse&gt;() {\n        @Override\n        public void onResponse(NetworkResponse response) {\n            String resultResponse = new String(response.data);\n            // parse success output\n        }\n    }, new Response.ErrorListener() {\n        @Override\n        public void onErrorResponse(VolleyError error) {                \n            error.printStackTrace();\n        }\n    }) {\n        @Override\n        protected Map&lt;String, String&gt; getParams() {\n            Map&lt;String, String&gt; params = new HashMap&lt;&gt;();\n            params.put(\"api_token\", \"gh659gjhvdyudo973823tt9gvjf7i6ric75r76\");\n            params.put(\"name\", \"Angga\");\n            params.put(\"location\", \"Indonesia\");\n            params.put(\"about\", \"UI/UX Designer\");\n            params.put(\"contact\", \"angga@email.com\");\n            return params;\n        }\n\n        @Override\n        protected Map&lt;String, DataPart&gt; getByteData() {\n            Map&lt;String, DataPart&gt; params = new HashMap&lt;&gt;();\n            // file name could found file base or direct access from real path\n            // for now just get bitmap data from ImageView\n            params.put(\"avatar\", new DataPart(\"file_avatar.jpg\", AppHelper.getFileDataFromDrawable(getBaseContext(), mAvatarImage.getDrawable()), \"image/jpeg\"));\n            params.put(\"cover\", new DataPart(\"file_cover.jpg\", AppHelper.getFileDataFromDrawable(getBaseContext(), mCoverImage.getDrawable()), \"image/jpeg\"));\n\n            return params;\n        }\n    };\n\n    VolleySingleton.getInstance(getBaseContext()).addToRequestQueue(multipartRequest);\n</code></pre>\n\n<p>Check full of code <code>VolleyMultipartRequest</code> at my <a href=\"https://gist.github.com/anggadarkprince/a7c536da091f4b26bb4abf2f92926594\">gist</a>.</p>\n", "title": "Working POST Multipart Request with Volley and without HttpEntity", "answer_id": 36891462, "link": "http://stackoverflow.com/questions/32240177/working-post-multipart-request-with-volley-and-without-httpentity/36891462#36891462", "tags": ["java", "android", "asp.net-web-api", "android-volley", "httpentity"]}], "question_id": 32240177}, {"body": "<p>I am using JDK-8 (x64). For <code>Arrays.sort</code> I found the following in the Java documentation: </p>\n\n<blockquote>\n  <p>The sorting algorithm is a Dual-Pivot <strong>Quicksort</strong> by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch.`</p>\n</blockquote>\n\n<p>For <code>Collections.sort</code> I found this: </p>\n\n<blockquote>\n  <p>This implementation is a stable, adaptive, iterative <strong>mergesort</strong> ... This implementation <strong>dumps the specified list into an array, sorts the array</strong>, and iterates over the list resetting each element from the corresponding position in the array.</p>\n</blockquote>\n\n<p>If <code>Collections.sort</code> uses an array, why doesn't it just call <code>Arrays.sort</code> or use dual-pivot <strong>QuickSort</strong>? Why use <strong>Mergesort</strong>?</p>\n", "tags": ["java", "arrays", "sorting", "collections", "java-8"], "title": "Why does Collections.sort use Mergesort but Arrays.sort does not?", "answer_count": 5, "creation_date": 1441117874, "score": 48, "link": "http://stackoverflow.com/questions/32334319/why-does-collections-sort-use-mergesort-but-arrays-sort-does-not", "answers": [{"body": "<p>I don't know about the documentation, but the implementation of <code>java.util.Collections#sort</code> in Java 8 (HotSpot) goes like this:</p>\n\n<pre><code>@SuppressWarnings({\"unchecked\", \"rawtypes\"})\npublic static &lt;T&gt; void sort(List&lt;T&gt; list, Comparator&lt;? super T&gt; c) {\n    list.sort(c);\n}\n</code></pre>\n\n<p>And <code>List#sort</code> has this implementation:</p>\n\n<pre><code>@SuppressWarnings({\"unchecked\", \"rawtypes\"})\ndefault void sort(Comparator&lt;? super E&gt; c) {\n    Object[] a = this.toArray();\n    Arrays.sort(a, (Comparator) c);\n    ListIterator&lt;E&gt; i = this.listIterator();\n    for (Object e : a) {\n        i.next();\n        i.set((E) e);\n    }\n}\n</code></pre>\n\n<p>So, in the end, <code>Collections#sort</code> uses <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#sort-java.lang.Object:A-\"><code>Arrays#sort</code></a> (of object elements) behind the scenes. This implementation uses merge sort or tim sort.</p>\n", "title": "Why does Collections.sort use Mergesort but Arrays.sort does not?", "answer_id": 32334442, "link": "http://stackoverflow.com/questions/32334319/why-does-collections-sort-use-mergesort-but-arrays-sort-does-not/32334442#32334442", "tags": ["java", "arrays", "sorting", "collections", "java-8"]}, {"body": "<p>According to the Javadoc, only primitive arrays are sorted using Quicksort. Object arrays are sorted with a Mergesort as well.</p>\n\n<p>So Collections.sort seems to use the same sorting algorithm as Arrays.sort for Objects.</p>\n\n<p>Another question would be why a different sort algorithm is used for primitive arrays than for Object arrays?</p>\n", "title": "Why does Collections.sort use Mergesort but Arrays.sort does not?", "answer_id": 32334449, "link": "http://stackoverflow.com/questions/32334319/why-does-collections-sort-use-mergesort-but-arrays-sort-does-not/32334449#32334449", "tags": ["java", "arrays", "sorting", "collections", "java-8"]}, {"body": "<p>The API guarantees a <em>stable</em> sorting which Quicksort doesn\u2019t offer. However, when sorting <em>primitive values</em> by their natural order you won\u2019t notice a difference as primitive values have no identity. Therefore, Quicksort is used for primitive arrays as it is slightly more efficient.</p>\n\n<p>For objects you may notice, when objects which are deemed equal according to their <code>equals</code> implementation or the provided <code>Comparator</code> change their order. Therefore, Quicksort is not an option. So a variant of MergeSort is used, the current Java versions use <em>TimSort</em>. This applies to both, <code>Arrays.sort</code> and <code>Collections.sort</code>, though with Java\u00a08, the <code>List</code> itself may override the sort algorithms.</p>\n", "title": "Why does Collections.sort use Mergesort but Arrays.sort does not?", "answer_id": 32334651, "link": "http://stackoverflow.com/questions/32334319/why-does-collections-sort-use-mergesort-but-arrays-sort-does-not/32334651#32334651", "tags": ["java", "arrays", "sorting", "collections", "java-8"]}, {"body": "<p>As stated across many of the answers.</p>\n\n<p>The Quicksort is used by Arrays.sort for sorting primitive collections because stability isn't required (you won't know or care if two identical ints were swapped in the sort)</p>\n\n<p>MergeSort or more specifically Timsort is used by Arrays.sort for sorting collections of objects. Stability is required. Quicksort does not provide for stability, Timsort does.  </p>\n\n<p>Collections.sort delegates to Arrays.sort which is why you see the javadoc referencing the MergeSort.</p>\n", "title": "Why does Collections.sort use Mergesort but Arrays.sort does not?", "answer_id": 39380442, "link": "http://stackoverflow.com/questions/32334319/why-does-collections-sort-use-mergesort-but-arrays-sort-does-not/39380442#39380442", "tags": ["java", "arrays", "sorting", "collections", "java-8"]}, {"body": "<p>Quick Sort has two major drawbacks when it comes to merge sort:</p>\n\n<ul>\n<li>It's not stable while it comes to non primitive. </li>\n<li>It doesn't guarantee n log n performance.</li>\n</ul>\n\n<p>Stability is a non-issue for primitive types, as there is no notion of identity as distinct from (value) equality.</p>\n\n<p>Stability is a big deal when sorting arbitrary objects. It's a nice side benefit that Merge Sort guarantees n log n (time) performance no matter what the input.\nThat's why merge sort is selected to provide a stable sort (Merge Sort) to sort object references.</p>\n", "title": "Why does Collections.sort use Mergesort but Arrays.sort does not?", "answer_id": 39437426, "link": "http://stackoverflow.com/questions/32334319/why-does-collections-sort-use-mergesort-but-arrays-sort-does-not/39437426#39437426", "tags": ["java", "arrays", "sorting", "collections", "java-8"]}], "question_id": 32334319}, {"body": "<p>I really got an 'overflow' trying to make these things to work together. I followed instruction from here: <a href=\"http://docs.sonarqube.org/display/PLUG/Android+Lint+Plugin\">http://docs.sonarqube.org/display/PLUG/Android+Lint+Plugin</a> and finally got a SonarQube 5.1.1 server with Android Lint plugin 1.1 installed. Then I configured my multi-module Gradle build to work with SonarQube plugin: see code fragment from root config below.</p>\n\n<pre><code>plugins {\n    id 'org.sonarqube' version '1.0'\n}\n\nsonarqube {\n    properties {\n\n        property 'sonar.host.url', 'sonarqube-server:9000'\n        property 'sonar.jdbc.url', 'jdbc:mysql://sonarqube-db:3306/sonar?useUnicode=true&amp;amp;characterEncoding=utf8'\n        property 'sonar.jdbc.driverClassName', 'com.mysql.jdbc.Driver'\n        property 'sonar.jdbc.username', 'sonar'\n        property 'sonar.jdbc.password', 'sonar'\n        property 'sonar.sourceEncoding', 'UTF-8'\n        property 'sonar.login', 'admin'\n        property 'sonar.password', 'admin'\n\n        property 'sonar.profile', 'Android Lint'\n\n        property 'sonar.import_unknown_files', true\n        property 'sonar.android.lint.report', 'build/outputs/lint-results.xml'\n    }\n}\n</code></pre>\n\n<p>And after that I ran <code>lint sonarqube</code>task to execute the analysis. As a result I got a bulk of Lint errors regarding 'retrolambda' project (<code>java.lang.UnsupportedOperationException: Unknown ASTNode child: LambdaExpression</code>), which is quite normal, and <code>lint-results.xml</code> (accompanied with HTML version) files per each module containing descriptions of issues discovered. The report said that there were 8 errors and 434 warnings found. But things went wrong when sonarqube plugin tried to upload the results to SonarQube server. The log was full of 'Unable to find file' and 'Unable to find rule' messages. And when the processing was over, then there were no issues reported for my project on SonarQube server.</p>\n\n<p>And I am wondering, what did went wrong? I checked the paths, and all files were there. I looked through all discussions I could reach, and it seems like my config is correct and I do everything right. Does anybody have any clue, what I missed and what needs to be checked? Any suggestions or ideas are welcome.</p>\n\n<p>I will be also happy if there is a way to import lint data using external SonarQube Runner, since this tool seems to be more predictable and stable then a Gradle plugin.</p>\n", "tags": ["java", "android", "gradle", "sonarqube", "android-gradle"], "title": "Analyzing Android Project with Lint and SonarQube", "answer_count": 2, "creation_date": 1439392994, "score": 48, "link": "http://stackoverflow.com/questions/31969440/analyzing-android-project-with-lint-and-sonarqube", "answers": [{"body": "<p>Your gradle settings seems fine, have you installed Android plugin on SonarQube server. </p>\n\n<p>I don't see that step on your question, if not goto Settings->System->Update Center and install Android plugin.</p>\n\n<p><a href=\"http://i.stack.imgur.com/Ewyip.png\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/Ewyip.png\" alt=\"enter image description here\"></a></p>\n\n<p>Once that is installed you need to restart your SonarQube server and rerun sonar-runner.</p>\n", "title": "Analyzing Android Project with Lint and SonarQube", "answer_id": 32689067, "link": "http://stackoverflow.com/questions/31969440/analyzing-android-project-with-lint-and-sonarqube/32689067#32689067", "tags": ["java", "android", "gradle", "sonarqube", "android-gradle"]}, {"body": "<p>I had success with a multimodule android project. Since the complete build files take to much space I show the relevant parts here only.</p>\n\n<p>In the parent project's build.gradle I set:</p>\n\n<pre><code>buildscript {\n    ...\n    dependencies { classpath 'com.android.tools.build:gradle:1.5.0'\n    ...\n}\nplugins { id \"org.sonarqube\" version \"1.1\" }\n</code></pre>\n\n<p>In the app project (and any other children) I set:</p>\n\n<pre><code>sonarqube {\n    properties {\n        property \"sonar.profile\", \"Android Lint\"\n        property \"sonar.sources\", \"./src/main/java\"\n    }\n}\n</code></pre>\n\n<p>That was the minimum setup for sonarqube plugin to start analyzing the projects.</p>\n", "title": "Analyzing Android Project with Lint and SonarQube", "answer_id": 33906027, "link": "http://stackoverflow.com/questions/31969440/analyzing-android-project-with-lint-and-sonarqube/33906027#33906027", "tags": ["java", "android", "gradle", "sonarqube", "android-gradle"]}], "question_id": 31969440}, {"body": "<p>Exceptions, especially checked ones, can severely interrupt the flow of program logic when the FP idiom is used in Java 8. Here is an arbitrary example:</p>\n\n<pre><code>String s1 = \"oeu\", s2 = \"2\";\nStream.of(s1, s2).forEach(s -&gt; \n    System.out.println(Optional.of(s).map(Integer::parseInt).get()));\n</code></pre>\n\n<p>The above code breaks when there's an exception for an unparseable string. But say I just want to replace that with a default value, much like I can with <code>Optional</code>:</p>\n\n<pre><code>Stream.of(s1, s2).forEach(s -&gt; \n   System.out.println(Optional.of(s)\n                              .map(Integer::parseInt)\n                              .orElse(-1)));\n</code></pre>\n\n<p>Of course, this still fails because <code>Optional</code> only handles <code>null</code>s. I would like something as follows:</p>\n\n<pre><code>Stream.of(s1, s2).forEach(s -&gt;\n    System.out.println(\n        Exceptional.of(s)\n                   .map(Integer::parseInt)\n                   .handle(NumberFormatException.class, swallow())\n                   .orElse(-1)));\n</code></pre>\n\n<hr>\n\n<p><strong>Note:</strong> this is a self-answered question.</p>\n", "tags": ["java", "java-8", "java-stream"], "title": "A better approach to handling exceptions in a functional way", "answer_count": 4, "creation_date": 1436277701, "score": 47, "link": "http://stackoverflow.com/questions/31270759/a-better-approach-to-handling-exceptions-in-a-functional-way", "answers": [{"body": "<p>Presented below is the full code of the <code>Exceptional</code> class. It has a quite large API which is a pure extension of the <code>Optional</code> API so it can be a drop-in replacement for it in any existing code&mdash;except that it isn't a subtype of the final <code>Optional</code> class. The class can be seen as being in the same relationship with the <a href=\"http://mauricio.github.io/2014/02/17/scala-either-try-and-the-m-word.html\"><code>Try</code></a> monad as <code>Optional</code> is with the <code>Maybe</code> monad: it draws inspiration from it, but is adapted to the Java idiom (such as actually throwing exceptions, even from non-terminal operations).</p>\n\n<p>These are some key guidelines followed by the class:</p>\n\n<ul>\n<li><p>as opposed to the monadic approach, doesn't ignore Java's exception mechanism; </p></li>\n<li><p>instead it relieves the impedance mismatch between exceptions and higher-order functions;</p></li>\n<li><p>exception handling not statically typesafe (due to sneaky throwing), but always safe at runtime (never swallows an exception except on explicit request).</p></li>\n</ul>\n\n<p>The class tries to cover all the typical ways to handle an exception:</p>\n\n<ul>\n<li><code>recover</code> with some handling code which provides a substitute value;</li>\n<li><code>flatRecover</code> which, analogous to <code>flatMap</code>, allows to return a new <code>Exceptional</code> instance which will be unwrapped and the state of the current instance suitably updated;</li>\n<li><code>propagate</code> an exception, throwing it from the <code>Exceptional</code> expression and making the <code>propagate</code> call declare this exception type;</li>\n<li><code>propagate</code> it after wrapping into another exception (<em>translate</em> it);</li>\n<li><code>handle</code> it, resulting in an empty <code>Exceptional</code>;</li>\n<li>as a special case of handling, <code>swallow</code> it with an empty handler block.</li>\n</ul>\n\n<p>The <code>propagate</code> approach allows one to selectively pick which checked exceptions he wants to expose from his code. Exceptions which remain unhandled at the time a terminal operation is called (like <code>get</code>) will be <em>sneakily</em> thrown without declaration. This is often considered as an advanced and dangerous approach, but is nevertheless often employed as a way to somewhat alleviate the nuisance of checked exceptions in combination with lambda shapes which do not declare them. The <code>Exceptional</code> class hopes to offer a cleaner and more selective alternative to sneaky throw.</p>\n\n<hr>\n\n<pre><code>/*\n * Copyright (c) 2015, Marko Topolnik. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport java.util.NoSuchElementException;\nimport java.util.Objects;\nimport java.util.function.Consumer;\nimport java.util.function.Function;\nimport java.util.function.Predicate;\nimport java.util.function.Supplier;\n\npublic final class Exceptional&lt;T&gt;\n{\n  private final T value;\n  private final Throwable exception;\n\n  private Exceptional(T value, Throwable exc) {\n    this.value = value;\n    this.exception = exc;\n  }\n\n  public static &lt;T&gt; Exceptional&lt;T&gt; empty() {\n    return new Exceptional&lt;&gt;(null, null);\n  }\n\n  public static &lt;T&gt; Exceptional&lt;T&gt; ofNullable(T value) {\n    return value != null ? of(value) : empty();\n  }\n\n  public static &lt;T&gt; Exceptional&lt;T&gt; of(T value) {\n    return new Exceptional&lt;&gt;(Objects.requireNonNull(value), null);\n  }\n\n  public static &lt;T&gt; Exceptional&lt;T&gt; ofNullableException(Throwable exception) {\n    return exception != null? new Exceptional&lt;&gt;(null, exception) : empty();\n  }\n\n  public static &lt;T&gt; Exceptional&lt;T&gt; ofException(Throwable exception) {\n    return new Exceptional&lt;&gt;(null, Objects.requireNonNull(exception));\n  }\n\n  public static &lt;T&gt; Exceptional&lt;T&gt; from(TrySupplier&lt;T&gt; supplier) {\n    try {\n      return ofNullable(supplier.tryGet());\n    } catch (Throwable t) {\n      return new Exceptional&lt;&gt;(null, t);\n    }\n  }\n\n  public static Exceptional&lt;Void&gt; fromVoid(TryRunnable task) {\n    try {\n      task.run();\n      return new Exceptional&lt;&gt;(null, null);\n    } catch (Throwable t) {\n      return new Exceptional&lt;&gt;(null, t);\n    }\n  }\n\n  public static &lt;E extends Throwable&gt; Consumer&lt;? super E&gt; swallow() {\n    return e -&gt; {};\n  }\n\n  public T get() {\n    if (value != null) return value;\n    if (exception != null) sneakyThrow(exception);\n    throw new NoSuchElementException(\"No value present\");\n  }\n\n  public T orElse(T other) {\n    if (value != null) return value;\n    if (exception != null) sneakyThrow(exception);\n    return other;\n  }\n\n  public T orElseGet(Supplier&lt;? extends T&gt; other) {\n    if (value != null) return value;\n    if (exception != null) sneakyThrow(exception);\n    return other.get();\n  }\n\n  public&lt;U&gt; Exceptional&lt;U&gt; map(Function&lt;? super T, ? extends U&gt; mapper) {\n    Objects.requireNonNull(mapper);\n    if (value == null) return new Exceptional&lt;&gt;(null, exception);\n    final U u;\n    try {\n      u = mapper.apply(value);\n    } catch (Throwable exc) {\n      return new Exceptional&lt;&gt;(null, exc);\n    }\n    return ofNullable(u);\n  }\n\n  public&lt;U&gt; Exceptional&lt;U&gt; flatMap(Function&lt;? super T, Exceptional&lt;U&gt;&gt; mapper) {\n    Objects.requireNonNull(mapper);\n    return value != null ? Objects.requireNonNull(mapper.apply(value)) : empty();\n  }\n\n  public Exceptional&lt;T&gt; filter(Predicate&lt;? super T&gt; predicate) {\n    Objects.requireNonNull(predicate);\n    if (value == null) return this;\n    final boolean b;\n    try {\n      b = predicate.test(value);\n    } catch (Throwable t) {\n      return ofException(t);\n    }\n    return b ? this : empty();\n  }\n\n  public &lt;X extends Throwable&gt; Exceptional&lt;T&gt; recover(\n      Class&lt;? extends X&gt; excType, Function&lt;? super X, T&gt; mapper)\n  {\n    Objects.requireNonNull(mapper);\n    return excType.isInstance(exception) ? ofNullable(mapper.apply(excType.cast(exception))) : this;\n  }\n\n  public &lt;X extends Throwable&gt; Exceptional&lt;T&gt; recover(\n      Iterable&lt;Class&lt;? extends X&gt;&gt; excTypes, Function&lt;? super X, T&gt; mapper)\n  {\n    Objects.requireNonNull(mapper);\n    for (Class&lt;? extends X&gt; excType : excTypes)\n      if (excType.isInstance(exception))\n        return ofNullable(mapper.apply(excType.cast(exception)));\n    return this;\n  }\n\n  public &lt;X extends Throwable&gt; Exceptional&lt;T&gt; flatRecover(\n      Class&lt;? extends X&gt; excType, Function&lt;? super X, Exceptional&lt;T&gt;&gt; mapper)\n  {\n    Objects.requireNonNull(mapper);\n    return excType.isInstance(exception) ? Objects.requireNonNull(mapper.apply(excType.cast(exception))) : this;\n  }\n\n  public &lt;X extends Throwable&gt; Exceptional&lt;T&gt; flatRecover(\n      Iterable&lt;Class&lt;? extends X&gt;&gt; excTypes, Function&lt;? super X, Exceptional&lt;T&gt;&gt; mapper)\n  {\n    Objects.requireNonNull(mapper);\n    for (Class&lt;? extends X&gt; c : excTypes)\n      if (c.isInstance(exception))\n        return Objects.requireNonNull(mapper.apply(c.cast(exception)));\n    return this;\n  }\n\n  public &lt;E extends Throwable&gt; Exceptional&lt;T&gt; propagate(Class&lt;E&gt; excType) throws E {\n    if (excType.isInstance(exception))\n      throw excType.cast(exception);\n    return this;\n  }\n\n  public &lt;E extends Throwable&gt; Exceptional&lt;T&gt; propagate(Iterable&lt;Class&lt;? extends E&gt;&gt; excTypes) throws E {\n    for (Class&lt;? extends E&gt; excType : excTypes)\n      if (excType.isInstance(exception))\n        throw excType.cast(exception);\n    return this;\n  }\n\n  public &lt;E extends Throwable, F extends Throwable&gt; Exceptional&lt;T&gt; propagate(\n      Class&lt;E&gt; excType, Function&lt;? super E, ? extends F&gt; translator)\n  throws F\n  {\n    if (excType.isInstance(exception))\n      throw translator.apply(excType.cast(exception));\n    return this;\n  }\n\n  public &lt;E extends Throwable, F extends Throwable&gt; Exceptional&lt;T&gt; propagate(\n      Iterable&lt;Class&lt;E&gt;&gt; excTypes, Function&lt;? super E, ? extends F&gt; translator)\n  throws F\n  {\n    for (Class&lt;? extends E&gt; excType : excTypes)\n      if (excType.isInstance(exception))\n        throw translator.apply(excType.cast(exception));\n    return this;\n  }\n\n  public &lt;E extends Throwable&gt; Exceptional&lt;T&gt; handle(Class&lt;E&gt; excType, Consumer&lt;? super E&gt; action) {\n    if (excType.isInstance(exception)) {\n      action.accept(excType.cast(exception));\n      return empty();\n    }\n    return this;\n  }\n\n  public &lt;E extends Throwable&gt; Exceptional&lt;T&gt; handle(Iterable&lt;Class&lt;E&gt;&gt; excTypes, Consumer&lt;? super E&gt; action) {\n    for (Class&lt;? extends E&gt; excType : excTypes)\n      if (excType.isInstance(exception)) {\n        action.accept(excType.cast(exception));\n        return empty();\n      }\n    return this;\n  }\n\n  public &lt;X extends Throwable&gt; T orElseThrow(Supplier&lt;? extends X&gt; exceptionSupplier) throws X {\n    if (value != null) return value;\n    if (exception != null) sneakyThrow(exception);\n    throw exceptionSupplier.get();\n  }\n\n  public boolean isPresent() {\n    return value != null;\n  }\n\n  public void ifPresent(Consumer&lt;? super T&gt; consumer) {\n    if (value != null)\n      consumer.accept(value);\n    if (exception != null) sneakyThrow(exception);\n  }\n\n  public boolean isException() {\n    return exception != null;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    return obj instanceof Exceptional &amp;&amp; Objects.equals(value, ((Exceptional)obj).value);\n  }\n\n  @Override\n  public int hashCode() {\n    return Objects.hashCode(value);\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  private static &lt;T extends Throwable&gt; void sneakyThrow(Throwable t) throws T {\n    throw (T) t;\n  }\n}\n</code></pre>\n\n<hr>\n\n<pre><code>@FunctionalInterface\npublic interface TrySupplier&lt;T&gt; {\n  T tryGet() throws Throwable;\n}\n</code></pre>\n\n<hr>\n\n<pre><code>@FunctionalInterface\npublic interface TryRunnable {\n  void run() throws Throwable;\n}\n</code></pre>\n", "title": "A better approach to handling exceptions in a functional way", "answer_id": 31270760, "link": "http://stackoverflow.com/questions/31270759/a-better-approach-to-handling-exceptions-in-a-functional-way/31270760#31270760", "tags": ["java", "java-8", "java-stream"]}, {"body": "<p>What if every functional interface provided by <code>java.util.function</code> was allowed to throw an exception?</p>\n\n<pre><code>public interface ThrowingSupplier&lt;R, X extends Throwable&gt; {\n    public R get() throws X;\n}\n</code></pre>\n\n<p>We could use some default methods to provide the behavior you want.</p>\n\n<ul>\n<li>You could <em>fallback to</em> some default value or action</li>\n<li><em>Or</em> you could <em>try</em> to perform another action which may throw an exception</li>\n</ul>\n\n<p>I've <a href=\"https://github.com/JeffreyFalgout/ThrowingStream/tree/master/src/main/java/throwing/function\" rel=\"nofollow\">written a library</a> which redefines most of the interfaces in <code>java.util.function</code> this way. I even provide a <a href=\"https://github.com/JeffreyFalgout/ThrowingStream/blob/master/README.md\" rel=\"nofollow\"><code>ThrowingStream</code></a> which let's you use these new interfaces with the same API as a regular <code>Stream</code>. </p>\n\n<pre><code>@FunctionalInterface\npublic interface ThrowingSupplier&lt;R, X extends Throwable&gt; {\n    public R get() throws X;\n\n    default public Supplier&lt;R&gt; fallbackTo(Supplier&lt;? extends R&gt; supplier) {\n        ThrowingSupplier&lt;R, Nothing&gt; t = supplier::get;\n        return orTry(t)::get;\n    }\n\n    default public &lt;Y extends Throwable&gt; ThrowingSupplier&lt;R, Y&gt; orTry(\n            ThrowingSupplier&lt;? extends R, ? extends Y&gt; supplier) {\n        Objects.requireNonNull(supplier, \"supplier\");\n        return () -&gt; {\n            try {\n                return get();\n            } catch (Throwable x) {\n                try {\n                    return supplier.get();\n                } catch (Throwable y) {\n                    y.addSuppressed(x);\n                    throw y;\n                }\n            }\n        };\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://github.com/JeffreyFalgout/ThrowingStream/blob/master/src/main/java/throwing/Nothing.java\" rel=\"nofollow\"><code>Nothing</code></a> is a <code>RuntimeException</code> that can never be thrown.)</p>\n\n<hr>\n\n<p>Your original example would become</p>\n\n<pre><code>ThrowingFunction&lt;String, Integer, NumberFormatException&gt; parse = Integer::parseInt;\nFunction&lt;String, Optional&lt;Integer&gt;&gt; safeParse = parse.fallbackTo(s -&gt; null)\n    .andThen(Optional::ofNullable);\nStream.of(s1, s2)\n    .map(safeParse)\n    .map(i -&gt; i.orElse(-1))\n    .forEach(System.out::println);\n</code></pre>\n", "title": "A better approach to handling exceptions in a functional way", "answer_id": 31273726, "link": "http://stackoverflow.com/questions/31270759/a-better-approach-to-handling-exceptions-in-a-functional-way/31273726#31273726", "tags": ["java", "java-8", "java-stream"]}, {"body": "<p>There's a third-party library called <a href=\"https://github.com/jasongoodwin/better-java-monads\" rel=\"nofollow\">better-java-monads</a>. It has the <a href=\"https://github.com/jasongoodwin/better-java-monads/blob/master/src/main/java/com/jasongoodwin/monads/Try.java\" rel=\"nofollow\"><code>Try</code></a> monad which provides the necessary functions. It also has <code>TryMapFunction</code> and <code>TrySupplier</code> functional interfaces to use the <code>Try</code> monad with checked exceptions.</p>\n", "title": "A better approach to handling exceptions in a functional way", "answer_id": 31275738, "link": "http://stackoverflow.com/questions/31270759/a-better-approach-to-handling-exceptions-in-a-functional-way/31275738#31275738", "tags": ["java", "java-8", "java-stream"]}, {"body": "<p>Here's some <a href=\"http://mail.openjdk.java.net/pipermail/lambda-dev/2013-June/010009.html\">discussions</a> I had previously on this topic.</p>\n\n<p>I made an interface <a href=\"http://bayou.io/release/0.9/javadoc/bayou/util/Result.html\"><code>Result&lt;T&gt;</code></a> along the reasonings. A <code>Result&lt;T&gt;</code> is either a success with a value of type <code>T</code>, or a failure with an Exception. It's a subtype of <a href=\"http://bayou.io/release/0.9/javadoc/bayou/async/Async.html\"><code>Async&lt;T&gt;</code></a>, as an immediately completed async action, but that is not important here. </p>\n\n<p>To create a result -</p>\n\n<pre><code>Result.success( value )\nResult.failure( exception )\nResult.call( callable )\n</code></pre>\n\n<p>Result can then be transformed in various ways - <code>transform, map, then, peek, catch_, finally_</code> etc. For example</p>\n\n<pre><code>Async&lt;Integer&gt; rInt = Result.success( s )\n      .map( Integer::parseInt )\n      .peek( System.out::println )\n      .catch_( NumberFormatException.class, ex-&gt;42 ) // default\n      .catch_( Exception.class, ex-&gt; { ex.printStacktrace(); throw ex; } )\n      .finally_( ()-&gt;{...} )\n</code></pre>\n\n<p>Unfortunately the API is focusing on Async, so some methods return Async. Some of them can be overridden by Result to return Result; but some cannot, e.g. <code>then()</code> (which is flatmap). However, if interested, it's easy to extract a standalone Result API that has nothing to do with Async.</p>\n", "title": "A better approach to handling exceptions in a functional way", "answer_id": 31278479, "link": "http://stackoverflow.com/questions/31270759/a-better-approach-to-handling-exceptions-in-a-functional-way/31278479#31278479", "tags": ["java", "java-8", "java-stream"]}], "question_id": 31270759}, {"body": "<p>I am working at a commercial android application.\nI am also using some libraries licensed under different license types some of them stating the following:</p>\n\n<p><em>If the library has a \"NOTICE\" file with attribution notes, you must include that NOTICE when you distribute</em></p>\n\n<p>(One of them is licensed under <strong>Apache License 2.0</strong> for example).</p>\n\n<p>There is more than one library. When I do the build with <strong>gradle</strong> or with <strong>Android Studio</strong> I obtain the following build error:</p>\n\n<pre><code>* What went wrong:\nExecution failed for task ':app:transformResourcesWithMergeJavaResForDebug'.\n&gt; com.android.build.api.transform.TransformException: com.android.builder.packaging.DuplicateFileException: Duplicate files copied in APK META-INF/license.txt\n</code></pre>\n\n<p>The answers that I found until now on the internet and stackoverflow suggest to remove the license.txt(notice.txt or other files that could interfere like this) from packaging by adding to <code>build.gradle</code> file the following:</p>\n\n<pre><code>packagingOptions {\n    exclude 'META-INF/DEPENDENCIES.txt'\n    exclude 'META-INF/LICENSE.txt'\n    exclude 'META-INF/NOTICE.txt'\n    exclude 'META-INF/NOTICE'\n    exclude 'META-INF/LICENSE'\n    exclude 'META-INF/DEPENDENCIES'\n    exclude 'META-INF/notice.txt'\n    exclude 'META-INF/license.txt'\n    exclude 'META-INF/dependencies.txt'\n    exclude 'META-INF/LGPL2.1'\n}\n</code></pre>\n\n<p>See for example: <a href=\"http://stackoverflow.com/questions/20827885/android-studio-0-4-duplicate-files-copied-in-apk-meta-inf-license-txt\">Android Studio 0.4 Duplicate files copied in APK META-INF/LICENSE.txt</a></p>\n\n<p>According to the license of those libraries(<strong>Apache License 2.0</strong> for instance), the license and notice files should be <strong><em>included</em></strong>.</p>\n\n<p><strong>My question:</strong>  How can I add multiple files related to licensing(such as <em>license.txt</em>, <em>notice.txt</em> etc) from gradle into my project in order to be compliant with the licenses(<strong>technical detail:</strong> licences texts will be concatenated)?</p>\n", "tags": ["java", "android", "gradle"], "title": "How do I resolve &quot;Duplicate files copied in APK META-INF/*&quot;", "answer_count": 5, "creation_date": 1448474549, "score": 47, "link": "http://stackoverflow.com/questions/33923461/how-do-i-resolve-duplicate-files-copied-in-apk-meta-inf", "answers": [{"body": "<p>There is a solution if you have only one license using the name <code>license.txt</code> (read: all <code>license.txt</code> copies are identical):</p>\n\n<pre><code>packagingOptions {\n   pickFirst  'META-INF/license.txt'\n}</code></pre>\n", "title": "How do I resolve &quot;Duplicate files copied in APK META-INF/*&quot;", "answer_id": 34287790, "link": "http://stackoverflow.com/questions/33923461/how-do-i-resolve-duplicate-files-copied-in-apk-meta-inf/34287790#34287790", "tags": ["java", "android", "gradle"]}, {"body": "<p>You can add multiple licence in gradle <a href=\"https://github.com/hierynomus/license-gradle-plugin\" rel=\"nofollow\">see this</a></p>\n", "title": "How do I resolve &quot;Duplicate files copied in APK META-INF/*&quot;", "answer_id": 34288376, "link": "http://stackoverflow.com/questions/33923461/how-do-i-resolve-duplicate-files-copied-in-apk-meta-inf/34288376#34288376", "tags": ["java", "android", "gradle"]}, {"body": "<p>Add following into respective build.gradle file </p>\n\n<pre><code>packagingOptions {\n        exclude 'META-INF/ASL2.0'\n        exclude 'META-INF/LICENSE'\n        exclude 'META-INF/NOTICE'\n        exclude 'META-INF/NOTICE.txt'\n        exclude 'META-INF/LICENSE.txt'\n        exclude 'META-INF/MANIFEST.MF'\n    }\n</code></pre>\n", "title": "How do I resolve &quot;Duplicate files copied in APK META-INF/*&quot;", "answer_id": 36593694, "link": "http://stackoverflow.com/questions/33923461/how-do-i-resolve-duplicate-files-copied-in-apk-meta-inf/36593694#36593694", "tags": ["java", "android", "gradle"]}, {"body": "<p>Surely it will work</p>\n\n<blockquote>\n  <p>packagingOptions {\n      exclude 'META-INF/LICENSE.txt'\n      exclude 'META-INF/NOTICE.txt'   }</p>\n</blockquote>\n", "title": "How do I resolve &quot;Duplicate files copied in APK META-INF/*&quot;", "answer_id": 36735253, "link": "http://stackoverflow.com/questions/33923461/how-do-i-resolve-duplicate-files-copied-in-apk-meta-inf/36735253#36735253", "tags": ["java", "android", "gradle"]}, {"body": "<p>I faced the same issue with my application.\nYou need to make sure you have not added any libraries twice.\nIf you have followed the firebase documentation \n<strong><a href=\"https://firebase.google.com/docs/android/setup\" rel=\"nofollow\">https://firebase.google.com/docs/android/setup</a></strong></p>\n\n<p>Then you should not add firebase library inside android studio\ni.e.\nfile->project structure->cloud->firebase</p>\n\n<p>You have to do only one of the both, to use firebase in your android application.</p>\n\n<p>At the end clean and rerun your app.</p>\n", "title": "How do I resolve &quot;Duplicate files copied in APK META-INF/*&quot;", "answer_id": 38431856, "link": "http://stackoverflow.com/questions/33923461/how-do-i-resolve-duplicate-files-copied-in-apk-meta-inf/38431856#38431856", "tags": ["java", "android", "gradle"]}], "question_id": 33923461}, {"body": "<p>We have a long-lived server process, that infrequently needs a lot of RAM for a short while. We see that once the JVM has gotten the memory from the OS, it\nnever returns it back to the OS. How do we ask the JVM to return heap memory back to the OS?</p>\n\n<p>Typically, the accepted answer to such questions is to use\n<code>-XX:MaxHeapFreeRatio</code> and <code>-XX:MinHeapFreeRatio</code>. (See e.g.\n<a href=\"http://i.stack.imgur.com/njXRs.png\">1</a>,<a href=\"http://stackoverflow.com/a/4625142/345716\">2</a>,<a href=\"http://stackoverflow.com/a/3022433/345716\">3</a>,<a href=\"http://stackoverflow.com/a/324505/345716\">4</a>). But we're running java like this:</p>\n\n<pre><code>java -Xmx4G -XX:MaxHeapFreeRatio=50 -XX:MinHeapFreeRatio=30 MemoryUsage\n</code></pre>\n\n<p>and still see this in VisualVM:</p>\n\n<p><a href=\"http://i.stack.imgur.com/njXRs.png\"><img src=\"http://i.stack.imgur.com/njXRs.png\" alt=\"Visual VM memory usage\"></a></p>\n\n<p>Clearly, the JVM is not honoring <code>-XX:MaxHeapFreeRatio=50</code> as the heapFreeRatio is very close to 100% and nowhere near 50%. No amount of clicking on \"Perform GC\" returns memory to the OS.</p>\n\n<p>MemoryUsage.java:</p>\n\n<pre><code>import java.util.ArrayList;\nimport java.util.List;\n\npublic class MemoryUsage {\n\n    public static void main(String[] args) throws InterruptedException {\n        System.out.println(\"Sleeping before allocating memory\");\n        Thread.sleep(10*1000);\n\n        System.out.println(\"Allocating/growing memory\");\n        List&lt;Long&gt; list = new ArrayList&lt;&gt;();\n        // Experimentally determined factor. This gives approximately 1750 MB\n        // memory in our installation.\n        long realGrowN = 166608000; //\n        for (int i = 0 ; i &lt; realGrowN ; i++) {\n            list.add(23L);\n        }\n\n        System.out.println(\"Memory allocated/grown - sleeping before Garbage collecting\");\n        Thread.sleep(10*1000);\n\n        list = null;\n        System.gc();\n\n        System.out.println(\"Garbage collected - sleeping forever\");\n        while (true) {\n            Thread.sleep(1*1000);\n        }\n    }\n}\n</code></pre>\n\n<p>Versions:</p>\n\n<pre><code>&gt; java -version\nopenjdk version \"1.8.0_66-internal\"\nOpenJDK Runtime Environment (build 1.8.0_66-internal-b01)\nOpenJDK 64-Bit Server VM (build 25.66-b01, mixed mode)\n\n&gt; uname -a\nLinux londo 3.16.0-4-amd64 #1 SMP Debian 3.16.7-ckt11-1+deb8u5 (2015-10-09) x86_64 GNU/Linux\n\n&gt; lsb_release -a\nNo LSB modules are available.\nDistributor ID: Debian\nDescription:    Debian GNU/Linux 8.2 (jessie)\nRelease:    8.2\nCodename:   jessie\n</code></pre>\n\n<p>I've also tried OpenJDK 1.7 and Sun Java's 1.8. All behave similarly and none\ngive memory back to the OS.</p>\n\n<p>I do think I need this and that swap and paging won't \"solve\" this, because spending disk IO on paging close to 2GB garbage in and out is just a waste of resources. If you disagree, please enlighten me.</p>\n\n<p>I've also written a little memoryUsage.c with <code>malloc()</code>/<code>free()</code>, and it <em>does</em> return memory to the OS. So it is <em>possible</em> in C. Perhaps not with Java?</p>\n\n<p>Edit: Augusto pointed out that searching would've led me to <code>-XX:MaxHeapFreeRatio</code> and <code>-XX:MinHeapFreeRatio</code> only worked with <code>-XX:+UseSerialGC</code>. I was ecstatic and tried it, puzzled that I hadn't found this myself. Yes, it did work with my MemoryUsage.java:</p>\n\n<p><img src=\"http://s20.postimg.org/6d69ut8kt/XXUse_Serial_GC.png\" alt=\"-XX:+UseSerialGC working with simple app\"></p>\n\n<p>However, when I tried <code>-XX:+UseSerialGC</code> with our real app, not so much:</p>\n\n<p><img src=\"http://s20.postimg.org/gbvtv17e5/Manual_GC.png\" alt=\"-XX:+UseSerialGC not working with real app\"></p>\n\n<p>I discovered that gc() after a while <em>did</em> help, so I made a thread that did more or less:</p>\n\n<pre><code>while (idle() &amp;&amp; memoryTooLarge() &amp;&amp; ! tooManyAttemptsYet()) {\n    Thread.sleep(10*1000);\n    System.gc();\n}\n</code></pre>\n\n<p>and that did the trick:</p>\n\n<p><img src=\"http://s20.postimg.org/x9q934re5/gc_Thread_Working.png\" alt=\"GC thread working\"></p>\n\n<p>I had actually previously seen the behavior with <code>-XX:+UseSerialGC</code> and multiple <code>System.gc()</code> calls in some of my many experiments but didn't like the need for a GC thread. And who knows if that'll continue to work as both our app and java evolves. There must be a better way.</p>\n\n<p>What is the logic that forces me to call <code>System.gc()</code> four times (but not immediately), and where is this stuff documented? </p>\n\n<p>In search of documentation for <code>-XX:MaxHeapFreeRatio</code> and <code>-XX:MinHeapFreeRatio</code> only working with <code>-XX:+UseSerialGC</code>, I read <a href=\"http://docs.oracle.com/javase/8/docs/technotes/tools/unix/java.html\">the documentation for the java tool/executable</a> and it isn't mentioned anywhere that <code>-XX:MaxHeapFreeRatio</code> and <code>-XX:MinHeapFreeRatio</code> only works with <code>-XX:+UseSerialGC</code>. In fact, the fixed issue <a href=\"https://bugs.openjdk.java.net/browse/JDK-8028391\">[JDK-8028391] Make the Min/MaxHeapFreeRatio flags manageable</a> says:</p>\n\n<blockquote>\n  <p>To enable applications to control how and when to allow for more or less GC,\n  the flags -XX:MinHeapFreeRatio and -XX:MaxHeapFreeRatio should be made\n  manageable.  Support for these flags should also be implemented in the\n  default parallel collector.</p>\n</blockquote>\n\n<p>A <a href=\"https://bugs.openjdk.java.net/browse/JDK-8028391?focusedCommentId=13476444&amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13476444\">comment</a> for the fixed issue says:</p>\n\n<blockquote>\n  <p>Support for these flags have also been added to the ParallelGC as \n  part of the adaptive size policy. </p>\n</blockquote>\n\n<p>I've checked, and the <a href=\"http://hg.openjdk.java.net/jdk8u/jdk8u/hotspot/rev/a034dc5e910b\">patch</a> referenced in the <a href=\"https://bugs.openjdk.java.net/browse/JDK-8033209\">fixed issue backported to openjdk-8</a> is indeed contained in the <a href=\"http://http.debian.net/debian/pool/main/o/openjdk-8/openjdk-8_8u66-b17.orig.tar.gz\">source package tarball</a> for the openjdk-8 version I'm using. So it should apparently work in \"the default parallel collector\", but doesn't as I've demonstrated in this post. I haven't yet found any documentation that says it should only work with <code>-XX:+UseSerialGC</code>. And as I've documented here, even this is unreliable/dicey.</p>\n\n<p>Can't I just get <code>-XX:MaxHeapFreeRatio</code> and <code>-XX:MinHeapFreeRatio</code> to do what they promise without having to go through all these hoops?</p>\n", "tags": ["java", "memory-management", "heap-memory"], "title": "Will OpenJDK JVM ever give heap memory back to Linux?", "answer_count": 3, "creation_date": 1445692940, "score": 47, "link": "http://stackoverflow.com/questions/33318688/will-openjdk-jvm-ever-give-heap-memory-back-to-linux", "answers": [{"body": "<p>Your issue is quit complex - I would suggest an easy going solution. From what I have read, you know how to code in both C and Java. May be using the JNA (Java Native Access) or JNI (Java Native Interface) might resolve the root of the issue (coding the heavy processing part in C and call it from java). Another way would be to have another little program written in C do the heavy lifting - you would call that little program from your java code (preferably in its own thread).\n<a href=\"https://en.wikipedia.org/wiki/Java_Native_Access\" rel=\"nofollow\">Java Native Access</a>\n<a href=\"https://en.wikipedia.org/wiki/Java_Native_Interface\" rel=\"nofollow\">Java Native Interface</a></p>\n", "title": "Will OpenJDK JVM ever give heap memory back to Linux?", "answer_id": 33642889, "link": "http://stackoverflow.com/questions/33318688/will-openjdk-jvm-ever-give-heap-memory-back-to-linux/33642889#33642889", "tags": ["java", "memory-management", "heap-memory"]}, {"body": "<p>If there is method (say m1())which does the heavy lifting in your application you can try this:</p>\n\n<ol>\n<li>instead of calling the m1(), <code>serialize</code> all the objects required\nfor the method to work.</li>\n<li>create a main method which <code>de-serialize</code> the objects you serialized in previous step. and calls m1() - this main method is entry point for a program P1.</li>\n<li>At the completion of m1(), serialize the output for the main program to de-serialize.</li>\n<li>execute P1 as a separate program using <code>Runtime or ProcessBuilder</code>.</li>\n</ol>\n\n<p>This way when the heavy lifting method m1() completes, the process P1 will end, that should release the heap on that JVM.</p>\n", "title": "Will OpenJDK JVM ever give heap memory back to Linux?", "answer_id": 33749290, "link": "http://stackoverflow.com/questions/33318688/will-openjdk-jvm-ever-give-heap-memory-back-to-linux/33749290#33749290", "tags": ["java", "memory-management", "heap-memory"]}, {"body": "<p>\"G1 (-XX:+UseG1GC), Parallel scavenge (-XX:+UseParallelGC) and ParallelOld (-XX:+UseParallelOldGC) do return memory when the heap shrinks. I'm not so sure about Serial and CMS, they didn't shrink their heap in my experiments.</p>\n\n<p>Both parallel collectors do require a number of GCs before shrinking the heap down to an \"acceptable\" size. This is per design. They are deliberately holding on to the heap assuming that it will be needed in the future. Setting the flag -XX:GCTimeRatio=1 will improve the situation somewhat but it will still take several GCs to shrink a lot.</p>\n\n<p>G1 is remarkably good at shrinking the heap fast, so for the usecase described above I would say it's solvable by using G1 and running <code>System.gc()</code> after having released all caches and class loaders etc.\"</p>\n\n<p><a href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6498735\" rel=\"nofollow\">http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6498735</a></p>\n", "title": "Will OpenJDK JVM ever give heap memory back to Linux?", "answer_id": 33756220, "link": "http://stackoverflow.com/questions/33318688/will-openjdk-jvm-ever-give-heap-memory-back-to-linux/33756220#33756220", "tags": ["java", "memory-management", "heap-memory"]}], "question_id": 33318688}, {"body": "<p>I had this question in my Java test where I had to assign values to <code>a</code> and <code>b</code> so this expression evaluates to true: </p>\n\n<pre><code>(a&lt;=b &amp;&amp; b&lt;=a &amp;&amp; a!=b)\n</code></pre>\n\n<p>Sadly, I had no idea what the answer was.</p>\n", "tags": ["java"], "title": "This &#39;if&#39; evaluation in Java with three simultaneous expressions", "answer_count": 1, "creation_date": 1443091873, "score": 46, "link": "http://stackoverflow.com/questions/32759492/this-if-evaluation-in-java-with-three-simultaneous-expressions", "answers": [{"body": "<p>There's a simple trick here. </p>\n\n<p>You cannot think this through with boolean logic only. Using that, this combination...</p>\n\n<ul>\n<li><code>a</code> is less than or equal to <code>b</code>, and</li>\n<li><code>b</code> is less than or equal to <code>a</code>, and</li>\n<li><code>a</code> is not equal to <code>b</code></li>\n</ul>\n\n<p>...would never return <code>true</code>. </p>\n\n<p>However, the <code>!=</code> operator compares references if its operands are objects. </p>\n\n<p>So, the following will return <code>true</code>:</p>\n\n<pre><code>Integer a = 1;\nInteger b = new Integer(1);\nSystem.out.println(a&lt;=b &amp;&amp; b&lt;=a &amp;&amp; a!=b);\n</code></pre>\n\n<p>What happens here is: <code>a</code> as an object reference is not equal to <code>b</code> as an object reference, although of course they hold equal integer values. </p>\n", "title": "This &#39;if&#39; evaluation in Java with three simultaneous expressions", "answer_id": 32759552, "link": "http://stackoverflow.com/questions/32759492/this-if-evaluation-in-java-with-three-simultaneous-expressions/32759552#32759552", "tags": ["java"]}], "question_id": 32759492}, {"body": "<p>I've tried to build my own Map to increase the performance for a special environment, and I realized something pretty interesting: Creating a <code>new Hashmap&lt;Integer,String&gt;(2000)</code> is faster than <code>new Object[2000]</code> - no matter in which order I execute these commands. That's pretty confusing to me, esp. because the Hashmap constructor contains a <code>table = new Entry[capacity]</code>, according to <a href=\"http://www.docjar.com/html/api/java/util/HashMap.java.html\">this</a>. Is there something wrong with my testbench?</p>\n\n<pre><code>public static void test(int amm){ //amm=1_000_000\n    Map&lt;Integer,String&gt; m1 = null;\n    Object[] arr = null;\n\n    long time = System.nanoTime();\n    for(int i = 0; i &lt; amm; i++){\n        m1 = new HashMap&lt;Integer, String&gt;(2000);\n    }\n    System.out.println(\"m1: \" + (System.nanoTime() - time)); //m1: 70_455_065\n\n    time = System.nanoTime();\n    for(int i = 0; i &lt; amm; i++){\n        arr = new Object[2000];\n    }\n    System.out.println(\"arr: \" + (System.nanoTime() - time)); //arr: 1_322_473_803\n}\n</code></pre>\n\n<p>I'd love to see the results of testing on another computer. I've got no clue why creating a <code>HashMap</code> is 10 times faster than creating a <code>Object[]</code>.</p>\n", "tags": ["java", "arrays", "performance", "hashmap"], "title": "Why is creating a HashMap faster than creating an Object[]?", "answer_count": 2, "creation_date": 1436916039, "score": 44, "link": "http://stackoverflow.com/questions/31419029/why-is-creating-a-hashmap-faster-than-creating-an-object", "answers": [{"body": "<p>An empty <code>HashMap</code> object is much smaller than an array of 2000 <code>Object</code> references. Even though you pass 2000 to the <code>initialCapacity</code> parameter of the <code>HashMap</code> constructor, it's not actually creating 2000 spaces for objects yet.</p>\n", "title": "Why is creating a HashMap faster than creating an Object[]?", "answer_id": 31419047, "link": "http://stackoverflow.com/questions/31419029/why-is-creating-a-hashmap-faster-than-creating-an-object/31419047#31419047", "tags": ["java", "arrays", "performance", "hashmap"]}, {"body": "<p>If you look at the implementation of <code>HashMap</code>, the constructor looks like: </p>\n\n<pre><code>public HashMap(int initialCapacity, float loadFactor) {\n    if (initialCapacity &lt; 0)\n        throw new IllegalArgumentException(\"Illegal initial capacity: \" +\n                                           initialCapacity);\n    if (initialCapacity &gt; MAXIMUM_CAPACITY)\n        initialCapacity = MAXIMUM_CAPACITY;\n    if (loadFactor &lt;= 0 || Float.isNaN(loadFactor))\n        throw new IllegalArgumentException(\"Illegal load factor: \" +\n                                           loadFactor);\n\n    this.loadFactor = loadFactor;\n    threshold = initialCapacity;\n    init();\n}\n</code></pre>\n\n<p>And <code>init()</code> looks like:</p>\n\n<pre><code>/**\n * Initialization hook for subclasses. This method is called\n * in all constructors and pseudo-constructors (clone, readObject)\n * after HashMap has been initialized but before any entries have\n * been inserted.  (In the absence of this method, readObject would\n * require explicit knowledge of subclasses.)\n */\nvoid init() {\n}\n</code></pre>\n\n<p>So <code>initialCapacity</code> doesn't actually get used to create an array. Where does it get used? Look at the <code>put()</code> method. </p>\n\n<pre><code>public V put(K key, V value) {\n    if (table == EMPTY_TABLE) {\n        inflateTable(threshold);\n    }\n    // hidden\n} \n</code></pre>\n\n<p>When doing a put, the array is actually created. I didn't show <code>inflateTable()</code> but it does some math and initializes the array. </p>\n", "title": "Why is creating a HashMap faster than creating an Object[]?", "answer_id": 31419077, "link": "http://stackoverflow.com/questions/31419029/why-is-creating-a-hashmap-faster-than-creating-an-object/31419077#31419077", "tags": ["java", "arrays", "performance", "hashmap"]}], "question_id": 31419029}, {"body": "<p>I am reading <a href=\"https://manning-content.s3.amazonaws.com/download/b/b915834-e80b-4520-939d-ff1900057c15/elixir-in-action-CH01.pdf\">\"Elixir in Action\" book by Sa\u0161a Juri\u0107, and in the first chapter</a> it says:</p>\n\n<blockquote>\n  <p>Erlang processes are completely isolated from each other. They share\n  no memory, and a crash of one process doesn\u2019t cause a crash of other\n  processes.</p>\n</blockquote>\n\n<p>Isn't that true for Java threads as well?  I mean when Java thread crashes, it too does not crash other threads - especially, if we are looking at request-processing threads (lets exclude the <code>main</code> thread from this disucussion)</p>\n", "tags": ["java", "erlang", "elixir"], "title": "Erlang Process vs Java Thread", "answer_count": 6, "creation_date": 1440920627, "score": 43, "link": "http://stackoverflow.com/questions/32294367/erlang-process-vs-java-thread", "answers": [{"body": "<p>Java processes can in fact share memory. For example you can pass the same instance down to two separate threads and both can manipulate its state, leading to potential problems such as <a href=\"https://docs.oracle.com/javase/tutorial/essential/concurrency/deadlock.html\">deadlocks</a>.</p>\n\n<p>Elixir/Erlang on the other hand addresses this by the concept of immutability, so when you are passing something to a process, it will be a copy of the original value.</p>\n", "title": "Erlang Process vs Java Thread", "answer_id": 32294523, "link": "http://stackoverflow.com/questions/32294367/erlang-process-vs-java-thread/32294523#32294523", "tags": ["java", "erlang", "elixir"]}, {"body": "<p>Most definitely not.  All threads in Java share the same address space so it is possible for one thread to trash things owned by another thread.  In the Erlang VM this just isn't possible as each process is isolated from all others. That's the whole point of them. Any time your want to have one process do something with data from another your code has to send a message to the other process.  The only things shared between processes are large binary objects and these are immutable.</p>\n", "title": "Erlang Process vs Java Thread", "answer_id": 32294536, "link": "http://stackoverflow.com/questions/32294367/erlang-process-vs-java-thread/32294536#32294536", "tags": ["java", "erlang", "elixir"]}, {"body": "<blockquote>\n  <p>when Java thread dies, it too does not impact other threads</p>\n</blockquote>\n\n<p>Let me ask a counterquestion: why do you think <code>Thread.stop()</code> has been deprecated for more than a decade? The reason why is precisely the negation of your statement above.</p>\n\n<p>To give two specific examples: you <code>stop()</code> a thread while it's executing something as innocuous-sounding as <code>System.out.println()</code> or <code>Math.random()</code>. Result: those two features are now broken for the entire JVM. The same pertains to any other synchronized code your application may execute.</p>\n\n<blockquote>\n  <p>if we are looking at request-processing threads</p>\n</blockquote>\n\n<p>The application <em>may</em> theoretically be coded such that absolutely no shared resource protected by locks is ever used; however that will only help to point out the exact extent to which Java threads are codependent. And the \"independence\" achieved will only pertain to the request-processing threads, not to <em>all</em> threads in such an application.</p>\n", "title": "Erlang Process vs Java Thread", "answer_id": 32294898, "link": "http://stackoverflow.com/questions/32294367/erlang-process-vs-java-thread/32294898#32294898", "tags": ["java", "erlang", "elixir"]}, {"body": "<p><strong>Repeat after me:</strong> \"These are different paradigms\"</p>\n\n<p>Say that aloud 20 times or so -- it is our mantra for the moment.</p>\n\n<p>If we <em>really</em> must compare apples and oranges, let's at least consider where the common aspects of \"being fruit\" intersect.</p>\n\n<p>Java \"objects\" are a Java programmer's basic unit of computation. That is, an \"object\" -- basically a struct with arms and legs that has encapsulation somewhat more strictly enforced than in C++ -- is the primary tool with which you model the world. You think \"This object knows/has Data {X,Y,Z} and performs Functions {A(),B(),C()} over it, carries the Data everywhere it goes, and can communicate with other objects by calling functions/methods defined as part of their public interface. It is a noun, and that noun <em>does</em> stuff.\". That is to say, you orient your thought process around these units of computation. The default case is that things that happen amongst the objects occur in sequence, and a crash interrupts that sequence. They are called \"objects\" and hence (if we disregard Alan Kay's original meaning) we get \"object orientation\".</p>\n\n<p>Erlang \"processes\" are an Erlang programmer's basic unit of computation. A \"process\" -- basically a self-contained sequential program running in its own time and space -- is the primary tool with which an Erlanger models the world. Similar to how Java objects define a level of encapsulation, Erlang processes also define the level of encapsulation, but in the case of Erlang the units of computation are <em>completely</em> cut off from one another. You cannot call a method or function on another process, nor can you access any data that lives within it, nor does one process even run within the same timing context as any other processes, and there is no guarantee about the ordering of message reception relative to other processes which may be sending messages. They may as well be on different planets entirely (and, come to think of it, this is actually plausible). They can crash independently of one another and the other processes are only impacted if they have deliberately elected to be impacted (and even this involves messaging: essentially registering to receive a suicide note from the dead process which itself is not guaranteed to arrive in any sort of order relative to the system as a whole, to which you may or may not choose to react).</p>\n\n<p>Java deals with complexity directly in compound algorithms: how objects work together to solve a problem. It is designed to do this within a single execution context, and the default case in Java is sequential execution. Multiple threads in Java indicates multiple running contexts and is a very complex topic because of the impact activity in different timing contexts have on one another (and the system as a whole: hence defensive programming, exception schemes, etc.). Saying \"multi-threaded\" in Java <em>means</em> something different than it does in Erlang, in fact this is never even said in Erlang because it is always the base case. Note here that Java threads imply segregation as pertains to time, not memory or visible references -- visibility in Java is controlled manually by choosing what is private and what is public; universally accessible elements of a system must be either designed to be \"threadsafe\" and reentrant, sequentialized via queueing mechanisms, or employ locking mechanisms. In short: scheduling is a manually managed issue in threaded/concurrent Java programs.</p>\n\n<p>Erlang separates each processes' running context in terms of execution timing (scheduling), memory access and reference visibility and in doing so simplifies each component of an algorithm by isolating it <em>completely</em>. This is not just the default case, this is the only case available under this model of computation. This comes at the cost of never knowing exactly the sequence of any given operation once a part of your processing sequences crosses a message barrier -- because messages are all essentially network protocols and there are no method calls that can be guaranteed to execute within a given context. This would be analogous to creating a JVM instance per object, and only permitting them to communicate across sockets -- that would be ridiculously cumbersome in Java, but is the way Erlang is designed to work (incidentally, this is also the basis of the concept of writing \"Java microservices\" if one ditches the web-oriented baggage the buzzword tends to entail -- Erlang programs are, by default, swarms of microservices). Its all about tradeoffs.</p>\n\n<p>These are different paradigms. The closest commonality we can find is to say that from the programmer's perspective, Erlang processes are analogous to Java objects. If we must find something to compare Java threads to... well, we're simply not going to find something like that in Erlang, because there is no such comparable concept in Erlang. To beat a dead horse: <em>these are different paradigms</em>. If you write a few non-trivial programs in Erlang this will become readily apparent.</p>\n\n<p>Note that I'm saying \"these are different paradigms\" but have not even touched the topic of OOP vs FP. The difference between \"thinking in Java\" and \"thinking in Erlang\" is more fundamental than OOP vs FP.</p>\n\n<p>While it is true that Erlang's \"concurrency oriented\" or \"process oriented\" foundation is closer to what Alan Kay had in mind when he coined the term \"object oriented\", that is not really the point here. What Kay was getting at was that one can reduce the cognitive complexity of a system by cutting your computrons into discrete chunks, and isolation is necessary for that. Java accomplishes this in a way that leaves it still fundamentally procedural in nature, but structures code around a special syntax over higher-order dispatching closures called \"class definitions\". Erlang does this by splitting the running context up per object. This means Erlang thingies can't call methods on one another, but Java thingies can. This means Erlang thingies can crash in isolation but Java thingies can't. A vast number of implications flow from this basic difference -- hence \"different paradigms\". Tradeoffs.</p>\n", "title": "Erlang Process vs Java Thread", "answer_id": 32296577, "link": "http://stackoverflow.com/questions/32294367/erlang-process-vs-java-thread/32296577#32296577", "tags": ["java", "erlang", "elixir"]}, {"body": "<p>To complement on previous answers, Java threads have two types: daemon and non daemon.</p>\n\n<p>To change a thread's type you can call <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#setDaemon-boolean-\" rel=\"nofollow\"><code>.setDaemon(boolean on)</code></a>. The difference is that a daemon thread does not keep the JVM from quitting. As the Javadoc for Thread says: </p>\n\n<blockquote>\n  <p>The Java Virtual Machine exits when the only threads running are all daemon threads. </p>\n</blockquote>\n\n<p>That means: user threads (those that are not specifically set to be daemon) keeps the JVM from terminating. On the other hand, daemon threads MAY BE RUNNING when all non-daemon threads are finished in which case the JVM will quit. So, to answer your question: you can start a thread that does not quit the JVM when it finishes.</p>\n\n<p>As to the comparison with Erlang/Elixir don't forget: <strong>they are different paradigms, as already mentioned.</strong></p>\n\n<p>It is not impossible for the JVM to mimic Erlang's behaviour though it is not for what it was intended to and, therefore, it goes with lots of trade-offs. The following projects tries to accomplish that:</p>\n\n<ul>\n<li><a href=\"https://github.com/trifork/erjang/wiki\" rel=\"nofollow\">Erjang</a></li>\n<li><a href=\"http://akka.io/\" rel=\"nofollow\">Akka</a></li>\n</ul>\n", "title": "Erlang Process vs Java Thread", "answer_id": 32313000, "link": "http://stackoverflow.com/questions/32294367/erlang-process-vs-java-thread/32313000#32313000", "tags": ["java", "erlang", "elixir"]}, {"body": "<blockquote>\n  <p>Isn't that true for Java threads as well? I mean when Java thread crashes, it too does not crash other threads</p>\n</blockquote>\n\n<p>Yes and No. I explain:</p>\n\n<ul>\n<li><p>Referring to shared memory: Different threads in a Java process share the whole heap, therefore threads can interact in a huge number of planned and unplanned ways. <strong>However</strong> objects in the stack (e.g. a context you pass down to called method) or a <code>ThreadLocal</code> are their own thread's (unless they start sharing references).</p></li>\n<li><p>Crashing: If a thread crashes in Java (a <code>Throwable</code> is propagated into <code>Thread.run()</code>, or something gets looped or blocked), that mishap might not affect other threads (e.g. a pool of connections in a server will continue to operate). <strong>However</strong> as different threads interact. Other threads will easily get stranded if one of them ends abnormally (e.g. one thread trying to read from an empty pipe from another thread which did not close its end). So unless the developers are highly <s>paranoid</s> careful, it is very likely that side effects will occur.</p></li>\n</ul>\n\n<p>I doubt that any other paradigm intends threads to operate as totally independent islands. They must share information and coordinate somehow. And then there will be the chance to mess things up. It is just they will take a more defensive approach that \"gives you less rope to hang yourself\" (same idiom as with pointers).</p>\n", "title": "Erlang Process vs Java Thread", "answer_id": 32378895, "link": "http://stackoverflow.com/questions/32294367/erlang-process-vs-java-thread/32378895#32378895", "tags": ["java", "erlang", "elixir"]}], "question_id": 32294367}, {"body": "<p>in my android application I have a chat activity ,I use this code from <a href=\"https://github.com/madhur/android-chat-starter\" rel=\"nofollow\">android-chat-starter</a></p>\n\n<p>the problem is in the emulator everything works fine , I tested it in many types of emulators (api >18 , api =18 , api &lt;18) \nbut in testing in actual device it behaves like in this image </p>\n\n<p><a href=\"http://i.stack.imgur.com/AWkT9.png\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/AWkT9.png\" alt=\"enter image description here\"></a></p>\n\n<p>the emoji view shows above the keyboard </p>\n\n<p>here is the code I use to show the emoji view </p>\n\n<pre><code>  private void showEmojiPopup(boolean show) {\n    showingEmoji = show;\n\n    if (show) {\n        if (emojiView == null) {\n            if (getActivity() == null) {\n                return;\n            }\n            emojiView = new EmojiView(getActivity());\n\n            emojiView.setListener(new EmojiView.Listener() {\n                public void onBackspace() {\n                    chatEditText1.dispatchKeyEvent(new KeyEvent(0, 67));\n                }\n\n                public void onEmojiSelected(String symbol) {\n                    int i = chatEditText1.getSelectionEnd();\n                    if (i &lt; 0) {\n                        i = 0;\n                    }\n                    try {\n                        CharSequence localCharSequence = Emoji.replaceEmoji(symbol, chatEditText1.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20));\n                        chatEditText1.setText(chatEditText1.getText().insert(i, localCharSequence));\n                        int j = i + localCharSequence.length();\n                        chatEditText1.setSelection(j, j);\n                    } catch (Exception e) {\n                        Log.e(Constants.TAG, \"Error showing emoji\");\n                    }\n                }\n            });\n\n\n            windowLayoutParams = new WindowManager.LayoutParams();\n            windowLayoutParams.gravity = Gravity.BOTTOM | Gravity.LEFT;\n            Log.d(TAG ,Build.VERSION.SDK_INT + \" \");\n            if (Build.VERSION.SDK_INT &gt;= 21) {\n                windowLayoutParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ERROR;\n            } else {\n                windowLayoutParams.type = WindowManager.LayoutParams.TYPE_APPLICATION_PANEL;\n                windowLayoutParams.token = getActivity().getWindow().getDecorView().getWindowToken();\n            }\n            windowLayoutParams.flags = WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;\n            Log.d(\"emoj\",WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE + \"\");\n        }\n\n        final int currentHeight;\n\n        if (keyboardHeight &lt;= 0)\n            keyboardHeight = App.getInstance().getSharedPreferences(\"emoji\", 0).getInt(\"kbd_height\", AndroidUtilities.dp(200));\n\n        currentHeight = keyboardHeight;\n\n        WindowManager wm = (WindowManager) App.getInstance().getSystemService(Activity.WINDOW_SERVICE);\n\n        windowLayoutParams.height = currentHeight;\n        windowLayoutParams.width = AndroidUtilities.displaySize.x;\n\n        try {\n            if (emojiView.getParent() != null) {\n                wm.removeViewImmediate(emojiView);\n            }\n        } catch (Exception e) {\n            Log.e(Constants.TAG, e.getMessage());\n        }\n\n        try {\n            wm.addView(emojiView, windowLayoutParams);\n        } catch (Exception e) {\n            Log.e(Constants.TAG, e.getMessage());\n            return;\n        }\n\n        if (!keyboardVisible) {\n            if (sizeNotifierRelativeLayout != null) {\n                sizeNotifierRelativeLayout.setPadding(0, 0, 0, currentHeight);\n            }\n\n            return;\n        }\n\n    } else {\n        removeEmojiWindow();\n        if (sizeNotifierRelativeLayout != null) {\n            sizeNotifierRelativeLayout.post(new Runnable() {\n                public void run() {\n                    if (sizeNotifierRelativeLayout != null) {\n                        sizeNotifierRelativeLayout.setPadding(0, 0, 0, 0);\n                    }\n                }\n            });\n        }\n    }\n\n\n}\n\n @Override\npublic void onSizeChanged(int height) {\n\n    Rect localRect = new Rect();\n    getActivity().getWindow().getDecorView().getWindowVisibleDisplayFrame(localRect);\n\n    WindowManager wm = (WindowManager) App.getInstance().getSystemService(Activity.WINDOW_SERVICE);\n    if (wm == null || wm.getDefaultDisplay() == null) {\n        return;\n    }\n\n\n    if (height &gt; AndroidUtilities.dp(50) &amp;&amp; keyboardVisible) {\n        keyboardHeight = height;\n        App.getInstance().getSharedPreferences(\"emoji\", 0).edit().putInt(\"kbd_height\", keyboardHeight).commit();\n    }\n\n\n    if (showingEmoji) {\n        int newHeight = 0;\n\n        newHeight = keyboardHeight;\n\n        if (windowLayoutParams.width != AndroidUtilities.displaySize.x || windowLayoutParams.height != newHeight) {\n            windowLayoutParams.width = AndroidUtilities.displaySize.x;\n            windowLayoutParams.height = newHeight;\n\n            wm.updateViewLayout(emojiView, windowLayoutParams);\n            if (!keyboardVisible) {\n                sizeNotifierRelativeLayout.post(new Runnable() {\n                    @Override\n                    public void run() {\n                        if (sizeNotifierRelativeLayout != null) {\n                            sizeNotifierRelativeLayout.setPadding(0, 0, 0, windowLayoutParams.height);\n                            sizeNotifierRelativeLayout.requestLayout();\n                        }\n                    }\n                });\n            }\n        }\n    }\n</code></pre>\n\n<p>my androidmanifest.xml contains </p>\n\n<pre><code>&lt;uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\" /&gt;\n\n\n     &lt;activity\n        android:name=\".ConversationShowActivity\"\n        android:screenOrientation=\"portrait\"\n        android:label=\"@string/title_activity_conversation_show\"\n        android:launchMode=\"singleTask\"\n        android:parentActivityName=\".MainActivity\"\n        android:theme=\"@style/AppTheme\"\n        android:windowSoftInputMode=\"adjustResize\" &gt;\n\n        &lt;meta-data\n            android:name=\"android.support.PARENT_ACTIVITY\"\n            android:value=\"com.exampel.myapp.MainActivity\" /&gt;\n    &lt;/activity&gt;\n</code></pre>\n\n<p>here is my conversation show xml </p>\n\n<pre><code>&lt;com.example.myapp.widgets.SizeNotifierRelativeLayout  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n            xmlns:tools=\"http://schemas.android.com/tools\"\n            android:layout_width=\"match_parent\"\n                                                     android:id=\"@+id/chat_layout\"\n            android:layout_height=\"match_parent\"\n            android:background=\"@color/white\"\n            xmlns:fontawesometext=\"http://schemas.android.com/apk/res-auto\"\n            xmlns:bootstrap=\"http://schemas.android.com/apk/res-auto\"\n            tools:context=\"com.example.myapp.ConversationShowActivity\"&gt;\n\n&lt;LinearLayout\n    android:orientation=\"horizontal\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n\n    android:id=\"@+id/errorLayout\"\n    android:layout_gravity=\"center\"\n    android:layout_centerVertical=\"true\"\n    android:visibility=\"invisible\"\n    tools:visibilty=\"invisible\"\n    android:layout_alignParentLeft=\"true\"\n    android:layout_alignParentStart=\"true\"&gt;\n\n    &lt;TextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:gravity=\"center\"\n        android:padding=\"5dp\"\n\n        android:text=\"Error loading conversation messages, Click here to try again\"\n        android:id=\"@+id/textView3\"\n        android:textColor=\"#ffff4314\"\n        android:textSize=\"20sp\"\n        android:textStyle=\"bold\"/&gt;\n     &lt;/LinearLayout&gt;\n\n   &lt;ProgressBar\n     style=\"?android:attr/progressBarStyleLarge\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:id=\"@+id/convProgressBar\"\n    android:layout_centerVertical=\"true\"\n    android:layout_centerHorizontal=\"true\"/&gt;\n&lt;RelativeLayout\n    android:orientation=\"horizontal\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_alignParentTop=\"true\"\n    android:background=\"@drawable/border_bottom\"\n    android:layout_alignParentLeft=\"true\"\n    android:layout_alignParentStart=\"true\"\n    android:id=\"@+id/conv_header\"\n    android:paddingTop=\"10dp\"\n    android:paddingBottom=\"10dp\"\n    android:paddingRight=\"10dp\"\n    android:paddingLeft=\"10dp\"\n    android:padding=\"10dp\"&gt;\n\n    &lt;ImageView\n        android:layout_width=\"50dp\"\n        android:layout_height=\"50dp\"\n        android:id=\"@+id/conv_avatar\"\n        android:src=\"@drawable/blank_avatar4\"\n        android:scaleType=\"fitXY\"\n        android:layout_marginRight=\"10dp\"/&gt;\n\n    &lt;TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Aboudi\"\n        android:id=\"@+id/conv_user_name\"\n        android:textColor=\"#000000\"\n        android:textSize=\"18sp\"\n        android:layout_alignTop=\"@+id/conv_avatar\"\n        android:layout_alignLeft=\"@+id/conv_online\"\n        android:layout_alignStart=\"@+id/conv_online\"/&gt;\n\n    &lt;TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"conv_online\"\n        android:id=\"@+id/conv_online\"\n        android:layout_below=\"@+id/conv_user_name\"\n        android:layout_toRightOf=\"@+id/conv_avatar\"\n        android:layout_toEndOf=\"@+id/conv_avatar\"\n        android:layout_marginTop=\"5dp\"/&gt;\n    &lt;LinearLayout\n        android:id=\"@+id/profileFavBtn\"\n        android:layout_width=\"30dp\"\n        android:background=\"@drawable/heart_bg\"\n        android:layout_height=\"30dp\"\n        android:gravity=\"center\"\n        android:layout_marginRight=\"5dp\"\n        android:layout_marginLeft=\"5dp\"\n        android:layout_alignParentRight=\"false\"\n        android:layout_toLeftOf=\"@+id/profilegiftBtn\"\n        android:layout_centerVertical=\"true\"&gt;\n        &lt;com.beardedhen.androidbootstrap.FontAwesomeText\n        android:id=\"@+id/profileFavText\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            fontawesometext:fa_icon=\"fa-heart-o\"\n            android:textColor=\"#B94309\"\n            android:textSize=\"20sp\"\n            /&gt;\n    &lt;/LinearLayout&gt;\n    &lt;LinearLayout\n        android:id=\"@+id/profilegiftBtn\"\n        android:layout_width=\"30dp\"\n        android:background=\"@drawable/accept_btn_bg\"\n        android:layout_height=\"30dp\"\n        android:gravity=\"center\"\n        android:layout_marginRight=\"5dp\"\n        android:layout_marginLeft=\"5dp\"\n        android:layout_alignParentRight=\"false\"\n        android:layout_toLeftOf=\"@+id/profileReportBtn\"\n        android:layout_centerVertical=\"true\"&gt;\n        &lt;com.beardedhen.androidbootstrap.FontAwesomeText\n\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            fontawesometext:fa_icon=\"fa-gift\"\n            android:textColor=\"@color/white\"\n            android:textSize=\"20sp\"\n            /&gt;\n    &lt;/LinearLayout&gt;\n    &lt;LinearLayout\n        android:id=\"@+id/profileReportBtn\"\n        android:layout_width=\"30dp\"\n        android:background=\"@drawable/report_btn_bg\"\n        android:layout_height=\"30dp\"\n        android:gravity=\"center\"\n        android:layout_marginRight=\"5dp\"\n        android:layout_marginLeft=\"5dp\"\n        android:layout_alignParentRight=\"false\"\n        android:layout_toLeftOf=\"@+id/profileBlockBtn\"\n        android:layout_centerVertical=\"true\"&gt;\n        &lt;com.beardedhen.androidbootstrap.FontAwesomeText\n\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            fontawesometext:fa_icon=\"fa-info\"\n\n            android:textColor=\"@color/white\"\n\n            android:textSize=\"20sp\"\n            /&gt;\n    &lt;/LinearLayout&gt;\n    &lt;LinearLayout\n        android:id=\"@+id/profileBlockBtn\"\n        android:layout_width=\"30dp\"\n        android:background=\"@drawable/refuse_btn_bg\"\n        android:layout_height=\"30dp\"\n        android:gravity=\"center\"\n        android:layout_marginRight=\"5dp\"\n        android:layout_marginLeft=\"5dp\"\n        android:layout_alignParentRight=\"true\"\n        android:layout_centerVertical=\"true\"&gt;\n        &lt;com.beardedhen.androidbootstrap.FontAwesomeText\n\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            fontawesometext:fa_icon=\"fa-remove\"\n\n            android:textColor=\"@color/white\"\n\n            android:textSize=\"20sp\"\n            /&gt;\n    &lt;/LinearLayout&gt;\n&lt;/RelativeLayout&gt;\n\n&lt;ListView\n    android:id=\"@+id/chat_list_view\"\n    android:paddingRight=\"@dimen/activity_horizontal_margin\"\n    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n    android:divider=\"@drawable/chat_divider\"\n    android:layout_width=\"match_parent\"\n    android:scrollbarStyle=\"outsideOverlay\"\n    android:layout_below=\"@id/conv_header\"\n    android:layout_above=\"@+id/bottomlayout\"\n    android:layout_height=\"match_parent\"&gt;&lt;/ListView&gt;\n\n&lt;LinearLayout\n    android:id=\"@+id/bottomlayout\"\n    android:background=\"@drawable/profile_footer_border_top\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"match_parent\"\n    android:layout_alignParentBottom=\"true\"\n    android:layout_height=\"wrap_content\"&gt;\n\n\n\n\n    &lt;RelativeLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"&gt;\n        &lt;TextView\n            android:id=\"@+id/cant_send_text\"\n            android:layout_width=\"match_parent\"\n            android:text=\"You cant contact this member right now\"\n            android:layout_height=\"wrap_content\"\n            android:layout_alignParentTop=\"true\"\n            android:layout_alignParentBottom=\"false\"\n            android:layout_alignTop=\"@+id/chat_edit_text1\"\n            android:layout_alignBottom=\"@+id/chat_edit_text1\"\n            android:background=\"#ff4409\"\n            android:gravity=\"center\"\n            android:textColor=\"#ffffff\"\n            android:textSize=\"15sp\"\n            android:textStyle=\"bold\"/&gt;\n\n        &lt;ImageView android:src=\"@drawable/ic_msg_panel_smiles\" android:layout_alignParentLeft=\"true\" android:layout_alignParentStart=\"true\" android:layout_marginLeft=\"8dp\" android:layout_marginRight=\"8dp\"\n                   android:layout_width=\"wrap_content\" android:id=\"@+id/emojiButton\" android:layout_alignBottom=\"@+id/chat_edit_text1\" android:layout_marginBottom=\"8dp\"\n                   android:layout_height=\"wrap_content\" /&gt;\n\n        &lt;EditText\n            android:layout_marginTop=\"8dp\"\n            android:layout_marginBottom=\"8dp\"\n            android:id=\"@+id/chat_edit_text1\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:scrollHorizontally=\"false\"\n            android:layout_toLeftOf=\"@+id/enter_chat1\"\n            android:layout_toRightOf=\"@id/emojiButton\"\n            android:layout_toEndOf=\"@id/emojiButton\"\n            android:layout_toStartOf=\"@+id/enter_chat1\"\n            android:hint=\"Type your message here ..\"\n\n            android:singleLine=\"false\"\n            android:inputType=\"textCapSentences\"\n\n            android:textSize=\"18sp\"\n            android:paddingLeft=\"4dp\" /&gt;\n\n        &lt;ImageView android:layout_alignParentRight=\"true\"\n                   android:layout_alignParentEnd=\"true\"\n                   android:id=\"@+id/enter_chat1\"\n                   android:layout_width=\"wrap_content\"\n                   android:layout_marginBottom=\"8dp\"\n                   android:layout_height=\"wrap_content\"\n                   android:layout_alignBottom=\"@id/chat_edit_text1\"\n                   android:paddingLeft=\"13dp\"\n                   android:paddingStart=\"13dp\"\n                   android:paddingRight=\"17dp\"\n                   android:paddingEnd=\"17dp\"\n                   android:src=\"@drawable/ic_chat_send\" /&gt;\n\n    &lt;/RelativeLayout&gt;\n\n\n\n  &lt;/LinearLayout&gt;\n&lt;/com.example.myapp.widgets.SizeNotifierRelativeLayout &gt;\n</code></pre>\n\n<p>here is my emojiview </p>\n\n<pre><code>public class EmojiView extends LinearLayout {\n private ArrayList&lt;EmojiGridAdapter&gt; adapters = new      ArrayList&lt;EmojiGridAdapter&gt;();\nprivate int[] icons = {\n        R.drawable.ic_emoji_recent,\n        R.drawable.ic_emoji_smile,\n        R.drawable.ic_emoji_flower,\n        R.drawable.ic_emoji_bell,\n        R.drawable.ic_emoji_car,\n        R.drawable.ic_emoji_symbol };\nprivate Listener listener;\nprivate ViewPager pager;\nprivate FrameLayout recentsWrap;\nprivate ArrayList&lt;GridView&gt; views = new ArrayList&lt;GridView&gt;();\n\npublic EmojiView(Context paramContext) {\n    super(paramContext);\n    init();\n}\n\npublic EmojiView(Context paramContext, AttributeSet paramAttributeSet) {\n    super(paramContext, paramAttributeSet);\n    init();\n}\n\npublic EmojiView(Context paramContext, AttributeSet paramAttributeSet, int paramInt) {\n    super(paramContext, paramAttributeSet, paramInt);\n    init();\n}\n\nprivate void addToRecent(long paramLong) {\n    if (this.pager.getCurrentItem() == 0) {\n        return;\n    }\n    ArrayList&lt;Long&gt; localArrayList = new ArrayList&lt;Long&gt;();\n    long[] currentRecent = Emoji.data[0];\n    boolean was = false;\n    for (long aCurrentRecent : currentRecent) {\n        if (paramLong == aCurrentRecent) {\n            localArrayList.add(0, paramLong);\n            was = true;\n        } else {\n            localArrayList.add(aCurrentRecent);\n        }\n    }\n    if (!was) {\n        localArrayList.add(0, paramLong);\n    }\n    Emoji.data[0] = new long[Math.min(localArrayList.size(), 50)];\n    for (int q = 0; q &lt; Emoji.data[0].length; q++) {\n        Emoji.data[0][q] = localArrayList.get(q);\n    }\n    adapters.get(0).data = Emoji.data[0];\n    adapters.get(0).notifyDataSetChanged();\n    saveRecents();\n}\n\nprivate String convert(long paramLong) {\n    String str = \"\";\n    for (int i = 0; ; i++) {\n        if (i &gt;= 4) {\n            return str;\n        }\n        int j = (int)(0xFFFF &amp; paramLong &gt;&gt; 16 * (3 - i));\n        if (j != 0) {\n            str = str + (char)j;\n        }\n    }\n}\n\nprivate void init() {\n    setOrientation(LinearLayout.VERTICAL);\n    for (int i = 0; i &lt; Emoji.data.length; i++) {\n        GridView gridView = new GridView(getContext());\n        //  if (AndroidUtilities.isTablet()) {\n        //     gridView.setColumnWidth(AndroidUtilities.dp(60));\n        // } else {\n        gridView.setColumnWidth(AndroidUtilities.dp(45));\n        // }\n        gridView.setNumColumns(-1);\n        views.add(gridView);\n\n        EmojiGridAdapter localEmojiGridAdapter = new EmojiGridAdapter(Emoji.data[i]);\n        gridView.setAdapter(localEmojiGridAdapter);\n        //  AndroidUtilities.setListViewEdgeEffectColor(gridView, 0xff999999);\n        adapters.add(localEmojiGridAdapter);\n    }\n\n    setBackgroundColor(0xff222222);\n    pager = new ViewPager(getContext());\n    pager.setAdapter(new EmojiPagesAdapter());\n    PagerSlidingTabStrip tabs = new PagerSlidingTabStrip(getContext());\n    tabs.setViewPager(pager);\n    tabs.setShouldExpand(true);\n    tabs.setIndicatorColor(0xff33b5e5);\n    tabs.setIndicatorHeight(AndroidUtilities.dp(2.0f));\n    tabs.setUnderlineHeight(AndroidUtilities.dp(2.0f));\n    tabs.setUnderlineColor(0x66000000);\n    tabs.setTabBackground(0);\n    LinearLayout localLinearLayout = new LinearLayout(getContext());\n    localLinearLayout.setOrientation(LinearLayout.HORIZONTAL);\n    localLinearLayout.addView(tabs, new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT, 1.0f));\n    ImageView localImageView = new ImageView(getContext());\n    localImageView.setImageResource(R.drawable.ic_emoji_backspace);\n    localImageView.setScaleType(ImageView.ScaleType.CENTER);\n    localImageView.setBackgroundResource(R.drawable.bg_emoji_bs);\n    localImageView.setOnClickListener(new View.OnClickListener() {\n        public void onClick(View view) {\n            if (EmojiView.this.listener != null) {\n                EmojiView.this.listener.onBackspace();\n            }\n        }\n    });\n    localLinearLayout.addView(localImageView, new LinearLayout.LayoutParams(AndroidUtilities.dp(61), LayoutParams.MATCH_PARENT));\n    recentsWrap = new FrameLayout(getContext());\n    recentsWrap.addView(views.get(0));\n    TextView localTextView = new TextView(getContext());\n    localTextView.setText(getContext().getString(R.string.NoRecent));\n    localTextView.setTextSize(18.0f);\n    localTextView.setTextColor(-7829368);\n    localTextView.setGravity(17);\n    recentsWrap.addView(localTextView);\n    views.get(0).setEmptyView(localTextView);\n    addView(localLinearLayout, new LinearLayout.LayoutParams(-1, AndroidUtilities.dp(48.0f)));\n    addView(pager);\n    loadRecents();\n    if (Emoji.data[0] == null || Emoji.data[0].length == 0) {\n        pager.setCurrentItem(1);\n    }\n}\n\nprivate void saveRecents() {\n    ArrayList&lt;Long&gt; localArrayList = new ArrayList&lt;Long&gt;();\n    long[] arrayOfLong = Emoji.data[0];\n    int i = arrayOfLong.length;\n    for (int j = 0; ; j++) {\n        if (j &gt;= i) {\n            getContext().getSharedPreferences(\"emoji\", 0).edit().putString(\"recents\", TextUtils.join(\",\", localArrayList)).commit();\n            return;\n        }\n        localArrayList.add(arrayOfLong[j]);\n    }\n}\n\npublic void loadRecents() {\n    String str = getContext().getSharedPreferences(\"emoji\", 0).getString(\"recents\", \"\");\n    String[] arrayOfString = null;\n    if ((str != null) &amp;&amp; (str.length() &gt; 0)) {\n        arrayOfString = str.split(\",\");\n        Emoji.data[0] = new long[arrayOfString.length];\n    }\n    if (arrayOfString != null) {\n        for (int i = 0; i &lt; arrayOfString.length; i++) {\n            Emoji.data[0][i] = Long.parseLong(arrayOfString[i]);\n        }\n        adapters.get(0).data = Emoji.data[0];\n        adapters.get(0).notifyDataSetChanged();\n    }\n}\n\npublic void onMeasure(int paramInt1, int paramInt2) {\n    super.onMeasure(View.MeasureSpec.makeMeasureSpec(View.MeasureSpec.getSize(paramInt1), MeasureSpec.EXACTLY), View.MeasureSpec.makeMeasureSpec(View.MeasureSpec.getSize(paramInt2), MeasureSpec.EXACTLY));\n}\n\npublic void setListener(Listener paramListener) {\n    this.listener = paramListener;\n}\n\npublic void invalidateViews() {\n    for (GridView gridView : views) {\n        if (gridView != null) {\n            gridView.invalidateViews();\n        }\n    }\n}\n\nprivate class EmojiGridAdapter extends BaseAdapter {\n    long[] data;\n\n    public EmojiGridAdapter(long[] arg2) {\n        this.data = arg2;\n    }\n\n    public int getCount() {\n        return data.length;\n    }\n\n    public Object getItem(int i) {\n        return null;\n    }\n\n    public long getItemId(int i) {\n        return data[i];\n    }\n\n    public View getView(int i, View view, ViewGroup paramViewGroup) {\n        ImageView imageView = (ImageView)view;\n        if (imageView == null) {\n            imageView = new ImageView(EmojiView.this.getContext()) {\n                public void onMeasure(int paramAnonymousInt1, int paramAnonymousInt2) {\n                    setMeasuredDimension(View.MeasureSpec.getSize(paramAnonymousInt1), View.MeasureSpec.getSize(paramAnonymousInt1));\n                }\n            };\n            imageView.setOnClickListener(new View.OnClickListener() {\n                public void onClick(View view) {\n                    if (EmojiView.this.listener != null) {\n                        EmojiView.this.listener.onEmojiSelected(EmojiView.this.convert((Long)view.getTag()));\n                    }\n                    EmojiView.this.addToRecent((Long)view.getTag());\n                }\n            });\n            imageView.setBackgroundResource(R.drawable.list_selector);\n            imageView.setScaleType(ImageView.ScaleType.CENTER);\n        }\n        imageView.setImageDrawable(Emoji.getEmojiBigDrawable(data[i]));\n        imageView.setTag(data[i]);\n        return imageView;\n    }\n\n    @Override\n    public void unregisterDataSetObserver(DataSetObserver observer) {\n        if (observer != null) {\n            super.unregisterDataSetObserver(observer);\n        }\n    }\n}\n\n  private class EmojiPagesAdapter extends PagerAdapter implements PagerSlidingTabStrip.IconTabProvider {\n\n    public void destroyItem(ViewGroup paramViewGroup, int paramInt, Object paramObject) {\n        View localObject;\n        if (paramInt == 0) {\n            localObject = recentsWrap;\n        } else {\n            localObject = views.get(paramInt);\n        }\n        paramViewGroup.removeView(localObject);\n    }\n\n    public int getCount() {\n        return views.size();\n    }\n\n    public int getPageIconResId(int paramInt) {\n        return icons[paramInt];\n    }\n\n    public Object instantiateItem(ViewGroup paramViewGroup, int paramInt) {\n        View localObject;\n        if (paramInt == 0) {\n            localObject = recentsWrap;\n        } else {\n            localObject = views.get(paramInt);\n        }\n        paramViewGroup.addView(localObject);\n        return localObject;\n    }\n\n    public boolean isViewFromObject(View paramView, Object paramObject) {\n        return paramView == paramObject;\n    }\n\n    @Override\n    public void unregisterDataSetObserver(DataSetObserver observer) {\n        if (observer != null) {\n            super.unregisterDataSetObserver(observer);\n        }\n    }\n}\n\npublic static abstract interface Listener {\n    public abstract void onBackspace();\n    public abstract void onEmojiSelected(String paramString);\n  }\n}\n</code></pre>\n\n<p>the problem happens when the keyboard is visible ,but if it's not visible the emoji view works fine </p>\n", "tags": ["java", "android", "android-activity", "android-softkeyboard", "emoji"], "title": "add view over keyboard android", "answer_count": 7, "creation_date": 1444864539, "score": 43, "link": "http://stackoverflow.com/questions/33137248/add-view-over-keyboard-android", "answers": [{"body": "<p>Unfortunately, as far for Android 5.0 (dont know after) theres no way to get the keyboard height. So you can't use this value to position your View.</p>\n\n<p>But, you can use the softKeyboard relayout to do what you want, by using softKeyboard (at the Activity manifest) with a value of \"resize\" will make your root layout View to be resized to the size of the remaining screen space. By positioning your view at the bottom will make it exactly on top of the keyboard.</p>\n\n<p>PS: Also, your root view needs its height value to be match_parent instead of anything else (or you will need to deal in hard other ways)</p>\n\n<p>Maybe you mean you want to replace the keyboard location instead of being on \"top of it\" (NORTH?), in this case, you should use a CustomView that extends View and not use the EditText that does open the keyboard for you</p>\n", "title": "add view over keyboard android", "answer_id": 33175564, "link": "http://stackoverflow.com/questions/33137248/add-view-over-keyboard-android/33175564#33175564", "tags": ["java", "android", "android-activity", "android-softkeyboard", "emoji"]}, {"body": "<p>You will have to hide the keyboard while showing window of emoji via:</p>\n\n<p><code>InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);\n            imm.hideSoftInputFromWindow(edText.getWindowToken(), 0);</code></p>\n\n<p>where edText is the edittext you have currently focus on.</p>\n\n<p>EDIT:\nThis is my code merged into yours.you can give it a try.</p>\n\n<pre><code>    private void showEmojiPopup(boolean show) {\n    showingEmoji = show;\n\n    if (show) {\n        if (emojiView == null) {\n            if (getActivity() == null) {\n                return;\n            }\n            emojiView = new EmojiView(getActivity());\n\n            emojiView.setListener(new EmojiView.Listener() {\n                public void onBackspace() {\n                    chatEditText1.dispatchKeyEvent(new KeyEvent(0, 67));\n                }\n\n                public void onEmojiSelected(String symbol) {\n                    int i = chatEditText1.getSelectionEnd();\n                    if (i &lt; 0) {\n                        i = 0;\n                    }\n                    try {\n                        CharSequence localCharSequence = Emoji.replaceEmoji(symbol, chatEditText1.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20));\n                        chatEditText1.setText(chatEditText1.getText().insert(i, localCharSequence));\n                        int j = i + localCharSequence.length();\n                        chatEditText1.setSelection(j, j);\n                    } catch (Exception e) {\n                        Log.e(Constants.TAG, \"Error showing emoji\");\n                    }\n                }\n            });\n\n\n            windowLayoutParams = new WindowManager.LayoutParams();\n            windowLayoutParams.gravity = Gravity.BOTTOM | Gravity.LEFT;\n            Log.d(TAG ,Build.VERSION.SDK_INT + \" \");\n            if (Build.VERSION.SDK_INT &gt;= 21) {\n                windowLayoutParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ERROR;\n            } else {\n                windowLayoutParams.type = WindowManager.LayoutParams.TYPE_APPLICATION_PANEL;\n                windowLayoutParams.token = getActivity().getWindow().getDecorView().getWindowToken();\n            }\n            windowLayoutParams.flags = WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;\n            Log.d(\"emoj\",WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE + \"\");\n        }\n\n        final int currentHeight;\n\n        if (keyboardHeight &lt;= 0)\n            keyboardHeight = App.getInstance().getSharedPreferences(\"emoji\", 0).getInt(\"kbd_height\", AndroidUtilities.dp(200));\n\n        currentHeight = keyboardHeight;\n\n        WindowManager wm = (WindowManager) App.getInstance().getSystemService(Activity.WINDOW_SERVICE);\n\n        windowLayoutParams.height = currentHeight;\n        windowLayoutParams.width = AndroidUtilities.displaySize.x;\n\n        try {\n            if (emojiView.getParent() != null) {\n                wm.removeViewImmediate(emojiView);\n            }\n        } catch (Exception e) {\n            Log.e(Constants.TAG, e.getMessage());\n        }\n\n        try {\n            wm.addView(emojiView, windowLayoutParams);\n        } catch (Exception e) {\n            Log.e(Constants.TAG, e.getMessage());\n            return;\n        }\n\n        if (!keyboardVisible) {\n            if (sizeNotifierRelativeLayout != null) {\n                sizeNotifierRelativeLayout.setPadding(0, 0, 0, currentHeight);\n            }\n\n            return;\n        }\n\n    } else {\n        removeEmojiWindow();\n        if (sizeNotifierRelativeLayout != null) {\n            sizeNotifierRelativeLayout.post(new Runnable() {\n                public void run() {\n                    if (sizeNotifierRelativeLayout != null) {\n                        sizeNotifierRelativeLayout.setPadding(0, 0, 0, 0);\n                    }\n                }\n            });\n        }\n    }\n\n\n}\n\n @Override\npublic void onSizeChanged(int height) {\n\n    Rect localRect = new Rect();\n    getActivity().getWindow().getDecorView().getWindowVisibleDisplayFrame(localRect);\n\n    WindowManager wm = (WindowManager) App.getInstance().getSystemService(Activity.WINDOW_SERVICE);\n    if (wm == null || wm.getDefaultDisplay() == null) {\n        return;\n    }\n\n\n    if (height &gt; AndroidUtilities.dp(50) &amp;&amp; keyboardVisible) {\n        keyboardHeight = height;\n        App.getInstance().getSharedPreferences(\"emoji\", 0).edit().putInt(\"kbd_height\", keyboardHeight).commit();\n    }\n\n\n    if (showingEmoji) {\n//code to hide keyboard\nInputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);\n            imm.hideSoftInputFromWindow(edText.getWindowToken(), 0);\n//end\n        int newHeight = 0;\n\n        newHeight = keyboardHeight;\n\n        if (windowLayoutParams.width != AndroidUtilities.displaySize.x || windowLayoutParams.height != newHeight) {\n            windowLayoutParams.width = AndroidUtilities.displaySize.x;\n            windowLayoutParams.height = newHeight;\n\n            wm.updateViewLayout(emojiView, windowLayoutParams);\n            if (!keyboardVisible) {\n                sizeNotifierRelativeLayout.post(new Runnable() {\n                    @Override\n                    public void run() {\n                        if (sizeNotifierRelativeLayout != null) {\n                            sizeNotifierRelativeLayout.setPadding(0, 0, 0, windowLayoutParams.height);\n                            sizeNotifierRelativeLayout.requestLayout();\n                        }\n                    }\n                });\n            }\n        }\n    }\n</code></pre>\n", "title": "add view over keyboard android", "answer_id": 33500341, "link": "http://stackoverflow.com/questions/33137248/add-view-over-keyboard-android/33500341#33500341", "tags": ["java", "android", "android-activity", "android-softkeyboard", "emoji"]}, {"body": "<p>You can create a custom EditText and disable showing the keyboard by override <em>onCheckIsTextEditor</em>. Refer code below:</p>\n\n<pre><code>  public class NoKeyBoardEditText extends EditText {\n\n   @Override      \n   public boolean onCheckIsTextEditor() {   \n      return false;     \n   }   \n\n  } \n</code></pre>\n", "title": "add view over keyboard android", "answer_id": 33511145, "link": "http://stackoverflow.com/questions/33137248/add-view-over-keyboard-android/33511145#33511145", "tags": ["java", "android", "android-activity", "android-softkeyboard", "emoji"]}, {"body": "<p>You can do something like this for creating View over softKeyboard.</p>\n\n<pre><code>&lt;LinearLayout android:orientation=\"vertical\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"&gt;\n\n    &lt;FrameLayout android:id=\"@+id/my_content\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dip\"\n            android:layout_weight=\"1\"&gt;\n\n        &lt;!-- Your content here If edittext here then change the layout_height=\"wrap_content\" on your EditText to layout_height=\"0dip\" and let the weight handle it. --&gt; // like your edittext or something.\n\n    &lt;/FrameLayout&gt;\n\n    &lt;LinearLayout android:id=\"@+id/yourkeyboardlayout\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"&gt;\n\n        &lt;!-- Your yourkeyboardlayout items here --&gt;\n\n    &lt;/LinearLayout&gt;\n&lt;/LinearLayout&gt;\n</code></pre>\n\n<p>Note :</p>\n\n<p>Remove this line from your code if you have used it.\n<code>getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS\u200c\u200b_VISIBLE);</code></p>\n\n<p>In your manifest :</p>\n\n<pre><code>&lt;activity android:name=\"YourActivity\"\n          android:theme=\"@android:style/Theme.NoTitleBar\"\n          android:windowSoftInputMode=\"adjustResize\"&gt;\n&lt;/activity&gt;\n</code></pre>\n\n<p>Make sure that you have adjusted your SoftInputMode to AdjustResize.</p>\n\n<p>For more info regarding SoftInputmode refer this <a href=\"http://developer.android.com/guide/topics/manifest/activity-element.html#wsoft\" rel=\"nofollow\">link</a>.</p>\n\n<p>And if you don't want to show to your layout when keyboard is down then just hide that layout.</p>\n\n<p>Hope it will help you.</p>\n", "title": "add view over keyboard android", "answer_id": 33519041, "link": "http://stackoverflow.com/questions/33137248/add-view-over-keyboard-android/33519041#33519041", "tags": ["java", "android", "android-activity", "android-softkeyboard", "emoji"]}, {"body": "<p>I am using this on my application, I have extracted from the library\n<a href=\"https://github.com/chathudan/KitKatEmoji\" rel=\"nofollow\">https://github.com/chathudan/KitKatEmoji</a>\nI recommend you use the library is very complete and easy to implement. In the example of the library is its easy use. If not, pull something like this:</p>\n\n<pre><code>   private void showKeyboard(View view) {\n    InputMethodManager keyboard = (InputMethodManager) mActivity.getSystemService(Context.INPUT_METHOD_SERVICE);\n    keyboard.showSoftInput(view, 0);\n}\n</code></pre>\n\n<p>.</p>\n\n<pre><code>  private void hideKeyboard() {\n    InputMethodManager inputMethodManager = (InputMethodManager) mActivity\n            .getSystemService(Context.INPUT_METHOD_SERVICE);\n    inputMethodManager.hideSoftInputFromWindow(mActivity.getCurrentFocus()\n            .getWindowToken(), 0);\n}\n</code></pre>\n\n<p>.</p>\n\n<pre><code>protected void changeEmojiLayout() {\n    final InputMethodManager keyboard =    \n(InputMethodManager)mActivity.getSystemService(Context.INPUT_METHOD_SERVICE);\n//      keyboard.showSoftInput(message, 0);\n    if (isEmojiVisible &amp;&amp; !isKeyBoardVisible) {\n        btnEmoji\n                .setImageResource(R.drawable.ic_insert_emoticon_black_24dp);\n        btnCamara.setVisibility(View.VISIBLE);\n        btnGaleria.setVisibility(View.VISIBLE);\n\n        emojiIconsCover\n                .setVisibility(LinearLayout.GONE);\n        isEmojiVisible = false;\n        mShowEmojiHandler.postDelayed(new Runnable() {\n            @Override\n            public void run() {\n                inputMsg.requestFocus();\n                keyboard.showSoftInput(inputMsg, 0);\n                checkKeyboardHeight(parentLayout);\n            }\n        }, 100);\n\n    } else if (isEmojiVisible &amp;&amp; isKeyBoardVisible) {\n\n    } else if (!isEmojiVisible &amp;&amp; isKeyBoardVisible) {\n        hideKeyboard();\n        mShowEmojiHandler.postDelayed(new Runnable() {\n            @Override\n            public void run() {\n                btnEmoji\n                        .setImageResource(R.drawable.ic_vp_keypad);\n                btnCamara.setVisibility(View.INVISIBLE);\n                btnGaleria.setVisibility(View.GONE);\n\n                emojiIconsCover\n                        .setVisibility(LinearLayout.VISIBLE);\n                isEmojiVisible = true;\n            }\n        }, 100);\n    } else if (!isEmojiVisible &amp;&amp; !isKeyBoardVisible) {\n        btnEmoji\n                .setImageResource(R.drawable.ic_vp_keypad);\n        btnCamara.setVisibility(View.INVISIBLE);\n        btnGaleria.setVisibility(View.GONE);\n\n        emojiIconsCover\n                .setVisibility(LinearLayout.VISIBLE);\n        isEmojiVisible = true;\n    }\n}\n</code></pre>\n\n<p>.</p>\n\n<pre><code>private void checkKeyboardHeight(final View parentLayout) {\n\n    parentLayout.getViewTreeObserver().addOnGlobalLayoutListener(\n            new ViewTreeObserver.OnGlobalLayoutListener() {\n\n                @Override\n                public void onGlobalLayout() {\n\n                    Rect r = new Rect();\n                    parentLayout.getWindowVisibleDisplayFrame(r);\n\n                    int screenHeight = parentLayout.getRootView()\n                            .getHeight();\n                    int heightDifference = screenHeight - (r.bottom);\n\n                    if (previousHeightDiffrence - heightDifference &gt; 50) {\n //                         popupWindow.dismiss(); TODO\n  //                               \nbtnEmoji.setImageResource(R.drawable.ic_vp_smileys);\n                        emojiIconsCover.setVisibility(LinearLayout.GONE);\n                    }\n                    previousHeightDiffrence = heightDifference;\n                    if (heightDifference &gt; 100) {\n                        isKeyBoardVisible = true;\n //                            changeKeyboardHeight(heightDifference);\n                    } else {\n                        isKeyBoardVisible = false;\n                    }\n                }\n            });\n\n}\n</code></pre>\n", "title": "add view over keyboard android", "answer_id": 33862402, "link": "http://stackoverflow.com/questions/33137248/add-view-over-keyboard-android/33862402#33862402", "tags": ["java", "android", "android-activity", "android-softkeyboard", "emoji"]}, {"body": "<p>I encountered a similar problem when I added emoji's to my app.\nI found a way to show Emoji's on top of Softkeyboard using <strong>PopUpWindow</strong>.</p>\n\n<p>EmojiOverKeyboard</p>\n\n<pre><code>public class EmojiOverKeyboard extends PopupWindow {\n\nprivate int keyBoardHeight = 0;\nprivate Boolean pendingOpen = false;\nprivate Boolean isOpened = false;\nOnSoftKeyboardOpenCloseListener onSoftKeyboardOpenCloseListener;\nView rootView;\nContext mContext;\n\n/**\n * Constructor\n * @param rootView  The top most layout in your view hierarchy. The difference of this view and the screen height will be used to calculate the keyboard height.\n * @param mContext The context of current activity.\n */\npublic EmojiOverKeyboard(View rootView, Context mContext){\n    super(mContext);\n    this.mContext = mContext;\n    this.rootView = rootView;\n    View customView = createCustomView();\n    setContentView(customView);\n    setSoftInputMode(LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);\n    //default size\n    setSize((int) mContext.getResources().getDimension(R.dimen.keyboard_height), LayoutParams.MATCH_PARENT);\n}\n/**\n * Set the listener for the event of keyboard opening or closing.\n */\npublic void setOnSoftKeyboardOpenCloseListener(OnSoftKeyboardOpenCloseListener listener){\n    this.onSoftKeyboardOpenCloseListener = listener;\n}\n\n/**\n * Use this function to show the emoji popup.\n * NOTE: Since, the soft keyboard sizes are variable on different android devices, the\n * library needs you to open the soft keyboard atleast once before calling this function.\n * If that is not possible see showAtBottomPending() function.\n *\n */\npublic void showAtBottom(){\n    showAtLocation(rootView, Gravity.BOTTOM, 0, 0);\n}\n/**\n * Use this function when the soft keyboard has not been opened yet. This\n * will show the emoji popup after the keyboard is up next time.\n * Generally, you will be calling InputMethodManager.showSoftInput function after\n * calling this function.\n */\npublic void showAtBottomPending(){\n    if(isKeyBoardOpen())\n        showAtBottom();\n    else\n        pendingOpen = true;\n}\n\n/**\n *\n * @return Returns true if the soft keyboard is open, false otherwise.\n */\npublic Boolean isKeyBoardOpen(){\n    return isOpened;\n}\n\n/**\n * Dismiss the popup\n */\n@Override\npublic void dismiss() {\n    super.dismiss();\n}\n\n/**\n * Call this function to resize the emoji popup according to your soft keyboard size\n */\npublic void setSizeForSoftKeyboard(){\n    rootView.getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListener() {\n        @Override\n        public void onGlobalLayout() {\n            Rect r = new Rect();\n            rootView.getWindowVisibleDisplayFrame(r);\n\n            int screenHeight = getUsableScreenHeight();\n            int heightDifference = screenHeight\n                    - (r.bottom - r.top);\n            int resourceId = mContext.getResources()\n                    .getIdentifier(\"status_bar_height\",\n                            \"dimen\", \"android\");\n            if (resourceId &gt; 0) {\n                heightDifference -= mContext.getResources()\n                        .getDimensionPixelSize(resourceId);\n            }\n            if (heightDifference &gt; 100) {\n                keyBoardHeight = heightDifference;\n                setSize(LayoutParams.MATCH_PARENT, keyBoardHeight);\n                if(isOpened == false){\n                    if(onSoftKeyboardOpenCloseListener!=null)\n                        onSoftKeyboardOpenCloseListener.onKeyboardOpen(keyBoardHeight);\n                }\n                isOpened = true;\n                if(pendingOpen){\n                    showAtBottom();\n                    pendingOpen = false;\n                }\n            }\n            else{\n                isOpened = false;\n                if(onSoftKeyboardOpenCloseListener!=null)\n                    onSoftKeyboardOpenCloseListener.onKeyboardClose();\n            }\n        }\n    });\n}\n\nprivate int getUsableScreenHeight() {\n    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.JELLY_BEAN_MR1) {\n        DisplayMetrics metrics = new DisplayMetrics();\n\n        WindowManager windowManager = (WindowManager) mContext.getSystemService(Context.WINDOW_SERVICE);\n        windowManager.getDefaultDisplay().getMetrics(metrics);\n\n        return metrics.heightPixels;\n\n    } else {\n        return rootView.getRootView().getHeight();\n    }\n}\n\n/**\n * Manually set the popup window size\n * @param width Width of the popup\n * @param height Height of the popup\n */\npublic void setSize(int width, int height){\n    setWidth(width);\n    setHeight(height);\n}\n\nprivate View createCustomView() {\n    LayoutInflater inflater = (LayoutInflater) mContext.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);\n    View view = inflater.inflate(R.layout.view_over_keyboard, null, false);\n\n    return view;\n}\n\n\n    public interface OnSoftKeyboardOpenCloseListener{\n        void onKeyboardOpen(int keyBoardHeight);\n        void onKeyboardClose();\n    }\n}\n</code></pre>\n\n<p>MainActivity</p>\n\n<pre><code>public class MainActivity extends AppCompatActivity {\n\nprivate RelativeLayout rootView;\nprivate ImageButton showPopUp;\nprivate EditText inputText;\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n    Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n    setSupportActionBar(toolbar);\n\n    rootView = (RelativeLayout) findViewById(R.id.rootview);\n    showPopUp = (ImageButton) findViewById(R.id.showPopUp);\n    inputText = (EditText) findViewById(R.id.inputText);\n\n    // Give the topmost view of your activity layout hierarchy. This will be used to measure soft keyboard height\n    final EmojiOverKeyboard popup = new EmojiOverKeyboard(rootView, this);\n\n    popup.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.keyboard_background));\n    popup.setAnimationStyle(R.style.EmojiPopupAnimation);\n\n    //Will automatically set size according to the soft keyboard size\n    popup.setSizeForSoftKeyboard();\n\n//If the emoji popup is dismissed, change emojiButton to smiley icon\n    popup.setOnDismissListener(new PopupWindow.OnDismissListener() {\n        @Override\n        public void onDismiss() {\n            changeEmojiKeyboardIcon(showPopUp, R.drawable.emoticon_upload_drawable);\n        }\n    });\n\n\n\n    //If the text keyboard closes, also dismiss the emoji popup\n\n    popup.setOnSoftKeyboardOpenCloseListener(new EmojiOverKeyboard.OnSoftKeyboardOpenCloseListener() {\n\n        @Override\n        public void onKeyboardOpen(int keyBoardHeight) {\n\n        }\n\n        @Override\n        public void onKeyboardClose() {\n            if (popup.isShowing())\n                popup.dismiss();\n        }\n    });\n\n\n//         To toggle between text keyboard and emoji keyboard keyboard(Popup)\n    showPopUp.setOnClickListener(new View.OnClickListener() {\n\n        @Override\n        public void onClick(View v) {\n\n            //If popup is not showing =&gt; emoji keyboard is not visible, we need to show it\n            if (!popup.isShowing()) {\n\n                //If keyboard is visible, simply show the emoji popup\n                if (popup.isKeyBoardOpen()) {\n                    popup.showAtBottom();\n                    changeEmojiKeyboardIcon(showPopUp, R.drawable.keyboard_variant);\n                }\n\n                //else, open the text keyboard first and immediately after that show the emoji popup\n                else {\n                    inputText.setFocusableInTouchMode(true);\n                    inputText.requestFocus();\n                    popup.showAtBottomPending();\n                    final InputMethodManager inputMethodManager = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);\n                    inputMethodManager.showSoftInput(inputText, InputMethodManager.SHOW_IMPLICIT);\n                    changeEmojiKeyboardIcon(showPopUp, R.drawable.keyboard_variant);\n                }\n            }\n\n            //If popup is showing, simply dismiss it to show the undelying text keyboard\n            else {\n                popup.dismiss();\n            }\n        }\n    });\n     }\n\n    private void changeEmojiKeyboardIcon(ImageView iconToBeChanged, int drawableResourceId){\n        iconToBeChanged.setImageResource(drawableResourceId);\n    }\n\n}\n</code></pre>\n\n<p>ContentLayout</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"#eceff1\"&gt;\n\n&lt;LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"40dp\"\n    android:background=\"#e4e7e9\"\n    &gt;&lt;/LinearLayout&gt;\n\n&lt;TextView\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginTop=\"24dp\"\n    android:padding=\"24dp\"\n    android:textSize=\"18sp\"\n    android:textColor=\"#545e60\"\n    android:text=\"Show your Emoji's here\"\n    android:layout_gravity=\"center_horizontal\"\n    /&gt;\n\n&lt;RelativeLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    &gt;\n    &lt;android.support.design.widget.FloatingActionButton\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        app:fabSize=\"mini\"\n        app:backgroundTint=\"#4db6ac\"\n        android:src=\"@drawable/emoticon_happy\"\n        android:layout_alignParentBottom=\"true\"\n        android:layout_alignParentRight=\"true\"\n        android:layout_margin=\"8dp\"\n        app:elevation=\"0dp\"\n        /&gt;\n\n&lt;/RelativeLayout&gt;\n</code></pre>\n\n<p></p>\n\n<p>Use my <a href=\"https://github.com/imidhuntv/View-Over-Keyboard-Android\" rel=\"nofollow\">sample github project</a> for reference.</p>\n", "title": "add view over keyboard android", "answer_id": 33897583, "link": "http://stackoverflow.com/questions/33137248/add-view-over-keyboard-android/33897583#33897583", "tags": ["java", "android", "android-activity", "android-softkeyboard", "emoji"]}, {"body": "<p>It worked :). Add below two lines in your list view</p>\n\n<pre><code> &lt;ListView\n    android:id=\"@+id/chat_list_view\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_above=\"@+id/bottomlayout\"\n    android:divider=\"@drawable/chat_divider\"\n    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n    android:paddingRight=\"@dimen/activity_horizontal_margin\"\n    android:scrollbarStyle=\"outsideOverlay\"\n\n\n    android:stackFromBottom=\"true\"\n    android:transcriptMode=\"alwaysScroll\" &gt;\n\n&lt;/ListView&gt;\n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/questions/3606530/listview-scroll-to-the-end-of-the-list-after-updating-the-list\">You can view it here</a></p>\n", "title": "add view over keyboard android", "answer_id": 33963415, "link": "http://stackoverflow.com/questions/33137248/add-view-over-keyboard-android/33963415#33963415", "tags": ["java", "android", "android-activity", "android-softkeyboard", "emoji"]}], "question_id": 33137248}, {"body": "<p>I'm trying to do a 'release' build on an Android app and I keep on getting this error of:</p>\n\n<blockquote>\n  <p>Unable to compute hash of /../AndroidStudioProjects/../classes.jar</p>\n</blockquote>\n\n<p>And then when I look into that directory for 'classes.jar' the file isn't there. Do I have to create this file myself with a gradle task?</p>\n\n<p>There's something going on with proguard here but it's not giving much useful information other than 'Unable to compute hash....\"</p>\n\n<p>Here's my gradle.build file:</p>\n\n<pre><code>apply plugin: 'com.android.application'\napply plugin: 'com.google.gms.google-services'\n\nandroid {\n    compileSdkVersion 22\n    buildToolsVersion \"22.0.1\"\n    defaultConfig {\n        applicationId \"com.example\"\n        minSdkVersion 11\n        targetSdkVersion 22\n        versionCode 1\n        versionName \"1.0\"\n    }\n    buildTypes {\n        debug {\n            buildConfigField \"String\", \"SERVER_URL\", '\"http://10.0.2.2:3000\"'\n        }\n        release {\n            buildConfigField \"String\", \"SERVER_URL\", '\"https://example.com\"'\n            minifyEnabled true\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n        debugRelease {\n            buildConfigField \"String\", \"SERVER_URL\", '\"https://example.com\"'\n            debuggable true\n            jniDebuggable false\n            renderscriptDebuggable false\n            minifyEnabled false\n            zipAlignEnabled true\n        }\n    }\n    productFlavors {\n    }\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    compile 'com.android.support:appcompat-v7:22.1.1'\n    compile 'com.android.support:recyclerview-v7:22.1.1'\n    compile 'com.android.support:cardview-v7:22.1.1'\n    compile 'com.google.android.gms:play-services-gcm:7.5.0'\n}\n</code></pre>\n\n<p>If someone could help me debug this issue that'd be great.</p>\n", "tags": ["java", "android", "gradle", "android-gradle", "build.gradle"], "title": "Error:Execution failed for task &#39;:app:packageRelease&#39;. &gt; Unable to compute hash of /../AndroidStudioProjects/../classes.jar", "answer_count": 6, "creation_date": 1437956305, "score": 42, "link": "http://stackoverflow.com/questions/31643339/errorexecution-failed-for-task-apppackagerelease-unable-to-compute-hash", "answers": [{"body": "<p>I figured out the problem:</p>\n\n<p>Open up the <code>proguard-rules.pro</code> for your project and add this to the bottom:</p>\n\n<pre><code>-dontwarn java.nio.file.Files\n-dontwarn java.nio.file.Path\n-dontwarn java.nio.file.OpenOption\n-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement\n</code></pre>\n\n<p>Basically how I solved it was this I tried to run my app in 'release' mode and got a bunch of errors similar to this guy here: <a href=\"https://github.com/square/okio/issues/144\">https://github.com/square/okio/issues/144</a></p>\n\n<p>I pretty much followed what he said and fixed it.</p>\n\n<p>Hope this can help others with generating their APK's!</p>\n", "title": "Error:Execution failed for task &#39;:app:packageRelease&#39;. &gt; Unable to compute hash of /../AndroidStudioProjects/../classes.jar", "answer_id": 31643496, "link": "http://stackoverflow.com/questions/31643339/errorexecution-failed-for-task-apppackagerelease-unable-to-compute-hash/31643496#31643496", "tags": ["java", "android", "gradle", "android-gradle", "build.gradle"]}, {"body": "<p>I know there's already an answer here, but my situation was a little different, and I wanted to share it.</p>\n\n<p>For me, my project's proguard file, namely, <code>proguard-rules.pro</code>, was somehow renamed to <code>proguard-android.txt</code>.</p>\n\n<p>The <code>proguard-android.txt</code> is reserved for Android's default proguard rules, so essentially, I was overriding Android's proguard file, which was causing havoc, and I would get the <em>Unable to compute hash message</em>.</p>\n\n<p>Once I changed the filename in my project from <code>proguard-android.txt</code> to <code>proguard-rules.pro</code> I was able to get things working.</p>\n", "title": "Error:Execution failed for task &#39;:app:packageRelease&#39;. &gt; Unable to compute hash of /../AndroidStudioProjects/../classes.jar", "answer_id": 32662432, "link": "http://stackoverflow.com/questions/31643339/errorexecution-failed-for-task-apppackagerelease-unable-to-compute-hash/32662432#32662432", "tags": ["java", "android", "gradle", "android-gradle", "build.gradle"]}, {"body": "<p>For me the following 2 lines inside <strong>proguard.cfg</strong> helped:</p>\n\n<pre><code> -keep class com.google.android.gms.** { *; }\n -dontwarn com.google.android.gms.**\n</code></pre>\n", "title": "Error:Execution failed for task &#39;:app:packageRelease&#39;. &gt; Unable to compute hash of /../AndroidStudioProjects/../classes.jar", "answer_id": 33022317, "link": "http://stackoverflow.com/questions/31643339/errorexecution-failed-for-task-apppackagerelease-unable-to-compute-hash/33022317#33022317", "tags": ["java", "android", "gradle", "android-gradle", "build.gradle"]}, {"body": "<p>I know this is an old question but maybe this answer works for someone. I added       <code>-dontwarn butterknife.**</code> to proguard then gradle builds properly.</p>\n", "title": "Error:Execution failed for task &#39;:app:packageRelease&#39;. &gt; Unable to compute hash of /../AndroidStudioProjects/../classes.jar", "answer_id": 33942750, "link": "http://stackoverflow.com/questions/31643339/errorexecution-failed-for-task-apppackagerelease-unable-to-compute-hash/33942750#33942750", "tags": ["java", "android", "gradle", "android-gradle", "build.gradle"]}, {"body": "<p>All the current answers to this question are just giving the Proguard rules that worked for them, every fix will be different. First off, confirm it's a Proguard problem by checking that the classes-proguard directory is somewhere in the error message, something like this: <code>Unable to compute hash of /Users/Documents/projectX/app/build/intermediates/classes-proguard/release/classes.jar</code></p>\n\n<p>This means it's caused by an earlier Proguard error so you need to scroll up in the Messages window or Gradle Console window and check what warnings or errors you're getting. Just as an example, in my current project, Square's Picasso library is causing the error:\n<code>Warning: com.squareup.picasso.OkHttpDownloader: can't find referenced class com.squareup.okhttp.OkHttpClient</code>. I just added <code>-dontwarn com.squareup.okhttp.**</code> to ignore the warnings, and the app still worked as normal. </p>\n\n<p>A lot of the Proguard errors will be warnings about some class so just adding -dontwarn for whatever class is causing it in your project often works.</p>\n\n<p>I know the StackOverflow way is just Google the error message, copy and paste the top answer and hope for the best but here you've to understand it a bit and figure out the proguard rules for you!</p>\n", "title": "Error:Execution failed for task &#39;:app:packageRelease&#39;. &gt; Unable to compute hash of /../AndroidStudioProjects/../classes.jar", "answer_id": 34714083, "link": "http://stackoverflow.com/questions/31643339/errorexecution-failed-for-task-apppackagerelease-unable-to-compute-hash/34714083#34714083", "tags": ["java", "android", "gradle", "android-gradle", "build.gradle"]}, {"body": "<p>Disabling the <strong>minifyEnabled</strong> option from my gradle file corrected the error in my build.</p>\n\n<p>build.gradle</p>\n\n<pre><code>buildTypes {\n       release {\n              // DISABLE OPTION\n              //minifyEnabled true\n              proguardFiles 'proguard.cfg'\n       }\n}\n</code></pre>\n", "title": "Error:Execution failed for task &#39;:app:packageRelease&#39;. &gt; Unable to compute hash of /../AndroidStudioProjects/../classes.jar", "answer_id": 38862405, "link": "http://stackoverflow.com/questions/31643339/errorexecution-failed-for-task-apppackagerelease-unable-to-compute-hash/38862405#38862405", "tags": ["java", "android", "gradle", "android-gradle", "build.gradle"]}], "question_id": 31643339}, {"body": "<p>I'm currently in the process of writing a paint program in java, designed to have flexible and comprehensive functionalities. It stemmed from my final project, that I wrote overnight the day before. Because of that, it's got tons and tons of bugs, which I've been tackling one by one (e.g. I can only save files that will be empty, my rectangles don't draw right but my circles do...).</p>\n\n<p>This time, I've been trying to add undo/redo functionality to my program. However, I can't \"undo\" something that I have done. Therefore, I got an idea to save copies of my <code>BufferedImage</code> each time a <code>mouseReleased</code> event was fired. However, with some of the images going to 1920x1080 resolution, I figured that this wouldn't be efficient: storing them would probably take gigabytes of memory.</p>\n\n<p>The reason for why I can't simply paint the same thing with the background colour to undo is because I have many different brushes, which paint based on <code>Math.random()</code>, and because there are many different layers (in a single layer).</p>\n\n<p>Then, I've considered cloning the <code>Graphics</code> objects that I use to paint to the <code>BufferedImage</code>. Like this:</p>\n\n<pre><code>ArrayList&lt;Graphics&gt; revisions = new ArrayList&lt;Graphics&gt;();\n\n@Override\npublic void mouseReleased(MouseEvent event) {\n    Graphics g = image.createGraphics();\n    revisions.add(g);\n}\n</code></pre>\n\n<p>I haven't done this before, so I have a couple questions:</p>\n\n<ul>\n<li>Would I still be wasting pointless memory by doing this, like cloning my <code>BufferedImages</code>?</li>\n<li>Is there necessarily a different way I can do this?</li>\n</ul>\n", "tags": ["java", "memory-management", "graphics", "awt", "bufferedimage"], "title": "Is storing Graphics objects a good idea?", "answer_count": 4, "creation_date": 1436721138, "score": 42, "link": "http://stackoverflow.com/questions/31370403/is-storing-graphics-objects-a-good-idea", "answers": [{"body": "<p>No, storing a <code>Graphics</code> object is usually a bad idea. :-)</p>\n\n<p>Here's why: Normally, <code>Graphics</code> instances are short-lived and is used to paint or draw onto some kind of surface (typically a <code>(J)Component</code> or a <code>BufferedImage</code>). It holds the state of these drawing operations, like colors, stroke, scale, rotation etc. However, it does not hold the <em>result</em> of the drawing operations or the pixels. </p>\n\n<p>Because of this, it won't help you achieve undo-functionality. The pixels belongs to the component or image. So, rolling back to a \"previous\" <code>Graphics</code> object will not modify the pixels back to the previous state.</p>\n\n<p>Here's some approaches I know works:</p>\n\n<ul>\n<li><p>Use a \"chain\" of commands (command pattern) to modify the image. Command pattern works very nice with undo/redo (and is implemented in Swing/AWT in <code>Action</code>). Render all commands in sequence, starting from the original. Pro: The state in each command is usually not so large, allowing you to have many steps of undo-buffer in memory. Con: After a lot of operations, it becomes slow...</p></li>\n<li><p>For every operation, store the entire <code>BufferedImage</code> (as you originally did).  Pro: Easy to implement. Con: You'll run out of memory fast. Tip: You could serialize the images, making undo/redo taking less memory, at the cost of more processing time. </p></li>\n<li><p>A combination of the above, using command pattern/chain idea, but optimizing the rendering with \"snapshots\" (as <code>BufferedImages</code>) when reasonable. Meaning you won't need to render everything from the beginning for each new operation (faster). Also flush/serialize these snapshots to disk, to avoid running out of memory (but keep them in memory if you can, for speed). You could also serialize the commands to disk, for virtually unlimited undo. Pro: Works great when done right. Con: Will take some time to get right.</p></li>\n</ul>\n\n<p>PS: For all of the above, you need to use a background thread (like <code>SwingWorker</code> or similar) to update the displayed image, store commands/images to disk etc in the background, to keep a responsive UI.</p>\n\n<p>Good luck! :-)</p>\n", "title": "Is storing Graphics objects a good idea?", "answer_id": 31416048, "link": "http://stackoverflow.com/questions/31370403/is-storing-graphics-objects-a-good-idea/31416048#31416048", "tags": ["java", "memory-management", "graphics", "awt", "bufferedimage"]}, {"body": "<p>You are going to want to try to compress your images (using PNG is a good start, it has some nice filters along with zlib compression that really help).  I think the best way to do this is to </p>\n\n<ul>\n<li>make a copy of the image before you modify it</li>\n<li>modify it</li>\n<li>compare the copy with the new modified image</li>\n<li>for every pixel you didn't change, make that pixel a black, transparent pixel.</li>\n</ul>\n\n<p>That should compress really, really well in PNG.  Try black and white and see if there is a difference (I don't think there will be, but make sure you set the rgb values to the same thing, not just the alpha value, so it will compress better).  </p>\n\n<p>You might get even better performance out of cropping the image to the part that was changed, but I'm not sure how much you gain from that, considering the compression (and the fact that you will have to now save and remember the offset).  </p>\n\n<p>Then, since you have an alpha channel, if they undo, you can just put the undo image back on top of the current image and you're set.</p>\n", "title": "Is storing Graphics objects a good idea?", "answer_id": 31445010, "link": "http://stackoverflow.com/questions/31370403/is-storing-graphics-objects-a-good-idea/31445010#31445010", "tags": ["java", "memory-management", "graphics", "awt", "bufferedimage"]}, {"body": "<p>Idea #1, storing the <code>Graphics</code> objects simply wouldn't work. The <code>Graphics</code> should not be considered as \"holding\" some display memory, but rather as a handle to access an area of display memory. In the case of <code>BufferedImage</code>, each <code>Graphics</code> object will be always the handle to the same given image memory buffer, so they all will represent the same image. Even more importantly, <strong>you can't actually do anything with the stored <code>Graphics</code>:</strong> As they do not store anything, there is no way whatsoever they could \"re-store\" anything.</p>\n\n<p>Idea #2, cloning the <code>BufferedImage</code>s is a much better idea, but you'll indeed be wasting memory, and quickly run out of it. It helps only to store those parts of the image affected by the draw, for example using rectangular areas, but it still costs a lot of memory. Buffering those undo images to disk could help, but it will make your UI slow and unresponsive, and that's <em>bad</em>; furthermore, it makes you application more <strong>complex and error-prone</strong>.</p>\n\n<p>My alternative would be to store store the image modifications in a list, rendered from first to last on top of the image. An undo operation then simply consists of removing the modification from the list.</p>\n\n<p>This requires you to <strong>\"reify\" the image modifications</strong>, i.e. create a class that implements a single modification, by providing a <code>void draw(Graphics gfx)</code> method which performs the actual drawing.</p>\n\n<p>As you said, <strong>random modifications</strong> pose an additional problem. However, the key problem is your use of <code>Math.random()</code> to create random numbers. Instead, perform each random modification with a <code>Random</code> created from a fixed seed value, so that the (pseudo-)random number sequences are the same on each invocation of <code>draw()</code>, i.e., each draw has exactly the same effects. (That's why they are called \"pseudo-random\" -- the generated numbers look random, but they are just as deterministic as any other function.)</p>\n\n<p>In contrast to the image storing technique, which has memory problems, the problem with this technique is that many modifications may make the GUI slow, especially if the modifications are computationally intensive. To prevent this, the simplest way would be to fix an appropriate <strong>maximum size of the list of undoable modifications</strong>. If this limit would be exceeded by adding a new modification, remove the oldest modification the list and apply it to the backing <code>BufferedImage</code> itself.</p>\n\n<p>The following <strong>simple demo application</strong> shows that (and how) this all works together. It also includes a nice \"redo\" feature for redoing undone actions.</p>\n\n<pre><code>package stackoverflow;\n\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.image.BufferedImage;\nimport java.util.LinkedList;\nimport java.util.Random;\nimport javax.swing.*;\n\npublic final class UndoableDrawDemo\n        implements Runnable\n{\n    public static void main(String[] args) {\n        EventQueue.invokeLater(new UndoableDrawDemo()); // execute on EDT\n    }\n\n    // holds the list of drawn modifications, rendered back to front\n    private final LinkedList&lt;ImageModification&gt; undoable = new LinkedList&lt;&gt;();\n    // holds the list of undone modifications for redo, last undone at end\n    private final LinkedList&lt;ImageModification&gt; undone = new LinkedList&lt;&gt;();\n\n    // maximum # of undoable modifications\n    private static final int MAX_UNDO_COUNT = 4;\n\n    private BufferedImage image;\n\n    public UndoableDrawDemo() {\n        image = new BufferedImage(600, 600, BufferedImage.TYPE_INT_RGB);\n    }\n\n    public void run() {\n        // create display area\n        final JPanel drawPanel = new JPanel() {\n            @Override\n            public void paintComponent(Graphics gfx) {\n                super.paintComponent(gfx);\n\n                // display backing image\n                gfx.drawImage(image, 0, 0, null);\n\n                // and render all undoable modification\n                for (ImageModification action: undoable) {\n                    action.draw(gfx, image.getWidth(), image.getHeight());\n                }\n            }\n\n            @Override\n            public Dimension getPreferredSize() {\n                return new Dimension(image.getWidth(), image.getHeight());\n            }\n        };\n\n        // create buttons for drawing new stuff, undoing and redoing it\n        JButton drawButton = new JButton(\"Draw\");\n        JButton undoButton = new JButton(\"Undo\");\n        JButton redoButton = new JButton(\"Redo\");\n\n        drawButton.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n                // maximum number of undo's reached?\n                if (undoable.size() == MAX_UNDO_COUNT) {\n                    // remove oldest undoable action and apply it to backing image\n                    ImageModification first = undoable.removeFirst();\n\n                    Graphics imageGfx = image.getGraphics();\n                    first.draw(imageGfx, image.getWidth(), image.getHeight());\n                    imageGfx.dispose();\n                }\n\n                // add new modification\n                undoable.addLast(new ExampleRandomModification());\n\n                // we shouldn't \"redo\" the undone actions\n                undone.clear();\n\n                drawPanel.repaint();\n            }\n        });\n\n        undoButton.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n                if (!undoable.isEmpty()) {\n                    // remove last drawn modification, and append it to undone list\n                    ImageModification lastDrawn = undoable.removeLast();\n                    undone.addLast(lastDrawn);\n\n                    drawPanel.repaint();\n                }\n            }\n        });\n\n        redoButton.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n                if (!undone.isEmpty()) {\n                    // remove last undone modification, and append it to drawn list again\n                    ImageModification lastUndone = undone.removeLast();\n                    undoable.addLast(lastUndone);\n\n                    drawPanel.repaint();\n                }\n            }\n        });\n\n        JPanel buttonPanel = new JPanel(new FlowLayout());\n        buttonPanel.add(drawButton);\n        buttonPanel.add(undoButton);\n        buttonPanel.add(redoButton);\n\n        // create frame, add all content, and open it\n        JFrame frame = new JFrame(\"Undoable Draw Demo\");\n        frame.getContentPane().add(drawPanel);\n        frame.getContentPane().add(buttonPanel, BorderLayout.NORTH);\n        frame.pack();\n        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n        frame.setLocationRelativeTo(null);\n        frame.setVisible(true);\n    }\n\n    //--- draw actions ---\n\n    // provides the seeds for the random modifications -- not for drawing itself\n    private static final Random SEEDS = new Random();\n\n    // interface for draw modifications\n    private interface ImageModification\n    {\n        void draw(Graphics gfx, int width, int height);\n    }\n\n    // example random modification, draws bunch of random lines in random color\n    private static class ExampleRandomModification implements ImageModification\n    {\n        private final long seed;\n\n        public ExampleRandomModification() {\n            // create some random seed for this modification\n            this.seed = SEEDS.nextLong();\n        }\n\n        @Override\n        public void draw(Graphics gfx, int width, int height) {\n            // create a new pseudo-random number generator with our seed...\n            Random random = new Random(seed);\n\n            // so that the random numbers generated are the same each time.\n            gfx.setColor(new Color(\n                    random.nextInt(256), random.nextInt(256), random.nextInt(256)));\n\n            for (int i = 0; i &lt; 16; i++) {\n                gfx.drawLine(\n                        random.nextInt(width), random.nextInt(height),\n                        random.nextInt(width), random.nextInt(height));\n            }\n        }\n    }\n}\n</code></pre>\n", "title": "Is storing Graphics objects a good idea?", "answer_id": 31466466, "link": "http://stackoverflow.com/questions/31370403/is-storing-graphics-objects-a-good-idea/31466466#31466466", "tags": ["java", "memory-management", "graphics", "awt", "bufferedimage"]}, {"body": "<p>Most games(or programs) saves only the necessary parts and thats what you should do.</p>\n\n<ul>\n<li><p>a rectangle can be represented by width, height, background color, stroke, outline etc. So you can just save these parameters instead of the actual rectangle. \"rectangle color:red width: 100 height 100\"</p></li>\n<li><p>for the random aspects of your program( random color on brushes) you can either save the seed or save the result. \"random seed: 1023920\"</p></li>\n<li><p>if the program allows user to import images then you should copy and save the images.</p></li>\n<li><p>fillters and effects(zoom/transformation/glow) can all be represented by parameters just like shapes. eg. \"zoom scale: 2\" \"rotate angle: 30\"</p></li>\n<li><p>so you save all these parameters in a list and when then you need to undo you can mark the parameters as deleted( but dont actually delete them since you want to be able to redo as well). Then you can erase the whole canvas and recreate the image based on the parameters minus those that were marked as deleted.</p></li>\n</ul>\n\n<p>*for stuff like lines you can just store their locations in a list.</p>\n", "title": "Is storing Graphics objects a good idea?", "answer_id": 34957605, "link": "http://stackoverflow.com/questions/31370403/is-storing-graphics-objects-a-good-idea/34957605#34957605", "tags": ["java", "memory-management", "graphics", "awt", "bufferedimage"]}], "question_id": 31370403}, {"body": "<p>I am using jna.jar, jna-3.2.5.jar and jna-3.3.0-platform.jar in my Java Project.</p>\n\n<p>This is the Winapi function I want to replicate.</p>\n\n<pre><code>BOOL WINAPI MagImageScalingCallback(\n  _In_  HWND           hwnd,\n  _In_  void           *srcdata,\n  _In_  MAGIMAGEHEADER srcheader,\n  _Out_ void           *destdata,\n  _In_  MAGIMAGEHEADER destheader,\n  _In_  RECT           unclipped,\n  _In_  RECT           clipped,\n  _In_  HRGN           dirty\n);\n</code></pre>\n\n<p>This is my Java code</p>\n\n<pre><code>public interface MagImageScalingCallback extends StdCallLibrary.StdCallCallback{\n    public boolean MagImageScalingCallback(HWND hwnd,\n            Pointer srcdata,\n            MAGIMAGEHEADER.ByValue srcheader,\n            Pointer destdata,\n            MAGIMAGEHEADER.ByValue destheader,\n            RectByValue source,\n            RectByValue clipped,\n            HRGN dirty);\n}\n</code></pre>\n\n<p>When I get into this method of the callback, I get unexpected results:</p>\n\n<pre><code>    public boolean MagImageScalingCallback(HWND hwnd, Pointer srcdata,\n            MAGIMAGEHEADER.ByValue srcheader, Pointer destdata,\n            MAGIMAGEHEADER.ByValue destheader, RectByValue source, RectByValue clipped, HRGN dirty) {\n        image.setRGB(0, 0, srcheader.width, srcheader.height, srcdata.getIntArray(0, srcheader.width * srcheader.height ), 0, srcheader.width);\n        return true;\n    }\n</code></pre>\n\n<p>This table explains What works and what doesn't work in 32 bit and 64 bit system when I change the data type of the variables.</p>\n\n<pre><code>+--------------+--------------+-------------+-------------+\n| Parameter    | Data type    |   64 bit    |   32 bit    |\n+--------------+--------------+-------------+-------------+\n| source       | WinDef.RECT  |   Working   | Not Working |\n| clipped      | WinDef.RECT  |   Working   | Not Working |\n| source       | RectByValue  |   Working   |   Working   |\n| source       | RectByValue  |   Working   |   Working   |\n| srcdata      | Pointer      |   Working   | Not Working |\n| destdata     | Pointer      |   Working   | Not Working |\n+--------------+--------------+-------------+-------------+\n</code></pre>\n\n<blockquote>\n  <p>Not working means a totally black image in the result</p>\n</blockquote>\n\n<p>If I use the above code in a 64 bit system, I can capture the desktop(I can access the data from the Pointer variable). If I use the same code in 32 bit system, I am not getting any image. You can see <a href=\"https://github.com/petesh/jna-magnification\" rel=\"nofollow\">my whole code</a></p>\n\n<p>Why is the error in my code? How can I fix that?</p>\n\n<p>For your Information. As you see in the <code>screenSkip.java</code>, Whenever MagSetWindowSource function is called. MagImageScalingCallback(in line 80) is called.</p>\n\n<p>Problems in this <a href=\"https://github.com/petesh/jna-magnification/blob/master/screenSkip.java#L80-L85\" rel=\"nofollow\">section of code</a> </p>\n\n<p>If I run this code on a 64 bit system <code>srcdata</code> and <code>destdata</code> will hold the array of integer pixels of the Desktop(If I save this as image, it captures the desktop). But if I run the same code on 32 bit system these both variable array pixel value is always zero(If I save the image, it is always black)</p>\n\n<p>64 bit system\n[![enter image description here][2]][2]</p>\n\n<p>32 bit system\n<a href=\"http://i.stack.imgur.com/AVAEW.jpg\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/AVAEW.jpg\" alt=\"enter image description here\"></a></p>\n\n<p>@david-heffernan I am running this code on a 32-bit system. I know <code>The Magnification API is not supported under WOW64;</code>. Which means 32-bit magnification application works on a 32-bit system and 64-bit magnification application works on a 64-bit system. Please stop commenting that magnification API doesn't work on WOW64 and try to execute this code on a 32-bit system.</p>\n\n<p>As for your request the below image shows the configuration of my System.</p>\n\n<p><a href=\"http://i.stack.imgur.com/Dizth.jpg\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/Dizth.jpg\" alt=\"enter image description here\"></a></p>\n", "tags": ["java", "pointers", "winapi", "jna"], "title": "How do I properly map a `MagImageScalingCallback` using JNA?", "answer_count": 1, "creation_date": 1442041309, "score": 42, "link": "http://stackoverflow.com/questions/32536171/how-do-i-properly-map-a-magimagescalingcallback-using-jna", "answers": [{"body": "<p>The callback is proper - there is no flaw in your code, beside you are using deprecated functions.</p>\n\n<p>Consider using this:</p>\n\n<pre><code>    try {\n        Rectangle screenRect = new Rectangle(Toolkit.getDefaultToolkit().getScreenSize());\n        BufferedImage  capture = new Robot().createScreenCapture(screenRect);\n        ImageIO.write(capture, \"JPEG\", new File(\"printed1.jpg\"));\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n</code></pre>\n", "title": "How do I properly map a `MagImageScalingCallback` using JNA?", "answer_id": 34800503, "link": "http://stackoverflow.com/questions/32536171/how-do-i-properly-map-a-magimagescalingcallback-using-jna/34800503#34800503", "tags": ["java", "pointers", "winapi", "jna"]}], "question_id": 32536171}, {"body": "<p>I've these classes.</p>\n\n<pre><code>class RedSocket {}\nclass GreenSocket {}\nclass RedWire {}\nclass GreenWire {}\n</code></pre>\n\n<p>I've a class which uses 2 generic types </p>\n\n<pre><code>public class Connection&lt;W, S&gt; {}\n</code></pre>\n\n<p>where W is Wire type &amp; S is Socket type. </p>\n\n<p>I'm trying to enforce compile time check to ensure that socket &amp; wire have the same color. </p>\n\n<p>I tried doing this:</p>\n\n<pre><code>public class Connection&lt;W extends Wire &amp; Color, S extends Socket &amp; Color&gt; {}\n\ninterface Color {}\n\ninterface Red extends Color {}\ninterface Green extends Color {}\n\ninterface Socket {}\ninterface Wire {}\n\nclass RedSocket implements Socket, Red {}\nclass GreenSocket implements Socket, Green {}\nclass RedWire implements Wire,  Red {}\nclass GreenWire implements Wire, Green {}\n</code></pre>\n\n<p>But this doesn't really ensure that the <code>Color</code> used is same for both generic types and still lets me do this:</p>\n\n<pre><code>public class Connection&lt;W extends Wire &amp; Color, S extends Socket &amp; Color&gt; {\n    public static void main(String[] args) {\n        new Connection&lt;RedWire, GreenSocket&gt;();\n        new Connection&lt;GreenWire, RedSocket&gt;();\n    }\n}\n</code></pre>\n\n<p>(Why this happens has been explained brilliantly by Radiodef <a href=\"http://stackoverflow.com/questions/30217236/can-the-generic-type-of-a-generic-java-method-be-used-to-enforce-the-type-of-arg\">here</a>)</p>\n\n<p>How can I enforce compile time check to ensure that socket &amp; wire have the same color?</p>\n", "tags": ["java", "generics"], "title": "Java Generics enforcing compatible wildcards", "answer_count": 3, "creation_date": 1440662903, "score": 41, "link": "http://stackoverflow.com/questions/32243951/java-generics-enforcing-compatible-wildcards", "answers": [{"body": "<p>Seems that it's better to parameterize <code>Socket</code> and <code>Wire</code> with color:</p>\n\n<pre><code>interface Socket&lt;C extends Color&gt; {}\ninterface Wire&lt;C extends Color&gt; {}\n\nclass RedSocket implements Socket&lt;Red&gt; {}\nclass GreenSocket implements Socket&lt;Green&gt; {}\nclass RedWire implements Wire&lt;Red&gt; {}\nclass GreenWire implements Wire&lt;Green&gt; {}\n</code></pre>\n\n<p>This way you can introduce one more generic parameter to the <code>Connection</code>:</p>\n\n<pre><code>public class Connection&lt;C extends Color, M extends Wire&lt;C&gt;, Q extends Socket&lt;C&gt;&gt; {...}\n</code></pre>\n\n<p>And use it like this:</p>\n\n<pre><code>new Connection&lt;Red, RedWire, RedSocket&gt;(); // ok\nnew Connection&lt;Green, GreenWire, GreenSocket&gt;(); // ok\nnew Connection&lt;Green, GreenWire, RedSocket&gt;(); // error\n</code></pre>\n", "title": "Java Generics enforcing compatible wildcards", "answer_id": 32244114, "link": "http://stackoverflow.com/questions/32243951/java-generics-enforcing-compatible-wildcards/32244114#32244114", "tags": ["java", "generics"]}, {"body": "<p>As a minor variation of <a href=\"http://stackoverflow.com/a/32244114/3182664\">Tagir Valeev's answer</a>: You can possibly get rid of the third generic parameter of the <code>Connection</code> class, by making its constructor <code>private</code> (or maybe package visible), and offer a factory method for creating <code>Connection</code> instances that ensures that the <code>Color</code> type is the same for the given <code>Wire</code>- and <code>Socket</code> types:</p>\n\n<pre><code>class Connection&lt;\n    W extends Wire&lt;? extends Color&gt;, \n    S extends Socket&lt;? extends Color&gt;&gt; \n{\n    static &lt;C extends Color, \n        W extends Wire&lt;C&gt;, \n        S extends Socket&lt;C&gt;&gt; Connection&lt;W, S&gt; create()\n    {\n        return new Connection&lt;W, S&gt;();        \n    }\n\n    // Private constructor\n    private Connection() {}\n}\n\ninterface Color {}\n\ninterface Red extends Color {}\ninterface Green extends Color {}\n\ninterface Socket&lt;C extends Color&gt; {}\ninterface Wire&lt;C extends Color&gt; {}\n\nclass RedSocket implements Socket&lt;Red&gt; {}\nclass GreenSocket implements Socket&lt;Green&gt; {}\nclass RedWire implements Wire&lt;Red&gt; {}\nclass GreenWire implements Wire&lt;Green&gt; {}\n\npublic class CompatibleGenericsTest\n{\n    public static void main(String[] args)\n    {\n        Connection&lt;RedWire, RedSocket&gt; c0 = Connection.create(); // ok\n        Connection&lt;GreenWire, GreenSocket&gt; c1 = Connection.create(); // ok\n        Connection&lt;GreenWire, RedSocket&gt; c2 = Connection.create(); // error\n    }\n}\n</code></pre>\n", "title": "Java Generics enforcing compatible wildcards", "answer_id": 32245348, "link": "http://stackoverflow.com/questions/32243951/java-generics-enforcing-compatible-wildcards/32245348#32245348", "tags": ["java", "generics"]}, {"body": "<p>Attempting to mix-in an arbitrary properly like 'Color' is a typical trigger for the whole inheritance vs composition aka. is-a vs has-a debate. The general wisdom for a language like Java is that one should favor composition over inheritance in most general cases to avoid things like tricky wildcards. Other languages may offer more in the way of aspect-oriented programming </p>\n\n<p>While other answers may help you achieve correct generics, I'd suggest reading over the <a href=\"https://en.wikipedia.org/wiki/Composition_over_inheritance%20%22\" rel=\"nofollow\">wikipedia page on the subject</a> and thinking about whether you really need to enforce colour-matching at compile time or whether a runtime constructor check would do the job.</p>\n", "title": "Java Generics enforcing compatible wildcards", "answer_id": 32275111, "link": "http://stackoverflow.com/questions/32243951/java-generics-enforcing-compatible-wildcards/32275111#32275111", "tags": ["java", "generics"]}], "question_id": 32243951}, {"body": "<p>Each time I run the application, my SecurityException gets thrown and the error from the debugger reads as so: </p>\n\n<p>java.lang.SecurityException: \"gps\" location provider requires ACCESS_COARSE_LOCATION or ACCESS_FINE_LOCATION permission.</p>\n\n<p>This seems like a simple mistake, however, my manifest file is completely correct. Here it is, and here is my MapActivity code as well:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n</code></pre>\n\n<p></p>\n\n<pre><code>&lt;uses-permission android:name=\"android.permission.INTERNET\" /&gt;\n&lt;uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" /&gt;\n&lt;uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" /&gt;\n&lt;uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" /&gt;\n&lt;uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" /&gt;\n&lt;uses-permission android:name=\"com.google.android.providers.gsf.permission.READ_GSERVICES\" /&gt;\n&lt;uses-permission android:name=\"com.dev.cromer.jason.coverme.permission.MAPS_RECEIVE\" /&gt;\n\n&lt;application\n    android:allowBackup=\"true\"\n    android:icon=\"@mipmap/ic_launcher\"\n    android:label=\"@string/app_name\"\n    android:theme=\"@style/AppTheme\" &gt;\n    &lt;activity\n        android:name=\".MainActivity\"\n        android:label=\"@string/app_name\" &gt;\n        &lt;intent-filter&gt;\n            &lt;action android:name=\"android.intent.action.MAIN\" /&gt;\n\n            &lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt;\n        &lt;/intent-filter&gt;\n    &lt;/activity&gt;\n\n    &lt;meta-data\n        android:name=\"com.google.android.gms.version\"\n        android:value=\"@integer/google_play_services_version\" /&gt;\n    &lt;meta-data\n        android:name=\"com.google.android.maps.v2.API_KEY\"\n        android:value= \"@string/google_maps_key\" /&gt;\n\n    &lt;activity\n        android:name=\".MapActivity\"\n        android:label=\"@string/title_activity_map\" &gt;\n    &lt;/activity&gt;\n&lt;/application&gt;\n</code></pre>\n\n<p></p>\n\n<p>My Activity:</p>\n\n<pre><code>    package com.dev.cromer.jason.coverme;\n\nimport android.location.Criteria;\nimport android.location.Location;\nimport android.location.LocationListener;\nimport android.location.LocationManager;\nimport android.support.v4.app.FragmentActivity;\nimport android.os.Bundle;\nimport android.util.Log;\n\nimport com.google.android.gms.common.ConnectionResult;\nimport com.google.android.gms.common.api.GoogleApiClient;\nimport com.google.android.gms.location.LocationServices;\nimport com.google.android.gms.maps.CameraUpdateFactory;\nimport com.google.android.gms.maps.GoogleMap;\nimport com.google.android.gms.maps.SupportMapFragment;\nimport com.google.android.gms.maps.model.LatLng;\nimport com.google.android.gms.maps.model.MarkerOptions;\n\npublic class MapActivity extends FragmentActivity implements LocationListener {\n\n    private GoogleMap mMap; // Might be null if Google Play services APK is not available.\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_map);\n\n        setUpMapIfNeeded();\n    }\n\n    @Override\n    protected void onResume() {\n        super.onResume();\n        setUpMapIfNeeded();\n    }\n\n\n\n    private void setUpMapIfNeeded() {\n        // Do a null check to confirm that we have not already instantiated the map.\n        if (mMap == null) {\n            // Try to obtain the map from the SupportMapFragment.\n            mMap = ((SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map))\n                    .getMap();\n\n            // Check if we were successful in obtaining the map.\n            if (mMap != null) {\n                //mMap.setMyLocationEnabled(true);\n                //mMap.setOnMyLocationChangeListener(this);\n                setUpMap();\n            }\n        }\n    }\n\n\n    private void setUpMap() {\n        mMap.addMarker(new MarkerOptions().position(new LatLng(0, 0)).title(\"Marker\"));\n        mMap.setMyLocationEnabled(true);\n\n        LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\n\n        try {\n            Location myLocation = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);\n\n            if (myLocation != null) {\n                Log.d(\"TAG\", \"Not null\");\n            }\n            else {\n                Log.d(\"TAG\", \"NULL\");\n                locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, this);\n            }\n        }\n        catch (SecurityException se) {\n            Log.d(\"TAG\", \"SE CAUGHT\");\n            se.printStackTrace();\n        }\n    }\n\n\n    @Override\n    public void onLocationChanged(Location location) {\n        Log.d(\"CHANGED\", \"LOCATION UPDATED\");\n\n    }\n\n    @Override\n    public void onStatusChanged(String provider, int status, Bundle extras) {\n\n    }\n\n    @Override\n    public void onProviderEnabled(String provider) {\n\n    }\n\n    @Override\n    public void onProviderDisabled(String provider) {\n\n    }\n}\n</code></pre>\n", "tags": ["java", "android", "gps"], "title": "Android &quot;gps requires ACCESS_FINE_LOCATION&quot; error, even though my manifest file contains this", "answer_count": 2, "creation_date": 1439938544, "score": 41, "link": "http://stackoverflow.com/questions/32083913/android-gps-requires-access-fine-location-error-even-though-my-manifest-file", "answers": [{"body": "<p><code>ACCESS_COARSE_LOCATION</code>, <code>ACCESS_FINE_LOCATION</code>, and <code>WRITE_EXTERNAL_STORAGE</code> are all part of <a href=\"http://developer.android.com/preview/features/runtime-permissions.html\">the Android 6.0 runtime permission system</a>. In addition to having them in the manifest as you do, you <em>also</em> have to request them from the user at runtime (using <code>requestPermissions()</code>) and see if you have them (using <code>checkSelfPermission()</code>).</p>\n\n<p>One workaround in the short term is to drop your <code>targetSdkVersion</code> below 23.</p>\n\n<p>But, eventually, you will want to update your app to use the runtime permission system.</p>\n\n<p>For example, this activity works with five permissions. Four are runtime permissions, though it is presently only handling three (I wrote it before <code>WRITE_EXTERNAL_STORAGE</code> was added to the runtime permission roster).</p>\n\n<pre><code>/***\n Copyright (c) 2015 CommonsWare, LLC\n Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n use this file except in compliance with the License. You may obtain a copy\n of the License at http://www.apache.org/licenses/LICENSE-2.0. Unless required\n by applicable law or agreed to in writing, software distributed under the\n License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS\n OF ANY KIND, either express or implied. See the License for the specific\n language governing permissions and limitations under the License.\n\n From _The Busy Coder's Guide to Android Development_\n https://commonsware.com/Android\n */\n\npackage com.commonsware.android.permmonger;\n\nimport android.Manifest;\nimport android.app.Activity;\nimport android.content.pm.PackageManager;\nimport android.os.Bundle;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\npublic class MainActivity extends Activity {\n  private static final String[] INITIAL_PERMS={\n    Manifest.permission.ACCESS_FINE_LOCATION,\n    Manifest.permission.READ_CONTACTS\n  };\n  private static final String[] CAMERA_PERMS={\n    Manifest.permission.CAMERA\n  };\n  private static final String[] CONTACTS_PERMS={\n      Manifest.permission.READ_CONTACTS\n  };\n  private static final String[] LOCATION_PERMS={\n      Manifest.permission.ACCESS_FINE_LOCATION\n  };\n  private static final int INITIAL_REQUEST=1337;\n  private static final int CAMERA_REQUEST=INITIAL_REQUEST+1;\n  private static final int CONTACTS_REQUEST=INITIAL_REQUEST+2;\n  private static final int LOCATION_REQUEST=INITIAL_REQUEST+3;\n  private TextView location;\n  private TextView camera;\n  private TextView internet;\n  private TextView contacts;\n  private TextView storage;\n\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.main);\n\n    location=(TextView)findViewById(R.id.location_value);\n    camera=(TextView)findViewById(R.id.camera_value);\n    internet=(TextView)findViewById(R.id.internet_value);\n    contacts=(TextView)findViewById(R.id.contacts_value);\n    storage=(TextView)findViewById(R.id.storage_value);\n\n    if (!canAccessLocation() || !canAccessContacts()) {\n      requestPermissions(INITIAL_PERMS, INITIAL_REQUEST);\n    }\n  }\n\n  @Override\n  protected void onResume() {\n    super.onResume();\n\n    updateTable();\n  }\n\n  @Override\n  public boolean onCreateOptionsMenu(Menu menu) {\n    getMenuInflater().inflate(R.menu.actions, menu);\n\n    return(super.onCreateOptionsMenu(menu));\n  }\n\n  @Override\n  public boolean onOptionsItemSelected(MenuItem item) {\n    switch(item.getItemId()) {\n      case R.id.camera:\n        if (canAccessCamera()) {\n          doCameraThing();\n        }\n        else {\n          requestPermissions(CAMERA_PERMS, CAMERA_REQUEST);\n        }\n        return(true);\n\n      case R.id.contacts:\n        if (canAccessContacts()) {\n          doContactsThing();\n        }\n        else {\n          requestPermissions(CONTACTS_PERMS, CONTACTS_REQUEST);\n        }\n        return(true);\n\n      case R.id.location:\n        if (canAccessLocation()) {\n          doLocationThing();\n        }\n        else {\n          requestPermissions(LOCATION_PERMS, LOCATION_REQUEST);\n        }\n        return(true);\n    }\n\n    return(super.onOptionsItemSelected(item));\n  }\n\n  @Override\n  public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {\n    updateTable();\n\n    switch(requestCode) {\n      case CAMERA_REQUEST:\n        if (canAccessCamera()) {\n          doCameraThing();\n        }\n        else {\n          bzzzt();\n        }\n        break;\n\n      case CONTACTS_REQUEST:\n        if (canAccessContacts()) {\n          doContactsThing();\n        }\n        else {\n          bzzzt();\n        }\n        break;\n\n      case LOCATION_REQUEST:\n        if (canAccessLocation()) {\n          doLocationThing();\n        }\n        else {\n          bzzzt();\n        }\n        break;\n    }\n  }\n\n  private void updateTable() {\n    location.setText(String.valueOf(canAccessLocation()));\n    camera.setText(String.valueOf(canAccessCamera()));\n    internet.setText(String.valueOf(hasPermission(Manifest.permission.INTERNET)));\n    contacts.setText(String.valueOf(canAccessContacts()));\n    storage.setText(String.valueOf(hasPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE)));\n  }\n\n  private boolean canAccessLocation() {\n    return(hasPermission(Manifest.permission.ACCESS_FINE_LOCATION));\n  }\n\n  private boolean canAccessCamera() {\n    return(hasPermission(Manifest.permission.CAMERA));\n  }\n\n  private boolean canAccessContacts() {\n    return(hasPermission(Manifest.permission.READ_CONTACTS));\n  }\n\n  private boolean hasPermission(String perm) {\n    return(PackageManager.PERMISSION_GRANTED==checkSelfPermission(perm));\n  }\n\n  private void bzzzt() {\n    Toast.makeText(this, R.string.toast_bzzzt, Toast.LENGTH_LONG).show();\n  }\n\n  private void doCameraThing() {\n    Toast.makeText(this, R.string.toast_camera, Toast.LENGTH_SHORT).show();\n  }\n\n  private void doContactsThing() {\n    Toast.makeText(this, R.string.toast_contacts, Toast.LENGTH_SHORT).show();\n  }\n\n  private void doLocationThing() {\n    Toast.makeText(this, R.string.toast_location, Toast.LENGTH_SHORT).show();\n  }\n}\n</code></pre>\n\n<p>(from <a href=\"https://github.com/commonsguy/cw-omnibus/tree/master/Permissions/PermissionMonger\">this sample project</a>)</p>\n\n<blockquote>\n  <p>For the requestPermissions() function, should the parameters just be \"ACCESS_COARSE_LOCATION\"? Or should I include the full name \"android.permission.ACCESS_COARSE_LOCATION\"?</p>\n</blockquote>\n\n<p>I would use the constants defined on <code>Manifest.permission</code>, as shown above.</p>\n\n<blockquote>\n  <p>Also, what is the request code?</p>\n</blockquote>\n\n<p>That will be passed back to you as the first parameter to <code>onRequestPermissionsResult()</code>, so you can tell one <code>requestPermissions()</code> call from another.</p>\n", "title": "Android &quot;gps requires ACCESS_FINE_LOCATION&quot; error, even though my manifest file contains this", "answer_id": 32084038, "link": "http://stackoverflow.com/questions/32083913/android-gps-requires-access-fine-location-error-even-though-my-manifest-file/32084038#32084038", "tags": ["java", "android", "gps"]}, {"body": "<p>My simple solution is this</p>\n\n<pre><code>if (ContextCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) ==\n        PackageManager.PERMISSION_GRANTED &amp;&amp;\n        ContextCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) ==\n        PackageManager.PERMISSION_GRANTED) {\n    googleMap.setMyLocationEnabled(true);\n    googleMap.getUiSettings().setMyLocationButtonEnabled(true);\n} else {\n    Toast.makeText(this, R.string.error_permission_map, Toast.LENGTH_LONG).show();\n}\n</code></pre>\n\n<p>or you can open permission dialog in else like this</p>\n\n<pre><code>} else {\n   ActivityCompat.requestPermissions(this, new String[] {\n      Manifest.permission.ACCESS_FINE_LOCATION, \n      Manifest.permission.ACCESS_COARSE_LOCATION }, \n      TAG_CODE_PERMISSION_LOCATION);\n}\n</code></pre>\n", "title": "Android &quot;gps requires ACCESS_FINE_LOCATION&quot; error, even though my manifest file contains this", "answer_id": 36359961, "link": "http://stackoverflow.com/questions/32083913/android-gps-requires-access-fine-location-error-even-though-my-manifest-file/36359961#36359961", "tags": ["java", "android", "gps"]}], "question_id": 32083913}, {"body": "<p>I'm trying to determine whether the following statements are guaranteed to be true:</p>\n\n<pre><code>((Boolean)true) == Boolean.TRUE\n((Boolean)true) == Boolean.valueOf(true)\n((Integer)1) == Integer.valueOf(1)\n</code></pre>\n\n<p>I've always assumed that autoboxing was equivalent to calling <code>valueOf()</code> on the corresponding type. Every <a href=\"http://stackoverflow.com/questions/5253256/which-is-better-letting-java-do-autoboxing-or-using-valueof\">discussion</a> that I've seen on the <a href=\"http://stackoverflow.com/questions/408661/what-code-does-the-compiler-generate-for-autoboxing\">topic</a> seems to <a href=\"http://stackoverflow.com/questions/2307904/autoboxing-vs-manual-boxing-java\">support</a> my assumption. But all I could find in the JLS was the following (<a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-5.html#jls-5.1.7-300\">\u00a75.1.7</a>):</p>\n\n<blockquote>\n  <p>If the value <code>p</code> being boxed is an integer literal of type <code>int</code> between <code>-128</code> and <code>127</code> inclusive (\u00a73.10.1), or the boolean literal <code>true</code> or <code>false</code> (\u00a73.10.3), or a character literal between <code>'\\u0000'</code> and <code>'\\u007f'</code> inclusive (\u00a73.10.4), then let <code>a</code> and <code>b</code> be the results of any two boxing conversions of <code>p</code>. It is always the case that <code>a == b</code>.</p>\n</blockquote>\n\n<p>That describes behavior identical to that of <code>valueOf()</code>. But there doesn't seem to be any guarantee that <code>valueOf()</code> is actually invoked, meaning there could theoretically be an implementation that keeps a separate, dedicated cache for autoboxed values. In such a case, there might not be identity equality between cached autoboxed values and regular cached boxed values.</p>\n\n<p><a href=\"https://docs.oracle.com/javase/tutorial/java/data/autoboxing.html\">Oracle's autoboxing tutorial</a> states matter-of-factly that <code>li.add(i)</code> is compiled to <code>li.add(Integer.valueOf(i))</code>, where <code>i</code> is an <code>int</code>. But I don't know whether the tutorial should be considered an authoritative source. </p>\n", "tags": ["java", "boxing", "autoboxing"], "title": "Does autoboxing call valueOf()?", "answer_count": 4, "creation_date": 1437018286, "score": 40, "link": "http://stackoverflow.com/questions/31445024/does-autoboxing-call-valueof", "answers": [{"body": "<p>I first tought your question was a dupe of <a href=\"http://stackoverflow.com/questions/408661/what-code-does-the-compiler-generate-for-autoboxing\">What code does the compiler generate for autoboxing?</a></p>\n\n<p>However, after your comment on @ElliottFrisch I realized it was different :</p>\n\n<blockquote>\n  <p>I know the compiler behaves that way. I'm trying to figure out whether\n  that behavior is guaranteed.</p>\n</blockquote>\n\n<p>For other readers, assume that \"behaves that way\" means using <code>valueOf</code>.</p>\n\n<p>Remember that there are multiples compilers for Java. To be \"legal\" they must follow the contract given in the <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-5.html#jls-5.1.7\">JLS</a>. Therefore, as long as all the rules here are respected, there is no guarantee of how autoboxing is internally implemented.</p>\n\n<p>But I don't see any reason to not use <code>valueOf</code>, specially that it uses the cached values and is the recommended way as per <a href=\"https://blogs.oracle.com/darcy/entry/boxing_and_caches_integer_valueof\">this article</a> by Joseph D. Darcy.</p>\n", "title": "Does autoboxing call valueOf()?", "answer_id": 31445150, "link": "http://stackoverflow.com/questions/31445024/does-autoboxing-call-valueof/31445150#31445150", "tags": ["java", "boxing", "autoboxing"]}, {"body": "<blockquote>\n  <p>Oracle's autoboxing tutorial states matter-of-factly that li.add(i) is compiled to li.add(Integer.valueOf(i)), where i is an int. But I don't know whether the tutorial should be considered an authoritative source. </p>\n</blockquote>\n\n<p>I'm running Oracle Java 1.7.0_72 it looks like it does use valueOf.  Below is some code and the bytecode for it.  The bytecode shows it is using valueOf.</p>\n\n<pre><code>public class AutoBoxing {\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        Integer x = 5;\n        int i = x;\n        System.out.println(x.toString());\n    }\n\n}\n\n\n\n\n\nCompiled from \"AutoBoxing.java\"\npublic class testing.AutoBoxing {\n  public testing.AutoBoxing();\n    Code:\n       0: aload_0\n       1: invokespecial #1                  // Method java/lang/Object.\"&lt;init&gt;\":()V\n       4: return\n\n  public static void main(java.lang.String[]);\n    Code:\n       0: iconst_5\n       1: invokestatic  #2                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n       4: astore_1\n       5: aload_1\n       6: invokevirtual #3                  // Method java/lang/Integer.intValue:()I\n       9: istore_2\n      10: getstatic     #4                  // Field java/lang/System.out:Ljava/io/PrintStream;\n      13: aload_1\n      14: invokevirtual #5                  // Method java/lang/Integer.toString:()Ljava/lang/String;\n      17: invokevirtual #6                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n      20: return\n</code></pre>\n\n<p>But I do not know what Open JDK uses.  Will try it out.</p>\n", "title": "Does autoboxing call valueOf()?", "answer_id": 31752011, "link": "http://stackoverflow.com/questions/31445024/does-autoboxing-call-valueof/31752011#31752011", "tags": ["java", "boxing", "autoboxing"]}, {"body": "<p>Until the language specification mentions it, it is not guaranteed that autoboxing is equivalent to a call to the static <code>valueOf</code> methods. It is an <em>implementation</em> aspect, not part of the boxing conversion specification. An implementation is theoretically free to use another mechanism as long as it conforms to the rule you mentioned from the JLS.</p>\n\n<p>In practice, there are many Sun JDK bug reports (e.g. <a href=\"https://bugs.openjdk.java.net/browse/JDK-4990346\">JDK-4990346</a> and <a href=\"https://bugs.openjdk.java.net/browse/JDK-6628737\">JDK-6628737</a>) that clearly imply that when autoboxing was introduced in Java 5, the intention was having the compiler to rely on <code>valueOf</code> as stated in <a href=\"https://bugs.openjdk.java.net/browse/JDK-6628737\">JDK-6628737</a>:</p>\n\n<blockquote>\n  <p>The static factory methods Integer.valueOf(int), Long.valueOf(long), etc. were introduced in JDK 5 for javac to implement the caching behavior required by the autoboxing specification.</p>\n</blockquote>\n\n<p>But that's only for javac, not necessarily all compilers.</p>\n", "title": "Does autoboxing call valueOf()?", "answer_id": 31760309, "link": "http://stackoverflow.com/questions/31445024/does-autoboxing-call-valueof/31760309#31760309", "tags": ["java", "boxing", "autoboxing"]}, {"body": "<p>Autoboxing <strong>is</strong> absolutely implemented using <code>valueOf()</code> ...in the OpenJDK. If that's your implementation, read on... if not, skip to below.</p>\n\n<pre><code>((Boolean)true) == Boolean.TRUE\n((Boolean)true) == Boolean.valueOf(true)\n</code></pre>\n\n<p>Java documentation states that <code>Boolean.valueOf()</code> always returns <code>Boolean.TRUE</code> or <code>Boolean.FALSE</code>, therefore your reference comparisons in these cases will succeed.</p>\n\n<pre><code>((Integer)1) == Integer.valueOf(1)\n</code></pre>\n\n<p>For this particular example, under the OpenJDK implementation with default settings, it will <em>probably</em> work by virtue of the fact that you picked a value &lt; 128 which is cached at startup (although this can be overridden as a commandline arg). It <em>may</em> also work for larger values if it's frequently used enough to be cached. Unless you're working under \"safe\" assumptions about the Integer cache, don't expect the reference comparison to be an equality.</p>\n\n<p><code>Long</code>, <code>Short</code>, <code>Character</code> and <code>Byte</code> incidentally implement this caching too, but unlike <code>Integer</code>, it's not tunable. <code>Byte</code> will always work if you're comparing autobox/<code>valueOf()</code> references since obviously, you can't go out of range. <code>Float</code> and <code>Double</code> will unsurprisingly always create a new instance.</p>\n\n<hr>\n\n<p>Now, in purely generic terms? <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-5.html#jls-5.1.7\" rel=\"nofollow\">See this section of the JLS</a> - you <strong>MUST</strong> be given equal references for <code>boolean</code> and any <code>int</code> or <code>char</code> within the -128 to 127 range. There are <strong>no guarantees</strong> for anything else.</p>\n", "title": "Does autoboxing call valueOf()?", "answer_id": 31871515, "link": "http://stackoverflow.com/questions/31445024/does-autoboxing-call-valueof/31871515#31871515", "tags": ["java", "boxing", "autoboxing"]}], "question_id": 31445024}, {"body": "<p>I am developing a Java application that communicates with a remote server over HTTP.</p>\n\n<p>A few months ago I tried switching to HTTPS by installing a StartSSL certificate on the server. Common browsers like Chrome or Firefox accepted the certificate, but my application refused the connection since StartSSL is not in Java's default trusted CA list. Finally, I went back to using HTTP.</p>\n\n<p>Now that <a href=\"https://letsencrypt.org/\">Let's Encrypt</a> started their public beta, I'd like to know if Java currently works (or is confirmed to be working in the future) with their certificates by default.</p>\n\n<p>Let's Encrypt got their intermediate <a href=\"https://letsencrypt.org/certificates/#cross-signing\">cross-signed by IdenTrust</a>, which should be good news. However, I cannot find any of these two in the output of this command:</p>\n\n<pre><code>keytool -keystore \"..\\lib\\security\\cacerts\" -storepass changeit -list\n</code></pre>\n\n<p>I know that trusted CAs can be added manually on each machine, but since my application should be free to download and executable without any further configuration, I am looking for a solutions that works \"out of the box\". Do you have good news for me?</p>\n", "tags": ["java", "ssl", "keystore", "ca"], "title": "Does Java support Let&#39;s Encrypt certificates?", "answer_count": 4, "creation_date": 1449346952, "score": 39, "link": "http://stackoverflow.com/questions/34110426/does-java-support-lets-encrypt-certificates", "answers": [{"body": "<p>[<strong>Update 2016-06-08</strong>: According to <a href=\"https://bugs.openjdk.java.net/browse/JDK-8154757\">https://bugs.openjdk.java.net/browse/JDK-8154757</a> the IdenTrust CA will be included in Oracle Java 8u101.]</p>\n\n<p>[<strong>Update 2016-08-05</strong>: Java 8u101 has been released and does indeed include the IdenTrust CA: <a href=\"http://www.oracle.com/technetwork/java/javase/8u101-relnotes-3021761.html\">release notes</a>]</p>\n\n<hr>\n\n<blockquote>\n  <p>Does Java support Let's Encrypt certificates?</p>\n</blockquote>\n\n<p>Yes. The Let's Encrypt certificate is just a regular public key certificate. Java supports it.</p>\n\n<blockquote>\n  <p>Does Java trust Let's Encrypt certificates out of the box?</p>\n</blockquote>\n\n<p>No / it depends on the JVM. The truststore of Oracle JDK/JRE up to 8u66 contains neither the Let's Encrypt CA specifically nor the IdenTrust CA that cross signed it. <code>new URL(\"https://letsencrypt.org/\").openConnection().connect();</code> for example results in <code>javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException</code>.</p>\n\n<p>You can however provide your own validator / define a custom keystore that contains the required root CA or import the certificate into the JVM truststore.</p>\n\n<p><a href=\"https://community.letsencrypt.org/t/will-the-cross-root-cover-trust-by-the-default-list-in-the-jdk-jre/134/10\">https://community.letsencrypt.org/t/will-the-cross-root-cover-trust-by-the-default-list-in-the-jdk-jre/134/10</a> discusses the topic as well.</p>\n\n<hr>\n\n<p>Here is some example code that shows how to add a certificate to the default truststore at runtime. You'll just need to add the certificate (exported from firefox as .der and put in classpath)</p>\n\n<p>Based on <a href=\"http://stackoverflow.com/questions/3508050/how-can-i-get-a-list-of-trusted-root-certificates-in-java/3508175#3508175\">How can I get a list of trusted root certificates in Java?</a> and <a href=\"http://developer.android.com/training/articles/security-ssl.html#UnknownCa\">http://developer.android.com/training/articles/security-ssl.html#UnknownCa</a></p>\n\n<pre><code>import java.io.BufferedInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.security.KeyStore;\nimport java.security.cert.Certificate;\nimport java.security.cert.CertificateFactory;\nimport java.security.cert.PKIXParameters;\nimport java.security.cert.TrustAnchor;\nimport java.security.cert.X509Certificate;\n\nimport javax.net.ssl.SSLContext;\nimport javax.net.ssl.SSLHandshakeException;\nimport javax.net.ssl.TrustManagerFactory;\n\npublic class SSLExample {\n    // BEGIN ------- ADDME\n    static {\n        try {\n            KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());\n            Path ksPath = Paths.get(System.getProperty(\"java.home\"),\n                    \"lib\", \"security\", \"cacerts\");\n            keyStore.load(Files.newInputStream(ksPath),\n                    \"changeit\".toCharArray());\n\n            CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n            try (InputStream caInput = new BufferedInputStream(\n                    // this files is shipped with the application\n                    SSLExample.class.getResourceAsStream(\"DSTRootCAX3.der\"))) {\n                Certificate crt = cf.generateCertificate(caInput);\n                System.out.println(\"Added Cert for \" + ((X509Certificate) crt)\n                        .getSubjectDN());\n\n                keyStore.setCertificateEntry(\"DSTRootCAX3\", crt);\n            }\n\n            if (false) { // enable to see\n                System.out.println(\"Truststore now trusting: \");\n                PKIXParameters params = new PKIXParameters(keyStore);\n                params.getTrustAnchors().stream()\n                        .map(TrustAnchor::getTrustedCert)\n                        .map(X509Certificate::getSubjectDN)\n                        .forEach(System.out::println);\n                System.out.println();\n            }\n\n            TrustManagerFactory tmf = TrustManagerFactory\n                    .getInstance(TrustManagerFactory.getDefaultAlgorithm());\n            tmf.init(keyStore);\n            SSLContext sslContext = SSLContext.getInstance(\"TLS\");\n            sslContext.init(null, tmf.getTrustManagers(), null);\n            SSLContext.setDefault(sslContext);\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }\n    // END ---------- ADDME\n\n    public static void main(String[] args) throws IOException {\n        // signed by default trusted CAs.\n        testUrl(new URL(\"https://google.com\"));\n        testUrl(new URL(\"https://www.thawte.com\"));\n\n        // signed by letsencrypt\n        testUrl(new URL(\"https://helloworld.letsencrypt.org\"));\n        // signed by LE's cross-sign CA\n        testUrl(new URL(\"https://letsencrypt.org\"));\n        // expired\n        testUrl(new URL(\"https://tv.eurosport.com/\"));\n        // self-signed\n        testUrl(new URL(\"https://www.pcwebshop.co.uk/\"));\n\n    }\n\n    static void testUrl(URL url) throws IOException {\n        URLConnection connection = url.openConnection();\n        try {\n            connection.connect();\n            System.out.println(\"Headers of \" + url + \" =&gt; \"\n                    + connection.getHeaderFields());\n        } catch (SSLHandshakeException e) {\n            System.out.println(\"Untrusted: \" + url);\n        }\n    }\n\n}\n</code></pre>\n", "title": "Does Java support Let&#39;s Encrypt certificates?", "answer_id": 34111150, "link": "http://stackoverflow.com/questions/34110426/does-java-support-lets-encrypt-certificates/34111150#34111150", "tags": ["java", "ssl", "keystore", "ca"]}, {"body": "<p>I know the OP asked for a solution without local configuration changes, but in case you want to add the trust chain to the keystore permanently:</p>\n\n<pre><code>$ keytool -trustcacerts \\\n    -keystore $JAVA_HOME/jre/lib/security/cacerts \\\n    -storepass changeit \\\n    -noprompt \\\n    -importcert \\\n    -file /etc/letsencrypt/live/hostname.com/chain.pem\n</code></pre>\n\n<p>source: <a href=\"https://community.letsencrypt.org/t/will-the-cross-root-cover-trust-by-the-default-list-in-the-jdk-jre/134/13\">https://community.letsencrypt.org/t/will-the-cross-root-cover-trust-by-the-default-list-in-the-jdk-jre/134/13</a></p>\n", "title": "Does Java support Let&#39;s Encrypt certificates?", "answer_id": 35454903, "link": "http://stackoverflow.com/questions/34110426/does-java-support-lets-encrypt-certificates/35454903#35454903", "tags": ["java", "ssl", "keystore", "ca"]}, {"body": "<p>For JDK which doesn't support Let's Encrypt certificates yet, you can add those ones to the JDK <code>cacerts</code> following this process (thanks to <a href=\"http://superuser.com/a/1092240/136024\">this</a>).</p>\n\n<p>Download all the certificates on <a href=\"https://letsencrypt.org/certificates/\" rel=\"nofollow\">https://letsencrypt.org/certificates/</a> (choose the <strong>der</strong> format) and add them one by one with this kind of command (example for <code>letsencryptauthorityx1.der</code>):</p>\n\n<pre><code>keytool -import -keystore PATH_TO_JDK\\jre\\lib\\security\\cacerts -storepass changeit -noprompt -trustcacerts -alias letsencryptauthorityx1 -file PATH_TO_DOWNLOADS\\letsencryptauthorityx1.der\n</code></pre>\n", "title": "Does Java support Let&#39;s Encrypt certificates?", "answer_id": 37969672, "link": "http://stackoverflow.com/questions/34110426/does-java-support-lets-encrypt-certificates/37969672#37969672", "tags": ["java", "ssl", "keystore", "ca"]}, {"body": "<p>Detailed answer for those of us willing to make local config changes that includes backing up the config file:</p>\n\n<p>If you don't have a test program already, you can use my java SSLPing ping program which tests the TLS handshake (will work with any SSL/TLS port, not just HTTPS). I'll use the prebuilt SSLPing.jar, but reading the code and building it yourself is a quick and easy task:</p>\n\n<pre><code>$ git clone https://github.com/dimalinux/SSLPing.git\nCloning into 'SSLPing'...\n[... output snipped ...]\n</code></pre>\n\n<p>Since my Java verison is earlier than 1.8.0_101 (not released at the time of this writing), a Let's Encrypt certificate will not verify by default. Let's see what failure looks like before applying the fix:</p>\n\n<pre><code>$ java -jar SSLPing/dist/SSLPing.jar helloworld.letsencrypt.org 443\nAbout to connect to 'helloworld.letsencrypt.org' on port 443\njavax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target\n[... output snipped ...]\n</code></pre>\n\n<p>I'm on Mac OS X with the JAVA_HOME environment variable set.  Later commands will assume this variable is set for the java installation you are modifying:</p>\n\n<pre><code>$ echo $JAVA_HOME \n/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/\n</code></pre>\n\n<p>Make a backup of the cacerts file we will be modifying so you can back out any change without reinstalling the JDK:</p>\n\n<pre><code>$ sudo cp -a $JAVA_HOME/jre/lib/security/cacerts $JAVA_HOME/jre/lib/security/cacerts.orig\n</code></pre>\n\n<p>Download the signing certificate we need to import:</p>\n\n<pre><code>$ wget https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.der\n</code></pre>\n\n<p>Perform the import:</p>\n\n<pre><code>$ sudo keytool -trustcacerts -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit -noprompt -importcert -alias lets-encrypt-x3-cross-signed -file lets-encrypt-x3-cross-signed.der \nCertificate was added to keystore\n</code></pre>\n\n<p>Verify that Java is now happy connecting to the SSL port:</p>\n\n<pre><code>$ java -jar SSLPing/dist/SSLPing.jar helloworld.letsencrypt.org 443\nAbout to connect to 'helloworld.letsencrypt.org' on port 443\nSuccessfully connected\n</code></pre>\n", "title": "Does Java support Let&#39;s Encrypt certificates?", "answer_id": 38312489, "link": "http://stackoverflow.com/questions/34110426/does-java-support-lets-encrypt-certificates/38312489#38312489", "tags": ["java", "ssl", "keystore", "ca"]}], "question_id": 34110426}, {"body": "<p>What does Gradle <code>transitive = true</code> do exactly? It is not clear from the <a href=\"https://docs.gradle.org/current/userguide/dependency_management.html\">Gradle documentation</a>. This is in the context of <code>compile</code> within <code>build.gradle</code>. In my case I'm depending Android's crashlytics.</p>\n\n<pre><code>compile('com.crashlytics.sdk.android:crashlytics:2.2.2@aar') {\n    transitive = true;\n}\n</code></pre>\n\n<p>Several Gradle docs (<a href=\"https://docs.gradle.org/current/dsl/org.gradle.api.artifacts.Configuration.html#org.gradle.api.artifacts.Configuration:transitive\">here</a> and <a href=\"https://docs.gradle.org/current/javadoc/org/gradle/api/artifacts/dsl/DependencyHandler.html\">here</a>) imply that \"transitive\" defaults to true. Yet removing <code>transitive = true</code> results in transitive dependencies not being brought in (in particular <code>KitGroup</code>).</p>\n\n<pre><code>class file for io.fabric.sdk.android.KitGroup not found\n</code></pre>\n\n<p>The docs say it defaults to true, yet the actual behavior seems to be the opposite.</p>\n\n<p>I am running Gradle 2.2.1. Perhaps the behavior changed between 2.2 and 2.4?</p>\n\n<p><strong>Edit</strong>: Related <a href=\"http://stackoverflow.com/questions/22795455\">Transitive dependencies not resolved for aar library using gradle</a></p>\n", "tags": ["java", "android", "gradle", "build.gradle", "crashlytics"], "title": "What does transitive = true in Gradle exactly do (w.r.t. crashlytics)?", "answer_count": 4, "creation_date": 1438279631, "score": 38, "link": "http://stackoverflow.com/questions/31731014/what-does-transitive-true-in-gradle-exactly-do-w-r-t-crashlytics", "answers": [{"body": "<p><code>transitive</code> controls transitivity. Gradle normally defaults to transitive, except when it doesn't. There's a bug with transitivity and classifiers, see <a href=\"https://issues.gradle.org/browse/GRADLE-3188\" rel=\"nofollow\">https://issues.gradle.org/browse/GRADLE-3188</a>.</p>\n", "title": "What does transitive = true in Gradle exactly do (w.r.t. crashlytics)?", "answer_id": 31734267, "link": "http://stackoverflow.com/questions/31731014/what-does-transitive-true-in-gradle-exactly-do-w-r-t-crashlytics/31734267#31734267", "tags": ["java", "android", "gradle", "build.gradle", "crashlytics"]}, {"body": "<p>My guess is that the Crashlytics artifact to which you're referring manually specifies dependencies as <em>not</em> transitive (<code>transitive=false</code>) so that you aren't forced to bring those dependencies in by default. That's why you're seeing the opposite behavior. For example some developers may not want to pull in all of Google Play Services or whatever else Crashlytics may use if present.</p>\n\n<p>So, by removing that, Gradle no longer pulls in the dependency, and it fails to build. You can specify that dependency manually if you need to.</p>\n\n<p><em>That being said</em> - I think the bigger issue at hand is that you shouldn't be referencing the Crashlytics artifact directly - you should be using Fabric, and pulling in Crashlytics as a result: <a href=\"https://dev.twitter.com/fabric/android/integrating\" rel=\"nofollow\">https://dev.twitter.com/fabric/android/integrating</a></p>\n", "title": "What does transitive = true in Gradle exactly do (w.r.t. crashlytics)?", "answer_id": 31734355, "link": "http://stackoverflow.com/questions/31731014/what-does-transitive-true-in-gradle-exactly-do-w-r-t-crashlytics/31734355#31734355", "tags": ["java", "android", "gradle", "build.gradle", "crashlytics"]}, {"body": "<p>You are using the <code>@aar</code> notation.<br>\nIt means that you want to download only the aar artifact, and no dependencies.<br>\nYou can check this part of <a href=\"https://docs.gradle.org/current/userguide/dependency_management.html\">documentation</a>:<br>\nCheck the <code>1.4.1.2. Artifact only notation</code> section:  </p>\n\n<blockquote>\n  <p>An artifact only notation creates a module dependency which downloads only the artifact file with the specified extension. <strong>Existing module descriptors are ignored</strong>.</p>\n</blockquote>\n\n<p>Using the <code>@aar</code> notation if you want to download the dependencies, you should add <code>transitive=true</code>.</p>\n\n<p>I'd expect that omitting @aar it should work without adding the transitive attribute.</p>\n", "title": "What does transitive = true in Gradle exactly do (w.r.t. crashlytics)?", "answer_id": 31753839, "link": "http://stackoverflow.com/questions/31731014/what-does-transitive-true-in-gradle-exactly-do-w-r-t-crashlytics/31753839#31753839", "tags": ["java", "android", "gradle", "build.gradle", "crashlytics"]}, {"body": "<p>Sets whether this dependency should be resolved including or excluding its transitive dependencies. The artifacts belonging to this dependency might themselve have dependencies on other artifacts. The latter are called transitive dependencies.</p>\n", "title": "What does transitive = true in Gradle exactly do (w.r.t. crashlytics)?", "answer_id": 38888648, "link": "http://stackoverflow.com/questions/31731014/what-does-transitive-true-in-gradle-exactly-do-w-r-t-crashlytics/38888648#38888648", "tags": ["java", "android", "gradle", "build.gradle", "crashlytics"]}], "question_id": 31731014}, {"body": "<p>I have a server side implemented in <code>Scala</code> and <code>React/Flux</code> based front end. My services return <code>Futures</code> and they are handled within Scalatra's <code>AsyncResult</code> for JSON responses. </p>\n\n<p>For isomorphic/server side rendering setup I did not want to change services to be blocking so I started with Scala Future-> <code>java.util.function.Function</code> conversion <a href=\"http://blog.eigengo.com/2014/05/30/scala-futures-and-jdk-1-8-scripting/\">shown here</a>. </p>\n\n<p>But the dispatcher in Flux would like to have JS Promise. So far I found only rather complicated sounding way around this  <a href=\"http://www.slideshare.net/SpringCentral/serverside-javascript-with-nashorn-and-spring\">Slides 68-81</a></p>\n\n<p>Is there any recommended way to deal with this Scala Future -> JS Promise conversion?</p>\n", "tags": ["javascript", "java", "scala", "nashorn"], "title": "Nashorn and Scala future to JS Promise conversion", "answer_count": 1, "creation_date": 1439800925, "score": 38, "link": "http://stackoverflow.com/questions/32046078/nashorn-and-scala-future-to-js-promise-conversion", "answers": [{"body": "<p>I will try to answer the Scala Future to JS Promise part of the question.\nAs you haven't provided an example. I will provide one here with the conversion.\nIf we say that we have a Future implemented in Scala this way:</p>\n\n<pre><code>val f: Future = Future {\n  session.getX()\n}\n\nf onComplete {\n  case Success(data) =&gt; println(data)\n  case Failure(t) =&gt; println(t.getMessage)\n}\n</code></pre>\n\n<p>then the corresponding code in JavaScript/ES6 could look like this:</p>\n\n<pre><code>var f = new Promise(function(resolve, reject) {  \n   session.getX();\n});\n\nf.then((data) =&gt; {   \n  console.log(data);\n}).catch((t) =&gt; {\n  console.log(t);\n}));\n</code></pre>\n\n<p>I know this is not Scala, but I wanted to include it for completeness.\nThis is a mapping of <code>Future</code> to <code>Promise</code> taken from <a href=\"https://www.scala-js.org/doc/sjs-for-js/es6-to-scala-part3.html#Futures\" rel=\"nofollow\">Scala.js</a> docs:</p>\n\n<pre><code>+-----------------------------------+------------------------+-------------------------------------------------------------------------------------------------------+\n|              Future               |        Promise         |                                                 Notes                                                 |\n+-----------------------------------+------------------------+-------------------------------------------------------------------------------------------------------+\n| foreach(func)                     | then(func)             | Executes func for its side-effects when the future completes.                                         |\n| map(func)                         | then(func)             | The result of func is wrapped in a new future.                                                        |\n| flatMap(func)                     | then(func)             | func must return a future.                                                                            |\n| recover(func)                     | catch(func)            | Handles an error. The result of func is wrapped in a new future.                                      |\n| recoverWith(func)                 | catch(func)            | Handles an error. func must return a future.                                                          |\n| filter(predicate)                 | N/A                    | Creates a new future by filtering the value of the current future with a predicate.                   |\n| zip(that)                         | N/A                    | Zips the values of this and that future, and creates a new future holding the tuple of their results. |\n| Future.successful(value)          | Promise.resolve(value) | Returns a successful future containing value                                                          |\n| Future.failed(exception)          | Promise.reject(value)  | Returns a failed future containing exception                                                          |\n| Future.sequence(iterable)         | Promise.all(iterable)  | Returns a future that completes when all of the futures in the iterable argument have been completed. |\n| Future.firstCompletedOf(iterable) | Promise.race(iterable) | Returns a future that completes as soon as one of the futures in the iterable completes.              |\n+-----------------------------------+------------------------+-------------------------------------------------------------------------------------------------------+\n</code></pre>\n", "title": "Nashorn and Scala future to JS Promise conversion", "answer_id": 37815600, "link": "http://stackoverflow.com/questions/32046078/nashorn-and-scala-future-to-js-promise-conversion/37815600#37815600", "tags": ["javascript", "java", "scala", "nashorn"]}], "question_id": 32046078}, {"body": "<p>When I add the configurations for <a href=\"https://developers.google.com/analytics/devguides/collection/android/v4/\">google analytics</a> to my Android project and build the project I get the following error:</p>\n\n<pre><code>:app:transformClassesWithDexForDebug\nUNEXPECTED TOP-LEVEL EXCEPTION:\ncom.android.dex.DexException: Multiple dex files define Ljavax/inject/Inject;\n    at com.android.dx.merge.DexMerger.readSortableTypes(DexMerger.java:596)\n    at com.android.dx.merge.DexMerger.getSortedTypes(DexMerger.java:554)\n    at com.android.dx.merge.DexMerger.mergeClassDefs(DexMerger.java:535)\n    at com.android.dx.merge.DexMerger.mergeDexes(DexMerger.java:171)\n    at com.android.dx.merge.DexMerger.merge(DexMerger.java:189)\n    at com.android.dx.command.dexer.Main.mergeLibraryDexBuffers(Main.java:502)\n    at com.android.dx.command.dexer.Main.runMonoDex(Main.java:334)\n    at com.android.dx.command.dexer.Main.run(Main.java:277)\n    at com.android.dx.command.dexer.Main.main(Main.java:245)\n    at com.android.dx.command.Main.main(Main.java:106)\n\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nExecution failed for task ':app:transformClassesWithDexForDebug'.\n&gt; com.android.build.transform.api.TransformException: com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process 'command '/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/bin/java'' finished with non-zero exit value 2\n\n* Try:\nRun with --info or --debug option to get more log output.\n\n* Exception is:\norg.gradle.api.tasks.TaskExecutionException: Execution failed for task ':app:transformClassesWithDexForDebug'.\n    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:69)\n    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:46)\n    at org.gradle.api.internal.tasks.execution.PostExecutionAnalysisTaskExecuter.execute(PostExecutionAnalysisTaskExecuter.java:35)\n    at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:64)\n    at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58)\n    at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:42)\n    at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)\n    at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:53)\n    at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\n    at org.gradle.api.internal.AbstractTask.executeWithoutThrowingTaskFailure(AbstractTask.java:310)\n    at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.executeTask(AbstractTaskPlanExecutor.java:79)\n    at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.processTask(AbstractTaskPlanExecutor.java:63)\n    at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.run(AbstractTaskPlanExecutor.java:51)\n    at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor.process(DefaultTaskPlanExecutor.java:23)\n    at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter.execute(DefaultTaskGraphExecuter.java:88)\n    at org.gradle.execution.SelectedTaskExecutionAction.execute(SelectedTaskExecutionAction.java:37)\n    at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:62)\n    at org.gradle.execution.DefaultBuildExecuter.access$200(DefaultBuildExecuter.java:23)\n    at org.gradle.execution.DefaultBuildExecuter$2.proceed(DefaultBuildExecuter.java:68)\n    at org.gradle.execution.DryRunBuildExecutionAction.execute(DryRunBuildExecutionAction.java:32)\n    at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:62)\n    at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:55)\n    at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:149)\n    at org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:106)\n    at org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:86)\n    at org.gradle.launcher.exec.InProcessBuildActionExecuter$DefaultBuildController.run(InProcessBuildActionExecuter.java:90)\n    at org.gradle.tooling.internal.provider.runner.BuildModelActionRunner.run(BuildModelActionRunner.java:54)\n    at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\n    at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:41)\n    at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:28)\n    at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:49)\n    at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:37)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:26)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:34)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:74)\n    at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:72)\n    at org.gradle.util.Swapper.swap(Swapper.java:38)\n    at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:72)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.health.DaemonHealthTracker.execute(DaemonHealthTracker.java:47)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:66)\n    at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:71)\n    at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.health.HintGCAfterBuild.execute(HintGCAfterBuild.java:41)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:50)\n    at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:246)\n    at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)\n    at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)\nCaused by: org.gradle.internal.UncheckedException: com.android.build.transform.api.TransformException: com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process 'command '/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/bin/java'' finished with non-zero exit value 2\n    at org.gradle.internal.UncheckedException.throwAsUncheckedException(UncheckedException.java:45)\n    at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:78)\n    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$IncrementalTaskAction.doExecute(AnnotationProcessingTaskFactory.java:243)\n    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:219)\n    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$IncrementalTaskAction.execute(AnnotationProcessingTaskFactory.java:230)\n    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:208)\n    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:80)\n    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:61)\n    ... 57 more\nCaused by: com.android.build.transform.api.TransformException: com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process 'command '/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/bin/java'' finished with non-zero exit value 2\n    at com.android.build.gradle.internal.transforms.DexTransform.transform(DexTransform.java:411)\n    at com.android.build.gradle.internal.pipeline.TransformTask.transform(TransformTask.java:112)\n    at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:75)\n    ... 63 more\nCaused by: com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process 'command '/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/bin/java'' finished with non-zero exit value 2\n    at com.android.build.gradle.internal.process.GradleProcessResult.assertNormalExitValue(GradleProcessResult.java:42)\n    at com.android.builder.core.AndroidBuilder.convertByteCode(AndroidBuilder.java:1325)\n    at com.android.build.gradle.internal.transforms.DexTransform.transform(DexTransform.java:396)\n    ... 65 more\nCaused by: org.gradle.process.internal.ExecException: Process 'command '/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/bin/java'' finished with non-zero exit value 2\n    at org.gradle.process.internal.DefaultExecHandle$ExecResultImpl.assertNormalExitValue(DefaultExecHandle.java:365)\n    at com.android.build.gradle.internal.process.GradleProcessResult.assertNormalExitValue(GradleProcessResult.java:40)\n    ... 67 more\n</code></pre>\n\n<p><strong>What does this mean and how can I prevent this error?</strong></p>\n", "tags": ["java", "android", "android-studio", "gradle", "google-analytics"], "title": "UNEXPECTED TOP-LEVEL EXCEPTION: com.android.dex.DexException: Multiple dex files define", "answer_count": 11, "creation_date": 1443281525, "score": 37, "link": "http://stackoverflow.com/questions/32798816/unexpected-top-level-exception-com-android-dex-dexexception-multiple-dex-files", "answers": [{"body": "<p>i think you are using google analytic sdk V3  use V4 instead i have also facing the same issue while using sdk V3 of google analytic <a href=\"https://developers.google.com/analytics/devguides/collection/android/v4/\" rel=\"nofollow\">https://developers.google.com/analytics/devguides/collection/android/v4/</a> see this link for more information.</p>\n", "title": "UNEXPECTED TOP-LEVEL EXCEPTION: com.android.dex.DexException: Multiple dex files define", "answer_id": 32806811, "link": "http://stackoverflow.com/questions/32798816/unexpected-top-level-exception-com-android-dex-dexexception-multiple-dex-files/32806811#32806811", "tags": ["java", "android", "android-studio", "gradle", "google-analytics"]}, {"body": "<p>What i did to fix this is removed the gradle changes from here (<a href=\"https://developers.google.com/analytics/devguides/collection/android/v4/\" rel=\"nofollow\">https://developers.google.com/analytics/devguides/collection/android/v4/</a>) then in Android Studio went into 'file/Project Structure' then click into analytics and if the box is checked uncheck it, let gradle sync then check the box again and click the button to sign in. After all this to get your analytics tracker working you just have to copy your actual tracker id into <code>mTracker = analytics.newTracker(&lt;here&gt;)</code> look at this page for help. <a href=\"https://developers.google.com/android/reference/com/google/android/gms/analytics/GoogleAnalytics\" rel=\"nofollow\">https://developers.google.com/android/reference/com/google/android/gms/analytics/GoogleAnalytics</a></p>\n", "title": "UNEXPECTED TOP-LEVEL EXCEPTION: com.android.dex.DexException: Multiple dex files define", "answer_id": 32815066, "link": "http://stackoverflow.com/questions/32798816/unexpected-top-level-exception-com-android-dex-dexexception-multiple-dex-files/32815066#32815066", "tags": ["java", "android", "android-studio", "gradle", "google-analytics"]}, {"body": "<p><strong>Explication:</strong> <a href=\"https://developer.android.com/intl/es/tools/building/multidex.html#about\">Building Apps with Over 65K Methods</a></p>\n\n<blockquote>\n  <p>Android application (APK) files contain executable bytecode files in the form of Dalvik Executable (DEX) files, which contain the compiled code used to run your app. The Dalvik Executable specification limits the total number of <strong>methods that can be referenced within a single DEX file to 65,536</strong>, including Android framework methods, library methods, and methods in your own code. Getting past this limit requires that you configure your app build process to generate more than one DEX file, known as a multidex configuration.</p>\n</blockquote>\n\n<p><strong>Note:</strong>\nThis allows you to refer to all methods of the app. It is as if you have two modules (limit: 2 x 65K) but compacted into one. This entails a cost (time) in the build process.</p>\n\n<p><strong>Solution:</strong> </p>\n\n<ol>\n<li>You should try to format your code with libraries to remove excess classes and also not exceed the limit methods. For example if you use maps play-services ( com.google.android.gms: play-services: 8.1.0), you can change to (compile 'com.google.android.gms:play-services-maps:8.1.0') to eliminate unnecessary library dependencies. Then Sync Gradle in AndroidStudio and check if it run. If no run go to point 2.</li>\n<li>Add this on <strong>build.gradle</strong> (app module). </li>\n</ol>\n\n<blockquote>\n<pre><code>android {\n   ...\n   defaultConfig {\n      ...\n      multiDexEnabled true\n   }\n}\n</code></pre>\n</blockquote>\n", "title": "UNEXPECTED TOP-LEVEL EXCEPTION: com.android.dex.DexException: Multiple dex files define", "answer_id": 32886749, "link": "http://stackoverflow.com/questions/32798816/unexpected-top-level-exception-com-android-dex-dexexception-multiple-dex-files/32886749#32886749", "tags": ["java", "android", "android-studio", "gradle", "google-analytics"]}, {"body": "<p><strong>Multidex support for Android 5.0 and higher</strong></p>\n\n<blockquote>\n  <p>Android 5.0 and higher uses a runtime called ART which natively\n  supports loading multiple dex files from application APK files. ART\n  performs pre-compilation at application install time which scans for\n  classes(..N).dex files and compiles them into a single .oat file for\n  execution by the Android device. For more information on the Android\n  5.0 runtime, see Introducing ART.</p>\n</blockquote>\n\n<p>That means your app would working fine on API level 21 or above.</p>\n\n<p><strong>Multidex support prior to Android 5.0</strong></p>\n\n<blockquote>\n  <p>Versions of the platform prior to Android 5.0 use the Dalvik runtime\n  for executing app code. By default, Dalvik limits apps to a single\n  classes.dex bytecode file per APK. In order to get around this\n  limitation, you can use the multidex support library, which becomes\n  part of the primary DEX file of your app and then manages access to\n  the additional DEX files and the code they contain.</p>\n</blockquote>\n\n<p>So, Firstly making sure you have imported correct dependency, which It seems you did it.</p>\n\n<pre><code>dependencies {\n  compile 'com.android.support:multidex:1.0.1'\n}\n</code></pre>\n\n<p>In your manifest add the <code>MultiDexApplication</code> class from the multidex support library to the application element.</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.android.multidex.myapplication\"&gt;\n    &lt;application\n        ...\n        android:name=\"android.support.multidex.MultiDexApplication\"&gt;\n        ...\n    &lt;/application&gt;\n&lt;/manifest&gt;\n</code></pre>\n\n<p>Alternative to that, If your app extends the <code>Application</code> class, you can override the <code>attachBaseContext()</code> method and call <code>MultiDex.install(this)</code> to enable <code>multidex</code>.</p>\n\n<pre><code>   @Override\nprotected void attachBaseContext(Context base) {\n    super.attachBaseContext(base);\n    MultiDex.install(this);\n}\n</code></pre>\n\n<p>Finally, you will need to update your build.gradle file as below by adding <code>multiDexEnabled true</code> :</p>\n\n<pre><code>defaultConfig {  \n        applicationId '{Project Name}'  \n        minSdkVersion 15  \n        targetSdkVersion 23  \n        versionCode 1  \n        versionName \"1.0\"  \n        multiDexEnabled true  \n    }  \n</code></pre>\n\n<p>I hope it will help you out.</p>\n", "title": "UNEXPECTED TOP-LEVEL EXCEPTION: com.android.dex.DexException: Multiple dex files define", "answer_id": 32889654, "link": "http://stackoverflow.com/questions/32798816/unexpected-top-level-exception-com-android-dex-dexexception-multiple-dex-files/32889654#32889654", "tags": ["java", "android", "android-studio", "gradle", "google-analytics"]}, {"body": "<p>This could happen if you updated Android Studio to the latest version 1.4. Did you update the support libraries to the latest versions? Your <code>compileSdkVersion</code> should be 23.</p>\n\n<pre><code>apply plugin: 'com.android.application'\n\nandroid {\ncompileSdkVersion 23 //update this to 23\nbuildToolsVersion \"21.1.2\"\n\ndefaultConfig {\n    applicationId \"your.package.name\"\n    minSdkVersion 16\n    targetSdkVersion 21\n    multiDexEnabled true //enable this\n}\n\nbuildTypes {\n    release {\n        minifyEnabled true\n        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'\n        }\n    }\n}\n\ndependencies {\n// update these to 23 if you have them and add the multidex\n    compile 'com.android.support:support-v4:23.0.1'\n    compile 'com.android.support:appcompat-v7:23.0.1'\n    compile 'com.android.support:design:23.0.1'\n    compile 'com.google.android.gms:play-services:+'\n\n    compile 'com.android.support:multidex:1.0.1'\n\n}\n</code></pre>\n", "title": "UNEXPECTED TOP-LEVEL EXCEPTION: com.android.dex.DexException: Multiple dex files define", "answer_id": 32915128, "link": "http://stackoverflow.com/questions/32798816/unexpected-top-level-exception-com-android-dex-dexexception-multiple-dex-files/32915128#32915128", "tags": ["java", "android", "android-studio", "gradle", "google-analytics"]}, {"body": "<p>A little late to the game here but this is <strong>most likely</strong> a problem with the dependencies you have listed in your <code>build.gradle</code> file for you app. </p>\n\n<p>After lots of testing i successfully chased down my problem and believe it could be of help to others.</p>\n\n<p>Things I do not recommend:</p>\n\n<blockquote>\n  <p>Unless you have an absolute <strong>need</strong> to enable multiDex in your build.gradle <strong>DO NOT DO IT</strong>, this is just stepping over the underlying problem in your app and not getting to the root of it. You are also unnecessarily increasing the size of your apk, and there could be unexpected crashes when there is a conflicting method in your dex file.</p>\n</blockquote>\n\n<p>Things to look out for:</p>\n\n<blockquote>\n  <p>Check all your dependencies in your build.gradle file. Are you referencing a dependency that also includes a dependency you have already included? For example, if your including appcompat-v7 there is no need to include appcompat-v4 since v7 includes all features from v4.</p>\n</blockquote>\n\n<p><strong>WHAT I ACTUALLY FOUND (MY ISSUE causing my app to exceed method limit in my dex file) ----> GOOGLE PLAY SERVICES</strong></p>\n\n<blockquote>\n  <p>If you do not need all the google play services library dependencies <strong>STAY AWAY</strong> from this line in your build.gradle <code>compile 'com.google.android.gms:play-services:8.3.0'</code> and instead just use what you need!!</p>\n</blockquote>\n\n<p>Google has a comprehensive list of the libraries for selectively compiling <strong><a href=\"https://developers.google.com/android/guides/setup\">here</a></strong></p>\n\n<p>With all that said you probably only need to include this one line in gradle for your Google Analytics:</p>\n\n<pre><code>  dependencies{\n       compile 'com.google.android.gms:play-services-analytics:8.3.0'\n  }\n</code></pre>\n\n<p><strong>EDIT</strong></p>\n\n<p>Also, you can view the dependency tree by going to the root of your project (or using terminal in Android studio) and running:</p>\n\n<pre><code>./gradlew app:dependencies\n</code></pre>\n\n<p>Good Luck and happy coding!</p>\n", "title": "UNEXPECTED TOP-LEVEL EXCEPTION: com.android.dex.DexException: Multiple dex files define", "answer_id": 33786747, "link": "http://stackoverflow.com/questions/32798816/unexpected-top-level-exception-com-android-dex-dexexception-multiple-dex-files/33786747#33786747", "tags": ["java", "android", "android-studio", "gradle", "google-analytics"]}, {"body": "<p>I actually found that having too many Android Studio modules was contributing to having this error without multidex enabled. If you are trying to avoid enabling multidex the limit seemed to be around 26 modules. This was with Android Studio 1.5.1</p>\n", "title": "UNEXPECTED TOP-LEVEL EXCEPTION: com.android.dex.DexException: Multiple dex files define", "answer_id": 34499426, "link": "http://stackoverflow.com/questions/32798816/unexpected-top-level-exception-com-android-dex-dexexception-multiple-dex-files/34499426#34499426", "tags": ["java", "android", "android-studio", "gradle", "google-analytics"]}, {"body": "<p>in my case, I had this twice in the build.grade file</p>\n\n<pre><code>compile 'com.google.android.gms:play-services-auth:8.4.0'\n</code></pre>\n\n<p>Once I removed the 2nd entry, it worked fine.</p>\n", "title": "UNEXPECTED TOP-LEVEL EXCEPTION: com.android.dex.DexException: Multiple dex files define", "answer_id": 35301222, "link": "http://stackoverflow.com/questions/32798816/unexpected-top-level-exception-com-android-dex-dexexception-multiple-dex-files/35301222#35301222", "tags": ["java", "android", "android-studio", "gradle", "google-analytics"]}, {"body": "<p>For me it was related to simplexml converter for retrofit 2. And it fixed by:</p>\n\n<p><code>compile (\"com.squareup.retrofit2:converter-simplexml:2.0.0-beta4\"){\n        exclude module: 'stax'\n        exclude module: 'stax-api'\n        exclude module: 'xpp3'}</code></p>\n", "title": "UNEXPECTED TOP-LEVEL EXCEPTION: com.android.dex.DexException: Multiple dex files define", "answer_id": 35788709, "link": "http://stackoverflow.com/questions/32798816/unexpected-top-level-exception-com-android-dex-dexexception-multiple-dex-files/35788709#35788709", "tags": ["java", "android", "android-studio", "gradle", "google-analytics"]}, {"body": "<p>Exactly the same problem as I encountered! </p>\n\n<p>I found out that it was due to duplicate dependencies. In build.gradle, one dependency may be already included in others, thus generate conflicts. I removed necessary dependencies and solved my problem. </p>\n", "title": "UNEXPECTED TOP-LEVEL EXCEPTION: com.android.dex.DexException: Multiple dex files define", "answer_id": 35831327, "link": "http://stackoverflow.com/questions/32798816/unexpected-top-level-exception-com-android-dex-dexexception-multiple-dex-files/35831327#35831327", "tags": ["java", "android", "android-studio", "gradle", "google-analytics"]}, {"body": "<p>Include specific dependencies in the build file. </p>\n\n<blockquote>\n  <p>If you want to add maps into your app then <strong><em>include</em></strong> compile\n  '<strong>com.google.android.gms:play-services-location:9.2.1</strong>'</p>\n</blockquote>\n\n<hr>\n\n<blockquote>\n  <p><strong>instead of</strong>   compile '<strong>com.google.android.gms:play-services:9.2.1</strong>'</p>\n</blockquote>\n", "title": "UNEXPECTED TOP-LEVEL EXCEPTION: com.android.dex.DexException: Multiple dex files define", "answer_id": 39291845, "link": "http://stackoverflow.com/questions/32798816/unexpected-top-level-exception-com-android-dex-dexexception-multiple-dex-files/39291845#39291845", "tags": ["java", "android", "android-studio", "gradle", "google-analytics"]}], "question_id": 32798816}, {"body": "<p>When using the Java 8 <code>Optional</code> class, there are two ways in which a value can be wrapped in an optional.</p>\n\n<pre><code>String foobar = &lt;value or null&gt;;\nOptional.of(foobar);         // May throw NullPointerException\nOptional.ofNullable(foobar); // Safe from NullPointerException\n</code></pre>\n\n<p>I understand <code>Optional.ofNullable</code> is the only safe way of using <code>Optional</code>, but why does <code>Optional.of</code> exist at all? Why not just use <code>Optional.ofNullable</code>  and be on the safe side at all times?</p>\n", "tags": ["java", "java-8", "optional"], "title": "Why use Optional.of over Optional.ofNullable?", "answer_count": 1, "creation_date": 1438162258, "score": 37, "link": "http://stackoverflow.com/questions/31696485/why-use-optional-of-over-optional-ofnullable", "answers": [{"body": "<p>Your question is based on assumption that the code which may throw <code>NullPointerException</code> is worse than the code which may not. This assumption is wrong. If you expect that your <code>foobar</code> is never null due to the program logic, it's much better to use <code>Optional.of(foobar)</code> as you will see a <code>NullPointerException</code> which will indicate that your program has a bug. If you use <code>Optional.ofNullable(foobar)</code> and the <code>foobar</code> happens to be <code>null</code> due to the bug, then your program will silently continue working incorrectly, which may be a bigger disaster. This way an error may occur much later and it would be much harder to understand at which point it went wrong.</p>\n", "title": "Why use Optional.of over Optional.ofNullable?", "answer_id": 31696584, "link": "http://stackoverflow.com/questions/31696485/why-use-optional-of-over-optional-ofnullable/31696584#31696584", "tags": ["java", "java-8", "optional"]}], "question_id": 31696485}, {"body": "<p>Getting the following exception when using the AWS SDK for Java and Java 1.8u60+.</p>\n\n<pre><code>com.amazonaws.services.s3.model.AmazonS3Exception: AWS authentication requires a valid Date or x-amz-date header (Service: Amazon S3; Status Code: 403; Error Code: AccessDenied; Request ID: 41C359C079CBAFCF)\n    at com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:1182) ~[aws-java-sdk-core-1.10.10.jar:na]\n    at com.amazonaws.http.AmazonHttpClient.executeOneRequest(AmazonHttpClient.java:770) ~[aws-java-sdk-core-1.10.10.jar:na]\n    at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:489) ~[aws-java-sdk-core-1.10.10.jar:na]\n    at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:310) ~[aws-java-sdk-core-1.10.10.jar:na]\n    at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:3608) ~[aws-java-sdk-s3-1.10.10.jar:na]\n    at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:3561) ~[aws-java-sdk-s3-1.10.10.jar:na]\n    at com.amazonaws.services.s3.AmazonS3Client.listObjects(AmazonS3Client.java:647) ~[aws-java-sdk-s3-1.10.10.jar:na]\n    at com.amazonaws.services.s3.AmazonS3Client.listObjects(AmazonS3Client.java:632) ~[aws-java-sdk-s3-1.10.10.jar:na]\n</code></pre>\n", "tags": ["java", "amazon-web-services", "amazon-s3", "jodatime", "aws-sdk"], "title": "AWS Java SDK - AWS authentication requires a valid Date or x-amz-date header", "answer_count": 4, "creation_date": 1439840602, "score": 36, "link": "http://stackoverflow.com/questions/32058431/aws-java-sdk-aws-authentication-requires-a-valid-date-or-x-amz-date-header", "answers": [{"body": "<p>This is caused by a bug between JodaTime and versions of Java greater then 1.8u60. Upgrading to JodaTime version 2.8.1 or later solves the issue. See the following Github issues for reference.</p>\n\n<p><a href=\"https://github.com/aws/aws-sdk-java/issues/484\">https://github.com/aws/aws-sdk-java/issues/484</a>\n<a href=\"https://github.com/aws/aws-sdk-java/issues/444\">https://github.com/aws/aws-sdk-java/issues/444</a></p>\n", "title": "AWS Java SDK - AWS authentication requires a valid Date or x-amz-date header", "answer_id": 32058472, "link": "http://stackoverflow.com/questions/32058431/aws-java-sdk-aws-authentication-requires-a-valid-date-or-x-amz-date-header/32058472#32058472", "tags": ["java", "amazon-web-services", "amazon-s3", "jodatime", "aws-sdk"]}, {"body": "<p>Update your AWS Java SDK to 1.10.1 or later</p>\n", "title": "AWS Java SDK - AWS authentication requires a valid Date or x-amz-date header", "answer_id": 34617752, "link": "http://stackoverflow.com/questions/32058431/aws-java-sdk-aws-authentication-requires-a-valid-date-or-x-amz-date-header/34617752#34617752", "tags": ["java", "amazon-web-services", "amazon-s3", "jodatime", "aws-sdk"]}, {"body": "<p>As far as I can see, there are three solutions to this issue:</p>\n\n<ul>\n<li>upgrade joda time</li>\n<li>upgrade the AWS java SDK</li>\n<li>downgrade java to a version less than 1.8u60 (java7 seems to work fine)</li>\n</ul>\n", "title": "AWS Java SDK - AWS authentication requires a valid Date or x-amz-date header", "answer_id": 34997737, "link": "http://stackoverflow.com/questions/32058431/aws-java-sdk-aws-authentication-requires-a-valid-date-or-x-amz-date-header/34997737#34997737", "tags": ["java", "amazon-web-services", "amazon-s3", "jodatime", "aws-sdk"]}, {"body": "<p>I faced while using presto.\nThe problem is with java version jdk1.8.0_60 greater downgrade it to jdk1.8.0_45 will solve the problem</p>\n", "title": "AWS Java SDK - AWS authentication requires a valid Date or x-amz-date header", "answer_id": 37694343, "link": "http://stackoverflow.com/questions/32058431/aws-java-sdk-aws-authentication-requires-a-valid-date-or-x-amz-date-header/37694343#37694343", "tags": ["java", "amazon-web-services", "amazon-s3", "jodatime", "aws-sdk"]}], "question_id": 32058431}, {"body": "<p>I need to write a recursive method using Java called power that takes a double x and an integer n and that returns x^n.  Here is what I have so far.</p>\n\n<pre><code>public static double power(double x, int n) {\n    if (n == 0)\n        return 1;\n    if (n == 1)\n        return x;\n    else\n        return x * (power(x, n-1));\n\n}\n</code></pre>\n\n<p>This code works as expected.  However, I am trying to go the extra mile and perform the following optional exercise:  </p>\n\n<p>\"Optional challenge: you can make this method more efficient, when n is even, using x^n = (x^(n/2))^2.\"</p>\n\n<p>I am not sure how to implement that last formula when n is even.  I do not think I can use recursion for that.  I have tried to implement the following, but it also does not work because I cannot take a double to the power of an int.</p>\n\n<pre><code>if (n%2 == 0)\n        return (x^(n/2))^2;\n</code></pre>\n\n<p>Can somebody point me in the right direction?  I feel like I am missing something obvious.  All help appreciated.</p>\n", "tags": ["java", "recursion", "exponentiation"], "title": "Recursive method for x^n optimised for when n is even", "answer_count": 6, "creation_date": 1443319540, "score": 36, "link": "http://stackoverflow.com/questions/32803843/recursive-method-for-xn-optimised-for-when-n-is-even", "answers": [{"body": "<p>It's exactly the same principle as for x^n == x*(x^(n-1)): Insert your recursive function for x^(n/2) and (...)^2, but make sure you don't enter an infinite recursion for n == 2 (as 2 is even, too):</p>\n\n<pre><code>if (n % 2 == 0 &amp;&amp; n &gt; 2) \n  return power(power(x, n / 2), 2);\n} \n</code></pre>\n\n<p>Alternatively, you could just use an intermediate variable:</p>\n\n<pre><code>if (n % 2 == 0) {\n  double s = power(x, n / 2);\n  return s * s;\n}\n</code></pre>\n\n<p>I'd probably just handle 2 as a special case, too -- and avoid the \"and\"-condition and extra variable:</p>\n\n<pre><code>public static double power(double x, int n) {\n  if (n == 0) return 1;\n  if (n == 1) return x;\n  if (n ==\u00a02)\u00a0return x *\u00a0x;\n  if (n % 2\u00a0== 0) return power(power(x, n / 2), 2);\n  return x * (power(x, n - 1));\n}\n</code></pre>\n\n<p>P.S. I think this should work, too :)</p>\n\n<pre><code>public static double power(double x, int n) {\n  if (n == 0) return 1;\n  if (n == 1) return x;\n  if (n ==\u00a02)\u00a0return x *\u00a0x;\n  return power(x, n % 2) * power(power(x, n / 2), 2);\n}\n</code></pre>\n", "title": "Recursive method for x^n optimised for when n is even", "answer_id": 32803864, "link": "http://stackoverflow.com/questions/32803843/recursive-method-for-xn-optimised-for-when-n-is-even/32803864#32803864", "tags": ["java", "recursion", "exponentiation"]}, {"body": "<p>When <code>n</code> is even, the formula is exactly what you wrote: divide <code>n</code> by two, call <code>power</code> recursively, and square the result.</p>\n\n<p>When <code>n</code> is odd, the formula is a little more complex: subtract <code>1</code> from <code>n</code>, make a recursive call for <code>n/2</code>, square the result, and multiply by <code>x</code>.</p>\n\n<pre><code>if (n%2 == 0)\n    return (x^(n/2))^2;\nelse\n    return x*(x^(n/2))^2;\n</code></pre>\n\n<p><code>n/2</code> truncates the result, so subtraction of <code>1</code> is not done explicitly. Here is an implementation in Java:</p>\n\n<pre><code>public static double power(double x, int n) {\n    if (n == 0) return 1;\n    if (n == 1) return x;\n    double pHalf = power(x, n/2);\n    if (n%2 == 0) {\n        return pHalf*pHalf;\n    } else {\n        return x*pHalf*pHalf;\n    }\n}\n</code></pre>\n\n<p><a href=\"http://ideone.com/wxk9MQ\">Demo.</a></p>\n", "title": "Recursive method for x^n optimised for when n is even", "answer_id": 32803866, "link": "http://stackoverflow.com/questions/32803843/recursive-method-for-xn-optimised-for-when-n-is-even/32803866#32803866", "tags": ["java", "recursion", "exponentiation"]}, {"body": "<p>Hint: The <code>^</code> operation won't perform exponentiation in Java, but the function you wrote, <code>power</code> will.</p>\n\n<p>Also, don't forget squaring a number is the same as just multiplying it by itself. No function call needed.</p>\n", "title": "Recursive method for x^n optimised for when n is even", "answer_id": 32803871, "link": "http://stackoverflow.com/questions/32803843/recursive-method-for-xn-optimised-for-when-n-is-even/32803871#32803871", "tags": ["java", "recursion", "exponentiation"]}, {"body": "<p>Making a small change to your function, it will reduce the number of recursive calls made:</p>\n\n<pre><code>public static double power(double x, int n) {\n    if (n == 0) {\n        return 1;\n    }\n    if (n == 1) {\n        return x;\n    }\n\n    if (n % 2 == 0) {\n        double temp = power(x, n / 2);\n        return temp * temp;\n    } else {\n        return x * (power(x, n - 1));\n    }\n}\n</code></pre>\n", "title": "Recursive method for x^n optimised for when n is even", "answer_id": 32803943, "link": "http://stackoverflow.com/questions/32803843/recursive-method-for-xn-optimised-for-when-n-is-even/32803943#32803943", "tags": ["java", "recursion", "exponentiation"]}, {"body": "<p>Since</p>\n\n<pre><code>x^(2n) = (x^n)^2\n</code></pre>\n\n<p>you can add this rule to your method, either using the power function you wrote, as Stefan Haustein suggested, or using the regular multiplication operator, since it seems you are allowed to do that.</p>\n\n<p>Note that there is no need for both the base cases n=1 and n=0, one of them suffices (prefferably use the base case n=0, since otherwise your method would not be defined for n=0).</p>\n\n<pre><code>public static double power(double x, int n) {\n    if (n == 0)\n        return 1;\n    else if (n % 2 == 0)\n        double val = power(x, n/2);\n        return val * val;\n    else\n        return x * (power(x, n-1));\n}\n</code></pre>\n\n<p>There is no need to check that n>2 in any of the cases.</p>\n", "title": "Recursive method for x^n optimised for when n is even", "answer_id": 32809564, "link": "http://stackoverflow.com/questions/32803843/recursive-method-for-xn-optimised-for-when-n-is-even/32809564#32809564", "tags": ["java", "recursion", "exponentiation"]}, {"body": "<p>This just reminds me more optimisation could be done\nand this following code.</p>\n\n<pre><code>class Solution:\n# @param x, a float\n# @param n, a integer\n# @return a float\ndef pow(self, x, n):\n    if n&lt;0:\n        return 1.0/self.pow(x,-n)\n    elif n==0:\n        return 1.0\n    elif n==1:\n        return x\n    else:\n        m = n &amp; (-n)\n        if( m==n ):\n            r1 = self.pow(x,n&gt;&gt;1)\n            return r1*r1\n        else:\n            return self.pow(x,m)*self.pow(x,n-m)\n</code></pre>\n\n<p>what is more intermediate result could be memorised and avoid redundant computation.</p>\n", "title": "Recursive method for x^n optimised for when n is even", "answer_id": 32858034, "link": "http://stackoverflow.com/questions/32803843/recursive-method-for-xn-optimised-for-when-n-is-even/32858034#32858034", "tags": ["java", "recursion", "exponentiation"]}], "question_id": 32803843}, {"body": "<p>My website has been experiencing a denial of service/hack attack for the last week.  The attack is hitting our web API with randomly generated invalid API keys in a loop.</p>\n\n<p>I'm not sure if they are trying to guess a key (mathematically impossible as 64bit keys) or trying to DOS attack the server.  The attack is distributed, so I cannot ban all of the IP address, as it occurs from hundreds of clients.</p>\n\n<p>My guess is that it is an Android app by the IPs, so someone has some malware in an Android app, and use all the installs to attack my server.</p>\n\n<p>Server is Tomcat/Java, currently the web API just responds 400 to invalid keys, and caches IPs that have made several invalid key attempts, but still needs to do some processing for each bad request.</p>\n\n<p>Any suggestions how to stop the attack?  Is there any way to identify the Android app making the request from the HTTP header?</p>\n", "tags": ["java", "android", "security", "http", "hacking"], "title": "How to stop hack/DOS attack on web API", "answer_count": 6, "creation_date": 1442277624, "score": 36, "link": "http://stackoverflow.com/questions/32575924/how-to-stop-hack-dos-attack-on-web-api", "answers": [{"body": "<p><strong>Preventing Brute-Force Attacks:</strong></p>\n\n<p>There is a vast array of tools and strategies available to help you do this, and which to use depends entirely on your server implementation and requirements. </p>\n\n<p>Without using a firewall, IDS, or other network-control tools, you can't really stop a DDOS from, well, denying service to your application. You can, however, modify your application to make a brute-force attack significantly more difficult. </p>\n\n<p>The standard way to do this is by implementing a <strong>lockout</strong> or a <strong>progressive delay</strong>. A lockout prevents an IP from making a login request for X minutes if they fail to log in N times. A progressive delay adds a longer and longer delay to processing each bad login request.</p>\n\n<p>If you're using Tomcat's authentication system (i.e. you have a <code>&lt;login-constraint&gt;</code> element in your webapp configuration), you should use the <a href=\"https://tomcat.apache.org/tomcat-6.0-doc/config/realm.html#LockOut_Realm_-_org.apache.catalina.realm.LockOutRealm\" rel=\"nofollow\">Tomcat LockoutRealm</a>, which lets you easily put IP addresses on a lockout once they make a number of bad requests. </p>\n\n<p>If you are not using Tomcat's authentication system, then you would have to post more information about what you are using to get more specific information.</p>\n\n<p>Finally, you could simply increase the length of your API keys. 64 bits seems like an insurmountably huge keyspace to search, but its underweight by modern standards. A number of factors could contribute to making it far less secure than you expect:</p>\n\n<ul>\n<li>A botnet (or other large network) could make tens of thousands of attempts per second, if you have no protections in place.</li>\n<li>Depending on how you're generating your keys and gathering entropy,\nyour <em>de facto</em> keyspace might be much smaller.</li>\n<li>As your number of valid keys increases, the number of keys that need\nto be attempted to find a valid one (at least in theory) drops\nsharply.</li>\n</ul>\n\n<p>Upping the API key length to 128 (or 256, or 512) won't cost much, and you'll tremendously increase the search space (and thus, the difficulty) of any brute force attack. </p>\n\n<p><strong>Mitigating DDOS attacks:</strong></p>\n\n<p>To mitigate DDOS attacks, however, you need to do a bit more legwork. DDOS attacks are <strong>hard</strong> to defend against, and its especially hard if you don't control the network your server is on.</p>\n\n<p>That being said, there are a few server-side things you can do:</p>\n\n<ul>\n<li>Installing and configuring a web-application firewall, like <a href=\"https://www.modsecurity.org/about.html\" rel=\"nofollow\">mod_security</a>, to reject incoming connections that violate rules that you define.</li>\n<li>Setting up an IDS system, like <a href=\"https://www.snort.org/\" rel=\"nofollow\">Snort</a>, to detect when a DDOS attack is occurring and take the first steps to mitigate it</li>\n<li>See <a href=\"http://stackoverflow.com/a/32761682/5019769\">@Martin Muller's post</a> for another excellent option, <a href=\"http://www.fail2ban.org/wiki/index.php/Main_Page\" rel=\"nofollow\">fail2ban</a></li>\n<li>Creating your own Tomcat <code>Valve</code>, as described <a href=\"http://www.tomcatexpert.com/ask-the-experts/useragentvalve\" rel=\"nofollow\">here</a>, to reject incoming requests by their <code>User-Agents</code> (or any other criterion) as a last line of defense. </li>\n</ul>\n\n<p>In the end, however, there is only so much you can do to stop a DDOS attack for free. A server has only so much memory, so many CPU cycles, and so much network bandwidth; with enough incoming connections, even the most efficient firewall won't keep you from going down. You'll be better able to weather DDOS attacks if you invest in a higher-bandwidth internet connection and more servers, or if you deploy your application on <a href=\"https://aws.amazon.com/products/?nc2=h_ql_ny_livestream_blu\" rel=\"nofollow\">Amazon Web Services</a>, or if you bought one of many consumer and enterprise DDOS mitigation products (<a href=\"http://stackoverflow.com/a/32767822/5019769\">@SDude has some excellent recommendations in his post</a>). None of those options are cheap, quick, or easy, but they're what's available. </p>\n\n<p>Bottom Line: </p>\n\n<p><strong>If you rely on your application code to mitigate a DDOS, you've already lost</strong></p>\n", "title": "How to stop hack/DOS attack on web API", "answer_id": 32636048, "link": "http://stackoverflow.com/questions/32575924/how-to-stop-hack-dos-attack-on-web-api/32636048#32636048", "tags": ["java", "android", "security", "http", "hacking"]}, {"body": "<p>If D-DOS is attack is severe, application level checks does not work at all. Entire bandwidth will be consumed by D-DOS clients and your application level checks won't be triggered. Practically your web service does not run at all.</p>\n\n<p>If you have to keep your application safe from severe D-DOS attacks, you do not have any other option except relying on third party tools by paying money. One of the Clean pipe provider ( who sends only good traffic)  tools I can bank on from my past experience : <a href=\"https://www.neustar.biz/services/ddos-protection\" rel=\"nofollow\">Neustar</a></p>\n\n<p>If D-DOS attack is mild in your website, you can implement application level checks. For example, below configuration will restrict maximum number of connections from single IP as quoted in <a href=\"http://stackoverflow.com/questions/32182350/restrict-unwanted-calls-to-the-server/32182440#32182440\">Restrict calls from single IP</a> </p>\n\n<pre><code>&lt;Directory /home/*/public_html&gt; -- You can change this location\n    MaxConnPerIP 1  \n    OnlyIPLimit audio/mpeg video\n&lt;/Directory&gt;\n</code></pre>\n\n<p>For more insight into D-DOS attack, visit <a href=\"https://en.wikipedia.org/wiki/Denial-of-service_attack#Prevention_and_response\" rel=\"nofollow\">Wiki link</a>. It provides list of preventive &amp; responsive tools which includes : <strong>Firewalls, Switches, Routers, IPs Based Prevention, D-DOS based defences</strong> </p>\n\n<p>and finally </p>\n\n<p><strong><em>Clean pipes</em></strong> (All traffic is passed through a \"cleaning center\" or a \"scrubbing center\" via various methods such as proxies, tunnels or even direct circuits, which separates \"bad\" traffic (DDoS and also other common internet attacks) and only sends good traffic beyond to the server)</p>\n\n<p>You can find 12 distributors of Clean pipes.</p>\n", "title": "How to stop hack/DOS attack on web API", "answer_id": 32643483, "link": "http://stackoverflow.com/questions/32575924/how-to-stop-hack-dos-attack-on-web-api/32643483#32643483", "tags": ["java", "android", "security", "http", "hacking"]}, {"body": "<p>The best way is to prevent the access to your services entirely for those IP addresses who have failed let's say 3 times. This will take most of the load from your server as the attacker gets blocked before Tomcat even has to start a thread for this user.</p>\n\n<p>One of the best tools to achieve this is called fail2ban (<a href=\"http://www.fail2ban.org\" rel=\"nofollow\">http://www.fail2ban.org</a>). It is provided as a package in all major linux distributions.</p>\n\n<p>What you have to do is basically log the failed attempts into a file and create a custom filter for fail2ban. Darryn van Tonder has a nice example on how to write your own filter on his blog: <a href=\"https://darrynvt.wordpress.com/tag/custom-fail2ban-filters/\" rel=\"nofollow\">https://darrynvt.wordpress.com/tag/custom-fail2ban-filters/</a></p>\n", "title": "How to stop hack/DOS attack on web API", "answer_id": 32761682, "link": "http://stackoverflow.com/questions/32575924/how-to-stop-hack-dos-attack-on-web-api/32761682#32761682", "tags": ["java", "android", "security", "http", "hacking"]}, {"body": "<p>If it's big enough you just can't stop it alone. You can do all the optimisation you want at the app level, but you'll still go down. In addition to app-level security for prevention (as in FSQ's answer) you should use proven solutions leaving the heavy lifting to professionals (if you are serious about your business). My advise is:</p>\n\n<ol>\n<li>Sign-up for <a href=\"https://www.cloudflare.com/\" rel=\"nofollow\">CloudFlare</a> or <a href=\"https://www.incapsula.com/\" rel=\"nofollow\">Incapsula</a>. This is day to day for them.</li>\n<li>Consider using <a href=\"http://aws.amazon.com/api-gateway/\" rel=\"nofollow\">AWS API gateway</a> as the second stage for your API requests. You'll enjoy filtering, throttling, security,auto-scaling and HA for your API at <em>Amazon scale</em>. Then you can forward the valid requests to your machines (in or outside amazon)</li>\n</ol>\n\n<p>Internet --> CloudFlare/Incapsula --> AWS API Gateway --> Your API Server</p>\n\n<p>0,02</p>\n\n<p>PS: I think this question belongs to <a href=\"http://security.stackexchange.com/\">Sec</a></p>\n", "title": "How to stop hack/DOS attack on web API", "answer_id": 32767822, "link": "http://stackoverflow.com/questions/32575924/how-to-stop-hack-dos-attack-on-web-api/32767822#32767822", "tags": ["java", "android", "security", "http", "hacking"]}, {"body": "<p>For a targeted and highly distributed DOS attack the only practical solution (other than providing the capacity to soak it up) is to profile the attack, identify the 'tells' and route that traffic to a low resource handler.</p>\n\n<p>Your question has some tells  - that the request is invalid, but presumably there is too much cost in determining that. That the requests originate from a specific group of networks and that presumably they occur in bursts.</p>\n\n<p>In your comments you've told us at least one other tell - the user agent is null.</p>\n\n<p>Without adding any additional components, you could start by tarpitting the connection - if a request matching the profile comes in, go ahead and validate the key, but then have your code sleep for a second or two. This will reduce the rate of requests from these clients at a small cost.</p>\n\n<p>Another solution would be to use log failures matching the tell and use <a href=\"http://www.fail2ban.org/wiki/index.php/Main_Page\" rel=\"nofollow\">fail2ban</a> to reconfigure your firewall in real time to drop all packets from the source address for a while.</p>\n\n<p>No, its unlikely you will be able to identify the app without getting hold of an affected device.</p>\n", "title": "How to stop hack/DOS attack on web API", "answer_id": 32771700, "link": "http://stackoverflow.com/questions/32575924/how-to-stop-hack-dos-attack-on-web-api/32771700#32771700", "tags": ["java", "android", "security", "http", "hacking"]}, {"body": "<p>Here are a couple ideas. There are a number of strategies in addition, but this should get you started. Also realize that amazon gets ddos'd on a frequent basis and their systems tend to have a few heuristics that harden them (and therefore you) from these attacks, particularly if you are using Elastic load balancing, which you should be using anyway.</p>\n\n<ul>\n<li>Use a CDN -- they often have ways of detecting and defending against ddos. Akamai, mastery, or amazons own cloud front.</li>\n<li>Use iptables to blacklist offensive ips. The more tooling you have around this, the faster you can blok/unblock</li>\n<li><p>Use throttling mechanisms to prevent large numbers of requests</p></li>\n<li><p>Automatically deny requests that are very large (say greater than 1-2mb; unless you have a photo uploading service or similar) before they get to your application</p></li>\n<li><p>Prevent cascading failures by placing a limit on the total number of connections to other components in your system; for example, dont let your database server become overloaded by opening a thousand connections to it.</p></li>\n</ul>\n", "title": "How to stop hack/DOS attack on web API", "answer_id": 37107681, "link": "http://stackoverflow.com/questions/32575924/how-to-stop-hack-dos-attack-on-web-api/37107681#37107681", "tags": ["java", "android", "security", "http", "hacking"]}], "question_id": 32575924}, {"body": "<p>I have a question regarding Java 8 inference with respect to lambdas and their related exception signatures.</p>\n\n<p>If I define some method foo:</p>\n\n<pre><code>public static &lt;T&gt; void foo(Supplier&lt;T&gt; supplier) {\n    //some logic\n    ...\n}\n</code></pre>\n\n<p>then I get the nice and concise semantic of being able to write <code>foo(() -&gt; getTheT());</code> in most cases for a given <code>T</code>. However, in this example, if my <code>getTheT</code> operation declares that it <code>throws Exception</code>, my <code>foo</code> method which takes a Supplier no longer compiles: the Supplier method signature for <code>get</code> doesn't throw exceptions.</p>\n\n<p>It seems like a decent way to get around this would be to overload foo to accept either option, with the overloaded definition being:</p>\n\n<pre><code>public static &lt;T&gt; void foo(ThrowingSupplier&lt;T&gt; supplier) {\n   //same logic as other one\n   ...\n}\n</code></pre>\n\n<p>where ThrowingSupplier is defined as</p>\n\n<pre><code>public interface ThrowingSupplier&lt;T&gt; {\n   public T get() throws Exception;\n}\n</code></pre>\n\n<p>In this way, we have one Supplier type which throws exceptions and one which doesn't. The desired syntax would be something like this:</p>\n\n<pre><code>foo(() -&gt; operationWhichDoesntThrow()); //Doesn't throw, handled by Supplier\nfoo(() -&gt; operationWhichThrows()); //Does throw, handled by ThrowingSupplier\n</code></pre>\n\n<p>However, this causes issues due to the lambda type being ambiguous (presumably unable to resolve between Supplier and ThrowingSupplier). Doing an explicit cast a la <code>foo((ThrowingSupplier)(() -&gt; operationWhichThrows()));</code> would work, but it gets rid of most of the conciseness of the desired syntax.</p>\n\n<p>I guess the underlying question is: if the Java compiler is able to resolve the fact that one of my lambdas is incompatible due to it throwing an exception in the Supplier-only case, why isn't it able to use that same information to derive the type of the lambda in the secondary, type-inference case?</p>\n\n<p>Any information or resources which anyone could point me to would likewise be much appreciated, as I'm just not too sure where to look for more information on the matter.</p>\n\n<p>Thanks!</p>\n", "tags": ["java", "exception", "lambda", "java-8", "type-inference"], "title": "Why Doesn&#39;t Java 8 Type Inference Consider Exceptions Thrown by Lambdas in Overload Selection?", "answer_count": 3, "creation_date": 1441078156, "score": 36, "link": "http://stackoverflow.com/questions/32323081/why-doesnt-java-8-type-inference-consider-exceptions-thrown-by-lambdas-in-overl", "answers": [{"body": "<p>Any lambda which could be accepted as a <code>Supplier&lt;T&gt;</code> can also be accepted as a <code>ThrowingSupplier&lt;T&gt;</code>. The following compiles:</p>\n\n<pre><code>public static interface ThrowingSupplier&lt;T&gt;{\n    public T get() throws Exception;\n}\n\npublic static &lt;T&gt; void foo(ThrowingSupplier&lt;T&gt; supplier) {\n\n}\n\npublic static String getAString(){\n    return \"Hello\";\n}\n\npublic static String getAnotherString() throws Exception{\n    return \"World\";\n}\n\npublic static void main(String[] args) {\n    foo(()-&gt;getAString());\n    foo(()-&gt;getAnotherString());\n} \n</code></pre>\n\n<p>Given the above, you probably don't need this, but if <code>foo</code> <em>must</em> accept a non-throwing <code>Supplier&lt;T&gt;</code>, you can always wrap the Exception-throwing method in a method which launders it into an unchecked Exception:</p>\n\n<pre><code>public static &lt;T&gt; void foo(Supplier&lt;T&gt; supplier) {\n\n}\n\npublic static String getAString(){\n    return \"Hello\";\n}\n\npublic static String getAnotherString() throws Exception{\n    return \"World\";\n}\n\npublic static String getAnotherStringUnchecked(){\n    try{\n        return getAnotherString();\n    } catch(Exception e){\n        throw new RuntimeException(\"Error getting another string\",e);\n    }\n}   \n\npublic static void main(String[] args) throws Exception{\n    foo(()-&gt;getAString());\n    foo(()-&gt;getAnotherStringUnchecked());\n}\n</code></pre>\n", "title": "Why Doesn&#39;t Java 8 Type Inference Consider Exceptions Thrown by Lambdas in Overload Selection?", "answer_id": 32323305, "link": "http://stackoverflow.com/questions/32323081/why-doesnt-java-8-type-inference-consider-exceptions-thrown-by-lambdas-in-overl/32323305#32323305", "tags": ["java", "exception", "lambda", "java-8", "type-inference"]}, {"body": "<p>If it makes you feel any better, this topic was indeed carefully considered during the JSR-335 design process.  </p>\n\n<p>The question is not \"why isn't it able\", but \"why did we choose not to.\"  When we find multiple potentially applicable overloads, we certainly could have chosen to speculatively attribute the lambda body under each set of signatures, and prune those candidates for which the lambda body failed to type-check.  </p>\n\n<p>However, we concluded that doing so would likely do more harm than good; it means, for example, that small changes to the method body, under this rule, could cause some method overload selection decisions to silently change without the user intending to do so.  In the end, we concluded that using the presence of errors in the method body to discard a potentially applicable candidate would cause more confusion than benefit, especially given that there is a simple and safe workaround -- provide a target-type.  We felt that reliability and predictability here outweighed optimal concision.  </p>\n", "title": "Why Doesn&#39;t Java 8 Type Inference Consider Exceptions Thrown by Lambdas in Overload Selection?", "answer_id": 32323348, "link": "http://stackoverflow.com/questions/32323081/why-doesnt-java-8-type-inference-consider-exceptions-thrown-by-lambdas-in-overl/32323348#32323348", "tags": ["java", "exception", "lambda", "java-8", "type-inference"]}, {"body": "<p>First of all, you don' have to overload :D - overloading is never a necessity; use 2 different method names, e.g. <code>foo</code> and <code>fooX</code></p>\n\n<p>Secondly, I don't see why you need 2 methods here. If you want to handle checked and unchecked exceptions differently, it can be done at runtime. To achieve \"exception transparency\", you can do</p>\n\n<pre><code>interface SupplierX&lt;T, X extends Throwable&gt;\n{\n    T get() throws X;\n}\n\n&lt;T, X extends Throwable&gt; void foo(Supplier&lt;T, X&gt; supplier)  throws X { .. }\n\n\nfoo( ()-&gt;\"\" );  // throws RuntimeException\n\nfoo( ()-&gt;{ throw new IOException(); } );  // X=IOException\n</code></pre>\n\n<p>Finally, disambiguity can be achieved throw lambda return type; the compiler uses the return type as if using an argument type for choosing the most specific method. This gives us the idea to wrap the value together with the exception type, as <code>Result&lt;T,X&gt;</code>, a \"monad\" as they say. </p>\n\n<pre><code>interface Result&lt;T, X extends Throwable&gt;\n{\n    T get() throws X;\n}\n\n// error type embedded in return type, not in `throws` clause\n\nstatic Result&lt;String,        Exception&gt; m1(){ return ()-&gt;{ throw new Exception();};  }\nstatic Result&lt;String, RuntimeException&gt; m2(){ return ()-&gt;{ return \"str\";         };  }\n\n  // better to have some factory method, e.g. return Result.success(\"str\");\n\npublic static void main(String[] args)\n{\n    foo(()-&gt;m1());  // foo#2 is not applicable\n    foo(()-&gt;m2());  // both applicable; foo#2 is more specific\n}\n\n\n\ninterface S1&lt;T&gt; { T get(); }  \n\nstatic &lt;T&gt; void foo(S1&lt;Result&lt;T, ? extends        Exception&gt;&gt; s)\n{\n    System.out.println(\"s1\");}\n}\n\n\ninterface S2&lt;T&gt; { T get(); }  // can't have two foo(S1) due to erasure\n\nstatic &lt;T&gt; void foo(S2&lt;Result&lt;T, ? extends RuntimeException&gt;&gt; s)\n{\n    System.out.println(\"s2\");\n}\n</code></pre>\n", "title": "Why Doesn&#39;t Java 8 Type Inference Consider Exceptions Thrown by Lambdas in Overload Selection?", "answer_id": 32323641, "link": "http://stackoverflow.com/questions/32323081/why-doesnt-java-8-type-inference-consider-exceptions-thrown-by-lambdas-in-overl/32323641#32323641", "tags": ["java", "exception", "lambda", "java-8", "type-inference"]}], "question_id": 32323081}, {"body": "<p>I am testing a business service with TestNG, mockito unit tests in spring boot application.</p>\n\n<p>Application is multi-module spring boot project.And I am writing unit tests  for business module.</p>\n\n<p>I have added following dependencies related testing in pom,</p>\n\n<pre><code>&lt;dependency&gt;\n  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n  &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n  &lt;scope&gt;test&lt;/scope&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n   &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;\n   &lt;scope&gt;test&lt;/scope&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.testng&lt;/groupId&gt;\n    &lt;artifactId&gt;testng&lt;/artifactId&gt;\n    &lt;version&gt;${testng.version}&lt;/version&gt;\n    &lt;scope&gt;test&lt;/scope&gt;\n &lt;/dependency&gt;\n &lt;dependency&gt;\n    &lt;groupId&gt;org.mockito&lt;/groupId&gt;\n    &lt;artifactId&gt;mockito-core&lt;/artifactId&gt;\n    &lt;scope&gt;test&lt;/scope&gt;\n &lt;/dependency&gt;\n &lt;dependency&gt;\n     &lt;groupId&gt;org.hsqldb&lt;/groupId&gt;\n     &lt;artifactId&gt;hsqldb&lt;/artifactId&gt;\n     &lt;scope&gt;test&lt;/scope&gt;\n &lt;/dependency&gt;\n &lt;dependency&gt;\n     &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n     &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;\n     &lt;scope&gt;test&lt;/scope&gt;\n &lt;/dependency&gt;\n &lt;dependency&gt;\n     &lt;groupId&gt;javax.el&lt;/groupId&gt;\n     &lt;artifactId&gt;el-api&lt;/artifactId&gt;\n     &lt;version&gt;${javaxel.version}&lt;/version&gt;\n     &lt;scope&gt;test&lt;/scope&gt;\n &lt;/dependency&gt;\n &lt;dependency&gt;\n      &lt;groupId&gt;org.glassfish&lt;/groupId&gt;\n      &lt;artifactId&gt;javax.servlet&lt;/artifactId&gt;\n      &lt;version&gt;${javax.servlet.version}&lt;/version&gt;\n      &lt;scope&gt;test&lt;/scope&gt;\n &lt;/dependency&gt;\n</code></pre>\n\n<p>My wrapper annotation look like</p>\n\n<pre><code>@Service\n@Transactional\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Inherited\npublic @interface MyServiceAnnotation{}\n</code></pre>\n\n<p>My TestApp looks like</p>\n\n<pre><code>@SpringBootApplication\npublic class TestApp{ .... }\n</code></pre>\n\n<p>My Business Service looks like</p>\n\n<pre><code>@MyServiceAnnotation\npublic class AddressServiceImpl implements AddressService {\n       @Autowire\n       UserDAO userDAO;\n       @Autowire\n       AddressDAO addressDAO;\n\n       public Address find(int userId) {\n              user =  userDAO.findOne(userId);\n              /** if I run following test then I get user NULL.\n                  But it should get user object which I have created\n                  in data provider \n               **/\n              if(user == null ) { throw new BadReqExcp(\"invalid user Id\", 101); }\n              address = user.findAddresses();\n              if(address is empty) { throw new BadReqExcp(\"add not found\", 102);}\n              return address;\n       }\n}\n</code></pre>\n\n<p>MyTestClass looks like</p>\n\n<pre><code>@ContextConfiguration(classes = { TestApp.class })\nclass MyTestClass{ \n    @Mock\n    UserDAO userDAO;\n\n    @InjectMocks\n    @Autowire\n    AddressService addressServie;\n\n    @BeforeMethod\n    public void initMock() {\n        MockitoAnnotations.initMocks(this);\n    }\n\n    @Test(dataProvider = \"getUser\", dataProviderclass = UserDP.class)\n    public void shouldThrowExceptionAddressNotFound(int userId, User user)\n    {\n        when(userDAO.findOne(userId)).thenReturn(user);  //here dao call should return user but it is returning null\n         try{\n              addressService.find(userId);\n         }\n         catch(BadReqExcp e){\n              // Here errro code should be 102 but fount 101\n               assertEquals(e.getErrorCode(), 102);\n         }\n    }\n}\n</code></pre>\n\n<p>If I don't use <code>@Target(ElementType.TYPE)</code>, <code>@Retention(RetentionPolicy.RUNTIME)</code>, <code>@Inherited</code> these annotations then my mock DAO calls in test works fine.</p>\n\n<p>I need above annotations explicitly because if I do not use them then,</p>\n\n<p>For example, If I want to perform one single task which uses multiple business service then <strong>they wont happen in ONE transaction</strong>.\nIn other words if a business call uses multiple business services say <code>ServiceA</code> and <code>ServiceB</code>. Call goes from <code>serviceA</code> to <code>serviceB</code>. If an exception occurs in <code>serviceB</code> then database changes done by <code>serviceA</code> wont rollback.</p>\n\n<p><strong>When I use above annotations then above example works BUT mock DAO calls in junit tests does not works.</strong></p>\n\n<p>Do I have wrong dependencies in pom?</p>\n\n<ol>\n<li>Why this is not working ?</li>\n<li>What would be the solution over it ?</li>\n</ol>\n\n<p><a href=\"https://github.com/prashant-shilimkar/spring-boot-testng\"><strong>Git Repository Source Code</strong></a> , here you will get sample code.It is giving me some error while compiling. </p>\n", "tags": ["java", "unit-testing", "spring-boot", "testng", "mockito"], "title": "TestNG unit test not working after annotating service to test with @Retention, @Transactional, @Inherited", "answer_count": 4, "creation_date": 1436439561, "score": 36, "link": "http://stackoverflow.com/questions/31315433/testng-unit-test-not-working-after-annotating-service-to-test-with-retention", "answers": [{"body": "<p>I think that problem may be caused by annotation processing order.</p>\n\n<p>You probably can try to set internal state of your service explicitly in before method like so:</p>\n\n<pre><code>@Mock\nUserDAO userDAO;\n\n@Autowire\nAddressService addressServie;\n\n@BeforeMethod\npublic void initMock() {\n    MockitoAnnotations.initMocks(this);\n    // using mockito Whitebox\n    org.mockito.internal.util.reflection.Whitebox.setInternalState(addressServie, \"userDAO\", userDAO);\n    /* or using spring test method\n    org.springframework.test.util.ReflectionTestUtils.setField(addressServie, \"userDAO\", userDAO);*/\n}\n</code></pre>\n\n<p>and check whether error still occurs</p>\n", "title": "TestNG unit test not working after annotating service to test with @Retention, @Transactional, @Inherited", "answer_id": 31829779, "link": "http://stackoverflow.com/questions/31315433/testng-unit-test-not-working-after-annotating-service-to-test-with-retention/31829779#31829779", "tags": ["java", "unit-testing", "spring-boot", "testng", "mockito"]}, {"body": "<p>Remove all your annotations. You need something special to make the transactions work.</p>\n\n<p><strong>Problem:</strong></p>\n\n<blockquote>\n  <p>Call goes from serviceA to serviceB. If an exception occurs in\n  serviceB then database changes done by serviceA wont rollback</p>\n</blockquote>\n\n<p><strong>Spring\u2019s transaction manager</strong> provides a technology-independent API that allows you to start\na new transaction by calling the getTransaction() method and manage it by </p>\n\n<p>commit()<br>\nrollback()</p>\n\n<p>As PlatformTransactionManager is an abstract unit for\ntransaction Management, </p>\n\n<p>the methods you called for transaction management are guaranteed\nto be technology independent.</p>\n\n<pre><code>    import org.springframework.dao.DataAccessException;\n    import org.springframework.jdbc.core.support.JdbcDaoSupport;\n    import org.springframework.transaction.PlatformTransactionManager;\n    import org.springframework.transaction.TransactionDefinition;\n    import org.springframework.transaction.TransactionStatus;\n    import org.springframework.transaction.support.DefaultTransactionDefinition;\n    public class TransactionalJdbcBookShop extends JdbcDaoSupport implements BookShop {\n    @Autowired\n    private PlatformTransactionManager transactionManager;\n</code></pre>\n\n<p>.....</p>\n\n<p>then inside your dao method you can configure commit and rollback method.</p>\n\n<pre><code>    public void purchase(String isbn, String username) {\n    TransactionDefinition def = new DefaultTransactionDefinition();\n    TransactionStatus status = transactionManager.getTransaction(def);\n    try {\n    //Your query over here\n    transactionManager.commit(status);\n    } catch (DataAccessException e) {\n    //if the above query fails then\n    transactionManager.rollback(status);\n    throw e;\n    }\n    }\n</code></pre>\n\n<p>A transactionmanager is declared in the XML configuration file as a normal bean.</p>\n\n<p>For\nexample,</p>\n\n<p>the following bean configuration declares a DataSourceTransactionManager instance.</p>\n\n<p>It requires the dataSource property to be set so that it can manage transactions for connectionsmade\nby this data source.</p>\n\n<pre><code>&lt;bean id=\"transactionManager\"\nclass=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\"&gt;\n&lt;property name=\"dataSource\" ref=\"dataSource\" /&gt;\n&lt;/bean&gt;\n&lt;bean id=\"bookShop\"\nclass=\"com.apress.springrecipes.bookshop.TransactionalJdbcBookShop\"&gt;\n&lt;property name=\"dataSource\" ref=\"dataSource\" /&gt;\n&lt;property name=\"transactionManager\" ref=\"transactionManager\" /&gt;\n&lt;/bean&gt;\n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/questions/25495629/how-can-i-use-spring-boot-auto-configured-beans-in-xml-configuration-files\">How can I use Spring Boot auto-configured beans in XML configuration files?</a></p>\n\n<p>You can also go through the github to implement bean inside your app over <a href=\"https://github.com/ccampo133/autoconfig-test/tree/master\" rel=\"nofollow\">here</a></p>\n\n<p>Once you have a transaction definition, </p>\n\n<p>You can ask the transaction manager to start a new transaction with that definition by calling the getTransaction() method. </p>\n\n<p>Then it will\nreturn a TransactionStatus object to keep track of the transaction status. </p>\n\n<p>If all the statements\nexecute successfully, you ask the transaction manager to commit this transaction by passing\nin the transaction status. </p>\n\n<p>As all exceptions thrown by the Spring JDBC template are subclasses\nof DataAccessException, you ask the transactionmanager to roll back the transaction when this kind of exception is caught.</p>\n\n<p>In this class, you have declared the transaction manager property of the general type\n<strong>PlatformTransactionManager</strong>. </p>\n\n<p>Now you have to inject an appropriate transaction manager\nimplementation. </p>\n\n<p>As you are dealing with only a single data source and accessing it with JDBC,\nyou should choose <strong>DataSourceTransactionManager</strong>.</p>\n", "title": "TestNG unit test not working after annotating service to test with @Retention, @Transactional, @Inherited", "answer_id": 32219066, "link": "http://stackoverflow.com/questions/31315433/testng-unit-test-not-working-after-annotating-service-to-test-with-retention/32219066#32219066", "tags": ["java", "unit-testing", "spring-boot", "testng", "mockito"]}, {"body": "<p>Can you try using <a href=\"http://docs.mockito.googlecode.com/hg/1.9.5/org/mockito/runners/MockitoJUnitRunner.html\" rel=\"nofollow\">MockitoJUnitRunner</a>.</p>\n\n<pre><code>@RunWith(MockitoJUnitRunner.class)\n@ContextConfiguration(classes = { TestApp.class })\nclass MyTestClass{ \n..\n}\n</code></pre>\n", "title": "TestNG unit test not working after annotating service to test with @Retention, @Transactional, @Inherited", "answer_id": 32243662, "link": "http://stackoverflow.com/questions/31315433/testng-unit-test-not-working-after-annotating-service-to-test-with-retention/32243662#32243662", "tags": ["java", "unit-testing", "spring-boot", "testng", "mockito"]}, {"body": "<p>I recommend you to keep tests simple. You can take profit of DI benefits. For further details please visit <a href=\"http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-testing.html\">Spring documentation</a>:</p>\n\n<blockquote>\n  <p>One of the major advantages of dependency injection is that it should make your code easier to unit test. You can simply instantiate objects using the new operator without even involving Spring. You can also use mock objects instead of real dependencies.</p>\n</blockquote>\n\n<p>Your test class should look like this.</p>\n\n<pre><code>public class AddressTest {\n\n    @Mock\n    private UserDAO userDAO;\n\n    @Mock\n    private AddressDAO addressDAO;\n\n    @InjectMocks\n    private AddressService addressServie;\n\n    @BeforeMethod\n    public void initMock() {\n        addressServie = new AddressServiceImpl();\n        MockitoAnnotations.initMocks(this);\n    }\n\n    @Test(dataProvider = \"getUser\", dataProviderClass = UserDP.class)\n    public void shouldThrowExceptionAddressNotFound(int userId, User user) {\n        when(userDAO.findOne(userId)).thenReturn(user);\n        try {\n            addressServie.findAllAddress(userId);\n        } catch (BadRequestException badRequestException) {\n            assertEquals(badRequestException.getErrorCode(), 102);\n        }\n    }\n}\n</code></pre>\n\n<p>You should also check for null address list in your implementation. The test fails because provider class provides the test with a user instance that does not have address list initialized.</p>\n\n<pre><code>@Override\npublic List&lt;Address&gt; findAllAddress(int userId) {\n    User user = userDAO.findOne(userId);\n    if (user == null) {\n        throw new BadRequestException(\"Invalid user id\", 101);\n    }\n    List&lt;Address&gt; addresses = user.getAddresses();\n    if (addresses == null || addresses.isEmpty()) {\n        throw new BadRequestException(\"Address Not found\", 102);\n    }\n    return addresses;\n}\n</code></pre>\n", "title": "TestNG unit test not working after annotating service to test with @Retention, @Transactional, @Inherited", "answer_id": 32257786, "link": "http://stackoverflow.com/questions/31315433/testng-unit-test-not-working-after-annotating-service-to-test-with-retention/32257786#32257786", "tags": ["java", "unit-testing", "spring-boot", "testng", "mockito"]}], "question_id": 31315433}, {"body": "<p>I'm trying to show an icon next to an item within my menu for my navigation drawer, but for some reason the icon always appears in grey rather than the original colour (brown). Is there any way of preventing this from happening in order to show the icon's original colour?</p>\n\n<p><strong>MainActivity.java</strong></p>\n\n<pre><code>public class MainActivity extends AppCompatActivity {\n\n    private DrawerLayout mDrawerLayout;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);\n\n        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);\n        if (navigationView != null) {\n            setupDrawerContent(navigationView);\n        }\n    }\n\n    private void setupDrawerContent(NavigationView navigationView) {\n        navigationView.setNavigationItemSelectedListener(\n                new NavigationView.OnNavigationItemSelectedListener() {\n            @Override\n            public boolean onNavigationItemSelected(MenuItem menuItem) {\n                mDrawerLayout.closeDrawers();\n\n                return true;\n            }\n        });\n    }\n}\n</code></pre>\n\n<p><strong>drawer_view.xml</strong></p>\n\n<pre><code>&lt;menu xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n    &lt;item android:title=\"Section\"&gt;\n        &lt;menu&gt;\n            &lt;item\n                android:id=\"@+id/navigation_item_1\"\n                android:icon=\"@drawable/ic_browncircle\"\n                android:title=\"Sub item 1\" /&gt;\n        &lt;/menu&gt;\n    &lt;/item&gt;\n&lt;/menu&gt;\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/bb34ml.png\" alt=\"enter image description here\"></p>\n", "tags": ["java", "android", "xml", "android-support-library"], "title": "Navigation drawer item icon not showing original colour", "answer_count": 3, "creation_date": 1436825088, "score": 35, "link": "http://stackoverflow.com/questions/31394265/navigation-drawer-item-icon-not-showing-original-colour", "answers": [{"body": "<p>You can try using a tinted drawable, not sure if it works below 5.0. </p>\n\n<p>Create a drawable and add the following code.</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;bitmap\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:src=\"@drawable/ic_browncircle\"\n    android:tint=\"@color/brownColor\"/&gt;\n</code></pre>\n\n<p>And then change your menu item drawable to the one you just created. If that doesn't work, then I'm not sure of any other solutions. You can try this library: <a href=\"https://github.com/mikepenz/MaterialDrawer\" rel=\"nofollow\">https://github.com/mikepenz/MaterialDrawer</a> I use it a lot in my projects.</p>\n", "title": "Navigation drawer item icon not showing original colour", "answer_id": 31395899, "link": "http://stackoverflow.com/questions/31394265/navigation-drawer-item-icon-not-showing-original-colour/31395899#31395899", "tags": ["java", "android", "xml", "android-support-library"]}, {"body": "<p>I've tried something similar in one of my app. And yes, it appears that the icon color doesn't change. But I've managed to do with another workaround. Here's my <code>ic_browncircle.xml</code></p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:shape=\"oval\"\n    android:tint=\"@color/brown\"\n    &gt;\n  &lt;size\n      android:height=\"3dp\"\n      android:width=\"3dp\"\n      /&gt;\n  &lt;solid android:color=\"@color/brown\"/&gt;\n&lt;/shape&gt;\n</code></pre>\n\n<p>Which I believe is something similar to you but it doesn't have any effect and doesn't change the color. </p>\n\n<p>So what I did is this.</p>\n\n<pre><code>navigationView.getMenu()\n    .findItem(R.id. navigation_item_1)\n    .getIcon()\n    .setColorFilter(Color.parseColor(\"#b69260\"), PorterDuff.Mode.SRC_ATOP);\n</code></pre>\n\n<p>And it seems working. Here's the result.</p>\n\n<p><img src=\"http://i.stack.imgur.com/Z73cQ.png\" alt=\"enter image description here\"></p>\n", "title": "Navigation drawer item icon not showing original colour", "answer_id": 31398223, "link": "http://stackoverflow.com/questions/31394265/navigation-drawer-item-icon-not-showing-original-colour/31398223#31398223", "tags": ["java", "android", "xml", "android-support-library"]}, {"body": "<p>I found the answer here:  <a href=\"http://stackoverflow.com/a/30632980/875249\">http://stackoverflow.com/a/30632980/875249</a></p>\n\n<p>To avoid the link its pretty straightforward:</p>\n\n<pre><code>    mNavigationView.setItemIconTintList(null);\n</code></pre>\n\n<p>This disables all state based tinting, but you can also specify your own list too.  It worked great for me!</p>\n\n<p>Here is where you can get the details on creating a color state list, but its pretty simple too: \n<a href=\"http://developer.android.com/reference/android/content/res/ColorStateList.html\">http://developer.android.com/reference/android/content/res/ColorStateList.html</a></p>\n\n<pre><code>    &lt;selector xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n        &lt;item android:state_checked=\"true\" android:color=\"@color/primary\" /&gt;\n        &lt;item android:state_checked=\"false\" android:color=\"@android:color/white\" /&gt;\n    &lt;/selector&gt;\n</code></pre>\n", "title": "Navigation drawer item icon not showing original colour", "answer_id": 31999206, "link": "http://stackoverflow.com/questions/31394265/navigation-drawer-item-icon-not-showing-original-colour/31999206#31999206", "tags": ["java", "android", "xml", "android-support-library"]}], "question_id": 31394265}, {"body": "<p>So Retrofit 2.0.0 was recently released and theres not really any updated examples on how to use it, but im trying to implement it for a basic API call. Im getting a </p>\n\n<pre><code>java.lang.IllegalArgumentException: Unable to create converter for class` \n</code></pre>\n\n<p>caused by </p>\n\n<pre><code>Caused by: java.lang.IllegalArgumentException: Could not locate converter for class orbyt.app.dataclass. Tried:\n* retrofit.OkHttpBodyConverterFactory\n</code></pre>\n\n<p>When trying to make the api call.</p>\n", "tags": ["java", "android", "retrofit"], "title": "(Retrofit) Could not locate converter for class crashing app", "answer_count": 5, "creation_date": 1441156231, "score": 35, "link": "http://stackoverflow.com/questions/32343183/retrofit-could-not-locate-converter-for-class-crashing-app", "answers": [{"body": "<p>I was facing the same issue. I fixed it by adding :</p>\n\n<pre><code>compile 'com.squareup.retrofit2:converter-gson:&lt;latest-version&gt;'\n</code></pre>\n\n<p>to my build.gradle</p>\n\n<p>Then specify the converter when creating my Retrofit instance.</p>\n\n<pre><code>Retrofit retrofit = new Retrofit.Builder()\n            .baseUrl(Constants.API_BASE_URL)\n            .addConverterFactory(GsonConverterFactory.create())\n            .build();\n</code></pre>\n", "title": "(Retrofit) Could not locate converter for class crashing app", "answer_id": 32353578, "link": "http://stackoverflow.com/questions/32343183/retrofit-could-not-locate-converter-for-class-crashing-app/32353578#32353578", "tags": ["java", "android", "retrofit"]}, {"body": "<p>In Retrofit 2.0, Converter is not included in the package and \nwhen you are using Retrofit 2.0 Make Sure follow new URL pattern</p>\n\n<p><strong>Base URL: always ends with /</strong></p>\n\n<p><strong>@Url: DO NOT start with /</strong></p>\n\n<pre><code>Retrofit retrofit = new Retrofit.Builder()\n        .baseUrl(Constants.API_BASE_URL)\n        .addConverterFactory(GsonConverterFactory.create())\n        .build();\n</code></pre>\n\n<p>For more information about 2.0 Follow this link <a href=\"http://inthecheesefactory.com/blog/retrofit-2.0/en\">Retrofit 2.0: The biggest update</a></p>\n\n<p>And also update build.gradle. </p>\n", "title": "(Retrofit) Could not locate converter for class crashing app", "answer_id": 32652747, "link": "http://stackoverflow.com/questions/32343183/retrofit-could-not-locate-converter-for-class-crashing-app/32652747#32652747", "tags": ["java", "android", "retrofit"]}, {"body": "<p>For Retrofit V2 add the following repositories -</p>\n\n<pre><code>compile 'com.squareup.retrofit2:retrofit:2.0.0'\ncompile 'com.google.code.gson:gson:2.6.2'\ncompile 'com.squareup.retrofit2:converter-gson:2.0.0'\n</code></pre>\n\n<p>Now use below code - </p>\n\n<pre><code>Retrofit retrofit = new Retrofit.Builder()\n            .baseUrl(API_URL)\n            .addConverterFactory(GsonConverterFactory.create())\n            .build();\n</code></pre>\n\n<p>Hope it will help :)</p>\n", "title": "(Retrofit) Could not locate converter for class crashing app", "answer_id": 36134082, "link": "http://stackoverflow.com/questions/32343183/retrofit-could-not-locate-converter-for-class-crashing-app/36134082#36134082", "tags": ["java", "android", "retrofit"]}, {"body": "<p>In the latest Retrofit 2.0,you should import the latest version :</p>\n\n<pre><code>compile 'com.squareup.retrofit2:retrofit:2.0.0'\ncompile 'com.squareup.retrofit2:converter-gson:2.0.0'\ncompile 'com.squareup.retrofit2:adapter-rxjava:2.0.0'\n</code></pre>\n\n<p>Be careful call <code>baseUrl()</code>\uff0cat v2.0,it should be end of \"/\",and at the method ,you would\u2019t start thr url with\"/\" </p>\n\n<pre><code>@POST(\"classes/info\")\nCall&lt;ContactBean&gt; insertInfo(@Body ContactBean bean);\n</code></pre>\n\n<p>And you can see <a href=\"http://square.github.io/retrofit/\" rel=\"nofollow\">Retrofit</a> to get more info!\nHope help !</p>\n", "title": "(Retrofit) Could not locate converter for class crashing app", "answer_id": 36151710, "link": "http://stackoverflow.com/questions/32343183/retrofit-could-not-locate-converter-for-class-crashing-app/36151710#36151710", "tags": ["java", "android", "retrofit"]}, {"body": "<p>Change retrofit version accordingly</p>\n\n<p>For me below dependency was there already</p>\n\n<pre><code>compile 'com.squareup.retrofit2:retrofit:2.0.2'\n</code></pre>\n\n<p>For gson 2.0.2 I changed</p>\n\n<pre><code>compile 'com.squareup.retrofit2:converter-gson:2.0.2'\n</code></pre>\n\n<p>Then add</p>\n\n<pre><code>Retrofit retrofit = new Retrofit.Builder()\n            .baseUrl(Constants.API_BASE_URL)\n            .addConverterFactory(GsonConverterFactory.create())\n            .build();\n</code></pre>\n", "title": "(Retrofit) Could not locate converter for class crashing app", "answer_id": 36676852, "link": "http://stackoverflow.com/questions/32343183/retrofit-could-not-locate-converter-for-class-crashing-app/36676852#36676852", "tags": ["java", "android", "retrofit"]}], "question_id": 32343183}, {"body": "<p>In the <a href=\"https://docs.oracle.com/javase/tutorial/essential/exceptions/advantages.html\">Advantages of Exceptions</a> section of the Java\u2122 tutorials:</p>\n\n<blockquote>\n  <p>A method can duck any exceptions thrown within it, thereby allowing a method farther up the call stack to catch it.</p>\n  \n  <p>[...]</p>\n  \n  <p>...ducking an exception requires some effort on the part of the middleman methods. Any checked exceptions that can be thrown within a method must be specified in its <code>throws</code> clause.</p>\n</blockquote>\n\n<p>What does \"duck an exception\" mean here?  I searched the web and FOLDOC (Free On-line Dictionary of Computing) but didn't find anything that looked promising.</p>\n", "tags": ["java", "exception", "terminology"], "title": "What does &quot;duck an exception&quot; mean?", "answer_count": 4, "creation_date": 1447835157, "score": 35, "link": "http://stackoverflow.com/questions/33774972/what-does-duck-an-exception-mean", "answers": [{"body": "<p>i think it means a method can catch an exception and re-throw it for other method to catch it and handle it as needed. Or just throw a new exception. Or avoid catching an exception and let it bubble up the call stack. The point is to have a method <strong>delegate exception handling</strong> to other method which might be more appropriate to handle a given exception (e.g by having access to necessary data and/or state). But (for <code>java</code>) this requires declaring methods with <code>throws</code> clause all the time, which becomes boilerplate easily</p>\n\n<p>as mentioned in @jmcg's comment, literally \"<em>DUCK simply means to lower your head in order to avoid being hit or seen</em>\" (like ducks do in a river)</p>\n", "title": "What does &quot;duck an exception&quot; mean?", "answer_id": 33775034, "link": "http://stackoverflow.com/questions/33774972/what-does-duck-an-exception-mean/33775034#33775034", "tags": ["java", "exception", "terminology"]}, {"body": "<p>To \"duck an exception\" means \"not handle the exception\". This actually explains the name: <a href=\"http://www.thefreedictionary.com/duck\">to duck</a> means to \"To evade; dodge\".</p>\n\n<p>The method ducking the exception simply doesn't handle it (because, for example, it is not its purpose) and let the exception be thrown to the calling method.</p>\n\n<p>For example, consider a method whose purpose is to count the number of lines in a file. This would be a simple implementation (Java 8):</p>\n\n<pre><code>private static long numberOfLines(Path path) throws IOException {\n    try (BufferedReader br = Files.newBufferedReader(path)) {\n        return br.lines().count();\n    }\n}\n</code></pre>\n\n<p>Note that this method doesn't handle the <code>IOException</code> that is thrown by <code>Files.newBufferedReader(path)</code>, because that's not the method goal. It ducks and let the caller handle it appropriately.</p>\n\n<p>Note the caller might also duck the exception and let <em>its</em> caller handle it, etc.</p>\n", "title": "What does &quot;duck an exception&quot; mean?", "answer_id": 33775114, "link": "http://stackoverflow.com/questions/33774972/what-does-duck-an-exception-mean/33775114#33775114", "tags": ["java", "exception", "terminology"]}, {"body": "<p>Well, ducking simply means to lower your head in order to avoid being hit or seen. In this case, 'duck an exception' just means avoiding your code from getting hit by an exception.</p>\n\n<p>For your method not to be hit by exception, you throw it further up the call stack by declaring a <code>throws</code> exception on your method</p>\n\n<pre><code>public void myMethod() throws IOException {\n\n}\n</code></pre>\n\n<p>If you don't duck, you have to <code>catch</code> it:</p>\n\n<pre><code>public void myMethod() {\n    try {\n       // ...  \n\n    } catch(IOException e) {\n      // handle exception\n    }\n</code></pre>\n", "title": "What does &quot;duck an exception&quot; mean?", "answer_id": 33775120, "link": "http://stackoverflow.com/questions/33774972/what-does-duck-an-exception-mean/33775120#33775120", "tags": ["java", "exception", "terminology"]}, {"body": "<p>I think to duck means re-throw an exception... in other words, ignore it hoping that someone else will handle it :)</p>\n", "title": "What does &quot;duck an exception&quot; mean?", "answer_id": 33831940, "link": "http://stackoverflow.com/questions/33774972/what-does-duck-an-exception-mean/33831940#33831940", "tags": ["java", "exception", "terminology"]}], "question_id": 33774972}, {"body": "<p>I just saw that the 4th candidate got released for Hibernate 5. What's new in 5 compared to earlier versions?</p>\n", "tags": ["java", "hibernate", "jpa", "orm", "hibernate-5.x"], "title": "What&#39;s new in Hibernate 5?", "answer_count": 2, "creation_date": 1439382319, "score": 35, "link": "http://stackoverflow.com/questions/31965179/whats-new-in-hibernate-5", "answers": [{"body": "<p>Some exciting features has been added/enhanced in Hibernate 5.x. Have a quick look.</p>\n\n<h2>1. Hibernate Search</h2>\n\n<blockquote>\n  <p>Hibernate Search transparently indexes your objects and offers fast regular, full-text and geolocation search. Ease of use and easy clustering are core.</p>\n</blockquote>\n\n<ul>\n<li>Full-text search for entities - <em>find by approximation (fuzzy search)</em></li>\n<li>Cluster-friendly - <em>offers several easy to setup clustering strategies</em></li>\n<li>Faceting and geolocation - <em>Geolocalized entities are as easy as @Spatial</em></li>\n</ul>\n\n<p><a href=\"http://hibernate.org/search/\">For more details on Hibernate Search view this.</a></p>\n\n<h2>2. Hibernate Validator</h2>\n\n<p>Hibernate Validator comes with a handful of built-in validation rules like Email, Length, NotBlank etc.</p>\n\n<blockquote>\n  <p>Express validation rules in a standardized way using annotation-based constraints and benefit from transparent integration with a wide variety of frameworks.</p>\n</blockquote>\n\n<p><a href=\"http://hibernate.org/validator/\">For more details on Hibernate Validator view this.</a></p>\n\n<h2>3. Improved Java 8 Support</h2>\n\n<p>Java 8 date/time data types (JSR 310) are supported and can be validated via @Past and @Future. Also Optional and JavaFX types are supported via an improved ValidatedValueUnwrapper.</p>\n\n<h2>4. Hibernate OGM</h2>\n\n<p>Just released the first stable version.</p>\n\n<h2>5. Bootstrapping API</h2>\n\n<p>New bootstrapping API - better determinism, better integration</p>\n\n<hr>\n\n<p>A few other things:</p>\n\n<ul>\n<li>Scanning support for non-JPA usage</li>\n<li>NamingStrategy has been removed in favor of a better designed API</li>\n<li>Ability to handle additional Java types for id attributes marked as GenerationType#AUTO. Built-in support for Number and UUID. Expandable via new org.hibernate.boot.model.IdGeneratorStrategyInterpreter extension.</li>\n<li>Additionally, support for AttributeConverters has been expanded and more fully realized</li>\n</ul>\n\n<p>Check <a href=\"http://hibernate.org/orm/roadmap/#hibernate-orm-5-x\">Hibernate ORM Roadmap</a> for more details.</p>\n", "title": "What&#39;s new in Hibernate 5?", "answer_id": 31975705, "link": "http://stackoverflow.com/questions/31965179/whats-new-in-hibernate-5/31975705#31975705", "tags": ["java", "hibernate", "jpa", "orm", "hibernate-5.x"]}, {"body": "<p>There's a long list of things that have been changed in Hibernate 5:</p>\n\n<ol>\n<li><p>New bootstrap API so we can <a href=\"http://vladmihalcea.com/2015/11/26/how-to-bootstrap-hibernate-without-the-persistence-xml-file/\">bootstrap a JPA environment programmatically without the need of a <code>persistence.xml</code> file</a>.</p></li>\n<li><p>Starting in 5.0 Hibernate Spatial is part of the Hibernate project so we can handle GIS data too.</p></li>\n<li><p>The Java 8 Date and Time types are supported in domain model mappings. The mapping between the standard SQL Date/Time types and the supported Java 8 Date/Time class types looks as follows;</p>\n\n<ul>\n<li>DATE: <code>java.time.LocalDate</code></li>\n<li>TIME: <code>java.time.LocalTime</code>, <code>java.time.OffsetTime</code></li>\n<li>TIMESTAMP: <code>java.time.Instant</code>, <code>java.time.LocalDateTime</code>, <code>java.time.OffsetDateTime</code> and <code>java.time.ZonedDateTime</code></li>\n</ul></li>\n<li><p>The bytecode enhancement mechanism was redesigned from scratch, and Hibernate features both a Maven and a Gradle plugin. There are three main aspects which we can enhance with bytecode instrumentation:</p>\n\n<ul>\n<li><p>Lazy initialization: Fields can be declared as <code>LAZY</code> and they will be fetched only when being accessed for the first time.</p></li>\n<li><p>Dirty checking: Entities are enhanced so that they can keep track of all the properties that get changed after being loaded in a Persistence Context.</p></li>\n<li><p>Bidirectional associations: It's possible to synchronize both sides of a bidirectional association automatically, even if the developer only updates a single side.</p></li>\n</ul></li>\n<li><p>Hibernate's native APIs (<code>Session</code>, etc) have been updated to use generic typed. No need to cast when fetching entities.</p></li>\n<li><p>Hibernate 5.0 expends this to a broader set of types (e.g. <code>UUID</code>).</p></li>\n<li><p>Second-level cache by reference. This feature enables direct storage of entity references into the second level cache for immutable entities.</p></li>\n<li><p>Starting with Hibernate 5.0, we have a completely <a href=\"http://docs.jboss.org/hibernate/orm/5.0/userguide/html_single/Hibernate_User_Guide.html\">new User Guide</a> that was written from scratch.</p></li>\n</ol>\n", "title": "What&#39;s new in Hibernate 5?", "answer_id": 35427268, "link": "http://stackoverflow.com/questions/31965179/whats-new-in-hibernate-5/35427268#35427268", "tags": ["java", "hibernate", "jpa", "orm", "hibernate-5.x"]}], "question_id": 31965179}, {"body": "<p><code>String</code> is a special case in Java. It's a class, which I can examine in the <a href=\"http://hg.openjdk.java.net/jdk7u/jdk7u6/jdk/file/8c2c5d63a17e/src/share/classes/java/lang/String.java\">source code</a>, but it also has its own infix operator <code>+</code>, which seems to be syntactic sugar for <code>StringBuilder</code>. </p>\n\n<p>For example, </p>\n\n<pre><code>\"Hello \" + yourName;\n</code></pre>\n\n<p>could become </p>\n\n<pre><code>new StringBuilder().append(\"Hello \").append(yourName).toString();\n</code></pre>\n\n<p>There are no user-defined operators in Java, so where is <code>+</code> specified for <code>String</code>? </p>\n\n<p>Could the same mechanism be used to make additional operators, such as for vectors? </p>\n", "tags": ["java", "string", "operators", "string-concatenation"], "title": "Where is `+` implemented for Strings in the Java source code?", "answer_count": 5, "creation_date": 1442916640, "score": 34, "link": "http://stackoverflow.com/questions/32714194/where-is-implemented-for-strings-in-the-java-source-code", "answers": [{"body": "<p><code>+</code> is implemented in java <em>compilers</em>. The compiler <em>replaces</em> <code>String</code> + <code>String</code> with either <em>compile time</em> constants or <code>StringBuilder</code> code. Note that this applies to <em>primitives</em> too. i.e, <code>int  i=1+2</code> could get directly replaced to <code>int i=3</code> during compilation itself.</p>\n", "title": "Where is `+` implemented for Strings in the Java source code?", "answer_id": 32714222, "link": "http://stackoverflow.com/questions/32714194/where-is-implemented-for-strings-in-the-java-source-code/32714222#32714222", "tags": ["java", "string", "operators", "string-concatenation"]}, {"body": "<p>Java compilers have the implementation for +. The <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">Javadocs</a> says:</p>\n\n<blockquote>\n  <p>The Java language provides special support for the string\n  concatenation operator ( + ), and for conversion of other objects to\n  strings. <strong>String concatenation is implemented through the\n  StringBuilder(or StringBuffer) class and its append method.</strong> String\n  conversions are implemented through the method toString, defined by\n  Object and inherited by all classes in Java. For additional\n  information on string concatenation and conversion, see Gosling, Joy,\n  and Steele, The Java Language Specification.</p>\n</blockquote>\n\n<p>You can try to check this:</p>\n\n<pre><code>public static void main(String[] args) {\n    String s1 = \"s1\";\n    String s2 = \"s2\";\n    String s3 = s1 + s2;\n    String s4 = new StringBuilder(s1).append(s2).toString();\n}\n</code></pre>\n\n<p>The above code generates the same bytecode for + and when using StringBuilder:</p>\n\n<pre><code>L0\nLINENUMBER 23 L0\nLDC \"s1\"\nASTORE 1\n\nL1\nLINENUMBER 24 L1\nLDC \"s2\"\nASTORE 2\n\n// s3 = s1 + s2\n\nL2\nLINENUMBER 25 L2\n\nNEW java/lang/StringBuilder\nDUP\nALOAD 1\nINVOKESTATIC java/lang/String.valueOf(Ljava/lang/Object;)Ljava/lang/String;\nINVOKESPECIAL java/lang/StringBuilder.&lt;init&gt;(Ljava/lang/String;)V\nALOAD 2\nINVOKEVIRTUAL java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;\nINVOKEVIRTUAL java/lang/StringBuilder.toString()Ljava/lang/String;\n\nASTORE 3\n\n// s4 = new StringBuilder(s1).append(s2).toString()\n\nL3\nLINENUMBER 26 L3\n\nNEW java/lang/StringBuilder\nDUP\nALOAD 1\nINVOKESPECIAL java/lang/StringBuilder.&lt;init&gt;(Ljava/lang/String;)V\nALOAD 2\nINVOKEVIRTUAL java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;\nINVOKEVIRTUAL java/lang/StringBuilder.toString()Ljava/lang/String;\n\nASTORE 4\nL4\nLINENUMBER 27 L4\nRETURN\n</code></pre>\n", "title": "Where is `+` implemented for Strings in the Java source code?", "answer_id": 32714276, "link": "http://stackoverflow.com/questions/32714194/where-is-implemented-for-strings-in-the-java-source-code/32714276#32714276", "tags": ["java", "string", "operators", "string-concatenation"]}, {"body": "<p>You can check with specification. The compiler have the implementation of it, not the Java source code.</p>\n\n<p><a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.18.1\"><code>Java Language Specification- 15.18.1. String Concatenation Operator +</code></a> </p>\n\n<blockquote>\n  <p>An implementation may choose to perform conversion and concatenation in one step to avoid creating and then discarding an intermediate String object. To increase the performance of repeated string concatenation, a Java compiler may use the StringBuffer class or a similar technique to reduce the number of intermediate String objects that are created by evaluation of an expression.</p>\n</blockquote>\n\n<p>It shows the evidence that the implementation is depends on the compiler.</p>\n", "title": "Where is `+` implemented for Strings in the Java source code?", "answer_id": 32714290, "link": "http://stackoverflow.com/questions/32714194/where-is-implemented-for-strings-in-the-java-source-code/32714290#32714290", "tags": ["java", "string", "operators", "string-concatenation"]}, {"body": "<p>While currently most of Java compilers using <code>StringBuilder</code> chain, it's not specified that it should be always in this way. In particular there's a <a href=\"http://openjdk.java.net/jeps/8085796\">proposal</a> to change this drastically in Java-9 replacing with single <code>invokedynamic</code> call and introduce new metafactory which will generate an appropriate <code>MethodHandle</code> in runtime to perform concatenation.</p>\n", "title": "Where is `+` implemented for Strings in the Java source code?", "answer_id": 32714537, "link": "http://stackoverflow.com/questions/32714194/where-is-implemented-for-strings-in-the-java-source-code/32714537#32714537", "tags": ["java", "string", "operators", "string-concatenation"]}, {"body": "<p>As for the language, no, it's not extensible.  This is specific behavior, no other class extends the <code>+</code> operator.</p>\n\n<p>As for where this is done, search for <a href=\"http://hg.openjdk.java.net/jdk8u/jdk8u60/langtools/file/d56703662c0f/src/share/classes/com/sun/tools/javac/jvm/ByteCodes.java\" rel=\"nofollow\"><code>string_add</code> (not a real JVM op)</a> in the following files:</p>\n\n<ul>\n<li><p><a href=\"http://hg.openjdk.java.net/jdk8u/jdk8u60/langtools/file/d56703662c0f/src/share/classes/com/sun/tools/javac/code/Symtab.java\" rel=\"nofollow\">Operator definition</a></p></li>\n<li><p><a href=\"http://hg.openjdk.java.net/jdk8u/jdk8u60/langtools/file/d56703662c0f/src/share/classes/com/sun/tools/javac/jvm/Gen.java\" rel=\"nofollow\">Code generator</a></p></li>\n</ul>\n\n<hr>\n\n<p>As to why, Java was supposed to be simple, or at least simpler than C++, and a basic thing like string manipulation was kind of mandatory.  However, operator overloading would add complexity.</p>\n", "title": "Where is `+` implemented for Strings in the Java source code?", "answer_id": 32728816, "link": "http://stackoverflow.com/questions/32714194/where-is-implemented-for-strings-in-the-java-source-code/32728816#32728816", "tags": ["java", "string", "operators", "string-concatenation"]}], "question_id": 32714194}, {"body": "<p>The languageLevel key gets changed from JDK_1_8 to JDK_1_7 for reasons I am not aware.</p>\n\n<p>What could be going on?</p>\n\n<p>Does this have something to do with the IDE of other developers working on the project? Maybe they have another Android Studio setting?</p>\n\n<p>Here is what pops up after I notice files under source control have changed:</p>\n\n<pre><code>$ git diff\ndiff --git a/.idea/misc.xml b/.idea/misc.xml\nindex fbb6828..5d19981 100644\n--- a/.idea/misc.xml\n+++ b/.idea/misc.xml\n@@ -37,7 +37,7 @@\n     &lt;ConfirmationsSetting value=\"0\" id=\"Add\" /&gt;\n     &lt;ConfirmationsSetting value=\"0\" id=\"Remove\" /&gt;\n   &lt;/component&gt;\n-  &lt;component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" assert-keyword=\"true\" jdk-15=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\"&gt;\n+  &lt;component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" default=\"true\" assert-keyword=\"true\" jdk-15=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\"&gt;\n     &lt;output url=\"file://$PROJECT_DIR$/build/classes\" /&gt;\n   &lt;/component&gt;\n   &lt;component name=\"ProjectType\"&gt;\n</code></pre>\n\n<p>This is my gitignore in case it matters.</p>\n\n<pre><code>.gradle\n/local.properties\n/.idea/workspace.xml\n/.idea/libraries\n.DS_Store\n/build\n/captures\n</code></pre>\n\n<p>How do I proceed so that it just stays one way or the other?</p>\n", "tags": ["java", "android", "android-studio"], "title": "Android .idea/misc.xml&#39;s languageLevel tag keeps changing JDKs", "answer_count": 1, "creation_date": 1443669396, "score": 34, "link": "http://stackoverflow.com/questions/32878888/android-idea-misc-xmls-languagelevel-tag-keeps-changing-jdks", "answers": [{"body": "<p>I solved this problem when I removed and stopped committing the .idea folder to source control.</p>\n\n<p>The problem is that some of these files are machine specific configurations so sharing them could be an issue.</p>\n\n<p>Removing it and other offending files was a two step git process:</p>\n\n<p>1) Add this .gitignore (from <a href=\"http://stackoverflow.com/a/32942758/869936\">http://stackoverflow.com/a/32942758/869936</a>):</p>\n\n<pre><code>#built application files\n*.apk\n*.ap_\n\n# files for the dex VM\n*.dex\n\n# Java class files\n*.class\n\n# generated files\nbin/\ngen/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Windows thumbnail db\nThumbs.db\n\n# OSX files\n.DS_Store\n\n# Eclipse project files\n.classpath\n.project\n\n# Android Studio\n*.iws\n*.iml\n.idea\n.gradle\nbuild/\n*/build/\n</code></pre>\n\n<p>2) For each line of the .gitignore, run <code>git rm line</code> from the command line.</p>\n\n<p>Example:</p>\n\n<pre><code>$ git rm *.iws\n$ git rm *.iml\n$ git rm .idea\n$ git rm .gradle\n$ git rm build/\n$ git rm */build/\n</code></pre>\n\n<p>Add and commit the changes</p>\n\n<p>Now these files will be generated when you open the Android Studio project and they won't be added to git.</p>\n", "title": "Android .idea/misc.xml&#39;s languageLevel tag keeps changing JDKs", "answer_id": 33898839, "link": "http://stackoverflow.com/questions/32878888/android-idea-misc-xmls-languagelevel-tag-keeps-changing-jdks/33898839#33898839", "tags": ["java", "android", "android-studio"]}], "question_id": 32878888}, {"body": "<p>I had add <code>uses-permission</code> including <code>WRITE_EXTERNAL_STORAGE</code>\uff0c<code>MOUNT_UNMOUNT_FILESYSTEMS</code>\uff0c<code>READ_EXTERNAL_STORAGE</code> to <code>AndroidManifest.xml</code>.</p>\n\n<p>When I ran my app in Nexus5(Android6.0),it threw a exception as below:</p>\n\n<p><code>java.io.IOException: open failed: EACCES (Permission denied)</code></p>\n\n<p>And I tried another Android phone(Android5.1),everything was OK.Here's the code:</p>\n\n<pre><code>private File createImageFile() throws IOException {\n    String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date());\n    String imageFileName = \"JPEG_\" + timeStamp + \"_\";\n    File storageDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);\n    File image = File.createTempFile(imageFileName, \".jpg\", storageDir);\n    currentPhotoPath = image.getAbsolutePath();\n    return image;\n}\n</code></pre>\n\n<p>Does Android 6.0 have difference about permission? </p>\n", "tags": ["java", "android", "android-6.0-marshmallow"], "title": "Android 6.0 open failed: EACCES (Permission denied)", "answer_count": 4, "creation_date": 1444370516, "score": 33, "link": "http://stackoverflow.com/questions/33030933/android-6-0-open-failed-eacces-permission-denied", "answers": [{"body": "<p>Android added new permission model for <strong>Android 6.0 (Marshmallow)</strong>.</p>\n\n<p><a href=\"http://www.captechconsulting.com/blogs/runtime-permissions-best-practices-and-how-to-gracefully-handle-permission-removal\">http://www.captechconsulting.com/blogs/runtime-permissions-best-practices-and-how-to-gracefully-handle-permission-removal</a></p>\n\n<p>So you have to check <code>Runtime Permission</code> :</p>\n\n<p><strong>What Are Runtime Permissions?</strong></p>\n\n<p>With Android 6.0 Marshmallow, Google introduced a new permission model that allows users to better understand why an application may be requesting specific permissions. Rather than the user blindly accepting all permissions at install time, the user is now prompted to accept permissions as they become necessary during application use.  </p>\n\n<p><strong>When to Implement the New Model?</strong></p>\n\n<p>it doesn\u2019t require full support until you choose to target version 23 in your application. If you are targeting version 22 or below, your application will request all permissions at install time just as it would on any device running an OS below Marshmallow.</p>\n\n<p>This information is taken from here :</p>\n\n<p>Please check How to implement from this link :</p>\n\n<p><a href=\"http://www.captechconsulting.com/blogs/runtime-permissions-best-practices-and-how-to-gracefully-handle-permission-removal\">http://www.captechconsulting.com/blogs/runtime-permissions-best-practices-and-how-to-gracefully-handle-permission-removal</a></p>\n", "title": "Android 6.0 open failed: EACCES (Permission denied)", "answer_id": 33031091, "link": "http://stackoverflow.com/questions/33030933/android-6-0-open-failed-eacces-permission-denied/33031091#33031091", "tags": ["java", "android", "android-6.0-marshmallow"]}, {"body": "<p>In <strong>Android 6(Marshmallow)</strong>, even though the user accepted all your permissions at install time, they can later decide to take some of those permissions away from you.</p>\n\n<p><strong>Fast solution but not recommended:</strong> maybe if you change your <code>targetSdkVersion</code> in the gradle to <code>22</code>, the problem will be solved.</p>\n\n<p><strong>How To Implement?(Best Practices)</strong></p>\n\n<ol>\n<li><p>First determine if the user\u2019s device is a Marshmallow device or not:</p>\n\n<pre><code>private boolean shouldAskPermission(){\n\nreturn(Build.VERSION.SDK_INT&gt;Build.VERSION_CODES.LOLLIPOP_MR1);\n\n}\n</code></pre></li>\n<li><p>If <code>shouldAskPermission()</code> return <code>true</code>, ask for permission you need:</p>\n\n<pre><code>String[] perms = {\"android.permission. WRITE_EXTERNAL_STORAGE\"};\n\nint permsRequestCode = 200;\n\nrequestPermissions(perms, permsRequestCode);\n</code></pre></li>\n</ol>\n\n<p>The method <code>requestPermissions(String[] permissions, int requestCode);</code> is a public method found inside of the Android Activity class.</p>\n\n<ol start=\"3\">\n<li><p>You will receive the results of your request in the method onRequestPermissionResult as shown below:</p>\n\n<pre><code>@Override\npublic void onRequestPermissionsResult(int permsRequestCode, String[] permissions, int[] grantResults){\n\nswitch(permsRequestCode){\n\n    case 200:\n\n        boolean writeAccepted = grantResults[0]==PackageManager.PERMISSION_GRANTED;\n\n        break;\n\n}\n\n}\n</code></pre></li>\n</ol>\n\n<p>After receiving the results, you will need to handle them appropriately.</p>\n\n<p><strong>Suggested Permissions Flow:</strong></p>\n\n<p><a href=\"http://i.stack.imgur.com/ed3lT.png\"><img src=\"http://i.stack.imgur.com/ed3lT.png\" alt=\"enter image description here\"></a></p>\n\n<p><strong>More Info:</strong></p>\n\n<p>A user with a Marshmallow device will now have the ability to revoke <strong>dangerous permissions</strong> via the application settings</p>\n\n<p>Android defines some permissions as \u201c<strong>dangerous</strong>\u201d and some permissions as \u201c<strong>normal</strong>.\u201d Both are required in your application\u2019s manifest but only dangerous permissions require a runtime request.</p>\n\n<p>If you have chosen not to implement the new permissions model(runtime request), the revocation of permissions can cause unwanted user experiences and in some cases application crashes.</p>\n\n<p>The table below lists all the current dangerous permissions and their respective groups:</p>\n\n<p><a href=\"http://i.stack.imgur.com/dPV2e.png\"><img src=\"http://i.stack.imgur.com/dPV2e.png\" alt=\"enter image description here\"></a></p>\n\n<p>If the user accepts one permission in a group/category they accept the entire group!</p>\n\n<p><strong>Source:</strong><a href=\"http://www.captechconsulting.com/blogs/runtime-permissions-best-practices-and-how-to-gracefully-handle-permission-removal\"><strong>http://www.captechconsulting.com</strong></a></p>\n", "title": "Android 6.0 open failed: EACCES (Permission denied)", "answer_id": 33980679, "link": "http://stackoverflow.com/questions/33030933/android-6-0-open-failed-eacces-permission-denied/33980679#33980679", "tags": ["java", "android", "android-6.0-marshmallow"]}, {"body": "<p>You can also use <a href=\"http://developer.android.com/intl/es/reference/android/support/v4/app/ActivityCompat.OnRequestPermissionsResultCallback.html\">ActivityCompat.requestPermissions</a> for backwards compatible.</p>\n\n<p>example:</p>\n\n<pre><code>private static final int REQUEST_CODE = 0x11;\n\nString[] permissions = {\"android.permission.WRITE_EXTERNAL_STORAGE\"};\nActivityCompat.requestPermissions(this, permissions, REQUEST_CODE); // without sdk version check\n\n@Override\npublic void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n    super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n\n    if (requestCode == REQUEST_CODE) {\n        if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n            // save file\n        } else {\n            Toast.makeText(getApplicationContext(), \"PERMISSION_DENIED\", Toast.LENGTH_SHORT).show();\n        }\n    }\n}\n</code></pre>\n", "title": "Android 6.0 open failed: EACCES (Permission denied)", "answer_id": 35475070, "link": "http://stackoverflow.com/questions/33030933/android-6-0-open-failed-eacces-permission-denied/35475070#35475070", "tags": ["java", "android", "android-6.0-marshmallow"]}, {"body": "<p>From API-23 you need to declare the permission in activity even if you have already declared in manifest.</p>\n\n<pre><code>// Storage Permissions variables\nprivate static final int REQUEST_EXTERNAL_STORAGE = 1;\nprivate static String[] PERMISSIONS_STORAGE = {\n        Manifest.permission.READ_EXTERNAL_STORAGE,\n        Manifest.permission.WRITE_EXTERNAL_STORAGE\n};\n\n//persmission method.\n public static void verifyStoragePermissions(Activity activity) {\n    // Check if we have read or write permission\n    int writePermission = ActivityCompat.checkSelfPermission(activity, Manifest.permission.WRITE_EXTERNAL_STORAGE);\n    int readPermission = ActivityCompat.checkSelfPermission(activity, Manifest.permission.READ_EXTERNAL_STORAGE);\n\n    if (writePermission != PackageManager.PERMISSION_GRANTED || readPermission != PackageManager.PERMISSION_GRANTED) {\n        // We don't have permission so prompt the user\n        ActivityCompat.requestPermissions(\n                activity,\n                PERMISSIONS_STORAGE,\n                REQUEST_EXTERNAL_STORAGE\n        );\n    }\n}\n</code></pre>\n\n<p>To use simply call <code>verifyStoragePermissions(this);</code> in onCreate.\nThat should do it hopefully.</p>\n", "title": "Android 6.0 open failed: EACCES (Permission denied)", "answer_id": 37038313, "link": "http://stackoverflow.com/questions/33030933/android-6-0-open-failed-eacces-permission-denied/37038313#37038313", "tags": ["java", "android", "android-6.0-marshmallow"]}], "question_id": 33030933}, {"body": "<p>As far as I understand the Java 8 <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.28\">JLS</a> the expression <code>(1/0)</code> is considered a constant expression, but when I try to compile the following program with OpenJDK 8 I get an error</p>\n\n<pre><code>public class Switch {\n    public static void main(String[] args) {\n        switch(42) {\n            case (1/0):\n                return;\n            default:\n                return;\n        }\n    }\n}\n</code></pre>\n\n<p>The error says <code>(1/0)</code> isn't a constant expression</p>\n\n<pre><code>Switch.java:4: error: constant expression required\n            case (1/0):\n                 ^\n1 error\n</code></pre>\n\n<p>Am I missing something? Or is it a bug in OpenJDK 8?</p>\n", "tags": ["java", "compiler-errors", "java-8", "openjdk", "jls"], "title": "Is `1/0` a constant expression in Java?", "answer_count": 2, "creation_date": 1435926036, "score": 33, "link": "http://stackoverflow.com/questions/31206740/is-1-0-a-constant-expression-in-java", "answers": [{"body": "<p>The compiler is doing constant folding (precomputing trivial literal expressions). This is a case where the expression \"completes abruptly\", to use the JLS verbiage, disqualifying it from meeting the definition of \"constant expression\". So it's not a bug, it's consistent with the JLS.</p>\n\n<p>And yes, the expression doesn't evaluate to a value either (warning the user trying to do something like this that the result will not be a constant expression), but the compiler doesn't know that until it tries. Not evaluating to a value and completing abruptly would seem to go hand-in-hand.</p>\n\n<p>Adding a variable declaration like</p>\n\n<pre><code>int x = 1 / 0;\n</code></pre>\n\n<p>doesn't cause a compiler error, it's the switch that forces the expression to be evaluated at compile time.</p>\n\n<p>By the way I checked that this happens for version 7 of the Oracle and IBM JDKs too, it's not OpenJDK or JDK8 specific.</p>\n", "title": "Is `1/0` a constant expression in Java?", "answer_id": 31206824, "link": "http://stackoverflow.com/questions/31206740/is-1-0-a-constant-expression-in-java/31206824#31206824", "tags": ["java", "compiler-errors", "java-8", "openjdk", "jls"]}, {"body": "<p>A constant expression must be able to evaluate to a value, since the compiler must reconduce that expression to a value. </p>\n\n<p><code>1/0</code> doesn't have any value.</p>\n\n<p>From JSL \u00a715.28:</p>\n\n<blockquote>\n  <p>A compile-time constant expression is an expression <strong>denoting a value</strong> of primitive type or a String that does not complete abruptly and is composed using only the following:</p>\n</blockquote>\n", "title": "Is `1/0` a constant expression in Java?", "answer_id": 31206825, "link": "http://stackoverflow.com/questions/31206740/is-1-0-a-constant-expression-in-java/31206825#31206825", "tags": ["java", "compiler-errors", "java-8", "openjdk", "jls"]}], "question_id": 31206740}, {"body": "<p>My understanding was that static variables and static methods are of a class, not of the class objects. So an <code>Override</code> of a static method won't work in Java, as for overriding we need an instance of a class to be created. But I was trying something today that contradicted my knowledge of Java.</p>\n\n<p>Please follow this code:</p>\n\n<pre><code>class Parent{\n   public static void doIt(){\n      System.out.println(\"In static method 'doit' of class Parent \");\n   }\n}\n\nclass Child extends Parent{    \n   public static void doIt(){\n      System.out.println(\"In static method 'doit' of class Child \");\n   }\n}\n\npublic class StaticPractise{\n   public static void main(String[] args){\n      Parent.doIt();\n      Child.doIt();\n   }    \n}\n</code></pre>\n\n<p>The output of the above implementation is:</p>\n\n<pre><code>D:\\Rahul Shivsharan\\MyPractise\\JAVA&gt;java StaticPractise\nIn static method 'doit' of class Parent\nIn static method 'doit' of class Child\n</code></pre>\n\n<p>From this output I can understand that though the <code>Child</code> class extends the <code>Parent</code> class, the <code>doit</code> methods are individual to each class as they are <code>static</code>. So no overriding of them is allowed.</p>\n\n<p>Now please follow the below code, where <code>@Override</code> is added to the child's <code>doIt</code> method:</p>\n\n<pre><code>class Parent{\n   public static void doIt(){\n      System.out.println(\"In static method 'doit' of class Parent \");\n   }\n}\n\nclass Child extends Parent{    \n   @Override // Adding this annotation here\n   public static void doIt(){\n      System.out.println(\"In static method 'doit' of class Child \");\n   }\n}\n\npublic class StaticPractise{\n   public static void main(String[] args){\n      Parent.doIt();\n      Child.doIt();\n   }    \n}\n</code></pre>\n\n<p>The output of the above code gives a compilation error as follows:</p>\n\n<pre><code>D:\\Rahul Shivsharan\\MyPractise\\JAVA&gt;javac StaticPractise.java\nStaticPractise.java:31: error: method does not override or implement a method from a supertype\n    @Override\n    ^\n1 error\n</code></pre>\n\n<p>Here it clearly says that the annotation <code>Override</code> can't be applied in <code>static</code> methods as they are not getting overridden.</p>\n\n<p>Now please follow the below code, where <code>Child</code> has no <code>doIt</code> method:</p>\n\n<pre><code>class Parent{\n   public static void doIt(){\n      System.out.println(\"In static method 'doit' of class Parent \");\n   }\n}\n\nclass Child extends Parent{ /* no doIt method */ }\n\npublic class StaticPractise{\n   public static void main(String[] args){\n      Parent.doIt();\n      Child.doIt();\n   }    \n}\n</code></pre>\n\n<p>The output is:</p>\n\n<pre><code>D:\\Rahul Shivsharan\\MyPractise\\JAVA&gt;java StaticPractise\nIn static method 'doit' of class Parent\nIn static method 'doit' of class Parent\n</code></pre>\n\n<p>Why does the above code compile and run? I was expecting a compilation error for method <code>doit</code> for class Child, and I was expecting \"Method not found\". I don't understand.</p>\n\n<p>Also please follow the below code. Here, the <code>doIt</code> method in <code>Parent</code> is now <code>final</code>.</p>\n\n<pre><code>class Parent{\n   public static final void doIt(){ // now final\n      System.out.println(\"In static method 'doit' of class Parent \");\n   }\n}\n\nclass Child extends Parent{\n   public static void doIt(){\n      System.out.println(\"In static method 'doit' of class Parent \");\n   }\n}\n\npublic class StaticPractise{\n   public static void main(String[] args){\n      Parent.doIt();\n      Child.doIt();\n   }    \n}\n</code></pre>\n\n<p>The output after running the above code is as follows:</p>\n\n<pre><code>D:\\Rahul Shivsharan\\MyPractise\\JAVA&gt;javac StaticPractise.java\nStaticPractise.java:30: error: doIt() in Child cannot override doIt() in Parent\n    public static void doIt(){\n                       ^\n  overridden method is static,final\n 1 error\n\n D:\\Rahul Shivsharan\\MyPractise\\JAVA&gt;\n</code></pre>\n\n<p>What I was expecting was that the above code should work fine as the <code>doit</code> methods are static in each class, so even a <code>final</code> keyword should not make any compilation error as the method is <code>static</code>. </p>\n\n<p>Please explain to me how method overriding works in static classes in Java.</p>\n\n<ol>\n<li>Can static methods be overridden? If yes, then how come annotating <code>@Override</code> fails?</li>\n<li>If static methods can't be overriden, then how come my 3rd code block runs fine?</li>\n<li>If static methods can't be overriden, then how come the <code>final</code> keyword makes a difference?</li>\n</ol>\n", "tags": ["java", "overriding", "method-overriding", "function-overriding"], "title": "If static methods can&#39;t be overriden, how its working here (For Java)?", "answer_count": 3, "creation_date": 1440057660, "score": 33, "link": "http://stackoverflow.com/questions/32112692/if-static-methods-cant-be-overriden-how-its-working-here-for-java", "answers": [{"body": "<p>You are confusing <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.4.8.1\" rel=\"nofollow\">overriding</a> with <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.4.8.2\" rel=\"nofollow\">hiding</a></p>\n", "title": "If static methods can&#39;t be overriden, how its working here (For Java)?", "answer_id": 32112793, "link": "http://stackoverflow.com/questions/32112692/if-static-methods-cant-be-overriden-how-its-working-here-for-java/32112793#32112793", "tags": ["java", "overriding", "method-overriding", "function-overriding"]}, {"body": "<p>First of all there are different mechanisms involved here: <a href=\"https://docs.oracle.com/javase/tutorial/java/IandI/override.html\">Overriding and Shadowing (also called hiding)</a>.</p>\n\n<p>1)\nStatic methods cannot be overriden as they are attached to the class they are defined in. However, you can <strong>shadow/hide</strong> a static method as you are doing with your <code>Parent</code>/<code>Child</code> class. This means, the method gets replaced in the <code>Child</code> class but is still available from the <code>Parent</code> class.</p>\n\n<p>It gets more obvious that you are <strong>not</strong> overriding when you are calling the static methods from instances of those classes (and not using the <code>Class.staticMethod()</code> invocation).</p>\n\n<pre><code>Parent parent = new Parent();\nChild child1 = new Child();\nParent child2 = new Child();\n\nparent.StaticMethod();\nchild1.StaticMethod();\nchild2.StaticMethod();\n</code></pre>\n\n<p>the output is</p>\n\n<pre><code>Static method from Parent\nStatic method from Child\nStatic method from Parent\n</code></pre>\n\n<p>The answer is the dispatch of the methods. You can grab the <a href=\"https://github.com/lschuetze/shadow-static-example\">source code here</a></p>\n\n<p>2)\nThe dispatch finds the method on the <code>Parent</code> class. There is no dynamic dispatch as that the runtime type is used to find the method handle. It uses the compile time type. <em>Remind</em>: Calling static methods from instances is considered bad practice since things like above can happen and are easy to be overlooked.</p>\n\n<p>3)\nWith <code>final</code>you declare that the method cannot be overridden neither shadowed/hidden.</p>\n", "title": "If static methods can&#39;t be overriden, how its working here (For Java)?", "answer_id": 32112813, "link": "http://stackoverflow.com/questions/32112692/if-static-methods-cant-be-overriden-how-its-working-here-for-java/32112813#32112813", "tags": ["java", "overriding", "method-overriding", "function-overriding"]}, {"body": "<p>Although it is discouraged to ask 3 questions in one post, I am still willing to answer them.</p>\n\n<ol>\n<li><p>Static methods cannot be overridden because there is no point of doing that. In your case, If you want to override the static method you can just call the method and add your own implementation after that or you just create another method.</p></li>\n<li><p>So now that you know that static methods cannot be overridden. But you are asking why the third code works? The third code is the code with</p>\n\n<p>public class Child extends Parent {}</p></li>\n</ol>\n\n<p>right? Although static methods cannot be overridden, they can be <em>inherited</em>. What you are doing is inheriting <code>Parent</code> so that is completely fine!</p>\n\n<ol start=\"3\">\n<li>Now let me tell you, in your first code sample you are <em>hiding</em> the method in the <code>Parent</code> class, not overriding. That's why you get the output. A <code>final</code> keyword means the method can <em><strong>never</strong></em> be changed, not even hidden. So that's why.</li>\n</ol>\n", "title": "If static methods can&#39;t be overriden, how its working here (For Java)?", "answer_id": 32113074, "link": "http://stackoverflow.com/questions/32112692/if-static-methods-cant-be-overriden-how-its-working-here-for-java/32113074#32113074", "tags": ["java", "overriding", "method-overriding", "function-overriding"]}], "question_id": 32112692}, {"body": "<p>The question had been asked by another SO member, but was disappointingly deleted. The comments were saying the measurements are flawed and does not make sense.</p>\n\n<p>However I was able to reproduce the original problem with a small benchmark under <a href=\"http://openjdk.java.net/projects/code-tools/jmh/\">JMH</a>:</p>\n\n<pre><code>package bench;\n\nimport org.openjdk.jmh.annotations.*;\nimport org.openjdk.jmh.runner.*;\nimport org.openjdk.jmh.runner.options.*;\nimport java.util.concurrent.*;\n\n@State(Scope.Benchmark)\npublic class LoopInc {\n\n    private int getValue() {\n        return ThreadLocalRandom.current().nextInt(2);\n    }\n\n    @Benchmark\n    public int directInc() {\n        int result = 0;\n        for (int i = 0; i &lt; 1000; i++) {\n            switch (getValue()) {\n                case 0:\n                    break;\n                case 1:\n                    result++;\n                    break;\n            }\n        }\n        return result;\n    }\n\n    @Benchmark\n    public int indirectInc() {\n        int result = 0;\n        for (int i = 0; i &lt; 1000; i++) {\n            boolean incr = false;\n            switch (getValue()) {\n                case 0:\n                    break;\n                case 1:\n                    incr = true;\n                    break;\n            }\n\n            if (incr) {\n                result++;\n            }\n        }\n        return result;\n    }\n\n    public static void main(String[] args) throws RunnerException {\n        Options options = new OptionsBuilder()\n                .include(\"bench.LoopInc.*\")\n                .warmupIterations(5)\n                .measurementIterations(10)\n                .forks(3)\n                .timeUnit(TimeUnit.MILLISECONDS)\n                .build();\n        new Runner(options).run();\n    }\n}\n</code></pre>\n\n<p>The benchmarks shows <code>indirectInc</code> works 3 times faster, though the \"optimization\" is not obvious at all. One would assume <code>indirectInc</code> should work a bit slower because it involves an extra intermediate operation.</p>\n\n<pre><code>Benchmark             Mode  Cnt    Score   Error   Units\nLoopInc.directInc    thrpt   30  127,301 \u00b1 0,202  ops/ms\nLoopInc.indirectInc  thrpt   30  378,147 \u00b1 1,144  ops/ms\n</code></pre>\n\n<p>\u00a0</p>\n\n<pre><code>java version \"1.8.0_51\"\nJava(TM) SE Runtime Environment (build 1.8.0_51-b16)\nJava HotSpot(TM) 64-Bit Server VM (build 25.51-b03, mixed mode)\n</code></pre>\n\n<p>What causes JIT to compile <code>indirectInc</code> better than similar <code>directInc</code>?  </p>\n", "tags": ["java", "performance", "jvm"], "title": "Why indirect increment is faster than direct inc?", "answer_count": 2, "creation_date": 1437073611, "score": 33, "link": "http://stackoverflow.com/questions/31462514/why-indirect-increment-is-faster-than-direct-inc", "answers": [{"body": "<p>I suspect a few things:</p>\n\n<ol>\n<li>You aren't testing the same work for each. Break your test into two individual files to ensure the JIT isn't just warmed up for one rather than the other.</li>\n<li>(minor) direct is &lt;=1000, indirect is &lt;1000 so you do one more step.</li>\n<li>You probably want to use the same random numbers for each test, rather than different ones each time.</li>\n</ol>\n\n<p>The body of the loop is essentially the same for each test:</p>\n\n<p>Direct:</p>\n\n<pre><code>   5: sipush        1000\n   8: if_icmpgt     52\n  11: aload_0       \n  12: invokespecial #2                  // Method getValue:()I\n  15: lookupswitch  { // 2\n\n                 0: 40\n\n                 1: 43\n           default: 46\n      }\n  40: goto          46\n  43: iinc          1, 1\n  46: iinc          2, 1\n  49: goto          4\n  52: iload_1       \n  53: ireturn       \n</code></pre>\n\n<p>Indirect:</p>\n\n<pre><code>   5: sipush        1000\n   8: if_icmpge     62\n  11: iconst_0      \n  12: istore_3      \n  13: aload_0       \n  14: invokespecial #2                  // Method getValue:()I\n  17: lookupswitch  { // 2\n\n                 0: 44\n\n                 1: 47\n           default: 49\n      }\n  44: goto          49\n  47: iconst_1      \n  48: istore_3      \n  49: iload_3       \n  50: ifeq          56\n  53: iinc          1, 1\n  56: iinc          2, 1\n  59: goto          4\n  62: iload_1       \n  63: ireturn       \n</code></pre>\n\n<p>It's (barely) possible that if_icmpge is faster than if_icmpgt on your platform, or that the JIT knows more to do with if_icmpge than if_icmpgt, but I suspect something else underlying your test is confounding things.</p>\n", "title": "Why indirect increment is faster than direct inc?", "answer_id": 31464996, "link": "http://stackoverflow.com/questions/31462514/why-indirect-increment-is-faster-than-direct-inc/31464996#31464996", "tags": ["java", "performance", "jvm"]}, {"body": "<p>Ok, this is how you approach these things.</p>\n\n<ol>\n<li><p>Try to reproduce it. Okay, it reproduces:</p>\n\n<pre><code>Benchmark             Mode  Cnt    Score   Error   Units\nLoopInc.directInc    thrpt   15  175.678 \u00b1 1.118  ops/ms\nLoopInc.indirectInc  thrpt   15  641.413 \u00b1 9.722  ops/ms\n</code></pre></li>\n<li><p>Try to see the generated assembly with <code>-prof perfasm</code>. Long story short, it produces a lot of generated code, and so we probably want to limit the loop unrolling. But, it can affect the performance, and can pretty much be the cause. So, let's re-run with <code>-XX:LoopUnrollLimit=1</code>. Okay, the score is lower, but the difference is still there, excellent:</p>\n\n<pre><code>Benchmark             Mode  Cnt    Score   Error   Units\nLoopInc.directInc    thrpt   15  161.147 \u00b1 6.101  ops/ms\nLoopInc.indirectInc  thrpt   15  489.430 \u00b1 1.698  ops/ms\n</code></pre></li>\n<li><p>Take another look at the generated code, still nothing that pops out to our eye. Well, this seems interesting. Let's get on this properly. Can we characterize the workload? Of course we can, with the help of <code>-prof perfnorm</code>, which normalizes the hardware counters per benchmark op. Let's see:</p>\n\n<pre><code>Benchmark                                     Mode  Cnt      Score      Error   Units\nLoopInc.directInc                            thrpt   15    161.875 \u00b1    3.038  ops/ms\nLoopInc.directInc:\u00b7CPI                       thrpt    3      0.967 \u00b1    0.196    #/op\nLoopInc.directInc:\u00b7L1-dcache-load-misses     thrpt    3      0.394 \u00b1    3.663    #/op\nLoopInc.directInc:\u00b7L1-dcache-loads           thrpt    3   2149.594 \u00b1  228.166    #/op\nLoopInc.directInc:\u00b7L1-dcache-store-misses    thrpt    3      0.114 \u00b1    1.001    #/op\nLoopInc.directInc:\u00b7L1-dcache-stores          thrpt    3   1073.666 \u00b1   96.066    #/op\nLoopInc.directInc:\u00b7L1-icache-load-misses     thrpt    3      0.965 \u00b1   22.984    #/op\nLoopInc.directInc:\u00b7LLC-loads                 thrpt    3      0.204 \u00b1    2.763    #/op\nLoopInc.directInc:\u00b7LLC-stores                thrpt    3      0.060 \u00b1    0.633    #/op\nLoopInc.directInc:\u00b7branch-misses             thrpt    3    536.068 \u00b1   43.293    #/op\nLoopInc.directInc:\u00b7branches                  thrpt    3   3728.890 \u00b1  220.539    #/op\nLoopInc.directInc:\u00b7cycles                    thrpt    3  26219.146 \u00b1 6287.590    #/op\nLoopInc.directInc:\u00b7dTLB-load-misses          thrpt    3      0.063 \u00b1    0.124    #/op\nLoopInc.directInc:\u00b7dTLB-loads                thrpt    3   2136.942 \u00b1  165.990    #/op\nLoopInc.directInc:\u00b7dTLB-store-misses         thrpt    3      0.022 \u00b1    0.029    #/op\nLoopInc.directInc:\u00b7dTLB-stores               thrpt    3   1084.787 \u00b1  417.281    #/op\nLoopInc.directInc:\u00b7iTLB-load-misses          thrpt    3      0.081 \u00b1    0.333    #/op\nLoopInc.directInc:\u00b7iTLB-loads                thrpt    3      3.623 \u00b1   19.955    #/op\nLoopInc.directInc:\u00b7instructions              thrpt    3  27114.052 \u00b1 1843.720    #/op\n\nLoopInc.indirectInc                          thrpt   15    489.164 \u00b1    2.692  ops/ms\nLoopInc.indirectInc:\u00b7CPI                     thrpt    3      0.281 \u00b1    0.015    #/op\nLoopInc.indirectInc:\u00b7L1-dcache-load-misses   thrpt    3      0.503 \u00b1    9.071    #/op\nLoopInc.indirectInc:\u00b7L1-dcache-loads         thrpt    3   2149.806 \u00b1  369.040    #/op\nLoopInc.indirectInc:\u00b7L1-dcache-store-misses  thrpt    3      0.167 \u00b1    1.370    #/op\nLoopInc.indirectInc:\u00b7L1-dcache-stores        thrpt    3   1073.895 \u00b1  186.741    #/op\nLoopInc.indirectInc:\u00b7L1-icache-load-misses   thrpt    3      0.313 \u00b1    1.275    #/op\nLoopInc.indirectInc:\u00b7branch-misses           thrpt    3      1.102 \u00b1    0.375    #/op\nLoopInc.indirectInc:\u00b7branches                thrpt    3   2143.670 \u00b1  228.475    #/op\nLoopInc.indirectInc:\u00b7cycles                  thrpt    3   8701.665 \u00b1  706.183    #/op\nLoopInc.indirectInc:\u00b7dTLB-load-misses        thrpt    3      0.020 \u00b1    0.301    #/op\nLoopInc.indirectInc:\u00b7dTLB-loads              thrpt    3   2141.965 \u00b1  135.852    #/op\nLoopInc.indirectInc:\u00b7dTLB-store-misses       thrpt    3      0.002 \u00b1    0.029    #/op\nLoopInc.indirectInc:\u00b7dTLB-stores             thrpt    3   1070.376 \u00b1   81.445    #/op\nLoopInc.indirectInc:\u00b7iTLB-load-misses        thrpt    3      0.007 \u00b1    0.135    #/op\nLoopInc.indirectInc:\u00b7iTLB-loads              thrpt    3      0.310 \u00b1    5.768    #/op\nLoopInc.indirectInc:\u00b7instructions            thrpt    3  30968.207 \u00b1 3627.540    #/op\n</code></pre>\n\n<p>Oh, both benchmarks have comparable number of instructions. The slower one takes more cycles (that's why CPI is also not ideal in <code>directInc</code>; <code>indirectInc</code>, however, produces a close-to-ideal CPI). If you look closely at possible causes: there is not many cache misses, not many TLB misses, but slow benchmark has lots of branch misses. AHA! Now we know what to look in the generated code.</p></li>\n<li><p>Let's look at generated code again. <code>-prof perfasm</code> conveniently highlights the jumps. And then you will see this...</p>\n\n<p><strong>directInc</strong>:</p>\n\n<pre><code>                  \u256d\u2502      0x00007fa0a82a50ff: jmp    0x00007fa0a82a5116\n 11.39%   16.90%  \u2502\u2502 \u2197    0x00007fa0a82a5101: inc    %edx               ;*iinc\n                  \u2502\u2502 \u2502                                                  ; - org.openjdk.LoopInc::directInc@46 (line 18)\n 12.52%   23.11%  \u2502\u2502 \u2502\u2197\u2197  0x00007fa0a82a5103: mov    %r10,0xe8(%r11)    ;*invokevirtual putLong\n                  \u2502\u2502 \u2502\u2502\u2502                                                ; - java.util.concurrent.ThreadLocalRandom::nextSeed@27 (line 241)\n 12.00%    8.14%  \u2502\u2502 \u2502\u2502\u2502  0x00007fa0a82a510a: inc    %r8d               ;*iinc\n                  \u2502\u2502 \u2502\u2502\u2502                                                ; - org.openjdk.LoopInc::directInc@46 (line 18)\n  0.03%    0.03%  \u2502\u2502 \u2502\u2502\u2502  0x00007fa0a82a510d: cmp    $0x3e8,%r8d\n                  \u2502\u2570 \u2502\u2502\u2502  0x00007fa0a82a5114: jge    0x00007fa0a82a50c7  ;*aload_0\n                  \u2502  \u2502\u2502\u2502                                                ; - org.openjdk.LoopInc::directInc@11 (line 19)\n  0.80%    0.91%  \u2198  \u2502\u2502\u2502  0x00007fa0a82a5116: mov    0xf0(%r11),%r10d   ;*invokevirtual getInt\n                     \u2502\u2502\u2502                                                ; - java.util.concurrent.ThreadLocalRandom::current@9 (line 222)\n  4.28%    1.23%     \u2502\u2502\u2502  0x00007fa0a82a511d: test   %r10d,%r10d\n                    \u256d\u2502\u2502\u2502  0x00007fa0a82a5120: je     0x00007fa0a82a517b  ;*ifne\n                    \u2502\u2502\u2502\u2502                                                ; - java.util.concurrent.ThreadLocalRandom::current@12 (line 222)\n  2.11%    0.01%    \u2502\u2502\u2502\u2502  0x00007fa0a82a5122: movabs $0x9e3779b97f4a7c15,%r10\n  0.01%    0.07%    \u2502\u2502\u2502\u2502  0x00007fa0a82a512c: add    0xe8(%r11),%r10    ;*ladd\n                    \u2502\u2502\u2502\u2502                                                ; - java.util.concurrent.ThreadLocalRandom::nextSeed@24 (line 242)\n  7.73%    1.89%    \u2502\u2502\u2502\u2502  0x00007fa0a82a5133: mov    %r10,%r9\n  1.21%    1.84%    \u2502\u2502\u2502\u2502  0x00007fa0a82a5136: shr    $0x21,%r9\n  1.90%    0.03%    \u2502\u2502\u2502\u2502  0x00007fa0a82a513a: xor    %r10,%r9\n  2.02%    0.03%    \u2502\u2502\u2502\u2502  0x00007fa0a82a513d: movabs $0xff51afd7ed558ccd,%rcx\n  0.94%    1.82%    \u2502\u2502\u2502\u2502  0x00007fa0a82a5147: imul   %rcx,%r9           ;*lmul\n                    \u2502\u2502\u2502\u2502                                                ; - java.util.concurrent.ThreadLocalRandom::mix32@9 (line 182)\n  7.01%    2.40%    \u2502\u2502\u2502\u2502  0x00007fa0a82a514b: mov    %r9,%rcx\n                    \u2502\u2502\u2502\u2502  0x00007fa0a82a514e: shr    $0x21,%rcx\n  1.89%    0.70%    \u2502\u2502\u2502\u2502  0x00007fa0a82a5152: xor    %r9,%rcx\n  3.11%    2.55%    \u2502\u2502\u2502\u2502  0x00007fa0a82a5155: movabs $0xc4ceb9fe1a85ec53,%r9\n  0.99%    1.50%    \u2502\u2502\u2502\u2502  0x00007fa0a82a515f: imul   %r9,%rcx\n  7.66%    2.89%    \u2502\u2502\u2502\u2502  0x00007fa0a82a5163: shr    $0x20,%rcx\n  3.70%    1.97%    \u2502\u2502\u2502\u2502  0x00007fa0a82a5167: mov    %ecx,%r9d\n           0.11%    \u2502\u2502\u2502\u2502  0x00007fa0a82a516a: and    $0x1,%r9d          ;*iand\n                    \u2502\u2502\u2502\u2502                                                ; - java.util.concurrent.ThreadLocalRandom::nextInt@34 (line 356)\n  3.76%   11.13%    \u2502\u2502\u2502\u2502  0x00007fa0a82a516e: cmp    $0x1,%r9d\n                    \u2502\u2570\u2502\u2502  0x00007fa0a82a5172: je     0x00007fa0a82a5101\n 10.48%   16.62%    \u2502 \u2502\u2502  0x00007fa0a82a5174: test   %r9d,%r9d\n                    \u2502 \u2570\u2502  0x00007fa0a82a5177: je     0x00007fa0a82a5103  ;*lookupswitch\n                    \u2502  \u2502                                                ; - org.openjdk.LoopInc::directInc@15 (line 19)\n                    \u2502  \u2570  0x00007fa0a82a5179: jmp    0x00007fa0a82a5103  ;*aload_0\n                    \u2502                                                   ; - org.openjdk.LoopInc::directInc@11 (line 19)\n                    \u2198     0x00007fa0a82a517b: mov    $0xffffff5d,%esi\n</code></pre>\n\n<p><strong>indirectInc</strong>:</p>\n\n<pre><code>  0.01%    0.01%  \u2197  0x00007f65588d8260: mov    %edx,%r9d\n  0.01%           \u2502  0x00007f65588d8263: nopw   0x0(%rax,%rax,1)\n 11.99%   11.38%  \u2502  0x00007f65588d826c: data16 data16 xchg %ax,%ax  ;*iconst_0\n                  \u2502                                                ; - org.openjdk.LoopInc::indirectInc@11 (line 34)\n                  \u2502  0x00007f65588d8270: mov    0xf0(%r8),%r10d    ;*invokevirtual getInt\n                  \u2502                                                ; - java.util.concurrent.ThreadLocalRandom::current@9 (line 222)\n                  \u2502  0x00007f65588d8277: test   %r10d,%r10d\n                  \u2502  0x00007f65588d827a: je     0x00007f65588d8331  ;*ifne\n                  \u2502                                                ; - java.util.concurrent.ThreadLocalRandom::current@12 (line 222)\n  0.01%           \u2502  0x00007f65588d8280: movabs $0x9e3779b97f4a7c15,%r10\n 11.80%   11.49%  \u2502  0x00007f65588d828a: add    0xe8(%r8),%r10     ;*ladd\n                  \u2502                                                ; - java.util.concurrent.ThreadLocalRandom::nextSeed@24 (line 242)\n  0.01%    0.01%  \u2502  0x00007f65588d8291: mov    %r10,0xe8(%r8)     ;*invokevirtual putLong\n                  \u2502                                                ; - java.util.concurrent.ThreadLocalRandom::nextSeed@27 (line 241)\n                  \u2502  0x00007f65588d8298: mov    %r9d,%edx\n  0.01%    0.01%  \u2502  0x00007f65588d829b: inc    %edx\n 11.12%   12.40%  \u2502  0x00007f65588d829d: mov    %r10,%rcx\n           0.01%  \u2502  0x00007f65588d82a0: shr    $0x21,%rcx\n  0.03%           \u2502  0x00007f65588d82a4: xor    %r10,%rcx\n  0.06%    0.03%  \u2502  0x00007f65588d82a7: movabs $0xff51afd7ed558ccd,%r10\n 12.38%   13.94%  \u2502  0x00007f65588d82b1: imul   %r10,%rcx          ;*lmul\n                  \u2502                                                ; - java.util.concurrent.ThreadLocalRandom::mix32@9 (line 182)\n  0.03%    0.01%  \u2502  0x00007f65588d82b5: mov    %rcx,%r10\n                  \u2502  0x00007f65588d82b8: shr    $0x21,%r10\n           0.03%  \u2502  0x00007f65588d82bc: xor    %rcx,%r10\n 11.43%   12.62%  \u2502  0x00007f65588d82bf: movabs $0xc4ceb9fe1a85ec53,%rcx\n           0.01%  \u2502  0x00007f65588d82c9: imul   %rcx,%r10\n  0.34%    0.30%  \u2502  0x00007f65588d82cd: shr    $0x20,%r10\n  0.85%    0.76%  \u2502  0x00007f65588d82d1: mov    %r10d,%r10d\n 11.81%   11.51%  \u2502  0x00007f65588d82d4: and    $0x1,%r10d\n  2.16%    1.78%  \u2502  0x00007f65588d82d8: cmp    $0x1,%r10d\n  3.45%    3.00%  \u2502  0x00007f65588d82dc: cmovne %r9d,%edx         &lt;----- HERE IT IS\n 17.55%   15.86%  \u2502  0x00007f65588d82e0: inc    %r11d              ;*iinc\n                  \u2502                                                ; - org.openjdk.LoopInc::indirectInc@56 (line 33)\n                  \u2502  0x00007f65588d82e3: cmp    $0x3e8,%r11d\n                  \u2570  0x00007f65588d82ea: jl     0x00007f65588d8260  ;*if_icmpge\n                                                           ; - org.openjdk.LoopInc::indirectInc@8 (line 33)\n</code></pre>\n\n<p>Notice the <code>cmovne</code> instead of <code>jmp</code> -- this is why we have more \"predictable\" branches. HotSpot profiles the branches, and emits the conditional move when the branch profile branch is very flat. In other words, dodge a very likely branch misprediction by paying a bit for the added latency of conditional move. However, in this case, switch is special: it has <em>more than two</em> alternatives (0, 1, and \"nothing\"). This is why, I speculate, the <code>result</code> increment is not being folded into cmov. (Generally speaking, HotSpot could have stored zero to <code>result</code> in \"default\", but it blew it, oh well)</p></li>\n<li><p>To confirm that hypothesis, let's make a <code>directCompleteInc</code> case, where we still use <code>switch</code>, but now cover all the cases:</p>\n\n<pre><code>@Benchmark\npublic int directCompleteInc() {\n    int result = 0;\n    for (int i = 0; i &lt; 1000; i++) {\n        switch (getValue()) {\n            case 1:\n                result++;\n                break;\n            default:\n                break;\n        }\n    }\n    return result;\n}\n</code></pre>\n\n<p>...and measure it, and this time without any options, like the OP did:</p>\n\n<pre><code>Benchmark                   Mode  Cnt    Score    Error   Units\nLoopInc.directCompleteInc  thrpt    5  644.414 \u00b1  0.371  ops/ms\nLoopInc.directInc          thrpt    5  174.974 \u00b1  0.103  ops/ms\nLoopInc.indirectInc        thrpt    5  644.015 \u00b1  0.533  ops/ms\n</code></pre>\n\n<p>THERE. </p></li>\n<li><p>Confirm <code>directCompleteInc</code> is using <code>cmov</code> with <code>-prof perfasm</code>. It does.</p></li>\n<li><p>Drink up.</p></li>\n</ol>\n", "title": "Why indirect increment is faster than direct inc?", "answer_id": 31483805, "link": "http://stackoverflow.com/questions/31462514/why-indirect-increment-is-faster-than-direct-inc/31483805#31483805", "tags": ["java", "performance", "jvm"]}], "question_id": 31462514}, {"body": "<p>I learned the other day that you can do this</p>\n\n<pre><code>new Object() {\n    void hello() {\n        System.out.println(\"Hello World!\");\n    }\n}.hello();\n</code></pre>\n\n<p>This seems really weird to me. Surely the static type of the object created is <code>Object</code>, so there isn't a method <code>hello()</code>? Isn't it almost completely pointless (it isn't possible to invoke <code>hello</code> twice for example).</p>\n\n<p>I have 2 questions about this. </p>\n\n<ol>\n<li>Can somebody point me to the part of the specification that addresses this?</li>\n<li>Am I right in thinking that the only way you can invoke <code>hello</code> is immediately like this. What about reflection?</li>\n</ol>\n\n<p>Thanks</p>\n", "tags": ["java", "class"], "title": "Invoking a method of an anonymous class", "answer_count": 4, "creation_date": 1444089274, "score": 33, "link": "http://stackoverflow.com/questions/32959680/invoking-a-method-of-an-anonymous-class", "answers": [{"body": "<p>As posted, there isn't a way to get the anonymous methods from the <code>Object</code> instance. And, it makes <a href=\"http://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.9.5\">Anonymous classes</a> look pointless. But, you could (and I usually would) use it to implement an interface. Something like,</p>\n\n<pre><code>static interface Hello {\n    void hello();\n}\npublic static void main(String[] args) {\n    Hello o = new Hello() {\n        public void hello() {\n            System.out.println(\"Hello World!\");\n        }\n    };\n    o.hello();\n}\n</code></pre>\n\n<p>Or, more commonly, for call-backs with JFC/Swing and <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/events/actionlistener.html\">ActionListener</a>. </p>\n", "title": "Invoking a method of an anonymous class", "answer_id": 32959739, "link": "http://stackoverflow.com/questions/32959680/invoking-a-method-of-an-anonymous-class/32959739#32959739", "tags": ["java", "class"]}, {"body": "<blockquote>\n  <p>Can somebody point me to the part of the specification that addresses this?</p>\n</blockquote>\n\n<p>This will mostly be defined in the section concerning <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.12\">Method invocation expressions</a>:</p>\n\n<blockquote>\n  <p>The first step in processing a method invocation at compile time is to\n  figure out the name of the method to be invoked and which class or\n  interface to search for definitions of methods of that name.</p>\n  \n  <p>For the class or interface to search, there are six cases to consider,\n  depending on the form that precedes the left parenthesis of the\n  MethodInvocation:</p>\n  \n  <ul>\n  <li>[...]</li>\n  <li>If the form is <code>Primary . [TypeArguments] Identifier</code>, then let <code>T</code> be\n  the type of the Primary expression. The class or interface to search\n  is <code>T</code> if <code>T</code> is a class or interface type, or the upper bound of <code>T</code> if <code>T</code>\n  is a type variable.</li>\n  </ul>\n</blockquote>\n\n<p>Here, the <em>Primary expression</em> is the <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-ClassInstanceCreationExpression\">class instance creation expression</a>. So the type to search is the anonymous type.</p>\n\n<blockquote>\n  <p>Am I right in thinking that the only way you can invoke hello is\n  immediately like this. What about reflection?</p>\n</blockquote>\n\n<p>As long as an expression evaluates to the anonymous type <code>T</code>, whether through direct access like you have, or through generics, you have access (regular access rules apply) to the members that <code>T</code> declares. This isn't limited to methods. You can access fields or types, though it's not as useful for types. For example,</p>\n\n<pre><code>Object var = new Object() {\n    class Nested {\n    }\n}.new Nested();\n</code></pre>\n\n<p>Since there's no way to refer to the nested type without the enclosing type, you can't declare a variable of that nested type. The usefulness declines very quickly. (Presumably, that's also why you can't have a <code>static</code> nested type within this anonymous class.) </p>\n\n<p>Reflection also exposes this method. The generated anonymous class contains this method, so you can retrieve it and invoke it. The process is the same. The fact that the instance is from an anonymous class doesn't matter. The same strategy as presented in <a href=\"http://stackoverflow.com/questions/160970/how-do-i-invoke-a-java-method-when-given-the-method-name-as-a-string\">How do I invoke a Java method when given the method name as a string?</a> applies.</p>\n\n<p>For example,</p>\n\n<pre><code>Object ref = new Object() {\n    public void method() {\n        System.out.println(\"hidden\");\n    }\n};\nClass&lt;?&gt; anonymousClass = ref.getClass();\nMethod method = anonymousClass.getMethod(\"method\");\nmethod.invoke(ref, new Object[0]);\n</code></pre>\n\n<p><sub>Don't ever write code like this.</sub></p>\n", "title": "Invoking a method of an anonymous class", "answer_id": 32959751, "link": "http://stackoverflow.com/questions/32959680/invoking-a-method-of-an-anonymous-class/32959751#32959751", "tags": ["java", "class"]}, {"body": "<p>Adding to  <a href=\"http://stackoverflow.com/a/32959751/905488\">Sotirios' answer</a>, here's <em>how</em> to invoke the method through reflection:</p>\n\n<pre><code>Object o = new Object() {\n    void hello() {\n        System.out.println(\"Hello World!\");\n    }\n};\n\nMethod hello = o.getClass().getDeclaredMethod(\"hello\");\nhello.invoke(o);\n</code></pre>\n\n<p>This allows you to call the method more than once, but other than that, makes little sense.</p>\n", "title": "Invoking a method of an anonymous class", "answer_id": 32959990, "link": "http://stackoverflow.com/questions/32959680/invoking-a-method-of-an-anonymous-class/32959990#32959990", "tags": ["java", "class"]}, {"body": "<p>Anonymous class is for the benefit of lazy programmers - naming things is too hard :) </p>\n\n<p>Anonymous class is very much like a local class. If a local class is just for creating one object, which is then used only as a supertype, we can create an anonymous class instead which is more succinct.</p>\n\n<p>Anonymous class is undenotable (to programmer), which is fine because we don't need to reference it again. However, to the compiler, the class  is very much named, and there is no reason to treat it differently from explicitly named classes. The static type of the expression is the concrete subclass, and the members of the object is the members of that class. Is this feature (being able to call <code>hello()</code>) pointless? Only if you consider local class pointless (and indeed local class is rarely used). Here's an <a href=\"https://github.com/zhong-j-yu/bayou/blob/0.9/src/_bayou/_async/_Asyncs.java#L142\">example</a> where I used that feature (for fun).</p>\n\n<p>Although the type is undenotable, the type can survive as itself through APIs. For example,</p>\n\n<pre><code>    Objects.requireNonNull( new Object(){ void hello(){} } ).hello();\n</code></pre>\n\n<p>Even though we cannot name the type, it does not need to be named where it can be inferred. </p>\n\n<pre><code>    Collections.singleton( new Object(){ void hello(){} } )\n      .forEach( o-&gt;{ o.hello(); o.hello(); } );\n</code></pre>\n\n<p>And we can create puzzlers for people who didn't expect the static type</p>\n\n<pre><code>    Collections.singleton( new Object(){} ).add( new Object() ); // does not compile! why?\n</code></pre>\n", "title": "Invoking a method of an anonymous class", "answer_id": 32960669, "link": "http://stackoverflow.com/questions/32959680/invoking-a-method-of-an-anonymous-class/32960669#32960669", "tags": ["java", "class"]}], "question_id": 32959680}, {"body": "<p>I'm still pretty fresh to all this, but I'm working on attaining my OCAJP certification (Java).  I remembered reading previously that the .equals method could be overridden when I came to this question:</p>\n\n<p><a href=\"http://i.stack.imgur.com/4ern3.png\"><img src=\"http://i.stack.imgur.com/4ern3.png\" alt=\"Question from Enthuware prep materials:\"></a></p>\n\n<p>Now these questions have been pretty evil as far as I'm concerned.  Twisting every little thing you think you know to force you to learn all the minutiae.  Now I had guessed E, but I didn't think D was correct.  I mean 99.9% of the time, of course, but I thought it was a trick question based on the wording.</p>\n\n<p>This got me thinking, is that true?  I mean, if I get the question on the exam, I know how to answer it now, but in the deep dark abyss of overriding madness, is it possible to create a situation where a.equals(a) returns false?  I feel like this would make Aristotle angry...</p>\n", "tags": ["java", "equals"], "title": "Can .equals be overridden such that a.equals(a) returns false?", "answer_count": 5, "creation_date": 1440395113, "score": 32, "link": "http://stackoverflow.com/questions/32175145/can-equals-be-overridden-such-that-a-equalsa-returns-false", "answers": [{"body": "<p>Note that <code>a</code>. <code>b</code> and <code>c</code> are instances of primitive wrapper classes (such as Integer, Double, etc...). These classes are final and cannot be extended, so you can't override their <code>equals</code> implementation. </p>\n\n<p>Therefore <code>a.equals(a)</code> will always return true, since those classes implement <code>equals</code> properly.</p>\n", "title": "Can .equals be overridden such that a.equals(a) returns false?", "answer_id": 32175175, "link": "http://stackoverflow.com/questions/32175145/can-equals-be-overridden-such-that-a-equalsa-returns-false/32175175#32175175", "tags": ["java", "equals"]}, {"body": "<p>You can take a look at the implementations of all the primitive wrappers , i.e: Integer, Boolean, Character etc... you will see that the implementation is correct. <BR> The reason is that with equals, once of the checks being done is to check reference equality, and  x.equals(x) as the both object and the argument are the same object.</p>\n", "title": "Can .equals be overridden such that a.equals(a) returns false?", "answer_id": 32175201, "link": "http://stackoverflow.com/questions/32175145/can-equals-be-overridden-such-that-a-equalsa-returns-false/32175201#32175201", "tags": ["java", "equals"]}, {"body": "<p>Since <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#equals%28java.lang.Object%29\"><code>equals(...)</code></a> is not a final method of <code>Object</code>, yes, it is very well be possible <strong>in a different situation</strong>.</p>\n\n<pre><code>@Override\npublic boolean equals(Object obj) {\n    return false;\n}\n</code></pre>\n\n<p>This question, however, specifically says that these are primitive wrappers (e.g. <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html\">Integer</a>, <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Boolean.html\">Boolean</a>, etc.) and since these classes are final, you cannot extend them, thus <code>a.equals(a)</code> will always return <code>true</code>.</p>\n", "title": "Can .equals be overridden such that a.equals(a) returns false?", "answer_id": 32175224, "link": "http://stackoverflow.com/questions/32175145/can-equals-be-overridden-such-that-a-equalsa-returns-false/32175224#32175224", "tags": ["java", "equals"]}, {"body": "<p>The other answers have already answered your question - no, this is not possible with the Java's primitive wrapper classes.</p>\n\n<p>I'll try to address the \"question behind the question\": Is this possible with other classes?</p>\n\n<blockquote>\n  <p>[...] in the deep dark abyss of overriding madness, is it possible to\n  create a situation where a.equals(a) returns false? I feel like this\n  would make Aristotle angry...</p>\n</blockquote>\n\n<p>This is actually a good question, and the answer is: Yes, it is possible to create such a situation, and yes, it would make Aristotle angry. Actually, I don't know if it would make Aristotle angry, not having known him, but it will certainly cause a lot of grief for whoever has to work with the code.</p>\n\n<p>The thing is: There is a <em>contract</em> associated with <code>Object.equals()</code>:</p>\n\n<blockquote>\n  <p>The equals method implements an equivalence relation on non-null\n  object references:</p>\n  \n  <p>[...]</p>\n  \n  <p>It is reflexive: for any non-null reference value x, x.equals(x) should return true. </p>\n</blockquote>\n\n<p><em><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">Javadocs for Object.equals</a></em></p>\n\n<p>Yes, when creating your own class, you can violate this contract. There is (unfortunately) nothing in the compiler or runtime stopping you.</p>\n\n<p>However, a lot of code relies on this contract, so if you violate it, any code that uses <code>equals</code> will probably fail in mysterious ways.</p>\n\n<p>One example: Java's own Collection classes (<code>java.util.Collection</code> and friends) rely on <code>equals</code>. If an instance of a class that does not correctly implement <code>equals</code> is put into a collection, weird things happen, such as the collection sometimes containing the instance and sometimes not.</p>\n", "title": "Can .equals be overridden such that a.equals(a) returns false?", "answer_id": 32177563, "link": "http://stackoverflow.com/questions/32175145/can-equals-be-overridden-such-that-a-equalsa-returns-false/32177563#32177563", "tags": ["java", "equals"]}, {"body": "<h1>Integer a.equals( a ) can return false</h1>\n\n<p>But you have to be really evil and use reflections and Multithreading:</p>\n\n<p>If you run this code, there is a chance that a racing condition can change the internal Value of <code>myInt</code> while the comparision takes place. If you want to simulate this condition, just set a breakpoint inside of <code>Integer.intValue()</code> run the code in debug and hit continue. This will create a delay which creates the race condition artificially and the console will return false.</p>\n\n<pre><code>class IntegerEqualsTest\n{\n    public static void main( final String[] args )\n    {\n        final Integer myInt = new Integer( 420 );\n\n        new Thread() {\n            public void run() {\n                try {\n                    final Field f = Integer.class.getDeclaredField( \"value\" );\n                    f.setAccessible( true );\n                    f.setInt( myInt, 100 );\n                } catch( final Exception e ) {}\n            }; }.start();\n\n        System.out.println( myInt.equals( myInt ) );\n    }\n}\n</code></pre>\n", "title": "Can .equals be overridden such that a.equals(a) returns false?", "answer_id": 32182250, "link": "http://stackoverflow.com/questions/32175145/can-equals-be-overridden-such-that-a-equalsa-returns-false/32182250#32182250", "tags": ["java", "equals"]}], "question_id": 32175145}, {"body": "<p>How to install Google Play Services on 6.0 Genymotion device?</p>\n\n<p>For other versions <a href=\"http://stackoverflow.com/questions/20121883/how-to-install-google-play-services-in-a-genymotion-vm-with-no-drag-and-drop-su\">this</a> answer works, but not for 6.0</p>\n\n<p><strong>EDIT</strong>:</p>\n\n<p>I've tried to use 6.0 Gapps from <a href=\"http://www.gadgetraid.com/2015/10/download-google-gapps-for-android-6-0-marshmallow-roms/\">this</a> source, but all of them failed to flash the emulator.</p>\n", "tags": ["java", "android", "genymotion"], "title": "How to install Google Play Services on 6.0 Genymotion device?", "answer_count": 6, "creation_date": 1446627780, "score": 32, "link": "http://stackoverflow.com/questions/33517612/how-to-install-google-play-services-on-6-0-genymotion-device", "answers": [{"body": "<p>For enable Google play service in genymotion, as per answer you mentioned in your question you need ARM and Gapps. </p>\n\n<p>So, Download gapps for Android Marshmallow from <a href=\"http://www.gadgetraid.com/2015/10/download-google-gapps-for-android-6-0-marshmallow-roms/\" rel=\"nofollow\">here</a> and follow <a href=\"http://stackoverflow.com/questions/20121883/how-to-install-google-play-services-in-a-genymotion-vm-with-no-drag-and-drop-su\">this answer</a>.</p>\n", "title": "How to install Google Play Services on 6.0 Genymotion device?", "answer_id": 33518181, "link": "http://stackoverflow.com/questions/33517612/how-to-install-google-play-services-on-6-0-genymotion-device/33518181#33518181", "tags": ["java", "android", "genymotion"]}, {"body": "<p>Ivan,\nI found the solution <a href=\"https://gist.github.com/wbroek/9321145\">here</a> and followed the steps from the user @sinistance and it worked for me using the Nexus 5X Preview API 23.</p>\n\n<p>To simplify this is the answer:</p>\n\n<blockquote>\n  <blockquote>\n    <p>what image did you use? i'm using the preview nexus 5x image. here is the steps:</p>\n    \n    <ol>\n    <li>flash Genymotion-ARM-Translation_v1.1.zip then restart.</li>\n    <li>flash gapps-L-4-21-15.zip.</li>\n    <li>sign in into your google account.</li>\n    <li>flash benzo-gapps-M-20151011-signed-chroma-r3.zip then restart.</li>\n    </ol>\n    \n    <p>that's all</p>\n  </blockquote>\n</blockquote>\n\n<p>You can find all the files in the link above!\nI hope it works for you!</p>\n\n<p>Regards</p>\n", "title": "How to install Google Play Services on 6.0 Genymotion device?", "answer_id": 34617375, "link": "http://stackoverflow.com/questions/33517612/how-to-install-google-play-services-on-6-0-genymotion-device/34617375#34617375", "tags": ["java", "android", "genymotion"]}, {"body": "<p>For enable Google play service in genymotion  marshmallow version </p>\n\n<p>Download and  install  Install ARM Translation from  here : <a href=\"http://filetrip.net/dl?4SUOrdcMRv\" rel=\"nofollow\">http://filetrip.net/dl?4SUOrdcMRv</a>\nAfter installation  reboot your device (Just  close and  restart )</p>\n\n<p>After restart Download the gapps/5.1/gapps-L-4-21-15.zip flash from : \n<a href=\"http://mirror31.downloadandroidrom.com/download/gapps/5.1/gapps-L-4-21-15.zip?token=432826691\" rel=\"nofollow\">http://mirror31.downloadandroidrom.com/download/gapps/5.1/gapps-L-4-21-15.zip?token=432826691</a></p>\n\n<p>After installation .  reboot  the device and  update yourgoogle play service and google.  </p>\n", "title": "How to install Google Play Services on 6.0 Genymotion device?", "answer_id": 35355721, "link": "http://stackoverflow.com/questions/33517612/how-to-install-google-play-services-on-6-0-genymotion-device/35355721#35355721", "tags": ["java", "android", "genymotion"]}, {"body": "<p>On Samsung Galaxy S6 - 6.0.0 - 1440x2560:</p>\n\n<ul>\n<li>Flash Genymotion-ARM-Translation_v1.1</li>\n<li>Flash open_gapps-x86-6.0-pico-20160524.zip</li>\n</ul>\n\n<p>Please give it a try.</p>\n", "title": "How to install Google Play Services on 6.0 Genymotion device?", "answer_id": 37427178, "link": "http://stackoverflow.com/questions/33517612/how-to-install-google-play-services-on-6-0-genymotion-device/37427178#37427178", "tags": ["java", "android", "genymotion"]}, {"body": "<p>If Google Play Services on Android 6.0 crash everytime, you can try do  the same things in this sequence. Maybe it will work.</p>\n\n<p>Here is what I did:</p>\n\n<ol>\n<li>Install a latest Genymotion (version 2.6.0 in my case). Make sure\nthe previous old (preview) Android 6.0 images are removed(Genymotion\n-> Settings -> Misc -> Clear cache).</li>\n<li>Add a new virtualdevice, select Google Nexus 5X and Android 6.0\nimage. It should download a new image from Genymotion website.Start\ncreated Google Nexus 5X - 6.0.0 - API 23 - 1080x1920 virtual device.</li>\n<li>Flash Genymotion-ARM-Translation_v1.1.zip (drag&amp;drop the zip file to\nvirtual device window) and then restart the virtual device.</li>\n<li>Flash gapps-L-4-21-15.zip and restart the virtual device again. Now\nadd Google account in the virtual device via Settings -> Accounts ->\nAdd account. Do not start Google Play! Ignore any crashes in sign in\nprocess.</li>\n<li>Flash benzo-gapps-M-20151011-signed-chroma-r3.zip and restart the\nvirtual device. Open Google Play in virtual device,update all\ninstalled applications.</li>\n<li>Start Google Now with long touch on home button to force dialog with\nrequest to update Google Play Services. Update Google Play Services.\nNow the device is prepared with working Google Play and Google Play\nServices.</li>\n</ol>\n\n<p><a href=\"http://i.stack.imgur.com/uuaCg.png\" rel=\"nofollow\">Genymotion android 6.0 with Google play service</a></p>\n", "title": "How to install Google Play Services on 6.0 Genymotion device?", "answer_id": 38039757, "link": "http://stackoverflow.com/questions/33517612/how-to-install-google-play-services-on-6-0-genymotion-device/38039757#38039757", "tags": ["java", "android", "genymotion"]}, {"body": "<p>For me it worked just to install a package (in my case the full) for x86 and Android Version 6.0 from <a href=\"http://opengapps.org/\" rel=\"nofollow\">http://opengapps.org/</a> by dragging the downloaded zip-file to the machine. A restart was suggested and done </p>\n\n<p>Maybe some Apps won't work but you don't have to do anything else.\nI hope I could help you with that answer.</p>\n", "title": "How to install Google Play Services on 6.0 Genymotion device?", "answer_id": 38473415, "link": "http://stackoverflow.com/questions/33517612/how-to-install-google-play-services-on-6-0-genymotion-device/38473415#38473415", "tags": ["java", "android", "genymotion"]}], "question_id": 33517612}, {"body": "<pre><code>Map&lt;String, String&gt; phoneBook=people.stream()\n                                    .collect(toMap(Person::getName, Person::getAddress));\n</code></pre>\n\n<p>I get duplicate key exception when duplicates occurs. </p>\n\n<p>Is it possible to ignore to add the values to map when the duplicates occurs?</p>\n\n<p>When there is duplicate it simply should continue by ignoring that duplicate key.</p>\n", "tags": ["java", "java-8", "java-stream"], "title": "Ignore duplicates when producing map using streams", "answer_count": 2, "creation_date": 1441028985, "score": 32, "link": "http://stackoverflow.com/questions/32312876/ignore-duplicates-when-producing-map-using-streams", "answers": [{"body": "<p>This is possible using the <code>mergeFunction</code> parameter of <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#toMap-java.util.function.Function-java.util.function.Function-java.util.function.BinaryOperator-\"><code>Collectors.toMap(keyMapper, valueMapper, mergeFunction)</code></a>:</p>\n\n<pre><code>Map&lt;String, String&gt; phoneBook = \n    people.stream()\n          .collect(Collectors.toMap(\n             Person::getName,\n             Person::getAddress,\n             (address1, address2) -&gt; {\n                 System.out.println(\"duplicate key found!\");\n                 return address1;\n             }\n          ));\n</code></pre>\n\n<p><code>mergeFunction</code> is a function that operates on two values associated with the same key. <code>adress1</code> corresponds to the first address that was encountered when collecting elements and <code>adress2</code> corresponds to the second address encountered: this lambda just tells to keep the first address and ignores the second.</p>\n", "title": "Ignore duplicates when producing map using streams", "answer_id": 32313069, "link": "http://stackoverflow.com/questions/32312876/ignore-duplicates-when-producing-map-using-streams/32313069#32313069", "tags": ["java", "java-8", "java-stream"]}, {"body": "<p>As said in <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#toMap-java.util.function.Function-java.util.function.Function-\">JavaDocs</a>:</p>\n\n<blockquote>\n  <p>If the mapped keys contains duplicates (according to\n  Object.equals(Object)), an IllegalStateException is thrown when the\n  collection operation is performed. If the mapped keys may have\n  duplicates, use toMap(Function, Function, BinaryOperator) instead.</p>\n</blockquote>\n\n<p>So you should use <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#toMap-java.util.function.Function-java.util.function.Function-java.util.function.BinaryOperator-\">toMap(Function keyMapper,\n                                                    Function valueMapper,\n                                                    BinaryOperator mergeFunction)</a> instead. Just provide merge function, that will determine, which one of duplicates needed to put in map. For example, if you don't care which one, just call</p>\n\n<pre><code>Map&lt;String, String&gt; phoneBook = people.stream()\n        .collect(toMap(Person::getName, Person::getAddress, (p1, p2) -&gt; p1));\n</code></pre>\n", "title": "Ignore duplicates when producing map using streams", "answer_id": 32313148, "link": "http://stackoverflow.com/questions/32312876/ignore-duplicates-when-producing-map-using-streams/32313148#32313148", "tags": ["java", "java-8", "java-stream"]}], "question_id": 32312876}, {"body": "<p>Currently the BlendModes (Subtract, Exclusion etc) use the LauncherImage as the mask. Can I apply these BlendModes to a ColorMatrix?</p>\n\n<p>I'm using the <a href=\"https://github.com/CyberAgent/android-gpuimage/tree/master/library/src/jp/co/cyberagent/android/gpuimage\">GPUImageLibrary</a> </p>\n\n<pre><code>colorMatrix[\n    0.393, 0.7689999, 0.18899999, 0, 0,\n    0.349, 0.6859999, 0.16799999, 0, 0,\n    0.272, 0.5339999, 0.13099999, 0, 0,\n    0,     0,         0,          1, 0];\n</code></pre>\n\n<p><strong>SubtractBlendFilter.java</strong></p>\n\n<pre><code>public class GPUImageSubtractBlendFilter extends GPUImageTwoInputFilter {\npublic static final String SUBTRACT_BLEND_FRAGMENT_SHADER = \"varying highp vec2 textureCoordinate;\\n\" +\n        \" varying highp vec2 textureCoordinate2;\\n\" +\n        \"\\n\" +\n        \" uniform sampler2D inputImageTexture;\\n\" +\n        \" uniform sampler2D inputImageTexture2;\\n\" +\n        \" \\n\" +\n        \" void main()\\n\" +\n        \" {\\n\" +\n        \"   lowp vec4 textureColor = texture2D(inputImageTexture, textureCoordinate);\\n\" +\n        \"   lowp vec4 textureColor2 = texture2D(inputImageTexture2, textureCoordinate2);\\n\" +\n        \"\\n\" +\n        \"   gl_FragColor = vec4(textureColor.rgb - textureColor2.rgb, textureColor.a);\\n\" +\n        \" }\";\n\npublic GPUImageSubtractBlendFilter() {\n    super(SUBTRACT_BLEND_FRAGMENT_SHADER);\n}\n}\n</code></pre>\n\n<p><strong>GPUIMageTwoInputFilter.java</strong></p>\n\n<pre><code>public class GPUImageTwoInputFilter extends GPUImageFilter {\nprivate static final String VERTEX_SHADER = \"attribute vec4 position;\\n\" +\n        \"attribute vec4 inputTextureCoordinate;\\n\" +\n        \"attribute vec4 inputTextureCoordinate2;\\n\" +\n        \" \\n\" +\n        \"varying vec2 textureCoordinate;\\n\" +\n        \"varying vec2 textureCoordinate2;\\n\" +\n        \" \\n\" +\n        \"void main()\\n\" +\n        \"{\\n\" +\n        \"    gl_Position = position;\\n\" +\n        \"    textureCoordinate = inputTextureCoordinate.xy;\\n\" +\n        \"    textureCoordinate2 = inputTextureCoordinate2.xy;\\n\" +\n        \"}\";\n\npublic int mFilterSecondTextureCoordinateAttribute;\npublic int mFilterInputTextureUniform2;\npublic int mFilterSourceTexture2 = OpenGlUtils.NO_TEXTURE;\nprivate ByteBuffer mTexture2CoordinatesBuffer;\nprivate Bitmap mBitmap;\n\npublic GPUImageTwoInputFilter(String fragmentShader) {\n    this(VERTEX_SHADER, fragmentShader);\n}\n\npublic GPUImageTwoInputFilter(String vertexShader, String fragmentShader) {\n    super(vertexShader, fragmentShader);\n    setRotation(Rotation.NORMAL, false, false);\n}\n\n@Override\npublic void onInit() {\n    super.onInit();\n\n    mFilterSecondTextureCoordinateAttribute = GLES20.glGetAttribLocation(getProgram(), \"inputTextureCoordinate2\");\n    mFilterInputTextureUniform2 = GLES20.glGetUniformLocation(getProgram(), \"inputImageTexture2\"); // This does assume a name of \"inputImageTexture2\" for second input texture in the fragment shader\n    GLES20.glEnableVertexAttribArray(mFilterSecondTextureCoordinateAttribute);\n\n    if (mBitmap != null&amp;&amp;!mBitmap.isRecycled()) {\n        setBitmap(mBitmap);\n    }\n}\n\npublic void setBitmap(final Bitmap bitmap) {\n    if (bitmap != null &amp;&amp; bitmap.isRecycled()) {\n        return;\n    }\n    mBitmap = bitmap;\n    if (mBitmap == null) {\n        return;\n    }\n    runOnDraw(new Runnable() {\n        public void run() {\n            if (mFilterSourceTexture2 == OpenGlUtils.NO_TEXTURE) {\n                if (bitmap == null || bitmap.isRecycled()) {\n                    return;\n                }\n                GLES20.glActiveTexture(GLES20.GL_TEXTURE3);\n                mFilterSourceTexture2 = OpenGlUtils.loadTexture(bitmap, OpenGlUtils.NO_TEXTURE, false);\n            }\n        }\n    });\n}\n\npublic Bitmap getBitmap() {\n    return mBitmap;\n}\n\npublic void recycleBitmap() {\n    if (mBitmap != null &amp;&amp; !mBitmap.isRecycled()) {\n        mBitmap.recycle();\n        mBitmap = null;\n    }\n}\n\npublic void onDestroy() {\n    super.onDestroy();\n    GLES20.glDeleteTextures(1, new int[]{\n            mFilterSourceTexture2\n    }, 0);\n    mFilterSourceTexture2 = OpenGlUtils.NO_TEXTURE;\n}\n\n@Override\nprotected void onDrawArraysPre() {\n    GLES20.glEnableVertexAttribArray(mFilterSecondTextureCoordinateAttribute);\n    GLES20.glActiveTexture(GLES20.GL_TEXTURE3);\n    GLES20.glBindTexture(GLES20.GL_TEXTURE_2D, mFilterSourceTexture2);\n    GLES20.glUniform1i(mFilterInputTextureUniform2, 3);\n\n    mTexture2CoordinatesBuffer.position(0);\n    GLES20.glVertexAttribPointer(mFilterSecondTextureCoordinateAttribute, 2, GLES20.GL_FLOAT, false, 0, mTexture2CoordinatesBuffer);\n}\n\npublic void setRotation(final Rotation rotation, final boolean flipHorizontal, final boolean flipVertical) {\n    float[] buffer = TextureRotationUtil.getRotation(rotation, flipHorizontal, flipVertical);\n\n    ByteBuffer bBuffer = ByteBuffer.allocateDirect(32).order(ByteOrder.nativeOrder());\n    FloatBuffer fBuffer = bBuffer.asFloatBuffer();\n    fBuffer.put(buffer);\n    fBuffer.flip();\n\n    mTexture2CoordinatesBuffer = bBuffer;\n}\n}\n</code></pre>\n\n<p>My guess it involves changing something with <code>String SUBTRACT_BLEND_GRAGMENT_SHADER</code> &amp; <code>String VERTEX_SHADER</code>  . </p>\n", "tags": ["java", "android", "opengl-es", "gpuimage"], "title": "Use ColorMatrix or HexColor in BlendModeFilter - Android?", "answer_count": 1, "creation_date": 1445907431, "score": 32, "link": "http://stackoverflow.com/questions/33358248/use-colormatrix-or-hexcolor-in-blendmodefilter-android", "answers": [{"body": "<p>Color matrix is the entity that defines new color component values for some pixel as linear functions of the current color components of the same pixel. I.e. the only input for color matrix conversion is the pixel, which colors should be transformed.  There is no way to involve another pixels to such conversion. Regardless if they are pixels from another image or even neighbors of transformed pixel - it is impossible.</p>\n", "title": "Use ColorMatrix or HexColor in BlendModeFilter - Android?", "answer_id": 39493675, "link": "http://stackoverflow.com/questions/33358248/use-colormatrix-or-hexcolor-in-blendmodefilter-android/39493675#39493675", "tags": ["java", "android", "opengl-es", "gpuimage"]}], "question_id": 33358248}, {"body": "<p>I come from a C++ background and I am currently learning Java. One question arose when I have tried using some third party libraries. How do I determine if the call to a method taking an object reference as parameter modifies the object?\nIn C++ this is clear thanks to the use of the const keyword. If the method signature is:</p>\n\n<pre><code>void foo(Boo&amp; boo);\n</code></pre>\n\n<p>I know that the referenced object might be modified, while if the method signature is:</p>\n\n<pre><code>void foo(const Boo&amp; boo);\n</code></pre>\n\n<p>The compiler guarantees that the referenced object is not modified.</p>\n\n<p>I haven't seen something analogous in Java, as only the reference itself can be declared final, not the referenced object, and a final argument doesn't make much sense in the first place since it is passed by value anyway. Therefore, when I see a method such as:</p>\n\n<pre><code>void foo(Boo boo) {...}\n</code></pre>\n\n<p>How do I determine if the object referenced by boo is modified inside the body of the function (maybe using annotations)? If there is no way to know, is there some widely used convention or some best practices to avoid confusion and bugs?</p>\n", "tags": ["java", "immutability"], "title": "How to determine if a Java method modifies an object passed as parameter", "answer_count": 7, "creation_date": 1440316084, "score": 31, "link": "http://stackoverflow.com/questions/32164385/how-to-determine-if-a-java-method-modifies-an-object-passed-as-parameter", "answers": [{"body": "<p>There's no such facility built in to the language, unfortunately. A good defensive practice is to define the data objects you pass around as immutable (i.e., without any public method that allows modifying their state). If you are <strong>really</strong> concerned about this, you could copy/clone an object before passing it to a method you don't trust, but this is usually a redundant precaution.</p>\n", "title": "How to determine if a Java method modifies an object passed as parameter", "answer_id": 32164414, "link": "http://stackoverflow.com/questions/32164385/how-to-determine-if-a-java-method-modifies-an-object-passed-as-parameter/32164414#32164414", "tags": ["java", "immutability"]}, {"body": "<blockquote>\n  <p>how do I determine if the object referenced by boo is modified inside the body of the function (maybe using annotations)? </p>\n</blockquote>\n\n<p>The only way is to read the code unfortunately.</p>\n\n<blockquote>\n  <p>If there is no way to know, is there some widely used convention or some best practices to avoid confusion and bugs?</p>\n</blockquote>\n\n<p>The common convention is to pass an object which cannot be modified, using a wrapper if needed.  This ensure the class cannot modify the object.</p>\n\n<pre><code>List&lt;String&gt; readOnly = Collections.unmodifiableList(list);\n</code></pre>\n\n<p>If the object is Cloneable, you can also use <code>clone()</code> but another common approach is to use a copy.</p>\n\n<pre><code>List&lt;String&gt; readOnly = new ArrayList&lt;&gt;(list);\n</code></pre>\n\n<p>If you care about such behaviour, unit tests can show whether a method modifies an object or not.  If you have unit tests already, it is usually one or two lines extra to check for this.</p>\n", "title": "How to determine if a Java method modifies an object passed as parameter", "answer_id": 32164423, "link": "http://stackoverflow.com/questions/32164385/how-to-determine-if-a-java-method-modifies-an-object-passed-as-parameter/32164423#32164423", "tags": ["java", "immutability"]}, {"body": "<p>There is a way ,  that the method developer should mark parameter as final , if it is not going to modify the parameter.</p>\n\n<pre><code>     public void test(final Object param)\n</code></pre>\n\n<p>However very few people follow this , so it is difficult to know. However good programmer follow this rule , especially writing the api. If you want to write method and expose it. Make param final to indicate that passed object is not going to be modified.</p>\n", "title": "How to determine if a Java method modifies an object passed as parameter", "answer_id": 32164426, "link": "http://stackoverflow.com/questions/32164385/how-to-determine-if-a-java-method-modifies-an-object-passed-as-parameter/32164426#32164426", "tags": ["java", "immutability"]}, {"body": "<p>A side effect analysis is not built into the Java language.</p>\n\n<p>You can perform side effect analysis via manual inspection, but several tools exist to automate the process.</p>\n\n<p>You can use an inference tool (<a href=\"http://jppa.sourceforge.net/\">1</a>, <a href=\"https://github.com/typetools/javarifier\">2</a>,  <a href=\"https://github.com/proganalysis/type-inference\">3</a>) to detect whether your code side-effects a parameter.</p>\n\n<p>You can also write purity or side-effect annotations in your code and then use a checking/verification tool (<a href=\"http://types.cs.washington.edu/checker-framework/current/checker-framework-manual.html#igj-checker\">1</a>, <a href=\"http://types.cs.washington.edu/checker-framework/current/checker-framework-manual.html#javari-checker\">2</a>) to ensure that your code conforms to the annotations you have written.</p>\n\n<p>All of the above-linked tools have limitations, but you might find them useful.  If you know of other tools, mention them in comments.</p>\n", "title": "How to determine if a Java method modifies an object passed as parameter", "answer_id": 32164819, "link": "http://stackoverflow.com/questions/32164385/how-to-determine-if-a-java-method-modifies-an-object-passed-as-parameter/32164819#32164819", "tags": ["java", "immutability"]}, {"body": "<p><em>NOTE: this answer is a more detailed version of</em></p>\n\n<blockquote>\n  <p><a href=\"http://stackoverflow.com/a/32164819/814206\">You can also write purity or side-effect annotations in your code</a> \u2014 <a href=\"http://stackoverflow.com/users/173852/mernst\">mernst</a></p>\n</blockquote>\n\n<p>There exists the <a href=\"http://types.cs.washington.edu/checker-framework/\">Checker Framework</a> among the various things it can check at compile-time via annotations is the <a href=\"http://types.cs.washington.edu/checker-framework/current/checker-framework-manual.html#igj-checker\">IJG Immutablity checker</a>.  This checker allows you to annotate object references with <a href=\"http://types.cs.washington.edu/checker-framework/current/api/org/checkerframework/checker/igj/qual/Immutable.html\"><code>@Immutable</code></a> or <a href=\"http://types.cs.washington.edu/checker-framework/current/api/org/checkerframework/checker/igj/qual/ReadOnly.html\"><code>@ReadOnly</code></a>.</p>\n\n<p>The problem is that you often would have to <a href=\"http://types.cs.washington.edu/checker-framework/current/checker-framework-manual.html#annotating-libraries\">annotate the library</a> yourself.  To ease your task the Checker Framework can <a href=\"http://types.cs.washington.edu/checker-framework/current/checker-framework-manual.html#effective-qualifier\">automatically infer</a> part of the annotations; you will still have to do much yourself.</p>\n", "title": "How to determine if a Java method modifies an object passed as parameter", "answer_id": 32165123, "link": "http://stackoverflow.com/questions/32164385/how-to-determine-if-a-java-method-modifies-an-object-passed-as-parameter/32165123#32165123", "tags": ["java", "immutability"]}, {"body": "<blockquote>\n  <p>How do I determine if the object referenced by boo is modified inside\n  the body of the function (maybe using annotations)?</p>\n</blockquote>\n\n<p>I must agree with other answers that there is no direct way to determine that method will modify your object or not and yes to make sure that method can not modify your <code>Object</code> you all have to do it is from your side.</p>\n\n<blockquote>\n  <p>If there is no way to know, is there some widely used convention or\n  some best practices to avoid confusion and bugs?</p>\n</blockquote>\n\n<p>Here the <strong><em>method name</em></strong> comes to the scene. Moving ahead with the naming convention of method we have to take a look at some method declarations which clearly convince you that your <code>Object</code> will not be changed at all.</p>\n\n<p>For example, You know that <code>Arrays.copyOf</code> will not change your actual array, <code>System.out.println(boo)</code> will not change your <code>boo</code></p>\n\n<p>Method names are real <em>weapons</em> to provide as much information as possible to the method user.<em>(Yes! it's always not possible but quite a good practice to follow.)</em></p>\n\n<p>Let's consider it in your case that say <code>printBoo</code> will only print, <code>copyBoo</code> will only copy, <code>clearBoo</code> will reset all attributes, <code>checkAndCreateNewBoo</code> will check your <code>boo</code> <code>Object</code> and create new if required.</p>\n\n<p>So, ultimately if we can use them in a proper way caller can be assured with the fact that <code>Object</code> will remain the same after calling the method.</p>\n", "title": "How to determine if a Java method modifies an object passed as parameter", "answer_id": 32167166, "link": "http://stackoverflow.com/questions/32164385/how-to-determine-if-a-java-method-modifies-an-object-passed-as-parameter/32167166#32167166", "tags": ["java", "immutability"]}, {"body": "<p>As everyone says, prefer using immutable objects and also avoid <strong>void methods</strong></p>\n\n<p>The available purposes of methods like this</p>\n\n<pre><code>void foo(Boo boo) {...}\n</code></pre>\n\n<p>are to change the state of the object itself or change the object passed as a parameter</p>\n\n<pre><code>void completOrder(Order order) { ... }\n//or\nvoid parserTokenEnded(String str) { ... }\n</code></pre>\n", "title": "How to determine if a Java method modifies an object passed as parameter", "answer_id": 32293732, "link": "http://stackoverflow.com/questions/32164385/how-to-determine-if-a-java-method-modifies-an-object-passed-as-parameter/32293732#32293732", "tags": ["java", "immutability"]}], "question_id": 32164385}, {"body": "<p>I try to understand why there is a difference between accessibility of class members when speaking about constructors.</p>\n\n<p>Consider the following example:</p>\n\n<pre><code>class A {\n  static class B {  \n    private B(String s) {}\n    private void foo() {}\n  }\n  static class C extends B {\n    public C(String s) {\n      super(s); // call B(String), which is private, and obviously accessible\n    }\n    void bar() {\n      foo(); // compilation error (symbol unknown), as B.foo() is private\n    }\n  }\n}\n</code></pre>\n\n<p>Private members of <code>A</code>, as being private, should not be accessible from <code>B</code>. For fields and methods, it is the case, but it seems that constructors are not following the same rule.</p>\n\n<p>From the JLS-8 (<a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-6.html#jls-6.6.1\">6.6.1. Determining Accessibility</a>), we can read:</p>\n\n<blockquote>\n  <p>[...]</p>\n  \n  <p>A member (class, interface, field, or method) of a reference type, or a constructor of a class type, is accessible only if the type is accessible and the member or constructor is declared to permit access:</p>\n  \n  <ul>\n  <li><p>[...]</p></li>\n  <li><p>Otherwise, the member or constructor is declared <code>private</code>, and access is permitted if and only if it occurs within the body of the top level class (\u00a77.6) that encloses the declaration of the member or constructor.</p></li>\n  </ul>\n</blockquote>\n\n<p>Can anyone explain me why the constructor is accessible from <code>C</code>, even while being declared <code>private</code>?</p>\n", "tags": ["java", "constructor", "private"], "title": "Java private constructors visibility", "answer_count": 3, "creation_date": 1447926601, "score": 31, "link": "http://stackoverflow.com/questions/33800344/java-private-constructors-visibility", "answers": [{"body": "<p>The method <code>foo()</code> is private, so you don't inherit it and can't call it directly from the <code>C</code> class. </p>\n\n<p>However, you can see private methods and constructor from <code>B</code> since everything is declared in the same containing class, and access them with <code>super</code>, which is why <code>super()</code> works.\nIn the same way, you can access <code>foo</code> with <code>super.foo()</code>.</p>\n\n<p>Note that you can redefine a new foo method in <code>C</code>, but this method will not override <code>B.foo()</code>.</p>\n", "title": "Java private constructors visibility", "answer_id": 33800659, "link": "http://stackoverflow.com/questions/33800344/java-private-constructors-visibility/33800659#33800659", "tags": ["java", "constructor", "private"]}, {"body": "<p>So the trick here might be the following : </p>\n\n<p>you cannot access <code>foo</code> because it is declared private so you don't inherit it in C. </p>\n\n<p>However, as was noted in comments you can access <code>super.foo();</code> because  <code>super</code> refers to a type that is declared in the same top level class (see JLS 6.6.1 for this). </p>\n\n<p>Then the trick is that calling <code>super(s)</code> can be viewed as calling <code>super.&lt;init&gt;(s)</code> which ends up being the same case as <code>super.foo()</code></p>\n", "title": "Java private constructors visibility", "answer_id": 33800724, "link": "http://stackoverflow.com/questions/33800344/java-private-constructors-visibility/33800724#33800724", "tags": ["java", "constructor", "private"]}, {"body": "<p>Foo() method is not accessible in class C, as foo() method is private and private method can not be inherited to base class.</p>\n\n<p>For constructors, CONSTRUCTORS NEVER EVER BE INHERITED. Also, I compiled this code :</p>\n\n<pre><code> class Vehicle{  \n        int speed=50;  \n        private Vehicle()\n        {\n           System.out.println(\"Private Vehicle constructor\");\n        }\n    } \n    public class Bike4 extends Vehicle{  \n        int speed=100;   \n    Bike4()\n    {\n        super();\n         System.out.println(\"Hi I n constructor\");\n    }\n  void display(){  \n   System.out.println(super.speed);//will print speed of Vehicle now  \n  }  \n  public static void main(String args[]){  \n   Bike4 b=new Bike4();  \n   b.display();  \n\n}  \n}  \n</code></pre>\n\n<p>And get Compile time Error : Vehicle() has private access in Vehicle\n        super();\n        ^\nWhich clearly indicates that a private constructor cannot be accessed using super. If we are able to initialize or access a private constructor, then what's the point in creating a private constructor.</p>\n", "title": "Java private constructors visibility", "answer_id": 33801293, "link": "http://stackoverflow.com/questions/33800344/java-private-constructors-visibility/33801293#33801293", "tags": ["java", "constructor", "private"]}], "question_id": 33800344}, {"body": "<p>I want to integrate the Aadhaar Card Authentication API for Aadhaar number Verification in PHP. I tried <a href=\"https://developer.uidai.gov.in/site/book/export/html/18\">this</a> and wrote code for API access.  </p>\n\n<p>How can I generate the XML encryption field data below in PHP? <a href=\"https://developer.uidai.gov.in/site/node/24\">This sample code</a> is written in Java. </p>\n\n<pre><code>&lt;Auth uid=\"\" tid=\"\" ac=\"\" sa=\"\" ver=\"\" txn=\"\" lk=\"\"&gt;\n    &lt;Uses pi=\"\" pa=\"\" pfa=\"\" bio=\"\" bt=\"\" pin=\"\" otp=\"\"/&gt;\n    &lt;Tkn type=\"\" value=\"\"/&gt;\n    &lt;Meta udc=\"\" fdc=\"\" idc=\"\" pip=\"\" lot=\u201dG|P\u201d lov=\"\"/&gt;\n    &lt;Skey ci=\"\" ki=\"\"&gt;encrypted and encoded session key&lt;/Skey&gt;\n    &lt;Data type=\u201dX|P\u201d&gt;encrypted PID block&lt;/Data&gt;\n    &lt;Hmac&gt;SHA-256 Hash of Pid block, encrypted and then encoded&lt;/Hmac&gt;\n    &lt;Signature&gt;Digital signature of AUA&lt;/Signature&gt;\n&lt;/Auth&gt;\n</code></pre>\n", "tags": ["java", "php", "api", "authentication", "curl"], "title": "How To integrate Aadhaar Card Authentication Api for Aadhaar number Verification in PHP?", "answer_count": 1, "creation_date": 1436770181, "score": 31, "link": "http://stackoverflow.com/questions/31377015/how-to-integrate-aadhaar-card-authentication-api-for-aadhaar-number-verification", "answers": [{"body": "<p>To generate the XML, you could use this library to generate it quite easily:</p>\n\n<p><a href=\"https://github.com/iwyg/xmlbuilder\" rel=\"nofollow\">https://github.com/iwyg/xmlbuilder</a></p>\n\n<p>For the encryption; I could be wrong but it looks like (<a href=\"https://developer.uidai.gov.in/site/book/export/html/18\" rel=\"nofollow\">from this page</a>) you can generate the encoded results in java one time and just paste in the results to your PHP variables.</p>\n", "title": "How To integrate Aadhaar Card Authentication Api for Aadhaar number Verification in PHP?", "answer_id": 35161665, "link": "http://stackoverflow.com/questions/31377015/how-to-integrate-aadhaar-card-authentication-api-for-aadhaar-number-verification/35161665#35161665", "tags": ["java", "php", "api", "authentication", "curl"]}], "question_id": 31377015}, {"body": "<pre><code>List&lt;Integer&gt; integer = Stream.generate(new Supplier&lt;Integer&gt;() {\n    int i = 0 ;\n\n    @Override\n    public Integer get() {\n        return ++i;\n    }\n}).filter(j -&gt; j &lt; 5)\n  .limit(10)   // Note the call to limit here\n  .collect(Collectors.toList());\n</code></pre>\n\n<p>Counter to my expectation, the <code>collect</code> call never returns. Setting <code>limit</code> before <code>filter</code> produces the expected result. Why?  </p>\n", "tags": ["java", "java-8", "java-stream"], "title": "Why doesn&#39;t Stream.limit work as expected in this snippet?", "answer_count": 4, "creation_date": 1449645953, "score": 30, "link": "http://stackoverflow.com/questions/34172978/why-doesnt-stream-limit-work-as-expected-in-this-snippet", "answers": [{"body": "<p>Since there are only 4 elements that pass the filter, <code>limit(10)</code> never reaches 10 elements, so the Stream pipeline keeps generating new elements and feeding them to the filter, trying to reach 10 elements that pass the filter, but since only the first 4 elements pass the filter, the processing never ends (at least until <code>i</code> overflows).</p>\n\n<p>The Stream pipeline is not smart enough to know that no more elements can pass the filter, so it keeps processing new elements.</p>\n", "title": "Why doesn&#39;t Stream.limit work as expected in this snippet?", "answer_id": 34173040, "link": "http://stackoverflow.com/questions/34172978/why-doesnt-stream-limit-work-as-expected-in-this-snippet/34173040#34173040", "tags": ["java", "java-8", "java-stream"]}, {"body": "<p>Flipping the <code>limit</code> and the <code>filter</code> clauses has different behaviors.</p>\n\n<p>If you put the <code>limit</code> first, the stream will first generate 10 integers [1..10], and then filter them leaving only those smaller than 5.</p>\n\n<p>In the original ordering, with the <code>filter</code> applied first, integers are generated and filtered until you reach 10 elements. This isn't an infinite operator, as <code>i</code> in the supplier will eventually overflow, but it will take a while, especially on a slow computer, to reach <code>MAX_INT</code>.</p>\n", "title": "Why doesn&#39;t Stream.limit work as expected in this snippet?", "answer_id": 34173110, "link": "http://stackoverflow.com/questions/34172978/why-doesnt-stream-limit-work-as-expected-in-this-snippet/34173110#34173110", "tags": ["java", "java-8", "java-stream"]}, {"body": "<p>If you want to stop <em>either</em> if number 5 is reached or 10 elements are collected, there's <code>Stream.takeWhile()</code> method added in Java-9:</p>\n\n<pre><code>List&lt;Integer&gt; integer = Stream.generate(new Supplier&lt;Integer&gt;() {\n    int i = 0 ;\n\n    @Override\n    public Integer get() {\n        return ++i;\n    }\n}).takeWhile(j -&gt; j &lt; 5).limit(10).collect(Collectors.toList());\n</code></pre>\n", "title": "Why doesn&#39;t Stream.limit work as expected in this snippet?", "answer_id": 34173658, "link": "http://stackoverflow.com/questions/34172978/why-doesnt-stream-limit-work-as-expected-in-this-snippet/34173658#34173658", "tags": ["java", "java-8", "java-stream"]}, {"body": "<p>It will finish, after the Supplier overflows and starts generating negative numbers. The resulting list will contain:</p>\n\n<pre><code>[1, 2, 3, 4, -2147483648, -2147483647, -2147483646, -2147483645, -2147483644, -2147483643]\n</code></pre>\n\n<p>The reason for this is in other answers. On my i7 machine it took 40 seconds to complete.</p>\n", "title": "Why doesn&#39;t Stream.limit work as expected in this snippet?", "answer_id": 34179446, "link": "http://stackoverflow.com/questions/34172978/why-doesnt-stream-limit-work-as-expected-in-this-snippet/34179446#34179446", "tags": ["java", "java-8", "java-stream"]}], "question_id": 34172978}, {"body": "<p>I have a <code>List&lt;Item&gt;</code> collection.\nI need to convert it into <code>Map&lt;Integer, Item&gt;</code>\nThe key of the map must be the index of the item in the collection.\nI can not figure it out how to do this with streams.\nSomething like:</p>\n\n<pre><code>items.stream().collect(Collectors.toMap(...));\n</code></pre>\n\n<p>Any help?</p>\n\n<p>As this question is identified as possible duplicate I need to add that my concrete problem was - how to get the position of the item in the list and put it as a key value</p>\n", "tags": ["java", "dictionary", "collections", "java-8", "java-stream"], "title": "Java 8 list to map with stream", "answer_count": 6, "creation_date": 1443593630, "score": 30, "link": "http://stackoverflow.com/questions/32859038/java-8-list-to-map-with-stream", "answers": [{"body": "<p>You can create a <code>Stream</code> of the indices using an <code>IntStream</code> and then convert them to a <code>Map</code> :</p>\n\n<pre><code>Map&lt;Integer,Item&gt; map = \n    IntStream.range(0,items.size())\n             .boxed()\n             .collect(Collectors.toMap (i -&gt; i, i -&gt; items.get(i)));\n</code></pre>\n", "title": "Java 8 list to map with stream", "answer_id": 32859065, "link": "http://stackoverflow.com/questions/32859038/java-8-list-to-map-with-stream/32859065#32859065", "tags": ["java", "dictionary", "collections", "java-8", "java-stream"]}, {"body": "<p><strong>EDIT:</strong>\nThe previous solution had time complexity of O(n2) and its better to use the following solution:</p>\n\n<pre><code>Map&lt;Integer,Item&gt; outputMap = IntStream.range(0,inputList.size()).boxed().collect(Collectors.toMap(Function.identity(), i-&gt;inputList.get(i)));\n</code></pre>\n\n<p><strong>Below solution is not an ideal solution.</strong></p>\n\n<p>You can also use the following (assuming no duplicates):</p>\n\n<pre><code>Map&lt;Integer,Item&gt; map = list.stream().collect(Collectors.toMap(i -&gt; list.indexOf(i), i -&gt; i));\n</code></pre>\n\n<p>An example would be like:</p>\n\n<pre><code>List&lt;Item&gt; list = new ArrayList&lt;&gt;();\nlist.add(new Item(\"Apple\"));\nlist.add(new Item(\"Bat\"));\nMap&lt;Integer,Item&gt; map = list.stream().collect(Collectors.toMap(i -&gt; list.indexOf(i), i -&gt; i));\nSystem.out.println(map.entrySet());\n</code></pre>\n", "title": "Java 8 list to map with stream", "answer_id": 32859238, "link": "http://stackoverflow.com/questions/32859038/java-8-list-to-map-with-stream/32859238#32859238", "tags": ["java", "dictionary", "collections", "java-8", "java-stream"]}, {"body": "<p>Don't feel like you have to do <em>everything</em> in/with the stream. I would just do:</p>\n\n<pre><code>AtomicInteger index = new AtomicInteger();\nitems.stream().collect(Collectors.toMap(i -&gt; index.getAndIncrement(), i -&gt; i));\n</code></pre>\n\n<p>As long as you don't parallelise the stream this will work and it avoids potentially expensive and/or problematic (in the case of duplicates) <code>get()</code> and <code>indexOf()</code> operations.</p>\n\n<p>(You cannot use a regular <code>int</code> variable in place of the <code>AtomicInteger</code> because variables used from outside a lambda expression must be effectively final. Note that when uncontested (as in this case), <code>AtomicInteger</code> is very fast and won't pose a performance problem. But if it worries you you can use a non-thread-safe counter.)</p>\n", "title": "Java 8 list to map with stream", "answer_id": 32863263, "link": "http://stackoverflow.com/questions/32859038/java-8-list-to-map-with-stream/32863263#32863263", "tags": ["java", "dictionary", "collections", "java-8", "java-stream"]}, {"body": "<p>One more solution just for completeness is to use custom collector:</p>\n\n<pre><code>public static &lt;T&gt; Collector&lt;T, ?, Map&lt;Integer, T&gt;&gt; toMap() {\n    return Collector.of(HashMap::new, (map, t) -&gt; map.put(map.size(), t), \n            (m1, m2) -&gt; {\n                int s = m1.size();\n                m2.forEach((k, v) -&gt; m1.put(k+s, v));\n                return m1;\n            });\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>Map&lt;Integer, Item&gt; map = items.stream().collect(toMap());\n</code></pre>\n\n<p>This solution is parallel-friendly and does not depend on the source (you can use list without random access or <code>Files.lines()</code> or whatever).</p>\n", "title": "Java 8 list to map with stream", "answer_id": 32864029, "link": "http://stackoverflow.com/questions/32859038/java-8-list-to-map-with-stream/32864029#32864029", "tags": ["java", "dictionary", "collections", "java-8", "java-stream"]}, {"body": "<p>Using a third party library (<a href=\"https://github.com/poetix/protonpack\" rel=\"nofollow\">protonpack</a> for example, but there are others) you can <code>zip</code> the value with its index and voila:</p>\n\n<pre><code>StreamUtils.zipWithIndex(items.stream())\n    .collect(Collectors.toMap(Indexed::getIndex, Indexed::getValue));\n</code></pre>\n\n<p>although <code>getIndex</code> returns a <code>long</code>, so you may need to cast it using something similar to:</p>\n\n<pre><code>i -&gt; Integer.valueOf((int) i.getIndex())\n</code></pre>\n", "title": "Java 8 list to map with stream", "answer_id": 32869478, "link": "http://stackoverflow.com/questions/32859038/java-8-list-to-map-with-stream/32869478#32869478", "tags": ["java", "dictionary", "collections", "java-8", "java-stream"]}, {"body": "<p><a href=\"http://stackoverflow.com/a/32859065/1441122\">Eran's answer</a> is usually the best approach for random-access lists.</p>\n\n<p>If your <code>List</code> isn't random access, or if you have a <code>Stream</code> instead of a <code>List</code>, you can use <code>forEachOrdered</code>:</p>\n\n<pre><code>Stream&lt;Item&gt; stream = ... ;\nMap&lt;Integer, Item&gt; map = new HashMap&lt;&gt;();\nAtomicInteger index = new AtomicInteger();\nstream.forEachOrdered(item -&gt; map.put(index.getAndIncrement(), item));\n</code></pre>\n\n<p>This is safe, if the stream is parallel, even though the destination map is thread-unsafe and is operated upon as a side effect. The <code>forEachOrdered</code> guarantees that items are processed one-at-a-time, in order. For this reason it's unlikely that any speedup will result from running in parallel. (There might be some speedup if there are expensive operations in the pipeline before the <code>forEachOrdered</code>.)</p>\n", "title": "Java 8 list to map with stream", "answer_id": 32918035, "link": "http://stackoverflow.com/questions/32859038/java-8-list-to-map-with-stream/32918035#32918035", "tags": ["java", "dictionary", "collections", "java-8", "java-stream"]}], "question_id": 32859038}, {"body": "<p>I'm reading up about Java streams and discovering new things as I go along. One of the new things I found was the <code>peek()</code> function. Almost everything I've read on peek says it should be used to debug your Streams.</p>\n\n<p>What if I had a Stream where each Account has a username, password field and a login() and loggedIn() method.</p>\n\n<p>I also have</p>\n\n<pre><code>Consumer&lt;Account&gt; login = account -&gt; account.login();\n</code></pre>\n\n<p>and</p>\n\n<pre><code>Predicate&lt;Account&gt; loggedIn = account -&gt; account.loggedIn();\n</code></pre>\n\n<p>Why would this be so bad?</p>\n\n<pre><code>List&lt;Account&gt; accounts; //assume it's been setup\nList&lt;Account&gt; loggedInAccount = \naccounts.stream()\n    .peek(login)\n    .filter(loggedIn)\n    .collect(Collectors.toList());\n</code></pre>\n\n<p>Now as far as I can tell this does exactly what it's intended to do. It;</p>\n\n<ul>\n<li>Takes a list of accounts</li>\n<li>Tries to log in to each account</li>\n<li>Filters out any account which aren't logged in</li>\n<li>Collects the logged in accounts into a new list</li>\n</ul>\n\n<p>What is the downside of doing something like this? Any reason I shouldn't proceed? Lastly, if not this solution then what?</p>\n\n<p>The original version of this used the .filter() method as follows;</p>\n\n<pre><code>.filter(account -&gt; {\n        account.login();\n        return account.loggedIn();\n    })\n</code></pre>\n", "tags": ["java", "java-8", "java-stream", "peek"], "title": "In Java streams is peek really only for debugging?", "answer_count": 3, "creation_date": 1447175578, "score": 30, "link": "http://stackoverflow.com/questions/33635717/in-java-streams-is-peek-really-only-for-debugging", "answers": [{"body": "<p>Using <code>map()</code> for this type of operation would eliminate any doubts about its correctness.</p>\n\n<pre><code>accounts.stream().map(acct -&gt; {\n  acct.login();\n  return acct;\n}).filter(Account::loggedIn).collect(Collectors.toList());\n</code></pre>\n", "title": "In Java streams is peek really only for debugging?", "answer_id": 33636301, "link": "http://stackoverflow.com/questions/33635717/in-java-streams-is-peek-really-only-for-debugging/33636301#33636301", "tags": ["java", "java-8", "java-stream", "peek"]}, {"body": "<p>The important thing you have to understand, is that streams are driven by the <em>terminal operation</em>. The terminal operation determines whether all elements have to be processed or any at all. So <code>collect</code> is an operation which processes each item, whereas <code>findAny</code> may stop processing items once it encountered a matching element.</p>\n\n<p>And <code>count()</code> may not process any elements at all when it can determine the size of the stream without processing the items. Since this is an optimization not made in Java\u00a08, but which will be in Java\u00a09, there might be surprises when you switch to Java\u00a09 and have code relying on <code>count()</code> processing all items. This is also connected to other implementation dependent details, e.g. even in Java\u00a09, the reference implementation will not be able to predict the size of an infinite stream source combined with <code>limit</code> while there is no fundamental limitation preventing such prediction.</p>\n\n<p>Since <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#peek-java.util.function.Consumer-\"><code>peek</code></a> allows \u201cperforming the provided action on each element <em>as elements are consumed from the resulting stream</em>\u201d, it does not mandate processing of elements but will perform the action dependent on what the terminal operation needs. This implies that you have to use it with great care if you need a particular processing, e.g. want to apply an action on all elements. It works if the terminal operation is guaranteed to process all items, but even then, you must be sure that not the next developer changes the terminal operation (or you forget that subtle aspect).</p>\n\n<p>Further, while streams guaranty maintaining the encounter order for certain combination of operations even for parallel streams, these guarantees do not apply to <code>peek</code>. When collecting into a list, the resulting list will have the right order for ordered parallel streams, but the <code>peek</code> action may get invoked in an arbitrary order and concurrently.</p>\n\n<p>So the most useful thing you can do with <code>peek</code> is to find out whether a stream element has been processed which is exactly what the API documentation says:</p>\n\n<blockquote>\n  <p>This method exists mainly to support debugging, where you want to see the elements as they flow past a certain point in a pipeline</p>\n</blockquote>\n", "title": "In Java streams is peek really only for debugging?", "answer_id": 33636377, "link": "http://stackoverflow.com/questions/33635717/in-java-streams-is-peek-really-only-for-debugging/33636377#33636377", "tags": ["java", "java-8", "java-stream", "peek"]}, {"body": "<p>The key takeaway from this:</p>\n\n<p><strong>Don't use the API in an unintended way, even if it accomplishes your immediate goal.</strong> That approach may break in the future, and it is also unclear to future maintainers.</p>\n\n<hr>\n\n<p>There is no harm in breaking this out to multiple operations, as they are distinct operations.  There <em>is</em> harm in using the API in an unclear and unintended way, which may have ramifications if this particular behavior is modified in future versions of Java.</p>\n\n<p>Using <code>forEach</code> on this operation would make it clear to the maintainer that there is an <em>intended</em> side effect on each element of <code>accounts</code>, and that you are performing some operation that can mutate it.</p>\n\n<p>It's also more conventional in the sense that <code>peek</code> is an intermediate operation which doesn't operate on the entire collection until the terminal operation runs, but <code>forEach</code> is indeed a terminal operation.  This way, you can make strong arguments around the behavior and the flow of your code as opposed to asking questions about if <code>peek</code> would behave the same as <code>forEach</code> does in this context.</p>\n\n<pre><code>accounts.forEach(a -&gt; a.login());\nList&lt;Account&gt; loggedInAccounts = accounts.stream()\n                                         .filter(Account::loggedIn)\n                                         .collect(Collectors.toList());\n</code></pre>\n", "title": "In Java streams is peek really only for debugging?", "answer_id": 33636457, "link": "http://stackoverflow.com/questions/33635717/in-java-streams-is-peek-really-only-for-debugging/33636457#33636457", "tags": ["java", "java-8", "java-stream", "peek"]}], "question_id": 33635717}, {"body": "<p>I run my ProGuard for my Android project and get the following warnings: </p>\n\n<pre><code>Note: duplicate definition of library class [org.apache.http.conn.scheme.HostNameResolver]\nNote: duplicate definition of library class [org.apache.http.conn.scheme.SocketFactory]\nNote: duplicate definition of library class [org.apache.http.conn.ConnectTimeoutException]\nNote: duplicate definition of library class [org.apache.http.params.HttpParams]\nNote: duplicate definition of library class [android.net.http.SslCertificate$DName]\nNote: duplicate definition of library class [android.net.http.SslError]\nNote: duplicate definition of library class [android.net.http.SslCertificate]\n\nNote: there were 7 duplicate class definitions.\n</code></pre>\n\n<p>I found <a href=\"http://stackoverflow.com/questions/32535346/android-proguard-error-in-android-studio\">here</a> to fix this with ignoring it with: </p>\n\n<pre><code>-keep class org.apache.http.** { *; }\n-dontwarn org.apache.http.**\n-keep class android.net.http.** { *; }\n-dontwarn android.net.http.**\n</code></pre>\n\n<p>I do not see a way to remove the duplicates from the used libraries. Even after using <code>dontwarn</code> the warnings do not vanish.</p>\n\n<p><strong>Is this the right way of handling this warning in just ignoring it or could this lead to problems?</strong> </p>\n", "tags": ["java", "android", "android-studio", "proguard", "android-proguard"], "title": "ProGuard: duplicate definition of library class?", "answer_count": 3, "creation_date": 1444428227, "score": 30, "link": "http://stackoverflow.com/questions/33047806/proguard-duplicate-definition-of-library-class", "answers": [{"body": "<p>Probably, you have mentioned \"-injars\" and -libraryjars\" in your proguard-project.txt,considering the latest build system takes care of mentioning them for you ..so you dont need to mention it again.</p>\n\n<p>source: \n<a href=\"http://proguard.sourceforge.net/manual/troubleshooting.html#duplicateclass\">http://proguard.sourceforge.net/manual/troubleshooting.html#duplicateclass</a></p>\n\n<p>I think this will help.:) </p>\n", "title": "ProGuard: duplicate definition of library class?", "answer_id": 33782969, "link": "http://stackoverflow.com/questions/33047806/proguard-duplicate-definition-of-library-class/33782969#33782969", "tags": ["java", "android", "android-studio", "proguard", "android-proguard"]}, {"body": "<p>If you add a proguard option <code>-printconfiguration config.txt</code> you'll see proguard adds </p>\n\n<blockquote>\n  <p>-libraryjars 'D:\\tools\\android\\platforms\\android-23\\android.jar'</p>\n  \n  <p>-libraryjars 'D:\\tools\\android\\platforms\\android-23\\optional\\org.apache.http.legacy.jar'</p>\n</blockquote>\n\n<p>your duplicated classes (e.g. SslError) are presented in both android.jar and org.apache.http.legacy.jar</p>\n\n<p>Proguard adds second jar even if you don't <code>useLibrary 'org.apache.http.legacy'</code>\nHere is an <a href=\"https://code.google.com/p/android/issues/detail?id=194513\">open bug</a> describing the problem.</p>\n\n<p>So now we can't do anything with the issue. Just ignore it:</p>\n\n<pre><code>-dontnote android.net.http.*\n-dontnote org.apache.commons.codec.**\n-dontnote org.apache.http.**\n</code></pre>\n\n<p>There is no need to keep the classes as long as they are located in library jar (phone's library actually). \ndontwarn doesn't work because it's not a warning, it's a note.</p>\n", "title": "ProGuard: duplicate definition of library class?", "answer_id": 35742739, "link": "http://stackoverflow.com/questions/33047806/proguard-duplicate-definition-of-library-class/35742739#35742739", "tags": ["java", "android", "android-studio", "proguard", "android-proguard"]}, {"body": "<p>You can try this in your build.gradle for everything that is indicated as duplicate in the logs. I am not sure if this will work, so try it out and inform if it works or not.</p>\n\n<pre><code>packagingOptions {\n        exclude 'android.net.http.SslCertificate'\n    }\n</code></pre>\n", "title": "ProGuard: duplicate definition of library class?", "answer_id": 35748583, "link": "http://stackoverflow.com/questions/33047806/proguard-duplicate-definition-of-library-class/35748583#35748583", "tags": ["java", "android", "android-studio", "proguard", "android-proguard"]}], "question_id": 33047806}, {"body": "<p>We have found several cases for this kind of crashes reported by backend logging monitoring. It seems the crashes do not tie to particular UX failure. And from the reports, there is no sign of how our own classes being involved(no sign of any of our classes names). Here is an example of typical crashes:</p>\n\n<pre><code>java.lang.NullPointerException: Attempt to read from field 'int android.view.View.mViewFlags' on a null object reference \nat android.view.ViewGroup.dispatchDraw(ViewGroup.java:3357) \nat android.view.View.updateDisplayListIfDirty(View.java:14288) \nat android.view.View.getDisplayList(View.java:14315) \nat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3549) \nat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3528) \nat android.view.View.updateDisplayListIfDirty(View.java:14253) \nat android.view.View.getDisplayList(View.java:14315) \nat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3549) \nat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3528) \nat android.view.View.updateDisplayListIfDirty(View.java:14253) \nat android.view.View.getDisplayList(View.java:14315) \nat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3549) \nat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3528) \nat android.view.View.updateDisplayListIfDirty(View.java:14253) \nat android.view.View.getDisplayList(View.java:14315) \nat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3549) \nat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3528) \nat android.view.View.updateDisplayListIfDirty(View.java:14253) \nat android.view.View.getDisplayList(View.java:14315) \nat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3549) \nat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3528) \nat android.view.View.updateDisplayListIfDirty(View.java:14253) \nat android.view.View.getDisplayList(View.java:14315) \nat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3549) \nat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3528) \nat android.view.View.updateDisplayListIfDirty(View.java:14253) \nat android.view.View.getDisplayList(View.java:14315) \nat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3549) \nat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3528) \nat android.view.View.updateDisplayListIfDirty(View.java:14253) \nat android.view.View.getDisplayList(View.java:14315) \nat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3549) \nat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3528) \nat android.view.View.updateDisplayListIfDirty(View.java:14253) \nat android.view.View.getDisplayList(View.java:14315) \nat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3549) \nat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3528) \nat android.view.View.updateDisplayListIfDirty(View.java:14253) \nat android.view.View.getDisplayList(View.java:14315) \nat android.view.ThreadedRenderer.updateViewTreeDisplayList(ThreadedRenderer.java:273) \nat android.view.ThreadedRenderer.updateRootDisplayList(ThreadedRenderer.java:279) \nat android.view.ThreadedRenderer.draw(ThreadedRenderer.java:318) \nat android.view.ViewRootImpl.draw(ViewRootImpl.java:2561) \nat android.view.ViewRootImpl.performDraw(ViewRootImpl.java:2377) \nat android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2007) \nat android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1086) \nat android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6453) \nat android.view.Choreographer$CallbackRecord.run(Choreographer.java:846) \nat android.view.Choreographer.doCallbacks(Choreographer.java:647) \nat android.view.Choreographer.doFrame(Choreographer.java:601) \nat android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:829) \nat android.os.Handler.handleCallback(Handler.java:739) \nat android.os.Handler.dispatchMessage(Handler.java:95) \nat android.os.Looper.loop(Looper.java:135) \nat android.app.ActivityThread.main(ActivityThread.java:5254) \nat java.lang.reflect.Method.invoke(Native Method) \nat java.lang.reflect.Method.invoke(Method.java:372) \nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:927) \nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:713) \n</code></pre>\n\n<p>Does anyone know whether there is related bug logged against Android code?</p>\n", "tags": ["java", "android", "viewgroup"], "title": "Android ViewGroup crash: Attempt to read from field &#39;int android.view.View.mViewFlags&#39; on a null object reference", "answer_count": 5, "creation_date": 1445361225, "score": 30, "link": "http://stackoverflow.com/questions/33242776/android-viewgroup-crash-attempt-to-read-from-field-int-android-view-view-mview", "answers": [{"body": "<p>The problem is in the <code>ViewGroup</code>'s <code>dispatchDraw()</code> method. This method tries to draw all the <code>ViewGroup</code>'s children. When a child is <code>null</code>, you get an exception, which most likely comes from <a href=\"http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/5.1.1_r1/android/view/ViewGroup.java#3138\" rel=\"nofollow\">this line</a>: <code>if ((child.mViewFlags &amp; VISIBILITY_MASK) == VISIBLE) {</code> (notice the <code>mViewFlags</code>).</p>\n\n<p>So the problem is that one of your views, somewhere, is not properly initialized. I'm afraid that's the best I can do.</p>\n", "title": "Android ViewGroup crash: Attempt to read from field &#39;int android.view.View.mViewFlags&#39; on a null object reference", "answer_id": 34829023, "link": "http://stackoverflow.com/questions/33242776/android-viewgroup-crash-attempt-to-read-from-field-int-android-view-view-mview/34829023#34829023", "tags": ["java", "android", "viewgroup"]}, {"body": "<h1>Possible Solution</h1>\n\n<p>I had this same issue. I setup an <code>animation</code> and in <code>onAnimationEnd</code> I was removing the object that had been animated which is when problems started. What I did was setup an <em>asynchronous</em> <code>Runnable</code> to wait 100 milliseconds after the animation had stopped before removing the animated object:</p>\n\n<p><em>the object previously animated is <code>this._loader</code></em></p>\n\n<pre><code>private void removeLoader() {\n    final ContentContainer self = this; // \"CustomContainer\" needs to match the type of `this`\n    Handler h = new Handler();\n    h.postAtTime(new Runnable() {\n        @Override\n        public void run() {\n            MainActivity.instance.runOnUiThread(new Runnable() { \n                @Override\n                public void run() {\n                    try {\n                        if(self._loader == null) {\n                            // there is no loader. quit now while you still have the chance!!\n                            return;\n                        }\n                        while(self._loader.getParent() != null) {\n                            removeView(self._loader);\n                        }\n                    } catch(Exception e) {\n                        Crashlytics.logException(e);\n                        e.printStackTrace();\n                    }\n\n                    self._loader = null;\n                }\n            });\n        }\n    }, 100);\n}\n</code></pre>\n\n<p><strong><em>Cheers</em></strong></p>\n", "title": "Android ViewGroup crash: Attempt to read from field &#39;int android.view.View.mViewFlags&#39; on a null object reference", "answer_id": 35205000, "link": "http://stackoverflow.com/questions/33242776/android-viewgroup-crash-attempt-to-read-from-field-int-android-view-view-mview/35205000#35205000", "tags": ["java", "android", "viewgroup"]}, {"body": "<p><strong>Possible cause:</strong>\nI was having the exact same issue. It turned out it started to happen when I added code to modify the view tree within onDraw() call. To be specific, I removed a view with children in my derived onDraw() when certain conditions were met. I now believe this is a bad thing to do, probably because the platform is trying to draw views that I have now removed from the view tree. I resolved the issue by posting the deletion with Runnable to happen after the call to onDraw() has finished.</p>\n", "title": "Android ViewGroup crash: Attempt to read from field &#39;int android.view.View.mViewFlags&#39; on a null object reference", "answer_id": 36300563, "link": "http://stackoverflow.com/questions/33242776/android-viewgroup-crash-attempt-to-read-from-field-int-android-view-view-mview/36300563#36300563", "tags": ["java", "android", "viewgroup"]}, {"body": "<p>We started getting this error unexpectedly too. It was tracked down to fragment animations being the issue. More specifically using custom animations with <code>replace()</code> in a fragment transaction when the app is built against <code>Local Maven repository for Support Libraries</code> rev > 26.</p>\n\n<h2>Possible solution</h2>\n\n<p>Downgrade <code>Local Maven repository for Support Libraries</code> to rev 26. See <a href=\"https://code.google.com/p/android/issues/detail?id=203546\" rel=\"nofollow\">here</a></p>\n", "title": "Android ViewGroup crash: Attempt to read from field &#39;int android.view.View.mViewFlags&#39; on a null object reference", "answer_id": 36313569, "link": "http://stackoverflow.com/questions/33242776/android-viewgroup-crash-attempt-to-read-from-field-int-android-view-view-mview/36313569#36313569", "tags": ["java", "android", "viewgroup"]}, {"body": "<p>I was facing same problem. I resolved with Handler.</p>\n\n<pre><code>new Handler(Looper.getMainLooper()).post(new Runnable() {\n                @Override\n                public void run() {\n                   // remove fragment from here\n                }\n            });\n</code></pre>\n", "title": "Android ViewGroup crash: Attempt to read from field &#39;int android.view.View.mViewFlags&#39; on a null object reference", "answer_id": 37213025, "link": "http://stackoverflow.com/questions/33242776/android-viewgroup-crash-attempt-to-read-from-field-int-android-view-view-mview/37213025#37213025", "tags": ["java", "android", "viewgroup"]}], "question_id": 33242776}, {"body": "<p>I just made this simple \"program\":</p>\n\n<pre><code>public static void main(String[] args) {\n        int i = 1;\n        int k = 0;\n        while (true) {\n            if(++i==0) System.out.println(\"loop: \" + ++k);\n        }\n    }\n</code></pre>\n\n<p>Upon running this program, I immediately get the output:</p>\n\n<pre><code>(...)\nloop: 881452\nloop: 881453\nloop: 881454\nloop: 881455\nloop: 881456\nloop: 881457\nloop: 881458\n(...)\n</code></pre>\n\n<p>as if <code>i</code> would be always 0.</p>\n\n<p>And in fact, when I debug in <a href=\"http://en.wikipedia.org/wiki/Eclipse_%28software%29\">Eclipse</a>, upon suspending the program, <code>i</code> would be always zero. When stepping through the loop, <code>i</code> would increment, but upon resuming and suspending the debugger, <code>i</code> is 0 again.</p>\n\n<p>When I change <code>i</code> to long, upon running the program I need to wait quite a while before seeing the first <code>loop: 1</code>. In the debugger, upon pausing the program, <code>i</code> does increment: it's not 0, so it works as it should.</p>\n\n<p>What's the problem with <code>++i</code> as an int?</p>\n", "tags": ["java"], "title": "Java integer ++i not changing the value", "answer_count": 5, "creation_date": 1450126124, "score": 29, "link": "http://stackoverflow.com/questions/34276322/java-integer-i-not-changing-the-value", "answers": [{"body": "<p>Your loop is overflowing <code>i</code>. You have no <code>break</code>, so after a period of time, <code>i</code> wraps back to 0, and this prints the statement and increments <code>k</code>. This also explains why changing the <code>int</code> to a <code>long</code> causes the printing to slow down: it takes much longer for a <code>long</code> value to overflow.</p>\n", "title": "Java integer ++i not changing the value", "answer_id": 34276351, "link": "http://stackoverflow.com/questions/34276322/java-integer-i-not-changing-the-value/34276351#34276351", "tags": ["java"]}, {"body": "<p>If you keep incrementing an integer type, it will eventually overflow, becoming a large negative value. If you keep going, it will eventually become 0 again, and the cycle will repeat.</p>\n\n<p>There are convenience methods to help avoid inadvertent overflows, like <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#addExact-int-int-\"><code>Math.addExact()</code></a>, but these wouldn't normally be used in a loop.</p>\n\n<hr>\n\n<blockquote>\n  <p>I know that it is overflowing. I'm just puzzled that it's overflowing THAT fast. And I find it strange that each time I suspend the debugger, i is 0.</p>\n</blockquote>\n\n<p>When you suspend a running thread, consider the chance of the thread being in a slow call to <code>println()</code> that traversing a huge stack of Java and native OS code, versus the probability of landing in the test of your while loop, which is just incrementing a local variable. You'd have to have a pretty quick trigger finger to see anything other than the print statement. Try stepping through instead.</p>\n\n<p>When something happens 4 billion times in a row, it's a pretty good guess it will happen next time. Branch prediction will help here in any case, and it's possible that your optimizing runtime removes the increment operation and test entirely, since the intervening values of <code>i</code> are never read.</p>\n", "title": "Java integer ++i not changing the value", "answer_id": 34276352, "link": "http://stackoverflow.com/questions/34276322/java-integer-i-not-changing-the-value/34276352#34276352", "tags": ["java"]}, {"body": "<p>It's not always 0, it becomes 0 after looping over (integer overflow), so it would first become Integer.MAX_VALUE, then Integer.MIN_VALUE, and then work its way up to 0 again. That's why it seems as if it is always 0, but in fact it takes all possible integer values before becoming 0... Over and over again.</p>\n", "title": "Java integer ++i not changing the value", "answer_id": 34276370, "link": "http://stackoverflow.com/questions/34276322/java-integer-i-not-changing-the-value/34276370#34276370", "tags": ["java"]}, {"body": "<p>First let's look at what that loop logically does.</p>\n\n<p><code>i</code> will repeatedly overflow. Every 2<sup>32</sup> (about 4 billion) iterations of the loop the output will be printed and k will be incremented.</p>\n\n<p>That is the logical view. However, compilers and runtimes are allowed to optimise and if you are getting more than a value every second or so it is pretty clear that such optimisation must be taking place. Even with modern branch prediction, out of order execution, etc. I find it unlikely that a CPU would get round a tight loop more than once per clock cycle (and even that I would consider unlikely). The fact that you never see anything other than zero in a debugger reinforces the idea that the code is being optimised away.</p>\n\n<p>You mention it takes longer when \"long\" is used and that you do see other values. If a \"long\" counter was used in an unoptimised loop you would expect many decades between values. Again clearly optimisation is taking place, but it seems the optimiser is giving up before it has fully optimised away the pointless iterations.</p>\n", "title": "Java integer ++i not changing the value", "answer_id": 34279876, "link": "http://stackoverflow.com/questions/34276322/java-integer-i-not-changing-the-value/34279876#34279876", "tags": ["java"]}, {"body": "<p>As <a href=\"http://stackoverflow.com/questions/34276322/java-integer-i-not-changing-the-value#comment56299765_34276322\">JohannesD suggested in a comment</a>, it's hardly possible to count from 0 to <code>Integer.MAX_VALUE</code> (and, after the overflow, from <code>-Integer.MAX_VALUE</code> to 0 again) so quickly. </p>\n\n<p>In order to verify the assumption that the JIT does some magic optimization here, I created a slightly modified program, introducing some methods make it easier to identify parts of the code:</p>\n\n<pre><code>class IntOverflowTest\n{\n    public static void main(String[] args) {\n        runLoop();\n    }\n\n    public static void runLoop()\n    {\n        int i = 1;\n        int k = 0;\n        while (true) {\n            if(++i==0) doPrint(++k);\n        }\n    }\n\n    public static void doPrint(int k)\n    {\n        System.out.println(\"loop: \" + k);\n    }\n\n}\n</code></pre>\n\n<p>The bytecode emitted and shown with <code>javap -c IntOverflowTest</code> brings no surprises:</p>\n\n<pre><code>class IntOverflowTest {\n  IntOverflowTest();\n    Code:\n       0: aload_0\n       1: invokespecial #1                  \n       4: return\n\n  public static void main(java.lang.String[]);\n    Code:\n       0: invokestatic  #2                  \n       3: return\n\n  public static void runLoop();\n    Code:\n       0: iconst_1\n       1: istore_0\n       2: iconst_0\n       3: istore_1\n       4: iinc          0, 1\n       7: iload_0\n       8: ifne          4\n      11: iinc          1, 1\n      14: iload_1\n      15: invokestatic  #3                  \n      18: goto          4\n\n  public static void doPrint(int);\n    Code:\n       0: getstatic     #4                  \n       3: new           #5                  \n       6: dup\n       7: invokespecial #6                  \n      10: ldc           #7                  \n      12: invokevirtual #8                  \n      15: iload_0\n      16: invokevirtual #9                  \n      19: invokevirtual #10                 \n      22: invokevirtual #11                 \n      25: return\n}\n</code></pre>\n\n<p>It clearly does increment both local variables (<code>runLoop</code>, offsets 4 and 11). </p>\n\n<p>However, when running the code with <code>-XX:+UnlockDiagnosticVMOptions -XX:+LogCompilation -XX:+PrintAssembly</code> in a Hotspot Disassembler, the machine code eventually ends up to be the following:</p>\n\n<pre><code>Decoding compiled method 0x00000000025c2c50:\nCode:\n[Entry Point]\n[Verified Entry Point]\n[Constants]\n  # {method} {0x000000001bb40408} 'runLoop' '()V' in 'IntOverflowTest'\n  #           [sp+0x20]  (sp of caller)\n  0x00000000025c2da0: mov    %eax,-0x6000(%rsp)\n  0x00000000025c2da7: push   %rbp\n  0x00000000025c2da8: sub    $0x10,%rsp         ;*synchronization entry\n                                                ; - IntOverflowTest::runLoop@-1 (line 10)\n\n  0x00000000025c2dac: mov    $0x1,%ebp          ;*iinc\n                                                ; - IntOverflowTest::runLoop@11 (line 13)\n\n  0x00000000025c2db1: mov    %ebp,%edx\n  0x00000000025c2db3: callq  0x00000000024f6360  ; OopMap{off=24}\n                                                ;*invokestatic doPrint\n                                                ; - IntOverflowTest::runLoop@15 (line 13)\n                                                ;   {static_call}\n  0x00000000025c2db8: inc    %ebp               ;*iinc\n                                                ; - IntOverflowTest::runLoop@11 (line 13)\n\n  0x00000000025c2dba: jmp    0x00000000025c2db1  ;*invokestatic doPrint\n                                                ; - IntOverflowTest::runLoop@15 (line 13)\n\n  0x00000000025c2dbc: mov    %rax,%rdx\n  0x00000000025c2dbf: add    $0x10,%rsp\n  0x00000000025c2dc3: pop    %rbp\n  0x00000000025c2dc4: jmpq   0x00000000025b0d20  ;   {runtime_call}\n  0x00000000025c2dc9: hlt\n</code></pre>\n\n<p>One can clearly see that it does not increment the outer variable <code>i</code> any more. It only calls the <code>doPrint</code> method, increments a single variable (<code>k</code> in the code), and then and immediately jumps back to the point before the <code>doPrint</code> call. </p>\n\n<p>So the JIT indeed seems to detect that there is no real \"condition\" involved for printing the output, and that the code is equivalent to an infinite loop that only prints and increments a single variable.</p>\n\n<p><sub>This seems like a quite sophisticated optimization for me. I would expect that it's far from trivial to detect a case like this. But obviously, they managed to do so...</sub></p>\n", "title": "Java integer ++i not changing the value", "answer_id": 34287776, "link": "http://stackoverflow.com/questions/34276322/java-integer-i-not-changing-the-value/34287776#34287776", "tags": ["java"]}], "question_id": 34276322}, {"body": "<p>I am using retrofit 2.0.0-beta1 with SimpleXml. I want the retrieve a Simple (XML) resource from a REST service.\nMarshalling/Unmarshalling the Simple object with SimpleXML works fine.</p>\n\n<p>When using this code (converted form pre 2.0.0 code):</p>\n\n<pre><code>final Retrofit rest = new Retrofit.Builder()\n    .addConverterFactory(SimpleXmlConverterFactory.create())\n    .baseUrl(endpoint)\n    .build();\nSimpleService service = rest.create(SimpleService.class);\nLOG.info(service.getSimple(\"572642\"));\n</code></pre>\n\n<p>Service:</p>\n\n<pre><code>public interface SimpleService {\n\n    @GET(\"/simple/{id}\")\n    Simple getSimple(@Path(\"id\") String id);\n\n}\n</code></pre>\n\n<p>I get this exception:</p>\n\n<pre><code>Exception in thread \"main\" java.lang.IllegalArgumentException: Unable to create call adapter for class example.Simple\n    for method SimpleService.getSimple\n    at retrofit.Utils.methodError(Utils.java:201)\n    at retrofit.MethodHandler.createCallAdapter(MethodHandler.java:51)\n    at retrofit.MethodHandler.create(MethodHandler.java:30)\n    at retrofit.Retrofit.loadMethodHandler(Retrofit.java:138)\n    at retrofit.Retrofit$1.invoke(Retrofit.java:127)\n    at com.sun.proxy.$Proxy0.getSimple(Unknown Source)\n</code></pre>\n\n<p>What am i missing? I know that wrapping the return type by a <code>Call</code> works. But I want the service to return business objects as type (and working in sync mode).</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>After added the extra dependancies and <code>.addCallAdapterFactory(RxJavaCallAdapterFactory.create())</code> as suggested by different answers, I still get this error:</p>\n\n<pre><code>Caused by: java.lang.IllegalArgumentException: Could not locate call adapter for class simple.Simple. Tried:\n * retrofit.RxJavaCallAdapterFactory\n * retrofit.DefaultCallAdapter$1\n</code></pre>\n", "tags": ["java", "rest", "retrofit", "simple-framework"], "title": "Unable to create call adapter for class example.Simple", "answer_count": 7, "creation_date": 1440758231, "score": 29, "link": "http://stackoverflow.com/questions/32269064/unable-to-create-call-adapter-for-class-example-simple", "answers": [{"body": "<p>With the new Retrofit(2.+) you need to add addCallAdapterFactory which can be a normal one or a RxJavaCallAdapterFactory(for Observables). I think you can add more than both too. It automatically checks which one to use. See a working example below. You can also check <a href=\"https://speakerdeck.com/jakewharton/simple-http-with-retrofit-2-droidcon-nyc-2015\">this link</a> for more details. </p>\n\n<pre><code> Retrofit retrofit = new Retrofit.Builder().baseUrl(ApiConfig.BASE_URL)\n        .addConverterFactory(GsonConverterFactory.create())\n        .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n        .build()\n</code></pre>\n", "title": "Unable to create call adapter for class example.Simple", "answer_id": 32276352, "link": "http://stackoverflow.com/questions/32269064/unable-to-create-call-adapter-for-class-example-simple/32276352#32276352", "tags": ["java", "rest", "retrofit", "simple-framework"]}, {"body": "<p>Add the following dependencies for retrofit 2</p>\n\n<pre><code> compile 'com.squareup.retrofit:retrofit:2.0.0-beta1'\n</code></pre>\n\n<p>for GSON</p>\n\n<pre><code> compile 'com.squareup.retrofit:converter-gson:2.0.0-beta1'\n</code></pre>\n\n<p>for observables</p>\n\n<pre><code>compile 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta1'\n</code></pre>\n\n<p>In your case for XML , you would have to include the following dependencies</p>\n\n<pre><code> compile 'com.squareup.retrofit:converter-simplexml:2.0.0-beta1'\n</code></pre>\n\n<p>Update the service call as below </p>\n\n<pre><code>final Retrofit rest = new Retrofit.Builder()\n    .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n    .addConverterFactory(SimpleXmlConverterFactory.create())\n    .baseUrl(endpoint)\n    .build();\nSimpleService service = rest.create(SimpleService.class);\n</code></pre>\n", "title": "Unable to create call adapter for class example.Simple", "answer_id": 32444433, "link": "http://stackoverflow.com/questions/32269064/unable-to-create-call-adapter-for-class-example-simple/32444433#32444433", "tags": ["java", "rest", "retrofit", "simple-framework"]}, {"body": "<p>The way I fixed this issue was adding this to the application gradle file, if the configuration is not set there will be conflicts, maybe this will be fixed in the stable release of the library:</p>\n\n<pre><code>configurations {\n    compile.exclude group: 'stax'\n    compile.exclude group: 'xpp3'\n}\n\ndependencies {\n    compile 'com.squareup.retrofit:retrofit:2.0.0-beta1'\n    compile 'com.squareup.retrofit:converter-simplexml:2.0.0-beta1'\n}\n</code></pre>\n\n<p>and create your adapter this way:</p>\n\n<pre><code>  Retrofit retrofit = new Retrofit.Builder()\n            .baseUrl(endPoint)\n            .addConverterFactory(SimpleXmlConverterFactory.create())\n            .build();\n</code></pre>\n\n<p>Hope it helps!</p>\n", "title": "Unable to create call adapter for class example.Simple", "answer_id": 32539947, "link": "http://stackoverflow.com/questions/32269064/unable-to-create-call-adapter-for-class-example-simple/32539947#32539947", "tags": ["java", "rest", "retrofit", "simple-framework"]}, {"body": "<p>add dependencies:</p>\n\n<pre><code>compile 'com.squareup.retrofit:retrofit:2.0.0-beta1'\ncompile 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta1'\ncompile 'com.squareup.retrofit:converter-gson:2.0.0-beta1'\n</code></pre>\n\n<p>create your adapter this way:</p>\n\n<pre><code>Retrofit rest = new Retrofit.Builder()\n    .baseUrl(endpoint)\n    .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n    .addConverterFactory(SimpleXmlConverterFactory.create())\n    .build();\n</code></pre>\n\n<p><code>addCallAdapterFactory ()</code> and <code>addConverterFactory ()</code> both need to be called.</p>\n\n<p>Service:</p>\n\n<pre><code>public interface SimpleService {\n\n    @GET(\"/simple/{id}\")\n    Call&lt;Simple&gt; getSimple(@Path(\"id\") String id);\n\n}\n</code></pre>\n\n<p>Modify <code>Simple</code> to <code>Call&lt;Simple&gt;</code>.</p>\n", "title": "Unable to create call adapter for class example.Simple", "answer_id": 32585215, "link": "http://stackoverflow.com/questions/32269064/unable-to-create-call-adapter-for-class-example-simple/32585215#32585215", "tags": ["java", "rest", "retrofit", "simple-framework"]}, {"body": "<p>Short answer: return <a href=\"http://static.javadoc.io/com.squareup.retrofit/retrofit/2.0.0-beta2/retrofit/Call.html\"><code>Call&lt;Simple&gt;</code></a> in your service interface.</p>\n\n<p>It looks like Retrofit 2.0 is trying to find a way of creating the proxy object for your service interface. It expects you to write this:</p>\n\n<pre><code>public interface SimpleService {\n    @GET(\"/simple/{id}\")\n    Call&lt;Simple&gt; getSimple(@Path(\"id\") String id);\n}\n</code></pre>\n\n<p>However, it still wants to play nice and be flexible when you don't want to return a <code>Call</code>. To support this, it has the concept of a <a href=\"http://static.javadoc.io/com.squareup.retrofit/retrofit/2.0.0-beta2/retrofit/CallAdapter.html\"><code>CallAdapter</code></a>, which is supposed to know how to adapt a <code>Call&lt;Simple&gt;</code> into a <code>Simple</code>.</p>\n\n<p>The use of <code>RxJavaCallAdapterFactory</code> is only useful if you are trying to return <code>rx.Observable&lt;Simple&gt;</code>.</p>\n\n<p>The simplest solution is to return a <code>Call</code> as Retrofit expects. You could also write a <a href=\"http://static.javadoc.io/com.squareup.retrofit/retrofit/2.0.0-beta2/retrofit/CallAdapter.Factory.html\"><code>CallAdapter.Factory</code></a> if you really need it.</p>\n", "title": "Unable to create call adapter for class example.Simple", "answer_id": 33202805, "link": "http://stackoverflow.com/questions/32269064/unable-to-create-call-adapter-for-class-example-simple/33202805#33202805", "tags": ["java", "rest", "retrofit", "simple-framework"]}, {"body": "<p>You can implement a Callback, get the Simple from onResponse function.</p>\n\n<pre><code>public class MainActivity extends Activity implements Callback&lt;Simple&gt; {\n\n    protected void onCreate(Bundle savedInstanceState) {\n        final Retrofit rest = new Retrofit.Builder()\n                    .addConverterFactory(SimpleXmlConverterFactory.create())\n                    .baseUrl(endpoint)\n                    .build();\n        SimpleService service = rest.create(SimpleService.class);\n        Call&lt;Simple&gt; call = service.getSimple(\"572642\");\n        //asynchronous call\n        call.enqueue(this);\n\n        return true;\n    }\n\n    @Override\n    public void onResponse(Response&lt;Simple&gt; response, Retrofit retrofit) {\n       // response.body() has the return object(s)\n    }\n\n    @Override\n    public void onFailure(Throwable t) {\n        // do something\n    }\n\n}\n</code></pre>\n", "title": "Unable to create call adapter for class example.Simple", "answer_id": 34233458, "link": "http://stackoverflow.com/questions/32269064/unable-to-create-call-adapter-for-class-example-simple/34233458#34233458", "tags": ["java", "rest", "retrofit", "simple-framework"]}, {"body": "<p>If you want use <code>retrofit2</code> and you don't want always return <code>retrofit2.Call&lt;T&gt;</code>, you have to create your own <code>CallAdapter.Factory</code> which return simple type as you expected. The simple code can look like this:</p>\n\n<pre><code>import retrofit2.Call;\nimport retrofit2.CallAdapter;\nimport retrofit2.Retrofit;\n\nimport java.io.IOException;\nimport java.lang.annotation.Annotation;\nimport java.lang.reflect.Type;\n\npublic class SynchronousCallAdapterFactory implements CallAdapter.Factory {\n    public static CallAdapter.Factory create() {\n        return new SynchronousCallAdapterFactory();\n    }\n\n    @Override\n    public CallAdapter&lt;Object&gt; get(final Type returnType, Annotation[] annotations, Retrofit retrofit) {\n        // if returnType is retrofit2.Call, do nothing\n        if (returnType.getTypeName().contains(\"retrofit2.Call\")) {\n            return null;\n        }\n\n        return new CallAdapter&lt;Object&gt;() {\n            @Override\n            public Type responseType() {\n                return returnType;\n            }\n\n            @Override\n            public &lt;R&gt; Object adapt(Call&lt;R&gt; call) {\n                try {\n                    return call.execute().body();\n                } catch (IOException e) {\n                    throw new RuntimeException(); // do something better\n                }\n            }\n        };\n    }\n}\n</code></pre>\n\n<p>Then simple register the <code>SynchronousCallAdapterFactory</code> in Retrofit should solved your problem.</p>\n\n<pre><code>Retrofit rest = new Retrofit.Builder()\n        .baseUrl(endpoint)\n        .addConverterFactory(SimpleXmlConverterFactory.create())\n        .addCallAdapterFactory(SynchronousCallAdapterFactory.create())\n        .build();\n</code></pre>\n\n<p>After that you can return simple type without <code>retrofit2.Call</code>.</p>\n\n<pre><code>public interface SimpleService {\n    @GET(\"/simple/{id}\")\n    Simple getSimple(@Path(\"id\") String id);\n}\n</code></pre>\n", "title": "Unable to create call adapter for class example.Simple", "answer_id": 35104080, "link": "http://stackoverflow.com/questions/32269064/unable-to-create-call-adapter-for-class-example-simple/35104080#35104080", "tags": ["java", "rest", "retrofit", "simple-framework"]}], "question_id": 32269064}, {"body": "<p>I am developing a Spring Boot application with a Rest interface and a dart fronted. </p>\n\n<p>The XMLHttpRequest does execute a OPTIONS request which is handled totally correct. After this, the final GET (\"/products\") request is issued and fails:</p>\n\n<p><em>No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin '<a href=\"http://localhost:63343\">http://localhost:63343</a>' is therefore not allowed access.</em></p>\n\n<p>After some debugging I have found the following:\nThe AbstractHandlerMapping.corsConfiguration is populated for all Subclasses except RepositoryRestHandlerMapping. In the RepositoryRestHandlerMapping no corsConfiguration is present / set at creation time and so it won't get recognized as cors path / resource.<br>\n=> No CORS headers attached<br>\nCould that be the problem? How can I set it?  </p>\n\n<p>Configuration classes:</p>\n\n<pre><code>@Configuration\npublic class RestConfiguration extends RepositoryRestMvcConfiguration {\n\n    @Override\n    public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\").allowCredentials(false).allowedOrigins(\"*\").allowedMethods(\"PUT\", \"POST\", \"GET\", \"OPTIONS\", \"DELETE\").exposedHeaders(\"Authorization\", \"Content-Type\");\n    }\n\n   ...\n}\n</code></pre>\n\n<p>I even tried to set the Cors per annotation:</p>\n\n<pre><code>@CrossOrigin( methods = RequestMethod.GET, allowCredentials = \"false\")\npublic interface ProductRepository extends CrudRepository&lt;Product, String&gt; {\n\n\n}\n</code></pre>\n\n<p>Raw request headers:</p>\n\n<pre><code>GET /products HTTP/1.1\nHost: localhost:8080\nConnection: keep-alive\nCache-Control: max-age=0\nauthorization: Basic dXNlcjpwYXNzd29yZA==\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/43.0.2357.130 Chrome/43.0.2357.130 Safari/537.36\nContent-Type: application/json\nAccept: */*\nReferer: http://localhost:63343/inventory-web/web/index.html\nAccept-Encoding: gzip, deflate, sdch\nAccept-Language: de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4\n</code></pre>\n\n<p>Raw response headers:</p>\n\n<pre><code>HTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nContent-Type: application/hal+json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Thu, 30 Jul 2015 15:58:03 GMT\n</code></pre>\n\n<p>Versions used:\nSpring Boot 1.3.0.M2\nSpring 4.2.0.RC2</p>\n\n<p>What do I miss?</p>\n\n<p>Thanks,\nThomas</p>\n", "tags": ["java", "spring", "spring-mvc", "cors", "spring-data-rest"], "title": "Spring Data Rest and Cors", "answer_count": 2, "creation_date": 1438262449, "score": 29, "link": "http://stackoverflow.com/questions/31724994/spring-data-rest-and-cors", "answers": [{"body": "<p>Indeed, when using Spring Data REST + Spring Framework 4.2, only <code>HandlerMapping</code> instances created by Spring MVC <code>WebMvcConfigurationSupport</code> and controllers annotated with <code>@CrossOrigin</code> will be CORS aware.</p>\n\n<p>Spring Data REST still compiles against Spring Framework 4.1, and does not support builtin Spring Framework CORS implementation. Feel free to vote for the <a href=\"https://jira.spring.io/browse/DATAREST-573\">DATAREST-573</a> related issue.</p>\n\n<p>Right now, I think the best solution is to use a filter based approach. You could obviously use Tomcat, Jetty or <a href=\"http://software.dzhuvinov.com/cors-filter.html\">this one</a>, but be aware that Spring Framework 4.2 also provides a <a href=\"http://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/filter/CorsFilter.html\"><code>CorsFilter</code></a> that use the same CORS processing logic that <code>@CrossOrigin</code> and <code>addCorsMappings(CorsRegistry registry)</code> approaches. By passing an <a href=\"http://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/cors/UrlBasedCorsConfigurationSource.html\"><code>UrlBasedCorsConfigurationSource</code></a> instance to the <code>CorsFilter</code> constructor parameter, you could easily get something as powerful as Spring native CORS global support.</p>\n\n<p>If you are using Spring Boot (which supports <code>Filter</code> beans), it could be something like:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>@Configuration\npublic class RestConfiguration {\n\n    @Bean\n    public CorsFilter corsFilter() {\n\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n        CorsConfiguration config = new CorsConfiguration();\n        config.setAllowCredentials(true); // you USUALLY want this\n        config.addAllowedOrigin(\"*\");\n        config.addAllowedHeader(\"*\");\n        config.addAllowedMethod(\"GET\");\n        config.addAllowedMethod(\"PUT\");\n        source.registerCorsConfiguration(\"/**\", config);\n        return new CorsFilter(source);\n    }\n}\n</code></pre>\n\n<p>The Spring Data team is currently looking into ways to let the user customize the CORS handling on it (i.e. calling <code>setCorsConfigurations(Map&lt;String, CorsConfiguration&gt; configurations)</code> on the <code>HandlerMapping</code> instance Spring Data REST deploys), but I think it is better to use the <code>CorsFilter</code> approach until <a href=\"https://jira.spring.io/browse/DATAREST-573\">DATAREST-573</a> is resolved.</p>\n\n<p>Hendy's addition: In my case, the simple <code>@Bean Filter</code> definition above does not work, I had to use this: (It <em>may</em> have something to do with my usage of Spring Security or <a href=\"http://ocpsoft.com/rewrite/\">ocpsoft rewrite</a>, but Sebastien is more expert in this.. I don't really know why)</p>\n\n<pre><code>/**\n * http://stackoverflow.com/a/31748398/122441 until https://jira.spring.io/browse/DATAREST-573\n * @return\n */\n@Bean\npublic FilterRegistrationBean corsFilter() {\n    UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n    CorsConfiguration config = new CorsConfiguration();\n    config.setAllowCredentials(true);\n    config.addAllowedOrigin(\"*\");\n    config.addAllowedHeader(\"*\");\n    config.addAllowedMethod(\"OPTIONS\");\n    config.addAllowedMethod(\"HEAD\");\n    config.addAllowedMethod(\"GET\");\n    config.addAllowedMethod(\"PUT\");\n    config.addAllowedMethod(\"POST\");\n    config.addAllowedMethod(\"DELETE\");\n    config.addAllowedMethod(\"PATCH\");\n    source.registerCorsConfiguration(\"/**\", config);\n    // return new CorsFilter(source);\n    final FilterRegistrationBean bean = new FilterRegistrationBean(new CorsFilter(source));\n    bean.setOrder(0);\n    return bean;\n}\n</code></pre>\n", "title": "Spring Data Rest and Cors", "answer_id": 31748398, "link": "http://stackoverflow.com/questions/31724994/spring-data-rest-and-cors/31748398#31748398", "tags": ["java", "spring", "spring-mvc", "cors", "spring-data-rest"]}, {"body": "<p>After configuring this in webMvcConfigurerAdapter subclass</p>\n\n<pre><code>@Override\n    public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n        .allowedOrigins(\"*\")\n        .allowedMethods(\"GET\", \"POST\",\"PUT\", \"DELETE\")\n        .allowedHeaders(\"Content-Type, checkid\")\n        ;\n   };\n</code></pre>\n\n<p>In my response am not able to see this header value.</p>\n\n<h1>Actually</h1>\n\n<pre><code>Allow \u2192GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS, PATCH\nCache-Control \u2192no-cache, no-store, max-age=0, must-revalidate\nContent-Length \u21920\nDate \u2192Thu, 14 Apr 2016 12:20:27 GMT\nExpires \u21920\nPragma \u2192no-cache\nServer \u2192Apache-Coyote/1.1\nX-Content-Type-Options \u2192nosniff\nX-Frame-Options \u2192DENY\nX-XSS-Protection \u21921; mode=block\n</code></pre>\n\n<h1>Excepted</h1>\n\n<pre><code>Access-Control-Allow-Headers \u2192 Content-Type, checkId\nAccess-Control-Allow-Methods \u2192GET, POST, PUT, DELETE\nAccess-Control-Allow-Origin \u2192*\nAllow \u2192GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS, PATCH\nCache-Control \u2192no-cache, no-store, max-age=0, must-revalidate\nContent-Length \u21920\nDate \u2192Thu, 14 Apr 2016 12:20:27 GMT\nExpires \u21920\nPragma \u2192no-cache\nServer \u2192Apache-Coyote/1.1\nX-Content-Type-Options \u2192nosniff\nX-Frame-Options \u2192DENY\nX-XSS-Protection \u21921; mode=block\n</code></pre>\n", "title": "Spring Data Rest and Cors", "answer_id": 36623327, "link": "http://stackoverflow.com/questions/31724994/spring-data-rest-and-cors/36623327#36623327", "tags": ["java", "spring", "spring-mvc", "cors", "spring-data-rest"]}], "question_id": 31724994}, {"body": "<p>Talking about <code>Stream</code>s, when I execute this piece of code</p>\n\n<pre><code>public class Main {\n    public static void main(String[] args) {\n        Stream.of(1,2,3,4,5,6,7,8,9)\n        .peek(x-&gt;System.out.print(\"\\nA\"+x))\n        .limit(3)\n        .peek(x-&gt;System.out.print(\"B\"+x))\n        .forEach(x-&gt;System.out.print(\"C\"+x));\n    }\n}\n</code></pre>\n\n<p>I get this output </p>\n\n<pre><code>A1B1C1\nA2B2C2\nA3B3C3\n</code></pre>\n\n<p>because limiting my stream to the first three components forces actions <em>A</em>, <em>B</em> and <em>C</em> to be executed only three times.</p>\n\n<p>Trying to perform an analogous computation on the last three elements by using <code>skip()</code> method, shows a different behaviour: this</p>\n\n<pre><code>public class Main {\n    public static void main(String[] args) {\n        Stream.of(1,2,3,4,5,6,7,8,9)\n        .peek(x-&gt;System.out.print(\"\\nA\"+x))\n        .skip(6)\n        .peek(x-&gt;System.out.print(\"B\"+x))\n        .forEach(x-&gt;System.out.print(\"C\"+x));\n    }\n}\n</code></pre>\n\n<p>outputs this</p>\n\n<pre><code>A1\nA2\nA3\nA4\nA5\nA6\nA7B7C7\nA8B8C8\nA9B9C9\n</code></pre>\n\n<p>Why, in this case, actions <em>A1</em> to <em>A6</em> are being executed? It must have something to do with the fact that <em>limit</em> is a <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#limit-long-\">short-circuiting stateful intermediate operation</a>, while <em>skip</em> is not, but I don't understand practical implications of this property. Is it just that \"every action before <em>skip</em> is executed while not everyone before <em>limit</em> is\"?</p>\n", "tags": ["java", "java-8", "limit", "java-stream", "skip"], "title": "Java 8 Stream: difference between limit() and skip()", "answer_count": 4, "creation_date": 1441462626, "score": 29, "link": "http://stackoverflow.com/questions/32414088/java-8-stream-difference-between-limit-and-skip", "answers": [{"body": "<p>The fluent notation of the streamed pipeline is what's causing this confusion. Think about it this way:</p>\n\n<h3><code>limit(3)</code></h3>\n\n<p>All the pipelined operations are evaluated lazily, except <code>forEach()</code>, which is a <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#StreamOps\" rel=\"nofollow\">terminal operation</a>, which triggers <em>\"execution of the pipeline\"</em>.</p>\n\n<p>When the pipeline is executed, intermediary stream definitions will not make any assumptions about what happens <em>\"before\"</em> or <em>\"after\"</em>. All they're doing is take an input stream and transform it into an output stream:</p>\n\n<pre><code>Stream&lt;Integer&gt; s1 = Stream.of(1,2,3,4,5,6,7,8,9);\nStream&lt;Integer&gt; s2 = s1.peek(x-&gt;System.out.print(\"\\nA\"+x));\nStream&lt;Integer&gt; s3 = s2.limit(3);\nStream&lt;Integer&gt; s4 = s3.peek(x-&gt;System.out.print(\"B\"+x));\n\ns4.forEach(x-&gt;System.out.print(\"C\"+x));\n</code></pre>\n\n<ul>\n<li><code>s1</code> contains 9 different <code>Integer</code> values.</li>\n<li><code>s2</code> peeks at all values that pass it and prints them.</li>\n<li><code>s3</code> passes the first 3 values to <code>s4</code> and aborts the pipeline after the third value. No further values are produced by <code>s3</code>. <strong>This doesn't mean that no more values are in the pipeline. <code>s2</code> would still produce (and print) more values, but no one requests those values and thus execution stops.</strong></li>\n<li><code>s4</code> again peeks at all values that pass it and prints them.</li>\n<li><code>forEach</code> consumes and prints whatever <code>s4</code> passes to it.</li>\n</ul>\n\n<p>Think about it this way. The whole stream is completely lazy. Only the terminal operation actively <em>pulls</em> new values from the pipeline. After it has pulled 3 values from <code>s4 &lt;- s3 &lt;- s2 &lt;- s1</code>, <code>s3</code> will no longer produce new values and it will no longer pull any values from <code>s2 &lt;- s1</code>. While <code>s1 -&gt; s2</code> would still be able to produce <code>4-9</code>, those values are just never pulled from the pipeline, and thus never printed by <code>s2</code>.</p>\n\n<h3><code>skip(6)</code></h3>\n\n<p>With <code>skip()</code> the same thing happens:</p>\n\n<pre><code>Stream&lt;Integer&gt; s1 = Stream.of(1,2,3,4,5,6,7,8,9);\nStream&lt;Integer&gt; s2 = s1.peek(x-&gt;System.out.print(\"\\nA\"+x));\nStream&lt;Integer&gt; s3 = s2.skip(6);\nStream&lt;Integer&gt; s4 = s3.peek(x-&gt;System.out.print(\"B\"+x));\n\ns4.forEach(x-&gt;System.out.print(\"C\"+x));\n</code></pre>\n\n<ul>\n<li><code>s1</code> contains 9 different <code>Integer</code> values.</li>\n<li><code>s2</code> peeks at all values that pass it and prints them.</li>\n<li><code>s3</code> consumes the first 6 values, <em>\"skipping them\"</em>, which means the first 6 values aren't passed to <code>s4</code>, only the subsequent values are.</li>\n<li><code>s4</code> again peeks at all values that pass it and prints them.</li>\n<li><code>forEach</code> consumes and prints whatever <code>s4</code> passes to it.</li>\n</ul>\n\n<p>The important thing here is that <code>s2</code> is not aware of the remaining pipeline skipping any values. <code>s2</code> peeks at all values independently of what happens afterwards.</p>\n\n<h3>Another example:</h3>\n\n<p>Consider this pipeline, <a href=\"http://blog.jooq.org/2014/06/13/java-8-friday-10-subtle-mistakes-when-using-the-streams-api/\" rel=\"nofollow\">which is listed in this blog post</a></p>\n\n<pre><code>IntStream.iterate(0, i -&gt; ( i + 1 ) % 2)\n         .distinct()\n         .limit(10)\n         .forEach(System.out::println);\n</code></pre>\n\n<p>When you execute the above, the program will never halt. Why? Because:</p>\n\n<pre><code>IntStream i1 = IntStream.iterate(0, i -&gt; ( i + 1 ) % 2);\nIntStream i2 = i1.distinct();\nIntStream i3 = i2.limit(10);\n\ni3.forEach(System.out::println);\n</code></pre>\n\n<p>Which means:</p>\n\n<ul>\n<li><code>i1</code> generates an infinite amount of alternating values: <code>0</code>, <code>1</code>, <code>0</code>, <code>1</code>, <code>0</code>, <code>1</code>, ...</li>\n<li><code>i2</code> consumes all values that have been encountered before, passing on only <em>\"new\"</em> values, i.e. there are a total of 2 values coming out of <code>i2</code>.</li>\n<li><code>i3</code> passes on 10 values, then stops.</li>\n</ul>\n\n<p>This algorithm will never stop, because <code>i3</code> waits for <code>i2</code> to produce 8 more values after <code>0</code> and <code>1</code>, but those values never appear, while <code>i1</code> never stops feeding values to <code>i2</code>.</p>\n\n<p>It doesn't matter that at some point in the pipeline, more than 10 values had been produced. All that matters is that <code>i3</code> has never seen those 10 values.</p>\n\n<h3>To answer your question:</h3>\n\n<blockquote>\n  <p>Is it just that \"every action before skip is executed while not everyone before limit is\"?</p>\n</blockquote>\n\n<p>Nope. All operations before either <code>skip()</code> or <code>limit()</code> are executed. In both of your executions, you get <code>A1</code> - <code>A3</code>. But <code>limit()</code> may short-circuit the pipeline, aborting value consumption once the event of interest (the limit is reached) has occurred.</p>\n", "title": "Java 8 Stream: difference between limit() and skip()", "answer_id": 32414407, "link": "http://stackoverflow.com/questions/32414088/java-8-stream-difference-between-limit-and-skip/32414407#32414407", "tags": ["java", "java-8", "limit", "java-stream", "skip"]}, {"body": "<p>What you have here are two stream pipelines.</p>\n\n<p>These stream pipelines each consist of a source, several intermediate operations, and a terminal operation.</p>\n\n<p>But the intermediate operations are lazy. This means that nothing happens unless a downstream operation requires an item. When it does, then the intermediate operation does all it needs to produce the required item, and then again waits until another item is requested, and so on.</p>\n\n<p>The terminal operations are usually \"eager\". That is, they ask for all the items in the stream that are needed for them to complete.</p>\n\n<p>So you should really think of the pipeline as the <code>forEach</code> asking the stream behind it for the next item, and that stream asks the stream behind it, and so on, all the way to the source.</p>\n\n<p>With that in mind, let's see what we have with your first pipeline:</p>\n\n<pre><code>Stream.of(1,2,3,4,5,6,7,8,9)\n        .peek(x-&gt;System.out.print(\"\\nA\"+x))\n        .limit(3)\n        .peek(x-&gt;System.out.print(\"B\"+x))\n        .forEach(x-&gt;System.out.print(\"C\"+x));\n</code></pre>\n\n<p>So, the <code>forEach</code> is asking for the first item. That means the \"B\" <code>peek</code> needs an item, and asks the <code>limit</code> output stream for it, which means <code>limit</code> will need to ask the \"A\" <code>peek</code>, which goes to the source. An item is given, and goes all the way up to the <code>forEach</code>, and you get your first line:</p>\n\n<pre><code>A1B1C1\n</code></pre>\n\n<p>The <code>forEach</code> asks for another item, then another. And each time, the request is propagated up the stream, and performed. But when <code>forEach</code> asks for the fourth item, when the request gets to the <code>limit</code>, it knows that it has already given all the items it is allowed to give.</p>\n\n<p>Thus, it is not asking the \"A\" peek for another item. It immediately indicates that its items are exhausted, and thus, no more actions are performed and <code>forEach</code> terminates.</p>\n\n<p>What happens in the second pipeline?</p>\n\n<pre><code>    Stream.of(1,2,3,4,5,6,7,8,9)\n    .peek(x-&gt;System.out.print(\"\\nA\"+x))\n    .skip(6)\n    .peek(x-&gt;System.out.print(\"B\"+x))\n    .forEach(x-&gt;System.out.print(\"C\"+x));\n</code></pre>\n\n<p>Again, <code>forEach</code> is asking for the first item. This is propagated back. But when it gets to the <code>skip</code>, it knows it has to ask for 6 items from its upstream before it can pass one downstream. So it makes a request upstream from the \"A\" <code>peek</code>, consumes it without passing it downstream, makes another request, and so on. So the \"A\" peek gets 6 requests for an item and produces 6 prints, but these items are not passed down.</p>\n\n<pre><code>A1\nA2\nA3\nA4\nA5\nA6\n</code></pre>\n\n<p>On the 7th request made by <code>skip</code>, the item is passed down to the \"B\" peek and from it to the <code>forEach</code>, so the full print is done:</p>\n\n<pre><code>A7B7C7\n</code></pre>\n\n<p>Then it's just like before. The <code>skip</code> will now, whenever it gets a request, ask for an item upstream and pass it downstream, as it \"knows\" it has already done its skipping job. So the rest of the prints are going through the entire pipe, until the source is exhausted.</p>\n", "title": "Java 8 Stream: difference between limit() and skip()", "answer_id": 32414480, "link": "http://stackoverflow.com/questions/32414088/java-8-stream-difference-between-limit-and-skip/32414480#32414480", "tags": ["java", "java-8", "limit", "java-stream", "skip"]}, {"body": "<p>All streams are based on spliterators, which have basically two operations: advance (move forward one element, similar to iterator) and split (divide oneself in arbitrary position, which is suitable for parallel processing). You can stop taking input elements at any moment you like (which is done by <code>limit</code>), but you cannot just jump to the arbitrary position (there's no such operation in <code>Spliterator</code> interface). Thus <code>skip</code> operation need to actually read the first elements from the source just to ignore them. Note that in some cases you can perform actual jump:</p>\n\n<pre><code>List&lt;Integer&gt; list = Arrays.asList(1,2,3,4,5,6,7,8,9);\n\nlist.stream().skip(3)... // will read 1,2,3, but ignore them\nlist.subList(3, list.size()).stream()... // will actually jump over the first three elements\n</code></pre>\n", "title": "Java 8 Stream: difference between limit() and skip()", "answer_id": 32414556, "link": "http://stackoverflow.com/questions/32414088/java-8-stream-difference-between-limit-and-skip/32414556#32414556", "tags": ["java", "java-8", "limit", "java-stream", "skip"]}, {"body": "<p>It is complete blasphemy to look at steam operations individually because that is not how a stream is evaluated. </p>\n\n<p>Talking about <strong>limit(3)</strong>, it is a short circuit operation, which makes sense because thinking about it, whatever operation is <strong>before</strong> and <strong>after</strong> the <code>limit</code>, having a limit in a stream would stop iteration after getting <em>n</em> elements <strong>till</strong> the limit operation, but this doesn't mean that only n stream elements would be processed. Take this different stream operation for an example</p>\n\n<pre><code>public class App \n{\n    public static void main(String[] args) {\n        Stream.of(1,2,3,4,5,6,7,8,9)\n        .peek(x-&gt;System.out.print(\"\\nA\"+x))\n        .filter(x -&gt; x%2==0)\n        .limit(3)\n        .peek(x-&gt;System.out.print(\"B\"+x))\n        .forEach(x-&gt;System.out.print(\"C\"+x));\n    }\n}\n</code></pre>\n\n<p>would output </p>\n\n<pre><code>A1\nA2B2C2\nA3\nA4B4C4\nA5\nA6B6C6\n</code></pre>\n\n<p>which seem right, because limit is waiting for 3 stream elements to pass through the operation chain, although 6 elements of stream are processed.</p>\n", "title": "Java 8 Stream: difference between limit() and skip()", "answer_id": 32414994, "link": "http://stackoverflow.com/questions/32414088/java-8-stream-difference-between-limit-and-skip/32414994#32414994", "tags": ["java", "java-8", "limit", "java-stream", "skip"]}], "question_id": 32414088}, {"body": "<p>I am getting the exception below when I am trying to run the application using Android Studio:</p>\n\n<blockquote>\n  <p>Error:Execution failed for task ':app:transformClassesWithDexForDebug'.\n  com.android.build.api.transform.TransformException: com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process 'command 'C:\\Program Files\\Java\\jdk1.8.0_05\\bin\\java.exe'' finished with non-zero exit value 2</p>\n</blockquote>\n", "tags": ["java", "android", "android-studio"], "title": "Android Studio TransformException : Error:Execution failed for task &#39;:app:transformClassesWithDexForDebug&#39;", "answer_count": 8, "creation_date": 1448452743, "score": 29, "link": "http://stackoverflow.com/questions/33915955/android-studio-transformexception-errorexecution-failed-for-task-apptransf", "answers": [{"body": "<p>I have same issue, after few hour research, i found a solution to fix it.</p>\n\n<p>You should fixed <strong>build.gradle</strong> :</p>\n\n<pre><code>android {\n\n    compileSdkVersion ..\n    buildToolsVersion '...'\n\n    defaultConfig {\n       ...\n       targetSdkVersion ..\n       multiDexEnabled true  // this line will solve this problem\n   }\n}\n</code></pre>\n\n<blockquote>\n  <p>If the number of method references in your app exceeds the 65K limit, your app may fail to compile. </p>\n</blockquote>\n\n<p>For information on how to do this, see <a href=\"http://developers.google.com/android/guides/setup#split\" rel=\"nofollow\">Selectively compiling APIs into your executable</a> and <a href=\"http://developer.android.com/tools/building/multidex.html\" rel=\"nofollow\">Building Apps with Over 65K Methods</a></p>\n", "title": "Android Studio TransformException : Error:Execution failed for task &#39;:app:transformClassesWithDexForDebug&#39;", "answer_id": 34284213, "link": "http://stackoverflow.com/questions/33915955/android-studio-transformexception-errorexecution-failed-for-task-apptransf/34284213#34284213", "tags": ["java", "android", "android-studio"]}, {"body": "<p>in my case using android studio 2.0 preview 4 I suddenly got that problem and adding  <code>multiDexEnabled true</code> didn't help, and also clean and rebuilt didn't help.</p>\n\n<p>so the only thing that solved it for me is deleting that file:</p>\n\n<blockquote>\n  <p>YOUR_APP_NAME\\app\\build\\intermediates</p>\n</blockquote>\n\n<p>and run the application and it works.</p>\n", "title": "Android Studio TransformException : Error:Execution failed for task &#39;:app:transformClassesWithDexForDebug&#39;", "answer_id": 34438793, "link": "http://stackoverflow.com/questions/33915955/android-studio-transformexception-errorexecution-failed-for-task-apptransf/34438793#34438793", "tags": ["java", "android", "android-studio"]}, {"body": "<p>For me closing all other Android Studio solved the problem.</p>\n\n<p>I had opened 3 android studios when I was getting the error, after I closed 2 I didn't get any error.</p>\n\n<p>No need to add any code related to multiDex !</p>\n\n<p>Seems like there was some memory issue related to jvm.</p>\n", "title": "Android Studio TransformException : Error:Execution failed for task &#39;:app:transformClassesWithDexForDebug&#39;", "answer_id": 35090262, "link": "http://stackoverflow.com/questions/33915955/android-studio-transformexception-errorexecution-failed-for-task-apptransf/35090262#35090262", "tags": ["java", "android", "android-studio"]}, {"body": "<p>Just fixed this issue. In my case, rebuilding the project helped for me.\nSo, try to rebuild your project.</p>\n", "title": "Android Studio TransformException : Error:Execution failed for task &#39;:app:transformClassesWithDexForDebug&#39;", "answer_id": 36699760, "link": "http://stackoverflow.com/questions/33915955/android-studio-transformexception-errorexecution-failed-for-task-apptransf/36699760#36699760", "tags": ["java", "android", "android-studio"]}, {"body": "<p>Add the following line:</p>\n\n<pre><code>multiDexEnabled true\n</code></pre>\n\n<p>Inside the <code>defaultConfig</code> of <code>build.gradle</code></p>\n\n<p>Like this:</p>\n\n<pre><code>defaultConfig{\n    multiDexEnabled true\n}\n</code></pre>\n", "title": "Android Studio TransformException : Error:Execution failed for task &#39;:app:transformClassesWithDexForDebug&#39;", "answer_id": 36910919, "link": "http://stackoverflow.com/questions/33915955/android-studio-transformexception-errorexecution-failed-for-task-apptransf/36910919#36910919", "tags": ["java", "android", "android-studio"]}, {"body": "<p>Modify the module-level build.gradle file </p>\n\n<pre><code> android {\n    ...\n\n    // Enabling multidex support.\n    multiDexEnabled true\n}\n...\n</code></pre>\n\n<p>}</p>\n\n<p>add dependencies \n   compile 'com.android.support:multidex:1.0.0'</p>\n\n<p>In your manifest add the MultiDexApplication class</p>\n\n<pre><code>&lt;manifest ...&gt;\n&lt;application\n    ...\n    android:name=\"android.support.multidex.MultiDexApplication\"&gt;\n    ...\n&lt;/application&gt;\n</code></pre>\n\n<p></p>\n\n<p><a href=\"http://developer.android.com/studio/build/multidex.html\" rel=\"nofollow\">http://developer.android.com/studio/build/multidex.html</a></p>\n", "title": "Android Studio TransformException : Error:Execution failed for task &#39;:app:transformClassesWithDexForDebug&#39;", "answer_id": 37731832, "link": "http://stackoverflow.com/questions/33915955/android-studio-transformexception-errorexecution-failed-for-task-apptransf/37731832#37731832", "tags": ["java", "android", "android-studio"]}, {"body": "<p>My problem was heap size too big for gradle</p>\n", "title": "Android Studio TransformException : Error:Execution failed for task &#39;:app:transformClassesWithDexForDebug&#39;", "answer_id": 37780420, "link": "http://stackoverflow.com/questions/33915955/android-studio-transformexception-errorexecution-failed-for-task-apptransf/37780420#37780420", "tags": ["java", "android", "android-studio"]}, {"body": "<p>At my case change buildToolsVersion from \"24\" to \"23.0.2\", solve the problem. This will solve the problem especially if you're using old Android Studio less than version 2.</p>\n", "title": "Android Studio TransformException : Error:Execution failed for task &#39;:app:transformClassesWithDexForDebug&#39;", "answer_id": 39439941, "link": "http://stackoverflow.com/questions/33915955/android-studio-transformexception-errorexecution-failed-for-task-apptransf/39439941#39439941", "tags": ["java", "android", "android-studio"]}], "question_id": 33915955}, {"body": "<p>Consider the following code snippet, I stumpled upon after some refactoring, when checkin why the build server reported a broken build but it was fine in my IDE:</p>\n\n<pre><code>List&lt;String&gt; text;\n...\nfor (String text : text) {...}\n</code></pre>\n\n<p>So, the same name is used for the String and the List within the for-each. </p>\n\n<p>This is of course not very wise to do, but after following my nosiness before renaming it, I saw that the above code compiles fine with JDK 8, but gives the below error with JDK 7:</p>\n\n<pre><code>  error: for-each not applicable to expression type\n        for (String text : text) {\n                           ^\n  required: array or java.lang.Iterable\n  found:    String\n1 error\n</code></pre>\n\n<p>I know that changes were made to several parts in this area within the JDK - but can someone enlighten me on why exactly this behaviour occurs?</p>\n\n<hr>\n\n<p><strong>Update:</strong>\nSince I got some comments about different behaviour, here's a full sample class:</p>\n\n<pre><code>import java.util.Arrays;\nimport java.util.List;\n\npublic class Strange {\n\n    List&lt;String&gt; text = Arrays.asList(\"Max\", \"Alex\", \"Maria\");\n\n    public static void main(String[] args) {\n        new Strange().doSomething(\"Alex\");\n    }\n\n    public void doSomething(String name) {\n        for (String text : text) {\n            System.out.println(text.equals(\"Alex\"));\n        }\n    }\n\n}\n</code></pre>\n\n<p>And here's the compile process and output (Windows 7 64bit):</p>\n\n<pre><code>C:\\copy&gt;c:\\Projects\\java\\jdk1.7.0_79\\bin\\javac.exe Strange.java\nStrange.java:13: error: for-each not applicable to expression type\n        for (String text : text) {\n                           ^\n  required: array or java.lang.Iterable\n  found:    String\n1 error\n\nC:\\copy&gt;c:\\Projects\\java\\jdk1.8.0_60\\bin\\javac.exe Strange.java\n\nC:\\copy&gt;\n</code></pre>\n\n<hr>\n\n<p><strong>Conclusion:</strong>\nI was so puzzled why my IDE (which uses 8) didn't complain about twice the same name in one statement - but now it is clear that it is not one statement. I really wonder why this point has so long been in place if the JLS states otherwise. But anyway, thanks for the insights I have received and the great answers (which made it hard for me to pick the best one). </p>\n", "tags": ["java", "foreach", "java-8", "java-7", "language-lawyer"], "title": "Enhanced for loop compiling fine for JDK 8 but not 7", "answer_count": 6, "creation_date": 1446216846, "score": 29, "link": "http://stackoverflow.com/questions/33438842/enhanced-for-loop-compiling-fine-for-jdk-8-but-not-7", "answers": [{"body": "<p>Your build server may be compiling using a different jdk than your local machine. (Not just a different version number, but a completely different implementation.) Eclipse is one that uses its own compiler, I believe to facilitate its code hot-swapping.</p>\n\n<p><strike>Using the same name for the collection and the element ought to raise problems anywhere</strike>, but I have heard of and occasionally noticed Eclipse tolerating things that the Sun/Oracle JDK won't.</p>\n", "title": "Enhanced for loop compiling fine for JDK 8 but not 7", "answer_id": 33438943, "link": "http://stackoverflow.com/questions/33438842/enhanced-for-loop-compiling-fine-for-jdk-8-but-not-7/33438943#33438943", "tags": ["java", "foreach", "java-8", "java-7", "language-lawyer"]}, {"body": "<p>I would say it is a compiler bug in the particular version of the Java 7 compiler that you are using.</p>\n\n<p>The earlier <code>text</code> is a field, and it is legal for the <code>text</code> local declared in the <code>for</code> statement to shadow a field.</p>\n\n<p>Then we look at what the for loop means.  According to the JLS,</p>\n\n<pre><code>    for (String text : text) {...}\n</code></pre>\n\n<p>is equivalent to </p>\n\n<pre><code>    for (Iterator&lt;String&gt; #i = text.iterator(); #i.hasNext(); ) {\n        String text = (String) #i.next();\n        ...\n    }\n</code></pre>\n\n<p>As you can see the inner <code>text</code> is not in-scope for the <code>text.iterator()</code> expression.</p>\n\n<hr>\n\n<p>I tried searching the Oracle Java Bugs Database, but couldn't find anything that matched this scenario.</p>\n", "title": "Enhanced for loop compiling fine for JDK 8 but not 7", "answer_id": 33439404, "link": "http://stackoverflow.com/questions/33438842/enhanced-for-loop-compiling-fine-for-jdk-8-but-not-7/33439404#33439404", "tags": ["java", "foreach", "java-8", "java-7", "language-lawyer"]}, {"body": "<p>This compiled fine for me. I'm using the Java 8 JDK, on Netbeans, on a 64 bit machine (Windows 7). </p>\n\n<p>I believe this is a localization issue related to your IDE or compiler. I used your exact example, the output being </p>\n\n<pre><code>false\ntrue\nfalse\n</code></pre>\n\n<p>There was a warning given, stating that it is possible, but not recommended to hide a field with a local variable.</p>\n", "title": "Enhanced for loop compiling fine for JDK 8 but not 7", "answer_id": 33439440, "link": "http://stackoverflow.com/questions/33438842/enhanced-for-loop-compiling-fine-for-jdk-8-but-not-7/33439440#33439440", "tags": ["java", "foreach", "java-8", "java-7", "language-lawyer"]}, {"body": "<p>This should actually compile fine for JDK 7 and 8.</p>\n\n<p>Quoting JLS <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-14.html#jls-14.14.2\">section 14.14.2</a> (which is the same for the Java 7 specification):</p>\n\n<blockquote>\n  <p>The enhanced for statement is equivalent to a basic for statement of the form:</p>\n\n<pre><code>for (I #i = Expression.iterator(); #i.hasNext(); ) {\n      {VariableModifier} TargetType Identifier =\n          (TargetType) #i.next();\n      Statement\n}\n</code></pre>\n</blockquote>\n\n<p>Rewriting the enhanched for loop with <code>Iterator</code></p>\n\n<pre><code>for (String text : text) {...}\n</code></pre>\n\n<p>becomes</p>\n\n<pre><code>for (Iterator&lt;String&gt; it = text.iterator(); it.hasNext(); ) {\n    String text = it.next();\n}\n</code></pre>\n\n<p>Then, quoting <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-6.html#d5e8689\">example 6.4.1</a> of the JLS:</p>\n\n<blockquote>\n  <p>A similar restriction on shadowing of members by local variables was judged impractical, because the addition of a member in a superclass could cause subclasses to have to rename local variables. Related considerations make restrictions on shadowing of local variables by members of nested classes, or on shadowing of local variables by local variables declared within nested classes unattractive as well. </p>\n</blockquote>\n\n<p>As such, there is no compile-time error here because no restriction is made when shadowing a member variable by a local variable, which is the case here: the local variable <code>String text</code> is shadowing the member variable <code>List&lt;String&gt; text</code>.</p>\n", "title": "Enhanced for loop compiling fine for JDK 8 but not 7", "answer_id": 33439463, "link": "http://stackoverflow.com/questions/33438842/enhanced-for-loop-compiling-fine-for-jdk-8-but-not-7/33439463#33439463", "tags": ["java", "foreach", "java-8", "java-7", "language-lawyer"]}, {"body": "<p>Although I think the other answers are correct, let me be devil's advocate and offer the opposite view.</p>\n\n<p>Obviously JDK 7 parses the foreach loop in such a way that the variable 'text' is also in scope after the ':'. To test this, I wrote the following method. It compiles and runs just fine in Java 1.7:</p>\n\n<pre><code>public static void main(String[] args) {\n    for (String text : new String[] {text = \"hello\", text, text, text})\n        System.out.println(text);\n}\n</code></pre>\n\n<p>Although others have said this is a bug in jdk 1.7 (and it probably is), I couldn't find anywhere in the JLS that specifically says the variable just declared is not in scope after the ':'. If it's not a bug, then Java 8 breaks compatibility.</p>\n", "title": "Enhanced for loop compiling fine for JDK 8 but not 7", "answer_id": 33440082, "link": "http://stackoverflow.com/questions/33438842/enhanced-for-loop-compiling-fine-for-jdk-8-but-not-7/33440082#33440082", "tags": ["java", "foreach", "java-8", "java-7", "language-lawyer"]}, {"body": "<p>While the reasoning, using the specified translation from the enhanced <code>for</code> loop to the traditional <code>for</code> loop, used by <a href=\"http://stackoverflow.com/a/33439463/2711488\">other</a> <a href=\"http://stackoverflow.com/a/33439404/2711488\">answers</a> is correct, there is an explicit specification about the scopes:</p>\n\n<blockquote>\n  <h3><a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-6.html#jls-6.3\">\u00a76.3. Scope of a Declaration</a></h3>\n  \n  <p>\u2026</p>\n  \n  <p>The scope of a local variable declared in the <em>FormalParameter</em> part of\n  an enhanced <code>for</code> statement (<a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-14.html#jls-14.14.2\">\u00a714.14.2</a>)\n  is the contained <em>Statement</em>.</p>\n</blockquote>\n\n<p>(<a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-6.html#jls-6.3-540\">direct link</a>)</p>\n\n<p>Thus, the scope of the variable does not include the <em>Expression</em> of the enhanced <code>for</code> loop\u2026</p>\n\n<p>You can verify that this hasn\u2019t changed, compared to <a href=\"https://docs.oracle.com/javase/specs/jls/se7/html/jls-6.html#jls-6.3-540\">Java 7</a>\nand <a href=\"https://docs.oracle.com/javase/specs/jls/se6/html/names.html#130473\">Java 6</a>,\nthough both (I tried Java 6 <code>javac</code>) exhibit the contradicting behavior.</p>\n\n<p>So this change in the compiler behavior is the fix of an old bug\u2026</p>\n", "title": "Enhanced for loop compiling fine for JDK 8 but not 7", "answer_id": 33441855, "link": "http://stackoverflow.com/questions/33438842/enhanced-for-loop-compiling-fine-for-jdk-8-but-not-7/33441855#33441855", "tags": ["java", "foreach", "java-8", "java-7", "language-lawyer"]}], "question_id": 33438842}, {"body": "<p>The issue is to decided the trade offs between following notations:</p>\n\n<p><strong>JSON based</strong>:</p>\n\n<pre><code>\"users\": {\n    \"id1\": {\n        \"id\": \"id1\",\n        \"firstname\": \"firstname1\",\n        \"lastname\": \"lastname1\"\n    },\n    \"id2\": {\n        \"id\": \"id2\",\n        \"firstaame\": \"firstname2\",\n        \"lastname\": \"lastname2\"\n    }\n}\n</code></pre>\n\n<p><strong>Array Based</strong>:</p>\n\n<pre><code>users: [\n    {\n        \"id\": \"id\",\n        \"key2\": \"value2\",\n        \"key3\": \"value3\"\n    },\n    {\n        \"id\": \"id\",\n        \"key2\": \"value2\",\n        \"key3\": \"value3\"\n    }\n]\n</code></pre>\n\n<p>Relating to <a href=\"http://stackoverflow.com/questions/24882985/array-of-objects-vs-nested-object\">this</a> post on the same issue, I have decided (on front end) to use the JSON object notation instead of array of objects as it suits my requirements and better performance and less code in the browser.</p>\n\n<p>But the problem is that the list itself is not static. By this I mean the list is being generated i.e. fetched/stored from DB (NoSQL) and created for new entries through a Java API at the server. I am not able to decide on which notation should I use at the back end (which eventually will also affect the UI too). </p>\n\n<p>Any thoughts/suggestion about performance, maintainability or scalability is appreciated.</p>\n", "tags": ["java", "arrays", "json", "performance", "maintainability"], "title": "Array of objects vs Object of Objects", "answer_count": 5, "creation_date": 1437113820, "score": 29, "link": "http://stackoverflow.com/questions/31469441/array-of-objects-vs-object-of-objects", "answers": [{"body": "<p>It is a total opinion based question. There might be many other points, but I can point out as below.</p>\n\n<p><strong>JSON based approach :</strong>\nIf I am not wrong then this will be implemented using <code>Map</code> on server side.</p>\n\n<p><strong>Advantage :</strong> In JavaScript you can directly use  users.id1, users.id2 i.e. no need of iteration</p>\n\n<p><strong>Disadvantage :</strong> On client side, some how you will require the ids present in your JSON i.e. either hard coding it or using some dynamic approach which will tell you which id is present in your JSON.</p>\n\n<hr>\n\n<p><strong>Array Based approach :</strong> If I am not wrong then this will be implemented using <code>Array</code>/<code>List</code> on server side.</p>\n\n<p><strong>Advantage:</strong></p>\n\n<ol>\n<li>On client side, you can directly iterate through array, without\nworrying in advance about which id is present inside it i.e. no hard\ncoding.</li>\n<li>As pointed out by <strong>@JBNizet</strong>, array based approach will maintain the order.</li>\n</ol>\n\n<p><strong>Disadvantage :</strong> If you want to fetch single id then you will need to iterate through the array.</p>\n\n<p>Generally we don't send much information on client side, so array based approach will not create any problem. And <strong>transforming array into map is possible on both the side (server and client)</strong> if you want id based approach.</p>\n", "title": "Array of objects vs Object of Objects", "answer_id": 31470302, "link": "http://stackoverflow.com/questions/31469441/array-of-objects-vs-object-of-objects/31470302#31470302", "tags": ["java", "arrays", "json", "performance", "maintainability"]}, {"body": "<p>On the server side, Arrays are stored as simple Lists: <code>ArrayList&lt;Content&gt;</code>, while Objects are either stored as maps: <code>HashMap&lt;String, Content&gt;</code> or, mostly, as Java Objects.</p>\n\n<p>In order to convert Java Entities to and from JSON, you can take a look at the <a href=\"https://github.com/FasterXML/jackson\">Jackson</a> project which does all that for you.</p>\n\n<p>I wouldn't worry about any performance differences between those two variants. It's more important to have an understandable, semantic API, so you should base your desicion on the business case rather than performance.</p>\n\n<p>Looking at your example, I think an <code>Array</code> is the better approach, since you want to return a list of users which are all equal. Sending the id twice makes no sense imho and increases the amount of data that has to be transmitted.</p>\n\n<p>Furthermore, since <code>Arrays</code> are much simpler to store and to iterate in Java, they should also provide better performance than Objects.</p>\n\n<p><strong>Some general differences:</strong></p>\n\n<ul>\n<li>Arrays preserve the order</li>\n<li>Arrays can contain duplicate entries</li>\n<li>Objects often have a bigger storage/network overhead</li>\n<li>Arrays are faster to iterate (on the server side)</li>\n</ul>\n", "title": "Array of objects vs Object of Objects", "answer_id": 31470532, "link": "http://stackoverflow.com/questions/31469441/array-of-objects-vs-object-of-objects/31470532#31470532", "tags": ["java", "arrays", "json", "performance", "maintainability"]}, {"body": "<p>One big disadvantage of your first \"JSON based\" notation that comes to mind is that some frameworks will have problems with (de)serialization of this. For example the DataContractSerializer (C# .NET) will expect the fields <code>id1</code> and <code>id2</code> to be defined (hardcoded) in the class of your objects <code>users</code>. I'm not sure if this applies to some Java frameworks, too. Maybe the framework will you use can deserialze it as a HashMap instead.</p>\n\n<p>Altogether I'd find the array notation much more intuitive to work with when it comes to iteration etc.</p>\n", "title": "Array of objects vs Object of Objects", "answer_id": 31509502, "link": "http://stackoverflow.com/questions/31469441/array-of-objects-vs-object-of-objects/31509502#31509502", "tags": ["java", "arrays", "json", "performance", "maintainability"]}, {"body": "<p>You can use <code>object[property]</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects\" rel=\"nofollow\">notation</a> to access or set properties in an object in JavaScript.</p>\n\n<p>Go with <em>array based</em> approach at the backend, and convert the array to a map (<em>JSON based</em> as you refer to it) in the front end.</p>\n\n<pre><code>var list = [{id: \"id1\", value: \"One\"}, {id: \"id2\", value: \"Two\"}]\nvar map = {};\nlist.forEach(function (item) { map[item.id] = item });\nmap.get(\"id1\")\n</code></pre>\n\n<p>If your list changes, you can get the new list from backend and update your map in UI.</p>\n\n<p>This way your backend is faster to respond as it does not have to convert list to a map. Your front end will do a O(n) iteration <em>once</em> over the list to convert it to a map. But that is a small price compared to O(n) you will pay every time you search on a list.</p>\n\n<p>If you will be doing get by id predominantly on your data at the back end go with <em>JSON Based</em> at the backend itself (you can use <code>LinkedHashMap</code> to preserve order).</p>\n", "title": "Array of objects vs Object of Objects", "answer_id": 31620462, "link": "http://stackoverflow.com/questions/31469441/array-of-objects-vs-object-of-objects/31620462#31620462", "tags": ["java", "arrays", "json", "performance", "maintainability"]}, {"body": "<p>Both approaches have their pros and cons and depends on what is it that you are looking at.</p>\n\n<p>The array approach is easy to serialize and is more 'framework' friendly (you can add beans to a list and serialize the list and you are done). This allows, for example, a web-container to return the response without requiring any customization. This is likely to be supported out-of-the-box by most frameworks.</p>\n\n<p>On the other hand, the object based approach is more difficult to generate (in relative terms) but its easier to lookup given the key is known.</p>\n\n<p>So for ease of implementation (by producer), go for the array based approach. For ease of use (consumed by clients) go for object based approach.</p>\n", "title": "Array of objects vs Object of Objects", "answer_id": 31629757, "link": "http://stackoverflow.com/questions/31469441/array-of-objects-vs-object-of-objects/31629757#31629757", "tags": ["java", "arrays", "json", "performance", "maintainability"]}], "question_id": 31469441}, {"body": "<p>I am looking for a component that would act as an event dispatcher for Android Analytics or for a whole custom Analytics solution.</p>\n\n<p>I found some pretty neat code from the recently released <a href=\"https://github.com/ParsePlatform/Parse-SDK-Android\">Parse Android SDK</a>.<br>\nI will use some part of it, if no other solution will appear.<br>\nBut maybe there is something simpler.</p>\n\n<p>Ideally, I would like to have something similar to what <a href=\"https://github.com/orta/ARAnalytics\">ARAnalytics</a> is, plus some custom analytics/usage sender pointing to my service.</p>\n\n<p>Are there any production-ready components for that? </p>\n", "tags": ["java", "android", "google-analytics", "analytics"], "title": "Analytics dispatcher and configuration management for custom usage", "answer_count": 2, "creation_date": 1439992710, "score": 29, "link": "http://stackoverflow.com/questions/32097669/analytics-dispatcher-and-configuration-management-for-custom-usage", "answers": [{"body": "<p>If I understand correctly, you need to send extra events and perform custom post-processing on those events.</p>\n\n<p>You could use something like <a href=\"http://developer.piwik.org/guides/tracking-api-clients\" rel=\"nofollow\">PIWIK</a> to track your custom events locally. Then you'd need to write a glue between your server and PIWIK (or write the functionality you desire as a PIWIK module).</p>\n\n<p>Alternatively, you could sent events to <a href=\"https://mixpanel.com\" rel=\"nofollow\">Mixpanel</a> and <a href=\"https://mixpanel.com/docs/api-documentation/exporting-raw-data-you-inserted-into-mixpanel\" rel=\"nofollow\">export them</a> periodically to your server (e.g. in a cronjob). Then, your server can do whatever post-processing it needs to do.</p>\n\n<p>As a side note, when I was experimenting with Google Analytics and Mixpanel, I wrote an (opinionated) analytics wrapper with specific methods (e.g. <code>sendError(...)</code>, <code>sendTimeDelta(...)</code>).</p>\n", "title": "Analytics dispatcher and configuration management for custom usage", "answer_id": 33808995, "link": "http://stackoverflow.com/questions/32097669/analytics-dispatcher-and-configuration-management-for-custom-usage/33808995#33808995", "tags": ["java", "android", "google-analytics", "analytics"]}, {"body": "<p>you can do like this</p>\n\n<pre><code>// Set the dispatch period in seconds.\nGoogleAnalytics.getInstance(this).setLocalDispatchPeriod(30); \n</code></pre>\n\n<p>and also Google has introduced Firebase analytics google now recommends developer to use firebase refer: <a href=\"https://firebase.google.com/docs/analytics/\" rel=\"nofollow\">https://firebase.google.com/docs/analytics/</a></p>\n", "title": "Analytics dispatcher and configuration management for custom usage", "answer_id": 38540557, "link": "http://stackoverflow.com/questions/32097669/analytics-dispatcher-and-configuration-management-for-custom-usage/38540557#38540557", "tags": ["java", "android", "google-analytics", "analytics"]}], "question_id": 32097669}, {"body": "<p>Encapsulation is hiding the data. I would like to hear some really interesting answers here.</p>\n\n<p>What is the point behind keeping variables as <code>private</code> when we already declare <code>public</code> setter methods for variables.</p>\n\n<p>I understand the usage of encapsulation but when we are making the setters as public what is the point behind keeping the variables as <code>private</code>, we can directly use <code>public</code> access modifiers </p>\n\n<p>Is it because we do not want others to know the exact way we are storing data or managing data on the back-end?</p>\n", "tags": ["java", "c++", ".net", "oop", "encapsulation"], "title": "Encapsulation - why do we need it when setters are already public?", "answer_count": 9, "creation_date": 1442392000, "score": 28, "link": "http://stackoverflow.com/questions/32603329/encapsulation-why-do-we-need-it-when-setters-are-already-public", "answers": [{"body": "<blockquote>\n  <p>Is it because we do not want others to know the exact way we are\n  storing data or managing data on the back-end?</p>\n</blockquote>\n\n<p>Yes, that's the point. It is related to the concepts of <em>abstraction</em> and <em>information hiding</em> too.</p>\n\n<p>You provide a public setter that when invoked by the class client will have the effect that you have documented. It is none of the client's business how this effect is actually achieved. Are you modifying one of the class attributes? Ok, let the client know that, but not the fact that you are actually modifying a variable. In the future, you could want to modify your class so that instead of a simple backup variable it uses something completely different (a dictionary of attributes? An external service? Whatever!) and the client will not break.</p>\n\n<p>So your setter is an <em>abstraction</em> that you provide to the client for \"modify this class attribute\". At the same time you are <em>hiding</em> the fact that you are using an internal variable because the client doesn't need to know that fact.</p>\n\n<p>(Note: here I'm using the word \"attribute\" as a generic concept, not related to any concrete programming language)</p>\n", "title": "Encapsulation - why do we need it when setters are already public?", "answer_id": 32603593, "link": "http://stackoverflow.com/questions/32603329/encapsulation-why-do-we-need-it-when-setters-are-already-public/32603593#32603593", "tags": ["java", "c++", ".net", "oop", "encapsulation"]}, {"body": "<p>More or less simple and realistic example I encountered in practice is an <code>Options</code> class, which has a lot of setters and getters. At some point you might want to add new option which depends on others or has side effects. Or even replace group of options with <code>Enum</code>. In this case <code>setA</code> function will not just modify <code>a</code> field, but will hide some additional configuration logic. Similarly <code>getA</code> will not just return value of <code>a</code>, but something like <code>config == cStuffSupportingA</code>.</p>\n", "title": "Encapsulation - why do we need it when setters are already public?", "answer_id": 32604301, "link": "http://stackoverflow.com/questions/32603329/encapsulation-why-do-we-need-it-when-setters-are-already-public/32604301#32604301", "tags": ["java", "c++", ".net", "oop", "encapsulation"]}, {"body": "<p>Although <a href=\"http://stackoverflow.com/users/4574/konamiman\">Konamiman</a>'s <a href=\"http://stackoverflow.com/questions/32603329/encapsulation-why-do-we-need-it-when-setters-are-already-public/32603593#32603593\">answer</a> is spot on, I'd like to add that, in the particular case of public setters versus directly exposing public fields you are asking, there is another very important distinction to keep in mind apart from <em>information hiding</em> and <em>decoupling</em> implementation from the public surface, or <em>API</em>, of a class; <strong><em>validation</em></strong>.</p>\n\n<p>In a public field scenario, there is no way to validate the field's value when it's modified. In case of a public setter (be it a <code>Foo {get; set;}</code> property or a <code>SetFoo(Foo value)</code>) method you have the possibility to add validation code and launch required side-effects and this way ensure that your class is always in a valid or predictable state.</p>\n", "title": "Encapsulation - why do we need it when setters are already public?", "answer_id": 32605059, "link": "http://stackoverflow.com/questions/32603329/encapsulation-why-do-we-need-it-when-setters-are-already-public/32605059#32605059", "tags": ["java", "c++", ".net", "oop", "encapsulation"]}, {"body": "<p>Because by encapsulation we provide single point of access. Suppose you define a variable and its setter as follows </p>\n\n<pre><code>String username; \n\npublic void setUsername(String username){\nthis.username = username;\n}\n</code></pre>\n\n<p>Later you like to add some validation before setting username property. If you are setting the username at 10 places by directly accessing the property then you don't have single point of access and you need to make this change at 10 places. But if you have one setter method then by making a change at one place you can easily achieve the result. </p>\n", "title": "Encapsulation - why do we need it when setters are already public?", "answer_id": 32605578, "link": "http://stackoverflow.com/questions/32603329/encapsulation-why-do-we-need-it-when-setters-are-already-public/32605578#32605578", "tags": ["java", "c++", ".net", "oop", "encapsulation"]}, {"body": "<p>I fully agree with <a href=\"http://stackoverflow.com/users/4574/konamiman\">Konamiman's answer</a>, but I'd like to add one thing: </p>\n\n<p>There are cases where you <em>really don't want that abstraction</em>. And that's fine.</p>\n\n<p>A simple example I like to use here is a class for a 3-dimensional float vector:</p>\n\n<pre><code>class Vector3f {\npublic:\n    float x;\n    float y;\n    float z;\n};\n</code></pre>\n\n<p>Could you make those fields private and provide setters instead? Sure, you could. But here you might argue that the class is really just supposed to provide a tuple of floats and you don't want any additional functionality. Thus adding setters would only complicate the class and you'd rather leave the fields public.</p>\n\n<p>Now, you can easily construct scenarios where that might bite you later on. For instance, you might one day get a requirement that <code>Vector3f</code>s are not allowed to store <code>NaN</code>s and should throw an exception if anyone tries to do so. But such a hypothetical future problem should not be enough to justify introducing additional abstractions.</p>\n\n<p>It's <em>your</em> call as a programmer to decide which abstractions make sense for the problem at hand and which ones would only get in your way of getting the job done. Unnecessary abstractions are <a href=\"https://en.wikipedia.org/wiki/Overengineering\">over-engineering</a> and will hurt your productivity just as much as not abstracting enough.</p>\n\n<p>Bottom line: Don't blindly use setters everywhere just because someone claimed that's good practice. Instead, think about the problem at hand and consider the tradeoffs.</p>\n", "title": "Encapsulation - why do we need it when setters are already public?", "answer_id": 32606545, "link": "http://stackoverflow.com/questions/32603329/encapsulation-why-do-we-need-it-when-setters-are-already-public/32606545#32606545", "tags": ["java", "c++", ".net", "oop", "encapsulation"]}, {"body": "<p>What if you do want to a range check before assignment? That's one of the cases I use setters and getters</p>\n", "title": "Encapsulation - why do we need it when setters are already public?", "answer_id": 32606918, "link": "http://stackoverflow.com/questions/32603329/encapsulation-why-do-we-need-it-when-setters-are-already-public/32606918#32606918", "tags": ["java", "c++", ".net", "oop", "encapsulation"]}, {"body": "<p>Wikipedia has a good overview of [mutator methods(<a href=\"https://en.wikipedia.org/wiki/Mutator_method\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Mutator_method</a>), which is what setter methods are and how they work in different languages.</p>\n\n<p>The short version: if you want to introduce validation or other logic that gets executed on object modification it is nice to have a setter to put that logic in. Also you may want to hide how you store things. So, those are reasons for having getters/setters. Similarly, for getters, you might have logic that provides default values or values that are dependent on e.g. configuration for things like Locale, character encoding, etc. There are lots of valid reasons to want to have logic other than getting or setting the instance variable.</p>\n\n<p>Obviously, if you have getters and setteres, you don't want people bypassing them by manipulating the object state directly, which is why you should keep instance variables private.</p>\n\n<p>Other things to consider include whether you actually want your objects to be mutable at all (if not, make fields final), whether you want to make modifying the object state threadsafe with e.g. locks, synchronized, etc.</p>\n", "title": "Encapsulation - why do we need it when setters are already public?", "answer_id": 32607764, "link": "http://stackoverflow.com/questions/32603329/encapsulation-why-do-we-need-it-when-setters-are-already-public/32607764#32607764", "tags": ["java", "c++", ".net", "oop", "encapsulation"]}, {"body": "<p>Setting fields as private documents a powerful fact: these private fields are only directly used within the current class. This helps maintainers by not having to track down field usage. They can reason better on the code by looking at the class and determining that the effects on and from these fields with the class' environment go through public and protected method calls. It limits the exposure surface on the class.</p>\n\n<p>In turn, defining a \"setter\" for a private field is not about giving it publicity again. It is about declaring another powerful fact: an <em>object</em> belonging to this class has a <em>property</em> that can be modified from the outside. (The terms <em>object</em> and <em>property</em> are used in the sense of <em>a bounded part of the whole</em> and <em>an observable fact about this part</em>, not in the OOP sense)</p>\n\n<p>Why then declare a \"setter\" on a field when making the field public would suffice? Because <strong>declaring</strong> a field not only binds a name to a <em>property</em> of the <em>objects</em> of the class, but also commits to use memory storage for this property.</p>\n\n<p>Therefore, if you declare a \"private field with a setter\", you declare three things:</p>\n\n<ul>\n<li>You declare that the name you gave to the field/setter cluster represents a <em>property</em> of the object which is of interest when the object is seen as a black box.</li>\n<li>You declare that the value of this <em>property</em> is modifiable by the environment of the object.</li>\n<li>You declare that in this particular concrete class, the <em>property</em> of the object is realized by committing some memory storage to it.</li>\n</ul>\n\n<p>I advocate that you <strong>never</strong> make your fields private with getters and setters indiscriminately. Fields are for describing storage. Methods are for interactions with the environment. (And the particular case of \"getters\" and \"setters\" are for describing <em>properties</em> of interest)</p>\n", "title": "Encapsulation - why do we need it when setters are already public?", "answer_id": 32607882, "link": "http://stackoverflow.com/questions/32603329/encapsulation-why-do-we-need-it-when-setters-are-already-public/32607882#32607882", "tags": ["java", "c++", ".net", "oop", "encapsulation"]}, {"body": "<p>Think about this : I'm representing a real life object, a Lion through a class. I'd do something like this. </p>\n\n<pre><code>class Lion {\n    public int legs;\n} \n</code></pre>\n\n<p>Now my class is needed by some other developer to create an object and set its legs field.  He'd do something like this </p>\n\n<pre><code>Lion jungleKing = new Lion();\njungleKing.legs=15;\n</code></pre>\n\n<p>Now the question is, Java won't restrict him to setting any number more than 4 as the number of legs for that object.  It's not an error,  and it'll run just fine.  But it's a logical blunder,  and the compiler won't help you there.  This way a Lion may have any number of legs. \nBut if we write the code this way </p>\n\n<pre><code>class Lion {\n    private int legs;\n    public void setLegs(int legs){\n        if(legs&gt;4)\n            this.legs=4;\n        else this.legs=legs;\n    } \n} \n</code></pre>\n\n<p>Now you won't have any Lion with more than 4 legs because the policy of updating the fields of the class has been defined by the class itself and there's no way anyone not knowing the policy is going to update the legs field because the only way to update the legs field is through the setLegs() method and that method knows the policy of the class. </p>\n", "title": "Encapsulation - why do we need it when setters are already public?", "answer_id": 32609318, "link": "http://stackoverflow.com/questions/32603329/encapsulation-why-do-we-need-it-when-setters-are-already-public/32609318#32609318", "tags": ["java", "c++", ".net", "oop", "encapsulation"]}], "question_id": 32603329}], "quota_max": 300, "page_size": 100, "quota_remaining": 277, "page": 1}