{"has_more": true, "items": [{"body": "<p>The following code produces the output \"Hello World!\" (no really, try it).</p>\n\n<pre><code>public static void main(String... args) {\n\n   // The comment below is not a typo.\n   // \\u000d System.out.println(\"Hello World!\");\n}\n</code></pre>\n\n<p>The reason for this is that the Java compiler parses the Unicode character <code>\\u000d</code> as a new line and gets transformed into:</p>\n\n<pre><code>public static void main(String... args) {\n\n   // The comment below is not a typo.\n   //\n   System.out.println(\"Hello World!\");\n}\n</code></pre>\n\n<p>Thus resulting into a comment being \"executed\".</p>\n\n<p>Since this can be used to \"hide\" malicious code or whatever an evil programmer can conceive, <strong>why is it allowed in comments</strong>?</p>\n\n<p>Why is this allowed by the Java specification?</p>\n", "tags": ["java", "unicode", "comments"], "title": "Why is executing Java code in comments with certain Unicode characters allowed?", "answers": [{"body": "<p>Unicode decoding takes place before any other lexical translation. The key benefit of this is that it makes it trivial to go back and forth between ASCII and any other encoding. You don't even need to figure out where comments begin and end!</p>\n\n<p>As stated in <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html#jls-3.3\">JLS Section 3.3</a> this allows any ASCII based tool to process the source files:</p>\n\n<blockquote>\n  <p>[...] The Java programming language specifies a standard way of transforming a program written in Unicode into ASCII that changes a program into a form that can be processed by ASCII-based tools. [...]</p>\n</blockquote>\n\n<p>This gives a fundamental guarantee for platform independence (independence of supported character sets) which has always been a key goal for the Java platform. </p>\n\n<p>Being able to write any Unicode character anywhere in the file is a neat feature, and especially important in comments, when documenting code in non-latin languages. The fact that it can interfere with the semantics in such subtle ways is just an (unfortunate) side-effect.</p>\n\n<p>There are many gotchas on this theme and <a href=\"http://www.javapuzzlers.com/\"><em>Java Puzzlers</em></a> by Joshua Bloch and Neal Gafter included the following variant:</p>\n\n<blockquote>\n  <p>Is this a legal Java program? If so, what does it print?</p>\n\n<pre><code>\\u0070\\u0075\\u0062\\u006c\\u0069\\u0063\\u0020\\u0020\\u0020\\u0020\n\\u0063\\u006c\\u0061\\u0073\\u0073\\u0020\\u0055\\u0067\\u006c\\u0079\n\\u007b\\u0070\\u0075\\u0062\\u006c\\u0069\\u0063\\u0020\\u0020\\u0020\n\\u0020\\u0020\\u0020\\u0020\\u0073\\u0074\\u0061\\u0074\\u0069\\u0063\n\\u0076\\u006f\\u0069\\u0064\\u0020\\u006d\\u0061\\u0069\\u006e\\u0028\n\\u0053\\u0074\\u0072\\u0069\\u006e\\u0067\\u005b\\u005d\\u0020\\u0020\n\\u0020\\u0020\\u0020\\u0020\\u0061\\u0072\\u0067\\u0073\\u0029\\u007b\n\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\n\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0020\n\\u0022\\u0048\\u0065\\u006c\\u006c\\u006f\\u0020\\u0077\\u0022\\u002b\n\\u0022\\u006f\\u0072\\u006c\\u0064\\u0022\\u0029\\u003b\\u007d\\u007d\n</code></pre>\n</blockquote>\n\n<p>(This program turns out to be a plain \"Hello World\" program.)</p>\n\n<p>In the solution to the puzzler, they point out the following:</p>\n\n<blockquote>\n  <p>More seriously, this puzzle serves to reinforce the lessons of the previous three: <strong>Unicode escapes are essential when you need to insert characters that can\u2019t be represented in any other way into your program. Avoid them in all other cases.</strong></p>\n</blockquote>\n", "title": "Why is executing Java code in comments with certain Unicode characters allowed?", "tags": ["java", "unicode", "comments"], "link": "http://stackoverflow.com/questions/30727515/why-is-executing-java-code-in-comments-with-certain-unicode-characters-allowed/30727799#30727799", "question_id": 30727515, "answer_id": 30727799}, {"body": "<p>The <code>\\u000d</code> escape terminates a comment because <code>\\u</code> escapes are uniformly converted to the corresponding Unicode characters <em>before</em> the program is tokenized.  You could equally use <code>\\u0057\\u0057</code> instead of <code>//</code> to <em>begin</em> a comment.</p>\n\n<p>This is a bug in your IDE, which should syntax-highlight the line to make it clear that the <code>\\u000d</code> ends the comment.</p>\n\n<p>This is also a design error in the language.  It can't be corrected now, because that would break programs that depend on it.  <code>\\u</code> escapes should either be converted to the corresponding Unicode character by the compiler only in contexts where that \"makes sense\" (string literals and identifiers, and probably nowhere else) or they should have been forbidden to generate characters in the U+0000\u2013007F range, or both.  Either of those semantics would have prevented the comment from being terminated by the <code>\\u000d</code> escape, without interfering with the cases where <code>\\u</code> escapes are useful\u2014note that that <em>includes</em> use of <code>\\u</code> escapes inside comments as a way to encode comments in a non-Latin script, because the text editor could take a broader view of where <code>\\u</code> escapes are significant than the compiler does.  (I am not aware of any editor or IDE that will display <code>\\u</code> escapes as the corresponding characters in <em>any</em> context, though.)</p>\n\n<p>There is a similar design error in the C family,<sup>1</sup> where backslash-newline is processed before comment boundaries are determined, so e.g.</p>\n\n<pre><code>// this is a comment \\\n   this is still in the comment!\n</code></pre>\n\n<p>I bring this up to illustrate that it happens to be easy to make this particular design error, and not realize that it's an error until it is too late to correct it, if you are used to thinking about tokenization and parsing the way compiler programmers think about tokenization and parsing.  Basically, if you have already defined your formal grammar and then someone comes up with a syntactic special case &mdash; trigraphs, backslash-newline, encoding arbitrary Unicode characters in source files limited to ASCII, whatever &mdash; that needs to be wedged in, it's easier to add a transformation pass <em>before</em> the tokenizer than it is to redefine the tokenizer to pay attention to where it makes sense to use that special case.</p>\n\n<p><sup>1</sup> For pedants: I am aware that this aspect of C was 100% intentional, with the rationale &mdash; I am not making this up &mdash; that it would allow you to mechanically force-fit code with arbitrarily long lines onto punched cards.  It was still an incorrect design decision.</p>\n", "title": "Why is executing Java code in comments with certain Unicode characters allowed?", "tags": ["java", "unicode", "comments"], "link": "http://stackoverflow.com/questions/30727515/why-is-executing-java-code-in-comments-with-certain-unicode-characters-allowed/30736170#30736170", "question_id": 30727515, "answer_id": 30736170}, {"body": "<p>I agree with @zwol that this is a design mistake; but I'm even more critical of it.</p>\n\n<p><code>\\u</code> escape is useful in string and char literals; and that's the only place that it should exist. It should be handled the same way as other escapes like <code>\\n</code>; and <code>\"\\u000A\"</code> <em>should</em> mean exactly <code>\"\\n\"</code>.</p>\n\n<p>There is absolutely no point of having <code>\\uxxxx</code> in comments - nobody can read that.</p>\n\n<p>Similarly, there's no point of using <code>\\uxxxx</code> in other part of the program. The only exception is probably in public APIs that are coerced to contain some non-ascii chars - what's the last time we've seen that?</p>\n\n<p>The designers had their reasons in 1995, but 20 years later, this appears to be a wrong choice.</p>\n\n<p><em>(question to readers - why does this question keep getting new votes? is this question linked from somewhere popular?)</em></p>\n", "title": "Why is executing Java code in comments with certain Unicode characters allowed?", "tags": ["java", "unicode", "comments"], "link": "http://stackoverflow.com/questions/30727515/why-is-executing-java-code-in-comments-with-certain-unicode-characters-allowed/30738171#30738171", "question_id": 30727515, "answer_id": 30738171}, {"body": "<p>Since this hasn\u2019t addressed yet, here an explanation, why the translation of Unicode escapes happens before any other source code processing:</p>\n\n<p>The idea behind it was that it allows lossless translations of Java source code between different character encodings. Today, there is widespread Unicode support, and this doesn\u2019t look like a problem, but back then it wasn\u2019t easy for a developer from a western country to receive some source code from his Asian colleague containing Asian characters, make some changes (including compiling and testing it) and sending the result back, all without damaging something.</p>\n\n<p>So, Java source code can be written in any encoding and allows a wide range of characters within identifiers, character and <code>String</code> literals and comments. Then, in order to transfer it losslessly, all characters not supported by the target encoding are replaced by their Unicode escapes.</p>\n\n<p>This is a reversible process and the interesting point is that the translation can be done by a tool which doesn\u2019t need to know anything about the Java source code syntax as the translation rule is not dependent on it. This works as the translation to their actual Unicode characters inside the compiler happens independently to the Java source code syntax as well. It implies that you can perform an arbitrary number of translation steps in both directions without ever changing the meaning of the source code.</p>\n\n<p>This is the reason for another weird feature which hasn\u2019t even mentioned: the <code>\\uuuuuuxxxx</code> syntax:</p>\n\n<p>When a translation tool is escaping characters and encounters a sequence that is already an escaped sequence, it should insert an additional <code>u</code> into the sequence, converting <code>\\ucafe</code> to <code>\\uucafe</code>. The meaning doesn\u2019t change, but when converting into the other direction, the tool should just remove one <code>u</code> and replace only sequences containing a single <code>u</code> by their Unicode characters. That way, even Unicode escapes are retained in their original form when converting back and forth. I guess, no-one ever used that feature\u2026</p>\n", "title": "Why is executing Java code in comments with certain Unicode characters allowed?", "tags": ["java", "unicode", "comments"], "link": "http://stackoverflow.com/questions/30727515/why-is-executing-java-code-in-comments-with-certain-unicode-characters-allowed/30739477#30739477", "question_id": 30727515, "answer_id": 30739477}, {"body": "<p>This was an intentional design choice that goes all the way back to the original design of Java.</p>\n\n<p>To those folks who ask \"who wants Unicode escapes in comments?\", I presume they are folks whose native language uses the Latin character set. In other words, it is inherent in the original design of Java that folks could use arbitrary Unicode characters wherever legal in a Java program, most typically in comments and strings.</p>\n\n<p>It is arguably a shortcoming in programs (like IDEs) used to view the source text that such programs cannot interpret the Unicode escapes and display the corresponding glyph.</p>\n", "title": "Why is executing Java code in comments with certain Unicode characters allowed?", "tags": ["java", "unicode", "comments"], "link": "http://stackoverflow.com/questions/30727515/why-is-executing-java-code-in-comments-with-certain-unicode-characters-allowed/30740325#30740325", "question_id": 30727515, "answer_id": 30740325}, {"body": "<p>I'm going to completely ineffectually add the point, just because I can't help myself and I haven't seen it made yet, that the question is invalid since it contains a hidden premise which is wrong, namely that the code is in a comment!</p>\n\n<p>In Java source code \\u000d is equivalent in every way to an ASCII CR character. It is a line ending, plain and simple, wherever it occurs. The formatting in the question is misleading, what that sequence of characters actually syntactically corresponds to is:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>public static void main(String... args) {\n   // The comment below is no typo. \n   // \n System.out.println(\"Hello World!\");\n}\n</code></pre>\n\n<p>IMHO the most correct answer is therefore: the code executes because it isn't in a comment; it's on the next line. \"Executing code in comments\" is not allowed in Java, just like you would expect.</p>\n\n<p>Much of the confusion stems from the fact that syntax highlighters and IDEs aren't sophisticated enough to take this situation into account. They either don't process the unicode escapes at all, or they do it after parsing the code instead of before, like <code>javac</code> does.</p>\n", "title": "Why is executing Java code in comments with certain Unicode characters allowed?", "tags": ["java", "unicode", "comments"], "link": "http://stackoverflow.com/questions/30727515/why-is-executing-java-code-in-comments-with-certain-unicode-characters-allowed/30763499#30763499", "question_id": 30727515, "answer_id": 30763499}, {"body": "<p>The only people who can answer why Unicode escapes were implemented as they were are the people who wrote the specification.</p>\n\n<p>A plausible reason for this is that there was the desire to allow the entire BMP as possible characters of Java source code. This presents a problem though:</p>\n\n<ul>\n<li>You want to be able to use any BMP character.</li>\n<li>You want to be able to input any BMP charater reasonably easy. A way to do this is with Unicode escapes.</li>\n<li>You want to keep the lexical specification easy for humans to read and write, and reasonably easy to implement as well.</li>\n</ul>\n\n<p>This is incredibly difficult when Unicode escapes enter the fray: it creates a whole load of new lexer rules.</p>\n\n<p>The easy way out is to do lexing in two steps: first search and replace all Unicode escapes with the character it represents, and then parse the resulting document as if Unicode escapes don't exist.</p>\n\n<p>The upside to this is that it's easy to specify, so it makes the specification simpler, and it's easy to implement.</p>\n\n<p>The downside is, well, your example.</p>\n", "title": "Why is executing Java code in comments with certain Unicode characters allowed?", "tags": ["java", "unicode", "comments"], "link": "http://stackoverflow.com/questions/30727515/why-is-executing-java-code-in-comments-with-certain-unicode-characters-allowed/30802558#30802558", "question_id": 30727515, "answer_id": 30802558}], "creation_date": 1433840536, "score": 1049, "link": "http://stackoverflow.com/questions/30727515/why-is-executing-java-code-in-comments-with-certain-unicode-characters-allowed", "question_id": 30727515}, {"body": "<p>Using IntelliJ IDE can't compile any projects. Screenshots of settings below:</p>\n\n<p>Used JDK:</p>\n\n<p><a href=\"http://i.stack.imgur.com/cpggk.png\"><img src=\"http://i.stack.imgur.com/cpggk.png\" alt=\"http://gyazo.com/b6e32119af7b04090d890cad04db6373\"></a></p>\n\n<p>Project SDK and Language level:</p>\n\n<p><a href=\"http://i.stack.imgur.com/0gEQl.png\"><img src=\"http://i.stack.imgur.com/0gEQl.png\" alt=\"http://gyazo.com/55a5fc9f7f2bb721a04780ce9d74eeab\"></a></p>\n\n<p>Language Level:</p>\n\n<p><a href=\"http://i.stack.imgur.com/8z6A4.png\"><img src=\"http://i.stack.imgur.com/8z6A4.png\" alt=\"http://gyazo.com/143bffad63fd89cafc231298729df2fc\"></a></p>\n\n<p>Anybody have any ideas?</p>\n", "tags": ["java", "intellij-idea"], "title": "Error:java: javacTask: source release 8 requires target release 1.8", "answers": [{"body": "<p>This looks like the kind of error that Maven generates when you don't have the compiler plugin configured correctly.  Here's an example of a Java 8 compiler config.</p>\n\n<pre><code>&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n     xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n\n&lt;!-- ... --&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                &lt;version&gt;3.3&lt;/version&gt;\n                &lt;configuration&gt;\n                    &lt;source&gt;1.8&lt;/source&gt;\n                    &lt;target&gt;1.8&lt;/target&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;!-- ... --&gt;\n\n&lt;/project&gt;\n</code></pre>\n", "title": "Error:java: javacTask: source release 8 requires target release 1.8", "tags": ["java", "intellij-idea"], "link": "http://stackoverflow.com/questions/29888592/errorjava-javactask-source-release-8-requires-target-release-1-8/29889811#29889811", "question_id": 29888592, "answer_id": 29889811}, {"body": "<ol>\n<li><strong>File > Settings > Build, Execution, Deployment > Java Compiler</strong></li>\n<li>Change <strong>Target bytecode version</strong> to <strong>1.8</strong> of the module that you are working for.</li>\n</ol>\n\n<p><strong>If you are using Maven</strong></p>\n\n<p>Add this to <code>pom.xml</code> under the top-level <code>project</code> node:</p>\n\n<pre><code>&lt;build&gt;\n    &lt;plugins&gt;\n        &lt;plugin&gt;\n            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n            &lt;configuration&gt;\n                &lt;source&gt;1.8&lt;/source&gt;\n                &lt;target&gt;1.8&lt;/target&gt;\n            &lt;/configuration&gt;\n        &lt;/plugin&gt;\n    &lt;/plugins&gt;\n&lt;/build&gt;\n</code></pre>\n\n<p>(Hoisted from the comments.)</p>\n", "title": "Error:java: javacTask: source release 8 requires target release 1.8", "tags": ["java", "intellij-idea"], "link": "http://stackoverflow.com/questions/29888592/errorjava-javactask-source-release-8-requires-target-release-1-8/30524848#30524848", "question_id": 29888592, "answer_id": 30524848}, {"body": "<p>You need to go to Settings and set under the Java compiler the following:\n<a href=\"http://i.stack.imgur.com/OW3jL.png\"><img src=\"http://i.stack.imgur.com/OW3jL.png\" alt=\"enter image description here\"></a></p>\n\n<p>also check the Project Settings</p>\n", "title": "Error:java: javacTask: source release 8 requires target release 1.8", "tags": ["java", "intellij-idea"], "link": "http://stackoverflow.com/questions/29888592/errorjava-javactask-source-release-8-requires-target-release-1-8/32141090#32141090", "question_id": 29888592, "answer_id": 32141090}, {"body": "<p>There are two ways to solve this problem:</p>\n\n<ol>\n<li>Set settings <code>(File -&gt; Settings -&gt; Build, Execution, Deployment -&gt; Java Compiler)</code>:\n<a href=\"http://i.stack.imgur.com/4b9of.png\"><img src=\"http://i.stack.imgur.com/4b9of.png\" alt=\"enter image description here\"></a></li>\n<li>Add a build section to your <code>pom.xml</code>:\n<a href=\"http://i.stack.imgur.com/T7B1Z.png\"><img src=\"http://i.stack.imgur.com/T7B1Z.png\" alt=\"enter image description here\"></a></li>\n</ol>\n", "title": "Error:java: javacTask: source release 8 requires target release 1.8", "tags": ["java", "intellij-idea"], "link": "http://stackoverflow.com/questions/29888592/errorjava-javactask-source-release-8-requires-target-release-1-8/33742637#33742637", "question_id": 29888592, "answer_id": 33742637}, {"body": "<ul>\n<li>press:<strong>CTRL + SHIFT + A</strong></li>\n<li>type: <strong>java compiler</strong></li>\n<li>press: <strong>ENTER</strong></li>\n</ul>\n\n<p>In the setting window set the Target bytecode to <strong>1.8</strong></p>\n", "title": "Error:java: javacTask: source release 8 requires target release 1.8", "tags": ["java", "intellij-idea"], "link": "http://stackoverflow.com/questions/29888592/errorjava-javactask-source-release-8-requires-target-release-1-8/33827082#33827082", "question_id": 29888592, "answer_id": 33827082}, {"body": "<p>I fixed this by going to <strong>Project Structure</strong> -> <strong>Modules</strong>, find the module in question, click on <strong>Dependencies</strong> tab, change <code>Module SDK</code> to <code>Project SDK</code>.</p>\n", "title": "Error:java: javacTask: source release 8 requires target release 1.8", "tags": ["java", "intellij-idea"], "link": "http://stackoverflow.com/questions/29888592/errorjava-javactask-source-release-8-requires-target-release-1-8/34324604#34324604", "question_id": 29888592, "answer_id": 34324604}, {"body": "<p>I fixed it by modify my POM file. Notice the last comment under the highest voted answer.</p>\n\n<pre><code>&lt;plugin&gt;\n    &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n    &lt;version&gt;2.3.2&lt;/version&gt;\n        &lt;configuration&gt;\n            &lt;source&gt;1.8&lt;/source&gt;\n            &lt;target&gt;1.8&lt;/target&gt;\n            &lt;encoding&gt;UTF-8&lt;/encoding&gt;\n        &lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre>\n\n<p>The source must matches the target.</p>\n", "title": "Error:java: javacTask: source release 8 requires target release 1.8", "tags": ["java", "intellij-idea"], "link": "http://stackoverflow.com/questions/29888592/errorjava-javactask-source-release-8-requires-target-release-1-8/34650407#34650407", "question_id": 29888592, "answer_id": 34650407}, {"body": "<p>In my case I fixed this issue by opening <strong>.iml file</strong> of project (it is located in project root folder and have name same as the name of project) and changing line <code>&lt;orderEntry type=\"jdk\" jdkName=\"1.7\" jdkType=\"JavaSDK\" /&gt;</code> to <code>&lt;orderEntry type=\"jdk\" jdkName=\"1.8\" jdkType=\"JavaSDK\" /&gt;</code> </p>\n\n<p>I had everything configured as in others answers here but by some reason Idea updated .iml file incorrectly.</p>\n", "title": "Error:java: javacTask: source release 8 requires target release 1.8", "tags": ["java", "intellij-idea"], "link": "http://stackoverflow.com/questions/29888592/errorjava-javactask-source-release-8-requires-target-release-1-8/35061064#35061064", "question_id": 29888592, "answer_id": 35061064}, {"body": "<p>I fixed it just by changing target compile version to 1.8. Its in:</p>\n\n<p>File >> Settings >> Build, Execution, Deployment >> Compiler >> Java Compiler</p>\n", "title": "Error:java: javacTask: source release 8 requires target release 1.8", "tags": ["java", "intellij-idea"], "link": "http://stackoverflow.com/questions/29888592/errorjava-javactask-source-release-8-requires-target-release-1-8/36558227#36558227", "question_id": 29888592, "answer_id": 36558227}], "creation_date": 1430115868, "score": 231, "link": "http://stackoverflow.com/questions/29888592/errorjava-javactask-source-release-8-requires-target-release-1-8", "question_id": 29888592}, {"body": "<p><strong>Question 1:</strong></p>\n\n<p>Why does the following code compile without having a return statement?</p>\n\n<pre><code>public int a() \n{\n    while(true);\n}\n</code></pre>\n\n<p>Notice: If I add return after the while then I get an <code>Unreachable Code Error</code>.</p>\n\n<p><strong>Question 2:</strong> </p>\n\n<p>On the other hand, why does the following code compile,</p>\n\n<pre><code>public int a() \n{\n    while(0 == 0);\n}\n</code></pre>\n\n<p>even though the following does not.</p>\n\n<pre><code>public int a(int b)\n{\n    while(b == b);\n}\n</code></pre>\n", "tags": ["java", "syntax", "while-loop", "compilation", "return"], "title": "Java method with return type compiles without return statement", "answers": [{"body": "<blockquote>\n  <p><strong>Question 1:</strong></p>\n  \n  <p>Why does the following code compile without having a return statement?</p>\n\n<pre><code>public int a() \n{\n    while(true);\n}\n</code></pre>\n</blockquote>\n\n<p>This is covered by <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.4.7\">JLS\u00a78.4.7</a>:</p>\n\n<blockquote>\n  <p>If a method is declared to have a return type (\u00a78.4.5), then a compile-time error occurs if the body of the method can complete normally (\u00a714.1).</p>\n  \n  <p>In other words, a method with a return type must return only by using a return statement that provides a value return; the method is not allowed to \"drop off the end of its body\". See \u00a714.17 for the precise rules about return statements in a method body.</p>\n  \n  <p>It is possible for a method to have a return type and yet contain no return statements. Here is one example:</p>\n\n<pre><code>class DizzyDean {\n    int pitch() { throw new RuntimeException(\"90 mph?!\"); }\n}\n</code></pre>\n</blockquote>\n\n<p>Since the compiler knows that the loop will never terminate (<code>true</code> is always true, of course), it knows the function cannot \"return normally\" (drop off the end of its body), and thus it's okay that there's no <code>return</code>.</p>\n\n<blockquote>\n  <p><strong>Question 2:</strong></p>\n  \n  <p>On the other hand, why does the following code compile,</p>\n\n<pre><code>public int a() \n{\n    while(0 == 0);\n}\n</code></pre>\n  \n  <p>even though the following does not.</p>\n\n<pre><code>public int a(int b)\n{\n    while(b == b);\n}\n</code></pre>\n</blockquote>\n\n<p>In the <code>0 == 0</code> case, the compiler knows that the loop will never terminate (that <code>0 == 0</code> will always be true). But it <strong>doesn't</strong> know that for <code>b == b</code>.</p>\n\n<p>Why not?</p>\n\n<p>The compiler understands <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.28\">constant expressions (\u00a715.28)</a>. Quoting <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.2\">\u00a715.2 - Forms of Expressions</a> <em>(because oddly this sentence isn't in \u00a715.28)</em>:</p>\n\n<blockquote>\n  <p>Some expressions have a value that can be determined at compile time. These are <em>constant expressions</em> (\u00a715.28).</p>\n</blockquote>\n\n<p>In your <code>b == b</code> example, because there is a variable involved, it isn't a constant expression and isn't specified to be determined at compilation time. <strong>We</strong> can see that it's always going to be true in this case (although if <code>b</code> were a <code>double</code>, as QBrute <a href=\"http://stackoverflow.com/questions/31050114/java-method-with-return-type-compiles-without-actually-returning-anything/31050290#comment50126058_31050290\">pointed out</a>, we could easily be fooled by <code>Double.NaN</code>, which is <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.2.3\">not <code>==</code> itself</a>), but the JLS only specifies that constant expressions are determined at compile time, it doesn't allow the compiler to try to evaluate non-constant expressions. bayou.io <a href=\"http://stackoverflow.com/questions/31050114/java-method-with-return-type-compiles-without-actually-returning-anything#comment50122240_31050290\">raised a good point</a> for why not: If you start going down the road of trying to determine expressions involving variables at compilation time, where do you stop? <code>b == b</code> is obvious (er, for non-<code>NaN</code> values), but what about <code>a + b == b + a</code>? Or <code>(a + b) * 2 == a * 2 + b * 2</code>? Drawing the line at constants makes sense.</p>\n\n<p>So since it doesn't \"determine\" the expression, the compiler doesn't know that the loop will never terminate, so it thinks the method can return normally&nbsp;&mdash; which it's not allowed to do, because it's required to use <code>return</code>. So it complains about the lack of a <code>return</code>.</p>\n", "title": "Java method with return type compiles without return statement", "tags": ["java", "syntax", "while-loop", "compilation", "return"], "link": "http://stackoverflow.com/questions/31050114/java-method-with-return-type-compiles-without-return-statement/31050290#31050290", "question_id": 31050114, "answer_id": 31050290}, {"body": "<p>It can be interesting to think of the method return type not as a promise to return a value of the specified type, but as a promise not to return a value that is <em>not</em> of the specified type. Thus, if you never return anything, you are not breaking the promise, and so any of the following are legal:</p>\n\n<ol>\n<li><p>Looping forever:</p>\n\n<pre><code>X foo() {\n    for (;;);\n}\n</code></pre></li>\n<li><p>Recursing forever:</p>\n\n<pre><code>X foo() {\n    return foo();\n}\n</code></pre></li>\n<li><p>Throwing an exception:</p>\n\n<pre><code>X foo() {\n    throw new Error();\n}\n</code></pre></li>\n</ol>\n\n<p>(Since these methods never actually return a value, the type of <code>X</code> is unimportant.)</p>\n", "title": "Java method with return type compiles without return statement", "tags": ["java", "syntax", "while-loop", "compilation", "return"], "link": "http://stackoverflow.com/questions/31050114/java-method-with-return-type-compiles-without-return-statement/31057507#31057507", "question_id": 31050114, "answer_id": 31057507}, {"body": "<p>Looking at the byte code, if what is being returned does not match the definition, you will receive a compile error.  </p>\n\n<p><strong>Example:</strong></p>\n\n<p><code>for(;;)</code> will show the bytecodes:</p>\n\n<pre><code>L0\n    LINENUMBER 6 L0\n    FRAME SAME\n    GOTO L0\n</code></pre>\n\n<p><strong>Note the lack of any return bytecode</strong></p>\n\n<p>This does not ever hit a return, and thus does not return the wrong type.</p>\n\n<p>For comparison, a method like:</p>\n\n<pre><code>public String getBar() { \n    return bar; \n}\n</code></pre>\n\n<p>Will return the following bytecodes:</p>\n\n<pre><code>public java.lang.String getBar();\n    Code:\n      0:   aload_0\n      1:   getfield        #2; //Field bar:Ljava/lang/String;\n      4:   areturn\n</code></pre>\n\n<p>Note the \"areturn\" which means \"return a reference\"</p>\n\n<p>Now if we do the following:</p>\n\n<pre><code>public String getBar() { \n    return 1; \n}\n</code></pre>\n\n<p>Will return the following bytecodes:</p>\n\n<pre><code>public String getBar();\n  Code:\n   0:   iconst_1\n   1:   ireturn\n</code></pre>\n\n<p>Now we can see that the type in the definition does not match the return type of ireturn, which means return int.</p>\n\n<p>So really what it comes down to is that if the method has a return path, that path must match the return type.  But there are instances in the bytecode where no return path is generated at all, and thus no breaking of the rule.</p>\n", "title": "Java method with return type compiles without return statement", "tags": ["java", "syntax", "while-loop", "compilation", "return"], "link": "http://stackoverflow.com/questions/31050114/java-method-with-return-type-compiles-without-return-statement/31080894#31080894", "question_id": 31050114, "answer_id": 31080894}], "creation_date": 1435234497, "score": 215, "link": "http://stackoverflow.com/questions/31050114/java-method-with-return-type-compiles-without-return-statement", "question_id": 31050114}, {"body": "<p>When browsing the source code of Guava, I came across the following piece of code (part of the implementation of <code>hashCode</code> for the inner class <code>CartesianSet</code>):</p>\n\n<pre><code>int adjust = size() - 1;\nfor (int i = 0; i &lt; axes.size(); i++) {\n    adjust *= 31;\n    adjust = ~~adjust;\n    // in GWT, we have to deal with integer overflow carefully\n}\nint hash = 1;\nfor (Set&lt;E&gt; axis : axes) {\n    hash = 31 * hash + (size() / axis.size() * axis.hashCode());\n\n    hash = ~~hash;\n}\nhash += adjust;\nreturn ~~hash;\n</code></pre>\n\n<p>Both of <code>adjust</code> and <code>hash</code> are <code>int</code>s. From what I know about Java, <code>~</code> means bitwise negation, so <code>adjust = ~~adjust</code> and <code>hash = ~~hash</code> should leave the variables unchanged. Running the small test (with assertions enabled, of course),</p>\n\n<pre><code>for (int i = Integer.MIN_VALUE; i &lt; Integer.MAX_VALUE; i++) {\n    assert i == ~~i;\n}\n</code></pre>\n\n<p>confirms this. Assuming that the Guava guys know what they are doing, there must be a reason for them to do this. The question is what?</p>\n\n<p><strong>EDIT</strong> As pointed out in the comments, the test above doesn't include the case where <code>i</code> equals <code>Integer.MAX_VALUE</code>. Since <code>i &lt;= Integer.MAX_VALUE</code> is always true, we will need to check that case outside the loop to prevent it from looping forever. However, the line</p>\n\n<pre><code>assert Integer.MAX_VALUE == ~~Integer.MAX_VALUE;\n</code></pre>\n\n<p>yields the compiler warning \"Comparing identical expressions\", which pretty much nails it.</p>\n", "tags": ["java", "gwt", "bit-manipulation", "bitwise-operators"], "title": "What is the meaning of double tilde (~~) in Java?", "answers": [{"body": "<p>In Java, it means nothing.</p>\n\n<p>But that comment says that the line is specifically for GWT, which is a way to compile Java to JavaScript.</p>\n\n<p>In JavaScript, integers are kind of like doubles-that-act-as-integers. They have a max value of 2^53, for instance. But <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\">bitwise operators</a> treat numbers as if they're 32-bit, which is exactly what you want in this code. In other words, <code>~~hash</code> says \"treat <code>hash</code> as a 32-bit number\" in JavaScript. Specifically, it discards all but the bottom 32 bits (since the bitwise <code>~</code> operators only looks at the bottom 32 bits), which is identical to how Java's overflow works.</p>\n\n<p>If you didn't have that, the hash code of the object would be different depending on whether it's evaluated in Java-land or in JavaScript land (via a GWT compilation).</p>\n", "title": "What is the meaning of double tilde (~~) in Java?", "tags": ["java", "gwt", "bit-manipulation", "bitwise-operators"], "link": "http://stackoverflow.com/questions/29736952/what-is-the-meaning-of-double-tilde-in-java/29736998#29736998", "question_id": 29736952, "answer_id": 29736998}], "creation_date": 1429484903, "score": 183, "link": "http://stackoverflow.com/questions/29736952/what-is-the-meaning-of-double-tilde-in-java", "question_id": 29736952}, {"body": "<p>Keep getting an error in the set-up wizard while trying to install android studio on Ubuntu.</p>\n\n<pre><code>\"Unable to run mksdcard SDK tool.\"\n</code></pre>\n\n<p>Also, in the terminal I get this:</p>\n\n<pre><code>[ 115528]  ERROR - tRunWizard$SetupProgressStep$1 - Android Studio 1.1.0  Build #AI-135.1740770 \n[ 115531]  ERROR - tRunWizard$SetupProgressStep$1 - JDK: 1.8.0_40 \n[ 115531]  ERROR - tRunWizard$SetupProgressStep$1 - VM: Java HotSpot(TM) 64-Bit Server VM \n[ 115531]  ERROR - tRunWizard$SetupProgressStep$1 - Vendor: Oracle Corporation \n[ 115531]  ERROR - tRunWizard$SetupProgressStep$1 - OS: Linux \n[ 115532]  ERROR - tRunWizard$SetupProgressStep$1 - Last Action:  \n</code></pre>\n", "tags": ["java", "android", "android-studio"], "title": "Error: Unable to run mksdcard SDK tool", "answers": [{"body": "<p>This really needs to be added to the documentation, which is why I filed <a href=\"https://code.google.com/p/android/issues/detail?id=82711\">an issue about it</a> a few months ago...</p>\n\n<p>You need some 32-bit binaries, and you have a 64-bit OS version (apparently). Try:</p>\n\n<pre><code>sudo apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0 lib32stdc++6\n</code></pre>\n\n<p>That worked for me on Ubuntu 14.10.</p>\n", "title": "Error: Unable to run mksdcard SDK tool", "tags": ["java", "android", "android-studio"], "link": "http://stackoverflow.com/questions/29241640/error-unable-to-run-mksdcard-sdk-tool/29242123#29242123", "question_id": 29241640, "answer_id": 29242123}, {"body": "<p>This workaround also works with 15.04 (64bit). Since there isn't (yet?)\nlib32bz2-1.0 for vivid:</p>\n\n<p><a href=\"http://packages.ubuntu.com/search?keywords=lib32bz2-1.0\" rel=\"nofollow\">http://packages.ubuntu.com/search?keywords=lib32bz2-1.0</a></p>\n\n<p>I installed the one from Utopic.</p>\n", "title": "Error: Unable to run mksdcard SDK tool", "tags": ["java", "android", "android-studio"], "link": "http://stackoverflow.com/questions/29241640/error-unable-to-run-mksdcard-sdk-tool/29513010#29513010", "question_id": 29241640, "answer_id": 29513010}, {"body": "<p>For <strong>UBUNTU 15.04,15.10 &amp; 16.04 LTS</strong> Try this command: </p>\n\n<pre><code>sudo apt-get install lib32stdc++6\n</code></pre>\n", "title": "Error: Unable to run mksdcard SDK tool", "tags": ["java", "android", "android-studio"], "link": "http://stackoverflow.com/questions/29241640/error-unable-to-run-mksdcard-sdk-tool/31088492#31088492", "question_id": 29241640, "answer_id": 31088492}, {"body": "<p>For Ubuntu, you can try:</p>\n\n<pre><code>sudo apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0 lib32stdc++6\n</code></pre>\n\n<p>For Cent OS/RHEL try :</p>\n\n<pre><code>sudo yum install zlib.i686 ncurses-libs.i686 bzip2-libs.i686 \n</code></pre>\n\n<p>Then, re-install the Android Studio and get success.</p>\n", "title": "Error: Unable to run mksdcard SDK tool", "tags": ["java", "android", "android-studio"], "link": "http://stackoverflow.com/questions/29241640/error-unable-to-run-mksdcard-sdk-tool/31271734#31271734", "question_id": 29241640, "answer_id": 31271734}, {"body": "<p>This worked for me on Ubuntu 15.04</p>\n\n<p><code>sudo aptitude install lib32stdc++6</code></p>\n\n<p>Firstly, I installed aptitude, which helps in installing other dependencies too.</p>\n", "title": "Error: Unable to run mksdcard SDK tool", "tags": ["java", "android", "android-studio"], "link": "http://stackoverflow.com/questions/29241640/error-unable-to-run-mksdcard-sdk-tool/33279983#33279983", "question_id": 29241640, "answer_id": 33279983}, {"body": "<p>In case of <strong>lubuntu</strong> 14.04 use</p>\n\n<blockquote>\n  <p>sudo apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0 lib32stdc++6</p>\n</blockquote>\n\n<p>P.S-no need to restart the system.</p>\n", "title": "Error: Unable to run mksdcard SDK tool", "tags": ["java", "android", "android-studio"], "link": "http://stackoverflow.com/questions/29241640/error-unable-to-run-mksdcard-sdk-tool/34476547#34476547", "question_id": 29241640, "answer_id": 34476547}, {"body": "<p>if you do this: \n<code>sudo apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0 lib32stdc++6</code>. \nYou may get this error:</p>\n\n<pre><code>E: Unable to locate package lib32bz2-1.0\n\nE: Couldn't find any package by glob 'lib32bz2-1.0'\n\nE: Couldn't find any package by regex 'lib32bz2-1.0'\n</code></pre>\n\n<p>So i suggest just doing this:</p>\n\n<p><code>sudo apt-get install lib32stdc++6</code></p>\n\n<p>And also, the AOSP should look for how while installing Android-Studio, that is installed too.</p>\n", "title": "Error: Unable to run mksdcard SDK tool", "tags": ["java", "android", "android-studio"], "link": "http://stackoverflow.com/questions/29241640/error-unable-to-run-mksdcard-sdk-tool/37074357#37074357", "question_id": 29241640, "answer_id": 37074357}, {"body": "<p>Here's what you need to do to fix the issue on Arch Linux :</p>\n\n<ol>\n<li><p>Enable the <code>multilib</code> repository on your system if you have not already done so by uncommenting the <code>[multilib]</code> section in <code>/etc/pacman.conf</code> :</p>\n\n<pre><code>[multilib]\nInclude = /etc/pacman.d/mirrorlist\n</code></pre></li>\n<li><p>Update pacman :</p>\n\n<pre><code># pacman -Suy\n</code></pre></li>\n<li><p>Install the 32 bit version of libstdc++5 :</p>\n\n<pre><code># pacman -S lib32-libstdc++5\n</code></pre></li>\n</ol>\n", "title": "Error: Unable to run mksdcard SDK tool", "tags": ["java", "android", "android-studio"], "link": "http://stackoverflow.com/questions/29241640/error-unable-to-run-mksdcard-sdk-tool/37197045#37197045", "question_id": 29241640, "answer_id": 37197045}, {"body": "<p>This is what worked for me </p>\n\n<p>When I tried the Accepted ans my Android Studio hangs on start-up</p>\n\n<p>This is the link </p>\n\n<blockquote>\n  <p><a href=\"http://tools.android.com/tech-docs/linux-32-bit-libraries\" rel=\"nofollow\">http://tools.android.com/tech-docs/linux-32-bit-libraries</a></p>\n</blockquote>\n\n<p>and This is the Command </p>\n\n<pre><code>$ sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1\n</code></pre>\n", "title": "Error: Unable to run mksdcard SDK tool", "tags": ["java", "android", "android-studio"], "link": "http://stackoverflow.com/questions/29241640/error-unable-to-run-mksdcard-sdk-tool/39218943#39218943", "question_id": 29241640, "answer_id": 39218943}, {"body": "<p>Just to say 16.04, I'm running </p>\n\n<pre><code>sudo apt-get install lib32z1 lib32ncurses5 libbz2-1.0:i386 lib32stdc++6\n</code></pre>\n\n<p>seems to work on a vanilla install after installing oracle-jdk-8</p>\n", "title": "Error: Unable to run mksdcard SDK tool", "tags": ["java", "android", "android-studio"], "link": "http://stackoverflow.com/questions/29241640/error-unable-to-run-mksdcard-sdk-tool/39275780#39275780", "question_id": 29241640, "answer_id": 39275780}], "creation_date": 1427226791, "score": 174, "link": "http://stackoverflow.com/questions/29241640/error-unable-to-run-mksdcard-sdk-tool", "question_id": 29241640}, {"body": "<p>I'm using Ubuntu Gnome 14.04, and I have Java 8 installed (both the JDK and the JRE).</p>\n\n<p>When I was installing Android Studio everything worked, but a message appeared saying:</p>\n\n<blockquote>\n  <p>Unable to run mksdcard SDK tool</p>\n</blockquote>\n\n<p>How can I install Android Studio correctly, or how do I fix this ?</p>\n", "tags": ["java", "android", "ubuntu", "android-studio", "64bit"], "title": "Unable to install Android Studio in Ubuntu", "answers": [{"body": "<p>Presuming that you are running the 64bit Ubuntu, the fix suggested for \"Issue <a href=\"https://code.google.com/p/android/issues/detail?id=82711\">82711</a>\" should solve your problem.</p>\n\n<p><code>sudo apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0 lib32stdc++6</code></p>\n", "title": "Unable to install Android Studio in Ubuntu", "tags": ["java", "android", "ubuntu", "android-studio", "64bit"], "link": "http://stackoverflow.com/questions/28847151/unable-to-install-android-studio-in-ubuntu/28847280#28847280", "question_id": 28847151, "answer_id": 28847280}, {"body": "<p>@warsong is right. Installing only <code>lib32stdc++6</code> solved the problem.</p>\n\n<p>For next uses I rewrite @warsongs comment in answer area.</p>\n\n<pre><code>sudo apt-get install lib32stdc++6\n</code></pre>\n", "title": "Unable to install Android Studio in Ubuntu", "tags": ["java", "android", "ubuntu", "android-studio", "64bit"], "link": "http://stackoverflow.com/questions/28847151/unable-to-install-android-studio-in-ubuntu/30067060#30067060", "question_id": 28847151, "answer_id": 30067060}, {"body": "<p><a href=\"http://developer.android.com/sdk/installing/index.html?pkg=tools\" rel=\"nofollow\">Checkout this page</a></p>\n\n<blockquote>\n  <p>If you are running a 64-bit distribution on your development machine, you need to install additional packages first. For Ubuntu 13.10 (Saucy Salamander) and above, install the <code>libncurses5:i386</code>, <code>libstdc++6:i386</code>, and <code>zlib1g:i386</code> packages using <code>apt-get</code>:</p>\n</blockquote>\n\n<pre><code>sudo dpkg --add-architecture i386\nsudo apt-get update\nsudo apt-get install libncurses5:i386 libstdc++6:i386 zlib1g:i386\n</code></pre>\n", "title": "Unable to install Android Studio in Ubuntu", "tags": ["java", "android", "ubuntu", "android-studio", "64bit"], "link": "http://stackoverflow.com/questions/28847151/unable-to-install-android-studio-in-ubuntu/33326703#33326703", "question_id": 28847151, "answer_id": 33326703}, {"body": "<p>I understand the question is regarding UBUNTU, but I had similar problem in Debian Jessie 64bit and warsongs suggestion worked for it also.<br>\nWhen I ran studio.sh android studio would start, but when I tried to configure the android SDK I got the error<br>\n<code>Unable to run mksdcard SDK tool</code><br>\nWHen I tried<br>\n<code>sudo apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0 lib32stdc++6</code><br>\nGot error<br>\n<code>E: Package 'lib32bz2-1.0' has no installation candidate</code><br>\nSo took warsongs suggestion and only tried to install lib32stdc++6.<br>\n<code>sudo apt-get install  lib32stdc++6</code><br>\nAfter this was able to add the Android SDK into Android Studio. </p>\n", "title": "Unable to install Android Studio in Ubuntu", "tags": ["java", "android", "ubuntu", "android-studio", "64bit"], "link": "http://stackoverflow.com/questions/28847151/unable-to-install-android-studio-in-ubuntu/33656958#33656958", "question_id": 28847151, "answer_id": 33656958}, {"body": "<p>For Linux Mint run</p>\n\n<pre><code>sudo apt-get install lib32z1 lib32ncurses5 libbz2-1.0 lib32stdc++6\n</code></pre>\n", "title": "Unable to install Android Studio in Ubuntu", "tags": ["java", "android", "ubuntu", "android-studio", "64bit"], "link": "http://stackoverflow.com/questions/28847151/unable-to-install-android-studio-in-ubuntu/34401540#34401540", "question_id": 28847151, "answer_id": 34401540}, {"body": "<p>For Fedora (tested for Fedora 23) run</p>\n\n<pre><code>dnf install compat-libstdc++-296 compat-libstdc++-33 glibc libgcc nss-softokn-freebl libstdc++ ncurses-libs zlib-devel.i686 ncurses-devel.i686 ant\n</code></pre>\n", "title": "Unable to install Android Studio in Ubuntu", "tags": ["java", "android", "ubuntu", "android-studio", "64bit"], "link": "http://stackoverflow.com/questions/28847151/unable-to-install-android-studio-in-ubuntu/34568682#34568682", "question_id": 28847151, "answer_id": 34568682}, {"body": "<p>The Problem is caused by mksdcard not being installed correctly.</p>\n\n<p>if you are running 64 bit, do this to fix the mksdcard problem.</p>\n\n<pre><code>    sudo dpkg --add-architecture amd64\n    sudo apt-get update\n    sudo apt-get install libncurses5:amd64 libstdc++6:amd64 zlib1g:amd64\n</code></pre>\n\n<p>and 32 bit:</p>\n\n<pre><code>    sudo dpkg --add-architecture i386\n    sudo apt-get update\n    sudo apt-get install libncurses5:i386 libstdc++6:i386 zlib1g:i386\n</code></pre>\n\n<p>In SDK 6.0, the error message is different but means the same thing.</p>\n\n<pre><code>    Unable to run mksdcard\n</code></pre>\n", "title": "Unable to install Android Studio in Ubuntu", "tags": ["java", "android", "ubuntu", "android-studio", "64bit"], "link": "http://stackoverflow.com/questions/28847151/unable-to-install-android-studio-in-ubuntu/35215312#35215312", "question_id": 28847151, "answer_id": 35215312}, {"body": "<p>None of these options worked for me on Ubuntu 12.10 (yeah, I need to upgrade).  However, I found an easy solution.  Download the source from here: <a href=\"https://github.com/miracle2k/android-platform_sdk/blob/master/emulator/mksdcard/mksdcard.c\" rel=\"nofollow\">https://github.com/miracle2k/android-platform_sdk/blob/master/emulator/mksdcard/mksdcard.c</a>.  Then simply compile with \"gcc mksdcard.c -o mksdcard\". Backup mksdcard in the SDK tools subfolder and replace with the newly compiled one.  Android Studio will now be happy with your SDK.</p>\n", "title": "Unable to install Android Studio in Ubuntu", "tags": ["java", "android", "ubuntu", "android-studio", "64bit"], "link": "http://stackoverflow.com/questions/28847151/unable-to-install-android-studio-in-ubuntu/35355819#35355819", "question_id": 28847151, "answer_id": 35355819}, {"body": "<p>If you run <code>sudo apt-get install lib32z1 lib32ncurses5 libbz2-1.0 lib32stdc++6</code>\nand got a message like: \"<code>The following packages have unmet dependencies: lib32stdc++6 : Depends: lib32gcc1 (&gt;= 1:4.1.1)</code>\".</p>\n\n<p>You can do something like this tut: <a href=\"http://askubuntu.com/questions/671791/lib32stdc6-package-depends-on-gcc-base-but-my-installed-version-is-newer\">http://askubuntu.com/questions/671791/lib32stdc6-package-depends-on-gcc-base-but-my-installed-version-is-newer</a></p>\n", "title": "Unable to install Android Studio in Ubuntu", "tags": ["java", "android", "ubuntu", "android-studio", "64bit"], "link": "http://stackoverflow.com/questions/28847151/unable-to-install-android-studio-in-ubuntu/36879410#36879410", "question_id": 28847151, "answer_id": 36879410}, {"body": "<p>This issue arises when your 64 bit os tries to install the Android SDK which in turns tries to install some 32 bit binaries and thus is the issue of compatibility. </p>\n\n<p>Open an additional terminal and type</p>\n\n<pre><code>sudo apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0 lib32stdc++6 \n</code></pre>\n\n<p>would help to install all the required binaries. After this, start the afresh the Android SDK installation process.</p>\n", "title": "Unable to install Android Studio in Ubuntu", "tags": ["java", "android", "ubuntu", "android-studio", "64bit"], "link": "http://stackoverflow.com/questions/28847151/unable-to-install-android-studio-in-ubuntu/37498509#37498509", "question_id": 28847151, "answer_id": 37498509}], "creation_date": 1425446368, "score": 155, "link": "http://stackoverflow.com/questions/28847151/unable-to-install-android-studio-in-ubuntu", "question_id": 28847151}, {"body": "<p>Been trying for hours to change Material's Floating Action Button color, but without success.</p>\n\n<pre><code>&lt;android.support.design.widget.FloatingActionButton\n    android:id=\"@+id/profile_edit_fab\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"end|bottom\"\n    android:layout_margin=\"16dp\"\n    android:clickable=\"true\"\n    android:src=\"@drawable/ic_mode_edit_white_24dp\" /&gt;\n</code></pre>\n\n<p>I have tried to add</p>\n\n<pre><code>android:background=\"@color/mycolor\"\n</code></pre>\n\n<p>or via code</p>\n\n<pre><code>FloatingActionButton fab = (FloatingActionButton) rootView.findViewById(R.id.profile_edit_fab);\nfab.setBackgroundColor(Color.parseColor(\"#mycolor\"));\n</code></pre>\n\n<p>or</p>\n\n<pre><code>fab.setBackgroundDrawable(new ColorDrawable(Color.parseColor(\"#mycolor\")));\n</code></pre>\n\n<p>But none of the above worked. I have also tried the solutions in the <em>\"duplicate question\"</em>, but none of them works, button remained green and also became a square.</p>\n\n<p>I'd like a detailed answer, thanks.</p>\n\n<p>P.S. It would be also nice to know how to add ripple effect, couldn't understand that either.</p>\n", "tags": ["java", "android", "android-5.0-lollipop", "floating-action-button"], "title": "Android changing Floating Action Button color", "answers": [{"body": "<p>The FAB is colored based on your <code>colorAccent</code>.</p>\n\n<pre><code>&lt;style name=\"AppTheme\" parent=\"Base.Theme.AppCompat.Light\"&gt;\n    &lt;item name=\"colorAccent\"&gt;@color/accent&lt;/item&gt;\n&lt;/style&gt;\n</code></pre>\n", "title": "Android changing Floating Action Button color", "tags": ["java", "android", "android-5.0-lollipop", "floating-action-button"], "link": "http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color/30969713#30969713", "question_id": 30969455, "answer_id": 30969713}, {"body": "<p>The document suggests that it takes the @color/accent by default. But we can override it on code by using</p>\n\n<pre><code>fab.setBackgroundTintList(ColorStateList)\n</code></pre>\n\n<p>Also remember, </p>\n\n<p>The minimum API version to use this library is 15 so you need to update it! if you dont want to do it then you need to define a custom drawable and decorate it!</p>\n", "title": "Android changing Floating Action Button color", "tags": ["java", "android", "android-5.0-lollipop", "floating-action-button"], "link": "http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color/31033840#31033840", "question_id": 30969455, "answer_id": 31033840}, {"body": "<p>As described in the <a href=\"http://developer.android.com/reference/android/support/design/widget/FloatingActionButton.html?utm_campaign=io15&amp;utm_source=dac&amp;utm_medium=blog\">documentation</a>, by default it takes the color set in <strong>styles.xml</strong> attribute <strong>colorAccent</strong>.</p>\n\n<blockquote>\n  <p>The background color of this view defaults to the your theme's colorAccent. If you wish to change this at runtime then you can do so via setBackgroundTintList(ColorStateList).</p>\n</blockquote>\n\n<p>If you wish to change the color</p>\n\n<ul>\n<li>in XML with attribute <strong>app:backgroundTint</strong></li>\n</ul>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;android.support.design.widget.FloatingActionButton\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:src=\"@drawable/ic_add\"\n    app:backgroundTint=\"@color/orange\"\n    app:borderWidth=\"0dp\"\n    app:elevation=\"6dp\"\n    app:fabSize=\"normal\" &gt;\n</code></pre>\n\n<ul>\n<li>in code with <strong>.setBackgroundTintList</strong> (answer below by <a href=\"http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color/32031019#32031019\">ywwynm</a>)</li>\n</ul>\n\n<p>As @Dantalian mentioned in the comments, if you wish to change the icon color, you can use</p>\n\n<pre><code>android:tint=\"@color/white\"     \n</code></pre>\n", "title": "Android changing Floating Action Button color", "tags": ["java", "android", "android-5.0-lollipop", "floating-action-button"], "link": "http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color/31179286#31179286", "question_id": 30969455, "answer_id": 31179286}, {"body": "<p>You can change this line in file: FloatingActionButton.java</p>\n\n<pre><code>mColor = a.getColor(R.styleable.FloatingActionButton_colortemp, Color.WHITE);\n</code></pre>\n\n<p>to</p>\n\n<pre><code>mColor = a.getColor(R.styleable.FloatingActionButton_colortemp, Color.RED);\n</code></pre>\n", "title": "Android changing Floating Action Button color", "tags": ["java", "android", "android-5.0-lollipop", "floating-action-button"], "link": "http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color/31236054#31236054", "question_id": 30969455, "answer_id": 31236054}, {"body": "<p>Vijet Badigannavar's answer is correct but using <code>ColorStateList</code> is usually complicated and he didn't tell us how to do it. Since we often focus on changing <code>View</code>'s color in normal and pressed state, I'm going to add more details:</p>\n\n<ol>\n<li><p>If you want to change <code>FAB</code>'s color in normal state, you can just write</p>\n\n<pre><code>mFab.setBackgroundTintList(ColorStateList.valueOf(your color in int));\n</code></pre></li>\n<li><p>If you want to change <code>FAB</code>'s color in pressed state, thanks for Design Support Library <strong>22.2.1</strong>, you can just write</p>\n\n<pre><code>mFab.setRippleColor(your color in int);\n</code></pre>\n\n<p>By setting this attribute, when you long-pressed the <code>FAB</code>, a ripple with your color will appear at your touch point and reveal into whole surface of <code>FAB</code>. Please notice that it won't change <code>FAB</code>'s color in normal state. Below API 21(Lollipop), there is no ripple effect but <code>FAB</code>'s color will still change when you're pressing it.</p></li>\n</ol>\n\n<p>Finally, if you want to implement more complex effect for states, then you should dig deeply into <code>ColorStateList</code>, here is a SO question discussing it: <a href=\"http://stackoverflow.com/questions/15543186/colorstatelist-android-programatically\">ColorStateList Android Programatically</a>.</p>\n\n<p><strong>UPDATE:</strong>\nThanks for @Kaitlyn's comment. To remove stroke of FAB using backgroundTint as its color, you can set <code>app:borderWidth=\"0dp\"</code> in your xml.</p>\n", "title": "Android changing Floating Action Button color", "tags": ["java", "android", "android-5.0-lollipop", "floating-action-button"], "link": "http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color/32031019#32031019", "question_id": 30969455, "answer_id": 32031019}, {"body": "<p>if you try to change color of FAB by using app, there some problem.\nframe of button have different color, so what you must to do:</p>\n\n<pre><code>app:backgroundTint=\"@android:color/transparent\"\n</code></pre>\n\n<p>and in code set the color:</p>\n\n<pre><code>actionButton.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.white)));\n</code></pre>\n", "title": "Android changing Floating Action Button color", "tags": ["java", "android", "android-5.0-lollipop", "floating-action-button"], "link": "http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color/32610953#32610953", "question_id": 30969455, "answer_id": 32610953}, {"body": "<p>Thanks to autocomplete. I got lucky after a few hit and trials:</p>\n\n<pre><code>    xmlns:card_view=\"http://schemas.android.com/apk/res-auto\"\n    card_view:backgroundTint=\"@color/whicheverColorYouLike\"\n</code></pre>\n\n<p>-- or -- (both are basically the same thing)</p>\n\n<pre><code>    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    app:backgroundTint=\"@color/whicheverColorYouLike\"\n</code></pre>\n\n<p>This worked for me on API Version 17 with design library 23.1.0.</p>\n", "title": "Android changing Floating Action Button color", "tags": ["java", "android", "android-5.0-lollipop", "floating-action-button"], "link": "http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color/33732067#33732067", "question_id": 30969455, "answer_id": 33732067}, {"body": "<p>Other solutions may work. This is the 10 pound gorilla approach that has the advantage of being broadly applicable in this and similar cases:</p>\n\n<p>Styles.xml:</p>\n\n<pre><code>&lt;style name=\"AppTheme.FloatingAccentButtonOverlay\" &gt;\n    &lt;item name=\"colorAccent\"&gt;@color/colorFloatingActionBarAccent&lt;/item&gt;\n&lt;/style&gt;\n</code></pre>\n\n<p>your layout xml:</p>\n\n<pre><code>&lt;android.support.design.widget.FloatingActionButton\n       android:theme=\"AppTheme.FloatingAccentButtonOverlay\"\n       ...\n &lt;/android.support.design.widget.FloatingActionButton&gt;\n</code></pre>\n", "title": "Android changing Floating Action Button color", "tags": ["java", "android", "android-5.0-lollipop", "floating-action-button"], "link": "http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color/33844940#33844940", "question_id": 30969455, "answer_id": 33844940}, {"body": "<p>As <a href=\"http://stackoverflow.com/users/1683466/vasil-valchev\">Vasil Valchev</a> noted in a comment it is simpler than it looks, but there is a subtle difference that I wasn't noticing in my XML. </p>\n\n<pre><code>&lt;android.support.design.widget.FloatingActionButton\n    android:id=\"@+id/profile_edit_fab\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"end|bottom\"\n    android:layout_margin=\"16dp\"\n    android:clickable=\"true\"\n    android:src=\"@drawable/ic_mode_edit_white_24dp\"\n    app:backgroundTint=\"@android:color/white\"/&gt;\n</code></pre>\n\n<p>Notice it is:</p>\n\n<pre><code>app:backgroundTint=\"@android:color/white\n</code></pre>\n\n<p>and <strong>not</strong> </p>\n\n<pre><code>android:backgroundTint=\"@android:color/white\"\n</code></pre>\n", "title": "Android changing Floating Action Button color", "tags": ["java", "android", "android-5.0-lollipop", "floating-action-button"], "link": "http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color/35361111#35361111", "question_id": 30969455, "answer_id": 35361111}, {"body": "<p>just use,</p>\n\n<pre><code>app:backgroundTint=\"@color/colorPrimary\"\n</code></pre>\n\n<p>dont use,</p>\n\n<pre><code>android:backgroundTint=\"@color/colorPrimary\"\n</code></pre>\n", "title": "Android changing Floating Action Button color", "tags": ["java", "android", "android-5.0-lollipop", "floating-action-button"], "link": "http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color/35863009#35863009", "question_id": 30969455, "answer_id": 35863009}, {"body": "<p>I got the same problem and its all snatching my hair. Thanks for this\n <a href=\"http://stackoverflow.com/a/35697105/5228412\">http://stackoverflow.com/a/35697105/5228412</a></p>\n\n<p>What we can do..</p>\n\n<pre><code> favourite_fab.setImageDrawable(ContextCompat.getDrawable(getBaseContext(), R.drawable.favourite_selected));\n</code></pre>\n\n<p>it works fine for me and wish for others who'll reach here.</p>\n", "title": "Android changing Floating Action Button color", "tags": ["java", "android", "android-5.0-lollipop", "floating-action-button"], "link": "http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color/36161605#36161605", "question_id": 30969455, "answer_id": 36161605}, {"body": "<p>The point we are missing is that before you set the color on the button, it's important to work on the value you want for this color. So you can go to values > color. You will find the default ones, but you can also create colors by copping and pasting them, changing the colors and names. Then... when you go to change the color of the floating button (in activity_main),  you can choose the one you have created </p>\n\n<p>Exemple - code on values > colors with default colors + 3 more colors I've created:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;resources&gt;\n    &lt;color name=\"colorPrimary\"&gt;#3F51B5&lt;/color&gt;\n    &lt;color name=\"colorPrimaryDark\"&gt;#303F9F&lt;/color&gt;\n    &lt;color name=\"colorAccent\"&gt;#FF4081&lt;/color&gt;\n\n    &lt;color name=\"corBotaoFoto\"&gt;#f52411&lt;/color&gt;\n    &lt;color name=\"corPar\"&gt;#8e8f93&lt;/color&gt;\n    &lt;color name=\"corImpar\"&gt;#494848&lt;/color&gt;\n\n&lt;/resources&gt;\n</code></pre>\n\n<p>Now my Floating Action Button with the color I've created and named \"corPar\":</p>\n\n<pre><code>&lt;android.support.design.widget.FloatingActionButton\n        android:id=\"@+id/fab\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"bottom|end\"\n        android:layout_margin=\"@dimen/fab_margin\"\n        android:src=\"@android:drawable/ic_input_add\"\n        android:tint=\"#ffffff\"\n        app:backgroundTint=\"@color/corPar\"/&gt;\n</code></pre>\n\n<p>It worked for me. Good Luck!</p>\n", "title": "Android changing Floating Action Button color", "tags": ["java", "android", "android-5.0-lollipop", "floating-action-button"], "link": "http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color/36653188#36653188", "question_id": 30969455, "answer_id": 36653188}, {"body": "<pre><code> &lt;android.support.design.widget.FloatingActionButton\n    android:id=\"@+id/fab\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"bottom|end\"\n    app:elevation=\"6dp\"\n    app:backgroundTint=\"@color/colorAccent\"\n    app:pressedTranslationZ=\"12dp\"\n    android:layout_margin=\"@dimen/fab_margin\"\n    android:src=\"@drawable/add\"/&gt;\n</code></pre>\n\n<p>Note that you add colors  in res/values/color.xml\nand include the attribute in your fab </p>\n\n<pre><code>   app:backgroundTint=\"@color/addedColor\"\n</code></pre>\n", "title": "Android changing Floating Action Button color", "tags": ["java", "android", "android-5.0-lollipop", "floating-action-button"], "link": "http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color/37937677#37937677", "question_id": 30969455, "answer_id": 37937677}, {"body": "<p>If you are use <strong><em>Xamarin</em></strong> for android app development then use below code for changing floating button color. </p>\n\n<pre><code>FloatingActionButton fa = root.FindViewById&lt;FloatingActionButton&gt;(Resource.Id.fabback);\n            Android.Content.Res.ColorStateList csl = new Android.Content.Res.ColorStateList(new int[][] { new int[0] }, new int[]{Android.Graphics.Color.ParseColor(\"#000000\") });\n            fab.BackgroundTintList= csl;\n</code></pre>\n\n<p>\"#000000\" used for black color you can changed according to your requriments. </p>\n", "title": "Android changing Floating Action Button color", "tags": ["java", "android", "android-5.0-lollipop", "floating-action-button"], "link": "http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color/39240915#39240915", "question_id": 30969455, "answer_id": 39240915}], "creation_date": 1434921622, "score": 138, "link": "http://stackoverflow.com/questions/30969455/android-changing-floating-action-button-color", "question_id": 30969455}, {"body": "<p>I am writing an explanation for some code for a course, and have been accidentally using the words <code>method</code> and <code>function</code> interchangeably. I decided to go back over and fix the wording, but ran into a hole in my understanding.</p>\n\n<p>From what I understand, a subroutine is a <code>function</code> if it doesn't act on a instance of a class (its effect is restricted to its explicit input/output), and is a <code>method</code> if it operates on an instance of a class (it may carry out side effects on the instance that make it impure).</p>\n\n<p>There's a <a href=\"http://stackoverflow.com/questions/155609/difference-between-a-method-and-a-function\">good discussion here</a> on the topic. Note that by the accepted answer's definitions, a static <code>method</code> should actually be a function because an instance is never implicitly passed, and it doesn't have access to any instance's members.</p>\n\n<p>With this is mind though, shouldn't static <code>methods</code> actually be functions?</p>\n\n<p>By their definition they don't act on particular instances of a class; they're only \"tied\" to the class because of relation. I've seen a few good looking sites that refer to static subroutines as \"methods\" though (<a href=\"https://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html\">Oracle</a>, <a href=\"http://www.fredosaurus.com/notes-java/flow/methods/50static-methods.html\">Fredosaurus</a>, <a href=\"http://www.programmingsimplified.com/java/source-code/java-static-method-program\">ProgrammingSimplified</a>), so either they're all overlooking the terminology, or I'm missing something (my guess is the latter).</p>\n\n<p>I'd like to make sure I am using the correct wording.<br>\n<strong><em>Can anybody clear this up?</em></strong></p>\n", "tags": ["java", "methods", "static", "terminology"], "title": "Why is a static method considered a method?", "answers": [{"body": "<p>The simple answer is that when Java decided to call everything a \"method\", they didn't care about the distinction between a function and a method in theoretical computer science.</p>\n", "title": "Why is a static method considered a method?", "tags": ["java", "methods", "static", "terminology"], "link": "http://stackoverflow.com/questions/30402169/why-is-a-static-method-considered-a-method/30402328#30402328", "question_id": 30402169, "answer_id": 30402328}, {"body": "<p>In computer science <strong>function</strong> clearly maps to a static method. But \"method\" of a class is a bit generic, like \"member\" (field member, method member). There are wordings like</p>\n\n<blockquote>\n  <p>Data members and method members have two separate name spaces: .x and .x() can coexist.</p>\n</blockquote>\n\n<p>So the reason is, that as the philosoph Ludwig Wittgenstein said, Language is a tool with different contexts. \"Method\" is a nice moniker in the citation above to categorize a \"member\".</p>\n", "title": "Why is a static method considered a method?", "tags": ["java", "methods", "static", "terminology"], "link": "http://stackoverflow.com/questions/30402169/why-is-a-static-method-considered-a-method/30402345#30402345", "question_id": 30402169, "answer_id": 30402345}, {"body": "<p>This quote from <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.4.3.2\">8.4.3.2</a> may help:</p>\n\n<blockquote>\n  <p>A method that is declared <code>static</code> is called a <em>class method</em>.</p>\n  \n  <p>A method that is not declared <code>static</code> is called an <em>instance method</em> [...].</p>\n</blockquote>\n\n<ul>\n<li>Class methods: associated with a class.</li>\n<li>Instance methods: associated with an instance.</li>\n</ul>\n\n<p>Java just wants you to \"think object-oriented\". Also, static methods have access to a surrounding scope which may include state. In a way, the class is like an object itself.</p>\n", "title": "Why is a static method considered a method?", "tags": ["java", "methods", "static", "terminology"], "link": "http://stackoverflow.com/questions/30402169/why-is-a-static-method-considered-a-method/30402356#30402356", "question_id": 30402169, "answer_id": 30402356}, {"body": "<p>In Java, a user-defined class is actually an instance of a subclass of java.lang.Class.  </p>\n\n<p>In this sense, static methods <em>are</em> attached to an instance of a conceptual class: they are attached to an instance of a subclass of java.lang.Class.</p>\n\n<p>With this in mind, the term \"class method\" (an alternate name for Java's static methods) begins to make sense.  And the term \"class method\" can be found in many places:  Objective C, Smalltalk, and the JLS -- to name just a few.</p>\n", "title": "Why is a static method considered a method?", "tags": ["java", "methods", "static", "terminology"], "link": "http://stackoverflow.com/questions/30402169/why-is-a-static-method-considered-a-method/30402498#30402498", "question_id": 30402169, "answer_id": 30402498}, {"body": "<p>Static methods are not exactly functions, the difference is subtle, but important.</p>\n\n<p>A static method using only given input parameters <em>is</em> essentially a function.</p>\n\n<p>But static methods may access static variables and other static functions (also using static variables) so static methods may have a <em>state</em> which is fundamentally different to a function which are by definition <em>stateless</em>.\n(ADDENDUM: While programmers are often not so strict with using \"function\" as definition, a strict function in computer science can access only input parameters). So defining this case of accessing static fields it is not valid to say that static methods are always functions.</p>\n\n<p>Another difference which justifies the usage of \"static method\" is that you can define in C derivates global functions and global variables which can be accessed everywhere. If you cannot access the class which contain static methods, the methods are inaccessible, too. So \"static methods\" are limited in their scope by design in contrast to global functions.</p>\n", "title": "Why is a static method considered a method?", "tags": ["java", "methods", "static", "terminology"], "link": "http://stackoverflow.com/questions/30402169/why-is-a-static-method-considered-a-method/30405846#30405846", "question_id": 30402169, "answer_id": 30405846}, {"body": "<p>Here is another take on the terminology, using <a href=\"http://en.wikipedia.org/wiki/Scala_%28programming_language%29\">Scala</a> as a mnemonic:<br>\nIn Scala you have <code>object</code>s, which are singleton instances of an implicitly defined class <a href=\"http://stackoverflow.com/a/1755521/3041008\"><a href=\"http://en.wikipedia.org/wiki/Scala_%28programming_language%29\">1</a></a>.</p>\n\n<p>Per your definition, we can call these subroutines belonging to the <code>object</code> <strong>methods</strong>, as they operate on a single instance of the class.<br>\nAdditionally the object <em>will also define class A, and create all of the methods in object A as static methods on class A (for interfacing with Java)</em> <a href=\"http://stackoverflow.com/questions/1755345/difference-between-object-and-class-in-scala#comment1665301_1755521\">[2]</a>.</p>\n\n<p>Therefore we can say that the static methods of Java class A access the same members as the Scala singleton instance, which per your definition then deserve to be called (static) <strong>methods</strong> of class A.</p>\n", "title": "Why is a static method considered a method?", "tags": ["java", "methods", "static", "terminology"], "link": "http://stackoverflow.com/questions/30402169/why-is-a-static-method-considered-a-method/30407597#30407597", "question_id": 30402169, "answer_id": 30407597}, {"body": "<p>Your thinking is right and it makes sense. It's just not established terminology in the Java community. Let me explain some internals that can help understand why the terminology subsists.</p>\n\n<p>Java is a class based object oriented language. A method is always member of a class or instance (This is a general statement valid for other programming languages too). We think of class and instance being both objects.</p>\n\n<h2>Instance method (dynamic)</h2>\n\n<p>You cannot invoke this method from a class directly, you have to create an instance. Each instance references that method. You can overwrite a method definition with the exact same method signature (when subclassing), i.e. the reference points to a different method (which has the same signature, but can have a different method body). The method is dynamic.</p>\n\n<h2>Class method (static)</h2>\n\n<p>You only can invoke this method from the class directly, i.e. you don't need to create an instance of that class. There is only one global definition of that method in the whole program. You cannot overwrite the exact same method signature when the method is declared static, because there is only one definition valid for the whole program. Note that the method is member of the class object itself, the instances have all the same unique (and fix) reference to that method.</p>\n", "title": "Why is a static method considered a method?", "tags": ["java", "methods", "static", "terminology"], "link": "http://stackoverflow.com/questions/30402169/why-is-a-static-method-considered-a-method/30419685#30419685", "question_id": 30402169, "answer_id": 30419685}, {"body": "<p>Of course, the main difference is - method can use static fields, not only method parameters.\nBut there is additional one - polymorphism! \nResults of evaluation Class A.doTheSameStaticMethod() and ClassB.doTheSameStaticMehod() will be depends of class. In this case function is impotent.</p>\n", "title": "Why is a static method considered a method?", "tags": ["java", "methods", "static", "terminology"], "link": "http://stackoverflow.com/questions/30402169/why-is-a-static-method-considered-a-method/30486215#30486215", "question_id": 30402169, "answer_id": 30486215}, {"body": "<p>Each class has an object to represent it that is an instance of a subclass of the <code>Class</code> class. Static methods are really instance methods on these objects that are instances of a subclass of Class. They have access to state in the form of static fields, so they are not restricted to being just (stateless) functions. They are methods.</p>\n", "title": "Why is a static method considered a method?", "tags": ["java", "methods", "static", "terminology"], "link": "http://stackoverflow.com/questions/30402169/why-is-a-static-method-considered-a-method/30511194#30511194", "question_id": 30402169, "answer_id": 30511194}], "creation_date": 1432314023, "score": 125, "link": "http://stackoverflow.com/questions/30402169/why-is-a-static-method-considered-a-method", "question_id": 30402169}, {"body": "<p>Unlike C#'s <code>IEnumerable</code>, where an execution pipeline can be executed as many times as we want, in Java a stream can be 'iterated' only once. </p>\n\n<p>Any call to a terminal operation closes the stream, rendering it unusable.\nThis 'feature' takes away a lot of power. </p>\n\n<p>I imagine the reason for this is <em>not</em> technical. What were the design considerations behind this strange restriction?</p>\n\n<p>Edit: in order to demonstrate what I am talking about, consider the following implementation of Quick-Sort in C#:</p>\n\n<pre><code>IEnumerable&lt;int&gt; QuickSort(IEnumerable&lt;int&gt; ints)\n{\n  if (!ints.Any()) {\n    return Enumerable.Empty&lt;int&gt;();\n  }\n\n  int pivot = ints.First();\n\n  IEnumerable&lt;int&gt; lt = ints.Where(i =&gt; i &lt; pivot);\n  IEnumerable&lt;int&gt; gt = ints.Where(i =&gt; i &gt; pivot);\n\n  return QuickSort(lt).Concat(new int[] { pivot }).Concat(QuickSort(gt));\n}\n</code></pre>\n\n<p>Now to be sure, I am not advocating that this is a good implementation of quick sort! It is however great example of the expressive power of lambda expression combined with stream operation. </p>\n\n<p>And it can't be done in Java!\nI can't even ask a stream whether it is empty without rendering it unusable. </p>\n", "tags": ["java", "java-8", "java-stream", "api-design"], "title": "Why are Java Streams once-off?", "answers": [{"body": "<h1>Background</h1>\n\n<p>While the question appears simple, the actual answer requires some background to make sense. If you want to skip to the conclusion, scroll down...</p>\n\n<h2>Pick your comparison point - Basic functionality</h2>\n\n<p>Using basic concepts, C#'s <code>IEnumerable</code> concept is more closely related to <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Java's <code>Iterable</code></a>, which is able to create as many <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html\">Iterators</a> as you want. <a href=\"https://msdn.microsoft.com/en-us/library/System.Collections.IEnumerable(v=vs.110).aspx\"><code>IEnumerables</code></a> create <a href=\"https://msdn.microsoft.com/en-us/library/system.collections.ienumerator(v=vs.110).aspx\"><code>IEnumerators</code></a>. Java's <code>Iterable</code> create <code>Iterators</code></p>\n\n<p>The history of each concept is similar, in that both <code>IEnumerable</code> and <code>Iterable</code> have a basic motivation to allow 'for-each' style looping over the members of data collections. That's an oversimplification as they both allow more than just that, and they also arrived at that stage via different progressions, but it is a significant common feature regardless.</p>\n\n<p>Let's compare that feature: in both languages, if a class implements the <code>IEnumerable</code>/<code>Iterable</code>, then that class must implement at least a single method (for C#, it's <code>GetEnumerator</code> and for Java it's <code>iterator()</code>). In each case, the instance returned from that (<code>IEnumerator</code>/<code>Iterator</code>) allows you to access the current and subsequent members of the data. This feature is used in the for-each language syntax.</p>\n\n<h2>Pick your comparison point - Enhanced functionality</h2>\n\n<p><code>IEnumerable</code> in C# has been extended to allow a number of other language features (<a href=\"https://msdn.microsoft.com/en-us/library/vstudio/system.linq.enumerable(v=vs.100).aspx\">mostly related to Linq</a>). Features added include selections, projections, aggregations, etc. These extensions have a strong motivation from use in set-theory, similar to SQL and Relational Database concepts.</p>\n\n<p>Java 8 has also had functionality added to enable a degree of functional programming using Streams and Lambdas. Note that Java 8 streams are not primarily motivated by set theory, but by functional programming. Regardless, there are a lot of parallels.</p>\n\n<p>So, this is the second point. The enhancements made to C# were implemented as an enhancement to the <code>IEnumerable</code> concept. In Java, though, the enhancements made were implemented by creating new base concepts of Lambdas and Streams, and then also creating a relatively trivial way to convert from <code>Iterators</code> and <code>Iterables</code> to Streams, and visa-versa.</p>\n\n<p>So, comparing IEnumerable to Java's Stream concept is incomplete. You need to compare it to the combined Streams and Collections API's in Java.</p>\n\n<h2>In Java, Streams are not the same as Iterables, or Iterators</h2>\n\n<p>Streams are not designed to solve problems the same way that iterators are:</p>\n\n<ul>\n<li>Iterators are a way of describing the sequence of data.</li>\n<li>Streams are a way of describing a sequence of data transformations.</li>\n</ul>\n\n<p>With an <code>Iterator</code>, you get a data value, process it, and then get another data value.</p>\n\n<p>With Streams, you chain a sequence of functions together, then you feed an input value to the stream, and get the output value from the combined sequence. Note, in Java terms, each function is encapsulated in a single <code>Stream</code> instance. The Streams API allows you to link a sequence of <code>Stream</code> instances in a way that chains a sequence of transformation expressions.</p>\n\n<p>In order to complete the <code>Stream</code> concept, you need a source of data to feed the stream, and a terminal function that consumes the stream.</p>\n\n<p>The way you feed values in to the stream may in fact be from an <code>Iterable</code>, but the <code>Stream</code> sequence itself is not an <code>Iterable</code>, it is a compound function.</p>\n\n<p>A <code>Stream</code> is also intended to be lazy, in the sense that it only does work when you request a value from it.</p>\n\n<p>Note these significant assumptions and features of Streams:</p>\n\n<ul>\n<li>A <code>Stream</code> in Java is a transformation engine, it transforms a data item in one state, to being in another state.</li>\n<li>streams have no concept of the data order or position, the simply transform whatever they are asked to.</li>\n<li>streams can be supplied with data from many sources, including other streams, Iterators, Iterables, Collections, </li>\n<li>you cannot \"reset\" a stream, that would be like \"reprogramming the transformation\". Resetting the data source is probably what you want.</li>\n<li>there is logically only 1 data item 'in flight' in the stream at any time (unless the stream is a parallel stream, at which point, there is 1 item per thread). This is independent of the data source which may have more than the current items 'ready' to be supplied to the stream, or the stream collector which  may need to aggregate and reduce multiple values.</li>\n<li>Streams can be unbound (infinite), limited only by the data source, or collector (which can be infinite too).</li>\n<li>Streams are 'chainable', the output of filtering one stream, is another stream. Values input to and transformed by a stream can in turn be supplied to another stream which does a different transformation. The data, in its transformed state flows from one stream to the next. You do not need to intervene and pull the data from one stream and plug it in to the next.</li>\n</ul>\n\n<h2>C# Comparison</h2>\n\n<p>When you consider that a Java Stream is just a part of a supply, stream, and collect system, and that Streams and Iterators are often used together with Collections, then it is no wonder that it is hard to relate to the same concepts which are almost all embedded in to a single <code>IEnumerable</code> concept in C#.</p>\n\n<p>Parts of IEnumerable (and close related concepts) are apparent in all of the Java Iterator, Iterable, Lambda, and Stream concepts.</p>\n\n<p>There are small things that the Java concepts can do that are harder in IEnumerable, and visa-versa.</p>\n\n<hr>\n\n<h1>Conclusion</h1>\n\n<ul>\n<li>There's no design problem here, just a problem in matching concepts between the languages.</li>\n<li>Streams solve problems in a different way</li>\n<li>Streams add functionality to Java (they add a different way of doing things, they do not take functionality away)</li>\n</ul>\n\n<p>Adding Streams gives you more choices when solving problems, which is fair to classify as 'enhancing power', not 'reducing', 'taking away', or 'restricting' it.</p>\n\n<h3>Why are Java Streams once-off?</h3>\n\n<p>This question is misguided, because streams are function sequences, not data. Depending on the data source that feeds the stream, you can reset the data source, and feed the same, or different stream.</p>\n\n<h3>Unlike C#'s IEnumerable, where an execution pipeline can be executed as many times as we want, in Java a stream can be 'iterated' only once.</h3>\n\n<p>Comparing an <code>IEnumerable</code> to a <code>Stream</code> is misguided. The context you are using to say <code>IEnumerable</code> can be executed as many times as you want, is best compared to Java <code>Iterables</code>, which can be iterated as many times as you want. A Java <code>Stream</code> represents a subset of the <code>IEnumerable</code> concept, and not the subset that supplies data, and thus cannot be 'rerun'.</p>\n\n<h3>Any call to a terminal operation closes the stream, rendering it unusable. This 'feature' takes away a lot of power.</h3>\n\n<p>The first statement is true, in a sense. The 'takes away power' statement is not. You are still comparing Streams it IEnumerables. The terminal operation in the stream is like a 'break' clause in a for loop. You are always free to have another stream, if you want, and if you can re-supply the data you need. Again, if you consider the <code>IEnumerable</code> to be more like an <code>Iterable</code>, for this statement, Java does it just fine.</p>\n\n<h3>I imagine the reason for this is not technical. What were the design considerations behind this strange restriction?</h3>\n\n<p>The reason is technical, and for the simple reason that a Stream a subset of what think it is. The stream subset does not control the data supply, so you should reset the supply, not the stream. In that context, it is not so strange.</p>\n\n<h3>QuickSort example</h3>\n\n<p>Your quicksort example has the signature:</p>\n\n<pre><code>IEnumerable&lt;int&gt; QuickSort(IEnumerable&lt;int&gt; ints)\n</code></pre>\n\n<p>You are treating the input <code>IEnumerable</code> as a data source:</p>\n\n<pre><code>IEnumerable&lt;int&gt; lt = ints.Where(i =&gt; i &lt; pivot);\n</code></pre>\n\n<p>Additionally, return value is <code>IEnumerable</code> too, which is a supply of data, and since this is a Sort operation, the order of that supply is significant. If you consider the Java <code>Iterable</code> class to be the appropriate match for this, specifically the <code>List</code> specialization of <code>Iterable</code>, since List is a supply of data which has a guaranteed order or iteration, then the equivalent Java code to your code would be:</p>\n\n<pre><code>Stream&lt;Integer&gt; quickSort(List&lt;Integer&gt; ints) {\n    // Using a stream to access the data, instead of the simpler ints.isEmpty()\n    if (!ints.stream().findAny().isPresent()) {\n        return Stream.of();\n    }\n\n    // treating the ints as a data collection, just like the C#\n    final Integer pivot = ints.get(0);\n\n    // Using streams to get the two partitions\n    List&lt;Integer&gt; lt = ints.stream().filter(i -&gt; i &lt; pivot).collect(Collectors.toList());\n    List&lt;Integer&gt; gt = ints.stream().filter(i -&gt; i &gt; pivot).collect(Collectors.toList());\n\n    return Stream.concat(Stream.concat(quickSort(lt), Stream.of(pivot)),quickSort(gt));\n}    \n</code></pre>\n\n<p>Note there is a bug (which I have reproduced), in that the sort does not handle duplicate values gracefully, it is a 'unique value' sort.</p>\n\n<p>Also note how the Java code uses data source (<code>List</code>), and stream concepts at different point, and that in C# those two 'personalities' can be expressed in just <code>IEnumerable</code>. Also, although I have use <code>List</code> as the base type, I could have used the more general <code>Collection</code>, and with a small iterator-to-Stream conversion, I could have used the even more general <code>Iterable</code></p>\n", "title": "Why are Java Streams once-off?", "tags": ["java", "java-8", "java-stream", "api-design"], "link": "http://stackoverflow.com/questions/28459498/why-are-java-streams-once-off/28459604#28459604", "question_id": 28459498, "answer_id": 28459604}, {"body": "<p><code>Stream</code>s are built around <code>Spliterator</code>s which are stateful, mutable objects. They don\u2019t have a \u201creset\u201d action and in fact, requiring to support such rewind action would \u201ctake away much power\u201d. How would <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/Random.html#ints--\"><code>Random.ints()</code></a> be supposed to handle such a request?</p>\n\n<p>On the other hand, for <code>Stream</code>s which have a retraceable origin, it is easy to construct an equivalent <code>Stream</code> to be used again. Just put the steps made to construct the <code>Stream</code> into a reusable method. Keep in mind that repeating these steps is not an expensive operation as all these steps are lazy operations; the actual work starts with the terminal operation and depending on the actual terminal operation entirely different code might get executed.</p>\n\n<p>It would be up to you, the writer of such a method, to specify what calling the method twice implies: does it reproduce exactly the same sequence, as streams created for an unmodified array or collection do, or does it produce a stream with a similar semantics but different elements like a stream of random ints or a stream of console input lines, etc.</p>\n\n<hr>\n\n<p>By the way, to avoid confusion, a terminal operation <em>consumes</em> the <code>Stream</code> which is distinct from <em>closing</em> the <code>Stream</code> as calling <code>close()</code> on the stream does (which is required for streams having associated resources like, e.g. produced by <code>Files.lines()</code>).</p>\n\n<hr>\n\n<p>It seems that a lot of confusion stems from misguiding comparison of <code>IEnumerable</code> with <code>Stream</code>. An <code>IEnumerable</code> represents the ability to provide an actual <code>IEnumerator</code>, so its like an <code>Iterable</code> in Java. In contrast, a <code>Stream</code> is a kind of iterator and comparable to an <code>IEnumerator</code> so it\u2019s wrong to claim that this kind of data type can be used multiple times in .NET, the support for <code>IEnumerator.Reset</code> is optional. The examples discussed here rather use the fact that an <code>IEnumerable</code> can be used to fetch <em>new</em> <code>IEnumerator</code>s and that works with Java\u2019s <code>Collection</code>s  as well; you can get a new <code>Stream</code>. If the Java developers decided to add the <code>Stream</code> operations to <code>Iterable</code> directly, with intermediate operations returning another <code>Iterable</code>, it was really comparable and it could work the same way.</p>\n\n<p>However, the developers decided against it and the decision is discussed in <a href=\"http://stackoverflow.com/q/24472312/2711488\">this question</a>. The biggest point is the confusion about eager Collection operations and lazy Stream operations. By looking at the .NET API, I (yes, personally) find it justified. While it looks reasonable looking at <code>IEnumerable</code> alone, a particular Collection will have lots of methods manipulating the Collection directly and lots of methods returning a lazy <code>IEnumerable</code>, while the particular nature of a method isn\u2019t always intuitively recognizable. The worst example I found (within the few minutes I looked at it) is <a href=\"https://msdn.microsoft.com/de-de/library/b0axc2h2(v=vs.110).aspx\"><code>List.Reverse()</code></a> whose name matches <em>exactly</em> the name of the inherited (is this the right terminus for extension methods?) <a href=\"https://msdn.microsoft.com/de-de/library/bb358497(v=vs.110).aspx\"><code>Enumerable.Reverse()</code></a> while having an entirely contradicting behavior.</p>\n\n<hr>\n\n<p>Of course, these are two distinct decisions. The first one to make <code>Stream</code> a type distinct from <code>Iterable</code>/<code>Collection</code> and the second to make <code>Stream</code> a kind of one time iterator rather than another kind of iterable. But these decision were made together and it might be the case that separating these two decision never was considered. It wasn\u2019t created with being comparable to .NET\u2019s in mind.</p>\n\n<p>The actual API design decision was to add an improved type of iterator, the <code>Spliterator</code>. <code>Spliterator</code>s can be provided by the old <code>Iterable</code>s (which is the way how these were retrofitted) or entirely new implementations. Then, <code>Stream</code> was added as a high-level front-end to the rather low level <code>Spliterator</code>s. That\u2019s it. You may discuss about whether a different design would be better, but that\u2019s not productive, it won\u2019t change, given the way they are designed now.</p>\n\n<p>There is another implementation aspect you have to consider. <code>Stream</code>s are <em>not</em> immutable data structures. Each intermediate operation may return a new <code>Stream</code> instance encapsulating the old one but it may also manipulate its own instance instead and return itself (that doesn\u2019t preclude doing even both for the same operation). Commonly known examples are operations like <code>parallel</code> or <code>unordered</code> which do not add another step but manipulate the entire pipeline). Having such a mutable data structure and attempts to reuse (or even worse, using it multiple times at the same time) doesn\u2019t play well\u2026</p>\n\n<hr>\n\n<p>For completeness, here is your quicksort example translated to the Java <code>Stream</code> API. It shows that it does not really \u201ctake away much power\u201d.</p>\n\n<pre><code>static Stream&lt;Integer&gt; quickSort(Supplier&lt;Stream&lt;Integer&gt;&gt; ints) {\n\n  final Optional&lt;Integer&gt; optPivot = ints.get().findAny();\n  if(!optPivot.isPresent()) return Stream.empty();\n\n  final int pivot = optPivot.get();\n\n  Supplier&lt;Stream&lt;Integer&gt;&gt; lt = ()-&gt;ints.get().filter(i -&gt; i &lt; pivot);\n  Supplier&lt;Stream&lt;Integer&gt;&gt; gt = ()-&gt;ints.get().filter(i -&gt; i &gt; pivot);\n\n  return Stream.of(quickSort(lt), Stream.of(pivot), quickSort(gt)).flatMap(s-&gt;s);\n}\n</code></pre>\n\n<p>It can be used like</p>\n\n<pre><code>List&lt;Integer&gt; l=new Random().ints(100, 0, 1000).boxed().collect(Collectors.toList());\nSystem.out.println(l);\nSystem.out.println(quickSort(l::stream)\n    .map(Object::toString).collect(Collectors.joining(\", \")));\n</code></pre>\n\n<p>You can write it even more compact as</p>\n\n<pre><code>static Stream&lt;Integer&gt; quickSort(Supplier&lt;Stream&lt;Integer&gt;&gt; ints) {\n    return ints.get().findAny().map(pivot -&gt;\n         Stream.of(\n                   quickSort(()-&gt;ints.get().filter(i -&gt; i &lt; pivot)),\n                   Stream.of(pivot),\n                   quickSort(()-&gt;ints.get().filter(i -&gt; i &gt; pivot)))\n        .flatMap(s-&gt;s)).orElse(Stream.empty());\n}\n</code></pre>\n", "title": "Why are Java Streams once-off?", "tags": ["java", "java-8", "java-stream", "api-design"], "link": "http://stackoverflow.com/questions/28459498/why-are-java-streams-once-off/28460301#28460301", "question_id": 28459498, "answer_id": 28460301}, {"body": "<p>I think there are very few differences between the two when you look closely enough.</p>\n\n<p>At it's face, an <code>IEnumerable</code> does appear to be a reusable construct:</p>\n\n<pre><code>IEnumerable&lt;int&gt; numbers = new int[] { 1, 2, 3, 4, 5 };\n\nforeach (var n in numbers) {\n    Console.WriteLine(n);\n}\n</code></pre>\n\n<p>However, the compiler is actually doing a little bit of work to help us out; it generates the following code:</p>\n\n<pre><code>IEnumerable&lt;int&gt; numbers = new int[] { 1, 2, 3, 4, 5 };\n\nIEnumerator&lt;int&gt; enumerator = numbers.GetEnumerator();\nwhile (enumerator.MoveNext()) {\n    Console.WriteLine(enumerator.Current);\n}\n</code></pre>\n\n<p>Each time you would actually iterate over the enumerable, the compiler creates an enumerator.  The enumerator is not reusable; further calls to <code>MoveNext</code> will just return false, and there is no way to reset it to the beginning.  If you want to iterate over the numbers again, you will need to create another enumerator instance.</p>\n\n<hr>\n\n<p>To better illustrate that the IEnumerable has (can have) the same 'feature' as a Java Stream, consider a enumerable whose source of the numbers is not a static collection.  For example, we can create an enumerable object which generates a sequence of 5 random numbers:</p>\n\n<pre><code>class Generator : IEnumerator&lt;int&gt; {\n    Random _r;\n    int _current;\n    int _count = 0;\n\n    public Generator(Random r) {\n        _r = r;\n    }\n\n    public bool MoveNext() {\n        _current= _r.Next();\n        _count++;\n        return _count &lt;= 5;\n    }\n\n    public int Current {\n        get { return _current; }\n    }\n }\n\nclass RandomNumberStream : IEnumerable&lt;int&gt; {\n    Random _r = new Random();\n    public IEnumerator&lt;int&gt; GetEnumerator() {\n        return new Generator(_r);\n    }\n    public IEnumerator IEnumerable.GetEnumerator() {\n        return this.GetEnumerator();\n    }\n}\n</code></pre>\n\n<p>Now we have very similar code to the previous array-based enumerable, but with a second iteration over <code>numbers</code>:</p>\n\n<pre><code>IEnumerable&lt;int&gt; numbers = new RandomNumberStream();\n\nforeach (var n in numbers) {\n    Console.WriteLine(n);\n}\nforeach (var n in numbers) {\n    Console.WriteLine(n);\n}\n</code></pre>\n\n<p>The second time we iterate over <code>numbers</code> we will get a different sequence of numbers, which isn't reusable in the same sense.  Or, we could have written the <code>RandomNumberStream</code> to thrown an exception if you try to iterate over it multiple times, making the enumerable actually unusable (like a Java Stream).</p>\n\n<p>Also, what does your enumerable-based quick sort mean when applied to a <code>RandomNumberStream</code>?</p>\n\n<hr>\n\n<h2>Conclusion</h2>\n\n<p>So, the biggest difference is that .NET allows you to reuse an <code>IEnumerable</code> by implicitly creating a new <code>IEnumerator</code> in the background whenever it would need to access elements in the sequence.</p>\n\n<p>This implicit behavior is often useful (and 'powerful' as you state), because we can repeatedly iterate over a collection.</p>\n\n<p>But sometimes, this implicit behavior can actually cause problems.  If your data source is not static, or is costly to access (like a database or web site), then a lot of assumptions about <code>IEnumerable</code> have to be discarded; reuse is not that straight-forward</p>\n", "title": "Why are Java Streams once-off?", "tags": ["java", "java-8", "java-stream", "api-design"], "link": "http://stackoverflow.com/questions/28459498/why-are-java-streams-once-off/28465634#28465634", "question_id": 28459498, "answer_id": 28465634}, {"body": "<p>I have some recollections from the early design of the Streams API that might shed some light on the design rationale.</p>\n\n<p>Back in 2012, we were adding lambdas to the language, and we wanted a collections-oriented or \"bulk data\" set of operations, programmed using lambdas, that would facilitate parallelism. The idea of lazily chaining operations together was well established by this point. We also didn't want the intermediate operations to store results.</p>\n\n<p>The main issues we needed to decide were what the objects in the chain looked like in the API and how they hooked up to data sources. The sources were often collections, but we also wanted to support data coming from a file or the network, or data generated on-the-fly, e.g., from a random number generator.</p>\n\n<p>There were many influences of existing work on the design. Among the more influential were Google's <a href=\"https://code.google.com/p/guava-libraries/\">Guava</a> library and the Scala collections library. (If anybody is surprised about the influence from Guava, note that <a href=\"http://stackoverflow.com/users/202214/kevin-bourrillion\">Kevin Bourrillion</a>, Guava lead developer, was on the <a href=\"https://jcp.org/en/jsr/detail?id=335\">JSR-335 Lambda</a> expert group.) On Scala collections, we found this talk by Martin Odersky to be of particular interest: <a href=\"http://youtu.be/HoIOIluNFzQ\">Future-Proofing Scala Collections: from Mutable to Persistent to Parallel</a>. (Stanford EE380, 2011 June 1.)</p>\n\n<p>Our prototype design at the time was based around <code>Iterable</code>. The familiar operations <code>filter</code>, <code>map</code>, and so forth were extension (default) methods on <code>Iterable</code>. Calling one added an operation to the chain and returned another <code>Iterable</code>. A terminal operation like <code>count</code> would call <code>iterator()</code> up the chain to the source, and the operations were implemented within each stage's Iterator.</p>\n\n<p>Since these are Iterables, you can call the <code>iterator()</code> method more than once. What should happen then?</p>\n\n<p>If the source is a collection, this mostly works fine. Collections are Iterable, and each call to <code>iterator()</code> produces a distinct Iterator instance that is independent of any other active instances, and each traverses the collection independently. Great.</p>\n\n<p>Now what if the source is one-shot, like reading lines from a file? Maybe the first Iterator should get all the values but the second and subsequent ones should be empty. Maybe the values should be interleaved among the Iterators. Or maybe each Iterator should get all the same values. Then, what if you have two iterators and one gets farther ahead of the other? Somebody will have to buffer up the values in the second Iterator until they're read. Worse, what if you get one Iterator and read all the values, and only <em>then</em> get a second Iterator. Where do the values come from now? Is there a requirement for them all to be buffered up <em>just in case</em> somebody wants a second Iterator?</p>\n\n<p>Clearly, allowing multiple Iterators over a one-shot source raises a lot of questions. We didn't have good answers for them. We wanted consistent, predictable behavior for what happens if you call <code>iterator()</code> twice. This pushed us toward disallowing multiple traversals, making the pipelines one-shot.</p>\n\n<p>We also observed others bumping into these issues. In the JDK, most Iterables are collections or collection-like objects, which allow multiple traversal. It isn't specified anywhere, but there seemed to be an unwritten expectation that Iterables allow multiple traversal. A notable exception is the NIO <a href=\"http://docs.oracle.com/javase/8/docs/api/java/nio/file/DirectoryStream.html\">DirectoryStream</a> interface. Its specification includes this interesting warning:</p>\n\n<blockquote>\n  <p><strong>While DirectoryStream extends Iterable, it is not a general-purpose Iterable as it supports only a single Iterator; invoking the iterator method to obtain a second or subsequent iterator throws IllegalStateException.</strong></p>\n</blockquote>\n\n<p>[bold in original]</p>\n\n<p>This seemed unusual and unpleasant enough that we didn't want to create a whole bunch of new Iterables that might be once-only. This pushed us away from using Iterable.</p>\n\n<p>About this time, an <a href=\"http://www.artima.com/weblogs/viewpost.jsp?thread=339521\">article by Bruce Eckel</a> appeared that described a spot of trouble he'd had with Scala. He'd written this code:</p>\n\n<pre><code>// Scala\nval lines = fromString(data).getLines\nval registrants = lines.map(Registrant)\nregistrants.foreach(println)\nregistrants.foreach(println)\n</code></pre>\n\n<p>It's pretty straightforward. It parses lines of text into <code>Registrant</code> objects and prints them out twice. Except that it actually only prints them out once. It turns out that he thought that <code>registrants</code> was a collection, when in fact it's an iterator. The second call to <code>foreach</code> encounters an empty iterator, from which all values have been exhausted, so it prints nothing.</p>\n\n<p>This kind of experience convinced us that it was very important to have clearly predictable results if multiple traversal is attempted. It also highlighted the importance of distinguishing between lazy pipeline-like structures from actual collections that store data. This in turn drove the separation of the lazy pipeline operations into the new Stream interface and keeping only eager, mutative operations directly on Collections. <a href=\"http://stackoverflow.com/a/24472635/1441122\">Brian Goetz has explained</a> the rationale for that.</p>\n\n<p>What about allowing multiple traversal for collection-based pipelines but disallowing it for non-collection-based pipelines? It's inconsistent, but it's sensible. If you're reading values from the network, <em>of course</em> you can't traverse them again. If you want to traverse them multiple times, you have to pull them into a collection explicitly.</p>\n\n<p>But let's explore allowing multiple traversal from collections-based pipelines. Let's say you did this:</p>\n\n<pre><code>Iterable&lt;?&gt; it = source.filter(...).map(...).filter(...).map(...);\nit.into(dest1);\nit.into(dest2);\n</code></pre>\n\n<p>(The <code>into</code> operation is now spelled <code>collect(toList())</code>.)</p>\n\n<p>If source is a collection, then the first <code>into()</code> call will create a chain of Iterators back to the source, execute the pipeline operations, and send the results into the destination. The second call to <code>into()</code> will create another chain of Iterators, and execute the pipeline operations <strong>again</strong>. This isn't obviously wrong but it does have the effect of performing all the filter and map operations a second time for each element. I think many programmers would have been surprised by this behavior.</p>\n\n<p>As I mentioned above, we had been talking to the Guava developers. One of the cool things they have is an <a href=\"https://code.google.com/p/guava-libraries/wiki/IdeaGraveyard\">Idea Graveyard</a> where they describe features that they decided <strong>not</strong> to implement along with the reasons. The idea of lazy collections sounds pretty cool, but here's what they have to say about it. Consider a <code>List.filter()</code> operation that returns a <code>List</code>:</p>\n\n<blockquote>\n  <p>The biggest concern here is that too many operations become expensive, linear-time propositions. If you want to filter a list and get a list back, and not just a Collection or an Iterable, you can use <code>ImmutableList.copyOf(Iterables.filter(list, predicate))</code>, which \"states up front\" what it's doing and how expensive it is.</p>\n</blockquote>\n\n<p>To take a specific example, what's the cost of <code>get(0)</code> or <code>size()</code> on a List? For commonly used classes like <code>ArrayList</code>, they're O(1). But if you call one of these on a lazily-filtered list, it has to run the filter over the backing list, and all of a sudden these operations are O(n). Worse, it has to traverse the backing list on <strong>every</strong> operation.</p>\n\n<p>This seemed to us to be <em>too much</em> laziness. It's one thing to set up some operations and defer actual execution until you so \"Go\". It's another to set things up in such a way that hides a potentially large amount of recomputation.</p>\n\n<p>In proposing to disallow non-linear or \"no-reuse\" streams, <a href=\"http://stackoverflow.com/users/4042945/paul-sandoz\">Paul Sandoz</a> described the <a href=\"http://mail.openjdk.java.net/pipermail/lambda-libs-spec-experts/2012-November/000412.html\">potential consequences</a> of allowing them as giving rise to \"unexpected or confusing results.\" He also mentioned that parallel execution would make things even trickier. Finally, I'd add that a pipeline operation with side effects would lead to difficult and obscure bugs if the operation were unexpectedly executed multiple times, or at least a different number of times than the programmer expected. (But Java programmers don't write lambda expressions with side effects, do they? DO THEY??)</p>\n\n<p>So that's the basic rationale for the Java 8 Streams API design that allows one-shot traversal and that requires a strictly linear (no branching) pipeline. It provides consistent behavior across multiple different stream sources, it clearly separates lazy from eager operations, and it provides a straightforward execution model.</p>\n\n<hr>\n\n<p>With regard to <code>IEnumerable</code>, I am far from an expert on C# and .NET, so I would appreciate being corrected (gently) if I draw any incorrect conclusions. It does appear, however, that <code>IEnumerable</code> permits multiple traversal to behave differently with different sources; and it permits a branching structure of nested <code>IEnumerable</code> operations, which may result in some significant recomputation. While I appreciate that different systems make different tradeoffs, these are two characteristics that we sought to avoid in the design of the Java 8 Streams API.</p>\n\n<p>The quicksort example given by the OP is interesting, puzzling, and I'm sorry to say, somewhat horrifying. Calling <code>QuickSort</code> takes an <code>IEnumerable</code> and returns an <code>IEnumerable</code>, so no sorting is actually done until the final <code>IEnumerable</code> is traversed. What the call seems to do, though, is build up a tree structure of <code>IEnumerables</code> that reflects the partitioning that quicksort would do, without actually doing it. (This is lazy computation, after all.) If the source has N elements, the tree will be N elements wide at its widest, and it will be lg(N) levels deep.</p>\n\n<p>It seems to me -- and once again, I'm not a C# or .NET expert -- that this will cause certain innocuous-looking calls, such as pivot selection via <code>ints.First()</code>, to be more expensive than they look. At the first level, of course, it's O(1). But consider a partition deep in the tree, at the right-hand edge. To compute the first element of this partition, the entire source has to be traversed, an O(N) operation. But since the partitions above are lazy, they must be recomputed, requiring O(lg N) comparisons. So selecting the pivot would be an O(N lg N) operation, which is as expensive as an entire sort.</p>\n\n<p>But we don't actually sort until we traverse the returned <code>IEnumerable</code>. In the standard quicksort algorithm, each level of partitioning doubles the number of partitions. Each partition is only half the size, so each level remains at O(N) complexity. The tree of partitions is O(lg N) high, so the total work is O(N lg N).</p>\n\n<p>With the tree of lazy IEnumerables, at the bottom of the tree there are N partitions. Computing each partition requires a traversal of N elements, each of which requires lg(N) comparisons up the tree. To compute all the partitions at the bottom of the tree, then, requires O(N^2 lg N) comparisons.</p>\n\n<p>(Is this right? I can hardly believe this. Somebody please check this for me.)</p>\n\n<p>In any case, it is indeed cool that <code>IEnumerable</code> can be used this way to build up complicated structures of computation. But if it does increase the computational complexity as much as I think it does, it would seem that programming this way is something that should be avoided unless one is extremely careful.</p>\n", "title": "Why are Java Streams once-off?", "tags": ["java", "java-8", "java-stream", "api-design"], "link": "http://stackoverflow.com/questions/28459498/why-are-java-streams-once-off/28513908#28513908", "question_id": 28459498, "answer_id": 28513908}], "creation_date": 1423672438, "score": 119, "link": "http://stackoverflow.com/questions/28459498/why-are-java-streams-once-off", "question_id": 28459498}, {"body": "<p>I have a class where every method starts the same way:</p>\n\n<pre><code>class Foo {\n  public void bar() {\n    if (!fooIsEnabled) return;\n    //...\n  }\n  public void baz() {\n    if (!fooIsEnabled) return;\n    //...\n  }\n  public void bat() {\n    if (!fooIsEnabled) return;\n    //...\n  }\n}\n</code></pre>\n\n<p>Is there a nice way to require (and hopefully not write each time) the <code>fooIsEnabled</code> part for every public method in the class?</p>\n", "tags": ["java", "design-patterns"], "title": "Is there an elegant way to make every method in a class start with a certain block of code?", "answers": [{"body": "<p>Yes, but it's a bit of work, so it depends how important it is to you.</p>\n\n<p>You can define the class as an interface, write a delegate implementation, and then use <code>java.lang.reflect.Proxy</code> to implement the interface with methods that do the shared portion and then conditionally call the delegate.</p>\n\n<pre><code>interface Foo {\n    public void bar();\n    public void baz();\n    public void bat();\n}\n\nclass FooImpl implements Foo {\n    public void bar() {\n      //... &lt;-- your logic represented by this notation above\n    }\n\n    public void baz() {\n      //... &lt;-- your logic represented by this notation above\n    }\n\n    // and so forth\n}\n\nFoo underlying = new FooImpl();\nInvocationHandler handler = new MyInvocationHandler(underlying);\nFoo f = (Foo) Proxy.newProxyInstance(Foo.class.getClassLoader(),\n     new Class[] { Foo.class },\n     handler);\n</code></pre>\n\n<p>Your <code>MyInvocationHandler</code> can look something like this (error handling and class scaffolding omitted, assuming <code>fooIsEnabled</code> is defined somewhere accessible):</p>\n\n<pre><code>public Object invoke(Object proxy, Method method, Object[] args) {\n    if (!fooIsEnabled) return null;\n    return method.invoke(underlying, args);\n}\n</code></pre>\n\n<p>It's not incredibly pretty. But unlike various commenters, I'd do it, as I think repetition is a more important risk than this kind of density, and you'll be able to produce the \"feel\" of your real class, with this somewhat inscrutable wrapper added on very locally in just a couple of lines of code.</p>\n\n<p>See the <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/reflect/Proxy.html\">Java documentation</a> for details on dynamic proxy classes.</p>\n", "title": "Is there an elegant way to make every method in a class start with a certain block of code?", "tags": ["java", "design-patterns"], "link": "http://stackoverflow.com/questions/31121513/is-there-an-elegant-way-to-make-every-method-in-a-class-start-with-a-certain-blo/31122000#31122000", "question_id": 31121513, "answer_id": 31122000}, {"body": "<p>This question is closely related to <a href=\"https://en.wikipedia.org/wiki/Aspect-oriented_programming\" rel=\"nofollow\">aspect-oriented programming</a>. AspectJ is an AOP extension of Java and you may give it a look to get some ispiration.</p>\n\n<p>As far as I know there is no direct support for AOP in Java. There are some GOF patterns that relate to it, like for instance <a href=\"https://en.wikipedia.org/wiki/Template_method_pattern\" rel=\"nofollow\">Template Method</a> and <a href=\"https://en.wikipedia.org/wiki/Strategy_pattern\" rel=\"nofollow\">Strategy</a> but it will not really save you lines of code.</p>\n\n<p>In Java and most other languages you could define the recurrent logic you need in functions and adopt a so-called disciplined coding approach in which you call them at the right time.</p>\n\n<pre><code>public void checkBalance() {\n    checkSomePrecondition();\n    ...\n    checkSomePostcondition();\n}\n</code></pre>\n\n<p>However this would not fit your case because you would like the factored-out code to be able to return from <code>checkBalance</code>. In languages that support macros (like C/C++) you could define <code>checkSomePrecondition</code> and <code>checkSomePostcondition</code> as macros and they would simply be replaced by the preprocessor before the compiler is even invoked:</p>\n\n<pre><code>#define checkSomePrecondition \\\n    if (!fooIsEnabled) return;\n</code></pre>\n\n<p>Java does not have this out of the box. This may offend someone but I did use automatic code generation and template engines to automate repetitive coding tasks in the past. If you process your Java files before compiling them with a suitable preprocessor, for instance Jinja2, you could do something similar to what is possible in C.</p>\n\n<h2>Possible pure Java approach</h2>\n\n<p>If you are looking for a pure Java solution, what you may find is probably not going to be concise. But, it could still factor out common parts of your program and avoid code duplication and bugs. You could do something like this (it's some sort of <a href=\"https://en.wikipedia.org/wiki/Strategy_pattern\" rel=\"nofollow\">Strategy</a>-inspired pattern). Note that in C# and Java 8, and in other languages in which functions are a little easier to handle, this approach may actually look nice.</p>\n\n<pre><code>public interface Code {\n    void execute();\n}\n\n...\n\npublic class Foo {\n  private bool fooIsEnabled;\n\n  private void protect(Code c) {\n      if (!fooIsEnabled) return;\n      c.execute();\n  }\n\n  public void bar() {\n    protect(new Code {\n      public void execute() {\n        System.out.println(\"bar\");\n      }\n    });\n  }\n\n  public void baz() {\n    protect(new Code {\n      public void execute() {\n        System.out.println(\"baz\");\n      }\n    });\n  }\n\n  public void bat() {\n    protect(new Code {\n      public void execute() {\n        System.out.println(\"bat\");\n      }\n    });\n  }\n}\n</code></pre>\n\n<h1>Kinda of a real-world scenario</h1>\n\n<p>You are developing a class to send data frames to an industrial robot. The robot takes time to complete a command. Once the command is completed, it sends you a control frame back. The robot may get damaged if it receives a new command while the previous is still being executed. Your program uses a <code>DataLink</code> class to send and receive frames to and from the robot. You need to protect access to the <code>DataLink</code> instance.</p>\n\n<p>The user interface thread calls <code>RobotController.left</code>, <code>right</code>, <code>up</code> or <code>down</code> when the user clicks the buttons, but also calls <code>BaseController.tick</code> at regular intervals, in order to reenable command forwarding to the private <code>DataLink</code> instance.</p>\n\n<pre><code>interface Code {\n    void ready(DataLink dataLink);\n}\n\nclass BaseController {\n    private DataLink mDataLink;\n    private boolean mReady = false;\n    private Queue&lt;Code&gt; mEnqueued = new LinkedList&lt;Code&gt;();\n\n    public BaseController(DataLink dl) {\n        mDataLink = dl;\n    }\n\n    protected void protect(Code c) {\n        if (mReady) {\n            mReady = false;\n            c.ready(mDataLink);\n        }\n        else {\n            mEnqueue.add(c);\n        }\n    }\n\n    public void tick() {\n        byte[] frame = mDataLink.readWithTimeout(/* Not more than 50 ms */);\n\n        if (frame != null &amp;&amp; /* Check that it's an ACK frame */) {\n          if (mEnqueued.isEmpty()) {\n              mReady = true;\n          }\n          else {\n              Code c = mEnqueued.remove();\n              c.ready(mDataLink);\n          }\n        }\n    }\n}\n\nclass RobotController extends BaseController {\n    public void left(float amount) {\n        protect(new Code() { public void ready(DataLink dataLink) {\n            dataLink.write(/* Create a byte[] that means 'left' by amount */);\n        }});\n    }\n\n    public void right(float amount) {\n        protect(new Code() { public void ready(DataLink dataLink) {\n            dataLink.write(/* Create a byte[] that means 'right' by amount */);\n        }});\n    }\n\n    public void up(float amount) {\n        protect(new Code() { public void ready(DataLink dataLink) {\n            dataLink.write(/* Create a byte[] that means 'up' by amount */);\n        }});\n    }\n\n    public void down(float amount) {\n        protect(new Code() { public void ready(DataLink dataLink) {\n            dataLink.write(/* Create a byte[] that means 'down' by amount */);\n        }});\n    }\n}\n</code></pre>\n", "title": "Is there an elegant way to make every method in a class start with a certain block of code?", "tags": ["java", "design-patterns"], "link": "http://stackoverflow.com/questions/31121513/is-there-an-elegant-way-to-make-every-method-in-a-class-start-with-a-certain-blo/31122066#31122066", "question_id": 31121513, "answer_id": 31122066}, {"body": "<p>I don't know about elegant, but here is a working implementation using Java's built-in <code>java.lang.reflect.Proxy</code> that <strong><em>enforces</em></strong> that all method invocations on <code>Foo</code> begin by checking the <code>enabled</code> state.</p>\n\n<p><code>main</code> method:</p>\n\n<pre><code>public static void main(String[] args) {\n    Foo foo = Foo.newFoo();\n    foo.setEnabled(false);\n    foo.bar(); // won't print anything.\n    foo.setEnabled(true);\n    foo.bar(); // prints \"Executing method bar\"\n}\n</code></pre>\n\n<p><code>Foo</code> interface:</p>\n\n<pre><code>public interface Foo {\n    boolean getEnabled();\n    void setEnabled(boolean enable);\n\n    void bar();\n    void baz();\n    void bat();\n\n    // Needs Java 8 to have this convenience method here.\n    static Foo newFoo() {\n        FooFactory fooFactory = new FooFactory();\n        return fooFactory.makeFoo();\n    }\n}\n</code></pre>\n\n<p><code>FooFactory</code> class:</p>\n\n<pre><code>import java.lang.reflect.InvocationHandler;\nimport java.lang.reflect.Method;\nimport java.lang.reflect.Proxy;\n\npublic class FooFactory {\n\n    public Foo makeFoo() {\n        return (Foo) Proxy.newProxyInstance(\n                this.getClass().getClassLoader(),\n                new Class[]{Foo.class},\n                new FooInvocationHandler(new FooImpl()));\n    }\n\n    private static class FooImpl implements Foo {\n        private boolean enabled = false;\n\n        @Override\n        public boolean getEnabled() {\n            return this.enabled;\n        }\n\n        @Override\n        public void setEnabled(boolean enable) {\n            this.enabled = enable;\n        }\n\n        @Override\n        public void bar() {\n            System.out.println(\"Executing method bar\");\n        }\n\n        @Override\n        public void baz() {\n            System.out.println(\"Executing method baz\");\n        }\n\n        @Override\n        public void bat() {\n            System.out.println(\"Executing method bat\");\n        }\n\n    }\n\n    private static class FooInvocationHandler implements InvocationHandler {\n\n        private FooImpl fooImpl;\n\n        public FooInvocationHandler(FooImpl fooImpl) {\n            this.fooImpl = fooImpl;\n        }\n\n        @Override\n        public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n            if (method.getDeclaringClass() == Foo.class &amp;&amp;\n                !method.getName().equals(\"getEnabled\") &amp;&amp;\n                !method.getName().equals(\"setEnabled\")) {\n\n                if (!this.fooImpl.getEnabled()) {\n                    return null;\n                }\n            }\n\n            return method.invoke(this.fooImpl, args);\n        }\n    }\n}\n</code></pre>\n\n<p>As others have pointed out, it does seem like overkill for what you need if you only have a handful of methods to worry about.</p>\n\n<p>That said, there certainly are benefits:</p>\n\n<ul>\n<li>A certain separation of concerns is achieved, because <code>Foo</code>'s method implementations don't have to worry about the <code>enabled</code> check cross-cutting concern. Instead, the method's code only needs to worry about what the method's primary purpose is, nothing more.</li>\n<li>There is no way for an innocent developer to add a new method to the <code>Foo</code> class and mistakenly \"forget\" to add the <code>enabled</code> check.  The <code>enabled</code> check behavior is automatically inherited by any newly added method.</li>\n<li>If you need to add another cross-cutting concern, or if you need to enhance the <code>enabled</code> check, it's very easy to do so safely and in one place.</li>\n<li>It is kind of nice that you can get this AOP-like behavior with built-in Java functionality. You are not forced into having to integrate some other framework like <code>Spring</code>, though they can definitely be good options too.</li>\n</ul>\n\n<p>To be fair, some of the downsides are:</p>\n\n<ul>\n<li>Some of the implementation code that handles the proxy invocations is ugly. Some would also say that having inner classes to prevent instantiation of the <code>FooImpl</code> class is ugly.</li>\n<li>If you want to add a new method to <code>Foo</code>, you have to make a change in 2 spots: the implementation class and the interface.  Not a big deal, but it's still a bit more work.</li>\n<li>Proxy invocations are not free. There is a certain performance overhead. For general use though, it won't be noticeable. See <a href=\"http://stackoverflow.com/questions/1856242/performance-cost-of-java-dynamic-proxy\">here</a> for more information.</li>\n</ul>\n\n<p><strong>EDIT:</strong></p>\n\n<p>Fabian Streitel's comment got me thinking about 2 annoyances with my above solution that, I'll admit, I'm not happy about myself:</p>\n\n<ol>\n<li>The invocation handler uses magic strings to skip the \"enabled-check\" on the \"getEnabled\" and \"setEnabled\" methods. This can easily break if the method names are refactored.</li>\n<li>If there was a case where new methods need to be added that should not inherit the \"enabled-check\" behavior, then it can be pretty easy for the developer to get this wrong, and at the very least, it would mean adding more magic strings.</li>\n</ol>\n\n<p>To resolve point #1, and to at least ease the problem with point #2, I would create an annotation <code>BypassCheck</code> (or something similar) that I could use to mark the methods in the <code>Foo</code> interface for which I don't want to perform the \"enabled check\".  This way, I don't need magic strings at all, and it becomes a lot easier for a developer to correctly add a new method in this special case.</p>\n\n<p>Using the annotation solution, the code would look like this:</p>\n\n<p><code>main</code> method:</p>\n\n<pre><code>public static void main(String[] args) {\n    Foo foo = Foo.newFoo();\n    foo.setEnabled(false);\n    foo.bar(); // won't print anything.\n    foo.setEnabled(true);\n    foo.bar(); // prints \"Executing method bar\"\n}\n</code></pre>\n\n<p><code>BypassCheck</code> annotation:</p>\n\n<pre><code>import java.lang.annotation.*;\n\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface BypassCheck {\n}\n</code></pre>\n\n<p><code>Foo</code> interface:</p>\n\n<pre><code>public interface Foo {\n    @BypassCheck boolean getEnabled();\n    @BypassCheck void setEnabled(boolean enable);\n\n    void bar();\n    void baz();\n    void bat();\n\n    // Needs Java 8 to have this convenience method here.\n    static Foo newFoo() {\n        FooFactory fooFactory = new FooFactory();\n        return fooFactory.makeFoo();\n    }\n}\n</code></pre>\n\n<p><code>FooFactory</code> class:</p>\n\n<pre><code>import java.lang.reflect.InvocationHandler;\nimport java.lang.reflect.Method;\nimport java.lang.reflect.Proxy;\n\npublic class FooFactory {\n\n    public Foo makeFoo() {\n        return (Foo) Proxy.newProxyInstance(\n                this.getClass().getClassLoader(),\n                new Class[]{Foo.class},\n                new FooInvocationHandler(new FooImpl()));\n    }\n\n    private static class FooImpl implements Foo {\n\n        private boolean enabled = false;\n\n        @Override\n        public boolean getEnabled() {\n            return this.enabled;\n        }\n\n        @Override\n        public void setEnabled(boolean enable) {\n            this.enabled = enable;\n        }\n\n        @Override\n        public void bar() {\n            System.out.println(\"Executing method bar\");\n        }\n\n        @Override\n        public void baz() {\n            System.out.println(\"Executing method baz\");\n        }\n\n        @Override\n        public void bat() {\n            System.out.println(\"Executing method bat\");\n        }\n\n    }\n\n    private static class FooInvocationHandler implements InvocationHandler {\n\n        private FooImpl fooImpl;\n\n        public FooInvocationHandler(FooImpl fooImpl) {\n            this.fooImpl = fooImpl;\n        }\n\n        @Override\n        public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n            if (method.getDeclaringClass() == Foo.class\n                    &amp;&amp; !method.isAnnotationPresent(BypassCheck.class) // no magic strings\n                    &amp;&amp; !this.fooImpl.getEnabled()) {\n\n                return null;\n            }\n\n            return method.invoke(this.fooImpl, args);\n        }\n    }\n}\n</code></pre>\n", "title": "Is there an elegant way to make every method in a class start with a certain block of code?", "tags": ["java", "design-patterns"], "link": "http://stackoverflow.com/questions/31121513/is-there-an-elegant-way-to-make-every-method-in-a-class-start-with-a-certain-blo/31122247#31122247", "question_id": 31121513, "answer_id": 31122247}, {"body": "<p>I would consider refactoring. This pattern is heavily breaking DRY pattern (Don't repeat yourself). I believe this break this class responsibility. But this depends on your control of code. Your question is very open - where are you calling <code>Foo</code> instance? </p>\n\n<p>I suppose you have code like</p>\n\n<pre><code>foo.bar(); // does nothing if !fooEnabled\nfoo.baz(); // does also nothing\nfoo.bat(); // also\n</code></pre>\n\n<p>maybe you should call it something like this way:</p>\n\n<pre><code>if (fooEnabled) {\n   foo.bat();\n   foo.baz();\n   ...\n}\n</code></pre>\n\n<p>And keep it clean. For example, logging:</p>\n\n<pre><code>this.logger.debug(createResourceExpensiveDump())\n</code></pre>\n\n<p>a <code>logger</code> <strong>is not asking himself</strong>, if debug is enabled. It just logs.</p>\n\n<p>Instead, calling class need to check this:</p>\n\n<pre><code>if (this.logger.isDebugEnabled()) {\n   this.logger.debug(createResourceExpensiveDump())\n}\n</code></pre>\n\n<p>If this is a library and you cannot control calling of this class, throw an <code>IllegalStateException</code> which explains why, if this calling is illegal and cause trouble. </p>\n", "title": "Is there an elegant way to make every method in a class start with a certain block of code?", "tags": ["java", "design-patterns"], "link": "http://stackoverflow.com/questions/31121513/is-there-an-elegant-way-to-make-every-method-in-a-class-start-with-a-certain-blo/31122266#31122266", "question_id": 31121513, "answer_id": 31122266}, {"body": "<p>There is a lot of good suggestions.. what you can do to strike your problem is think in the State Pattern and implement it.</p>\n\n<p>Take a look at this code snippet.. perhaps it will get you to an idea. In this scenario looks like you want to modify the entire methods implementation based on the internal state of the object. Please recall that the sum of the methods in a object is knows as behavior.</p>\n\n<pre><code>public class Foo {\n\n      private FooBehaviour currentBehaviour = new FooEnabledBehaviour (); // or disabled, or use a static factory method for getting the default behaviour\n\n      public void bar() {\n        currentBehaviour.bar();\n      }\n      public void baz() {\n        currentBehaviour.baz();\n      }\n      public void bat() {\n        currentBehaviour.bat();\n      }\n\n      public void setFooEnabled (boolean fooEnabled) { // when you set fooEnabel, you are changing at runtime what implementation will be called.\n        if (fooEnabled) {\n          currentBehaviour = new FooEnabledBehaviour ();\n        } else {\n          currentBehaviour = new FooDisabledBehaviour ();\n        }\n      }\n\n      private interface FooBehaviour {\n        public void bar();\n        public void baz();\n        public void bat();\n      }\n\n      // RENEMBER THAT instance method of inner classes can refer directly to instance members defined in its enclosing class\n      private class FooEnabledBehaviour implements FooBehaviour {\n        public void bar() {\n          // do what you want... when is enabled\n        }\n        public void baz() {}\n        public void bat() {}\n\n      }\n\n      private class FooDisabledBehaviour implements FooBehaviour {\n        public void bar() {\n          // do what you want... when is desibled\n        }\n        public void baz() {}\n        public void bat() {}\n\n      }\n}\n</code></pre>\n\n<p>Hope you like it! </p>\n\n<p>P.D: Is an implementation of the State Pattern (also knows as Strategy depending on the context.. but the principles are just the same).</p>\n", "title": "Is there an elegant way to make every method in a class start with a certain block of code?", "tags": ["java", "design-patterns"], "link": "http://stackoverflow.com/questions/31121513/is-there-an-elegant-way-to-make-every-method-in-a-class-start-with-a-certain-blo/31122569#31122569", "question_id": 31121513, "answer_id": 31122569}, {"body": "<p>As is pointed out in other answers, the <a href=\"https://en.wikipedia.org/wiki/Strategy_pattern\" rel=\"nofollow\" title=\"Strategy\">Strategy Design Pattern</a> is an appropriate design pattern to follow to simplify this code.  I've illustrated it here using method invocation through reflection, but there are any number of mechanisms that you could use to get the same effect.  </p>\n\n<pre><code>class Foo {\n\n  public static void main(String[] args) {\n      Foo foo = new Foo();\n      foo.fooIsEnabled = false;\n      foo.execute(\"bar\");\n      foo.fooIsEnabled = true;\n      foo.execute(\"baz\");\n  }\n\n  boolean fooIsEnabled;\n\n  public void execute(String method) {\n    if(!fooIsEnabled) {return;}\n    try {\n       this.getClass().getDeclaredMethod(method, (Class&lt;?&gt;[])null).invoke(this, (Object[])null);\n    }\n    catch(Exception e) {\n       // best to handle each exception type separately\n       e.printStackTrace();\n    }\n  }\n\n  // Changed methods to private to reinforce usage of execute method\n  private void bar() {\n    System.out.println(\"bar called\");\n    // bar stuff here...\n  }\n  private void baz() {\n    System.out.println(\"baz called\");\n    // baz stuff here...\n  }\n  private void bat() {\n    System.out.println(\"bat called\");\n    // bat stuff here...\n  }\n}\n</code></pre>\n", "title": "Is there an elegant way to make every method in a class start with a certain block of code?", "tags": ["java", "design-patterns"], "link": "http://stackoverflow.com/questions/31121513/is-there-an-elegant-way-to-make-every-method-in-a-class-start-with-a-certain-blo/31129886#31129886", "question_id": 31121513, "answer_id": 31129886}, {"body": "<p>I have another approach: have a</p>\n\n<pre><code>interface Foo {\n  public void bar();\n  public void baz();\n  public void bat();\n}\n\nclass FooImpl implements Foo {\n  public void bar() {\n    //...\n  }\n  public void baz() {\n    //...\n  }\n  public void bat() {\n    //...\n  }\n}\n\nclass NullFoo implements Foo {\n  static NullFoo DEFAULT = new NullFoo();\n  public void bar() {}\n  public void baz() {}\n  public void bat() {}\n}\n</code></pre>\n\n<p>}</p>\n\n<p>and then you can do</p>\n\n<pre><code>(isFooEnabled ? foo : NullFoo.DEFAULT).bar();\n</code></pre>\n\n<p>Maybe you can even replace the <code>isFooEnabled</code> with a <code>Foo</code> variable which either holds the <code>FooImpl</code> to be used or the <code>NullFoo.DEFAULT</code>. Then the call is simpler again:</p>\n\n<pre><code>Foo toBeUsed = isFooEnabled ? foo : NullFoo.DEFAULT;\ntoBeUsed.bar();\ntoBeUsed.baz();\ntoBeUsed.bat();\n</code></pre>\n\n<p>BTW, this is called the \"Null pattern\".</p>\n", "title": "Is there an elegant way to make every method in a class start with a certain block of code?", "tags": ["java", "design-patterns"], "link": "http://stackoverflow.com/questions/31121513/is-there-an-elegant-way-to-make-every-method-in-a-class-start-with-a-certain-blo/31130347#31130347", "question_id": 31121513, "answer_id": 31130347}, {"body": "<p>It seems like the class does nothing when Foo is not enabled so why not express this at a higher level where you create or get the Foo instance?</p>\n\n<pre><code>class FooFactory\n{\n static public Foo getFoo()\n {\n   return isFooEnabled ? new Foo() : null;\n }\n}\n ...\n Foo foo = FooFactory.getFoo();\n if(foo!=null)\n {\n   foo.bar();\n   ....\n }     \n</code></pre>\n\n<p>This only works if isFooEnabled is a constant though.\nIn a general case, you could create your own annotation.</p>\n", "title": "Is there an elegant way to make every method in a class start with a certain block of code?", "tags": ["java", "design-patterns"], "link": "http://stackoverflow.com/questions/31121513/is-there-an-elegant-way-to-make-every-method-in-a-class-start-with-a-certain-blo/31134024#31134024", "question_id": 31121513, "answer_id": 31134024}, {"body": "<p>IMHO the most elegant and best performing solution to this is to have more than one implementation of Foo, together with a factory method for creating one:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>class Foo {\n  protected Foo() {\n    // Prevent direct instantiation\n  }\n\n  public void bar() {\n    // Do something\n  }\n\n  public static void getFoo() {\n    return fooEnabled ? new Foo() : new NopFoo();\n  }\n}\n\nclass NopFoo extends Foo {\n  public void bar() {\n    // Do nothing\n  }\n}\n</code></pre>\n\n<p>Or a variation:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>class Foo {\n  protected Foo() {\n    // Prevent direct instantiation\n  }\n\n  public void bar() {\n    // Do something\n  }\n\n  public static void getFoo() {\n    return fooEnabled ? new Foo() : NOP_FOO;\n  }\n\n  private static Foo NOP_FOO = new Foo() {\n    public void bar() {\n      // Do nothing\n    }\n  };\n}\n</code></pre>\n\n<p>As sstan points out, even better would be to use an interface:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>public interface Foo {\n  void bar();\n\n  static Foo getFoo() {\n    return fooEnabled ? new FooImpl() : new NopFoo();\n  }\n}\n\nclass FooImpl implements Foo {\n  FooImpl() {\n    // Prevent direct instantiation\n  }\n\n  public void bar() {\n    // Do something\n  }\n}\n\nclass NopFoo implements Foo {\n  NopFoo() {\n    // Prevent direct instantiation\n  }\n\n  public void bar() {\n    // Do nothing\n  }\n}\n</code></pre>\n\n<p>Adapt this to the rest of your circumstances (are you creating a new Foo every time or reusing the same instance, etc.)</p>\n", "title": "Is there an elegant way to make every method in a class start with a certain block of code?", "tags": ["java", "design-patterns"], "link": "http://stackoverflow.com/questions/31121513/is-there-an-elegant-way-to-make-every-method-in-a-class-start-with-a-certain-blo/31137521#31137521", "question_id": 31121513, "answer_id": 31137521}, {"body": "<p>There is another solution, using delegate (pointer to function). You can have a unique method that first is doing the validation and then is calling to the relevant method according to the function (parameter) to be called.\nC# code:</p>\n\n<pre><code>internal delegate void InvokeBaxxxDelegate();\n\nclass Test\n{\n    private bool fooIsEnabled;\n\n    public Test(bool fooIsEnabled)\n    {\n        this.fooIsEnabled = fooIsEnabled;\n    }\n\n    public void Bar()\n    {\n        InvokeBaxxx(InvokeBar);\n    }\n\n    public void Baz()\n    {\n        InvokeBaxxx(InvokeBaz);\n    }\n\n    public void Bat()\n    {\n        InvokeBaxxx(InvokeBat);\n    }\n\n    private void InvokeBaxxx(InvokeBaxxxDelegate invoker)\n    {\n        if (!fooIsEnabled) return;\n        invoker();\n    }\n\n    private void InvokeBar()\n    {\n        // do Invoke bar stuff\n        Console.WriteLine(\"I am Bar\");\n    }\n\n    private void InvokeBaz()\n    {\n        // do Invoke bar stuff\n        Console.WriteLine(\"I am Baz\");\n    }\n\n    private void InvokeBat()\n    {\n        // do Invoke bar stuff\n        Console.WriteLine(\"I am Bat\");\n    }\n}\n</code></pre>\n", "title": "Is there an elegant way to make every method in a class start with a certain block of code?", "tags": ["java", "design-patterns"], "link": "http://stackoverflow.com/questions/31121513/is-there-an-elegant-way-to-make-every-method-in-a-class-start-with-a-certain-blo/31142756#31142756", "question_id": 31121513, "answer_id": 31142756}, {"body": "<p>I am not familiar with Java syntax.\nAssumption that in Java, there is polymorphism, static property, abstract class &amp; method:</p>\n\n<pre><code>    public static void main(String[] args) {\n    Foo.fooIsEnabled = true; // static property, not particular to a specific instance  \n\n    Foo foo = new bar();\n    foo.mainMethod();\n\n    foo = new baz();\n    foo.mainMethod();\n\n    foo = new bat();\n    foo.mainMethod();\n}\n\n    public abstract class Foo{\n      static boolean fooIsEnabled;\n\n      public void mainMethod()\n      {\n          if(!fooIsEnabled)\n              return;\n\n          baMethod();\n      }     \n      protected abstract void baMethod();\n    }\n    public class bar extends Foo {\n        protected override baMethod()\n        {\n            // bar implementation\n        }\n    }\n    public class bat extends Foo {\n        protected override baMethod()\n        {\n            // bat implementation\n        }\n    }\n    public class baz extends Foo {\n        protected override baMethod()\n        {\n            // baz implementation\n        }\n    }\n</code></pre>\n", "title": "Is there an elegant way to make every method in a class start with a certain block of code?", "tags": ["java", "design-patterns"], "link": "http://stackoverflow.com/questions/31121513/is-there-an-elegant-way-to-make-every-method-in-a-class-start-with-a-certain-blo/31147590#31147590", "question_id": 31121513, "answer_id": 31147590}, {"body": "<p>Basically you have a flag that if it's set, the function call should be skipped. So I think my solution would be silly, but here it is.</p>\n\n<pre><code>Foo foo = new Foo();\n\nif (foo.isEnabled())\n{\n    foo.doSomething();\n}\n</code></pre>\n\n<hr>\n\n<p>Here's the implementation of a simple Proxy, in case you want to execute some code before executing any function.</p>\n\n<pre><code>class Proxy&lt;T&gt;\n{\n    private T obj;\n    private Method&lt;T&gt; proxy;\n\n    Proxy(Method&lt;T&gt; proxy)\n    {\n        this.ojb = new T();\n        this.proxy = proxy;\n    }\n\n    Proxy(T obj, Method&lt;T&gt; proxy)\n    {\n        this.obj = obj;\n        this.proxy = proxy;\n    }\n\n    public T object ()\n    {\n        this.proxy(this.obj);\n        return this.obj;\n    }\n}\n\nclass Test\n{\n    public static void func (Foo foo)\n    {\n        // ..\n    }\n\n    public static void main (String [] args)\n    {\n        Proxy&lt;Foo&gt; p = new Proxy(Test.func);\n\n        // how to use\n        p.object().doSomething();\n    }\n}\n\nclass Foo\n{\n    public void doSomething ()\n    {\n        // ..\n    }\n}\n</code></pre>\n", "title": "Is there an elegant way to make every method in a class start with a certain block of code?", "tags": ["java", "design-patterns"], "link": "http://stackoverflow.com/questions/31121513/is-there-an-elegant-way-to-make-every-method-in-a-class-start-with-a-certain-blo/31158430#31158430", "question_id": 31121513, "answer_id": 31158430}, {"body": "<p>If only java was a bit better at being functional. It think the most OOO solution is to create class that wraps a single function so it is called only when foo is enabled.</p>\n\n<pre><code>abstract class FunctionWrapper {\n    Foo owner;\n\n    public FunctionWrapper(Foo f){\n        this.owner = f;\n    }\n\n    public final void call(){\n        if (!owner.isEnabled()){\n            return;\n        }\n        innerCall();\n    }\n\n    protected abstract void innerCall();\n}\n</code></pre>\n\n<p>and then implement <code>bar</code>, <code>baz</code> and <code>bat</code> as anonymous classes that that extend <code>FunctionWrapper</code>. </p>\n\n<pre><code>class Foo {\n    public boolean fooIsEnabled;\n\n    public boolean isEnabled(){\n        return fooIsEnabled;\n    }\n\n    public final FunctionWrapper bar = new FunctionWrapper(this){\n        @Override\n        protected void innerCall() {\n            // do whatever\n        }\n    };\n\n    public final FunctionWrapper baz = new FunctionWrapper(this){\n        @Override\n        protected void innerCall() {\n            // do whatever\n        }\n    };\n\n    // you can pass in parms like so \n    public final FunctionWrapper bat = new FunctionWrapper(this){\n        // some parms:\n        int x,y;\n        // a way to set them\n        public void setParms(int x,int y){\n            this.x=x;\n            this.y=y;\n        }\n\n        @Override\n        protected void innerCall() {\n            // do whatever using x and y\n        }\n    };\n}\n</code></pre>\n\n<p><strong>Another Idea</strong></p>\n\n<p>Use <a href=\"http://stackoverflow.com/a/31130347/2608464\">glglgl's nullable solution</a> but make <code>FooImpl</code> and <code>NullFoo</code> inner classes (with private constructors) of the below class:</p>\n\n<pre><code>class FooGateKeeper {\n\n    public boolean enabled;\n\n    private Foo myFooImpl;\n    private Foo myNullFoo;\n\n    public FooGateKeeper(){\n        myFooImpl= new FooImpl();\n        myNullFoo= new NullFoo();\n    }\n\n    public Foo getFoo(){\n        if (enabled){\n            return myFooImpl;\n        }\n        return myNullFoo;\n    }  \n}\n</code></pre>\n\n<p>this way you don't have to worry about remembering to use <code>(isFooEnabled ? foo : NullFoo.DEFAULT)</code>.</p>\n", "title": "Is there an elegant way to make every method in a class start with a certain block of code?", "tags": ["java", "design-patterns"], "link": "http://stackoverflow.com/questions/31121513/is-there-an-elegant-way-to-make-every-method-in-a-class-start-with-a-certain-blo/31195569#31195569", "question_id": 31121513, "answer_id": 31195569}, {"body": "<p>In a similar functional approach to @Colin's answer, with <a href=\"http://www.oracle.com/webfolder/technetwork/tutorials/obe/java/Lambda-QuickStart/index.html\" rel=\"nofollow\">Java 8's lambda functions</a>, it is possible to wrap the conditional feature toggle enable / disable code into a guard method (<code>executeIfEnabled</code>) which accepts the action lambda, to which code to be conditionally executed can be passed.</p>\n\n<p>Although in your case, this approach won't save any lines of code, by DRYing this up, you now have the option to centralize other feature toggle concerns, plus AOP or debugging concerns like logging, diagnostics, profiling et al.</p>\n\n<p>One benefit of using lambdas here is that closures can be used to avoid the need to overload the <code>executeIfEnabled</code> method.</p>\n\n<p>For example:</p>\n\n<pre><code>class Foo {\n    private Boolean _fooIsEnabled;\n\n    public Foo(Boolean isEnabled) {\n        _fooIsEnabled = isEnabled;\n    }\n\n    private void executeIfEnabled(java.util.function.Consumer someAction) {\n        // Conditional toggle short circuit\n        if (!_fooIsEnabled) return;\n\n        // Invoke action\n        someAction.accept(null);\n    }\n\n    // Wrap the conditionally executed code in a lambda\n    public void bar() {\n        executeIfEnabled((x) -&gt; {\n            System.out.println(\"Bar invoked\");\n        });\n    }\n\n    // Demo with closure arguments and locals\n    public void baz(int y) {\n        executeIfEnabled((x) -&gt; {\n            System.out.printf(\"Baz invoked %d \\n\", y);\n        });\n    }\n\n    public void bat() {\n        int z = 5;\n        executeIfEnabled((x) -&gt; {\n            System.out.printf(\"Bat invoked %d \\n\", z);\n        });\n    }\n</code></pre>\n\n<p>With a test:</p>\n\n<pre><code>public static void main(String args[]){\n    Foo enabledFoo = new Foo(true);\n    enabledFoo.bar();\n    enabledFoo.baz(33);\n    enabledFoo.bat();\n\n    Foo disabledFoo = new Foo(false);\n    disabledFoo.bar();\n    disabledFoo.baz(66);\n    disabledFoo.bat();\n}\n</code></pre>\n", "title": "Is there an elegant way to make every method in a class start with a certain block of code?", "tags": ["java", "design-patterns"], "link": "http://stackoverflow.com/questions/31121513/is-there-an-elegant-way-to-make-every-method-in-a-class-start-with-a-certain-blo/31469539#31469539", "question_id": 31121513, "answer_id": 31469539}], "creation_date": 1435597523, "score": 114, "link": "http://stackoverflow.com/questions/31121513/is-there-an-elegant-way-to-make-every-method-in-a-class-start-with-a-certain-blo", "question_id": 31121513}, {"body": "<p>What is the maximum number of parameters that a method in Java can have and why?</p>\n\n<p>I am using Java 1.8 on a 64-bit Windows system.</p>\n\n<p>All the answers on StackOverflow about this say that the technical limit is 255 parameters without specifying why.</p>\n\n<p>To be precise, 255 for static and 254 for non-static (<code>this</code> will be the 255th in this case) methods.</p>\n\n<p>I thought this could be specified in some sort of specification and that this was simply a statically defined maximum number of parameters allowed. But this was only valid for <strong><code>int</code> and all 4-bytes types</strong>.\nI did some tests with <code>long</code> parameters, and I was only able to declare 127 parameters in that case.</p>\n\n<p>With <code>String</code> parameters, the allowed number i deduced from testing is 255 (it may be because the reference size is 4 bytes in Java?).</p>\n\n<p>But since I am using a 64-bit system, references size should be 8 bytes wide and so with <code>String</code> parameters the maximum allowed number should be 127, similar to <code>long</code> types.</p>\n\n<p>How does this limit is exactly applied? </p>\n\n<p>Does the limit have anything to do with the <strong>stack size</strong> of the method?</p>\n\n<p>Note: I am not really going to use these many parameters in any method, but this question is only to clarify the exact behavior.</p>\n", "tags": ["java", "jvm"], "title": "Maximum number of parameters in Java method declaration", "answers": [{"body": "<p>That limit is defined in the <a href=\"https://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.11\">JVM Specification</a>:</p>\n\n<blockquote>\n  <p>The number of method parameters <strong>is limited to 255</strong> by the definition of a method descriptor (\u00a74.3.3), where the limit includes one unit for <em>this</em> in the case of instance or interface method invocations.</p>\n</blockquote>\n\n<p>Section <a href=\"https://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.3.3\">\u00a74.3.3</a> gives some additional information:</p>\n\n<blockquote>\n  <p>A method descriptor is valid only if it represents method parameters with a total length of 255 or less, where that length includes the contribution for <em>this</em> in the case of instance or interface method invocations. </p>\n  \n  <p>The total length is calculated by summing the contributions of the individual parameters, <strong>where a parameter of type long or double contributes two units to the length and a parameter of any other type contributes one unit</strong>.</p>\n</blockquote>\n\n<p>Your observations were spot on, double word primitives (<code>long</code>/<code>double</code>) need twice the size of usual 4 bytes variables <strong>and 4 bytes object instance references</strong>.</p>\n\n<p>Regarding the last part of your question related to 64bit systems, the specification defines how many <em>units a parameter contribute</em>,  that part of the specification <strong>must still be complied with</strong> even on a 64bit platform,  the 64bit JVM will accomodate 255 instance parameters (like your 255 <code>Strings</code>) regardless of the internal object's pointer size.</p>\n", "title": "Maximum number of parameters in Java method declaration", "tags": ["java", "jvm"], "link": "http://stackoverflow.com/questions/30581531/maximum-number-of-parameters-in-java-method-declaration/30581726#30581726", "question_id": 30581531, "answer_id": 30581726}, {"body": "<p><a href=\"https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.3.3\">Section 4.3.3</a> of the JVM specification has the information you are looking for:</p>\n\n<blockquote>\n  <p>A method descriptor is valid only if it represents method parameters with a total length of 255 or less, where that length includes the contribution for this in the case of instance or interface method invocations. <em>The total length is calculated by summing the contributions of the individual parameters, where a parameter of</em> <strong>type long or double contributes two units</strong> <em>to the length and a</em> <strong>parameter of any other type contributes one unit</strong>.</p>\n</blockquote>\n\n<p>Therefore it appears that whether the host-machine is 32-bit or 64-bit has no effect on the number of parameters. If you notice, the documentation speaks in terms of \"units\", where the length of one \"unit\" is a function of the word-size. If the number of parameters directly proportional to word-size, there would be portability issues; you wouldn't be able to compile the same Java program on different architectures (assuming that at least one method used the maximum-number of parameters on the architecture with the larger word-size). </p>\n", "title": "Maximum number of parameters in Java method declaration", "tags": ["java", "jvm"], "link": "http://stackoverflow.com/questions/30581531/maximum-number-of-parameters-in-java-method-declaration/30581805#30581805", "question_id": 30581531, "answer_id": 30581805}, {"body": "<p>I found an interesting issue from a newsletter about this, <a href=\"http://www.javaspecialists.eu/archive/Issue059.html\">http://www.javaspecialists.eu/archive/Issue059.html</a></p>\n\n<blockquote>\n  <p>The per-class or per-interface constant pool is limited to 65535 entries by the 16-bit constant_pool_count field of the ClassFile structure. This acts as an internal limit on the total complexity of a single class or interface.\n  The amount of code per non-native, non-abstract method is limited to 65536 bytes by the sizes of the indices in the exception_table of the Code attribute, in the LineNumberTable attribute, and in the LocalVariableTable attribute.</p>\n  \n  <p>The greatest number of local variables in the local variables array of a frame created upon invocation of a method is limited to 65535 by the size of the max_locals item of the Code attribute giving the code of the method. <strong>Note that values of type long and double are each considered to reserve two local variables and contribute two units toward the max_locals value, so use of local variables of those types further reduces this limit.</strong></p>\n  \n  <p>The number of fields that may be declared by a class or interface is limited to 65535 by the size of the fields_count item of the ClassFile structure. Note that the value of the fields_count item of the ClassFile structure does not include fields that are inherited from superclasses or superinterfaces.</p>\n</blockquote>\n", "title": "Maximum number of parameters in Java method declaration", "tags": ["java", "jvm"], "link": "http://stackoverflow.com/questions/30581531/maximum-number-of-parameters-in-java-method-declaration/30581859#30581859", "question_id": 30581531, "answer_id": 30581859}], "creation_date": 1433186524, "score": 108, "link": "http://stackoverflow.com/questions/30581531/maximum-number-of-parameters-in-java-method-declaration", "question_id": 30581531}, {"body": "<p>What's the difference between </p>\n\n<pre><code>/**\n * comment\n *\n *\n */\n</code></pre>\n\n<p>and </p>\n\n<pre><code>/*\n * \n * comment\n *\n */\n</code></pre>\n\n<p>in Java? When should I use them?</p>\n", "tags": ["java", "comments", "javadoc"], "title": "/** and /* in Java Comments", "answers": [{"body": "<p>The first is Javadoc comments. They can be processed by the <code>javadoc</code> tool to generate the API documentation for your classes. The second is a normal block comment.</p>\n", "title": "/** and /* in Java Comments", "tags": ["java", "comments", "javadoc"], "link": "http://stackoverflow.com/questions/29815636/and-in-java-comments/29815662#29815662", "question_id": 29815636, "answer_id": 29815662}, {"body": "<p>The first form is called <a href=\"http://en.wikipedia.org/wiki/Javadoc\">Javadoc</a>.  You use this when you're writing formal APIs for your code, which are generated by the <code>javadoc</code> tool.  For an example, <a href=\"http://docs.oracle.com/javase/7/docs/api/\">the Java 7 API page</a> uses Javadoc and was generated by that tool.</p>\n\n<p>Some common elements you'd see in Javadoc include:</p>\n\n<ul>\n<li><p><code>@param</code>:  this is used to indicate what parameters are being passed to a method, and what value they're expected to have</p></li>\n<li><p><code>@return</code>:  this is used to indicate what result the method is going to give back</p></li>\n<li><p><code>@throws</code>:  this is used to indicate that a method throws an exception or error in case of certain input</p></li>\n<li><p><code>@since</code>:  this is used to indicate the earliest Java version this class or function was available in</p></li>\n</ul>\n\n<p>As an example, here's Javadoc for the <code>compare</code> method of <code>Integer</code>:</p>\n\n<pre><code>/**\n * Compares two {@code int} values numerically.\n * The value returned is identical to what would be returned by:\n * &lt;pre&gt;\n *    Integer.valueOf(x).compareTo(Integer.valueOf(y))\n * &lt;/pre&gt;\n *\n * @param  x the first {@code int} to compare\n * @param  y the second {@code int} to compare\n * @return the value {@code 0} if {@code x == y};\n *         a value less than {@code 0} if {@code x &lt; y}; and\n *         a value greater than {@code 0} if {@code x &gt; y}\n * @since 1.7\n */\npublic static int compare(int x, int y) {\n    return (x &lt; y) ? -1 : ((x == y) ? 0 : 1);\n}\n</code></pre>\n\n<p>The second form is a block (multi-line) comment.  You use this if you want to have multiple lines in a comment.</p>\n\n<p>I will say that you'd only want to use the latter form <em>sparingly</em>; that is, you don't want to overburden your code with block comments that don't describe what behaviors the method/complex function is supposed to have.</p>\n\n<p>Since Javadoc is the more descriptive of the two, and you can generate actual documentation as a result of using it, using Javadoc would be more preferable to simple block comments.</p>\n", "title": "/** and /* in Java Comments", "tags": ["java", "comments", "javadoc"], "link": "http://stackoverflow.com/questions/29815636/and-in-java-comments/29815698#29815698", "question_id": 29815636, "answer_id": 29815698}, {"body": "<p>Java supports two types of comments:</p>\n\n<ul>\n<li><p><code>/* multiline comment */</code> : The compiler ignores everything from <code>/*</code> to <code>*/</code>. The comment can span over multiple lines.</p></li>\n<li><p><code>// single line</code> : The compiler ignores everything from <code>//</code> to the end of the line.</p></li>\n</ul>\n\n<p>Some tool such as <em>javadoc</em> use a special multiline comment for their purpose. For example <code>/** doc comment */</code> is a documentation comment used by javadoc when preparing the automatically generated documentation, but for Java it's a simple multiline comment.</p>\n", "title": "/** and /* in Java Comments", "tags": ["java", "comments", "javadoc"], "link": "http://stackoverflow.com/questions/29815636/and-in-java-comments/29815760#29815760", "question_id": 29815636, "answer_id": 29815760}, {"body": "<p>Comments in the following listing of Java Code are the greyed out characters:</p>\n\n<pre><code>/** \n * The HelloWorldApp class implements an application that\n * simply displays \"Hello World!\" to the standard output.\n */\nclass HelloWorldApp {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\"); //Display the string.\n    }\n}\n</code></pre>\n\n<p>The Java language supports three kinds of comments:</p>\n\n<pre><code>/* text */\n</code></pre>\n\n<p>The compiler ignores everything from <code>/*</code> to <code>*/</code>.</p>\n\n<pre><code>/** documentation */\n</code></pre>\n\n<p>This indicates a documentation comment (doc comment, for short). The compiler ignores this kind of comment, just like it ignores comments that use <code>/*</code> and <code>*/</code>. The JDK javadoc tool uses doc comments when preparing automatically generated documentation.</p>\n\n<pre><code>// text\n</code></pre>\n\n<p>The compiler ignores everything from <code>//</code> to the end of the line.</p>\n\n<p>Now regarding when you should be using them:</p>\n\n<p>Use <code>// text</code> when you want to comment a single line of code.</p>\n\n<p>Use <code>/* text */</code> when you want to comment multiple lines of code.</p>\n\n<p>Use <code>/** documentation */</code>  when you would want to add some info about the program that can be used for automatic generation of program documentation. </p>\n", "title": "/** and /* in Java Comments", "tags": ["java", "comments", "javadoc"], "link": "http://stackoverflow.com/questions/29815636/and-in-java-comments/29815788#29815788", "question_id": 29815636, "answer_id": 29815788}, {"body": "<p>First one is for Javadoc you define on the top of classes, interfaces, methods etc. You can use Javadoc as the name suggest to document your code on what the class does or what method does etc and generate report on it.</p>\n\n<p>Second one is code block comment.\nSay for example you have some code block which you do not want compiler to interpret then you use code block comment.</p>\n\n<p>another one is //\nthis you use on statement level to specify what the proceeding lines of codes are supposed to do.</p>\n\n<p>There are some other also like //TODO, this will mark that you want to do something later on that place</p>\n\n<p>//FIXME you can use when you have some temporary solution but you want to visit later and make it better.</p>\n\n<p>Hope this helps</p>\n", "title": "/** and /* in Java Comments", "tags": ["java", "comments", "javadoc"], "link": "http://stackoverflow.com/questions/29815636/and-in-java-comments/29816105#29816105", "question_id": 29815636, "answer_id": 29816105}, {"body": "<p>For the Java <em>programming language</em>, there is <em>no difference</em> between the two. Java has two types of comments: traditional comments (<code>/* ... */</code>) and end-of-line comments (<code>// ...</code>). See the <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html#jls-3.7\">Java Language Specification</a>. So, for the Java programming language, both <code>/* ... */</code> and <code>/** ... */</code> are instances of traditional comments, and they are both treated exactly the same by the Java compiler, i.e., they are ignored (or more correctly: they are treated as white space).</p>\n\n<p>However, as a Java programmer, you do not only use a Java compiler. You use a an entire tool chain, which includes e.g. the compiler, an IDE, a build system, etc. And some of these tools interpret things differently than the Java compiler. In particular, <code>/** ... */</code> comments are interpreted by the Javadoc tool, which is included in the Java <em>platform</em> and generates documentation. The Javadoc tool will scan the Java source file and interpret the parts between <code>/** ... */</code> as documentation.</p>\n\n<p>This is similar to tags like <code>FIXME</code> and <code>TODO</code>: if you include a comment like <code>// TODO: fix this</code> or <code>// FIXME: do that</code>, most IDEs will highlight such comments so that you don't forget about them. But for Java, they are just comments.  </p>\n", "title": "/** and /* in Java Comments", "tags": ["java", "comments", "javadoc"], "link": "http://stackoverflow.com/questions/29815636/and-in-java-comments/29816756#29816756", "question_id": 29815636, "answer_id": 29816756}, {"body": "<p>Reading the section <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html\">3.7 of JLS</a> well explain all you need to know about comments in Java.</p>\n\n<blockquote>\n  <p>There are two kinds of comments:</p>\n  \n  <ul>\n  <li>/* text */</li>\n  </ul>\n  \n  <p>A traditional comment: all the text from the ASCII characters /* to the ASCII characters */ is ignored (as in C and C++).</p>\n  \n  <ul>\n  <li>//text</li>\n  </ul>\n  \n  <p>An end-of-line comment: all the text from the ASCII characters // to the end of the line is ignored (as in C++).</p>\n</blockquote>\n\n<hr>\n\n<p><strong>About your question,</strong></p>\n\n<p>The first one</p>\n\n<pre><code>/**\n *\n */\n</code></pre>\n\n<p>is used to declare <a href=\"http://docs.oracle.com/javase/8/docs/technotes/guides/javadoc/\">Javadoc Technology</a>.</p>\n\n<blockquote>\n  <p>Javadoc is a tool that parses the declarations and documentation\n  comments in a set of source files and produces a set of HTML pages\n  describing the classes, interfaces, constructors, methods, and fields.\n  You can use a Javadoc doclet to customize Javadoc output. A doclet is\n  a program written with the Doclet API that specifies the content and\n  format of the output to be generated by the tool. You can write a\n  doclet to generate any kind of text file output, such as HTML, SGML,\n  XML, RTF, and MIF. Oracle provides a standard doclet for generating\n  HTML-format API documentation. Doclets can also be used to perform\n  special tasks not related to producing API documentation.</p>\n</blockquote>\n\n<p>For more information on <code>Doclet</code> refer to the <a href=\"http://docs.oracle.com/javase/8/docs/jdk/api/javadoc/doclet/index.html\">API</a>.</p>\n\n<p>The second one, as explained clearly in JLS, will ignore all the text between <code>/*</code> and <code>*/</code> thus is used to create multiline comments.</p>\n\n<hr>\n\n<p><strong>Some other things you might want to know about comments in Java</strong></p>\n\n<ul>\n<li>Comments do not nest.</li>\n<li><code>/* and */</code> have no special meaning in comments that begin with <code>//</code>.</li>\n<li><code>//</code> has no special meaning in comments that begin with <code>/* or /**</code>.</li>\n<li>The lexical grammar implies that comments do not occur within character literals (<a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html#jls-3.10.4\">\u00a73.10.4</a>) or string literals (<a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html#jls-3.10.5\">\u00a73.10.5</a>).</li>\n</ul>\n\n<p>Thus, the following text is a single complete comment:</p>\n\n<pre><code>/* this comment /* // /** ends here: */\n</code></pre>\n", "title": "/** and /* in Java Comments", "tags": ["java", "comments", "javadoc"], "link": "http://stackoverflow.com/questions/29815636/and-in-java-comments/29824082#29824082", "question_id": 29815636, "answer_id": 29824082}, {"body": "<p>I don't think the existing answers adequately addressed this part of the question:</p>\n\n<blockquote>\n  <p>When should I use them?</p>\n</blockquote>\n\n<p>If you're writing an API that will be published or reused within your organization, you should write comprehensive Javadoc comments for every <code>public</code> class, method, and field, as well as <code>protected</code> methods and fields of non-<code>final</code> classes.  Javadoc should cover everything that <em>cannot</em> be conveyed by the method signature, such as preconditions, postconditions, valid arguments, runtime exceptions, internal calls, etc.</p>\n\n<p>If you're writing an internal API (one that's used by different parts of the same program), Javadoc is arguably less important.  But for the benefit of maintenance programmers, you should still write Javadoc for any method or field where the correct usage or meaning is not immediately obvious.</p>\n\n<p>The \"killer feature\" of Javadoc is that it's closely integrated with Eclipse and other IDEs.  A developer only needs to hover their mouse pointer over an identifier to learn everything they need to know about it.  Constantly referring to the documentation becomes second nature for experienced Java developers, which improves the quality of their own code.  If your API isn't documented with Javadoc, experienced developers will not want to use it.</p>\n", "title": "/** and /* in Java Comments", "tags": ["java", "comments", "javadoc"], "link": "http://stackoverflow.com/questions/29815636/and-in-java-comments/31506641#31506641", "question_id": 29815636, "answer_id": 31506641}], "creation_date": 1429771375, "score": 107, "link": "http://stackoverflow.com/questions/29815636/and-in-java-comments", "question_id": 29815636}, {"body": "<p>I have a class defined as follows:</p>\n\n<pre><code>public class Person {\n  private String name;\n\n  // constructor and getter/setter omitted\n}\n</code></pre>\n\n<p>I tried to print an instance of my class:</p>\n\n<pre><code>System.out.println(myPerson);\n</code></pre>\n\n<p>but I got the following output: <code>com.foo.Person@2f92e0f4</code>.  A similar thing happened when I tried to print an array of <code>Person</code> objects:</p>\n\n<pre><code>Person[] people = //...\nSystem.out.println(people); \n</code></pre>\n\n<p>I got the output: <code>[Lcom.foo.Person;@28a418fc</code></p>\n\n<p>What does this output mean? How do I change this output so it contains the name of my person? And how do I print collections of my objects?</p>\n\n<p><sub><strong>Note</strong>: this is intended as a canonical Q&amp;A about this subject.</sub></p>\n", "tags": ["java", "string", "object", "tostring"], "title": "How do I print my Java object without getting &quot;SomeType@2f92e0f4&quot;?", "answers": [{"body": "<h1>Background</h1>\n\n<p>All Java objects have a <code>toString()</code> method, which is invoked when you try and print the object. </p>\n\n<pre><code>System.out.println(myObject);  // invokes myObject.toString()\n</code></pre>\n\n<p>This method is defined in the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\"><code>Object</code></a> class (the superclass of all Java objects). The <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\"><code>Object.toString()</code></a> method returns a fairly ugly looking string, composed of the name of the class, an <code>@</code> symbol and the <a href=\"http://stackoverflow.com/questions/3563847/what-is-the-use-of-hashcode-in-java\">hashcode</a> of the object in hexadecimal. The code for this looks like:</p>\n\n<pre><code>// Code of Object.toString()\npublic String toString() {\n    return getClass().getName() + \"@\" + Integer.toHexString(hashCode());\n}\n</code></pre>\n\n<p>A result such as <code>com.foo.MyType@2f92e0f4</code> can therefore be explained as:</p>\n\n<ul>\n<li><code>com.foo.MyType</code>  - the name of the class, i.e. the class is <code>MyType</code> in the package <code>com.foo</code>.</li>\n<li><code>@</code> - joins the string together</li>\n<li><code>2f92e0f4</code> the hashcode of the object.</li>\n</ul>\n\n<p>The name of array classes look a little different, which is explained well in the Javadocs for <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getName--\"><code>Class.getName()</code></a>. For instance, <code>[Ljava.lang.String</code> means:</p>\n\n<ul>\n<li><code>[</code> - an single-dimensional array (as opposed to <code>[[</code> or <code>[[[</code> etc.)</li>\n<li><code>L</code> - the array contains a class or interface</li>\n<li><code>java.lang.String</code> - the type of objects in the array</li>\n</ul>\n\n<hr>\n\n<h1>Customizing the Output</h1>\n\n<p>To print something different when you call <code>System.out.println(myObject)</code>, you must <a href=\"https://docs.oracle.com/javase/tutorial/java/IandI/override.html\">override</a> the <code>toString()</code> method in your own class. Here's a simple example:</p>\n\n<pre><code>public class Person {\n\n  private String name;\n\n  // constructors and other methods omitted\n\n  @Override\n  public String toString() {\n    return name;\n  }\n}\n</code></pre>\n\n<p>Now if we print a <code>Person</code>, we see their name rather than <code>com.foo.Person@12345678</code>.</p>\n\n<p>Bear in mind that <code>toString()</code> is just <em>one</em> way for an object to be converted to a string. Typically this output should fully describe your object in a clear and concise manner. A better <code>toString()</code> for our <code>Person</code> class might be:</p>\n\n<pre><code>@Override\npublic String toString() {\n  return getClass().getSimpleName() + \"[name=\" + name + \"]\";\n}\n</code></pre>\n\n<p>Which would print, e.g., <code>Person[name=Henry]</code>. That's a really useful piece of data for debugging/testing.</p>\n\n<p>If you want to focus on just one aspect of your object or include a lot of jazzy formatting, you might be better to define a separate method instead, e.g. <code>String toElegantReport() {...}</code>.</p>\n\n<hr>\n\n<h1>Auto-generating the Output</h1>\n\n<p>Many <a href=\"http://en.wikipedia.org/wiki/Integrated_development_environment\">IDEs</a> offer support for auto-generating a <code>toString()</code> method, based on the fields in the class. See docs for <a href=\"http://help.eclipse.org/luna/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Freference%2Fref-dialog-tostring.htm\">Eclipse</a> and <a href=\"https://plugins.jetbrains.com/plugin/182?pr=idea\">IntelliJ</a>, for example. </p>\n\n<p>Several popular Java libraries offer this feature as well. Some examples include:</p>\n\n<ul>\n<li><p><a href=\"http://commons.apache.org/proper/commons-lang/javadocs/api-release/org/apache/commons/lang3/builder/ToStringBuilder.html\"><code>ToStringBuilder</code></a> from <a href=\"http://commons.apache.org/proper/commons-lang/\">Apache Commons Lang</a></p></li>\n<li><p><a href=\"http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/base/MoreObjects.html#toStringHelper(java.lang.Object)\"><code>MoreObjects.ToStringHelper</code></a> from <a href=\"https://github.com/google/guava\">Google Guava</a></p></li>\n<li><p><a href=\"http://projectlombok.org/features/ToString.html\"><code>@ToString</code></a> annotation from <a href=\"http://projectlombok.org/\">Project Lombok</a></p></li>\n</ul>\n\n<hr>\n\n<h1>Printing groups of objects</h1>\n\n<p>So you've created a nice <code>toString()</code> for your class. What happens if that class is placed into an array or a collection?</p>\n\n<h2>Arrays</h2>\n\n<p>If you have an array of objects, you can call <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#toString-java.lang.Object:A-\"><code>Arrays.toString()</code></a> to produce a simple representation of the contents of the array. For instance, consider this array of <code>Person</code> objects:</p>\n\n<pre><code>Person[] people = { new Person(\"Fred\"), new Person(\"Mike\") };\nSystem.out.println(Arrays.toString(people));\n\n// Prints: [Fred, Mike]\n</code></pre>\n\n<p>Note:  this is a call to a <em>static</em> method called <code>toString()</code> in the Arrays class, which is different to what we've been discussing above.</p>\n\n<p>If you have a <strong>multi-dimensional array</strong>, you can use <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#deepToString-java.lang.Object:A-\"><code>Arrays.deepToString()</code></a> to achieve the same sort of output.</p>\n\n<h2>Collections</h2>\n\n<p>Most collections will produce a pretty output based on calling <code>.toString()</code> on every element.</p>\n\n<pre><code>List&lt;Person&gt; people = new ArrayList&lt;&gt;();\npeople.add(new Person(\"Alice\"));\npeople.add(new Person(\"Bob\"));    \nSystem.out.println(people);\n\n// Prints [Alice, Bob]\n</code></pre>\n\n<p>So you just need to ensure your list elements define a nice <code>toString()</code> as discussed above.</p>\n", "title": "How do I print my Java object without getting &quot;SomeType@2f92e0f4&quot;?", "tags": ["java", "string", "object", "tostring"], "link": "http://stackoverflow.com/questions/29140402/how-do-i-print-my-java-object-without-getting-sometype2f92e0f4/29140403#29140403", "question_id": 29140402, "answer_id": 29140403}, {"body": "<p>Every class in java has <code>toString()</code> method in it by default, which is called by <code>System.out.println()</code> if you pass some object of a class to it. When you try to print object of a class, the <code>System.out.println()</code> method will call <code>toString()</code> of the class which returns the className@hashcode of that object.</p>\n\n<pre><code>{\n    SomeClass sc = new SomeClass();\n    // Class @ followed by hashcode of object in Hexadecimal\n    System.out.println(sc);\n}\n</code></pre>\n\n<p>You can override the toString method of a class to get different output. See this example</p>\n\n<pre><code>class A {\n    String s = \"I am just a object\";\n    @Override\n    public String toString()\n    {\n        return s;\n    }\n}\n\nclass B {\n    public static void main(String args[])\n    {\n        A obj = new A();\n        System.out.println(obj);\n    }\n}\n</code></pre>\n", "title": "How do I print my Java object without getting &quot;SomeType@2f92e0f4&quot;?", "tags": ["java", "string", "object", "tostring"], "link": "http://stackoverflow.com/questions/29140402/how-do-i-print-my-java-object-without-getting-sometype2f92e0f4/29141638#29141638", "question_id": 29140402, "answer_id": 29141638}, {"body": "<p>I think apache provides a better util class which provides a function to get the string</p>\n\n<pre><code>ReflectionToStringBuilder.toString(object)\n</code></pre>\n", "title": "How do I print my Java object without getting &quot;SomeType@2f92e0f4&quot;?", "tags": ["java", "string", "object", "tostring"], "link": "http://stackoverflow.com/questions/29140402/how-do-i-print-my-java-object-without-getting-sometype2f92e0f4/29651647#29651647", "question_id": 29140402, "answer_id": 29651647}, {"body": "<p>In Eclipse,\nGo to your class,\nRight click->source->Generate toString();\nIt will override the toString() method and print the object of that class.</p>\n", "title": "How do I print my Java object without getting &quot;SomeType@2f92e0f4&quot;?", "tags": ["java", "string", "object", "tostring"], "link": "http://stackoverflow.com/questions/29140402/how-do-i-print-my-java-object-without-getting-sometype2f92e0f4/36771568#36771568", "question_id": 29140402, "answer_id": 36771568}, {"body": "<p>If you Directly print any object of Person It will the <code>ClassName@HashCode</code> to the Code.</p>\n\n<p>in your case <code>com.foo.Person@2f92e0f4</code> is getting printed . Where <code>Person</code> is a class to which object belongs and <code>2f92e0f4</code> is hashCode of the Object.</p>\n\n<pre><code>public class Person {\n  private String name;\n\n  public Person(String name){\n  this.name = name;\n  }\n  // getter/setter omitted\n\n   @override\n   public String toString(){\n        return name;\n   }\n}\n</code></pre>\n\n<p>Now if you try to Use the object of <code>Person</code> then it will print the name</p>\n\n<pre><code>Class Test\n {\n  public static void main(String... args){\n    Person obj = new Person(\"YourName\");\n    System.out.println(obj.toString());\n  }\n}\n</code></pre>\n", "title": "How do I print my Java object without getting &quot;SomeType@2f92e0f4&quot;?", "tags": ["java", "string", "object", "tostring"], "link": "http://stackoverflow.com/questions/29140402/how-do-i-print-my-java-object-without-getting-sometype2f92e0f4/37071136#37071136", "question_id": 29140402, "answer_id": 37071136}, {"body": "<p>In intellij you can auto generate toString method by  pressing alt+inset and then selecting toString() here is an out put for a test class:</p>\n\n<pre><code>public class test  {\nint a;\nchar b;\nString c;\nTest2 test2;\n\n@Override\npublic String toString() {\n    return \"test{\" +\n            \"a=\" + a +\n            \", b=\" + b +\n            \", c='\" + c + '\\'' +\n            \", test2=\" + test2 +\n            '}';\n }\n}\n</code></pre>\n\n<p>As you can see, it generates a String by concatenating, several attributes of the class, for primitives it will print their values and for reference types it will use their class type (in this case to string method of Test2).   </p>\n", "title": "How do I print my Java object without getting &quot;SomeType@2f92e0f4&quot;?", "tags": ["java", "string", "object", "tostring"], "link": "http://stackoverflow.com/questions/29140402/how-do-i-print-my-java-object-without-getting-sometype2f92e0f4/38628203#38628203", "question_id": 29140402, "answer_id": 38628203}], "creation_date": 1426755558, "score": 100, "link": "http://stackoverflow.com/questions/29140402/how-do-i-print-my-java-object-without-getting-sometype2f92e0f4", "question_id": 29140402}, {"body": "<p>How does a Java <em>if statement</em> work when it has an assignment and an equality check <code>OR</code>-d together??</p>\n\n<pre><code>public static void test() {\n    boolean test1 = true; \n    if (test1 = false || test1 == false) {\n        System.out.println(\"TRUE\");\n    } else {\n        System.out.println(\"FALSE\");\n    }       \n}\n</code></pre>\n\n<p>Why is this printing FALSE?</p>\n", "tags": ["java", "if-statement", "logic"], "title": "Why does this if statement, with an assignment and equality check, evaluate to false?", "answers": [{"body": "<p>The expression is not parsed the way you think. It's not</p>\n\n<pre><code>(test1=false) || (test1 == false)\n</code></pre>\n\n<p>in which case the result would have been <code>true</code>, but</p>\n\n<pre><code>test1 = (false || test1 == false)\n</code></pre>\n\n<p>The value of <code>false || test1 == false</code> expression is computed first, and it is <code>false</code>, because <code>test1</code> is set to <code>true</code> going into the computation.</p>\n\n<p>The reason it is parsed this way is that the <a href=\"http://introcs.cs.princeton.edu/java/11precedence/\">precedence</a> of the <code>||</code> is lower than that of the <code>==</code> operator, but higher than the precedence of the assignment operator <code>=</code>.</p>\n", "title": "Why does this if statement, with an assignment and equality check, evaluate to false?", "tags": ["java", "if-statement", "logic"], "link": "http://stackoverflow.com/questions/29670421/why-does-this-if-statement-with-an-assignment-and-equality-check-evaluate-to-f/29670555#29670555", "question_id": 29670421, "answer_id": 29670555}, {"body": "<p>This is a precedence issue, basically. You're assuming that your code is equivalent to:</p>\n\n<pre><code>if ((test1 = false) || (test1 == false))\n</code></pre>\n\n<p>... but it's not. It's actually equivalent to:</p>\n\n<pre><code>if (test1 = (false || test1 == false))\n</code></pre>\n\n<p>... which is equivalent to:</p>\n\n<pre><code>if (test1 = (false || false))\n</code></pre>\n\n<p>(because <code>test1</code> is <code>true</code> to start with)</p>\n\n<p>... which is equivalent to:</p>\n\n<pre><code>if (test1 = false)\n</code></pre>\n\n<p>which assigns the value <code>false</code> to <code>test1</code>, with the result of the expression being <code>false</code>.</p>\n\n<p>See the <a href=\"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/operators.html\">Java tutorial on operators</a> for a useful table of operator precedence.</p>\n", "title": "Why does this if statement, with an assignment and equality check, evaluate to false?", "tags": ["java", "if-statement", "logic"], "link": "http://stackoverflow.com/questions/29670421/why-does-this-if-statement-with-an-assignment-and-equality-check-evaluate-to-f/29670611#29670611", "question_id": 29670421, "answer_id": 29670611}, {"body": "<p><code>(test1 = false || test1 == false)</code> returns false, because both of them are false.<code>(test1 = false || test1 == true)</code> this is true because one of them is true</p>\n", "title": "Why does this if statement, with an assignment and equality check, evaluate to false?", "tags": ["java", "if-statement", "logic"], "link": "http://stackoverflow.com/questions/29670421/why-does-this-if-statement-with-an-assignment-and-equality-check-evaluate-to-f/29714917#29714917", "question_id": 29670421, "answer_id": 29714917}, {"body": "<p><img src=\"http://i.stack.imgur.com/UcG6x.gif\" alt=\"please have a look over precedence of operators\"></p>\n\n<p>Expression <code>test1 = false || test1 == false</code> will evaluate in following step.</p>\n\n<p><strong>STEP:1-</strong> <code>test1 = false || test1 == false</code> //precedence of <code>==</code> is highest</p>\n\n<p><strong>STEP:2-</strong> <code>test1 = false || false</code>// Operator <code>||</code> have higher precedence</p>\n\n<p><strong>STEP:3-</strong> <code>test1 = false</code></p>\n\n<p><strong>STEP:4-</strong> <code>false</code></p>\n\n<p>Since boolean value of expression becomes false.So else statement is being executed.</p>\n", "title": "Why does this if statement, with an assignment and equality check, evaluate to false?", "tags": ["java", "if-statement", "logic"], "link": "http://stackoverflow.com/questions/29670421/why-does-this-if-statement-with-an-assignment-and-equality-check-evaluate-to-f/30069257#30069257", "question_id": 29670421, "answer_id": 30069257}], "creation_date": 1429176040, "score": 99, "link": "http://stackoverflow.com/questions/29670421/why-does-this-if-statement-with-an-assignment-and-equality-check-evaluate-to-f", "question_id": 29670421}, {"body": "<p>Preparing for the Oracle Certified Associate Java SE 8 Programmer 1 exam, I came across the following paragraph about the ternary expression in the official Study Guide:</p>\n\n<blockquote>\n  <p><strong>Ternary Expression Evaluation</strong>\n  <br/>\n  As of Java 7, only one of the right-hand expressions of the ternary operator will be evaluated at runtime. In a manner similar to the short-circuit operators, if one of the two right-hand expressions in a ternary operator performs a side effect, then it may not be applied at runtime. Let's illustrate this principle with the following example: [...]</p>\n</blockquote>\n\n<p>It says that only one of the two expressions is evaluated, demonstrating with the following example:</p>\n\n<pre><code>int y = 1;\nint z = 1;\nint a = y &lt; 10 ? y++ : z++;\n</code></pre>\n\n<p>Here, only <code>y</code> increments, but <code>z</code> does not, as you would expect.</p>\n\n<p>What I am stumbling across is the beginning of the paragraph (marked in yellow) where it says \"As of Java 7, ...\". I tested the same code with Java 1.6 and I can't find a difference in the behavior. I expected Java 1.6 to evaluate both expressions just from the information given in the paragraph. Does anyone have an idea what they wanted to say with \"As of Java 7,  ...\"?</p>\n\n<p><strong>Edit:</strong> To avoid confusion: It boils down to the question, Since they write 'As of Java 7', was there anything that changed concerning the ternary operator, when switching from Java 6 to Java 7?</p>\n", "tags": ["java", "ternary-operator", "java-6", "short-circuiting"], "title": "Ternary operator in Java only evaluating one expression since Java 7 - was that different in Java 1.6 and lower?", "answers": [{"body": "<p>From the <a href=\"https://docs.oracle.com/javase/specs/jls/se6/html/expressions.html#15.25\">Java 6 JLS</a>:</p>\n\n<blockquote>\n  <p>At run time, the first operand expression of the conditional\n  expression is evaluated first; if necessary, unboxing conversion is\n  performed on the result; the resulting boolean value is then used to\n  choose either the second or the third operand expression:</p>\n  \n  <ul>\n  <li>If the value of the first operand is true, then the second operand    expression is chosen.</li>\n  <li>If the value of the first operand is false,    then the third operand expression is chosen.</li>\n  </ul>\n  \n  <p>The chosen operand expression is then evaluated and the resulting\n  value is converted to the type of the conditional expression as\n  determined by the rules stated above. This conversion may include\n  boxing (\u00a75.1.7) or unboxing conversion. <strong>The operand expression not\n  chosen is not evaluated for that particular evaluation of the\n  conditional expression.</strong></p>\n</blockquote>\n\n<p>Similar wording also appears in JLS editions going back to <a href=\"http://titanium.cs.berkeley.edu/doc/java-langspec-1.0/15.doc.html#5257\">1.0</a>. The behavior didn't change in Java 7; the study guide is just poorly worded.</p>\n", "title": "Ternary operator in Java only evaluating one expression since Java 7 - was that different in Java 1.6 and lower?", "tags": ["java", "ternary-operator", "java-6", "short-circuiting"], "link": "http://stackoverflow.com/questions/29557106/ternary-operator-in-java-only-evaluating-one-expression-since-java-7-was-that/29557223#29557223", "question_id": 29557106, "answer_id": 29557223}, {"body": "<p>I'm one of the authors of the book this came from. While I didn't write that particular sentence, I agree the intent was \"this was tested on Java 7\". I'll make a note to remove that if we write another edition.</p>\n\n<p>To be clear, the ternary operator has behaved the same way in Java 8, 7, 6, etc. And I'd be quite surprised if it changed in the future.</p>\n", "title": "Ternary operator in Java only evaluating one expression since Java 7 - was that different in Java 1.6 and lower?", "tags": ["java", "ternary-operator", "java-6", "short-circuiting"], "link": "http://stackoverflow.com/questions/29557106/ternary-operator-in-java-only-evaluating-one-expression-since-java-7-was-that/29581991#29581991", "question_id": 29557106, "answer_id": 29581991}], "creation_date": 1428655711, "score": 98, "link": "http://stackoverflow.com/questions/29557106/ternary-operator-in-java-only-evaluating-one-expression-since-java-7-was-that", "question_id": 29557106}, {"body": "<p>I am writing a piece of code:</p>\n\n<pre><code>OutputStream outputStream = new FileOutputStream(createdFile);\nGZIPOutputStream gzipOutputStream = new GZIPOutputStream(outputStream);\nBufferedWriter bw = new BufferedWriter(new OutputStreamWriter(gzipOutputStream));\n</code></pre>\n\n<p>Do I need to close every stream or writer like the following?</p>\n\n<pre><code>gzipOutputStream.close();\nbw.close();\noutputStream.close();\n</code></pre>\n\n<p>Or will just closing the last stream be fine?</p>\n\n<pre><code>bw.close();\n</code></pre>\n", "tags": ["java", "file-io", "outputstream", "writer"], "title": "Is it necessary to close each nested OutputStream and Writer separately?", "answers": [{"body": "<p>If all of the streams have been instantiated then closing only the outermost is just fine. </p>\n\n<p>The documentation on <a href=\"http://docs.oracle.com/javase/7/docs/api/java/io/Closeable.html\"><code>Closeable</code></a> interface states that close method:</p>\n\n<blockquote>\n  <p>Closes this stream and releases any system resources associated with it.</p>\n</blockquote>\n\n<p>The releasing system resources includes closing streams.</p>\n\n<p>It also states that:</p>\n\n<blockquote>\n  <p>If the stream is already closed then invoking this method has no effect.</p>\n</blockquote>\n\n<p>So if you close them explicitly afterwards, nothing wrong will happen.</p>\n", "title": "Is it necessary to close each nested OutputStream and Writer separately?", "tags": ["java", "file-io", "outputstream", "writer"], "link": "http://stackoverflow.com/questions/28276423/is-it-necessary-to-close-each-nested-outputstream-and-writer-separately/28276463#28276463", "question_id": 28276423, "answer_id": 28276463}, {"body": "<p>It will be fine if you only close the last stream - the close call will be send to the underlying streams, too.</p>\n", "title": "Is it necessary to close each nested OutputStream and Writer separately?", "tags": ["java", "file-io", "outputstream", "writer"], "link": "http://stackoverflow.com/questions/28276423/is-it-necessary-to-close-each-nested-outputstream-and-writer-separately/28276469#28276469", "question_id": 28276423, "answer_id": 28276469}, {"body": "<p>I'd rather use <code>try(...)</code> syntax (Java 7), e.g.</p>\n\n<pre><code>try (OutputStream outputStream = new FileOutputStream(createdFile)) {\n      ...\n}\n</code></pre>\n", "title": "Is it necessary to close each nested OutputStream and Writer separately?", "tags": ["java", "file-io", "outputstream", "writer"], "link": "http://stackoverflow.com/questions/28276423/is-it-necessary-to-close-each-nested-outputstream-and-writer-separately/28276483#28276483", "question_id": 28276423, "answer_id": 28276483}, {"body": "<p>You can close the outer most stream, in fact you don't need to retain all the streams wrapped and you can use Java 7 try-with-resources.</p>\n\n<pre><code>try (BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(\n                     new GZIPOutputStream(new FileOutputStream(createdFile)))) {\n     // write to the buffered writer\n}\n</code></pre>\n\n<hr>\n\n<p>If you subscribe to YAGNI, or you-aint-gonna-need-it, you should be only adding code you actually need. You shouldn't be adding code you imagine you might need but in reality doesn't do anything useful.</p>\n\n<p>Take this example and imagine what could possibly go wrong if you didn't do this and what the impact would be?</p>\n\n<pre><code>try (\n    OutputStream outputStream = new FileOutputStream(createdFile);\n    GZIPOutputStream gzipOutputStream = new GZIPOutputStream(outputStream);\n    OutputStreamWriter osw = new OutputStreamWriter(gzipOutputStream);\n    BufferedWriter bw = new BufferedWriter(osw)\n    ) {\n    // ...\n}\n</code></pre>\n\n<p>Lets start with FileOutputStream which calls <code>open</code> to do all the real work.</p>\n\n<pre><code>/**\n * Opens a file, with the specified name, for overwriting or appending.\n * @param name name of file to be opened\n * @param append whether the file is to be opened in append mode\n */\nprivate native void open(String name, boolean append)\n    throws FileNotFoundException;\n</code></pre>\n\n<p>If the file is not found, there is no underlying resource to close, so closing it won't make any difference.  If The file exists, it should be throwing a FileNotFoundException. So there is nothing to be gained by trying to close the resource from this line alone.</p>\n\n<p>The reason you need to close the file is when the file is opened successfully, but you later get an error.</p>\n\n<p>Lets look at the next stream <code>GZIPOutputStream</code></p>\n\n<p>There is code which can throw an exception</p>\n\n<pre><code>private void writeHeader() throws IOException {\n    out.write(new byte[] {\n                  (byte) GZIP_MAGIC,        // Magic number (short)\n                  (byte)(GZIP_MAGIC &gt;&gt; 8),  // Magic number (short)\n                  Deflater.DEFLATED,        // Compression method (CM)\n                  0,                        // Flags (FLG)\n                  0,                        // Modification time MTIME (int)\n                  0,                        // Modification time MTIME (int)\n                  0,                        // Modification time MTIME (int)\n                  0,                        // Modification time MTIME (int)\n                  0,                        // Extra flags (XFLG)\n                  0                         // Operating system (OS)\n              });\n}\n</code></pre>\n\n<p>This writes the header of the file.  Now it would be very unusual for you to be able to open a file for writing but not be able to write even 8 bytes to it, but lets imagine this could happen and we don't close the file afterwards.  What does happen to a file if it is not closed?  </p>\n\n<p>You don't get any unflushed writes, they are discarded and in this case, there is no successfully written bytes to the stream which isn't buffered at this point anyway.  But a file which is not closed doesn't live forever, instead FileOutputStream has</p>\n\n<pre><code>protected void finalize() throws IOException {\n    if (fd != null) {\n        if (fd == FileDescriptor.out || fd == FileDescriptor.err) {\n            flush();\n        } else {\n            /* if fd is shared, the references in FileDescriptor\n             * will ensure that finalizer is only called when\n             * safe to do so. All references using the fd have\n             * become unreachable. We can call close()\n             */\n            close();\n        }\n    }\n}\n</code></pre>\n\n<p>If you don't close a file at all, it gets closed anyway, just not immediately (and like I said, data which is left in a buffer will be lost this way, but there is none at this point)</p>\n\n<p>What is the consequence of not closing the file immediately?  Under normal conditions, you potentially lose some data, and you potentially run out of file descriptors.  But if you have a system where you can create files but you can't write anything to them, you have a bigger problem. i.e. it hard to imagine why you are repeatedly trying to create this file despite the fact you are failing.</p>\n\n<p>Both OutputStreamWriter and BufferedWriter don't throw IOException in their constructors, so it not clear what problem they would cause.  In The case of BufferedWriter, you could get an OutOfMemoryError.  In this case it will immediately trigger a GC, which as we have seen will close the file anyway.</p>\n", "title": "Is it necessary to close each nested OutputStream and Writer separately?", "tags": ["java", "file-io", "outputstream", "writer"], "link": "http://stackoverflow.com/questions/28276423/is-it-necessary-to-close-each-nested-outputstream-and-writer-separately/28276493#28276493", "question_id": 28276423, "answer_id": 28276493}, {"body": "<p>No, the topmost level <code>Stream</code> or <code>reader</code> will ensure that all <em>underlying</em> streams / readers are closed. </p>\n\n<p>Check the <code>close()</code> method <em>implementation</em> of your topmost level stream.</p>\n", "title": "Is it necessary to close each nested OutputStream and Writer separately?", "tags": ["java", "file-io", "outputstream", "writer"], "link": "http://stackoverflow.com/questions/28276423/is-it-necessary-to-close-each-nested-outputstream-and-writer-separately/28276497#28276497", "question_id": 28276423, "answer_id": 28276497}, {"body": "<p>Assuming all the streams get created okay, yes, just closing <code>bw</code> is fine <em>with those stream implementations</em>; but that's a big assumption.</p>\n\n<p>I'd use <a href=\"http://docs.oracle.com/javase/8/docs/technotes/guides/language/try-with-resources.html\">try-with-resources</a> (<a href=\"http://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html\">tutorial</a>) so that any issues constructing the subsequent streams that throw exceptions don't leave the previous streams hanging, and so you don't have to rely on the stream implementation having the call to close the underlying stream:</p>\n\n<pre><code>try (\n    OutputStream outputStream = new FileOutputStream(createdFile);\n    GZIPOutputStream gzipOutputStream = new GZIPOutputStream(outputStream);\n    OutputStreamWriter osw = new OutputStreamWriter(gzipOutputStream);\n    BufferedWriter bw = new BufferedWriter(osw)\n    ) {\n    // ...\n}\n</code></pre>\n\n<p>Note you no longer call <code>close</code> at all.</p>\n\n<p><strong>Important note</strong>: To have try-with-resources close them, you <em>must</em> assign the streams to variables as you open them, you cannot use nesting. If you use nesting, an exception during construction of one of the later streams (say, <code>GZIPOutputStream</code>) will leave any stream constructed by the nested calls inside it open. From <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-14.html#jls-14.20.3\">JLS \u00a714.20.3</a>:</p>\n\n<blockquote>\n  <p>A try-with-resources statement is parameterized with <strong>variables</strong> (known as resources) that are initialized before execution of the <code>try</code> block and closed automatically, in the reverse order from which they were initialized, after execution of the <code>try</code> block.</p>\n</blockquote>\n\n<p>Note the word \"variables\" <em>(my emphasis)</em>.</p>\n\n<p>E.g., don't do this:</p>\n\n<pre><code>// DON'T DO THIS\ntry (BufferedWriter bw = new BufferedWriter(\n        new OutputStreamWriter(\n        new GZIPOutputStream(\n        new FileOutputStream(createdFile))))) {\n    // ...\n}\n</code></pre>\n\n<p>...because an exception from the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/zip/GZIPOutputStream.html#GZIPOutputStream-java.io.OutputStream-\"><code>GZIPOutputStream(OutputStream)</code></a> constructor (which says it may throw <code>IOException</code>, and writes a header to the underlying stream) would leave the <code>FileOutputStream</code> open. Since some resources have constructors that may throw and others don't, it's a good habit to just list them separately.</p>\n\n<p>We can double-check our interpretation of that JLS section with this program:</p>\n\n<pre><code>public class Example {\n\n    private static class InnerMost implements AutoCloseable {\n        public InnerMost() throws Exception {\n            System.out.println(\"Constructing \" + this.getClass().getName());\n        }\n\n        @Override\n        public void close() throws Exception {\n            System.out.println(this.getClass().getName() + \" closed\");\n        }\n    }\n\n    private static class Middle implements AutoCloseable {\n        private AutoCloseable c;\n\n        public Middle(AutoCloseable c) {\n            System.out.println(\"Constructing \" + this.getClass().getName());\n            this.c = c;\n        }\n\n        @Override\n        public void close() throws Exception {\n            System.out.println(this.getClass().getName() + \" closed\");\n            c.close();\n        }\n    }\n\n    private static class OuterMost implements AutoCloseable {\n        private AutoCloseable c;\n\n        public OuterMost(AutoCloseable c) throws Exception {\n            System.out.println(\"Constructing \" + this.getClass().getName());\n            throw new Exception(this.getClass().getName() + \" failed\");\n        }\n\n        @Override\n        public void close() throws Exception {\n            System.out.println(this.getClass().getName() + \" closed\");\n            c.close();\n        }\n    }\n\n    public static final void main(String[] args) {\n        // DON'T DO THIS\n        try (OuterMost om = new OuterMost(\n                new Middle(\n                    new InnerMost()\n                    )\n                )\n            ) {\n            System.out.println(\"In try block\");\n        }\n        catch (Exception e) {\n            System.out.println(\"In catch block\");\n        }\n        finally {\n            System.out.println(\"In finally block\");\n        }\n        System.out.println(\"At end of main\");\n    }\n}\n</code></pre>\n\n<p>...which has the output:</p>\n\n<pre>\nConstructing Example$InnerMost\nConstructing Example$Middle\nConstructing Example$OuterMost\nIn catch block\nIn finally block\nAt end of main\n</pre>\n\n<p>Note that there are no calls to <code>close</code> there.</p>\n\n<p>If we fix <code>main</code>:</p>\n\n<pre><code>public static final void main(String[] args) {\n    try (\n        InnerMost im = new InnerMost();\n        Middle m = new Middle(im);\n        OuterMost om = new OuterMost(m)\n        ) {\n        System.out.println(\"In try block\");\n    }\n    catch (Exception e) {\n        System.out.println(\"In catch block\");\n    }\n    finally {\n        System.out.println(\"In finally block\");\n    }\n    System.out.println(\"At end of main\");\n}\n</code></pre>\n\n<p>then we get the appropriate <code>close</code> calls:</p>\n\n<pre>\nConstructing Example$InnerMost\nConstructing Example$Middle\nConstructing Example$OuterMost\nExample$Middle closed\nExample$InnerMost closed\nExample$InnerMost closed\nIn catch block\nIn finally block\nAt end of main\n</pre>\n\n<p>(Yes, two calls to <code>InnerMost#close</code> is correct; one is from <code>Middle</code>, the other from try-with-resources.)</p>\n", "title": "Is it necessary to close each nested OutputStream and Writer separately?", "tags": ["java", "file-io", "outputstream", "writer"], "link": "http://stackoverflow.com/questions/28276423/is-it-necessary-to-close-each-nested-outputstream-and-writer-separately/28276498#28276498", "question_id": 28276423, "answer_id": 28276498}, {"body": "<p>In Java 7, there is a feature <a href=\"http://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html\">try-with-resources</a>. You no need to explicitly close your streams, it will take care of that.</p>\n", "title": "Is it necessary to close each nested OutputStream and Writer separately?", "tags": ["java", "file-io", "outputstream", "writer"], "link": "http://stackoverflow.com/questions/28276423/is-it-necessary-to-close-each-nested-outputstream-and-writer-separately/28276507#28276507", "question_id": 28276423, "answer_id": 28276507}], "creation_date": 1422875435, "score": 93, "link": "http://stackoverflow.com/questions/28276423/is-it-necessary-to-close-each-nested-outputstream-and-writer-separately", "question_id": 28276423}, {"body": "<p>I installed maven by following this steps:(a tutorial)</p>\n\n<pre><code>JAVA_HOME=/Library/Java/Home\nexport M2_HOME=/Users/steven/zimmermann/maven\nexport M2=$M2_HOME/bin\nexport PATH=$M2:$PATH\n\necho $JAVA_HOME\necho $M2_HOME\necho $M2\necho $PATH\n\nnano .bash_profile\n</code></pre>\n\n<p>then I wrote the echo in the .bash_profile sth like this:</p>\n\n<pre><code>JAVA_HOME=/usr/libexec/java_home\nM2_HOME=/path/to/your/apache-maven-3.x.x\nM2=/path/to/your/apache-maven-3.x.x/bin\nPATH=/path/to/maven/bin:/$\u2026.bla-bla-bla\u2026\n</code></pre>\n\n<p>and also I wrote this in the .bashrc</p>\n\n<pre><code>export M2_HOME=/Users/steven/zimmermann/maven\nexport M2=$M2_HOME/bin\nexport PATH=$M2:$PATH\n</code></pre>\n\n<p>now when I want to check the version (mvn -v) I get the following Exception:\nI think there are some versions wrong, but I don't know. </p>\n\n<pre><code>Exception in thread \"main\" java.lang.UnsupportedClassVersionError: org/apache/maven/cli/MavenCli : Unsupported major.minor version 51.0\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClassCond(ClassLoader.java:637)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:621)\n    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)\n    at java.net.URLClassLoader.defineClass(URLClassLoader.java:283)\n    at java.net.URLClassLoader.access$000(URLClassLoader.java:58)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:197)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:190)\n    at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClassFromSelf(ClassRealm.java:401)\n    at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:42)\n    at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadClass(ClassRealm.java:271)\n    at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:254)\n    at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:239)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.getMainClass(Launcher.java:144)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:266)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\n</code></pre>\n\n<p>Additional Informations:</p>\n\n<p>java -version</p>\n\n<pre><code>java version \"1.8.0_40\"\nJava(TM) SE Runtime Environment (build 1.8.0_40-b27)\nJava HotSpot(TM) 64-Bit Server VM (build 25.40-b25, mixed mode)\n</code></pre>\n\n<p>javac -version</p>\n\n<pre><code>javac 1.8.0_40\n</code></pre>\n\n<p>Thank you!</p>\n", "tags": ["java", "osx", "maven", "install", "unsupported-class-version"], "title": "Maven Installation OSX Error Unsupported major.minor version 51.0", "answers": [{"body": "<p>Please rather try</p>\n\n<pre><code>$JAVA_HOME/bin/java -version\n</code></pre>\n\n<p>Maven uses $JAVA_HOME for classpath resolution of JRE libs.\nTo be sure to use a certain JDK set it explicitly before compiling, for example:</p>\n\n<pre><code>export JAVA_HOME=/usr/java/jdk1.7.0_51\n</code></pre>\n\n<p>Isn't there a version &lt; 1.7 and you're using Maven 3.3.1? In this case the reason is a new prerequisite: <a href=\"https://jira.codehaus.org/browse/MNG-5780\">https://jira.codehaus.org/browse/MNG-5780</a>.</p>\n", "title": "Maven Installation OSX Error Unsupported major.minor version 51.0", "tags": ["java", "osx", "maven", "install", "unsupported-class-version"], "link": "http://stackoverflow.com/questions/29255495/maven-installation-osx-error-unsupported-major-minor-version-51-0/29257385#29257385", "question_id": 29255495, "answer_id": 29257385}, {"body": "<p>The problem is because you haven't set JAVA_HOME in Mac properly. In order to do that, you should do set it like this:</p>\n\n<p><strong><code>export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home</code></strong></p>\n\n<p>In my case my JDK installation is jdk1.8.0_40, make sure you type yours.</p>\n\n<p>Then you can use maven commands.</p>\n\n<p>Regards!</p>\n", "title": "Maven Installation OSX Error Unsupported major.minor version 51.0", "tags": ["java", "osx", "maven", "install", "unsupported-class-version"], "link": "http://stackoverflow.com/questions/29255495/maven-installation-osx-error-unsupported-major-minor-version-51-0/29265245#29265245", "question_id": 29255495, "answer_id": 29265245}, {"body": "<p>A dynamic <code>$HOME/.zshrc</code> solution, if you're like me ie. Linux @ work; MBP/A @ home</p>\n\n<pre><code>if [[ $(uname) == \"Darwin\" ]]; then export OSX=1; fi\nif [[ $(uname) ==  \"Linux\" ]]; then export LINUX=1; fi\n\nif [[ -n $OSX ]]; then\n        export JAVA_HOME=$(/usr/libexec/java_home)\nelse\n        export JAVA_HOME=/usr/lib/jvm/default-java\nfi\n</code></pre>\n", "title": "Maven Installation OSX Error Unsupported major.minor version 51.0", "tags": ["java", "osx", "maven", "install", "unsupported-class-version"], "link": "http://stackoverflow.com/questions/29255495/maven-installation-osx-error-unsupported-major-minor-version-51-0/30542424#30542424", "question_id": 29255495, "answer_id": 30542424}, {"body": "<p>I solved it putting a old version of maven (2.x), using brew:</p>\n\n<pre><code>brew uninstall maven\nbrew tap homebrew/versions \nbrew install maven2\n</code></pre>\n", "title": "Maven Installation OSX Error Unsupported major.minor version 51.0", "tags": ["java", "osx", "maven", "install", "unsupported-class-version"], "link": "http://stackoverflow.com/questions/29255495/maven-installation-osx-error-unsupported-major-minor-version-51-0/35727904#35727904", "question_id": 29255495, "answer_id": 35727904}], "creation_date": 1427285995, "score": 89, "link": "http://stackoverflow.com/questions/29255495/maven-installation-osx-error-unsupported-major-minor-version-51-0", "question_id": 29255495}, {"body": "<p>I have the following Java code with several big arrays which never change their size. It runs in 1100 ms on my computer.</p>\n\n<p>I implemented the same code in C++ and used <code>std::vector</code>.</p>\n\n<p>The time of the C++ implementation which runs the exact same code is 8800 ms on my computer. What did I do wrong, so that it runs this slowly?</p>\n\n<p>Basically the code does the following:</p>\n\n<pre><code>for (int i = 0; i &lt; numberOfCells; ++i) {\n        h[i] =  h[i] + 1;\n        floodedCells[i] =  !floodedCells[i];\n        floodedCellsTimeInterval[i] =  !floodedCellsTimeInterval[i];\n        qInflow[i] =  qInflow[i] + 1;\n}\n</code></pre>\n\n<p>It iterates through different arrays with a size of around 20000.</p>\n\n<p>You can find both implementations under the following links:</p>\n\n<ul>\n<li>Java: <a href=\"https://ideone.com/R8KqjT\">https://ideone.com/R8KqjT</a></li>\n<li>C++: <a href=\"https://ideone.com/Lu7RpE\">https://ideone.com/Lu7RpE</a></li>\n</ul>\n\n<p>(On ideone I could only run the loop 400 times instead of 2000 times because of the time limitation. But even here there is a difference of three times)</p>\n", "tags": ["java", "c++", "arrays", "performance", "stdvector"], "title": "Java 8 times faster with arrays than std::vector in C++. What did I do wrong?", "answers": [{"body": "<p>Yep, the cache in the c++ version takes a hammering. It seems the JIT is better equipped to handle this. </p>\n\n<p>If you change the outer <code>for</code> in isUpdateNeeded() to shorter snippets. The difference goes away. </p>\n\n<p>The sample below produces a 4x speedup. </p>\n\n<pre><code>void isUpdateNeeded() {\n    for (int i = 0; i &lt; numberOfCells; ++i) {\n        h[i] =  h[i] + 1;\n        floodedCells[i] =  !floodedCells[i];\n        floodedCellsTimeInterval[i] =  !floodedCellsTimeInterval[i];\n        qInflow[i] =  qInflow[i] + 1;\n        qStartTime[i] =  qStartTime[i] + 1;\n        qEndTime[i] =  qEndTime[i] + 1;\n    }\n\n    for (int i = 0; i &lt; numberOfCells; ++i) {\n        lowerFloorCells[i] =  lowerFloorCells[i] + 1;\n        cellLocationX[i] =  cellLocationX[i] + 1;\n        cellLocationY[i] =  cellLocationY[i] + 1;\n        cellLocationZ[i] =  cellLocationZ[i] + 1;\n        levelOfCell[i] =  levelOfCell[i] + 1;\n        valueOfCellIds[i] =  valueOfCellIds[i] + 1;\n        h0[i] =  h0[i] + 1;\n        vU[i] =  vU[i] + 1;\n        vV[i] =  vV[i] + 1;\n        vUh[i] =  vUh[i] + 1;\n        vVh[i] =  vVh[i] + 1;\n    }\n    for (int i = 0; i &lt; numberOfCells; ++i) {\n        vUh0[i] =  vUh0[i] + 1;\n        vVh0[i] =  vVh0[i] + 1;\n        ghh[i] =  ghh[i] + 1;\n        sfx[i] =  sfx[i] + 1;\n        sfy[i] =  sfy[i] + 1;\n        qIn[i] =  qIn[i] + 1;\n        for(int j = 0; j &lt; nEdges; ++j) {\n            neighborIds[i * nEdges + j] = neighborIds[i * nEdges + j] + 1;\n        }\n        for(int j = 0; j &lt; nEdges; ++j) {\n            typeInterface[i * nEdges + j] = typeInterface[i * nEdges + j] + 1;\n        }\n    }\n\n}\n</code></pre>\n\n<p>This shows to a reasonable degree that cache misses are the reason for the slowdown. It is also important to note that the variables are not dependent so a threaded solution is easily created. </p>\n\n<h1>Order restored</h1>\n\n<p>As per stefans comment I tried grouping them in a struct using the original sizes. This removes the immediate cache pressure in a similar fashion. The result is that the c++ (CCFLAG -O3) version is about 15% faster than the java version. </p>\n\n<p><em>Varning neither short nor pretty.</em></p>\n\n<pre><code>#include &lt;vector&gt;\n#include &lt;cmath&gt;\n#include &lt;iostream&gt;\n\n\n\nclass FloodIsolation {\n    struct item{\n      char floodedCells;\n      char floodedCellsTimeInterval;\n      double valueOfCellIds;\n      double h;\n      double h0;\n      double vU;\n      double vV;\n      double vUh;\n      double vVh;\n      double vUh0;\n      double vVh0;\n      double sfx;\n      double sfy;\n      double qInflow;\n      double qStartTime;\n      double qEndTime;\n      double qIn;\n      double nx;\n      double ny;\n      double ghh;\n      double floorLevels;\n      int lowerFloorCells;\n      char flagInterface;\n      char floorCompletelyFilled;\n      double cellLocationX;\n      double cellLocationY;\n      double cellLocationZ;\n      int levelOfCell;\n    };\n    struct inner_item{\n      int typeInterface;\n      int neighborIds;\n    };\n\n    std::vector&lt;inner_item&gt; inner_data;\n    std::vector&lt;item&gt; data;\n\npublic:\n    FloodIsolation() :\n            numberOfCells(20000), inner_data(numberOfCells * nEdges), data(numberOfCells)\n   {\n\n    }\n    ~FloodIsolation(){\n    }\n\n    void isUpdateNeeded() {\n        for (int i = 0; i &lt; numberOfCells; ++i) {\n            data[i].h = data[i].h + 1;\n            data[i].floodedCells = !data[i].floodedCells;\n            data[i].floodedCellsTimeInterval = !data[i].floodedCellsTimeInterval;\n            data[i].qInflow = data[i].qInflow + 1;\n            data[i].qStartTime = data[i].qStartTime + 1;\n            data[i].qEndTime = data[i].qEndTime + 1;\n            data[i].lowerFloorCells = data[i].lowerFloorCells + 1;\n            data[i].cellLocationX = data[i].cellLocationX + 1;\n            data[i].cellLocationY = data[i].cellLocationY + 1;\n            data[i].cellLocationZ = data[i].cellLocationZ + 1;\n            data[i].levelOfCell = data[i].levelOfCell + 1;\n            data[i].valueOfCellIds = data[i].valueOfCellIds + 1;\n            data[i].h0 = data[i].h0 + 1;\n            data[i].vU = data[i].vU + 1;\n            data[i].vV = data[i].vV + 1;\n            data[i].vUh = data[i].vUh + 1;\n            data[i].vVh = data[i].vVh + 1;\n            data[i].vUh0 = data[i].vUh0 + 1;\n            data[i].vVh0 = data[i].vVh0 + 1;\n            data[i].ghh = data[i].ghh + 1;\n            data[i].sfx = data[i].sfx + 1;\n            data[i].sfy = data[i].sfy + 1;\n            data[i].qIn = data[i].qIn + 1;\n            for(int j = 0; j &lt; nEdges; ++j) {\n                inner_data[i * nEdges + j].neighborIds = inner_data[i * nEdges + j].neighborIds + 1;\n                inner_data[i * nEdges + j].typeInterface = inner_data[i * nEdges + j].typeInterface + 1;\n            }\n        }\n\n    }\n\n    static const int nEdges;\nprivate:\n\n    const int numberOfCells;\n\n};\n\nconst int FloodIsolation::nEdges = 6;\n\nint main() {\n    FloodIsolation isolation;\n    clock_t start = clock();\n    for (int i = 0; i &lt; 4400; ++i) {\n        if(i % 100 == 0) {\n            std::cout &lt;&lt; i &lt;&lt; \"\\n\";\n        }\n        isolation.isUpdateNeeded();\n    }\n\n    clock_t stop = clock();\n    std::cout &lt;&lt; \"Time: \" &lt;&lt; difftime(stop, start) / 1000 &lt;&lt; \"\\n\";\n}\n</code></pre>\n\n<p>My result differs slightly from Jerry Coffins for the original sizes. For me the differences remains.  It might well be my java version, 1.7.0_75. </p>\n", "title": "Java 8 times faster with arrays than std::vector in C++. What did I do wrong?", "tags": ["java", "c++", "arrays", "performance", "stdvector"], "link": "http://stackoverflow.com/questions/29656648/java-8-times-faster-with-arrays-than-stdvector-in-c-what-did-i-do-wrong/29657336#29657336", "question_id": 29656648, "answer_id": 29657336}, {"body": "<p>As @Stefan guessed in a comment on @CaptainGiraffe's answer, you gain quite a bit by using a vector of structs instead of a struct of vectors. Corrected code looks like this:</p>\n\n<pre><code>#include &lt;vector&gt;\n#include &lt;cmath&gt;\n#include &lt;iostream&gt;\n#include &lt;time.h&gt;\n\nclass FloodIsolation {\npublic:\n    FloodIsolation() :\n            h(0),\n            floodedCells(0),\n            floodedCellsTimeInterval(0),\n            qInflow(0),\n            qStartTime(0),\n            qEndTime(0),\n            lowerFloorCells(0),\n            cellLocationX(0),\n            cellLocationY(0),\n            cellLocationZ(0),\n            levelOfCell(0),\n            valueOfCellIds(0),\n            h0(0),\n            vU(0),\n            vV(0),\n            vUh(0),\n            vVh(0),\n            vUh0(0),\n            vVh0(0),\n            ghh(0),\n            sfx(0),\n            sfy(0),\n            qIn(0),\n            typeInterface(nEdges, 0),\n            neighborIds(nEdges, 0)\n    {\n    }\n\n    ~FloodIsolation(){\n    }\n\n    void Update() {\n        h =  h + 1;\n        floodedCells =  !floodedCells;\n        floodedCellsTimeInterval =  !floodedCellsTimeInterval;\n        qInflow =  qInflow + 1;\n        qStartTime =  qStartTime + 1;\n        qEndTime =  qEndTime + 1;\n        lowerFloorCells =  lowerFloorCells + 1;\n        cellLocationX =  cellLocationX + 1;\n        cellLocationY =  cellLocationY + 1;\n        cellLocationZ =  cellLocationZ + 1;\n        levelOfCell =  levelOfCell + 1;\n        valueOfCellIds =  valueOfCellIds + 1;\n        h0 =  h0 + 1;\n        vU =  vU + 1;\n        vV =  vV + 1;\n        vUh =  vUh + 1;\n        vVh =  vVh + 1;\n        vUh0 =  vUh0 + 1;\n        vVh0 =  vVh0 + 1;\n        ghh =  ghh + 1;\n        sfx =  sfx + 1;\n        sfy =  sfy + 1;\n        qIn =  qIn + 1;\n        for(int j = 0; j &lt; nEdges; ++j) {\n            ++typeInterface[j];\n            ++neighborIds[j];\n        }       \n    }\n\nprivate:\n\n    static const int nEdges = 6;\n    bool floodedCells;\n    bool floodedCellsTimeInterval;\n\n    std::vector&lt;int&gt; neighborIds;\n    double valueOfCellIds;\n    double h;\n    double h0;\n    double vU;\n    double vV;\n    double vUh;\n    double vVh;\n    double vUh0;\n    double vVh0;\n    double ghh;\n    double sfx;\n    double sfy;\n    double qInflow;\n    double qStartTime;\n    double qEndTime;\n    double qIn;\n    double nx;\n    double ny;\n    double floorLevels;\n    int lowerFloorCells;\n    bool flagInterface;\n    std::vector&lt;int&gt; typeInterface;\n    bool floorCompleteleyFilled;\n    double cellLocationX;\n    double cellLocationY;\n    double cellLocationZ;\n    int levelOfCell;\n};\n\nint main() {\n    std::vector&lt;FloodIsolation&gt; isolation(20000);\n    clock_t start = clock();\n    for (int i = 0; i &lt; 400; ++i) {\n        if(i % 100 == 0) {\n            std::cout &lt;&lt; i &lt;&lt; \"\\n\";\n        }\n\n        for (auto &amp;f : isolation)\n            f.Update();\n    }\n    clock_t stop = clock();\n    std::cout &lt;&lt; \"Time: \" &lt;&lt; difftime(stop, start) / 1000 &lt;&lt; \"\\n\";\n}\n</code></pre>\n\n<p>Compiled with the compiler from VC++ 2015 CTP, using <code>-EHsc -O2b2 -GL -Qpar</code>, I get results like:</p>\n\n<pre><code>0\n100\n200\n300\nTime: 0.135\n</code></pre>\n\n<p>Compiling with g++ produces a result that's slightly slower:</p>\n\n<pre><code>0\n100\n200\n300\nTime: 0.156\n</code></pre>\n\n<p>On the same hardware, using the compiler/JVM from Java 8u45, I get results like:</p>\n\n<pre><code>0\n100\n200\n300\nTime: 181\n</code></pre>\n\n<p>This is around 35% slower than the version from VC++, and about 16% slower than the version from g++.</p>\n\n<p>If we increase the number of iterations to the desired 2000, the difference drops to only 3%, suggesting that part of the advantage of C++ in this case is simply faster loading (a perennial problem with Java), not really in execution itself. This doesn't strike me as surprising in this case--the computation being measured (in the posted code) is so trivial that I doubt most compilers can do a whole lot to optimize it.</p>\n", "title": "Java 8 times faster with arrays than std::vector in C++. What did I do wrong?", "tags": ["java", "c++", "arrays", "performance", "stdvector"], "link": "http://stackoverflow.com/questions/29656648/java-8-times-faster-with-arrays-than-stdvector-in-c-what-did-i-do-wrong/29658071#29658071", "question_id": 29656648, "answer_id": 29658071}, {"body": "<p>Here is the C++ version with the per-node data gathered into a structure, and a single vector of that structure used:</p>\n\n<pre><code>#include &lt;vector&gt;\n#include &lt;cmath&gt;\n#include &lt;iostream&gt;\n\n\n\nclass FloodIsolation {\npublic:\n  FloodIsolation() :\n      numberOfCells(20000),\n      data(numberOfCells)\n  {\n  }\n  ~FloodIsolation(){\n  }\n\n  void isUpdateNeeded() {\n    for (int i = 0; i &lt; numberOfCells; ++i) {\n       data[i].h = data[i].h + 1;\n       data[i].floodedCells = !data[i].floodedCells;\n       data[i].floodedCellsTimeInterval = !data[i].floodedCellsTimeInterval;\n       data[i].qInflow = data[i].qInflow + 1;\n       data[i].qStartTime = data[i].qStartTime + 1;\n       data[i].qEndTime = data[i].qEndTime + 1;\n       data[i].lowerFloorCells = data[i].lowerFloorCells + 1;\n       data[i].cellLocationX = data[i].cellLocationX + 1;\n       data[i].cellLocationY = data[i].cellLocationY + 1;\n       data[i].cellLocationZ = data[i].cellLocationZ + 1;\n       data[i].levelOfCell = data[i].levelOfCell + 1;\n       data[i].valueOfCellIds = data[i].valueOfCellIds + 1;\n       data[i].h0 = data[i].h0 + 1;\n       data[i].vU = data[i].vU + 1;\n       data[i].vV = data[i].vV + 1;\n       data[i].vUh = data[i].vUh + 1;\n       data[i].vVh = data[i].vVh + 1;\n       data[i].vUh0 = data[i].vUh0 + 1;\n       data[i].vVh0 = data[i].vVh0 + 1;\n       data[i].ghh = data[i].ghh + 1;\n       data[i].sfx = data[i].sfx + 1;\n       data[i].sfy = data[i].sfy + 1;\n       data[i].qIn = data[i].qIn + 1;\n\n\n      for(int j = 0; j &lt; nEdges; ++j) {\n        data[i].flagInterface[j] = !data[i].flagInterface[j];\n        data[i].typeInterface[j] = data[i].typeInterface[j] + 1;\n        data[i].neighborIds[j] = data[i].neighborIds[j] + 1;\n      }\n    }\n\n  }\n\nprivate:\n\n  const int numberOfCells;\n  static const int nEdges = 6;\n  struct data_t {\n    bool floodedCells = 0;\n    bool floodedCellsTimeInterval = 0;\n\n    double valueOfCellIds = 0;\n    double h = 0;\n\n    double h0 = 0;\n    double vU = 0;\n    double vV = 0;\n    double vUh = 0;\n    double vVh = 0;\n    double vUh0 = 0;\n    double vVh0 = 0;\n    double ghh = 0;\n    double sfx = 0;\n    double sfy = 0;\n    double qInflow = 0;\n    double qStartTime = 0;\n    double qEndTime = 0;\n    double qIn = 0;\n    double nx = 0;\n    double ny = 0;\n    double floorLevels = 0;\n    int lowerFloorCells = 0;\n    bool floorCompleteleyFilled = 0;\n    double cellLocationX = 0;\n    double cellLocationY = 0;\n    double cellLocationZ = 0;\n    int levelOfCell = 0;\n    bool flagInterface[nEdges] = {};\n    int typeInterface[nEdges] = {};\n    int neighborIds[nEdges] = {};\n  };\n  std::vector&lt;data_t&gt; data;\n\n};\n\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  FloodIsolation isolation;\n  clock_t start = clock();\n  for (int i = 0; i &lt; 400; ++i) {\n    if(i % 100 == 0) {\n      std::cout &lt;&lt; i &lt;&lt; \"\\n\";\n    }\n    isolation.isUpdateNeeded();\n  }\n  clock_t stop = clock();\n  std::cout &lt;&lt; \"Time: \" &lt;&lt; difftime(stop, start) / 1000 &lt;&lt; \"\\n\";\n}\n</code></pre>\n\n<p><a href=\"https://ideone.com/AZQ5oB\">live example</a></p>\n\n<p>The time is now 2x the speed of the Java version.  (846 vs 1631).</p>\n\n<p>Odds are the JIT noticed the cache burning of accessing data all over the place, and transformed your code into a logically similar but more efficient order.</p>\n\n<p>I also turned off stdio synchronization, as that is only needed if you mix <code>printf</code>/<code>scanf</code> with C++ <code>std::cout</code> and <code>std::cin</code>.  As it happens, you only print out a few values, but C++'s default behavior for printing is overly paranoid and inefficient.</p>\n\n<p>If <code>nEdges</code> is not an actual constant value, then the 3 \"array\" values will have to be stripped out of the <code>struct</code>.  That shouldn't cause a huge performance hit.</p>\n\n<p>You might be able to get another performance boost by sorting the values in that <code>struct</code> by decreasing size, thus reducing memory footprint (and sorting access as well when it doesn't matter).  But I am unsure.</p>\n\n<p>A rule of thumb is that a single cache miss is 100x more expensive than an instruction.  Arranging your data to have cache coherency has lots of value.</p>\n\n<p>If rearranging the data into a <code>struct</code> is infeasible, you can change your iteration to be over each container in turn.</p>\n\n<p>As an aside, note that the Java and C++ versions had some subtle differences in them.  The one I spotted was that the Java version has 3 variables in the \"for each edge\" loop, while the C++ one only had 2.  I made mine match the Java.  I don't know if there are others.</p>\n", "title": "Java 8 times faster with arrays than std::vector in C++. What did I do wrong?", "tags": ["java", "c++", "arrays", "performance", "stdvector"], "link": "http://stackoverflow.com/questions/29656648/java-8-times-faster-with-arrays-than-stdvector-in-c-what-did-i-do-wrong/29658124#29658124", "question_id": 29656648, "answer_id": 29658124}, {"body": "<p>I suspect this is about allocation of memory.</p>\n\n<p>I am thinking that <code>Java</code> grabs a large contiguous block at program startup whereas <code>C++</code> asks the OS for bits and pieces as it goes along.</p>\n\n<p>To put that theory to the test I made one modification to the <code>C++</code> version and it suddenly started running slightly faster than the <code>Java</code> version:</p>\n\n<pre><code>int main() {\n    {\n        // grab a large chunk of contiguous memory and liberate it\n        std::vector&lt;double&gt; alloc(20000 * 20);\n    }\n    FloodIsolation isolation;\n    clock_t start = clock();\n    for (int i = 0; i &lt; 400; ++i) {\n        if(i % 100 == 0) {\n            std::cout &lt;&lt; i &lt;&lt; \"\\n\";\n        }\n        isolation.isUpdateNeeded();\n    }\n    clock_t stop = clock();\n    std::cout &lt;&lt; \"Time: \" &lt;&lt; (1000 * difftime(stop, start) / CLOCKS_PER_SEC) &lt;&lt; \"\\n\";\n}\n</code></pre>\n\n<p>Runtime <em>without</em> the preallocating vector:</p>\n\n<pre><code>0\n100\n200\n300\nTime: 1250.31\n</code></pre>\n\n<p>Runtime <em>with</em> the preallocating vector:</p>\n\n<pre><code>0\n100\n200\n300\nTime: 331.214\n</code></pre>\n\n<p>Runtime for <code>Java</code> version:</p>\n\n<pre><code>0\n100\n200\n300\nTime: 407\n</code></pre>\n", "title": "Java 8 times faster with arrays than std::vector in C++. What did I do wrong?", "tags": ["java", "c++", "arrays", "performance", "stdvector"], "link": "http://stackoverflow.com/questions/29656648/java-8-times-faster-with-arrays-than-stdvector-in-c-what-did-i-do-wrong/29659791#29659791", "question_id": 29656648, "answer_id": 29659791}], "creation_date": 1429118210, "score": 87, "link": "http://stackoverflow.com/questions/29656648/java-8-times-faster-with-arrays-than-stdvector-in-c-what-did-i-do-wrong", "question_id": 29656648}, {"body": "<pre><code>class ThreadSafeClass extends Thread\n{\n     private static int count = 0;\n\n     public synchronized static void increment()\n     {\n         count++;\n     }\n\n     public synchronized void decrement()\n     {\n         count--;\n     }\n}\n</code></pre>\n\n<p>Can anyone explain why above class is not thread safe?</p>\n", "tags": ["java", "multithreading", "thread-safety"], "title": "Why is this class not thread safe?", "answers": [{"body": "<p>Since the <code>increment</code> method is <code>static</code> it will synchronize on the class object for the <code>ThreadSafeClass</code>. The <code>decrement</code> method is not static and will synchronize on the instance used to call it. I.e., they will synchronize on different objects and thus two different threads can execute the methods at the same time. Since the <code>++</code> and <code>--</code> operations are not atomic the class is not thread safe.</p>\n\n<p>Also, since <code>count</code> is <code>static</code>, modifying it from <code>decrement</code> which is a synchronized <em>instance</em> method is unsafe since it can be called on different instances and modify <code>count</code> concurrently that way.</p>\n", "title": "Why is this class not thread safe?", "tags": ["java", "multithreading", "thread-safety"], "link": "http://stackoverflow.com/questions/30208524/why-is-this-class-not-thread-safe/30208673#30208673", "question_id": 30208524, "answer_id": 30208673}, {"body": "<p>You have two synchronized methods, but one of them is static and the other is not. When accessing a synchronized method, based on it's type (static or non-static), a different object will be locked. For a static method, a lock will be put on the Class object, while for the non-static block, a lock will be put on the instance of the class that runs the method. Because you have two different locked objects, you can have two threads that modify the same object simultaneously.</p>\n", "title": "Why is this class not thread safe?", "tags": ["java", "multithreading", "thread-safety"], "link": "http://stackoverflow.com/questions/30208524/why-is-this-class-not-thread-safe/30208723#30208723", "question_id": 30208524, "answer_id": 30208723}, {"body": "<p>Since two different methods, one is instance level and other is class level, so you need to lock on 2 different objects to make it ThreadSafe</p>\n", "title": "Why is this class not thread safe?", "tags": ["java", "multithreading", "thread-safety"], "link": "http://stackoverflow.com/questions/30208524/why-is-this-class-not-thread-safe/30211934#30211934", "question_id": 30208524, "answer_id": 30211934}, {"body": "<ol>\n<li><code>decrement</code> is locking on a different thing to <code>increment</code> so they do not prevent each other from running.</li>\n<li>Calling <code>decrement</code> on one instance is locking on a different thing to calling <code>decrement</code> on another instance, but they are affecting the same thing.</li>\n</ol>\n\n<p>The first means that overlapping calls to <code>increment</code> and <code>decrement</code> could result in a cancel-out (correct), an increment or a decrement.</p>\n\n<p>The second means that two overlapping calls to <code>decrement</code> on different instances could result in a double decrement (correct) or a single decrement.</p>\n", "title": "Why is this class not thread safe?", "tags": ["java", "multithreading", "thread-safety"], "link": "http://stackoverflow.com/questions/30208524/why-is-this-class-not-thread-safe/30212517#30212517", "question_id": 30208524, "answer_id": 30212517}, {"body": "<blockquote>\n  <p>Can anyone explain why above class is not thread safe?</p>\n</blockquote>\n\n<ul>\n<li><code>increment</code> being static, synchronization will be done on the class itself.</li>\n<li><code>decrement</code> being not static, synchronization will be done on the object instantiation, but that doesn't secure anything as <code>count</code> is static.</li>\n</ul>\n\n<p>I'd like to add that to declare a thread-safe counter, I believe the simplest way is to use <a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/atomic/AtomicInteger.html\"><code>AtomicInteger</code></a> instead of a primitive int.</p>\n\n<p>Let me redirect you to the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/atomic/package-summary.html\"><code>java.util.concurrent.atomic</code></a> package-info.</p>\n", "title": "Why is this class not thread safe?", "tags": ["java", "multithreading", "thread-safety"], "link": "http://stackoverflow.com/questions/30208524/why-is-this-class-not-thread-safe/30214196#30214196", "question_id": 30208524, "answer_id": 30214196}, {"body": "<p>Others' answers are pretty good explained the reason. I just add something to summarize <code>synchronized</code>:</p>\n\n<pre><code>public class A {\n    public synchronized void fun1() {}\n\n    public synchronized void fun2() {}\n\n    public void fun3() {}\n\n    public static synchronized void fun4() {}\n\n    public static void fun5() {}\n}\n\nA a1 = new A();\n</code></pre>\n\n<p><code>synchronized</code> on <code>fun1</code> and <code>fun2</code> is synchronized on instance object level. <code>synchronized</code> on <code>fun4</code> is synchronized on class object level. Which means:</p>\n\n<ol>\n<li>When 2 threads call <code>a1.fun1()</code> at same time, latter call will be blocked.</li>\n<li>When thread 1 call <code>a1.fun1()</code> and thread 2 call <code>a1.fun2()</code> at same time, latter call will be blocked.</li>\n<li>When thread 1 call <code>a1.fun1()</code> and thread 2 call <code>a1.fun3()</code> at same time, no blocking, the 2 methods will be executed at same time.</li>\n<li>When thread 1 call <code>A.fun4()</code>, if other threads call <code>A.fun4()</code> or <code>A.fun5()</code> at same time, latter calls will be blocked since <code>synchronized</code> on <code>fun4</code> is class level.</li>\n<li>When thread 1 call <code>A.fun4()</code>, thread 2 call <code>a1.fun1()</code> at same time, no blocking, the 2 methods will be executed at same time.</li>\n</ol>\n", "title": "Why is this class not thread safe?", "tags": ["java", "multithreading", "thread-safety"], "link": "http://stackoverflow.com/questions/30208524/why-is-this-class-not-thread-safe/30283730#30283730", "question_id": 30208524, "answer_id": 30283730}, {"body": "<p>As explained in other answers, your code is <strong><em>not Thread safe</em></strong> since static method <code>increment()</code> locks Class monitor and  non-static method <code>decrement()</code> locks Object monitor. </p>\n\n<p>For this code example, better solution exists without <code>synchronzed</code> keyword usage. \nYou have to use <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/atomic/AtomicInteger.html\" rel=\"nofollow\">AtomicInteger</a>  to achieve Thread safety.</p>\n\n<p>Thread safe using <code>AtomicInteger</code>:</p>\n\n<pre><code>import java.util.concurrent.atomic.AtomicInteger;\n\nclass ThreadSafeClass extends Thread {\n\n    private static AtomicInteger count = new AtomicInteger(0);\n\n    public static void increment() {\n        count.incrementAndGet();\n    }\n\n    public static void decrement() {\n        count.decrementAndGet();\n    }\n\n    public static int value() {\n        return count.get();\n    }\n\n}\n</code></pre>\n", "title": "Why is this class not thread safe?", "tags": ["java", "multithreading", "thread-safety"], "link": "http://stackoverflow.com/questions/30208524/why-is-this-class-not-thread-safe/37353170#37353170", "question_id": 30208524, "answer_id": 37353170}], "creation_date": 1431502691, "score": 86, "link": "http://stackoverflow.com/questions/30208524/why-is-this-class-not-thread-safe", "question_id": 30208524}, {"body": "<p>In this code when I create an Object in the <code>main</code> method and then call that objects method: <code>ff.twentyDivCount(i)</code>(runs in 16010 ms) , it runs much faster than calling it using this annotation: <code>twentyDivCount(i)</code>(runs in 59516 ms). Of course, when I run it without creating an object, I make the method static, so it can be called in the main.</p>\n\n<pre><code>public class ProblemFive {\n\n    // Counts the number of numbers that the entry is evenly divisible by, as max is 20\n    int twentyDivCount(int a) {    // Change to static int.... when using it directly\n        int count = 0;\n        for (int i = 1; i&lt;21; i++) {\n\n            if (a % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    public static void main(String[] args) {\n        long startT = System.currentTimeMillis();;\n        int start = 500000000;\n        int result = start;\n\n        ProblemFive ff = new ProblemFive();\n\n        for (int i = start; i &gt; 0; i--) {\n\n            int temp = ff.twentyDivCount(i); // Faster way\n                       // twentyDivCount(i) - slower\n\n            if (temp == 20) {\n                result = i;\n                System.out.println(result);\n            }\n        }\n\n        System.out.println(result);\n\n        long end = System.currentTimeMillis();;\n        System.out.println((end - startT) + \" ms\");\n    }\n}\n</code></pre>\n\n<p>EDIT: So far it seems that different machines produce different results, but using JRE 1.8.* is where the original result seems to be consistently reproduced.</p>\n", "tags": ["java", "performance", "object", "methods", "static"], "title": "Large difference in speed of equivalent static and non static methods", "answers": [{"body": "<p>Using JRE 1.8.0_45 I get similar results.</p>\n\n<p>Investigation:</p>\n\n<ol>\n<li>running java with the <code>-XX:+UnlockDiagnosticVMOptions -XX:+PrintCompilation -XX:+PrintInlining</code> VM options shows that both methods get compiled and inlined</li>\n<li>Looking at the generated assembly for the methods themselves shows no significant difference</li>\n<li>Once they get inlined, however, the generated assembly within <code>main</code> is very different, with the instance method being more aggressively optimised, especially in terms of loop unrolling</li>\n</ol>\n\n<p>I then ran your test again but with different loop unrolling settings to confirm the suspicion above. I ran your code with:</p>\n\n<ul>\n<li><code>-XX:LoopUnrollLimit=0</code> and both methods run slowly (similar to the static method with the default options).</li>\n<li><code>-XX:LoopUnrollLimit=100</code> and both methods run fast (similar to the instance method with the default options).</li>\n</ul>\n\n<p>As a conclusion it seems that, with the default settings, the JIT <em>of hotspot 1.8.0_45</em> is not able to unroll the loop when the method is static (although I'm not sure why it behaves that way). Other JVMs may yield different results.</p>\n", "title": "Large difference in speed of equivalent static and non static methods", "tags": ["java", "performance", "object", "methods", "static"], "link": "http://stackoverflow.com/questions/30454904/large-difference-in-speed-of-equivalent-static-and-non-static-methods/30456117#30456117", "question_id": 30454904, "answer_id": 30456117}, {"body": "<p>When this is executed in debug mode, the numbers are the same for the instance and static cases. That further means that the JIT hesitates to compile the code to native code in the static case the same way as it does in the instance method case.</p>\n\n<p>Why does it do so? It is hard to say; probably it would do the right thing if this were a larger application...</p>\n", "title": "Large difference in speed of equivalent static and non static methods", "tags": ["java", "performance", "object", "methods", "static"], "link": "http://stackoverflow.com/questions/30454904/large-difference-in-speed-of-equivalent-static-and-non-static-methods/30456146#30456146", "question_id": 30454904, "answer_id": 30456146}, {"body": "<p>I just tweaked the test slightly and I got the following results:</p>\n\n<p>Output:</p>\n\n<pre><code>Dynamic Test:\n465585120\n232792560\n232792560\n51350 ms\nStatic Test:\n465585120\n232792560\n232792560\n52062 ms\n</code></pre>\n\n<p><strong>NOTE</strong></p>\n\n<p>While I was testing them separately I got ~52 sec for dynamic and ~200 sec for static.</p>\n\n<p>This is the program:</p>\n\n<pre><code>public class ProblemFive {\n\n    // Counts the number of numbers that the entry is evenly divisible by, as max is 20\n    int twentyDivCount(int a) {  // Change to static int.... when using it directly\n        int count = 0;\n        for (int i = 1; i&lt;21; i++) {\n\n            if (a % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    static int twentyDivCount2(int a) {\n         int count = 0;\n         for (int i = 1; i&lt;21; i++) {\n\n             if (a % i == 0) {\n                 count++;\n             }\n         }\n         return count;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Dynamic Test: \" );\n        dynamicTest();\n        System.out.println(\"Static Test: \" );\n        staticTest();\n    }\n\n    private static void staticTest() {\n        long startT = System.currentTimeMillis();;\n        int start = 500000000;\n        int result = start;\n\n        for (int i = start; i &gt; 0; i--) {\n\n            int temp = twentyDivCount2(i);\n\n            if (temp == 20) {\n                result = i;\n                System.out.println(result);\n            }\n        }\n\n        System.out.println(result);\n\n        long end = System.currentTimeMillis();;\n        System.out.println((end - startT) + \" ms\");\n    }\n\n    private static void dynamicTest() {\n        long startT = System.currentTimeMillis();;\n        int start = 500000000;\n        int result = start;\n\n        ProblemFive ff = new ProblemFive();\n\n        for (int i = start; i &gt; 0; i--) {\n\n            int temp = ff.twentyDivCount(i); // Faster way\n\n            if (temp == 20) {\n                result = i;\n                System.out.println(result);\n            }\n        }\n\n        System.out.println(result);\n\n        long end = System.currentTimeMillis();;\n        System.out.println((end - startT) + \" ms\");\n    }\n}\n</code></pre>\n\n<p>I also changed the order of the test to:</p>\n\n<pre><code>public static void main(String[] args) {\n    System.out.println(\"Static Test: \" );\n    staticTest();\n    System.out.println(\"Dynamic Test: \" );\n    dynamicTest();\n}\n</code></pre>\n\n<p>And I got this:</p>\n\n<pre><code>Static Test:\n465585120\n232792560\n232792560\n188945 ms\nDynamic Test:\n465585120\n232792560\n232792560\n50106 ms\n</code></pre>\n\n<p>As you see, if dynamic is called before static the speed for static dramatically decreased.</p>\n\n<p>Based on this benchmark:</p>\n\n<blockquote>\n  <p>I <strong>hypothesize</strong> that it all depends on the JVM optimization. thus I\n  just recommend you to go with the rule of thumb for use of static and\n  dynamic methods.</p>\n</blockquote>\n\n<p><strong>RULE OF THUMB:</strong></p>\n\n<p><a href=\"http://stackoverflow.com/questions/2671496/java-when-to-use-static-methods\">Java: when to use static methods</a></p>\n", "title": "Large difference in speed of equivalent static and non static methods", "tags": ["java", "performance", "object", "methods", "static"], "link": "http://stackoverflow.com/questions/30454904/large-difference-in-speed-of-equivalent-static-and-non-static-methods/30456224#30456224", "question_id": 30454904, "answer_id": 30456224}, {"body": "<p>Just an unproved guess based an assylias' answer.</p>\n\n<p>The JVM uses a threshold for loop unrolling, which is something like 70. For whatever reason, the static call is slightly bigger and doesn't get unrolled.</p>\n\n<h3>Update results</h3>\n\n<ul>\n<li>With the <code>LoopUnrollLimit</code> in the below 52, both versions are slow.</li>\n<li>Between 52 and 71, only the static version is slow.</li>\n<li>Above 71, both versions are fast.</li>\n</ul>\n\n<p>This is strange as my guess was that the static call is just slightly bigger in the internal representation and the OP hit a strange case. But the difference seems to be about 20, which makes no sense.</p>\n\n<p>&nbsp;</p>\n\n<pre><code>-XX:LoopUnrollLimit=51\n5400 ms NON_STATIC\n5310 ms STATIC\n-XX:LoopUnrollLimit=52\n1456 ms NON_STATIC\n5305 ms STATIC\n-XX:LoopUnrollLimit=71\n1459 ms NON_STATIC\n5309 ms STATIC\n-XX:LoopUnrollLimit=72\n1457 ms NON_STATIC\n1488 ms STATIC\n</code></pre>\n\n<p>For those willing to experiment, <a href=\"https://dl.dropboxusercontent.com/u/4971686/published/maaartin/so/ProblemFive.java\">my version</a> may be useful.</p>\n", "title": "Large difference in speed of equivalent static and non static methods", "tags": ["java", "performance", "object", "methods", "static"], "link": "http://stackoverflow.com/questions/30454904/large-difference-in-speed-of-equivalent-static-and-non-static-methods/30456394#30456394", "question_id": 30454904, "answer_id": 30456394}, {"body": "<p>Please try:</p>\n\n<pre><code>public class ProblemFive {\n    public static ProblemFive PROBLEM_FIVE = new ProblemFive();\n\n    public static void main(String[] args) {\n        long startT = System.currentTimeMillis();\n        int start = 500000000;\n        int result = start;\n\n\n        for (int i = start; i &gt; 0; i--) {\n            int temp = PROBLEM_FIVE.twentyDivCount(i); // faster way\n            // twentyDivCount(i) - slower\n\n            if (temp == 20) {\n                result = i;\n                System.out.println(result);\n                System.out.println((System.currentTimeMillis() - startT) + \" ms\");\n            }\n        }\n\n        System.out.println(result);\n\n        long end = System.currentTimeMillis();\n        System.out.println((end - startT) + \" ms\");\n    }\n\n    int twentyDivCount(int a) {  // change to static int.... when using it directly\n        int count = 0;\n        for (int i = 1; i &lt; 21; i++) {\n\n            if (a % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n}\n</code></pre>\n", "title": "Large difference in speed of equivalent static and non static methods", "tags": ["java", "performance", "object", "methods", "static"], "link": "http://stackoverflow.com/questions/30454904/large-difference-in-speed-of-equivalent-static-and-non-static-methods/30471786#30471786", "question_id": 30454904, "answer_id": 30471786}], "creation_date": 1432633233, "score": 86, "link": "http://stackoverflow.com/questions/30454904/large-difference-in-speed-of-equivalent-static-and-non-static-methods", "question_id": 30454904}, {"body": "<p>I tried to migrate a project from Eclipse to Android studio. Finally I am able to run it, but at a certain point I got this exception, and I found nothing in google about this:</p>\n\n<pre><code>04-22 00:08:15.484    9891-9891/hu.illion.kwindoo E/AndroidRuntime\ufe55 FATAL EXCEPTION: main\njava.lang.RuntimeException: Unable to start activity ComponentInfo{hu.illion.kwindoo/hu.illion.kwindoo.activity.MainActivity}: java.lang.IllegalArgumentException: AppCompat does not support the current theme features\n    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2092)\n    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2117)\n    ...    \nCaused by: java.lang.IllegalArgumentException: AppCompat does not support the current theme features\n    at android.support.v7.app.AppCompatDelegateImplV7.ensureSubDecor(AppCompatDelegateImplV7.java:360)\n    at android.support.v7.app.AppCompatDelegateImplV7.setContentView(AppCompatDelegateImplV7.java:246)\n    at android.support.v7.app.AppCompatActivity.setContentView(AppCompatActivity.java:106)\n    at hu.illion.kwindoo.activity.MainActivity.onCreate(MainActivity.java:73)\n    at android.app.Activity.performCreate(Activity.java:5047)\n    at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1094)\n    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2056)\n    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2117)\n    ...\n</code></pre>\n\n<p><strong>73. line of MainActivity is:</strong></p>\n\n<pre><code>setContentView(R.layout.activity_main);\n</code></pre>\n\n<p>Please advice me if you can.</p>\n", "tags": ["java", "android", "eclipse", "android-studio"], "title": "java.lang.IllegalArgumentException: AppCompat does not support the current theme features", "answers": [{"body": "<p>Remove </p>\n\n<pre><code>&lt;item name=\"windowActionBar\"&gt;false&lt;/item&gt;\n</code></pre>\n\n<p>from your theme, then make sure you are inheriting from a .NoActionBar Theme, then set your toolbar like normal.</p>\n", "title": "java.lang.IllegalArgumentException: AppCompat does not support the current theme features", "tags": ["java", "android", "eclipse", "android-studio"], "link": "http://stackoverflow.com/questions/29784124/java-lang-illegalargumentexception-appcompat-does-not-support-the-current-theme/29784462#29784462", "question_id": 29784124, "answer_id": 29784462}, {"body": "<p>alternative to @sbaar's answer,</p>\n\n<p>keep <code>windowActionBar</code> to <code>false</code> and add <code>windowNoTitle</code>as well and set it to <code>true</code>.</p>\n\n<p>ie</p>\n\n<pre><code>   &lt;item name=\"windowActionBar\"&gt;false&lt;/item&gt;\n   &lt;item name=\"windowNoTitle\"&gt;true&lt;/item&gt;\n</code></pre>\n", "title": "java.lang.IllegalArgumentException: AppCompat does not support the current theme features", "tags": ["java", "android", "eclipse", "android-studio"], "link": "http://stackoverflow.com/questions/29784124/java-lang-illegalargumentexception-appcompat-does-not-support-the-current-theme/29788578#29788578", "question_id": 29784124, "answer_id": 29788578}, {"body": "<p>Check if you call setContentView() after super.onCreate(), and not before. This helped in my case.</p>\n", "title": "java.lang.IllegalArgumentException: AppCompat does not support the current theme features", "tags": ["java", "android", "eclipse", "android-studio"], "link": "http://stackoverflow.com/questions/29784124/java-lang-illegalargumentexception-appcompat-does-not-support-the-current-theme/29819543#29819543", "question_id": 29784124, "answer_id": 29819543}, {"body": "<p>Make sure that your theme is parent with <code>Theme.AppCompat.NoActionBar</code>, then in <code>styles.xml</code>:</p>\n\n<pre><code>&lt;style name=\"MyMaterialTheme\" parent=\"Theme.AppCompat.NoActionBar\"&gt;\n        &lt;item name=\"windowNoTitle\"&gt;true&lt;/item&gt;\n        &lt;item name=\"windowActionBar\"&gt;false&lt;/item&gt;\n        ...\n&lt;/style&gt;\n</code></pre>\n\n<p>Btw, it's a new issue for Support Library 22.1.</p>\n", "title": "java.lang.IllegalArgumentException: AppCompat does not support the current theme features", "tags": ["java", "android", "eclipse", "android-studio"], "link": "http://stackoverflow.com/questions/29784124/java-lang-illegalargumentexception-appcompat-does-not-support-the-current-theme/29853299#29853299", "question_id": 29784124, "answer_id": 29853299}, {"body": "<p>I had the same problem when I upgraded the library version from 22.0.0 to 22.1.1 and fixed it by dropping back to the previous version: com.android.support:appcompat-v7:22.0.0 and go back to using ActionBarActivity, not AppCompatActivity in my Activity classes as required by the newer version of the compatibility library. I'll try again later.</p>\n", "title": "java.lang.IllegalArgumentException: AppCompat does not support the current theme features", "tags": ["java", "android", "eclipse", "android-studio"], "link": "http://stackoverflow.com/questions/29784124/java-lang-illegalargumentexception-appcompat-does-not-support-the-current-theme/29974717#29974717", "question_id": 29784124, "answer_id": 29974717}, {"body": "<p>just Use this in your style.xml no other editing is needed</p>\n\n<pre><code> &lt;style name=\"AppTheme\" parent=\"Theme.AppCompat\"&gt;\n\n&lt;!-- theme customizations --&gt;\n\n&lt;item name=\"colorPrimary\"&gt;@color/colorPrimary&lt;/item&gt;\n&lt;item name=\"colorPrimaryDark\"&gt;@color/colorPrimaryDark&lt;/item&gt;\n&lt;item name=\"colorAccent\"&gt;@color/colorAccent&lt;/item&gt;\n&lt;/style&gt;\n</code></pre>\n\n<p>don't add anything in to activity file please leave it</p>\n\n<pre><code>public class Main extends ActionBarActivity {\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\nsuper.onCreate(savedInstanceState);\nsetContentView(R.layout.activity_main);\n\n }\n\n@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\n// Inflate the menu; this adds items to the action bar if it is present.\ngetMenuInflater().inflate(R.menu.main, menu);\nreturn true;\n} \n\n@Override\n public boolean onOptionsItemSelected(MenuItem item) {\n// Handle action bar item clicks here. The action bar will\n// automatically handle clicks on the Home/Up button, so long\n// as you specify a parent activity in AndroidManifest.xml.\nint id = item.getItemId();\nif (id == R.id.action_settings) {\n    return true;\n}\nreturn super.onOptionsItemSelected(item);\n}\n\n }\n</code></pre>\n", "title": "java.lang.IllegalArgumentException: AppCompat does not support the current theme features", "tags": ["java", "android", "eclipse", "android-studio"], "link": "http://stackoverflow.com/questions/29784124/java-lang-illegalargumentexception-appcompat-does-not-support-the-current-theme/30499548#30499548", "question_id": 29784124, "answer_id": 30499548}, {"body": "<p>Use this parent in Style.xml\nparent=\"Theme.AppCompat.Light.NoActionBar\"</p>\n", "title": "java.lang.IllegalArgumentException: AppCompat does not support the current theme features", "tags": ["java", "android", "eclipse", "android-studio"], "link": "http://stackoverflow.com/questions/29784124/java-lang-illegalargumentexception-appcompat-does-not-support-the-current-theme/31204927#31204927", "question_id": 29784124, "answer_id": 31204927}, {"body": "<p>Make sure that</p>\n\n<pre><code>super.onCreate(savedInstanceState);\nsetContentView(R.layout.activity_main);\n</code></pre>\n\n<p>are at the top of everything this works for me....good luck</p>\n", "title": "java.lang.IllegalArgumentException: AppCompat does not support the current theme features", "tags": ["java", "android", "eclipse", "android-studio"], "link": "http://stackoverflow.com/questions/29784124/java-lang-illegalargumentexception-appcompat-does-not-support-the-current-theme/31311992#31311992", "question_id": 29784124, "answer_id": 31311992}, {"body": "<p>in my case i didnt change to .NoActionBar Theme. i just remove android prefix from this item.</p>\n\n<pre><code>&lt;item name=\"windowActionBar\"&gt;false&lt;/item&gt;\n</code></pre>\n\n<p>and the error goes away.</p>\n", "title": "java.lang.IllegalArgumentException: AppCompat does not support the current theme features", "tags": ["java", "android", "eclipse", "android-studio"], "link": "http://stackoverflow.com/questions/29784124/java-lang-illegalargumentexception-appcompat-does-not-support-the-current-theme/31385991#31385991", "question_id": 29784124, "answer_id": 31385991}, {"body": "<p>In Java class change <code>Main extends ActionBarActivity</code> to <code>Main extends Activity</code>. It worked for me.</p>\n", "title": "java.lang.IllegalArgumentException: AppCompat does not support the current theme features", "tags": ["java", "android", "eclipse", "android-studio"], "link": "http://stackoverflow.com/questions/29784124/java-lang-illegalargumentexception-appcompat-does-not-support-the-current-theme/31398730#31398730", "question_id": 29784124, "answer_id": 31398730}, {"body": "<p>add dependency to gradle like this</p>\n\n<pre><code>compile 'com.android.support:appcompat-v7:21.0.3'\n</code></pre>\n", "title": "java.lang.IllegalArgumentException: AppCompat does not support the current theme features", "tags": ["java", "android", "eclipse", "android-studio"], "link": "http://stackoverflow.com/questions/29784124/java-lang-illegalargumentexception-appcompat-does-not-support-the-current-theme/32155624#32155624", "question_id": 29784124, "answer_id": 32155624}, {"body": "<p>I solved the issue by my main Activity extending AppCompatActivity :)</p>\n", "title": "java.lang.IllegalArgumentException: AppCompat does not support the current theme features", "tags": ["java", "android", "eclipse", "android-studio"], "link": "http://stackoverflow.com/questions/29784124/java-lang-illegalargumentexception-appcompat-does-not-support-the-current-theme/32987375#32987375", "question_id": 29784124, "answer_id": 32987375}, {"body": "<p>In my case, I look for @rewrihitesh answer, and I notice that I <strong>inverted elements order</strong>. Changing from </p>\n\n<pre><code>setContentView(R.layout.activity_test);\nsuper.onCreate(savedInstanceState);\n</code></pre>\n\n<p>to </p>\n\n<pre><code>super.onCreate(savedInstanceState);\nsetContentView(R.layout.activity_test);\n</code></pre>\n\n<p>Fix my problem.</p>\n\n<p>Hope it helps !!</p>\n", "title": "java.lang.IllegalArgumentException: AppCompat does not support the current theme features", "tags": ["java", "android", "eclipse", "android-studio"], "link": "http://stackoverflow.com/questions/29784124/java-lang-illegalargumentexception-appcompat-does-not-support-the-current-theme/35992691#35992691", "question_id": 29784124, "answer_id": 35992691}], "creation_date": 1429654431, "score": 85, "link": "http://stackoverflow.com/questions/29784124/java-lang-illegalargumentexception-appcompat-does-not-support-the-current-theme", "question_id": 29784124}, {"body": "<p>Someone explain to me the differences between the following two statements?</p>\n\n<p>A <code>static final</code> variable initialized by a <code>static</code> code block:</p>\n\n<pre><code>private static final String foo;\nstatic { foo = \"foo\"; }\n</code></pre>\n\n<p>A <code>static final</code> variable initialized by an assignment:</p>\n\n<pre><code>private static final String foo = \"foo\";\n</code></pre>\n", "tags": ["java", "static", "modifier"], "title": "Difference between static modifier and static block", "answers": [{"body": "<p>In this example, there's one <em>subtle</em> difference - in your first example, <code>foo</code> isn't determined to be a compile-time constant, so it can't be used as a case in <code>switch</code> blocks (and wouldn't be inlined into other code); in your second example it, is. So for example:</p>\n\n<pre><code>switch (args[0]) {\n    case foo:\n        System.out.println(\"Yes\");\n        break;\n}\n</code></pre>\n\n<p>That's valid when <code>foo</code> is deemed to be a constant expression, but not when it's \"just\" a static final variable.</p>\n\n<p>However, static initializer blocks are <em>usually</em> used when you have more complicated initialization code - such as populating a collection.</p>\n\n<p>The <em>timing</em> for initialization is described in <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-12.html#jls-12.4.2\">JLS 12.4.2</a>; any static final fields which are considered as compile-time constants are initialized first (step 6) and initializers are run later (step 9); all initializers (whether they're field initializers or static initializers) are run in textual order.</p>\n", "title": "Difference between static modifier and static block", "tags": ["java", "static", "modifier"], "link": "http://stackoverflow.com/questions/29691513/difference-between-static-modifier-and-static-block/29691559#29691559", "question_id": 29691513, "answer_id": 29691559}, {"body": "<p>The only difference is the initialization time.</p>\n\n<p>Java first initializes the members and then the static blocks.</p>\n", "title": "Difference between static modifier and static block", "tags": ["java", "static", "modifier"], "link": "http://stackoverflow.com/questions/29691513/difference-between-static-modifier-and-static-block/29691564#29691564", "question_id": 29691513, "answer_id": 29691564}, {"body": "<pre><code> private static final String foo;\n static { foo =\"foo\";}\n</code></pre>\n\n<p>The value of <code>foo</code> is <em>initialized</em> when the class is <em>loaded</em> and <em>static initializers are run</em>.</p>\n\n<pre><code>private static final String foo = \"foo\";\n</code></pre>\n\n<p>Here, the value of <code>foo</code> will be a <em>compile-time</em> constant. So, in reality <code>\"foo\"</code> will be available as part of th <em>byte-code</em> itself. </p>\n", "title": "Difference between static modifier and static block", "tags": ["java", "static", "modifier"], "link": "http://stackoverflow.com/questions/29691513/difference-between-static-modifier-and-static-block/29691572#29691572", "question_id": 29691513, "answer_id": 29691572}, {"body": "<p>An additional aspect: Consider the case when you have multiple static fields, and yes this is a corner case...</p>\n\n<p>As stated in Jon Skeet's answer, the JLS defines the exact order of initialization.\nHowever, if for some reason you have to initialize multiple static attributes in a specific order, you may want to make the initialization sequence clearly visible in the code.\nWhen using direct field initialization: Some code formatters (and developers) may decide at some point to sort fields differently, this will directly impact how the fields get initialized and introduce unwanted effects.</p>\n\n<p>By the way, if you want to follow common java coding conventions, you should use capital letters when defining 'constants' (final static fields).</p>\n\n<p>--- edited reflecting Jon Skeet's comments ---</p>\n", "title": "Difference between static modifier and static block", "tags": ["java", "static", "modifier"], "link": "http://stackoverflow.com/questions/29691513/difference-between-static-modifier-and-static-block/29691596#29691596", "question_id": 29691513, "answer_id": 29691596}, {"body": "<p>Static block give you more than simple statement. In this particular case is the same thing.\nStatic section will be executed at class load time, before any instances constructed. You can call methods here and assign their results to static fields. And you can catch exceptions in static blocks.</p>\n", "title": "Difference between static modifier and static block", "tags": ["java", "static", "modifier"], "link": "http://stackoverflow.com/questions/29691513/difference-between-static-modifier-and-static-block/29691641#29691641", "question_id": 29691513, "answer_id": 29691641}, {"body": "<p>In IInd case- value of <strong>foo is early bind</strong> ie compiler identifies and assign value foo to variable <code>FOO</code>, which cant be changed,and this will be <strong>available apart with byte-code itself</strong>.</p>\n\n<pre><code>private static final String FOO = \"foo\";\n</code></pre>\n\n<p>and In Ist case-value of foo initialize <strong>just after class loading</strong> as a very first assignment before instance variable assigned,also here you <strong>can catch exceptions</strong> or static field can be <strong>assign by calling static methods</strong> in static block.</p>\n\n<pre><code>private static final String FOO;\nstatic { FOO =\"foo\";}\n</code></pre>\n\n<p>So whenever there is a condition arrive <strong>when compiler must have to identify the value</strong> of variable foo, condition II will work,for ex-<strong>like value of case: in switch cases</strong>.</p>\n", "title": "Difference between static modifier and static block", "tags": ["java", "static", "modifier"], "link": "http://stackoverflow.com/questions/29691513/difference-between-static-modifier-and-static-block/29691897#29691897", "question_id": 29691513, "answer_id": 29691897}, {"body": "<p>The JLS describes a few special behaviors of what it calls <em>constant variables</em>, which are <code>final</code> variables (whether <code>static</code> or not) which are initialized with constant expressions of <code>String</code> or primitive type.</p>\n\n<p>Constant variables have a major difference with respect to binary compatibility: the <em>values</em> of constant variables become part of the class's API, as far as the compiler is concerned.</p>\n\n<p>An example:</p>\n\n<pre><code>class X {\n    public static final String XFOO = \"xfoo\";\n}\n\nclass Y {\n    public static final String YFOO;\n    static { YFOO = \"yfoo\"; }\n}\n\nclass Z {\n    public static void main(String[] args) {\n        System.out.println(X.XFOO);\n        System.out.println(Y.YFOO);\n    }\n}\n</code></pre>\n\n<p>Here, <code>XFOO</code> is a \"constant variable\" and <code>YFOO</code> is not, but they are otherwise equivalent. Class <code>Z</code> prints out each of them. Compile those classes, then disassemble them with <code>javap -v X Y Z</code>, and here is the output:</p>\n\n<p>Class X:</p>\n\n<pre><code>Constant pool:\n   #1 = Methodref          #3.#11         //  java/lang/Object.\"&lt;init&gt;\":()V\n   #2 = Class              #12            //  X\n   #3 = Class              #13            //  java/lang/Object\n   #4 = Utf8               XFOO\n   #5 = Utf8               Ljava/lang/String;\n   #6 = Utf8               ConstantValue\n   #7 = String             #14            //  xfoo\n   #8 = Utf8               &lt;init&gt;\n   #9 = Utf8               ()V\n  #10 = Utf8               Code\n  #11 = NameAndType        #8:#9          //  \"&lt;init&gt;\":()V\n  #12 = Utf8               X\n  #13 = Utf8               java/lang/Object\n  #14 = Utf8               xfoo\n{\n  public static final java.lang.String XFOO;\n    descriptor: Ljava/lang/String;\n    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n    ConstantValue: String xfoo\n\n\n  X();\n    descriptor: ()V\n    flags:\n    Code:\n      stack=1, locals=1, args_size=1\n         0: aload_0\n         1: invokespecial #1                  // Method java/lang/Object.\"&lt;init&gt;\":()V\n         4: return\n}\n</code></pre>\n\n<p>Class Y:</p>\n\n<pre><code>Constant pool:\n   #1 = Methodref          #5.#12         //  java/lang/Object.\"&lt;init&gt;\":()V\n   #2 = String             #13            //  yfoo\n   #3 = Fieldref           #4.#14         //  Y.YFOO:Ljava/lang/String;\n   #4 = Class              #15            //  Y\n   #5 = Class              #16            //  java/lang/Object\n   #6 = Utf8               YFOO\n   #7 = Utf8               Ljava/lang/String;\n   #8 = Utf8               &lt;init&gt;\n   #9 = Utf8               ()V\n  #10 = Utf8               Code\n  #11 = Utf8               &lt;clinit&gt;\n  #12 = NameAndType        #8:#9          //  \"&lt;init&gt;\":()V\n  #13 = Utf8               yfoo\n  #14 = NameAndType        #6:#7          //  YFOO:Ljava/lang/String;\n  #15 = Utf8               Y\n  #16 = Utf8               java/lang/Object\n{\n  public static final java.lang.String YFOO;\n    descriptor: Ljava/lang/String;\n    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n\n\n  Y();\n    descriptor: ()V\n    flags:\n    Code:\n      stack=1, locals=1, args_size=1\n         0: aload_0\n         1: invokespecial #1                  // Method java/lang/Object.\"&lt;init&gt;\":()V\n         4: return\n\n  static {};\n    descriptor: ()V\n    flags: ACC_STATIC\n    Code:\n      stack=1, locals=0, args_size=0\n         0: ldc           #2                  // String yfoo\n         2: putstatic     #3                  // Field YFOO:Ljava/lang/String;\n         5: return\n}\n</code></pre>\n\n<p>Class Z:</p>\n\n<pre><code>Constant pool:\n   #1 = Methodref          #8.#14         //  java/lang/Object.\"&lt;init&gt;\":()V\n   #2 = Fieldref           #15.#16        //  java/lang/System.out:Ljava/io/PrintStream;\n   #3 = Class              #17            //  X\n   #4 = String             #18            //  xfoo\n   #5 = Methodref          #19.#20        //  java/io/PrintStream.println:(Ljava/lang/String;)V\n   #6 = Fieldref           #21.#22        //  Y.YFOO:Ljava/lang/String;\n   #7 = Class              #23            //  Z\n   #8 = Class              #24            //  java/lang/Object\n   #9 = Utf8               &lt;init&gt;\n  #10 = Utf8               ()V\n  #11 = Utf8               Code\n  #12 = Utf8               main\n  #13 = Utf8               ([Ljava/lang/String;)V\n  #14 = NameAndType        #9:#10         //  \"&lt;init&gt;\":()V\n  #15 = Class              #25            //  java/lang/System\n  #16 = NameAndType        #26:#27        //  out:Ljava/io/PrintStream;\n  #17 = Utf8               X\n  #18 = Utf8               xfoo\n  #19 = Class              #28            //  java/io/PrintStream\n  #20 = NameAndType        #29:#30        //  println:(Ljava/lang/String;)V\n  #21 = Class              #31            //  Y\n  #22 = NameAndType        #32:#33        //  YFOO:Ljava/lang/String;\n  #23 = Utf8               Z\n  #24 = Utf8               java/lang/Object\n  #25 = Utf8               java/lang/System\n  #26 = Utf8               out\n  #27 = Utf8               Ljava/io/PrintStream;\n  #28 = Utf8               java/io/PrintStream\n  #29 = Utf8               println\n  #30 = Utf8               (Ljava/lang/String;)V\n  #31 = Utf8               Y\n  #32 = Utf8               YFOO\n  #33 = Utf8               Ljava/lang/String;\n{\n  Z();\n    descriptor: ()V\n    flags:\n    Code:\n      stack=1, locals=1, args_size=1\n         0: aload_0\n         1: invokespecial #1                  // Method java/lang/Object.\"&lt;init&gt;\":()V\n         4: return\n\n  public static void main(java.lang.String[]);\n    descriptor: ([Ljava/lang/String;)V\n    flags: ACC_PUBLIC, ACC_STATIC\n    Code:\n      stack=2, locals=1, args_size=1\n         0: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;\n         3: ldc           #4                  // String xfoo\n         5: invokevirtual #5                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n         8: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;\n        11: getstatic     #6                  // Field Y.YFOO:Ljava/lang/String;\n        14: invokevirtual #5                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n        17: return\n}\n</code></pre>\n\n<p>Things to notice in the disassembly, which tell you the differences between <code>X</code> and <code>Y</code> run deeper than syntactic sugar:</p>\n\n<ul>\n<li><p><code>XFOO</code> has a <a href=\"https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.7.2\"><code>ConstantValue</code></a> attribute, signifying that its value is a compile-time constant. Whereas <code>YFOO</code> does not, and uses a <code>static</code> block with a <code>putstatic</code> instruction to initialize the value at runtime.</p></li>\n<li><p><strong>The <code>String</code> constant <code>\"xfoo\"</code> has become part of class <code>Z</code>'s constant pool</strong>, but <code>\"yfoo\"</code> has not.</p></li>\n<li><p><code>Z.main</code> uses the <code>ldc</code> (load constant) instruction to load <code>\"xfoo\"</code> onto the stack directly from its own constant pool, but it uses a <code>getstatic</code> instruction to load the value of <code>Y.YFOO</code>.</p></li>\n</ul>\n\n<p>Other differences you will find:</p>\n\n<ul>\n<li><p>If you change the value of <code>XFOO</code> and recompile <code>X.java</code> but not <code>Z.java</code>, you have a problem: class <code>Z</code> is still using the old value. If you change the value of <code>YFOO</code> and recompile <code>Y.java</code>, class <code>Z</code> uses the new value whether you recompile <code>Z.java</code> or not.</p></li>\n<li><p>If you delete the <code>X.class</code> file entirely, class <code>Z</code> still runs correctly. <strong><code>Z</code> has no runtime dependency on <code>X</code>.</strong> Whereas if you delete the <code>Y.class</code> file, class <code>Z</code> fails to initialize with a <code>ClassNotFoundException: Y</code>.</p></li>\n<li><p>If you generate documentation for the classes with javadoc, the \"Constant Field Values\" page will document the value of <code>XFOO</code>, but not the value of <code>YFOO</code>.</p></li>\n</ul>\n\n<p>The JLS describes the above effects constant variables have on compiled class files in <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-13.html#jls-13.1\">\u00a713.1.3</a>:</p>\n\n<blockquote>\n  <p>A reference to a field that is a constant variable (\u00a74.12.4) must be resolved at compile time to the value V denoted by the constant variable's initializer.</p>\n  \n  <p>If such a field is <code>static</code>, then no reference to the field should be present in the code in a binary file, including the class or interface which declared the field. Such a field must always appear to have been initialized (\u00a712.4.2); the default initial value for the field (if different than V) must never be observed.</p>\n  \n  <p>If such a field is non-<code>static</code>, then no reference to the field should be present in the code in a binary file, except in the class containing the field. (It will be a class rather than an interface, since an interface has only <code>static</code> fields.) The class should have code to set the field's value to V during instance creation (\u00a712.5).</p>\n</blockquote>\n\n<p>And in <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-13.html#jls-13.4.9\">\u00a713.4.9</a>:</p>\n\n<blockquote>\n  <p>If a field is a constant variable (\u00a74.12.4), and moreover is <code>static</code>, then deleting the keyword <code>final</code> or changing its value will not break compatibility with pre-existing binaries by causing them not to run, but they will not see any new value for a usage of the field unless they are recompiled.</p>\n  \n  <p>[...]</p>\n  \n  <p>The best way to avoid problems with \"inconstant constants\" in widely-distributed code is to use <code>static</code> constant variables only for values which truly are unlikely ever to change. Other than for true mathematical constants, we recommend that source code make very sparing use of <code>static</code> constant variables. </p>\n</blockquote>\n\n<p>The upshot is that if your public library exposes any constant variables, you <strong>must never</strong> change their values if your new library version is otherwise supposed to be compatible with code compiled against old versions of the library. It won't necessarily cause an error, but the existing code will probably malfunction since it will have outdated ideas about the values of constants. (If your new library version needs for classes which use it to be recompiled anyway, then changing constants doesn't cause this problem.)</p>\n\n<p>Thus, initializing a constant with a block gives you more freedom to change its value, because it prevents the compiler embedding the value into other classes.</p>\n", "title": "Difference between static modifier and static block", "tags": ["java", "static", "modifier"], "link": "http://stackoverflow.com/questions/29691513/difference-between-static-modifier-and-static-block/29727412#29727412", "question_id": 29691513, "answer_id": 29727412}], "creation_date": 1429250658, "score": 85, "link": "http://stackoverflow.com/questions/29691513/difference-between-static-modifier-and-static-block", "question_id": 29691513}, {"body": "<p>The following Java code fails to compile:</p>\n\n<pre><code>@FunctionalInterface\nprivate interface BiConsumer&lt;A, B&gt; {\n    void accept(A a, B b);\n}\n\nprivate static void takeBiConsumer(BiConsumer&lt;String, String&gt; bc) { }\n\npublic static void main(String[] args) {\n    takeBiConsumer((String s1, String s2) -&gt; new String(\"hi\")); // OK\n    takeBiConsumer((String s1, String s2) -&gt; \"hi\"); // Error\n}\n</code></pre>\n\n<p>The compiler reports:</p>\n\n<pre><code>Error:(31, 58) java: incompatible types: bad return type in lambda expression\n    java.lang.String cannot be converted to void\n</code></pre>\n\n<p>The weird thing is that the line marked \"OK\" compiles fine, but the line marked \"Error\" fails. They seem essentially identical.</p>\n", "tags": ["java", "lambda", "compiler-errors", "java-8", "void"], "title": "Why does this Java 8 lambda fail to compile?", "answers": [{"body": "<p>The JLS specify that</p>\n\n<blockquote>\n  <p>If the function type's result is void, the lambda body is either a\n  statement expression (\u00a714.8) or a void-compatible block.</p>\n</blockquote>\n\n<p>Now let's see that in detail,</p>\n\n<p>Since your <code>takeBiConsumer</code> method is of void type, the lambda receiving <code>new String(\"hi\")</code> will interpret it as a block like</p>\n\n<pre><code>{\n    new String(\"hi\");\n}\n</code></pre>\n\n<p>which is valid in a void, hence the first case compile.</p>\n\n<p>However, in the case where the lambda is <code>-&gt; \"hi\"</code>, a block such as</p>\n\n<pre><code>{\n    \"hi\";\n}\n</code></pre>\n\n<p>is not valid syntax in java. Therefore the only thing to do with \"hi\" is to try and return it.</p>\n\n<pre><code>{\n    return \"hi\";\n}\n</code></pre>\n\n<p>which is not valid in a void and explain the error message</p>\n\n<pre><code>incompatible types: bad return type in lambda expression\n    java.lang.String cannot be converted to void\n</code></pre>\n\n<p>For a better understanding, note that if you change the type of <code>takeBiConsumer</code> to a String, <code>-&gt; \"hi\"</code> will be valid as it will simply try to directly return the string.</p>\n\n<hr>\n\n<p>Note that at first I tought the error was caused by the lambda being in a wrong invocation context, so I'll share this possibility with the community :</p>\n\n<p><a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.27\" rel=\"nofollow\">JLS 15.27</a></p>\n\n<blockquote>\n  <p>It is a compile-time error if a lambda expression occurs in a program\n  in someplace other than an assignment context (\u00a75.2), an invocation\n  context (\u00a75.3), or a casting context (\u00a75.5).</p>\n</blockquote>\n\n<p>However in our case, we are in an <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-5.html#jls-5.3\" rel=\"nofollow\"><em>invocation context</em></a> which is correct.</p>\n", "title": "Why does this Java 8 lambda fail to compile?", "tags": ["java", "lambda", "compiler-errors", "java-8", "void"], "link": "http://stackoverflow.com/questions/29262002/why-does-this-java-8-lambda-fail-to-compile/29262126#29262126", "question_id": 29262002, "answer_id": 29262126}, {"body": "<p>The first case is ok because you are invoking a \"special\" method (a constructor) and you are no actually taking the created object. Just to make it more clear, I'll put the optional braces in your lambdas:</p>\n\n<pre><code>takeBiConsumer((String s1, String s2) -&gt; {new String(\"hi\");}); // OK\ntakeBiConsumer((String s1, String s2) -&gt; {\"hi\"}); // Error\n</code></pre>\n\n<p>And more clear, I'll translate that to the older notation:</p>\n\n<pre><code>takeBiConsumer(new BiConsumer&lt;String, String&gt;(String s1, String s2) {\n    public void accept(String s, String s2) {\n        new String(\"hi\"); // OK\n    }\n});\n\ntakeBiConsumer(new BiConsumer&lt;String, String&gt;(String s1, String s2) {\n    public void accept(String s, String s2) {\n        \"hi\"; // Here, the compiler will attempt to add a \"return\"\n              // keyword before the \"hi\", but then it will fail\n              // with \"compiler error ... bla bla ...\n              //  java.lang.String cannot be converted to void\"\n    }\n});\n</code></pre>\n\n<p>In the first case you are executing a constructor, but you are NOT returning the created object, in the second case you are attempting to return a String value, but your method in your interface <code>BiConsumer</code> returns void, hence the compiler error.</p>\n", "title": "Why does this Java 8 lambda fail to compile?", "tags": ["java", "lambda", "compiler-errors", "java-8", "void"], "link": "http://stackoverflow.com/questions/29262002/why-does-this-java-8-lambda-fail-to-compile/29262511#29262511", "question_id": 29262002, "answer_id": 29262511}, {"body": "<p>Basicly, <code>new String(\"hi\")</code> is an executable piece of code that actually does something (it creates a new String and then returns it). The returned value can be ignored and <code>new String(\"hi\")</code> can still be used in void-return lambda to create a new String.</p>\n\n<p>However, <code>\"hi\"</code> is just a constant that doesn't do anything on it's own. The only reasonable thing to do with it in lambda body is to <em>return</em> it. But the lambda method would have to have return type <code>String</code> or <code>Object</code>, but it returns <code>void</code>, hence the <code>String cannot be casted to void</code> error.</p>\n", "title": "Why does this Java 8 lambda fail to compile?", "tags": ["java", "lambda", "compiler-errors", "java-8", "void"], "link": "http://stackoverflow.com/questions/29262002/why-does-this-java-8-lambda-fail-to-compile/29262520#29262520", "question_id": 29262002, "answer_id": 29262520}, {"body": "<p>Your lambda needs to be congruent with <code>BiConsumer&lt;String, String&gt;</code>. If you refer to <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.27.3\">JLS #15.27.3 (Type of a Lambda)</a>:</p>\n\n<blockquote>\n  <p>A lambda expression is congruent with a function type if all of the following are true:</p>\n  \n  <ul>\n  <li>[...]  </li>\n  <li>If the function type's result is void, the lambda body is either a statement expression (\u00a714.8) or a void-compatible block.</li>\n  </ul>\n</blockquote>\n\n<p>So the lambda must either be a statement expression or a void compatible block:</p>\n\n<ul>\n<li>A constructor invocation is <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-14.html#jls-14.8\">a statement expression</a> so it compiles.</li>\n<li>A string literal isn't a statement expression and is not void compatible (cf. <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.27.2-230\">the examples in 15.27.2</a>) so it does not compile.</li>\n</ul>\n", "title": "Why does this Java 8 lambda fail to compile?", "tags": ["java", "lambda", "compiler-errors", "java-8", "void"], "link": "http://stackoverflow.com/questions/29262002/why-does-this-java-8-lambda-fail-to-compile/29262958#29262958", "question_id": 29262002, "answer_id": 29262958}], "creation_date": 1427303139, "score": 77, "link": "http://stackoverflow.com/questions/29262002/why-does-this-java-8-lambda-fail-to-compile", "question_id": 29262002}, {"body": "<p>Is it a safe practice to use <strong>default methods as a poor's man version of traits</strong> in Java 8?</p>\n\n<p><a href=\"http://zeroturnaround.com/rebellabs/how-your-addiction-to-java-8-default-methods-may-make-pandas-sad-and-your-teammates-angry/\">Some claim it may make pandas sad</a> if you use them just for the sake of it, because it's cool, but that's not my intention. It is also often reminded that default methods were introduced to support API evolution and backward compatibility, which is true, but this does not make it wrong or twisted to use them as traits per se.</p>\n\n<p>I have <a href=\"http://www.opencredo.com/2015/01/30/traits-java-8-default-methods/\">the following practical use case</a> in mind:</p>\n\n<pre><code>public interface Loggable {\n    default Logger logger() {\n        return LoggerFactory.getLogger(this.getClass());\n    }\n}\n</code></pre>\n\n<p>Or perhaps, define a <code>PeriodTrait</code>:</p>\n\n<pre><code>public interface PeriodeTrait {\n    Date getStartDate();\n    Date getEndDate();\n    default isValid(Date atDate) {\n        ...\n    }\n}\n</code></pre>\n\n<p>Admitedly, composition could be used (or even helper classes) but it seems more verbose and cluttered and does not allow to benefit from polymorphism.</p>\n\n<p>So, <strong>is it ok/safe to use default methods as basic traits</strong>, or should I be worried about unforeseen side effects?</p>\n\n<p><a href=\"http://stackoverflow.com/search?q=java+default+method+trait\">Several questions</a> on SO are related to Java vs Scala traits; that's not the point here. I'm not asking merely for opinions either. Instead, I'm looking for an authoritative answer or at least field insight: if you've used default methods as traits on your corporate project, did it turn out to be a timebomb?</p>\n", "tags": ["java", "java-8", "trait", "default-method"], "title": "Java 8 default methods as traits : safe?", "answers": [{"body": "<p>The short answer is: it's safe if you use them safely :)  </p>\n\n<p>The snarky answer: tell me what <em>you</em> mean by traits, and maybe I'll give you a better answer :)  </p>\n\n<p>In all seriousness, the term \"trait\" is not well-defined.  Many Java developers are most familiar with traits as they are expressed in Scala, but Scala is far from the first language to have traits, either in name or in effect.  </p>\n\n<p>For example, in Scala, traits are stateful (can have <code>var</code> variables); in Fortress they are pure behavior.  Java's interfaces with default methods are stateless; does this mean they are not traits?  (Hint: that was a trick question.)  </p>\n\n<p>Again, in Scala, traits are composed through linearization; if class <code>A</code> extends traits <code>X</code> and <code>Y</code>, then the order in which <code>X</code> and <code>Y</code> are mixed in determines how conflicts between <code>X</code> and <code>Y</code> are resolved.  In Java, this linearization mechanism is not present (it was rejected, in part, because it was too \"un-Java-like\".)  </p>\n\n<p>The proximate reason for adding default methods to interfaces was to support <em>interface evolution</em>, but we were well aware that we were going beyond that.  Whether you consider that to be \"interface evolution++\" or \"traits--\" is a matter of personal interpretation.  So, to answer your question about safety ... so long as you stick to what the mechanism actually supports, rather than trying to wishfully stretch it to something it does not support, you should be fine.</p>\n\n<p>A key design goal was that, from the perspective of the <em>client</em> of an interface, default methods should be indistinguishable from \"regular\" interface methods.  The default-ness of a method, therefore, is only interesting to the <em>designer</em> and <em>implementor</em> of the interface.  </p>\n\n<p>Here are some use cases that are well within the design goals:</p>\n\n<ul>\n<li><p>Interface evolution.  Here, we are adding a new method to an existing interface, which has a sensible default implementation in terms of existing methods on that interface.  An example would be adding the <code>forEach</code> method to <code>Collection</code>, where the default implementation is written in terms of the <code>iterator()</code> method.  </p></li>\n<li><p>\"Optional\" methods.  Here, the designer of an interface is saying \"Implementors need not implement this method if they are willing to live with the limitations in functionality that entails\".  For example, <code>Iterator.remove</code> was given a default which throws <code>UnsupportedOperationException</code>; since the vast majority of implementations of <code>Iterator</code> have this behavior anyway, the default makes this method essentially optional.  (If the behavior from <code>AbstractCollection</code> were expressed as defaults on <code>Collection</code>, we might do the same for the mutative methods.)  </p></li>\n<li><p>Convenience methods.  These are methods that are strictly for convenience, again generally implemented in terms of non-default methods on the class.  The <code>logger()</code> method in your first example is a reasonable illustration of this.</p></li>\n<li><p>Combinators.  These are compositional methods that instantiate new instances of the interface based on the current instance.  For example, the methods <code>Predicate.and()</code> or <code>Comparator.thenComparing()</code> are examples of combinators.  </p></li>\n</ul>\n\n<p>If you provide a default implementation, you should also provide some specification for the default (in the JDK, we use the <code>@implSpec</code> javadoc tag for this) to aid implementors in understanding whether they want to override the method or not.  Some defaults, like convenience methods and combinators, are almost never overridden; others, like optional methods, are often overridden.  You need to provide enough specification (not just documentation) about what the default promises to do, so the implementor can make a sensible decision about whether they need to override it.</p>\n", "title": "Java 8 default methods as traits : safe?", "tags": ["java", "java-8", "trait", "default-method"], "link": "http://stackoverflow.com/questions/28681737/java-8-default-methods-as-traits-safe/28684917#28684917", "question_id": 28681737, "answer_id": 28684917}], "creation_date": 1424719536, "score": 75, "link": "http://stackoverflow.com/questions/28681737/java-8-default-methods-as-traits-safe", "question_id": 28681737}, {"body": "<p>Currently whenever I need to create stream from an array, I do</p>\n\n<pre><code>String[] array = {\"x1\", \"x2\"};\nArrays.asList(array).stream();\n</code></pre>\n\n<p>Is there some direct way to create stream from an array?</p>\n", "tags": ["java", "arrays", "java-8", "java-stream"], "title": "How can I create a stream from an array?", "answers": [{"body": "<p>You can use Arrays.stream E.g.</p>\n\n<pre><code>Arrays.stream(array);\n</code></pre>\n\n<p>You can also use <code>Stream.of</code> as mentioned by @fge , which looks like</p>\n\n<pre><code>public static&lt;T&gt; Stream&lt;T&gt; of(T... values) {\n    return Arrays.stream(values);\n}\n</code></pre>\n\n<p>But note <code>Stream.of(intArray)</code> will return <code>Stream&lt;int[]&gt;</code> whereas <code>Arrays.stream(intArr)</code> will return <code>IntStream</code> providing you pass an array of type <code>int[]</code>. So in a nutshell for primitives type you can observe the difference between 2 methods E.g.</p>\n\n<pre><code>int[] arr = {1, 2};\nStream&lt;int[]&gt; arr1 = Stream.of(arr);\n\nIntStream stream2 = Arrays.stream(arr); \n</code></pre>\n\n<p>When you pass primitive array to <code>Arrays.stream</code>, the following code is invoked</p>\n\n<pre><code>public static IntStream stream(int[] array) {\n    return stream(array, 0, array.length);\n}\n</code></pre>\n\n<p>and when you pass primitive array to <code>Stream.of</code> the following code is invoked</p>\n\n<pre><code> public static&lt;T&gt; Stream&lt;T&gt; of(T t) {\n     return StreamSupport.stream(new Streams.StreamBuilderImpl&lt;&gt;(t), false);\n }\n</code></pre>\n\n<p>Hence you get different results.</p>\n\n<p><strong>Updated</strong>: As mentioned by <a href=\"http://stackoverflow.com/users/1441122/stuart-marks\">Stuart Marks</a> comment\nThe subrange overload of <code>Arrays.stream</code> is preferable to using <code>Stream.of(array).skip(n).limit(m)</code> because the former results in a SIZED stream whereas the latter does not. The reason is that <code>limit(m)</code> doesn't know whether the size is m or less than m, whereas <code>Arrays.stream</code> does range checks and knows the exact size of the stream\nYou can read the source code for stream implementation returned by <code>Arrays.stream(array,start,end)</code>  <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/ReferencePipeline.java#ReferencePipeline.Head\">here</a>, whereas for stream implementation returned by <code>Stream.of(array).skip().limit()</code> is within <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/SliceOps.java#SliceOps.makeRef%28java.util.stream.AbstractPipeline%2Clong%2Clong%29\">this method</a>.</p>\n", "title": "How can I create a stream from an array?", "tags": ["java", "arrays", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/27888429/how-can-i-create-a-stream-from-an-array/27888447#27888447", "question_id": 27888429, "answer_id": 27888447}, {"body": "<p>Alternative to @sol4me's solution:</p>\n\n<pre><code>Stream.of(theArray)\n</code></pre>\n\n<p>Of the difference between this and <code>Arrays.stream()</code>: it <em>does</em> make a difference if your array is of a primitive type. For instance, if you do:</p>\n\n<pre><code>Arrays.stream(someArray)\n</code></pre>\n\n<p>where <code>someArray</code> is a <code>long[]</code>, it will return a <code>LongStream</code>. <code>Stream.of()</code>, on the other hand, will return a <code>Stream&lt;long[]&gt;</code> with a single element.</p>\n", "title": "How can I create a stream from an array?", "tags": ["java", "arrays", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/27888429/how-can-i-create-a-stream-from-an-array/27888452#27888452", "question_id": 27888429, "answer_id": 27888452}, {"body": "<pre><code>Stream.of(\"foo\", \"bar\", \"baz\")\n</code></pre>\n\n<p>Or, if you are already have an array, you can also do </p>\n\n<pre><code>Stream.of(array) \n</code></pre>\n\n<p>For primitive types use <code>IntStream.of</code> or <code>LongStream.of</code> etc.</p>\n", "title": "How can I create a stream from an array?", "tags": ["java", "arrays", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/27888429/how-can-i-create-a-stream-from-an-array/27888481#27888481", "question_id": 27888429, "answer_id": 27888481}, {"body": "<p>You can make it also by low level method which has parallel option:</p>\n\n<h3>Update: Use full array.length (not length - 1).</h3>\n\n<pre><code>/** \n * Creates a new sequential or parallel {@code Stream} from a\n * {@code Spliterator}.\n *\n * &lt;p&gt;The spliterator is only traversed, split, or queried for estimated\n * size after the terminal operation of the stream pipeline commences.\n *\n * @param &lt;T&gt; the type of stream elements\n * @param spliterator a {@code Spliterator} describing the stream elements\n * @param parallel if {@code true} then the returned stream is a parallel\n *        stream; if {@code false} the returned stream is a sequential\n *        stream.\n * @return a new sequential or parallel {@code Stream}\n *\n * &lt;T&gt; Stream&lt;T&gt; stream(Spliterator&lt;T&gt; spliterator, boolean parallel)\n */\n\nStreamSupport.stream(Arrays.spliterator(array, 0, array.length), true)\n</code></pre>\n", "title": "How can I create a stream from an array?", "tags": ["java", "arrays", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/27888429/how-can-i-create-a-stream-from-an-array/33271231#33271231", "question_id": 27888429, "answer_id": 33271231}], "creation_date": 1420988274, "score": 71, "link": "http://stackoverflow.com/questions/27888429/how-can-i-create-a-stream-from-an-array", "question_id": 27888429}, {"body": "<p>We are working on a latency sensitive application and have been microbenchmarking all kinds of methods (using <a href=\"http://openjdk.java.net/projects/code-tools/jmh/\">jmh</a>).  After microbenchmarking a lookup method and being satisfied with the results, I implemented the final version, only to find that the final version was <em>3 times slower</em> than what I had just benchmarked.  </p>\n\n<p>The culprit was that the implemented method was returning an <code>enum</code> object instead of an <code>int</code>.  Here is a simplified version of the benchmark code:</p>\n\n<pre><code>@OutputTimeUnit(TimeUnit.MICROSECONDS)\n@State(Scope.Thread)\npublic class ReturnEnumObjectVersusPrimitiveBenchmark {\n\n    enum Category {\n        CATEGORY1,\n        CATEGORY2,\n    }\n\n    @Param( {\"3\", \"2\", \"1\" })\n    String value;\n\n    int param;\n\n    @Setup\n    public void setUp() {\n        param = Integer.parseInt(value);\n    }\n\n    @Benchmark\n    public int benchmarkReturnOrdinal() {\n        if (param &lt; 2) {\n            return Category.CATEGORY1.ordinal();\n        }\n        return Category.CATEGORY2.ordinal();        \n    }\n\n\n    @Benchmark\n    public Category benchmarkReturnReference() {\n        if (param &lt; 2) {\n            return Category.CATEGORY1;\n        }\n        return Category.CATEGORY2;      \n    }\n\n\n    public static void main(String[] args) throws RunnerException {\n            Options opt = new OptionsBuilder().include(ReturnEnumObjectVersusPrimitiveBenchmark.class.getName()).warmupIterations(5)\n                .measurementIterations(4).forks(1).build();\n        new Runner(opt).run();\n    }\n\n}\n</code></pre>\n\n<p>The benchmark results for above:</p>\n\n<pre><code># VM invoker: C:\\Program Files\\Java\\jdk1.7.0_40\\jre\\bin\\java.exe\n# VM options: -Dfile.encoding=UTF-8\n\nBenchmark                   (value)   Mode  Samples     Score     Error   Units\nbenchmarkReturnOrdinal            3  thrpt        4  1059.898 \u00b1  71.749  ops/us\nbenchmarkReturnOrdinal            2  thrpt        4  1051.122 \u00b1  61.238  ops/us\nbenchmarkReturnOrdinal            1  thrpt        4  1064.067 \u00b1  90.057  ops/us\nbenchmarkReturnReference          3  thrpt        4   353.197 \u00b1  25.946  ops/us\nbenchmarkReturnReference          2  thrpt        4   350.902 \u00b1  19.487  ops/us\nbenchmarkReturnReference          1  thrpt        4   339.578 \u00b1 144.093  ops/us\n</code></pre>\n\n<p>Just changing the return type of the function changed the performance by a factor of almost 3.</p>\n\n<p>I thought that the sole difference between returning an enum object versus an integer is that one returns a 64 bit value (reference) and the other returns a 32 bit value.  One of my colleagues was guessing that returning the enum added additional overhead because of the need to track the reference for potential GC.  (But given that enum objects are static final references, it seems strange that it would need to do that).  </p>\n\n<p>What is the explanation for the performance difference?  </p>\n\n<hr>\n\n<p><strong>UPDATE</strong> </p>\n\n<p>I shared the maven project <a href=\"https://github.com/shalomshachne/shared-benchmarks.git\">here</a> so that anyone can clone it and run the benchmark.  If anyone has the time/interest, it would be helpful to see if others can replicate the same results.  (I've replicated on 2 different machines, Windows 64 and Linux 64, both using flavors of Oracle Java 1.7 JVMs).  @ZhekaKozlov says he did not see any difference between the methods. </p>\n\n<p>To run: (after cloning repository)</p>\n\n<pre><code>mvn clean install\njava -jar .\\target\\microbenchmarks.jar function.ReturnEnumObjectVersusPrimitiveBenchmark -i 5 -wi 5 -f 1\n</code></pre>\n", "tags": ["java", "low-latency", "jmh"], "title": "Why is returning a Java object reference so much slower than returning a primitive", "answers": [{"body": "<p>To clear the misconception of <em>reference</em> and <em>memory</em> some have fallen into (@Mzf), let's dive into the Java Virtual Machine Specification.\nBut before going there, one thing must be clarified - <em>an object can never be retrieved from memory, only its fields can</em>. In fact, there is no opcode that would perform such extensive operation. </p>\n\n<p>This document defines reference as a <strong>stack type</strong> (so that it may be a result or an argument to instructions performing operations on stack) of 1st category - the category of types taking a single stack word (32 bits). See table 2.3\n<img src=\"http://i.stack.imgur.com/BCuZl.png\" alt=\"A list of Java Stack Types\">.</p>\n\n<p>Furthermore, if the method invocation completes normally according to the specification, a value popped from the top of the stack is pushed onto the stack of method\u00b4s invoker (section 2.6.4).</p>\n\n<p>Your question is what causes the difference of execution times. Chapter 2 foreword answers:</p>\n\n<blockquote>\n  <p>Implementation details that are not part of the Java Virtual Machine's specification\n  would unnecessarily constrain the creativity of implementors. For example, the\n  memory layout of run-time data areas, the garbage-collection algorithm used, and\n  any internal optimization of the Java Virtual Machine instructions (for example,\n  translating them into machine code) are left to the discretion of the implementor.</p>\n</blockquote>\n\n<p>In other words, because no such thing as a performace penalty concerning usage of reference is stated in the document for logical reasons (it's eventually just a stack word as <code>int</code> or <code>float</code> are), you're left with searching the source code of your implementation or never finding out at all. </p>\n\n<p>In extent, we shouldn't actually always blame the implementation, there are some clues you can take when looking for your answers. Java defines separate instructions for manipulating numbers and references. Reference-manipulating instructions start with <code>a</code> (e. g. <code>astore</code>, <code>aload</code> or <code>areturn</code>) and are the only instructions allowed to work with references. In particular you may be interested in looking at <code>areturn</code>\u00b4s implementation. </p>\n", "title": "Why is returning a Java object reference so much slower than returning a primitive", "tags": ["java", "low-latency", "jmh"], "link": "http://stackoverflow.com/questions/29472797/why-is-returning-a-java-object-reference-so-much-slower-than-returning-a-primiti/29473851#29473851", "question_id": 29472797, "answer_id": 29473851}, {"body": "<p><strong>TL;DR: You should not put BLIND trust into anything.</strong></p>\n\n<p>First things first: it is important to verify the experimental data before jumping to the conclusions from them. Just claiming something is 3x faster/slower is odd, because you really need to follow up on the reason for the performance difference, not just trust the numbers. This is especially important for nano-benchmarks like you have.</p>\n\n<p>Second, the experimenters should clearly understand what they control and what they don't. In your particular example, you are returning the value from <code>@Benchmark</code> methods, but can you be reasonably sure the callers outside will do the same thing for primitive and the reference? If you ask yourself this question, then you'll realize you are basically measuring the test infrastructure.</p>\n\n<p>Down to the point. On my machine (i5-4210U, Linux x86_64, JDK 8u40), the test yields:</p>\n\n<pre><code>Benchmark                    (value)   Mode  Samples  Score   Error   Units\n...benchmarkReturnOrdinal          3  thrpt        5  0.876 \u00b1 0.023  ops/ns\n...benchmarkReturnOrdinal          2  thrpt        5  0.876 \u00b1 0.009  ops/ns\n...benchmarkReturnOrdinal          1  thrpt        5  0.832 \u00b1 0.048  ops/ns\n...benchmarkReturnReference        3  thrpt        5  0.292 \u00b1 0.006  ops/ns\n...benchmarkReturnReference        2  thrpt        5  0.286 \u00b1 0.024  ops/ns\n...benchmarkReturnReference        1  thrpt        5  0.293 \u00b1 0.008  ops/ns\n</code></pre>\n\n<p>Okay, so reference tests appear 3x slower. But wait, it uses an old JMH (1.1.1), let's update to current latest (1.7.1):</p>\n\n<pre><code>Benchmark                    (value)   Mode  Cnt  Score   Error   Units\n...benchmarkReturnOrdinal          3  thrpt    5  0.326 \u00b1 0.010  ops/ns\n...benchmarkReturnOrdinal          2  thrpt    5  0.329 \u00b1 0.004  ops/ns\n...benchmarkReturnOrdinal          1  thrpt    5  0.329 \u00b1 0.004  ops/ns\n...benchmarkReturnReference        3  thrpt    5  0.288 \u00b1 0.005  ops/ns\n...benchmarkReturnReference        2  thrpt    5  0.288 \u00b1 0.005  ops/ns\n...benchmarkReturnReference        1  thrpt    5  0.288 \u00b1 0.002  ops/ns\n</code></pre>\n\n<p>Oops, now they are only barely slower. BTW, this also tells us the test is infrastructure-bound. Okay, can we see what really happens?</p>\n\n<p>If you build the benchmarks, and look around what exactly calls your <code>@Benchmark</code> methods, then you'll see something like:</p>\n\n<pre><code>public void benchmarkReturnOrdinal_thrpt_jmhStub(InfraControl control, RawResults result, ReturnEnumObjectVersusPrimitiveBenchmark_jmh l_returnenumobjectversusprimitivebenchmark0_0, Blackhole_jmh l_blackhole1_1) throws Throwable {\n    long operations = 0;\n    long realTime = 0;\n    result.startTime = System.nanoTime();\n    do {\n        l_blackhole1_1.consume(l_longname.benchmarkReturnOrdinal());\n        operations++;\n    } while(!control.isDone);\n    result.stopTime = System.nanoTime();\n    result.realTime = realTime;\n    result.measuredOps = operations;\n}\n</code></pre>\n\n<p>That <code>l_blackhole1_1</code> has a <code>consume</code> method, which \"consumes\" the values (see <code>Blackhole</code> for rationale). <code>Blackhole.consume</code> has overloads for <a href=\"http://hg.openjdk.java.net/code-tools/jmh/file/96d8047fbf9a/jmh-core/src/main/java/org/openjdk/jmh/infra/Blackhole.java#l298\">references</a> and <a href=\"http://hg.openjdk.java.net/code-tools/jmh/file/96d8047fbf9a/jmh-core/src/main/java/org/openjdk/jmh/infra/Blackhole.java#l384\">primitives</a>, and that alone is enough to justify the performance difference.</p>\n\n<p>There is a rationale why these methods look different: they are trying to be as fast as possible for their types of argument. They do not necessarily exhibit the same performance characteristics, even though we try to match them, hence the more symmetric result with newer JMH. Now, you can even go to <code>-prof perfasm</code> to see the generated code for your tests and see why the performance is different, but that's beyond the point here.</p>\n\n<p>If you really <em>want</em> to understand how returning the primitive and/or reference differs performance-wise, you would need to enter a <strong><em>big scary grey zone</em></strong> of nuanced performance benchmarking. E.g. something like this test:</p>\n\n<pre><code>@BenchmarkMode(Mode.AverageTime)\n@OutputTimeUnit(TimeUnit.NANOSECONDS)\n@Warmup(iterations = 5, time = 1, timeUnit = TimeUnit.SECONDS)\n@Measurement(iterations = 5, time = 1, timeUnit = TimeUnit.SECONDS)\n@Fork(5)\npublic class PrimVsRef {\n\n    @Benchmark\n    public void prim() {\n        doPrim();\n    }\n\n    @Benchmark\n    public void ref() {\n        doRef();\n    }\n\n    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n    private int doPrim() {\n        return 42;\n    }\n\n    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n    private Object doRef() {\n        return this;\n    }\n\n}\n</code></pre>\n\n<p>...which yields the same result for primitives and references:</p>\n\n<pre><code>Benchmark       Mode  Cnt  Score   Error  Units\nPrimVsRef.prim  avgt   25  2.637 \u00b1 0.017  ns/op\nPrimVsRef.ref   avgt   25  2.634 \u00b1 0.005  ns/op\n</code></pre>\n\n<p>As I said above, these tests <em>require</em> following up on the reasons for the results. In this case, the generated code for both is almost the same, and that explains the result.</p>\n\n<p><strong>prim:</strong></p>\n\n<pre><code>                  [Verified Entry Point]\n 12.69%    1.81%    0x00007f5724aec100: mov    %eax,-0x14000(%rsp)\n  0.90%    0.74%    0x00007f5724aec107: push   %rbp\n  0.01%    0.01%    0x00007f5724aec108: sub    $0x30,%rsp         \n 12.23%   16.00%    0x00007f5724aec10c: mov    $0x2a,%eax   ; load \"42\"\n  0.95%    0.97%    0x00007f5724aec111: add    $0x30,%rsp\n           0.02%    0x00007f5724aec115: pop    %rbp\n 37.94%   54.70%    0x00007f5724aec116: test   %eax,0x10d1aee4(%rip)        \n  0.04%    0.02%    0x00007f5724aec11c: retq  \n</code></pre>\n\n<p><strong>ref:</strong></p>\n\n<pre><code>                  [Verified Entry Point]\n 13.52%    1.45%    0x00007f1887e66700: mov    %eax,-0x14000(%rsp)\n  0.60%    0.37%    0x00007f1887e66707: push   %rbp\n           0.02%    0x00007f1887e66708: sub    $0x30,%rsp         \n 13.63%   16.91%    0x00007f1887e6670c: mov    %rsi,%rax     ; load \"this\"\n  0.50%    0.49%    0x00007f1887e6670f: add    $0x30,%rsp\n  0.01%             0x00007f1887e66713: pop    %rbp\n 39.18%   57.65%    0x00007f1887e66714: test   %eax,0xe3e78e6(%rip)\n  0.02%             0x00007f1887e6671a: retq   \n</code></pre>\n\n<p>[sarcasm] See how easy it is! [/sarcasm]</p>\n\n<p>The pattern is: the simpler the question, the more you have to work out to make a plausible and reliable answer.</p>\n", "title": "Why is returning a Java object reference so much slower than returning a primitive", "tags": ["java", "low-latency", "jmh"], "link": "http://stackoverflow.com/questions/29472797/why-is-returning-a-java-object-reference-so-much-slower-than-returning-a-primiti/29476911#29476911", "question_id": 29472797, "answer_id": 29476911}], "creation_date": 1428328883, "score": 69, "link": "http://stackoverflow.com/questions/29472797/why-is-returning-a-java-object-reference-so-much-slower-than-returning-a-primiti", "question_id": 29472797}, {"body": "<p>I just stumbled upon something. At first I thought it might be a case of branch misprediction like it is <a href=\"http://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-an-unsorted-array\">in this case</a>, but I cannot explain why branch misprediction should cause this phenomenon. I implemented two versions of Bubble Sort in Java and did some performance tests:</p>\n\n<pre><code>import java.util.Random;\n\npublic class BubbleSortAnnomaly {\n\n    public static void main(String... args) {\n        final int ARRAY_SIZE = Integer.parseInt(args[0]);\n        final int LIMIT = Integer.parseInt(args[1]);\n        final int RUNS = Integer.parseInt(args[2]);\n\n        int[] a = new int[ARRAY_SIZE];\n        int[] b = new int[ARRAY_SIZE];\n        Random r = new Random();\n        for (int run = 0; RUNS &gt; run; ++run) {\n            for (int i = 0; i &lt; ARRAY_SIZE; i++) {\n                a[i] = r.nextInt(LIMIT);\n                b[i] = a[i];\n            }\n\n            System.out.print(\"Sorting with sortA: \");\n            long start = System.nanoTime();\n            int swaps = bubbleSortA(a);\n\n            System.out.println(  (System.nanoTime() - start) + \" ns. \"\n                               + \"It used \" + swaps + \" swaps.\");\n\n            System.out.print(\"Sorting with sortB: \");\n            start = System.nanoTime();\n            swaps = bubbleSortB(b);\n\n            System.out.println(  (System.nanoTime() - start) + \" ns. \"\n                               + \"It used \" + swaps + \" swaps.\");\n        }\n    }\n\n    public static int bubbleSortA(int[] a) {\n        int counter = 0;\n        for (int i = a.length - 1; i &gt;= 0; --i) {\n            for (int j = 0; j &lt; i; ++j) {\n                if (a[j] &gt; a[j + 1]) {\n                    swap(a, j, j + 1);\n                    ++counter;\n                }\n            }\n        }\n        return (counter);\n    }\n\n    public static int bubbleSortB(int[] a) {\n        int counter = 0;\n        for (int i = a.length - 1; i &gt;= 0; --i) {\n            for (int j = 0; j &lt; i; ++j) {\n                if (a[j] &gt;= a[j + 1]) {\n                    swap(a, j, j + 1);\n                    ++counter;\n                }\n            }\n        }\n        return (counter);\n    }\n\n    private static void swap(int[] a, int j, int i) {\n        int h = a[i];\n        a[i] = a[j];\n        a[j] = h;\n    }\n}\n</code></pre>\n\n<p>As you can see, the only difference between those two sorting methods is the <code>&gt;</code> vs. <code>&gt;=</code>. When running the program with <code>java BubbleSortAnnomaly 50000 10 10</code>, you would obviously expect that <code>sortB</code> is slower than <code>sortA</code>. But I got the following (or similar) output on three different machines:</p>\n\n<pre><code>Sorting with sortA: 4.214 seconds. It used  564960211 swaps.\nSorting with sortB: 2.278 seconds. It used 1249750569 swaps.\nSorting with sortA: 4.199 seconds. It used  563355818 swaps.\nSorting with sortB: 2.254 seconds. It used 1249750348 swaps.\nSorting with sortA: 4.189 seconds. It used  560825110 swaps.\nSorting with sortB: 2.264 seconds. It used 1249749572 swaps.\nSorting with sortA: 4.17  seconds. It used  561924561 swaps.\nSorting with sortB: 2.256 seconds. It used 1249749766 swaps.\nSorting with sortA: 4.198 seconds. It used  562613693 swaps.\nSorting with sortB: 2.266 seconds. It used 1249749880 swaps.\nSorting with sortA: 4.19  seconds. It used  561658723 swaps.\nSorting with sortB: 2.281 seconds. It used 1249751070 swaps.\nSorting with sortA: 4.193 seconds. It used  564986461 swaps.\nSorting with sortB: 2.266 seconds. It used 1249749681 swaps.\nSorting with sortA: 4.203 seconds. It used  562526980 swaps.\nSorting with sortB: 2.27  seconds. It used 1249749609 swaps.\nSorting with sortA: 4.176 seconds. It used  561070571 swaps.\nSorting with sortB: 2.241 seconds. It used 1249749831 swaps.\nSorting with sortA: 4.191 seconds. It used  559883210 swaps.\nSorting with sortB: 2.257 seconds. It used 1249749371 swaps.\n</code></pre>\n\n<p>When you set the parameter for <code>LIMIT</code> to, e.g., <code>50000</code> (<code>java BubbleSortAnnomaly 50000 50000 10</code>), you get the expected results:</p>\n\n<pre><code>Sorting with sortA: 3982697438 ns. It used 625941897 swaps.\nSorting with sortB: 4657909823 ns. It used 789391382 swaps.\n</code></pre>\n\n<p>I ported the program to C++ to determine whether this problem is Java-specific. Here is the C++ code.</p>\n\n<pre><code>#include &lt;cstdlib&gt;\n#include &lt;iostream&gt;\n\n#include &lt;omp.h&gt;\n\n#ifndef ARRAY_SIZE\n#define ARRAY_SIZE 50000\n#endif\n\n#ifndef LIMIT\n#define LIMIT 10\n#endif\n\n#ifndef RUNS\n#define RUNS 10\n#endif\n\nvoid swap(int * a, int i, int j)\n{\n    int h = a[i];\n    a[i] = a[j];\n    a[j] = h;\n}\n\nint bubbleSortA(int * a)\n{\n    const int LAST = ARRAY_SIZE - 1;\n    int counter = 0;\n    for (int i = LAST; i &gt; 0; --i)\n    {\n        for (int j = 0; j &lt; i; ++j)\n        {\n            int next = j + 1;\n            if (a[j] &gt; a[next])\n            {\n                swap(a, j, next);\n                ++counter;\n            }\n        }\n    }\n    return (counter);\n}\n\nint bubbleSortB(int * a)\n{\n    const int LAST = ARRAY_SIZE - 1;\n    int counter = 0;\n    for (int i = LAST; i &gt; 0; --i)\n    {\n        for (int j = 0; j &lt; i; ++j)\n        {\n            int next = j + 1;\n            if (a[j] &gt;= a[next])\n            {\n                swap(a, j, next);\n                ++counter;\n            }\n        }\n    }\n    return (counter);\n}\n\nint main()\n{\n    int * a = (int *) malloc(ARRAY_SIZE * sizeof(int));\n    int * b = (int *) malloc(ARRAY_SIZE * sizeof(int));\n    for (int run = 0; RUNS &gt; run; ++run)\n    {\n        for (int idx = 0; idx &lt; ARRAY_SIZE; ++idx)\n        {\n            a[idx] = std::rand() % LIMIT;\n            b[idx] = a[idx];\n        }\n\n        std::cout &lt;&lt; \"Sorting with sortA: \";\n        double start = omp_get_wtime();\n        int swaps = bubbleSortA(a);\n\n        std::cout &lt;&lt; (omp_get_wtime() - start) &lt;&lt; \" seconds. It used \" &lt;&lt; swaps\n                  &lt;&lt; \" swaps.\" &lt;&lt; std::endl;\n\n        std::cout &lt;&lt; \"Sorting with sortB: \";\n        start = omp_get_wtime();\n        swaps = bubbleSortB(b);\n\n        std::cout &lt;&lt; (omp_get_wtime() - start) &lt;&lt; \" seconds. It used \" &lt;&lt; swaps\n                  &lt;&lt; \" swaps.\" &lt;&lt; std::endl;\n    }\n\n    free(a);\n    free(b);\n\n    return (0);\n}\n</code></pre>\n\n<p>This program shows the same behaviour. Can someone explain, what exactly is going on here?</p>\n\n<p>Executing <code>sortB</code> first and then <code>sortA</code> does not change the results.</p>\n", "tags": ["java", "c++", "performance", "optimization"], "title": "&gt; vs. &gt;= causes significant performance difference", "answers": [{"body": "<p>I think this can indeed be explained by branch misprediction.</p>\n\n<p>Consider, for example, LIMIT=11, and <code>sortB</code>. On first iteration of the outer loop, it will very quickly stumble upon one of elements equal to 10. So it will have <code>a[j]=10</code>, and therefore definitely <code>a[j]</code> will be <code>&gt;=a[next]</code>, as there are no elements that are greater than 10. Therefore, it will perform a swap, then do one step in <code>j</code> only to find that <code>a[j]=10</code> once again (the same swapped value). So once again it will be <code>a[j]&gt;=a[next]</code>, and so one. Every comparison except several at the very beginning will be true. Similarly it will run on the next iterations of the outer loop.</p>\n\n<p>Not the same for <code>sortA</code>. It will start roughly the same way, stumble upon <code>a[j]=10</code>, do some swaps in a similar manner, but only to a point when it finds <code>a[next]=10</code> too. Then the condition will be false, and no swap will be done. An so on: every time it stumbles on <code>a[next]=10</code>, the condition is false and no swaps are done. Therefore, this condition is true 10 times out of 11 (values of <code>a[next]</code> from 0 to 9), and false in 1 case out of 11. Nothing strange that branch prediction fails.</p>\n", "title": "&gt; vs. &gt;= causes significant performance difference", "tags": ["java", "c++", "performance", "optimization"], "link": "http://stackoverflow.com/questions/30223441/vs-causes-significant-performance-difference/30223822#30223822", "question_id": 30223441, "answer_id": 30223822}, {"body": "<p>I think it may indeed be due to branch prediction. If you count the number of swaps compared to the number of inner sort iterations you find:</p>\n\n<p><strong>Limit = 10</strong></p>\n\n<ul>\n<li>A = 560M swaps / 1250M loops</li>\n<li>B = 1250M swaps / 1250M loops (0.02% less swaps than loops)</li>\n</ul>\n\n<p><strong>Limit = 50000</strong></p>\n\n<ul>\n<li>A = 627M swaps / 1250M loops</li>\n<li>B = 850M swaps / 1250M loops</li>\n</ul>\n\n<p>So in the <code>Limit == 10</code> case the swap is performed 99.98% of the time in the B sort which is obviously favourable for the branch predictor. In the <code>Limit == 50000</code> case the swap is only hit randomly 68% so the branch predictor is less beneficial.</p>\n", "title": "&gt; vs. &gt;= causes significant performance difference", "tags": ["java", "c++", "performance", "optimization"], "link": "http://stackoverflow.com/questions/30223441/vs-causes-significant-performance-difference/30223885#30223885", "question_id": 30223441, "answer_id": 30223885}, {"body": "<blockquote>\n  <p><strong>Edit 2:</strong> This answer is probably wrong in most cases, lower when I say everything above is correct is still true, but the lower portion is not true for most processor architectures, see the comments. However, I will say that it's still <em>theoretically</em> possible there is some JVM on some OS/Architecture that does this, but that JVM is probably poorly implemented or it's a weird architecture. Also, this is theoretically possible in the sense that most conceivable things are theoretically possible, so I'd take the last portion with a grain of salt.</p>\n</blockquote>\n\n<p>First, I am not sure about the C++, but I can talk some about the Java.</p>\n\n<p>Here is some code,</p>\n\n<pre><code>public class Example {\n\n    public static boolean less(final int a, final int b) {\n        return a &lt; b;\n    }\n\n    public static boolean lessOrEqual(final int a, final int b) {\n        return a &lt;= b;\n    }\n}\n</code></pre>\n\n<p>Running <code>javap -c</code> on it I get the bytecode</p>\n\n<pre><code>public class Example {\n  public Example();\n    Code:\n       0: aload_0\n       1: invokespecial #8                  // Method java/lang/Object.\"&lt;init&gt;\":()V\n       4: return\n\n  public static boolean less(int, int);\n    Code:\n       0: iload_0\n       1: iload_1\n       2: if_icmpge     7\n       5: iconst_1\n       6: ireturn\n       7: iconst_0\n       8: ireturn\n\n  public static boolean lessOrEqual(int, int);\n    Code:\n       0: iload_0\n       1: iload_1\n       2: if_icmpgt     7\n       5: iconst_1\n       6: ireturn\n       7: iconst_0\n       8: ireturn\n}\n</code></pre>\n\n<p>You'll notice the only difference is <code>if_icmpge</code> (if compare greater/equal) versus <code>if_icmpgt</code> (if compare greater than).</p>\n\n<p>Everything above is fact, the rest is my best guess as to how <code>if_icmpge</code> and <code>if_icmpgt</code> are handled based on a college course I took on assembly language. To get a better answer you should look up how your JVM handles these. My guess is that C++ also compiles down to a similar operation.</p>\n\n<blockquote>\n  <p>Edit: Documentation on <code>if_i&lt;cond&gt;</code> is <a href=\"http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-6.html#jvms-6.5.if_icmp_cond\" rel=\"nofollow\">here</a></p>\n</blockquote>\n\n<p>The way computers compare numbers is subtracting one from the other and checking if that number is 0 or not, so when doing <code>a &lt; b</code> if subtracts <code>b</code> from <code>a</code> and sees if the result is less than 0 by checking the sign of the value (<code>b - a &lt; 0</code>). To do <code>a &lt;= b</code> though it has to do an additional step and subtract 1 (<code>b - a - 1 &lt; 0</code>).</p>\n\n<p>Normally this is a very miniscule difference, but this isn't <em>any</em> code, this is freaking bubble sort! O(n^2) is the average number of times we are doing this particular comparison because it's in the inner most loop.</p>\n\n<p>Yes, it may have something to do with branch prediction I am not sure, I am not an expert on that, but I think this may also play a non-insignificant role.</p>\n", "title": "&gt; vs. &gt;= causes significant performance difference", "tags": ["java", "c++", "performance", "optimization"], "link": "http://stackoverflow.com/questions/30223441/vs-causes-significant-performance-difference/30224411#30224411", "question_id": 30223441, "answer_id": 30224411}, {"body": "<p>Using the C++ code provided (time counting removed) with the <code>perf stat</code> command I got results that confirm the brach-miss theory. </p>\n\n<p>With <code>Limit = 10</code>, BubbleSortB highly benefits from branch prediction (0.01% misses) but with <code>Limit = 50000</code> branch prediction fails even more (with 15.65% misses) than in BubbleSortA (12.69% and 12.76% misses respectively).</p>\n\n<p><strong>BubbleSortA Limit=10:</strong></p>\n\n<pre><code>Performance counter stats for './bubbleA.out':\n\n   46670.947364 task-clock                #    0.998 CPUs utilized          \n             73 context-switches          #    0.000 M/sec                  \n             28 CPU-migrations            #    0.000 M/sec                  \n            379 page-faults               #    0.000 M/sec                  \n117,298,787,242 cycles                    #    2.513 GHz                    \n117,471,719,598 instructions              #    1.00  insns per cycle        \n 25,104,504,912 branches                  #  537.904 M/sec                  \n  3,185,376,029 branch-misses             #   12.69% of all branches        \n\n   46.779031563 seconds time elapsed\n</code></pre>\n\n<p><strong>BubbleSortA Limit=50000:</strong></p>\n\n<pre><code>Performance counter stats for './bubbleA.out':\n\n   46023.785539 task-clock                #    0.998 CPUs utilized          \n             59 context-switches          #    0.000 M/sec                  \n              8 CPU-migrations            #    0.000 M/sec                  \n            379 page-faults               #    0.000 M/sec                  \n118,261,821,200 cycles                    #    2.570 GHz                    \n119,230,362,230 instructions              #    1.01  insns per cycle        \n 25,089,204,844 branches                  #  545.136 M/sec                  \n  3,200,514,556 branch-misses             #   12.76% of all branches        \n\n   46.126274884 seconds time elapsed\n</code></pre>\n\n<p><strong>BubbleSortB Limit=10:</strong></p>\n\n<pre><code>Performance counter stats for './bubbleB.out':\n\n   26091.323705 task-clock                #    0.998 CPUs utilized          \n             28 context-switches          #    0.000 M/sec                  \n              2 CPU-migrations            #    0.000 M/sec                  \n            379 page-faults               #    0.000 M/sec                  \n 64,822,368,062 cycles                    #    2.484 GHz                    \n137,780,774,165 instructions              #    2.13  insns per cycle        \n 25,052,329,633 branches                  #  960.179 M/sec                  \n      3,019,138 branch-misses             #    0.01% of all branches        \n\n   26.149447493 seconds time elapsed\n</code></pre>\n\n<p><strong>BubbleSortB Limit=50000:</strong></p>\n\n<pre><code>Performance counter stats for './bubbleB.out':\n\n   51644.210268 task-clock                #    0.983 CPUs utilized          \n          2,138 context-switches          #    0.000 M/sec                  \n             69 CPU-migrations            #    0.000 M/sec                  \n            378 page-faults               #    0.000 M/sec                  \n144,600,738,759 cycles                    #    2.800 GHz                    \n124,273,104,207 instructions              #    0.86  insns per cycle        \n 25,104,320,436 branches                  #  486.101 M/sec                  \n  3,929,572,460 branch-misses             #   15.65% of all branches        \n\n   52.511233236 seconds time elapsed\n</code></pre>\n", "title": "&gt; vs. &gt;= causes significant performance difference", "tags": ["java", "c++", "performance", "optimization"], "link": "http://stackoverflow.com/questions/30223441/vs-causes-significant-performance-difference/30231889#30231889", "question_id": 30223441, "answer_id": 30231889}], "creation_date": 1431544473, "score": 69, "link": "http://stackoverflow.com/questions/30223441/vs-causes-significant-performance-difference", "question_id": 30223441}, {"body": "<p>So, cutting my teeth on JavaFX, so far things are moving along fine.</p>\n\n<p>However, all of the text fields have a line running across them, 10px or so from the top.</p>\n\n<p>Not just in my application, but in the SceneBuilder application as well.</p>\n\n<p>Note, I'm not using any explicit CSS, I don't know what SceneBuilder uses. The screen shot is from SceneBuilder, my screens look identical.</p>\n\n<p><img src=\"http://i.stack.imgur.com/8Cj1k.png\" alt=\"JavaFX TextFields\"></p>\n\n<p>So, it's something fundamental.</p>\n\n<pre><code>java -version\njava version \"1.8.0_45\"\nJava(TM) SE Runtime Environment (build 1.8.0_45-b14)\nJava HotSpot(TM) 64-Bit Server VM (build 25.45-b02, mixed mode)\n</code></pre>\n\n<p>On <strong>Mac OS 10.9.5</strong></p>\n\n<p>Just curious if anyone else has seen this and has a suggestion.</p>\n\n<p>Edit: I downloaded the samples, it's clearly something to do with the Modena theme. The Caspian theme looks just fine. Below is a screenshot from the Modena.jar TextFields section. It's interesting that the <code>TextArea</code> suffers a similar issue, though not as universally as the <code>TextField</code>.</p>\n\n<p><img src=\"http://i.stack.imgur.com/rmkY4.png\" alt=\"Modena.jar screenshot\"></p>\n\n<p>More addenda:</p>\n\n<p>Folks keep clamoring for this, so here it is. I essentially just followed this: <a href=\"https://docs.oracle.com/javafx/2/get_started/form.htm\">https://docs.oracle.com/javafx/2/get_started/form.htm</a> and use a default Netbeans 8.0.2 JavaFX Application project. Just cut and pasted it in from the website.</p>\n\n<pre><code>public class Fxlinetest extends Application {\n\n    @Override\n    public void start(Stage primaryStage) {\n        primaryStage.setTitle(\"JavaFX Welcome\");\n\n        GridPane grid = new GridPane();\n        grid.setAlignment(Pos.CENTER);\n        grid.setHgap(10);\n        grid.setVgap(10);\n        grid.setPadding(new Insets(25, 25, 25, 25));\n\n        Text scenetitle = new Text(\"Welcome\");\n        scenetitle.setFont(Font.font(\"Tahoma\", FontWeight.NORMAL, 20));\n        grid.add(scenetitle, 0, 0, 2, 1);\n\n        Label userName = new Label(\"User Name:\");\n        grid.add(userName, 0, 1);\n\n        TextField userTextField = new TextField();\n        grid.add(userTextField, 1, 1);\n\n        Label pw = new Label(\"Password:\");\n        grid.add(pw, 0, 2);\n\n        PasswordField pwBox = new PasswordField();\n        grid.add(pwBox, 1, 2);\n\n        Button btn = new Button(\"Sign in\");\n        HBox hbBtn = new HBox(10);\n        hbBtn.setAlignment(Pos.BOTTOM_RIGHT);\n        hbBtn.getChildren().add(btn);\n        grid.add(hbBtn, 1, 4);\n\n        final Text actiontarget = new Text();\n        grid.add(actiontarget, 1, 6);\n\n        Scene scene = new Scene(grid, 300, 275);\n        primaryStage.setScene(scene);\n\n        primaryStage.show();\n    }\n\n    public static void main(String[] args) {\n        launch(args);\n    }\n}\n</code></pre>\n\n<p><a href=\"http://i.stack.imgur.com/KG16o.png\"><img src=\"http://i.stack.imgur.com/KG16o.png\" alt=\"Sample Form Screenshot\"></a></p>\n\n<pre><code>java version \"1.8.0_66\"\nJava(TM) SE Runtime Environment (build 1.8.0_66-b17)\nJava HotSpot(TM) 64-Bit Server VM (build 25.66-b17, mixed mode)\n</code></pre>\n\n<p>Here's is a screen shot of the ThreeDOM view from ScenicView 8.6, notice the line:\n<a href=\"http://i.stack.imgur.com/ZpA2l.png\"><img src=\"http://i.stack.imgur.com/ZpA2l.png\" alt=\"ThreeDOM view from ScenicView -- notice the line\"></a></p>\n\n<pre><code>java version \"1.8.0_74\"\nJava(TM) SE Runtime Environment (build 1.8.0_74-b02)\nJava HotSpot(TM) 64-Bit Server VM (build 25.74-b02, mixed mode)\n</code></pre>\n\n<p>Here's the sample screen using the Caspian theme via:</p>\n\n<pre><code>    System.setProperty(\"javafx.userAgentStylesheetUrl\", \"caspian\");\n</code></pre>\n\n<p><a href=\"http://i.stack.imgur.com/XZwDZ.png\"><img src=\"http://i.stack.imgur.com/XZwDZ.png\" alt=\"Caspian Theme view\"></a></p>\n", "tags": ["java", "javafx", "textbox"], "title": "All my JavaFX TextFields have lines in them", "answers": [{"body": "<p>Emm... I am not 100% sure cause I don't have the effect on my jvm though I have Linux platform; But still I tried to emulate (? not sure I succeeded pretty well) anyways I guess the issue you describe may be really related to</p>\n\n<ul>\n<li>a) font</li>\n<li>b) repaint problem</li>\n</ul>\n\n<p>The code you represented I modified a bit to show what happens to gridpanel lines if components located in \"some\" order; </p>\n\n<pre><code>import javafx.application.Application;\nimport javafx.geometry.Insets;\nimport javafx.geometry.Pos;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.TextField;\nimport javafx.scene.layout.GridPane;\nimport javafx.scene.layout.HBox;\nimport javafx.scene.text.Font;\nimport javafx.scene.text.FontWeight;\nimport javafx.scene.text.Text;\nimport javafx.stage.Stage;\n\n\npublic class BlackLineIssueJavaFXApplication1 extends Application {\n\n\n\n    @Override\n    public void start(Stage primaryStage) {\n\n        System.setProperty(\"javafx.userAgentStylesheetUrl\", \"Modena\");\n        //Modena,caspian\n        primaryStage.setTitle(\"JavaFX Welcome\");\n\n        GridPane grid = new GridPane();\n        grid.setAlignment(Pos.CENTER);\n        grid.setHgap(10);\n        grid.setVgap(10);\n        grid.setPadding(new Insets(25, 25, 25, 25));\n//        grid.setGridLinesVisible(false);//&lt;---\n\n        Text scenetitle = new Text(\"Welcome\");//original\n//        Label scenetitle = new Label(\"Welcome\");//modified\n        scenetitle.setFont(Font.font(\"Tahoma\", FontWeight.NORMAL, 20));//original\n//        scenetitle.setFont(Font.font(\"Verdana\", FontWeight.LIGHT, 30));//modified\n        grid.add(scenetitle, 0, 0, 2, 1);//original\n//        grid.add(scenetitle, 0, 0);//modified\n\n\n        Label userName = new Label(\"User Name:\");//original\n//        Text userName = new Text(\"User Name:\");\n//        userName.setFont(Font.font(\"Tahoma\", FontWeight.NORMAL, 11));\n\n//        grid.add(userName, 0, 1);//original\n        grid.add(userName, 0, 1,1,2);//modified\n\n\n        grid.setGridLinesVisible(true);//&lt;---\n\n        TextField userTextField = new TextField();  \n//        userTextField.setFont(Font.font(\"Tahoma\", FontWeight.NORMAL, 20));//modified\n        userTextField.setOpacity(0.5);//&lt;----\n\n//        grid.add(userTextField, 1, 1);//original\n        grid.add(userTextField, 1, 1,1,2);//modified\n\n        grid.setGridLinesVisible(false);//&lt;---\n\n\n\n        Button btn = new Button(\"Sign in\");\n        HBox hbBtn = new HBox(10);\n\n        hbBtn.setAlignment(Pos.BOTTOM_RIGHT);\n        hbBtn.getChildren().add(btn);\n        grid.add(hbBtn, 1, 4);//original\n        //grid.add(hbBtn, 1, 3);//modified\n\n        final Text actiontarget = new Text();\n        grid.add(actiontarget, 1, 6);\n\n        Scene scene = new Scene(grid, 300, 275);\n        primaryStage.setScene(scene);\n\n        primaryStage.show();\n    }\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        launch(args);\n    }\n\n}\n</code></pre>\n\n<p>The running app looks like that : </p>\n\n<p><strong>Image A :</strong> </p>\n\n<p><a href=\"http://i.stack.imgur.com/k1SHz.png\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/k1SHz.png\" alt=\"enter image description here\"></a></p>\n\n<p>...so the black line appears in text field in distance about 10px maybe just because the Vgap set to 10; Moreover, see the \"welcome\" text is crossed but with vertical lines; I tested if \"not to use font\" for <strong>scenetitle</strong> it located correctly (see image); </p>\n\n<p><strong>Image B</strong></p>\n\n<p><a href=\"http://i.stack.imgur.com/JwshF.png\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/JwshF.png\" alt=\"enter image description here\"></a></p>\n\n<p>So something is maybe wrong with GridPane I guess; Maybe the default GridPane has <em>\"lines visible\"</em> or something but after components added the lines \"disposed\" but because of TextField which should contain \"text\" with \"font\" (see image A <em>vertical lines cross text because of the font</em>) the repaint doesn't work properly and you can see the black line at the top as image A shows; I cannot emulate the effect totally but still I may suggest where the \"un-disposed\" line may come from or something :) </p>\n\n<p>I'll try to analyse a bit further anyways the info I describe in this answer may help you to find where to start debugging;</p>\n\n<p>If you need some additional information please let me know;</p>\n\n<p>Good luck :)</p>\n\n<p>toolkit I used to test : </p>\n\n<ul>\n<li>jdk-1.0.8_25</li>\n<li>jre-1.8.0_60 (Linux x64)</li>\n<li>ide : netbeans 8.0.1</li>\n</ul>\n", "title": "All my JavaFX TextFields have lines in them", "tags": ["java", "javafx", "textbox"], "link": "http://stackoverflow.com/questions/30698297/all-my-javafx-textfields-have-lines-in-them/35450052#35450052", "question_id": 30698297, "answer_id": 35450052}, {"body": "<p>This is a <a href=\"https://bugs.openjdk.java.net/browse/JDK-8088053\">known unresolved bug</a>.</p>\n\n<p>The problem seems to be that it isn't reproducible for the developers.</p>\n\n<p>In the comments of the bug report the use of a jvm parameter is suggested:</p>\n\n<pre><code>-Dprism.disableRegionCaching=true\n</code></pre>\n\n<p>However, if anyone is able to reproduce this very rare bug, my suggestion is to:</p>\n\n<ul>\n<li>modify the modena css file until the bug is resolved and share that information. it may help since caspian seems to work.</li>\n<li>if necessary debug into the javafx source to isolate the issue. however, the problem might run deeper, but it's worth a shot</li>\n</ul>\n", "title": "All my JavaFX TextFields have lines in them", "tags": ["java", "javafx", "textbox"], "link": "http://stackoverflow.com/questions/30698297/all-my-javafx-textfields-have-lines-in-them/35498145#35498145", "question_id": 30698297, "answer_id": 35498145}], "creation_date": 1433709891, "score": 68, "link": "http://stackoverflow.com/questions/30698297/all-my-javafx-textfields-have-lines-in-them", "question_id": 30698297}, {"body": "<p>I was trying to install openam 12 war with apache tomcat agent as configured sso.But tried more than fifty times but am getting only error.</p>\n\n<p>If I change below property value as <em>amAdmin</em> from <em>webagent</em>,while calling the protected application in tomcat second instance it countinously redirecting to same page again and again but didn't get any exception. amAdmin is my admin user of openam console.</p>\n\n<pre><code>OpenSSOAgentBootstrap.properties/com.sun.identity.agents.app.username =\n</code></pre>\n\n<p><strong>Exception in Tomcat log</strong></p>\n\n<pre><code>Apr 16, 2015 5:41:10 PM org.apache.tomcat.util.digester.Digester startElement\nSEVERE: Begin event threw error\njava.lang.ExceptionInInitializerError\n    at com.sun.identity.agents.arch.AgentConfiguration.bootStrapClientConfiguration(AgentConfiguration.java:727)\n    at com.sun.identity.agents.arch.AgentConfiguration.initializeConfiguration(AgentConfiguration.java:1140)\n    at com.sun.identity.agents.arch.AgentConfiguration.&lt;clinit&gt;(AgentConfiguration.java:1579)\n    at com.sun.identity.agents.arch.Manager.&lt;clinit&gt;(Manager.java:675)\n    at com.sun.identity.agents.tomcat.v6.AmTomcatRealm.&lt;clinit&gt;(AmTomcatRealm.java:67)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:526)\n    at java.lang.Class.newInstance(Class.java:374)\n    at org.apache.tomcat.util.digester.ObjectCreateRule.begin(ObjectCreateRule.java:145)\n    at org.apache.tomcat.util.digester.Digester.startElement(Digester.java:1288)\n    at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:509)\n    at com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement(AbstractXMLDocumentParser.java:182)\n    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1342)\n    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2770)\n    at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)\n    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)\n    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)\n    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)\n    at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)\n    at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)\n    at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:649)\n    at org.apache.tomcat.util.digester.Digester.parse(Digester.java:1561)\n    at org.apache.catalina.startup.Catalina.load(Catalina.java:615)\n    at org.apache.catalina.startup.Catalina.load(Catalina.java:663)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.apache.catalina.startup.Bootstrap.load(Bootstrap.java:280)\n    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:454)\nCaused by: com.sun.identity.security.AMSecurityPropertiesException: AdminTokenAction:  FATAL ERROR: Cannot obtain Application SSO token.\nCheck AMConfig.properties for the following properties\n    com.sun.identity.agents.app.username\n    com.iplanet.am.service.password\n    at com.sun.identity.security.AdminTokenAction.run(AdminTokenAction.java:272)\n    at com.sun.identity.security.AdminTokenAction.run(AdminTokenAction.java:76)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at com.sun.identity.common.configuration.ConfigurationObserver.registerListeners(ConfigurationObserver.java:89)\n    at com.sun.identity.common.configuration.ConfigurationObserver.getInstance(ConfigurationObserver.java:114)\n    at com.sun.identity.common.DebugPropertiesObserver.&lt;clinit&gt;(DebugPropertiesObserver.java:49)\n    ... 32 more\n</code></pre>\n\n<p><strong>host entry</strong> </p>\n\n<pre><code>127.0.0.1 org.sso.com test.openam.com\n</code></pre>\n\n<p><strong>Tomcat two instances from apache-tomcat-7.0.57</strong></p>\n\n<pre><code>**1, One for OpenAM.12.0.war running in port 8080\n2, Another one for webagent(openam-Tomcat-v6-7-Agent-3.3.0.zip) with my protected application running in port 7070**\n</code></pre>\n\n<p><strong>OpenAM configuration :</strong></p>\n\n<pre><code>1, Default configuration amAdmin with password (password) and policy-agent with password(password1) created.\n2, Login as amAdmin --&gt;Access Control -- &gt;OpenAMIDPRealm--&gt;created\n3, Access Control -- &gt;OpenAMIDPRealm--&gt;subject--&gt;idpuser--&gt;password(password)--&gt;created\n4, Access Control -- &gt;OpenAMIDPRealm--&gt;agent--&gt;J2EE--&gt;name(webagent)--&gt;password(password)--&gt;local--&gt;agenturl(http://org.sso.com:7070/agentapp)--&gt;created\n5, Federation -- &gt;Create Circle of Trust -- &gt; OpenAMIDPCOT --&gt;select realm (OpenAMIDPRealm) --&gt;created\n6, Common Tasks --&gt; create hosted identity provider --&gt; select realm (OpenAMIDPRealm) --&gt;  select Circle of Trust -- &gt; OpenAMIDPCOT --&gt;created\n</code></pre>\n\n<p><strong>Web Agent configuration :</strong></p>\n\n<pre><code>D:\\Studies\\sso\\OpenAM-SP2IDP\\webagent\\j2ee_agents\\tomcat_v6_agent\\bin&gt;agentadmin --install\n\nPlease read the following License Agreement carefully:\n\n[Press &lt;Enter&gt; to continue...] or [Enter n To Finish]\n\n\n************************************************************************\nWelcome to the OpenAM Policy Agent for Apache Tomcat 6.0 Servlet/JSP\nContainer\n\n************************************************************************\n\n\nEnter the complete path to the directory which is used by Tomcat Server to\nstore its configuration Files. This directory uniquely identifies the\nTomcat Server instance that is secured by this Agent.\n[ ? : Help, ! : Exit ]\nEnter the Tomcat Server Config Directory Path [C:/Program Files/Apache\nSoftware Foundation/Tomcat 6.0/conf]: D:\\Studies\\sso\\OpenAM-SP2IDP\\apache-tomcat\n-SP\\apache-tomcat-7.0.57\\conf\n\n\nEnter the URL where the OpenAM server is running. Please include the\ndeployment URI also as shown below:\n(http://openam.sample.com:58080/openam)\n[ ? : Help, &lt; : Back, ! : Exit ]\nOpenAM server URL: http://test.openam.com:8080/openam\n\n\n$CATALINA_HOME environment variable is the root of the tomcat\ninstallation.\n[ ? : Help, &lt; : Back, ! : Exit ]\nEnter the $CATALINA_HOME environment variable: D:\\Studies\\sso\\OpenAM-SP2IDP\\apac\nhe-tomcat-SP\\apache-tomcat-7.0.57\n\n\nChoose yes to deploy the policy agent in the global web.xml file.\n[ ? : Help, &lt; : Back, ! : Exit ]\nInstall agent filter in global web.xml ? [true]: true\n\n\nEnter the Agent URL. Please include the deployment URI also as shown below:\n(http://agent1.sample.com:1234/agentapp)\n[ ? : Help, &lt; : Back, ! : Exit ]\nAgent URL: http://org.sso.com:7070/agentapp\n\n\nEnter the Agent profile name\n[ ? : Help, &lt; : Back, ! : Exit ]\nEnter the Agent Profile name: webagent\n\n\nEnter the path to a file that contains the password to be used for identifying\nthe Agent.\n[ ? : Help, &lt; : Back, ! : Exit ]\nEnter the path to the password file: D:\\Studies\\sso\\OpenAM-SP2IDP\\password.txt\n\n\nWARNING:\nAgent profile/User: webagent does not exist in OpenAM server! Either \"Hit\nthe Back button, and re-enter the correct agent profile name/user name\", or\n\"Create this agent profile when asked(available only in custom-install)\",\nor \"Continue without validating it because agent profile is in sub realm\", or\n\"Continue without validating/creating it, and manually validate/create\nit in OpenAM server after installation\".\n\n\n\n-----------------------------------------------\nSUMMARY OF YOUR RESPONSES\n-----------------------------------------------\nTomcat Server Config Directory :\nD:\\Studies\\sso\\OpenAM-SP2IDP\\apache-tomcat-SP\\apache-tomcat-7.0.57\\conf\n\nOpenAM server URL : http://test.openam.com:8080/openam\n$CATALINA_HOME environment variable :\nD:\\Studies\\sso\\OpenAM-SP2IDP\\apache-tomcat-SP\\apache-tomcat-7.0.57\n\nTomcat global web.xml filter install : true\nAgent URL : http://org.sso.com:7070/agentapp\nAgent Profile name : webagent\nAgent Profile Password file name :\nD:\\Studies\\sso\\OpenAM-SP2IDP\\password.txt\n\nVerify your settings above and decide from the choices below.\n1. Continue with Installation\n2. Back to the last interaction\n3. Start Over\n4. Exit\nPlease make your selection [1]: 1\n\nUpdating the\nD:\\Studies\\sso\\OpenAM-SP2IDP\\apache-tomcat-SP\\apache-tomcat-7.0.57/bin/setenv.ba\nt\nscript with the Agent configuration JVM option ...DONE.\nDONE.\n\nCreating directory layout and configuring Agent file for Agent_001\ninstance ...DONE.\n\nReading data from file D:\\Studies\\sso\\OpenAM-SP2IDP\\password.txt and\nencrypting it ...DONE.\n\nGenerating audit log file name ...DONE.\n\nCreating tag swapped OpenSSOAgentBootstrap.properties file for instance\nAgent_001 ...DONE.\n\nCreating a backup for file\nD:\\Studies\\sso\\OpenAM-SP2IDP\\apache-tomcat-SP\\apache-tomcat-7.0.57\\conf/server.x\nml\n...DONE.\n\nCreating a backup for file\nD:\\Studies\\sso\\OpenAM-SP2IDP\\apache-tomcat-SP\\apache-tomcat-7.0.57\\conf/web.xml\n...DONE.\n\nAdding OpenAM Tomcat Agent Realm to Server XML file :\nD:\\Studies\\sso\\OpenAM-SP2IDP\\apache-tomcat-SP\\apache-tomcat-7.0.57\\conf/server.x\nml\n...DONE.\n\nAdding filter to Global deployment descriptor file :\nD:\\Studies\\sso\\OpenAM-SP2IDP\\apache-tomcat-SP\\apache-tomcat-7.0.57\\conf/web.xml\n...DONE.\n\nAdding OpenAM Tomcat Agent Filter and Form login authentication to selected\nWeb applications ...DONE.\n\n\nSUMMARY OF AGENT INSTALLATION\n-----------------------------\nAgent instance name: Agent_001\nAgent Bootstrap file location:\nD:/Studies/sso/OpenAM-SP2IDP/webagent/j2ee_agents/tomcat_v6_agent/Agent_001/conf\nig/OpenSSOAgentBootstrap.properties\nAgent Configuration file location\nD:/Studies/sso/OpenAM-SP2IDP/webagent/j2ee_agents/tomcat_v6_agent/Agent_001/conf\nig/OpenSSOAgentConfiguration.properties\nAgent Audit directory location:\nD:/Studies/sso/OpenAM-SP2IDP/webagent/j2ee_agents/tomcat_v6_agent/Agent_001/logs\n/audit\nAgent Debug directory location:\nD:/Studies/sso/OpenAM-SP2IDP/webagent/j2ee_agents/tomcat_v6_agent/Agent_001/logs\n/debug\n\n\nInstall log file location:\nD:/Studies/sso/OpenAM-SP2IDP/webagent/j2ee_agents/tomcat_v6_agent/installer-logs\n/audit/install.log\n\nThank you for using OpenAM Policy Agent\n</code></pre>\n\n<p><strong>OpenSSOAgentBootstrap.properties</strong></p>\n\n<pre><code>com.iplanet.am.naming.url=http://test.openam.com:8080/openam/namingservice\ncom.sun.identity.agents.config.service.resolver = com.sun.identity.agents.tomcat.v6.AmTomcatAgentServiceResolver\ncom.sun.identity.agents.app.username = webagent\ncom.iplanet.am.service.secret = AQIC91zdxfnLewLIWRJDohP4vdRaQ/7vpmBl\nam.encryption.pwd = lZco703977UeM52+kT4ZdyIjLM2PMw3d\ncom.iplanet.services.debug.level=error\ncom.iplanet.services.debug.directory=D:/Studies/sso/OpenAM-SP2IDP/webagent/j2ee_agents/tomcat_v6_agent/Agent_001/logs/debug\ncom.sun.services.debug.mergeall=on\ncom.sun.identity.agents.config.local.logfile = D:/Studies/sso/OpenAM-SP2IDP/webagent/j2ee_agents/tomcat_v6_agent/Agent_001/logs/audit/amAgent_org_sso_com_7070.log\ncom.sun.identity.agents.config.organization.name = /\ncom.sun.identity.agents.config.lock.enable = false\ncom.sun.identity.agents.config.profilename = webagent\ncom.iplanet.am.services.deploymentDescriptor=/openam\n</code></pre>\n\n<p><strong>openam/WEB-INF/classes/AMConfig.properties</strong></p>\n\n<pre><code>com.iplanet.am.server.host=@SERVER_HOST@\ncom.iplanet.security.SSLSocketFactoryImpl=com.sun.identity.shared.ldap.factory.JSSESocketFactory\ncom.sun.identity.sm.sms_object_class_name=com.sun.identity.sm.@SMS_OBJECT_CLASS@\ncom.iplanet.services.configpath=@BASE_DIR@\ncom.iplanet.am.serverMode=true\ncom.iplanet.am.ldap.connection.ldap.error.codes.retries=80,81,91\ncom.iplanet.am.locale=@PLATFORM_LOCALE@\ncom.sun.identity.urlconnection.useCache=false\nopensso.protocol.handler.pkgs=\ncom.iplanet.am.server.protocol=@SERVER_PROTO@\ncom.iplanet.am.server.port=@SERVER_PORT@\ncom.iplanet.services.debug.level=error\ncom.sun.embedded.replicationport=\ncom.sun.identity.common.systemtimerpool.size=3\ncom.sun.identity.overrideAMC=true\ncom.sun.embedded.sync.servers=on\ncom.iplanet.am.service.secret=@ENCLDAPUSERPASSWD@\nam.encryption.pwd=@AM_ENC_KEY@\ncom.sun.identity.sm.enableDataStoreNotification=@DATASTORE_NOTIFICATION@\ncom.sun.services.debug.mergeall=off\ncom.iplanet.am.services.deploymentDescriptor=/@SERVER_URI@\ncom.sun.am.event.connection.disable.list=@DISABLE_PERSISTENT_SEARCH@\n</code></pre>\n\n<p><strong>Agent_001/conf/OpenSSOAgentConfiguration.properties</strong> </p>\n\n<pre><code>com.sun.identity.agents.config.filter.mode[manager]=J2EE_POLICY\ncom.sun.identity.agents.config.filter.mode[host-manager]=J2EE_POLICY\ncom.sun.identity.agents.config.filter.mode = ALL\ncom.sun.identity.agents.config.user.mapping.mode = USER_ID\ncom.sun.identity.agents.config.user.attribute.name = employeenumber\ncom.sun.identity.agents.config.user.principal = false\ncom.sun.identity.agents.config.user.token = UserToken\ncom.sun.identity.agents.config.client.ip.header =\ncom.sun.identity.agents.config.client.hostname.header =\ncom.sun.identity.agents.config.load.interval = 0\ncom.sun.identity.agents.config.locale.language = en\ncom.sun.identity.agents.config.locale.country = US\ncom.sun.identity.agents.config.audit.accesstype = LOG_NONE\ncom.sun.identity.agents.config.log.disposition = REMOTE\ncom.sun.identity.agents.config.remote.logfile = amAgent_org_sso_com_7070.log\ncom.sun.identity.agents.config.local.log.rotate = false\ncom.sun.identity.agents.config.local.log.size = 52428800\ncom.sun.identity.agents.config.webservice.enable = false\ncom.sun.identity.agents.config.webservice.endpoint[0] = \ncom.sun.identity.agents.config.webservice.process.get.enable = true\ncom.sun.identity.agents.config.webservice.authenticator =\ncom.sun.identity.agents.config.webservice.internalerror.content = WSInternalErrorContent.txt\ncom.sun.identity.agents.config.webservice.autherror.content  = WSAuthErrorContent.txt\ncom.sun.identity.agents.config.webservice.responseprocessor =\ncom.sun.identity.agents.config.access.denied.uri[] =\ncom.sun.identity.agents.config.login.form[0] = /host-manager/AMLogin.html\ncom.sun.identity.agents.config.login.form[1] = /manager/AMLogin.html\ncom.sun.identity.agents.config.login.error.uri[0] = /host-manager/AMError.html\ncom.sun.identity.agents.config.login.error.uri[1] = /manager/AMError.html\ncom.sun.identity.agents.config.login.use.internal = true\ncom.sun.identity.agents.config.login.content.file = FormLoginContent.txt\ncom.sun.identity.agents.config.auth.handler[] =     \ncom.sun.identity.agents.config.logout.handler[] =\ncom.sun.identity.agents.config.verification.handler[] =\ncom.sun.identity.agents.config.httpsession.binding = true\ncom.sun.identity.agents.config.redirect.param = goto\ncom.sun.identity.agents.config.login.url[0] = http://test.openam.com:8080/openam/UI/Login\ncom.sun.identity.agents.config.logout.url[0] = http://test.openam.com:8080/openam/UI/Logout\ncom.sun.identity.agents.config.login.url.prioritized = true\ncom.sun.identity.agents.config.login.url.probe.enabled = true\ncom.sun.identity.agents.config.login.url.probe.timeout = 2000\ncom.sun.identity.agents.config.logout.url.prioritized = true\ncom.sun.identity.agents.config.logout.url.probe.enabled = true\ncom.sun.identity.agents.config.logout.url.probe.timeout = 2000\ncom.sun.identity.agents.config.agent.host = \ncom.sun.identity.agents.config.agent.port =\ncom.sun.identity.agents.config.agent.protocol =\ncom.sun.identity.agents.config.login.attempt.limit = 0\ncom.sun.identity.agents.config.amsso.cache.enable = true\ncom.sun.identity.agents.config.cookie.reset.enable = false\ncom.sun.identity.agents.config.cookie.reset.name[0] = \ncom.sun.identity.agents.config.cookie.reset.domain[] =  \ncom.sun.identity.agents.config.cookie.reset.path[] =\ncom.sun.identity.agents.config.cdsso.enable = false\ncom.sun.identity.agents.config.cdsso.redirect.uri = /agentapp/sunwCDSSORedirectURI\ncom.sun.identity.agents.config.cdsso.cdcservlet.url[0] = http://test.openam.com:8080/openam/cdcservlet\ncom.sun.identity.agents.config.cdsso.clock.skew = 0\ncom.sun.identity.agents.config.cdsso.trusted.id.provider[0] = http://test.openam.com:8080/openam/cdcservlet\ncom.sun.identity.agents.config.cdsso.secure.enable = false\ncom.sun.identity.agents.config.logout.application.handler[] =\ncom.sun.identity.agents.config.logout.uri[] = \ncom.sun.identity.agents.config.logout.request.param[] = \ncom.sun.identity.agents.config.logout.introspect.enabled = false\ncom.sun.identity.agents.config.logout.entry.uri[] = \ncom.sun.identity.agents.config.fqdn.check.enable = true\ncom.sun.identity.agents.config.fqdn.default = org.sso.com\ncom.sun.identity.agents.config.fqdn.mapping[] = \ncom.sun.identity.agents.config.legacy.support.enable = false\ncom.sun.identity.agents.config.legacy.user.agent[0] = Mozilla/4.7*\ncom.sun.identity.agents.config.legacy.redirect.uri = /agentapp/sunwLegacySupportURI\ncom.sun.identity.agents.config.response.header[] =\ncom.sun.identity.agents.config.redirect.attempt.limit = 0\ncom.sun.identity.agents.config.port.check.enable = false\ncom.sun.identity.agents.config.port.check.file = PortCheckContent.txt\ncom.sun.identity.agents.config.port.check.setting[7070] = http\ncom.sun.identity.agents.config.notenforced.uri[0] =\ncom.sun.identity.agents.config.notenforced.uri.invert = false\ncom.sun.identity.agents.config.notenforced.uri.cache.enable = true\ncom.sun.identity.agents.config.notenforced.uri.cache.size = 1000\ncom.sun.identity.agents.config.notenforced.refresh.session.idletime = false\ncom.sun.identity.agents.config.notenforced.ip[0] =\ncom.sun.identity.agents.config.notenforced.ip.invert = false\ncom.sun.identity.agents.config.notenforced.ip.cache.enable = true\ncom.sun.identity.agents.config.notenforced.ip.cache.size = 1000\ncom.sun.identity.agents.config.attribute.cookie.separator = |\ncom.sun.identity.agents.config.attribute.date.format = EEE, d MMM yyyy hh:mm:ss z\ncom.sun.identity.agents.config.attribute.cookie.encode = true\ncom.sun.identity.agents.config.profile.attribute.fetch.mode = NONE\ncom.sun.identity.agents.config.profile.attribute.mapping[] = \ncom.sun.identity.agents.config.session.attribute.fetch.mode = NONE\ncom.sun.identity.agents.config.session.attribute.mapping[] =\ncom.sun.identity.agents.config.response.attribute.fetch.mode = NONE\ncom.sun.identity.agents.config.response.attribute.mapping[] =\ncom.sun.identity.agents.config.bypass.principal[0] =\ncom.sun.identity.agents.config.default.privileged.attribute[0] = AUTHENTICATED_USERS\ncom.sun.identity.agents.config.privileged.attribute.type[0] = Group\ncom.sun.identity.agents.config.privileged.attribute.type[1] = Role\ncom.sun.identity.agents.config.privileged.attribute.tolowercase[Group] = false\ncom.sun.identity.agents.config.privileged.attribute.tolowercase[Role] = false\ncom.sun.identity.agents.config.privileged.session.attribute[0] = \ncom.sun.identity.agents.config.privileged.attribute.mapping.enable = true\ncom.sun.identity.agents.config.privileged.attribute.mapping[] =\ncom.iplanet.am.cookie.name=iPlanetDirectoryPro\ncom.iplanet.am.session.client.polling.enable=false\ncom.iplanet.am.session.client.polling.period=180\ncom.iplanet.security.encryptor=com.iplanet.services.util.JCEEncryption\ncom.sun.identity.idm.remote.notification.enabled=true\ncom.iplanet.am.sdk.remote.pollingTime=1\ncom.sun.identity.sm.notification.enabled=true\ncom.sun.identity.sm.cacheTime=1\ncom.iplanet.am.server.protocol=http\ncom.iplanet.am.server.host=test.openam.com\ncom.iplanet.am.server.port=8080\ncom.sun.identity.agents.notification.enabled=true\ncom.sun.identity.agents.polling.interval=3\ncom.sun.identity.policy.client.cacheMode=subtree\ncom.sun.identity.policy.client.booleanActionValues=iPlanetAMWebAgentService|GET|allow|deny:iPlanetAMWebAgentService|POST|allow|deny\ncom.sun.identity.policy.client.resourceComparators=serviceType=iPlanetAMWebAgentService|class=com.sun.identity.policy.plugins.HttpURLResourceName|wildcard=*|delimiter=/|caseSensitive=false\ncom.sun.identity.policy.client.clockSkew=10\ncom.sun.identity.agents.config.policy.env.get.param[0]=\ncom.sun.identity.agents.config.policy.env.post.param[0]=\ncom.sun.identity.agents.config.policy.env.jsession.param[0]=\ncom.sun.identity.client.notification.url=http://org.sso.com:7070/agentapp/notification\ncom.iplanet.services.debug.level=error\ncom.sun.identity.agents.config.ignore.path.info = false\n</code></pre>\n\n<p>Please help me to solve this issue.Thanks in advance.</p>\n", "tags": ["java", "single-sign-on", "openam"], "title": "AdminTokenAction: FATAL ERROR: Cannot obtain Application SSO token", "answers": [{"body": "<p>One possible solution to your problem could be making use of <code>com.iplanet.am.naming.map.site.to.server</code>\nThis tutorial should cover stuff for you :) \n<a href=\"https://backstage.forgerock.com/#!/docs/openam/12.0.0/admin-guide\" rel=\"nofollow\">https://backstage.forgerock.com/#!/docs/openam/12.0.0/admin-guide</a></p>\n", "title": "AdminTokenAction: FATAL ERROR: Cannot obtain Application SSO token", "tags": ["java", "single-sign-on", "openam"], "link": "http://stackoverflow.com/questions/29676170/admintokenaction-fatal-error-cannot-obtain-application-sso-token/32761108#32761108", "question_id": 29676170, "answer_id": 32761108}, {"body": "<p>I've had a similar issue in the past where after the user logs in using the OpenAM login it sits redirecting to itself.</p>\n\n<p>The problem was the cookie domain. When OpenAM authenticates it will set a cookie withe the session token. If tomcat is on a separate domain then it won't be able to look up the cookie. </p>\n\n<p>You might want to check your domain in OpenAM console -> configuration -> system -> platform</p>\n\n<p>My app was Drupal but I think the tomcat config is:</p>\n\n<pre><code>&lt;Context sessionCookiePath=\"/something\" sessionCookieDomain=\".domain.tld\" /&gt;\n</code></pre>\n", "title": "AdminTokenAction: FATAL ERROR: Cannot obtain Application SSO token", "tags": ["java", "single-sign-on", "openam"], "link": "http://stackoverflow.com/questions/29676170/admintokenaction-fatal-error-cannot-obtain-application-sso-token/33112800#33112800", "question_id": 29676170, "answer_id": 33112800}], "creation_date": 1429190797, "score": 68, "link": "http://stackoverflow.com/questions/29676170/admintokenaction-fatal-error-cannot-obtain-application-sso-token", "question_id": 29676170}, {"body": "<p>I just installed Maven 3.3.1 on Mac OS X, and building a Maven Project with Eclipse is giving me this error:</p>\n\n<pre><code>-Dmaven.multiModuleProjectDirectory system property is not set.\nCheck $M2_HOME environment variable and mvn script match.\n</code></pre>\n\n<p>It did not happen before with Maven 3.2.5.</p>\n\n<p>Is there any way to fix this (except downgrading to 3.2.5) ?</p>\n\n<p>Where exactly can I set this \"multiModuleProjectDirectory\" property in Eclipse?</p>\n", "tags": ["java", "eclipse", "osx", "maven"], "title": "Maven 3.3.1 ECLIPSE: -Dmaven.multiModuleProjectDirectory system propery is not set", "answers": [{"body": "<p>Define like this in the JVM options:</p>\n\n<pre><code>-Dmaven.multiModuleProjectDirectory=HOME_PATH_OF_YOU_PROJECT\n</code></pre>\n", "title": "Maven 3.3.1 ECLIPSE: -Dmaven.multiModuleProjectDirectory system propery is not set", "tags": ["java", "eclipse", "osx", "maven"], "link": "http://stackoverflow.com/questions/29330577/maven-3-3-1-eclipse-dmaven-multimoduleprojectdirectory-system-propery-is-not-s/29331147#29331147", "question_id": 29330577, "answer_id": 29331147}, {"body": "<p>In <code>Eclipse</code> you need to go like this.</p>\n\n<pre><code>Window-&gt; Preference -&gt; Java -&gt; Installed JREs -&gt; Edit\n</code></pre>\n\n<p>In the edit <code>Default VM arguments</code> you need to put </p>\n\n<p>If you already set the maven home.</p>\n\n<pre><code>-Dmaven.multiModuleProjectDirectory=$M2_HOME\n</code></pre>\n", "title": "Maven 3.3.1 ECLIPSE: -Dmaven.multiModuleProjectDirectory system propery is not set", "tags": ["java", "eclipse", "osx", "maven"], "link": "http://stackoverflow.com/questions/29330577/maven-3-3-1-eclipse-dmaven-multimoduleprojectdirectory-system-propery-is-not-s/29369138#29369138", "question_id": 29330577, "answer_id": 29369138}, {"body": "<p>go to run configuration, create new <code>maven build</code> launch configuration where in the first tab you fill the base directory and the goal,\nthen, go to <code>jre tab</code> and add to the <code>vm args</code> this config:</p>\n\n<pre><code>-Dmaven.multiModuleProjectDirectory=%M2_HOME%\n</code></pre>\n\n<p>where <code>M2_HOME</code> is an environment variable pointing to the base directory of your maven installation </p>\n", "title": "Maven 3.3.1 ECLIPSE: -Dmaven.multiModuleProjectDirectory system propery is not set", "tags": ["java", "eclipse", "osx", "maven"], "link": "http://stackoverflow.com/questions/29330577/maven-3-3-1-eclipse-dmaven-multimoduleprojectdirectory-system-propery-is-not-s/29682935#29682935", "question_id": 29330577, "answer_id": 29682935}, {"body": "<p>This was filed as a bug with m2e in Eclipse at <a href=\"https://bugs.eclipse.org/bugs/show_bug.cgi?id=462944\">https://bugs.eclipse.org/bugs/show_bug.cgi?id=462944</a> , due to the changes in Maven 3.3.1.</p>\n\n<p>This is fixed in m2e 1.5.2 as of 2015-04-13.  This is an available release that can be installed from <a href=\"http://download.eclipse.org/technology/m2e/releases/\">http://download.eclipse.org/technology/m2e/releases/</a> .</p>\n\n<p>(No more changing JVM arguments for the entire workspace or for specific launch configurations required.)</p>\n", "title": "Maven 3.3.1 ECLIPSE: -Dmaven.multiModuleProjectDirectory system propery is not set", "tags": ["java", "eclipse", "osx", "maven"], "link": "http://stackoverflow.com/questions/29330577/maven-3-3-1-eclipse-dmaven-multimoduleprojectdirectory-system-propery-is-not-s/29735560#29735560", "question_id": 29330577, "answer_id": 29735560}, {"body": "<p>If you want to try a second way, you can try to download a path from <a href=\"http://download.eclipse.org/technology/m2e/milestones/1.5/\" rel=\"nofollow\">http://download.eclipse.org/technology/m2e/milestones/1.5/</a>.</p>\n\n<p>Open Help>install new software and download from url above. This way solved my problem.</p>\n", "title": "Maven 3.3.1 ECLIPSE: -Dmaven.multiModuleProjectDirectory system propery is not set", "tags": ["java", "eclipse", "osx", "maven"], "link": "http://stackoverflow.com/questions/29330577/maven-3-3-1-eclipse-dmaven-multimoduleprojectdirectory-system-propery-is-not-s/30725125#30725125", "question_id": 29330577, "answer_id": 30725125}, {"body": "<p>In IntelliJ you can set this option in VM Options field that you can find in the next configuration view:</p>\n\n<p><em>Preferences/Build, execution, deployment/Build tools/Maven/Runner</em></p>\n\n<p><a href=\"http://i.stack.imgur.com/gPPG9.png\"><img src=\"http://i.stack.imgur.com/gPPG9.png\" alt=\"enter image description here\"></a></p>\n", "title": "Maven 3.3.1 ECLIPSE: -Dmaven.multiModuleProjectDirectory system propery is not set", "tags": ["java", "eclipse", "osx", "maven"], "link": "http://stackoverflow.com/questions/29330577/maven-3-3-1-eclipse-dmaven-multimoduleprojectdirectory-system-propery-is-not-s/31993959#31993959", "question_id": 29330577, "answer_id": 31993959}, {"body": "<p>I encountered the same issue with Maven 3.3 and 3.2 versions, so I decided to downgrade it to version 3.0.5 and it worked just fine.</p>\n", "title": "Maven 3.3.1 ECLIPSE: -Dmaven.multiModuleProjectDirectory system propery is not set", "tags": ["java", "eclipse", "osx", "maven"], "link": "http://stackoverflow.com/questions/29330577/maven-3-3-1-eclipse-dmaven-multimoduleprojectdirectory-system-propery-is-not-s/32092319#32092319", "question_id": 29330577, "answer_id": 32092319}, {"body": "<p>i had the same problem with intelliJ 14, i tried out different solutions provided at forums but not worked out. What i did is i completely uninstall intellij and installed intellij 15.0.1 and import the same project then all works fine.</p>\n", "title": "Maven 3.3.1 ECLIPSE: -Dmaven.multiModuleProjectDirectory system propery is not set", "tags": ["java", "eclipse", "osx", "maven"], "link": "http://stackoverflow.com/questions/29330577/maven-3-3-1-eclipse-dmaven-multimoduleprojectdirectory-system-propery-is-not-s/34633650#34633650", "question_id": 29330577, "answer_id": 34633650}], "creation_date": 1427640638, "score": 64, "link": "http://stackoverflow.com/questions/29330577/maven-3-3-1-eclipse-dmaven-multimoduleprojectdirectory-system-propery-is-not-s", "question_id": 29330577}, {"body": "<p>I have a set \u2013 a HashSet I want to remove some items from it\u2026 none of the items in the \"removals\" collection will be in the original set. </p>\n\n<p>I specify the size of the \"source\" set and the size of the \"removals\" collection on the command line, and build both of them. The source set contains only non-negative integers; the removals set contains only negative integers. \nI measure how long it takes to remove all the elements using System.currentTimeMillis(), which isn\u2019t the world most accurate stopwatch but is more than adequate in this case, as you\u2019ll see. Here\u2019s the code:</p>\n\n<pre><code>import java.util.*;\npublic class Test \n{ \n public static void main(String[] args) \n { \n    int sourceSize = Integer.parseInt(args[0]); \n    int removalsSize = Integer.parseInt(args[1]); \n\n    Set&lt;Integer&gt; source = new HashSet&lt;Integer&gt;(); \n    Collection&lt;Integer&gt; removals = new ArrayList&lt;Integer&gt;(); \n\n    for (int i = 0; i &lt; sourceSize; i++) \n    { \n        source.add(i); \n    } \n    for (int i = 1; i &lt;= removalsSize; i++) \n    { \n        removals.add(-i); \n    } \n\n    long start = System.currentTimeMillis(); \n    source.removeAll(removals); \n    long end = System.currentTimeMillis(); \n    System.out.println(\"Time taken: \" + (end \u2013 start) + \"ms\"); \n} \n }\n</code></pre>\n\n<p>Let\u2019s start off by giving it an easy job: <strong>a source set of 100 items, and 100 to remove:</strong></p>\n\n<pre><code> c:UsersJonTest&gt;java Test 100 100\n Time taken: 1ms\n</code></pre>\n\n<p>Okay, That's fast as I expected. </p>\n\n<p>Next i tried source of one million items and 300,000 items to remove?</p>\n\n<pre><code>c:UsersJonTest&gt;java Test 1000000 300000\nTime taken: 38ms\n</code></pre>\n\n<p>That still seems pretty speedy.\n  Now make it a bit easier \u2013 300,000 source items and 300,000 removals:</p>\n\n<pre><code>c:UsersJonTest&gt;java Test 300000 300000\nTime taken: 178131ms\n</code></pre>\n\n<p><strong>Nearly three minutes?</strong> </p>\n\n<p>Really confused !! can some one explain why this is happening.</p>\n", "tags": ["java", "performance", "hashset"], "title": "HashSet removeAll method is surprisingly slow", "answers": [{"body": "<p>The behaviour is (somewhat) documented in the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/AbstractSet.html#removeAll-java.util.Collection-\">javadoc</a>:</p>\n\n<blockquote>\n  <p>This implementation determines which is the smaller of this set and the specified collection, by invoking the size method on each. <strong><em>If this set has fewer elements</em></strong>, then the implementation iterates over this set, checking each element returned by the iterator in turn to see <strong><em>if it is contained in the specified collection</em></strong>. If it is so contained, it is removed from this set with the iterator's remove method. If the specified collection has fewer elements, then the implementation iterates over the specified collection, removing from this set each element returned by the iterator, using this set's remove method.</p>\n</blockquote>\n\n<p>What this means in practice, when you call <code>source.removeAll(removals);</code>: </p>\n\n<ul>\n<li><p>if the <code>removals</code> collection is of a smaller size than <code>source</code>, the <code>remove</code> method of <code>HashSet</code> is called, which is fast.</p></li>\n<li><p>if the <code>removals</code> collection is of equal or larger size than the <code>source</code>, then <code>removals.contains</code> is called, which is slow for an ArrayList.</p></li>\n</ul>\n\n<p>Quick fix:</p>\n\n<pre><code>Collection&lt;Integer&gt; removals = new HashSet&lt;Integer&gt;();\n</code></pre>\n\n<p>Note that there is <a href=\"https://bugs.openjdk.java.net/browse/JDK-6982173\">an open bug</a> that is very similar to what you describe. The bottom line seems to be that it is probably a poor choice but can't be changed because it is documented in the javadoc.</p>\n\n<hr>\n\n<p>For reference, this is the code of <code>removeAll</code> (in Java 8 - haven't checked other versions):</p>\n\n<pre><code>public boolean removeAll(Collection&lt;?&gt; c) {\n    Objects.requireNonNull(c);\n    boolean modified = false;\n\n    if (size() &gt; c.size()) {\n        for (Iterator&lt;?&gt; i = c.iterator(); i.hasNext(); )\n            modified |= remove(i.next());\n    } else {\n        for (Iterator&lt;?&gt; i = iterator(); i.hasNext(); ) {\n            if (c.contains(i.next())) {\n                i.remove();\n                modified = true;\n            }\n        }\n    }\n    return modified;\n}\n</code></pre>\n", "title": "HashSet removeAll method is surprisingly slow", "tags": ["java", "performance", "hashset"], "link": "http://stackoverflow.com/questions/28671903/hashset-removeall-method-is-surprisingly-slow/28672583#28672583", "question_id": 28671903, "answer_id": 28672583}], "creation_date": 1424688319, "score": 64, "link": "http://stackoverflow.com/questions/28671903/hashset-removeall-method-is-surprisingly-slow", "question_id": 28671903}, {"body": "<p>Whenever I clean my project is says: PSI and index do not match\nWhat should I do?</p>\n", "tags": ["java", "android-studio", "psi"], "title": "PSI and index do not match: PSI and index do not match on Android Studio", "answers": [{"body": "<p>File menu > Invalidate caches and restart. The PSI cache is one of the caches that are affected by this command, so this should fix it up.</p>\n\n<p><em>Important note</em>: This will wipe the shelf, local history, and potentially other cached data.</p>\n", "title": "PSI and index do not match: PSI and index do not match on Android Studio", "tags": ["java", "android-studio", "psi"], "link": "http://stackoverflow.com/questions/28794723/psi-and-index-do-not-match-psi-and-index-do-not-match-on-android-studio/28795008#28795008", "question_id": 28794723, "answer_id": 28795008}], "creation_date": 1425220440, "score": 63, "link": "http://stackoverflow.com/questions/28794723/psi-and-index-do-not-match-psi-and-index-do-not-match-on-android-studio", "question_id": 28794723}, {"body": "<p>Similar problem with <a href=\"http://stackoverflow.com/questions/26582300/how-to-use-sbt-behind-authenticated-proxy\">How to use sbt behind authenticated proxy?</a>. I tried with the given answer and problem still there. </p>\n\n<p>When I run <strong>sbt</strong> in terminal, it shows and stucks at : </p>\n\n<pre><code>Getting org.scala-sbt sbt 0.13.6 ...\n</code></pre>\n\n<p>additional information: </p>\n\n<pre><code> sbt --version\n sbt launcher version 0.13.6\n</code></pre>\n\n<p>How could I fix it?</p>\n", "tags": ["java", "sbt"], "title": "stuck at &quot;Getting org.scala-sbt sbt 0.13.6 ...&quot; when running sbt in terminal", "answers": [{"body": "<p>I bypassed the error by adding a build.properties file under project folder, in which, I put: </p>\n\n<pre><code>  sbt.version=0.13.5\n</code></pre>\n\n<p>I think this probably is because my system has activator pre-installed instead of sbt, which is easier to work with play project. Not quite clear in the theory as I just start to use sbt. </p>\n", "title": "stuck at &quot;Getting org.scala-sbt sbt 0.13.6 ...&quot; when running sbt in terminal", "tags": ["java", "sbt"], "link": "http://stackoverflow.com/questions/29599309/stuck-at-getting-org-scala-sbt-sbt-0-13-6-when-running-sbt-in-terminal/29624332#29624332", "question_id": 29599309, "answer_id": 29624332}, {"body": "<p>Creating a build.sbt file worked as well. My build.sbt file looks like below;</p>\n\n<pre><code>lazy val root = (project in file(\".\")).\n  settings(\n    name := \"hello\",\n    version := \"1.0\",\n    scalaVersion := \"2.11.4\"\n  )\n</code></pre>\n", "title": "stuck at &quot;Getting org.scala-sbt sbt 0.13.6 ...&quot; when running sbt in terminal", "tags": ["java", "sbt"], "link": "http://stackoverflow.com/questions/29599309/stuck-at-getting-org-scala-sbt-sbt-0-13-6-when-running-sbt-in-terminal/31240151#31240151", "question_id": 29599309, "answer_id": 31240151}, {"body": "<p>This is quite old post and my answer may not be completely relevant. But here is my experience:</p>\n\n<ol>\n<li>I am using sbt 0.13.8</li>\n<li>Getting org.scala-sbt sbt 0.13.8 ...</li>\n<li>I have got this line hanging for some time - between 5 to 10\nminutes.</li>\n<li>And then it started to download stuff.</li>\n</ol>\n\n<p><strong>So my solution is that you have to wait a bit.</strong></p>\n", "title": "stuck at &quot;Getting org.scala-sbt sbt 0.13.6 ...&quot; when running sbt in terminal", "tags": ["java", "sbt"], "link": "http://stackoverflow.com/questions/29599309/stuck-at-getting-org-scala-sbt-sbt-0-13-6-when-running-sbt-in-terminal/31712249#31712249", "question_id": 29599309, "answer_id": 31712249}, {"body": "<p>I think sbt takes some time to download its jars when it is run first time. That is why it seems to be stuck. It works normal after the download is completed.</p>\n", "title": "stuck at &quot;Getting org.scala-sbt sbt 0.13.6 ...&quot; when running sbt in terminal", "tags": ["java", "sbt"], "link": "http://stackoverflow.com/questions/29599309/stuck-at-getting-org-scala-sbt-sbt-0-13-6-when-running-sbt-in-terminal/33519863#33519863", "question_id": 29599309, "answer_id": 33519863}], "creation_date": 1428907524, "score": 62, "link": "http://stackoverflow.com/questions/29599309/stuck-at-getting-org-scala-sbt-sbt-0-13-6-when-running-sbt-in-terminal", "question_id": 29599309}, {"body": "<p>I have a first list : <code>myListToParse</code> where i want to filter the elements and apply a method on each elements and add the result in another list : <code>myFinalList</code> </p>\n\n<p>With Java 8 I noticed that I can do it in 2 different way, I would like to know the more efficient way between them and understand why one way is better than the other one. </p>\n\n<p>I'm open for any suggestion about a third way.</p>\n\n<p>Method 1:</p>\n\n<pre><code>myListToParse.stream()\n        .filter(elt -&gt; elt != null)\n        .forEach(elt -&gt; myFinalList.add(doSomething(elt)));\n</code></pre>\n\n<p>Method 2:</p>\n\n<pre><code>myFinalList = myListToParse.stream()\n        .filter(elt -&gt; elt != null)\n        .map(elt -&gt; doSomething(elt))\n        .collect(Collectors.toList()); \n</code></pre>\n", "tags": ["java", "java-8"], "title": "Java 8 - Best way to transform a list: map or foreach?", "answers": [{"body": "<p>I prefer the second way.</p>\n\n<p>When you use the first way, if you decide to use a parallel stream to improve performance, you'll have no control over the order in which the elements will be added to the output list by <code>forEach</code>. </p>\n\n<p>When you use <code>toList</code>, the Streams API will preserve the order even if you use a parallel stream.</p>\n", "title": "Java 8 - Best way to transform a list: map or foreach?", "tags": ["java", "java-8"], "link": "http://stackoverflow.com/questions/28319064/java-8-best-way-to-transform-a-list-map-or-foreach/28319148#28319148", "question_id": 28319064, "answer_id": 28319148}, {"body": "<p>Don't worry about any performance differences, they're going to be minimal in this case normally.</p>\n\n<p>Method 2 is preferable because</p>\n\n<ol>\n<li><p>it doesn't require mutating a collection that exists outside the lambda expression,</p></li>\n<li><p>it's more readable because the different steps that are performed in the collection pipeline are written sequentially (first a filter operation, then a map operation, then collecting the result),\n(for more info on the benefits of collection pipelines, see Martin Fowler's <a href=\"http://martinfowler.com/articles/collection-pipeline/\">excellent article</a>) </p></li>\n<li><p>you can easily change the way values are collected by replacing the <code>Collector</code> that is used.  In some cases you may need to write your own <code>Collector</code>, but then the benefit is that you can easily reuse that.</p></li>\n</ol>\n", "title": "Java 8 - Best way to transform a list: map or foreach?", "tags": ["java", "java-8"], "link": "http://stackoverflow.com/questions/28319064/java-8-best-way-to-transform-a-list-map-or-foreach/28319221#28319221", "question_id": 28319064, "answer_id": 28319221}, {"body": "<p>I agree with the existing answers that the second form is better because it does not have any side effects and is easier to parallelise (just use a parallel stream).</p>\n\n<p>Performance wise, it appears they are equivalent until you start using parallel streams. In that case, <strong>map</strong> will perform really much better. See below the <a href=\"https://bitbucket.org/assylias/performance/src/master/src/main/java/com/assylias/performance/SO28319064.java\">micro benchmark</a> results:</p>\n\n<pre><code>Benchmark                         Mode  Samples    Score   Error  Units\nSO28319064.forEach                avgt      100  187.310 \u00b1 1.768  ms/op\nSO28319064.map                    avgt      100  189.180 \u00b1 1.692  ms/op\nSO28319064.mapWithParallelStream  avgt      100   55,577 \u00b1 0,782  ms/op\n</code></pre>\n\n<p>You can't boost the first example in the same manner because <strong>forEach</strong> is a terminal method - it returns void - so you are forced to use a stateful lambda. But <a href=\"https://docs.oracle.com/javase/tutorial/collections/streams/parallelism.html#stateful_lambda_expressions\">that is really a bad idea if you are using parallel streams</a>.</p>\n\n<p>Finally note that your second snippet can be written in a sligthly more concise way with method references and static imports:</p>\n\n<pre><code>myFinalList = myListToParse.stream()\n    .filter(Objects::nonNull)\n    .map(this::doSomething)\n    .collect(toList()); \n</code></pre>\n", "title": "Java 8 - Best way to transform a list: map or foreach?", "tags": ["java", "java-8"], "link": "http://stackoverflow.com/questions/28319064/java-8-best-way-to-transform-a-list-map-or-foreach/28321016#28321016", "question_id": 28319064, "answer_id": 28321016}, {"body": "<p>One of the main benefits of using streams is that it gives the ability to process data in a declarative way, that is, using a functional style of programming. It also gives multi-threading capability for free meaning there is no need to write any extra multi-threaded code to make your stream concurrent.</p>\n\n<p>Assuming the reason you are exploring this style of programming is that you want to exploit these benefits then your first code sample is potentially not functional since the <code>foreach</code> method is classed as being terminal (meaning that it can produce side-effects).</p>\n\n<p>The second way is preferred from functional programming point of view since the map function can accept stateless lambda functions. More explicitly, the lambda passed to the map function should be</p>\n\n<ol>\n<li>Non-interfering, meaning that the function should not alter the source of the stream if it is non-concurrent (e.g. <code>ArrayList</code>).</li>\n<li>Stateless to avoid unexpected results when doing parallel processing (caused by thread scheduling differences).</li>\n</ol>\n\n<p>Another benefit with the second approach is if the stream is parallel and the collector is concurrent and unordered then these characteristics can provide useful hints to the reduction operation to do the collecting concurrently.</p>\n", "title": "Java 8 - Best way to transform a list: map or foreach?", "tags": ["java", "java-8"], "link": "http://stackoverflow.com/questions/28319064/java-8-best-way-to-transform-a-list-map-or-foreach/28323553#28323553", "question_id": 28319064, "answer_id": 28323553}, {"body": "<p>If you use <a href=\"http://www.eclipse.org/collections/\" rel=\"nofollow\">Eclipse Collections</a> (formerly <a href=\"https://github.com/goldmansachs/gs-collections\" rel=\"nofollow\">GS Collections</a>), you can use the <code>collectIf()</code> method.</p>\n\n<pre><code>MutableList&lt;Integer&gt; source =\n    FastList.newListWith(1, null, 2, null, 3, null, 4, null, 5);\n\nMutableList&lt;String&gt; result = source.collectIf(Objects::nonNull, String::valueOf);\n\nAssert.assertEquals(Lists.immutable.with(\"1\", \"2\", \"3\", \"4\", \"5\"), result);\n</code></pre>\n\n<p>It evaluates eagerly and should be a bit faster than using a Stream.</p>\n\n<p><strong>Note:</strong> I am a committer for Eclipse Collections.</p>\n", "title": "Java 8 - Best way to transform a list: map or foreach?", "tags": ["java", "java-8"], "link": "http://stackoverflow.com/questions/28319064/java-8-best-way-to-transform-a-list-map-or-foreach/28355204#28355204", "question_id": 28319064, "answer_id": 28355204}, {"body": "<p>There is a third option - using <code>stream().toArray()</code> - see comments under <a href=\"http://stackoverflow.com/questions/28782165/why-didnt-stream-have-a-tolist-method\">why didn't stream have a toList method</a>. It turns out to be slower than forEach() or collect(), and less expressive. It might be optimised in later JDK builds, so adding it here just in case.</p>\n\n<p>assuming <code>List&lt;String&gt;</code></p>\n\n<pre><code>    myFinalList = Arrays.asList(\n            myListToParse.stream()\n                    .filter(Objects::nonNull)\n                    .map(this::doSomething)\n                    .toArray(String[]::new)\n    );\n</code></pre>\n\n<p>with a micro-micro benchmark, 1M entries, 20% nulls and simple transform in doSomething()</p>\n\n<pre><code>private LongSummaryStatistics benchmark(final String testName, final Runnable methodToTest, int samples) {\n    long[] timing = new long[samples];\n    for (int i = 0; i &lt; samples; i++) {\n        long start = System.currentTimeMillis();\n        methodToTest.run();\n        timing[i] = System.currentTimeMillis() - start;\n    }\n    final LongSummaryStatistics stats = Arrays.stream(timing).summaryStatistics();\n    System.out.println(testName + \": \" + stats);\n    return stats;\n}\n</code></pre>\n\n<p>the results are</p>\n\n<p>parallel:</p>\n\n<pre><code>toArray: LongSummaryStatistics{count=10, sum=3721, min=321, average=372,100000, max=535}\nforEach: LongSummaryStatistics{count=10, sum=3502, min=249, average=350,200000, max=389}\ncollect: LongSummaryStatistics{count=10, sum=3325, min=265, average=332,500000, max=368}\n</code></pre>\n\n<p>sequential:</p>\n\n<pre><code>toArray: LongSummaryStatistics{count=10, sum=5493, min=517, average=549,300000, max=569}\nforEach: LongSummaryStatistics{count=10, sum=5316, min=427, average=531,600000, max=571}\ncollect: LongSummaryStatistics{count=10, sum=5380, min=444, average=538,000000, max=557}\n</code></pre>\n\n<p>parallel without nulls and filter (so the stream is <code>SIZED</code>):\ntoArrays has the best performance in such case, and <code>.forEach()</code> fails with \"indexOutOfBounds\" on the recepient ArrayList, had to replace with <code>.forEachOrdered()</code></p>\n\n<pre><code>toArray: LongSummaryStatistics{count=100, sum=75566, min=707, average=755,660000, max=1107}\nforEach: LongSummaryStatistics{count=100, sum=115802, min=992, average=1158,020000, max=1254}\ncollect: LongSummaryStatistics{count=100, sum=88415, min=732, average=884,150000, max=1014}\n</code></pre>\n", "title": "Java 8 - Best way to transform a list: map or foreach?", "tags": ["java", "java-8"], "link": "http://stackoverflow.com/questions/28319064/java-8-best-way-to-transform-a-list-map-or-foreach/29000802#29000802", "question_id": 28319064, "answer_id": 29000802}, {"body": "<p>May be Method 3.</p>\n\n<p>I always prefer to keep logic separate.</p>\n\n<pre><code>Predicate&lt;Long&gt; greaterThan100 = new Predicate&lt;Long&gt;() {\n            @Override\n            public boolean test(Long currentParameter) {\n                return currentParameter &gt; 100;\n            }\n        };\n\n        List&lt;Long&gt; sourceLongList = Arrays.asList(1L, 10L, 50L, 80L, 100L, 120L, 133L, 333L);\n        List&lt;Long&gt; resultList = sourceLongList.parallelStream().filter(greaterThan100).collect(Collectors.toList());\n</code></pre>\n", "title": "Java 8 - Best way to transform a list: map or foreach?", "tags": ["java", "java-8"], "link": "http://stackoverflow.com/questions/28319064/java-8-best-way-to-transform-a-list-map-or-foreach/36428452#36428452", "question_id": 28319064, "answer_id": 36428452}], "creation_date": 1423045805, "score": 62, "link": "http://stackoverflow.com/questions/28319064/java-8-best-way-to-transform-a-list-map-or-foreach", "question_id": 28319064}, {"body": "<p>This was an interview question:</p>\n\n<pre><code>public class Demo {\n\n    public static void main(String[] args) {\n        System.out.println(foo());\n    }\n\n    static String foo() {\n        try {\n            return \"try ...\";\n        } catch (Exception e) {\n            return \"catch ...\";\n        } finally {\n            return \"finally ...\"; //got as result\n        }\n    }\n}\n</code></pre>\n\n<p>My question is why there are no compile time errors. When I have the return statement in my <code>finally</code> block, it is bound to return from <code>finally</code> instead of <code>try</code> and <code>catch</code> block. I tried to compile this code with <code>-Xlint</code> option, it gives a warning as.</p>\n\n<pre><code>warning: [finally] finally clause cannot complete normally\n</code></pre>\n", "tags": ["java", "compiler-errors", "return", "try-catch", "try-catch-finally"], "title": "Multiple return statements without compiler error", "answers": [{"body": "<p>There are no compile time error since only 1 and exactly 1 of <code>return</code> statement will actually return the control back to calling code. </p>\n\n<p>As explained @Hoopje, <code>return</code> within <code>try</code> or <code>catch</code> will execute first, their respective return statement will also execute. But just before returning the control back to calling code, it will execute the <code>finally</code> block. Now, this <code>block</code> also <code>return</code>s something, so this return overrides the previous one.</p>\n", "title": "Multiple return statements without compiler error", "tags": ["java", "compiler-errors", "return", "try-catch", "try-catch-finally"], "link": "http://stackoverflow.com/questions/30976123/multiple-return-statements-without-compiler-error/30976148#30976148", "question_id": 30976123, "answer_id": 30976148}, {"body": "<p>Your code works fine because there is only one return statement in try, catch and finally blocks. Compilation error will occur if you try to write two return statements inside one of try, catch or finally blocks saying there is an unreachable return statement.</p>\n", "title": "Multiple return statements without compiler error", "tags": ["java", "compiler-errors", "return", "try-catch", "try-catch-finally"], "link": "http://stackoverflow.com/questions/30976123/multiple-return-statements-without-compiler-error/30976438#30976438", "question_id": 30976123, "answer_id": 30976438}, {"body": "<p>Brilliant Question.. According to my knowledge return statement of the try and catch block is transferred to finally if you have added finally block to your code. That's how its work. </p>\n\n<p>So in this case all code lines are executing and you can try debugging. The all three blocks I tried below code. </p>\n\n<pre><code>public class Main {\n\n    public static void main(String[] args) {\n        System.out.println(foo());\n    }\n    static String foo() {\n        try {\n            throw new Exception();\n        } catch (Exception e) {\n            return \"catch ...\";\n        } finally {\n            return \"finally ...\"; //got as result\n        }\n    }\n}\n</code></pre>\n\n<p>You can get the idea from below link. \n<a href=\"http://stackoverflow.com/questions/2309964/multiple-returns-which-one-sets-the-final-return-value\">Multiple returns: Which one sets the final return value?</a></p>\n", "title": "Multiple return statements without compiler error", "tags": ["java", "compiler-errors", "return", "try-catch", "try-catch-finally"], "link": "http://stackoverflow.com/questions/30976123/multiple-return-statements-without-compiler-error/30976712#30976712", "question_id": 30976123, "answer_id": 30976712}, {"body": "<p>It's essentially the same as this:</p>\n\n<pre><code>public boolean someMethod(){\n        if(1 == 1){\n            return true;\n        }\n        return false;\n}\n</code></pre>\n\n<p>It will not give a compilation error, although it will give a warning. The compiler will only give an error when there's a chance of <strong>no</strong> return statement being executed.</p>\n", "title": "Multiple return statements without compiler error", "tags": ["java", "compiler-errors", "return", "try-catch", "try-catch-finally"], "link": "http://stackoverflow.com/questions/30976123/multiple-return-statements-without-compiler-error/30976715#30976715", "question_id": 30976123, "answer_id": 30976715}, {"body": "<p>This is described in the Java Language Specification:</p>\n\n<p><a href=\"https://docs.oracle.com/javase/specs/jls/se7/html/jls-14.html#jls-14.17\">\u00a714.17</a></p>\n\n<blockquote>\n  <p>Abrupt completion of a <code>finally</code> clause can disrupt the transfer of\n  control initiated by a <code>return</code> statement.</p>\n</blockquote>\n\n<p><a href=\"https://docs.oracle.com/javase/specs/jls/se7/html/jls-14.html#jls-14.20.2\">\u00a714.20.2</a></p>\n\n<blockquote>\n  <p>If execution of the <code>try</code> block completes normally, then the <code>finally</code>\n  block is executed, and then there is a choice:</p>\n  \n  <ul>\n  <li>If the <code>finally</code> block completes normally, then the <code>try</code> statement completes normally.</li>\n  <li>If the <code>finally</code> block completes abruptly for reason S, then the <code>try</code> statement completes abruptly for reason S.</li>\n  </ul>\n  \n  <p>If execution of the <code>try</code> block completes abruptly for any other reason\n  R, then the <code>finally</code> block is executed, and then there is a choice:</p>\n  \n  <ul>\n  <li>If the <code>finally</code> block completes normally, then the <code>try</code> statement completes abruptly for reason R.</li>\n  <li><strong>If the <code>finally</code> block completes abruptly for reason S, then the <code>try</code> statement completes abruptly for reason S (and reason R is discarded).</strong></li>\n  </ul>\n</blockquote>\n", "title": "Multiple return statements without compiler error", "tags": ["java", "compiler-errors", "return", "try-catch", "try-catch-finally"], "link": "http://stackoverflow.com/questions/30976123/multiple-return-statements-without-compiler-error/30977262#30977262", "question_id": 30976123, "answer_id": 30977262}, {"body": "<p>It does not give a compilation error because it is allowed by the Java Language Specification. However, it gives a warning message because including a <code>return</code> statement in the <code>finally</code> block is usually a bad idea.</p>\n\n<p>What happens in your example is the following. The <code>return</code> statement in the <code>try</code> block is executed. However, the <code>finally</code> block must always be executed so it is executed after the <code>catch</code> block finishes. The <code>return</code> statement occurring there overwrites the result of the previous <code>return</code> statement, and so the method returns the second result.</p>\n\n<p>Similarly a <code>finally</code> block usually should not throw an exception. That's why the warning says that the <code>finally</code> block should complete normally, that is, without <code>return</code> or throwing an exception.</p>\n", "title": "Multiple return statements without compiler error", "tags": ["java", "compiler-errors", "return", "try-catch", "try-catch-finally"], "link": "http://stackoverflow.com/questions/30976123/multiple-return-statements-without-compiler-error/30977317#30977317", "question_id": 30976123, "answer_id": 30977317}, {"body": "<p>(For short answer- Read the <strong><em>bold and italic parts</em></strong> of the answer)</p>\n\n<p>The execution flow as per the Java 8 docs. It provides you the details. You can infer execution of return statements based on the following.</p>\n\n<p>A try statement with a finally block is executed by first executing the try block.</p>\n\n<p>Then there is a choice:</p>\n\n<p>\u2022 If execution of the try block completes normally, then the finally block is\nexecuted, and then there is a choice:</p>\n\n<p>\u2013 If the finally block completes normally, then the try statement completes\nnormally.</p>\n\n<p>\u2013 If the finally block completes abruptly for reason S, then the try statement\ncompletes abruptly for reason S.</p>\n\n<p>\u2022 If execution of the try block completes abruptly because of a throw of a value\nV, then there is a choice:</p>\n\n<p>\u2013 If the run-time type of V is assignment compatible with a catchable exception\nclass of any catch clause of the try statement, then the first (leftmost) such\ncatch clause is selected. The value V is assigned to the parameter of the\nselected catch clause, and the Block of that catch clause is executed. </p>\n\n<p>Then there is a choice:</p>\n\n<p>\u203a If the catch block completes normally, then the finally block is executed.\nThen there is a choice:</p>\n\n<p>\u00bb If the finally block completes normally, then the try statement\ncompletes normally.</p>\n\n<p>\u00bb If the finally block completes abruptly for any reason, then the try\nstatement completes abruptly for the same reason.</p>\n\n<p>\u203a <strong><em>If the catch block completes abruptly for reason R, then the finally block\nis executed. Then there is a choice:</em></strong></p>\n\n<p>\u00bb If the finally block completes normally, then the try statement\ncompletes abruptly for reason R.</p>\n\n<p>\u00bb <strong><em>If the finally block completes abruptly for reason S, then the try\nstatement completes abruptly for reason S (and reason R is discarded).</em></strong></p>\n\n<p>\u2013 If the run-time type of V is not assignment compatible with a catchable\nexception class of any catch clause of the try statement, then the finally\nblock is executed. </p>\n\n<p>Then there is a choice:</p>\n\n<p>\u203a If the finally block completes normally, then the try statement completes\nabruptly because of a throw of the value V.</p>\n\n<p>\u203a If the finally block completes abruptly for reason S, then the try statement\ncompletes abruptly for reason S (and the throw of value V is discarded and\nforgotten).</p>\n\n<p>\u2022 If execution of the try block completes abruptly for any other reason R, then the\nfinally block is executed, and then there is a choice:</p>\n\n<p>\u2013 If the finally block completes normally, then the try statement completes\nabruptly for reason R.</p>\n\n<p>\u2013 If the finally block completes abruptly for reason S, then the try statement\ncompletes abruptly for reason S (and reason R is discarded).</p>\n\n<p>the explanation is clear in this link- <a href=\"https://books.google.co.in/books?id=1DaDAwAAQBAJ&amp;pg=PA445&amp;lpg=PA445&amp;dq=A+try+statement+with+a+finally+block+is+executed+by+first+executing+the+try+block.+Then+there+is+a+choice&amp;source=bl&amp;ots=hxneMIMElt&amp;sig=xZCGrBHUylXQ6i3lAhNAhKL3onw&amp;hl=en&amp;sa=X&amp;ei=0uuHVZu-EZO3uQSso44Q&amp;ved=0CDgQ6AEwBQ#v=onepage&amp;q=A%20try%20statement%20with%20a%20finally%20block%20is%20executed%20by%20first%20executing%20the%20try%20block.%20Then%20there%20is%20a%20choice&amp;f=false\" rel=\"nofollow\">javaDoc</a></p>\n", "title": "Multiple return statements without compiler error", "tags": ["java", "compiler-errors", "return", "try-catch", "try-catch-finally"], "link": "http://stackoverflow.com/questions/30976123/multiple-return-statements-without-compiler-error/30979919#30979919", "question_id": 30976123, "answer_id": 30979919}, {"body": "<p>try running this:</p>\n\n<p>it will print: 1, 2, 3 and then throw a division by zero Exception</p>\n\n<pre><code>public class Demo {\n  public static void main(String[] args) {\n    System.out.println(foo());\n  }\n  public static String print(int a){\n    System.out.println(a);\n    return String.valueOf(a/0);\n  }\n  static String foo() {\n    try {\n      return print(1);\n    } catch (Exception e) {\n      return print(2);\n    } finally {\n      return  print(3);\n    }\n  }\n}\n</code></pre>\n", "title": "Multiple return statements without compiler error", "tags": ["java", "compiler-errors", "return", "try-catch", "try-catch-finally"], "link": "http://stackoverflow.com/questions/30976123/multiple-return-statements-without-compiler-error/31012180#31012180", "question_id": 30976123, "answer_id": 31012180}], "creation_date": 1434964410, "score": 60, "link": "http://stackoverflow.com/questions/30976123/multiple-return-statements-without-compiler-error", "question_id": 30976123}, {"body": "<p>Error:Execution failed for task ':app:dexDebug'.</p>\n\n<blockquote>\n  <p>com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process 'command 'C:\\Program Files\\Java\\jdk1.8.0_40\\bin\\java.exe'' finished with non-zero exit value 2</p>\n</blockquote>\n\n<p>I searched all the similar questions and solutions, but they do not help. I hope experts like you come up. </p>\n\n<p>The project code has been uploaded into bitbucket: <a href=\"https://tainule@bitbucket.org/tainule/numad-huizhang.git\">https://tainule@bitbucket.org/tainule/numad-huizhang.git</a> </p>\n\n<p><strong>I have two modules, app and endpoint. Below is from Module:app:</strong></p>\n\n<pre><code>apply plugin: 'com.android.application'\n\nandroid {\n    compileSdkVersion 21\n    buildToolsVersion \"21.1.2\"\n\n    defaultConfig {\n        applicationId \"edu.neu.madcourse.huizhang1\"\n        minSdkVersion 14\n        targetSdkVersion 21\n        versionCode 3\n        versionName \"2.1\"\n//        multiDexEnabled true\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n\n        }\n    }\n}\n\ndependencies {\n\n\n    compile fileTree(include: ['*.jar'], dir: 'libs')\n    compile \"com.android.support:appcompat-v7:21.0.+\"\n    compile 'com.google.android.gms:play-services:+'\n    compile 'com.google.guava:guava:18.0'\n    compile 'com.google.code.gson:gson:1.7.2'\n    compile 'org.apache.httpcomponents:httpmime:4.4-beta1'\n    compile 'org.apache.httpcomponents:httpclient:4.4-beta1'\n    compile 'org.apache.httpcomponents:httpcore:4.4-beta1'\n    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'\n    compile project(path: ':endpoint', configuration: 'android-endpoints')\n    compile files('src/main/res/libs/KeyValueAPI.jar')\n\n}\n</code></pre>\n\n<p><strong>Below is from Module endpoint:</strong></p>\n\n<pre><code>buildscript {\n    repositories {\n        mavenLocal()\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.google.appengine:gradle-appengine-plugin:1.9.17'\n    }\n}\n\nrepositories {\n    mavenCentral();\n}\n\napply plugin: 'java'\napply plugin: 'war'\napply plugin: 'appengine'\n\nsourceCompatibility = 1.7\ntargetCompatibility = 1.7\n\ndependencies {\n    appengineSdk 'com.google.appengine:appengine-java-sdk:1.9.8'\n    compile 'com.google.appengine:appengine-endpoints:1.9.8'\n    compile 'com.google.appengine:appengine-endpoints-deps:1.9.8'\n    compile 'javax.servlet:servlet-api:2.5'\n    compile 'com.googlecode.objectify:objectify:4.0b3'\n    compile 'com.ganyo:gcm-server:1.0.2'\n//        compile 'com.github.fengdai:alertdialogpro-theme-material:0.1.0'\n\n}\n\nappengine {\n    downloadSdk = true\n    appcfg {\n        oauth2 = true\n    }\n    endpoints {\n        getClientLibsOnBuild = true\n        getDiscoveryDocsOnBuild = true\n    }\n}\n</code></pre>\n", "tags": ["java", "android", "gradle"], "title": "Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException", "answers": [{"body": "<p>I encountered the same exact error message. I am not quite sure if my solution will solve also your issue.</p>\n\n<p>In Project Structure (app) I changed the Compile SDK Version from API 22 to API 21 and changed Build Tools Version from 22.0.0 to 21.1.2.</p>\n\n<p>When I downloaded the latest API 22 Adroid 5.1, every project I create is using this API and causes me the problem. Maybe, Android Team is looking for a fix for this one.</p>\n", "title": "Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException", "tags": ["java", "android", "gradle"], "link": "http://stackoverflow.com/questions/28917696/errorexecution-failed-for-task-appdexdebug-com-android-ide-common-process/29012851#29012851", "question_id": 28917696, "answer_id": 29012851}, {"body": "<p>Finally I solved this problem by changing compile 'com.google.guava:guava:18.0 ' to compile 'com.google.guava:guava-jdk5:17.0'</p>\n", "title": "Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException", "tags": ["java", "android", "gradle"], "link": "http://stackoverflow.com/questions/28917696/errorexecution-failed-for-task-appdexdebug-com-android-ide-common-process/29042243#29042243", "question_id": 28917696, "answer_id": 29042243}, {"body": "<p>I've got this problem after including same classes twice</p>\n", "title": "Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException", "tags": ["java", "android", "gradle"], "link": "http://stackoverflow.com/questions/28917696/errorexecution-failed-for-task-appdexdebug-com-android-ide-common-process/29100136#29100136", "question_id": 28917696, "answer_id": 29100136}, {"body": "<p>I have the same issue, and solved by change the '+' to a exact number, like compile \"com.android.support:appcompat-v7:21.0.+\" to compile \"com.android.support:appcompat-v7:21.0.0\". </p>\n\n<p>This works for me. :)</p>\n", "title": "Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException", "tags": ["java", "android", "gradle"], "link": "http://stackoverflow.com/questions/28917696/errorexecution-failed-for-task-appdexdebug-com-android-ide-common-process/29139234#29139234", "question_id": 28917696, "answer_id": 29139234}, {"body": "<p>It seems you have a jar file or a lib appearing multiple times.</p>\n\n<p>So, remove the .jar file from the lib folder then:</p>\n\n<p><code>Build</code> > <code>Rebuild</code></p>\n", "title": "Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException", "tags": ["java", "android", "gradle"], "link": "http://stackoverflow.com/questions/28917696/errorexecution-failed-for-task-appdexdebug-com-android-ide-common-process/29284984#29284984", "question_id": 28917696, "answer_id": 29284984}, {"body": "<p>For me I had multiple versions of the same library included in <code>/app/libs</code>. I was using Parse and I had both <code>ParseFacebookUtilsV3-1.9.0.jar</code> and <code>ParseFacebookUtilsV4-1.9.0.jar</code>.</p>\n\n<p>Deleting the <code>V3</code> jar solves the problem.</p>\n", "title": "Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException", "tags": ["java", "android", "gradle"], "link": "http://stackoverflow.com/questions/28917696/errorexecution-failed-for-task-appdexdebug-com-android-ide-common-process/29443593#29443593", "question_id": 28917696, "answer_id": 29443593}, {"body": "<p>This could also be the case when you have too many object references. Take a look at the results from the build, esp in the task :dex:multiDebug:</p>\n\n<p>trouble writing output: Too many method references: 67114; max is 65536.</p>\n", "title": "Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException", "tags": ["java", "android", "gradle"], "link": "http://stackoverflow.com/questions/28917696/errorexecution-failed-for-task-appdexdebug-com-android-ide-common-process/29997419#29997419", "question_id": 28917696, "answer_id": 29997419}, {"body": "<p>Try to put this line of code in your main projects gradle script:</p>\n\n<pre><code>configurations { all*.exclude group: 'com.android.support', module: 'support-v4' }\n</code></pre>\n\n<p>I have two libraries linked to my project and they where using 'com.android.support:support-v4:22.0.0'. </p>\n\n<p>Hope it helps someone.</p>\n", "title": "Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException", "tags": ["java", "android", "gradle"], "link": "http://stackoverflow.com/questions/28917696/errorexecution-failed-for-task-appdexdebug-com-android-ide-common-process/30062871#30062871", "question_id": 28917696, "answer_id": 30062871}, {"body": "<p>three condition may cause this issue.</p>\n\n<ol>\n<li>differ module have differ jar </li>\n<li>in libs had contain jar\uff0cbut in src alse add relevant source </li>\n<li><p>gradle repeat contain\uff0ceg:</p>\n\n<p>compile fileTree(include: [\u2018*.jar\u2019], dir: \u2018libs\u2019) </p>\n\n<p>compile files(\u2018libs/xxx.jar\u2019)</p></li>\n</ol>\n\n<p>if you can read chinese ,read here<a href=\"http://blog.csdn.net/u011570979/article/details/46519329\">Error:Execution failed for task ':app:dexDebug'.> com.android.ide.common.process.ProcessException: o</a></p>\n", "title": "Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException", "tags": ["java", "android", "gradle"], "link": "http://stackoverflow.com/questions/28917696/errorexecution-failed-for-task-appdexdebug-com-android-ide-common-process/30927267#30927267", "question_id": 28917696, "answer_id": 30927267}, {"body": "<p>I solved the same issue by removing:</p>\n\n<pre><code>compile fileTree(include: ['*.jar'], dir: 'libs')\n</code></pre>\n\n<p>and adding for each jar file:</p>\n\n<pre><code>compile files('libs/yourjarfile.jar')\n</code></pre>\n", "title": "Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException", "tags": ["java", "android", "gradle"], "link": "http://stackoverflow.com/questions/28917696/errorexecution-failed-for-task-appdexdebug-com-android-ide-common-process/31934887#31934887", "question_id": 28917696, "answer_id": 31934887}, {"body": "<p>I had the same problem error that is shown, i solve it by adding</p>\n\n<pre><code>defaultConfig {        \n    // Enabling multidex support.\n    multiDexEnabled true\n}\n</code></pre>\n\n<p>I had this problem cause i exceeded the 65K methods dex limit imposed by Android i used so many libraries</p>\n", "title": "Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException", "tags": ["java", "android", "gradle"], "link": "http://stackoverflow.com/questions/28917696/errorexecution-failed-for-task-appdexdebug-com-android-ide-common-process/33392622#33392622", "question_id": 28917696, "answer_id": 33392622}, {"body": "<p>I am adding it so that someone in a similar situation might find it helpful.</p>\n\n<p>So, even after <code>multiDexEnabled = true</code> I was getting the same error. I had no <em>duplicate libraries</em>. None of the above solutions worked. Upon reading the error log, I found <code>OutOfMemError</code> issue to be the primary reason and thought of changing the <code>heap size</code> somehow. Hence, this -</p>\n\n<pre><code>dexOptions {\n        preDexLibraries = false\n        javaMaxHeapSize \"4g\"\n    }\n</code></pre>\n\n<p>Where \"4g\" means <code>HeapSize</code> of 4 GB. And it worked! I hope it does for you too.</p>\n", "title": "Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException", "tags": ["java", "android", "gradle"], "link": "http://stackoverflow.com/questions/28917696/errorexecution-failed-for-task-appdexdebug-com-android-ide-common-process/35098645#35098645", "question_id": 28917696, "answer_id": 35098645}, {"body": "<p>I recently migrated one of our corporate projects from Eclipse to Android Studio.</p>\n\n<p>We too got the below error during the migration:</p>\n\n<blockquote>\n  <p>Error:Execution failed for task ':appName:transformClassesWithDexForDebug'.\n   com.android.build.api.transform.TransformException: com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process 'command '/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/bin/java'' finished with non-zero exit value 2</p>\n</blockquote>\n\n<p>To resolve it, we had to do a few things:</p>\n\n<ol>\n<li>Remove/Update duplicate jars/files from libs </li>\n</ol>\n\n<blockquote>\n  <p>compile 'com.android.support:support-v4:23'     compile\n  'com.google.android.gms:play-services:9.0.0'</p>\n</blockquote>\n\n<p>to <code>compile 'com.google.android.gms:play-services:9.0.0'</code></p>\n\n<ol start=\"2\">\n<li>Set multiDexEnabled to True</li>\n</ol>\n\n<blockquote>\n  <p>defaultConfig {    multiDexEnabled true }</p>\n</blockquote>\n\n<ol start=\"3\">\n<li>Increase the heap size:</li>\n</ol>\n\n<blockquote>\n  <p>dexOptions {\n          incremental true\n          javaMaxHeapSize \"4g\"\n      }</p>\n</blockquote>\n", "title": "Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException", "tags": ["java", "android", "gradle"], "link": "http://stackoverflow.com/questions/28917696/errorexecution-failed-for-task-appdexdebug-com-android-ide-common-process/37504092#37504092", "question_id": 28917696, "answer_id": 37504092}, {"body": "<p>Try  to clean  and rebuild the project. I had the absolutely same question, this solved it.</p>\n", "title": "Error:Execution failed for task &#39;:app:dexDebug&#39;. com.android.ide.common.process.ProcessException", "tags": ["java", "android", "gradle"], "link": "http://stackoverflow.com/questions/28917696/errorexecution-failed-for-task-appdexdebug-com-android-ide-common-process/39285903#39285903", "question_id": 28917696, "answer_id": 39285903}], "creation_date": 1425748840, "score": 58, "link": "http://stackoverflow.com/questions/28917696/errorexecution-failed-for-task-appdexdebug-com-android-ide-common-process", "question_id": 28917696}, {"body": "<p>I've searched around Oracle's sites and cannot find the actual executable to download. I get sites that point to older versions, or to the source of Scene Builder instead. I'm looking for the actual windows/mac executable installer for the latest version of Scene Builder.</p>\n", "tags": ["java", "scenebuilder"], "title": "Where exactly can I download the latest version of Scene Builder for Java?", "answers": [{"body": "<p>Here are both  version 1.x and 2.x scene builders\n<a href=\"http://www.oracle.com/technetwork/java/javafxscenebuilder-1x-archive-2199384.html\">http://www.oracle.com/technetwork/java/javafxscenebuilder-1x-archive-2199384.html</a></p>\n\n<p>This project was moved to openjfx project. So you can get the latest source code and any other version from <a href=\"http://hg.openjdk.java.net/openjfx\">http://hg.openjdk.java.net/openjfx</a></p>\n\n<p>This is the scene builder for jdk 8u40\n<a href=\"http://hg.openjdk.java.net/openjfx/8u/rt/file/5fc0ddb42776/apps/scenebuilder\">http://hg.openjdk.java.net/openjfx/8u/rt/file/5fc0ddb42776/apps/scenebuilder</a></p>\n", "title": "Where exactly can I download the latest version of Scene Builder for Java?", "tags": ["java", "scenebuilder"], "link": "http://stackoverflow.com/questions/28808130/where-exactly-can-i-download-the-latest-version-of-scene-builder-for-java/28808294#28808294", "question_id": 28808130, "answer_id": 28808294}, {"body": "<p>Sadly, Oracle has decided to no longer provide binary downloads for Scene Builder. Their reasoning, as far as I can tell, seems to be that the main goal for the scene builder project is now to provide the SceneBuilderKit for integration inside IDEs (and IDE developers will, of course, compile it themselves) rather than the stand-alone SceneBuilderApp.</p>\n\n<p>However, since Scene Builder has been open sourced, third parties can provide binary builds for download. One I'm aware of is Gluon; you can check out <a href=\"http://gluonhq.com/products/scene-builder/\">their downloads page</a>. The version they currently offer is recent enough to support the new controls included in the JDK 8u40.</p>\n\n<p>For more information, you may want to read the discussions about 8u40 release on <a href=\"http://mail.openjdk.java.net/pipermail/openjfx-dev/2015-March/thread.html#16748\">the openjfx-dev mailing list</a>.</p>\n", "title": "Where exactly can I download the latest version of Scene Builder for Java?", "tags": ["java", "scenebuilder"], "link": "http://stackoverflow.com/questions/28808130/where-exactly-can-i-download-the-latest-version-of-scene-builder-for-java/28887092#28887092", "question_id": 28808130, "answer_id": 28887092}, {"body": "<p>Recent builds can also be found here: \n<a href=\"http://gluonhq.com/products/scene-builder/\">http://gluonhq.com/products/scene-builder/</a></p>\n\n<p>Besides a runnable jar, they provide native installers as well.</p>\n", "title": "Where exactly can I download the latest version of Scene Builder for Java?", "tags": ["java", "scenebuilder"], "link": "http://stackoverflow.com/questions/28808130/where-exactly-can-i-download-the-latest-version-of-scene-builder-for-java/28974622#28974622", "question_id": 28808130, "answer_id": 28974622}, {"body": "<p>You can download the latest version of screen builder from the following URL according to your platform \n<a href=\"http://gluonhq.com/open-source/scene-builder/\" rel=\"nofollow\">http://gluonhq.com/open-source/scene-builder/</a></p>\n", "title": "Where exactly can I download the latest version of Scene Builder for Java?", "tags": ["java", "scenebuilder"], "link": "http://stackoverflow.com/questions/28808130/where-exactly-can-i-download-the-latest-version-of-scene-builder-for-java/31766222#31766222", "question_id": 28808130, "answer_id": 31766222}, {"body": "<p>I've successfully pulled and compiled Scene Builder from here:</p>\n\n<p><a href=\"http://hg.openjdk.java.net/openjfx/8u-dev/rt/file/a607b58ec579/apps/scenebuilder\" rel=\"nofollow\">http://hg.openjdk.java.net/openjfx/8u-dev/rt/file/a607b58ec579/apps/scenebuilder</a></p>\n\n<p>Althought it's dev branch, dev build proved to be pretty stable.</p>\n", "title": "Where exactly can I download the latest version of Scene Builder for Java?", "tags": ["java", "scenebuilder"], "link": "http://stackoverflow.com/questions/28808130/where-exactly-can-i-download-the-latest-version-of-scene-builder-for-java/37923192#37923192", "question_id": 28808130, "answer_id": 37923192}], "creation_date": 1425294046, "score": 57, "link": "http://stackoverflow.com/questions/28808130/where-exactly-can-i-download-the-latest-version-of-scene-builder-for-java", "question_id": 28808130}, {"body": "<p>I'm aware that Java-the-compilable-programming-language is not one and the same as Java-the-bytecode-format-for-JVM-execution. There are examples of things that are valid in the .class format but not in the .java source code, such as constructor-less classes and synthetic methods.</p>\n\n<ol>\n<li><p>If we <em>hand-craft a .class file</em> with a reserved Java language keyword (e.g. <code>int</code>, <code>while</code>) as the class, method, or field name, will the Java virtual machine accept it for loading?</p></li>\n<li><p>If the class is loaded, does it imply that the only way to access this class or member is through Java reflection, because the name is syntactically illegal in the Java programming language?</p></li>\n</ol>\n", "tags": ["java", "reflection", "jvm", ".class-file"], "title": "Can Java class files use reserved keywords as names?", "answers": [{"body": "<ol>\n<li>Keywords are known only to the compiler. The compiler translates\nthem into adequate bytecode. So they don't exist during runtime of\ncompiled bytecode and, consequently, are not verified by the JVM.</li>\n<li>Surely, you can't access the class members that are not known at\ncompile time. But you can use reflection for that purpose if you are\nsure that such class member will exist in the compiled code (you\nwill \"hand-craft\" them there), because access by reflection is not\nverified by the compiler.</li>\n</ol>\n", "title": "Can Java class files use reserved keywords as names?", "tags": ["java", "reflection", "jvm", ".class-file"], "link": "http://stackoverflow.com/questions/30491035/can-java-class-files-use-reserved-keywords-as-names/30491174#30491174", "question_id": 30491035, "answer_id": 30491174}, {"body": "<p>Yes, you can use reserved words. The words are only for the compiler. They do not appear in the generated byte code.</p>\n\n<p>An example of using reserved Java words is in the JVM-based Scala language. Scala has different constructs and syntax than Java, but compiles to Java byte code, for running on a JVM.</p>\n\n<p>This is legal Scala:</p>\n\n<pre><code>class `class`\n</code></pre>\n\n<p>This defines a class named <code>class</code> with a no-arg constructor.  Running <code>javap</code> (a disassembler) on the compiled <code>class.class</code> file shows</p>\n\n<pre><code>public class class {\n    public class();\n}\n</code></pre>\n\n<p>Scala can do the same with any other Java reserved word.</p>\n\n<pre><code>class int\nclass `while`\nclass goto\n</code></pre>\n\n<p>They can also be used for method or field names.</p>\n\n<p>As you suspected, you would not be able to use these classes from Java, except for reflection. You <em>could</em> use these from a similarly \"customized\" class file, e.g. from a class file generated by the Scala compiler.</p>\n\n<p>In summary, this is a limitation of javac (the compiler), not java (the VM/runtime environment).</p>\n", "title": "Can Java class files use reserved keywords as names?", "tags": ["java", "reflection", "jvm", ".class-file"], "link": "http://stackoverflow.com/questions/30491035/can-java-class-files-use-reserved-keywords-as-names/30491199#30491199", "question_id": 30491035, "answer_id": 30491199}, {"body": "<p>The only restrictions on class names at the bytecode level are that they can't contain the characters <code>[</code>, <code>.</code> or <code>;</code> and that they're at most 65535 bytes long. Among other things, this means that you can freely use reserved words, whitespace, special characters, Unicode, or even weird stuff like newlines.</p>\n\n<p>You can theoretically even use null characters in a class name, but since it's impossible to have a null character in the filename, you can't include such a classfile in a jar. You might be able to create and load one dynamically though. </p>\n\n<p>Here's an example of some of the things that you can do (written in Krakatau assembly):</p>\n\n<pre><code>; Entry point for the jar\n.class Main\n.super java/lang/Object\n\n.method public static main : ([Ljava/lang/String;)V\n    .limit stack 10\n    .limit locals 10\n    invokestatic int                                hello ()V\n    invokestatic \"-42\"                              hello ()V\n    invokestatic \"\"                                 hello ()V\n    invokestatic \"  some  whitespace and \\t tabs\"   hello ()V\n    invokestatic \"new\\nline\"                        hello ()V\n    invokestatic 'name with \"Quotes\" in it'         hello ()V\n    return\n.end method\n.end class\n\n\n.class int\n.super java/lang/Object\n.method public static hello : ()V\n    .limit stack 2\n    .limit locals 0\n    getstatic java/lang/System out Ljava/io/PrintStream;\n    ldc \"Hello from int\"\n    invokevirtual java/io/PrintStream println (Ljava/lang/Object;)V\n    return\n.end method\n.end class\n\n.class \"-42\"\n.super java/lang/Object\n.method public static hello : ()V\n    .limit stack 2\n    .limit locals 0\n    getstatic java/lang/System out Ljava/io/PrintStream;\n    ldc \"Hello from -42\"\n    invokevirtual java/io/PrintStream println (Ljava/lang/Object;)V\n    return\n.end method\n.end class\n\n; Even the empty string can be a class name!\n.class \"\"\n.super java/lang/Object\n.method public static hello : ()V\n    .limit stack 2\n    .limit locals 0\n    getstatic java/lang/System out Ljava/io/PrintStream;\n    ldc \"Hello from \"\n    invokevirtual java/io/PrintStream println (Ljava/lang/Object;)V\n    return\n.end method\n.end class\n\n.class \"  some  whitespace and \\t tabs\"\n.super java/lang/Object\n.method public static hello : ()V\n    .limit stack 2\n    .limit locals 0\n    getstatic java/lang/System out Ljava/io/PrintStream;\n    ldc \"Hello from   some  whitespace and \\t tabs\"\n    invokevirtual java/io/PrintStream println (Ljava/lang/Object;)V\n    return\n.end method\n.end class\n\n.class \"new\\nline\"\n.super java/lang/Object\n.method public static hello : ()V\n    .limit stack 2\n    .limit locals 0\n    getstatic java/lang/System out Ljava/io/PrintStream;\n    ldc \"Hello from new\\nline\"\n    invokevirtual java/io/PrintStream println (Ljava/lang/Object;)V\n    return\n.end method\n.end class\n\n.class 'name with \"Quotes\" in it'\n.super java/lang/Object\n.method public static hello : ()V\n    .limit stack 2\n    .limit locals 0\n    getstatic java/lang/System out Ljava/io/PrintStream;\n    ldc \"Hello from name with \\\"Quotes\\\" in it\"\n    invokevirtual java/io/PrintStream println (Ljava/lang/Object;)V\n    return\n.end method\n.end class\n</code></pre>\n\n<p>Execution output:</p>\n\n<pre><code>Hello from int\nHello from -42\nHello from\nHello from   some  whitespace and        tabs\nHello from new\nline\nHello from name with \"Quotes\" in it\n</code></pre>\n\n<p>See <a href=\"http://stackoverflow.com/a/30502309/839689\">Holger's answer</a> for the exact quote of the rules from the JVM specification.</p>\n", "title": "Can Java class files use reserved keywords as names?", "tags": ["java", "reflection", "jvm", ".class-file"], "link": "http://stackoverflow.com/questions/30491035/can-java-class-files-use-reserved-keywords-as-names/30496867#30496867", "question_id": 30491035, "answer_id": 30496867}, {"body": "<p>The restrictions about names are fixed in the JVM specification:</p>\n\n<blockquote>\n  <h3><a href=\"http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.2.1\">\u00a74.2.1. Binary Class and Interface Names</a></h3>\n  \n  <p>Class and interface names that appear in class file structures are always represented in a fully qualified form known as binary names (JLS \u00a713.1). Such names are always represented as <code>CONSTANT_Utf8_info</code> structures (\u00a74.4.7) and thus may be drawn, where not further constrained, from the entire Unicode codespace\u2026</p>\n  \n  <p>For historical reasons, the syntax of binary names that appear in class file structures differs from the syntax of binary names documented in JLS \u00a713.1. In this internal form, the ASCII periods (<code>.</code>) that normally separate the identifiers which make up the binary name are replaced by ASCII forward slashes (<code>/</code>). The identifiers themselves must be unqualified names (\u00a74.2.2).\n  \u00a0</p>\n  \n  <h3><a href=\"http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.2.2\">\u00a74.2.2. Unqualified Names</a></h3>\n  \n  <p>Names of methods, fields, local variables, and formal parameters are stored as unqualified names. An unqualified name must contain at least one Unicode code point and must not contain any of the ASCII characters <code>.</code> <code>;</code> <code>[</code> <code>/</code> (that is, period or semicolon or left square bracket or forward slash).</p>\n  \n  <p>Method names are further constrained so that, with the exception of the special method names <code>&lt;init&gt;</code> and <code>&lt;clinit&gt;</code> (\u00a72.9), they must not contain the ASCII characters <code>&lt;</code> or <code>&gt;</code> (that is, left angle bracket or right angle bracket).</p>\n</blockquote>\n\n<p>So the answer is, there are only a few characters you can\u2019t use on the binary level. First, <code>/</code> is the package separator. Then, <code>;</code> and <code>[</code> can\u2019t be used because the have special meaning in <a href=\"http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.3.2\">field signatures</a> and <a href=\"http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.3.3\">method signatures</a> which may contain type names. In these signatures, <code>[</code> starts an array type and <code>;</code> marks the end of a reference type name.</p>\n\n<p>There is no clear reason why <code>.</code> is forbidden. It isn\u2019t used within the JVM and only has a meaning within <a href=\"http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.7.9.1\">generic signatures</a> but <em>if</em> you are using generic signatures, the type names are further restricted by not being allowed to contain <code>&lt;</code>, <code>&gt;</code>, <code>:</code> as well as these characters have a special meaning within generic signatures too.</p>\n\n<p>Consequently, violating the specification by using <code>.</code> within identifiers has no impact on the primary function of the JVM. There are obfuscators doing so. The resulting code works but you may encounter problems with Reflection when asking for Generic type signatures. Also, converting binary names to source name by replacing all <code>/</code>s with <code>.</code>s will become irreversible if the binary name contains <code>.</code>s.</p>\n\n<hr>\n\n<p>It might be interesting that there was a <a href=\"http://mail.openjdk.java.net/pipermail/coin-dev/2009-March/001131.html\">proposal to support all possible identifiers within Java syntax</a>\u00a0(see point 3, \u201cexotic identifiers\u201d), but it didn\u2019t make it into the final Java\u00a07. And it seems, no-one is currently making a new attempt to bring it in.</p>\n\n<hr>\n\n<p>There is the additional technical limitation that the names can\u2019t have a <a href=\"http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.7\"><em>Modified UTF-8</em> representation</a> being longer than 65535 bytes because the number of bytes is stored as unsigned short value.</p>\n", "title": "Can Java class files use reserved keywords as names?", "tags": ["java", "reflection", "jvm", ".class-file"], "link": "http://stackoverflow.com/questions/30491035/can-java-class-files-use-reserved-keywords-as-names/30502309#30502309", "question_id": 30491035, "answer_id": 30502309}], "creation_date": 1432753464, "score": 56, "link": "http://stackoverflow.com/questions/30491035/can-java-class-files-use-reserved-keywords-as-names", "question_id": 30491035}, {"body": "<p>There is a question which was recently asked to me in an interview.</p>\n\n<p><strong>Problem</strong>: There is a class meant to profile the execution time of the code. The class is like: </p>\n\n<pre><code>Class StopWatch {\n\n    long startTime;\n    long stopTime;\n\n    void start() {// set startTime}\n    void stop() { // set stopTime}\n    long getTime() {// return difference}\n\n}\n</code></pre>\n\n<p>The client is expected to create an instance of the StopWatch and call methods accordingly. User code can mess up the use of the methods leading to unexpected results. Ex, start(), stop() and getTime() calls should be in order.</p>\n\n<p>This class has to be \"reconfigured\" so that user can be prevented from messing up the sequence. </p>\n\n<p>I proposed use of custom exception if stop() is called before start(), or doing some if/else checks, but interviewer was not satisfied. </p>\n\n<p><strong>Is there a design pattern to handle these kind of situations?</strong></p>\n\n<p><strong>Edit</strong>: The class members and method implementations can be modified.</p>\n", "tags": ["java", "oop", "design-patterns"], "title": "Java Design Issue: Enforce method call sequence", "answers": [{"body": "<p>Throwing an exception when the methods are not called in the correct order is common. For example, <code>Thread</code>'s <code>start</code> will throw an <code>IllegalThreadStateException</code> if called twice.</p>\n\n<p>You should have probably explained better how the instance would know if the methods are called in the correct order. This can be done by introducing a state variable, and checking the state at the start of each method (and updating it when necessary). </p>\n", "title": "Java Design Issue: Enforce method call sequence", "tags": ["java", "oop", "design-patterns"], "link": "http://stackoverflow.com/questions/30888581/java-design-issue-enforce-method-call-sequence/30888674#30888674", "question_id": 30888581, "answer_id": 30888674}, {"body": "<p>Maybe he expected this 'reconfiguration' and question was not about method sequence at all:</p>\n\n<pre><code>class StopWatch {\n\n   public static long runWithProfiling(Runnable action) {\n      startTime = now;\n      action.run();\n      return now - startTime;\n   }\n}\n</code></pre>\n", "title": "Java Design Issue: Enforce method call sequence", "tags": ["java", "oop", "design-patterns"], "link": "http://stackoverflow.com/questions/30888581/java-design-issue-enforce-method-call-sequence/30888740#30888740", "question_id": 30888581, "answer_id": 30888740}, {"body": "<p>We commonly use StopWatch from <a href=\"https://commons.apache.org/proper/commons-lang/javadocs/api-2.6/org/apache/commons/lang/time/StopWatch.html\">Apache Commons StopWatch</a> check the pattern how they've provided.</p>\n\n<p>IllegalStateException is thrown when the stop watch state is wrong.</p>\n\n<pre><code>public void stop()\n\nStop the stopwatch.\n\nThis method ends a new timing session, allowing the time to be retrieved.\n\nThrows:\n    IllegalStateException - if the StopWatch is not running.\n</code></pre>\n\n<p>Straight forward. </p>\n", "title": "Java Design Issue: Enforce method call sequence", "tags": ["java", "oop", "design-patterns"], "link": "http://stackoverflow.com/questions/30888581/java-design-issue-enforce-method-call-sequence/30888746#30888746", "question_id": 30888581, "answer_id": 30888746}, {"body": "<p>First there is the fact that implementing an own Java profiler is a waste of time, since good ones are available (maybe that was the intention behind the question).</p>\n\n<p>If you want to enforce the correct method order at compile time, you have to return something with each method in the chain:</p>\n\n<ol>\n<li><code>start()</code> has to return a <code>WatchStopper</code> with the stop method.</li>\n<li>Then <code>WatchStopper.stop()</code> has to return a <code>WatchResult</code> with the <code>getResult()</code> method.</li>\n</ol>\n\n<p>External Construction of those helper classes as well as other ways of accessing their methods have to be prevented of course.</p>\n", "title": "Java Design Issue: Enforce method call sequence", "tags": ["java", "oop", "design-patterns"], "link": "http://stackoverflow.com/questions/30888581/java-design-issue-enforce-method-call-sequence/30888885#30888885", "question_id": 30888581, "answer_id": 30888885}, {"body": "<p>With minor changes to the interface, you can make the method sequence the only one that can be called - even at compile time!</p>\n\n<pre><code>public class Stopwatch {\n    public static RunningStopwatch createRunning() {\n        return new RunningStopwatch();\n    }\n}\n\npublic class RunningStopwatch {\n    private final long startTime;\n\n    RunningStopwatch() {\n        startTime = System.nanoTime();\n    }\n\n    public FinishedStopwatch stop() {\n        return new FinishedStopwatch(startTime);\n    }\n}\n\npublic class FinishedStopwatch {\n    private final long elapsedTime;\n\n    FinishedStopwatch(long startTime) {\n        elapsedTime = System.nanoTime() - startTime;\n    }\n\n    public long getElapsedNanos() {\n        return elapsedTime;\n    }\n}\n</code></pre>\n\n<p>The usage is straightforward - every method returns a different class which only has the currently applicable methods. Basically, the state of the stopwatch is encapsuled in the type system.</p>\n\n<hr>\n\n<p>In comments, it was pointed out that even with the above design, you can call <code>stop()</code> twice. While I consider that to be added value, it is theoretically possible to screw oneself over. Then, the only way I can think of would be something like this:</p>\n\n<pre><code>class Stopwatch {\n    public static Stopwatch createRunning() {\n        return new Stopwatch();\n    }\n\n    private final long startTime;\n\n    private Stopwatch() {\n        startTime = System.nanoTime();\n    }\n\n    public long getElapsedNanos() {\n        return System.nanoTime() - startTime;\n    }\n}\n</code></pre>\n\n<p>That differs from the assignment by omitting the <code>stop()</code> method, but that's potentially good design, too. All would then depend on the precise requirements...</p>\n", "title": "Java Design Issue: Enforce method call sequence", "tags": ["java", "oop", "design-patterns"], "link": "http://stackoverflow.com/questions/30888581/java-design-issue-enforce-method-call-sequence/30888911#30888911", "question_id": 30888581, "answer_id": 30888911}, {"body": "<p>I suggest something like:</p>\n\n<pre><code>interface WatchFactory {\n    Watch startTimer();\n}\n\ninterface Watch {\n    long stopTimer();\n}\n</code></pre>\n\n<p>It will be used like this</p>\n\n<pre><code> Watch watch = watchFactory.startTimer();\n\n // Do something you want to measure\n\n long timeSpentInMillis = watch.stopTimer();\n</code></pre>\n\n<p>You can't invoke anything in wrong order. And if you invoke <code>stopTimer</code> twice you get meaningful result both time (maybe it is better rename it to <code>measure</code> and return actual time each time it invoked)</p>\n", "title": "Java Design Issue: Enforce method call sequence", "tags": ["java", "oop", "design-patterns"], "link": "http://stackoverflow.com/questions/30888581/java-design-issue-enforce-method-call-sequence/30889034#30889034", "question_id": 30888581, "answer_id": 30889034}, {"body": "<p>This can also be done with Lambdas in Java 8. In this case you pass your function to the <code>StopWatch</code> class and then tell the <code>StopWatch</code> to execute that code. </p>\n\n<pre><code>Class StopWatch {\n\n    long startTime;\n    long stopTime;\n\n    private void start() {// set startTime}\n    private void stop() { // set stopTime}\n    void execute(Runnable r){\n        start();\n        r.run();\n        stop();\n    }\n    long getTime() {// return difference}\n}\n</code></pre>\n", "title": "Java Design Issue: Enforce method call sequence", "tags": ["java", "oop", "design-patterns"], "link": "http://stackoverflow.com/questions/30888581/java-design-issue-enforce-method-call-sequence/30894590#30894590", "question_id": 30888581, "answer_id": 30894590}, {"body": "<h1>Once given more thought</h1>\n\n<p>In hindsight it sounds like they were looking for the <a href=\"http://stackoverflow.com/questions/341971/what-is-the-execute-around-idiom\">execute around pattern</a>. They're usually used to do things like enforce closing of streams. This is also more relevant due to this line:</p>\n\n<blockquote>\n  <p>Is there a design pattern to handle these kind of situations?</p>\n</blockquote>\n\n<p>The idea is you give the thing that does the \"executing around\" some class to do somethings with. You'll probably use <code>Runnable</code> but it's not necessary. <em>(<code>Runnable</code> makes the most sense and you'll see why soon.)</em> In your <code>StopWatch</code> class add some method like this</p>\n\n<pre><code>public long measureAction(Runnable r) {\n    start();\n    r.run();\n    stop();\n    return getTime();\n}\n</code></pre>\n\n<p>You would then call it like this</p>\n\n<pre><code>StopWatch stopWatch = new StopWatch();\nRunnable r = new Runnable() {\n    @Override\n    public void run() {\n        // Put some tasks here you want to measure.\n    }\n};\nlong time = stopWatch.measureAction(r);\n</code></pre>\n\n<p>This makes it fool proof. You don't have to worry about handling stop before start or people forgetting to call one and not the other, etc. The reason <code>Runnable</code> is nice is because</p>\n\n<ol>\n<li>Standard java class, not your own or third party</li>\n<li>End users can put whatever they need in the <code>Runnable</code> to be done.</li>\n</ol>\n\n<p>(If you were using it to enforce stream closing then you could put the actions that need to be done with a database connection inside so the end user doesn't need to worry about how to open and close it and you simultaneously force them to close it properly.)</p>\n\n<p>If you wanted, you could make some <code>StopWatchWrapper</code> instead leave <code>StopWatch</code> unmodified. You could also make <code>measureAction(Runnable)</code> not return a time and make <code>getTime()</code> public instead.</p>\n\n<p>The Java 8 way to calling it is even simpler</p>\n\n<pre><code>StopWatch stopWatch = new StopWatch();\nlong time = stopWatch.measureAction(() - &gt; {/* Measure stuff here */});\n</code></pre>\n\n<blockquote>\n  <p><strong>A third (hopefully final) thought:</strong> it seems what the interviewer was looking for and what is being upvoted the most is throwing exceptions based on state (e.g., if <code>stop()</code> is called before <code>start()</code> or <code>start()</code> after <code>stop()</code>). This is a fine practice and in fact, depending on the methods in <code>StopWatch</code> having a visibility other than private/protected, it's probably better to have than not have. My one issue with this is that <em>throwing exceptions alone will not <strong>enforce</strong> a method call sequence.</em></p>\n  \n  <p>For example, consider this:</p>\n\n<pre><code>class StopWatch {\n    boolean started = false;\n    boolean stopped = false;\n\n    // ...\n\n    public void start() {\n        if (started) {\n            throw new IllegalStateException(\"Already started!\");\n        }\n        started = true;\n        // ...\n    }\n\n    public void stop() {\n        if (!started) {\n            throw new IllegalStateException(\"Not yet started!\");\n        }\n        if (stopped) {\n            throw new IllegalStateException(\"Already stopped!\");\n        }\n        stopped = true;\n        // ...\n    }\n\n    public long getTime() {\n        if (!started) {\n            throw new IllegalStateException(\"Not yet started!\");\n        }\n        if (!stopped) {\n            throw new IllegalStateException(\"Not yet stopped!\");\n        }\n        stopped = true;\n        // ...\n    }\n}\n</code></pre>\n  \n  <p>Just because it's throwing <code>IllegalStateException</code> doesn't mean that the proper sequence is enforced, <strong>it just means improper sequences are denied</strong> (and I think we can all agree exceptions are annoying, luckily this is not a checked exception).</p>\n  \n  <p>The only way I know to truly enforce that the methods are called correctly is to do it yourself with the execute around pattern or the other suggestions that do things like return <code>RunningStopWatch</code> and <code>StoppedStopWatch</code> that I presume have only one method, but this seems overly complex (and OP mentioned that the interface couldn't be changed, admittedly the non-wrapper suggestion I made does this though). So to the best of my knowledge there's no way to <strong><em>enforce</em></strong> the proper order without modifying the interface or adding more classes.</p>\n  \n  <p>I guess it really depends on what people define \"enforce a method call sequence\" to mean. If only the exceptions are thrown then the below compiles</p>\n\n<pre><code>StopWatch stopWatch = new StopWatch();\nstopWatch.getTime();\nstopWatch.stop();\nstopWatch.start();\n</code></pre>\n  \n  <p>True it won't <em>run</em>, but it just seems so much simpler to hand in a <code>Runnable</code> and make those methods private, let the other one relax and handle the pesky details yourself. Then there's no guess work. With this class it's obvious the order, but if there were more methods or the names weren't so obvious it can begin to be a headache.</p>\n</blockquote>\n\n<hr>\n\n<h1>Original answer</h1>\n\n<blockquote>\n  <p><strong>More hindsight edit</strong>: OP mentions in a comment,</p>\n  \n  <blockquote>\n    <p>\"The three methods should remain intact and are only interface to the programmer. The class members and method implementation can change.\"</p>\n  </blockquote>\n  \n  <p>So the below is wrong because it removes something from the interface. (Technically, you could implement it as an empty method but that seems to be like a dumb thing to do and too confusing.) I kind of like this answer if the restriction wasn't there and it does seem to be another \"fool proof\" way to do it so I will leave it.</p>\n</blockquote>\n\n<p>To me something like this seems to be good.</p>\n\n<pre><code>class StopWatch {\n\n    private final long startTime;\n\n    public StopWatch() {\n        startTime = ...\n    }\n\n    public long stop() {\n        currentTime = ...\n        return currentTime - startTime;\n    }\n}\n</code></pre>\n\n<p>The reason I believe this to be good is the recording is during object creation so it can't be forgotten or done out of order (can't call <code>stop()</code> method if it doesn't exist).</p>\n\n<p>One flaw is probably the naming of <code>stop()</code>. At first I thought maybe <code>lap()</code> but that usually implies a restarting or some sort (or at least recording since last lap/start). Perhaps <code>read()</code> would be better? This mimics the action of looking at the time on a stop watch. I chose <code>stop()</code> to keep it similar to the original class.</p>\n\n<p>The only thing I'm not 100% sure about is how to get the time. To be honest that seems to be a more minor detail. As long as both <code>...</code> in the above code obtain current time the same way it should be fine.</p>\n", "title": "Java Design Issue: Enforce method call sequence", "tags": ["java", "oop", "design-patterns"], "link": "http://stackoverflow.com/questions/30888581/java-design-issue-enforce-method-call-sequence/30897102#30897102", "question_id": 30888581, "answer_id": 30897102}, {"body": "<p>Presumably the reason for using a stopwatch is that the entity that's interested in the time is distinct from the entity that's responsible for starting and stopping the timing intervals.  If that is not the case, patterns using immutable objects and allowing code to query a stop watch at any time to see how much time has elapsed to date would likely be better than those using a mutable stopwatch object.</p>\n\n<p>If your purpose is to capture data about how much time is being spent doing various things, I would suggest that you might be best served by a class which builds a list of timing-related events.  Such a class may provide a method to generate and add a new timing-related event, which would record a snapshot of its created time and provide a method to indicate its completion.  The outer class would also provide a method to retrieve a list of all timing events registered to date.</p>\n\n<p>If the code which creates a new timing event supplies a parameter indicating its purpose, code at the end which examines the list could ascertain whether all events that were initiated have been properly completed, and identify any that had not; it could also identify if any events were contained entirely within others or overlapped others but were not contained within them.  Because each event would have its own independent status, failure to close one event need not interfere with any subsequent events or cause any loss or corruption of timing data related to them (as might occur if e.g. a stopwatch had been accidentally left running when it should have been stopped).</p>\n\n<p>While it's certainly possible to have a mutable stopwatch class which uses <code>start</code> and <code>stop</code> methods, if the intention is that each \"stop\" action be associated with a particular \"start\" action, having the \"start\" action return an object which must be \"stopped\" will not only ensure such association, but it will allow sensible behavior to be achieved even if an action is started and abandoned.</p>\n", "title": "Java Design Issue: Enforce method call sequence", "tags": ["java", "oop", "design-patterns"], "link": "http://stackoverflow.com/questions/30888581/java-design-issue-enforce-method-call-sequence/30897601#30897601", "question_id": 30888581, "answer_id": 30897601}, {"body": "<p>As Per Interview question ,It seems to like this</p>\n\n<pre><code>Class StopWatch {\n\n    long startTime;\n    long stopTime;\n    public StopWatch() {\n    start();\n    }\n\n    void start() {// set startTime}\n    void stop() { // set stopTime}\n    long getTime() {\nstop();\n// return difference\n\n}\n\n}\n</code></pre>\n\n<p>So now All user need to create object of StopWatch class at beginning and getTime() need to call at End</p>\n\n<p>For e.g</p>\n\n<pre><code>StopWatch stopWatch=new StopWatch();\n//do Some stuff\n stopWatch.getTime()\n</code></pre>\n", "title": "Java Design Issue: Enforce method call sequence", "tags": ["java", "oop", "design-patterns"], "link": "http://stackoverflow.com/questions/30888581/java-design-issue-enforce-method-call-sequence/31015854#31015854", "question_id": 30888581, "answer_id": 31015854}, {"body": "<p>I know this already has been answered but couldn't find an answer invoking builder with <strong>interfaces</strong> for the control flow so here is my solution :\n(Name the interfaces in a better way than me :p)</p>\n\n<pre><code>public interface StartingStopWatch {\n    StoppingStopWatch start();\n}\n\npublic interface StoppingStopWatch {\n    ResultStopWatch stop();\n}\n\npublic interface ResultStopWatch {\n    long getTime();\n}\n\npublic class StopWatch implements StartingStopWatch, StoppingStopWatch, ResultStopWatch {\n\n    long startTime;\n    long stopTime;\n\n    private StopWatch() {\n        //No instanciation this way\n    }\n\n    public static StoppingStopWatch createAndStart() {\n        return new StopWatch().start();\n    }\n\n    public static StartingStopWatch create() {\n        return new StopWatch();\n    }\n\n    @Override\n    public StoppingStopWatch start() {\n        startTime = System.currentTimeMillis();\n        return this;\n    }\n\n    @Override\n    public ResultStopWatch stop() {\n        stopTime = System.currentTimeMillis();\n        return this;\n    }\n\n    @Override\n    public long getTime() {\n        return stopTime - startTime;\n    }\n\n}\n</code></pre>\n\n<p>Usage :</p>\n\n<pre><code>StoppingStopWatch sw = StopWatch.createAndStart();\n//Do stuff\nlong time = sw.stop().getTime();\n</code></pre>\n", "title": "Java Design Issue: Enforce method call sequence", "tags": ["java", "oop", "design-patterns"], "link": "http://stackoverflow.com/questions/30888581/java-design-issue-enforce-method-call-sequence/31053867#31053867", "question_id": 30888581, "answer_id": 31053867}, {"body": "<p>I'm going to suggest that enforcing the method call sequence is solving the wrong problem; the real problem is a unfriendly interface where the user must be aware of the state of the stopwatch. The solution is to remove any requirement to know the state of the StopWatch.</p>\n\n<pre><code>public class StopWatch {\n\n    private Logger log = Logger.getLogger(StopWatch.class);\n\n    private boolean firstMark = true;\n    private long lastMarkTime;\n    private long thisMarkTime;\n    private String lastMarkMsg;\n    private String thisMarkMsg;\n\n    public TimingResult mark(String msg) {\n        lastMarkTime = thisMarkTime;\n        thisMarkTime = System.currentTimeMillis();\n\n        lastMarkMsg = thisMarkMsg;\n        thisMarkMsg = msg;\n\n        String timingMsg;\n        long elapsed;\n        if (firstMark) {\n            elapsed = 0;\n            timingMsg = \"First mark: [\" + thisMarkMsg + \"] at time \" + thisMarkTime;\n        } else {\n            elapsed = thisMarkTime - lastMarkTime;\n            timingMsg = \"Mark: [\" + thisMarkMsg + \"] \" + elapsed + \"ms since mark [\" + lastMarkMsg + \"]\";\n        }\n\n        TimingResult result = new TimingResult(timingMsg, elapsed);\n        log.debug(result.msg);\n        firstMark = false;\n        return result;\n    }\n\n}\n</code></pre>\n\n<p>This allows a simple use of the <code>mark</code> method with a result returned and logging included.</p>\n\n<pre><code>StopWatch stopWatch = new StopWatch();\n\nTimingResult r;\nr = stopWatch.mark(\"before loop 1\");\nSystem.out.println(r);\n\nfor (int i=0; i&lt;100; i++) {\n    slowThing();\n}\n\nr = stopWatch.mark(\"after loop 1\");\nSystem.out.println(r);\n\nfor (int i=0; i&lt;100; i++) {\n    reallySlowThing();\n}\n\nr = stopWatch.mark(\"after loop 2\");\nSystem.out.println(r);\n</code></pre>\n\n<p>This gives the nice result of;</p>\n\n<blockquote>\n  <p>First mark: [before loop 1] at time 1436537674704<br>\n  Mark: [after loop 1] 1037ms since mark [before loop 1]<br>\n  Mark: [after loop 2] 2008ms since mark [after loop 1]</p>\n</blockquote>\n", "title": "Java Design Issue: Enforce method call sequence", "tags": ["java", "oop", "design-patterns"], "link": "http://stackoverflow.com/questions/30888581/java-design-issue-enforce-method-call-sequence/31343130#31343130", "question_id": 30888581, "answer_id": 31343130}], "creation_date": 1434535959, "score": 55, "link": "http://stackoverflow.com/questions/30888581/java-design-issue-enforce-method-call-sequence", "question_id": 30888581}, {"body": "<p>Are enum names interned in Java?</p>\n\n<p>I.e. is it guaranteed that <code>enum1.name() == enum2.name()</code> in case of the same name? And is it safe to compare <code>enum.name()</code> to a String that is guaranteed to be interned.</p>\n", "tags": ["java", "enums"], "title": "Are enum names interned in Java?", "answers": [{"body": "<p>The Oracle documentation about Enum says (first line):</p>\n\n<blockquote>\n  <p>An enum type is a special data type that enables for a variable to be a set of predefined constants. <em>The variable must be equal to one of the values that have been predefined</em> for it. Common examples include compass directions (values of NORTH, SOUTH, EAST, and WEST) and the days of the week.</p>\n</blockquote>\n\n<p>If this is true then, yes, your <code>enum1.name() == enum2.name()</code> is guaranteed to be true if the names are the same.</p>\n\n<p>Also, in the method <code>name()</code> javadoc:</p>\n\n<blockquote>\n  <p>public final String name() \n   \n  Returns the name of this enum constant, exactly as declared in its enum declaration. Most programmers should use the toString() method in preference to this one, as the toString method may return a more user-friendly name. This method is designed primarily for use in specialized situations where correctness depends on getting the exact name, which <em>will not vary</em> from release to release.\n   \n   \n     Returns: the name of this enum constant</p>\n</blockquote>\n\n<p>For example, if you had two enums, <code>Days</code> and <code>MyDays</code>, where SUNDAY is a common value, == between the enum object values, SUNDAY will return true as you are comparing two strings - see the working example in <a href=\"http://ideone.com/U1Bmcw\" rel=\"nofollow\">http://ideone.com/U1Bmcw</a>.</p>\n\n<pre><code>/* Name of the class has to be \"Main\" only if the class is public. */\nclass Ideone\n{\n    public static enum Day{SUNDAY, MONDAY, TUESDAY};\n    public static enum MyDays{SUNDAY};\n\n    public static void main (String[] args) throws java.lang.Exception\n    {\n        MyDays m = Ideone.MyDays.SUNDAY;\n        Day d = Ideone.Day.SUNDAY;\n\n        System.out.println(d.name() == m.name());\n    }\n}\n</code></pre>\n", "title": "Are enum names interned in Java?", "tags": ["java", "enums"], "link": "http://stackoverflow.com/questions/27908213/are-enum-names-interned-in-java/27908294#27908294", "question_id": 27908213, "answer_id": 27908294}, {"body": "<p>With strings you're going to want to use the equals method of Strings. That aside, you already have the enum that you could compare with the equality operator. Under what scenario would this arise?</p>\n\n<p>That being said, yes, the .equals method will return true if they are the same.</p>\n\n<p>I'm not sure about equality operator, and without looking it up, I can tell you that it's poor programming to use it if it is.</p>\n", "title": "Are enum names interned in Java?", "tags": ["java", "enums"], "link": "http://stackoverflow.com/questions/27908213/are-enum-names-interned-in-java/27908302#27908302", "question_id": 27908213, "answer_id": 27908302}, {"body": "<p>Although there is no explicit guarantee of this, the end result is bound to be such that the comparison always succeeds for <code>enum</code> constants with identical names:</p>\n\n<pre><code>enum A {enum1};\nenum B {enum1};\nSystem.out.println(A.enum1.name() == B.enum1.name()); // Prints \"true\"\n</code></pre>\n\n<p>The reason for this is that Java compiler constructs subclasses of <code>Enum</code> in such a way that they end up calling <code>Enum</code>'s sole protected constructor, passing it the name of <code>enum</code> value:</p>\n\n<pre><code>protected Enum(String name, int ordinal);\n</code></pre>\n\n<p>The name is embedded into the generated code in the form of a string literal. According to <code>String</code> documentation,</p>\n\n<blockquote>\n  <p>All literal strings and string-valued constant expressions are interned.</p>\n</blockquote>\n\n<p>This amounts to an implicit guarantee of your expression succeeding when names of <code>enum</code> constants are identical. However, I would not rely on this behavior, and use <code>equals(...)</code> instead, because anyone reading my code would be scratching his head, thinking that I made a mistake. </p>\n", "title": "Are enum names interned in Java?", "tags": ["java", "enums"], "link": "http://stackoverflow.com/questions/27908213/are-enum-names-interned-in-java/27908402#27908402", "question_id": 27908213, "answer_id": 27908402}, {"body": "<h2>No.</h2>\n\n<p><a href=\"http://stackoverflow.com/a/27908402/1273080\">Dasblinkenlight's answer</a> is the best answer we have so far. There he says:</p>\n\n<blockquote>\n  <p>The reason for this is that Java compiler constructs subclasses of\n  <code>Enum</code> in such a way that they end up calling <code>Enum's</code> sole protected\n  constructor, passing it the name of <code>enum</code> value</p>\n</blockquote>\n\n<p>and there they get interned, because they're string constants.</p>\n\n<p>But, in <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.9.2\" rel=\"nofollow\">the JLS, 8.9.2, Enum Body Declarations</a>, there's this:</p>\n\n<blockquote>\n  <p>In practice, a compiler is likely to mirror the <code>Enum</code> type by\n  declaring <code>String</code> and <code>int</code> parameters in the default constructor of\n  an <code>enum</code> type. However, these parameters are not specified as\n  \"implicitly declared\" because <strong>different compilers do not need to\n  agree on the form of the default constructor</strong>. Only the compiler of\n  an <code>enum</code> type knows how to instantiate the <code>enum</code> constants; other\n  compilers can simply rely on the implicitly declared <code>public static</code>\n  fields of the <code>enum</code> type\n  (<a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.9.3\" rel=\"nofollow\">\u00a78.9.3</a>)\n  without regard for how those fields were initialized.</p>\n</blockquote>\n\n<p><sup>(emphasis mine)</sup></p>\n\n<p>So we'll call the constructor, but we aren't forced to do it in any particular way, and we can manage our own constructor in the compiler.</p>\n\n<p>Therefore, it's completely possible for me to write a correct and JLS-compliant Java compiler that would not intern the names somehow, probably by not having the names stored as a literals. Yes, it would do it on purpose to maliciously break your code, but it would be correct behaviour per spec.</p>\n\n<hr>\n\n<h2>Practically said, Yes.</h2>\n\n<p>Every sane implementation will intern the strings. I'd say it's safe to <em>assume</em> this kind of behaviour. It's not guaranteed, though, and therefore if I saw this in real code, I'd be very unsatisfied with it even if it was thoroughly described in a comment.</p>\n\n<p>Please, don't rely on such unspecified and implementation-specific behaviour. If you really, really have to, write a unit test for it. And put an <code>assert</code> in the code, and lots of explaining. Measure whether your approach will actually do anything.</p>\n\n<p><s>Consider looping over the <code>enum</code> members' names and <code>intern()</code> them manually before using them. That way, it will be immediatelly clear what you're doing.</s> This doesn't work reliably. See comments.</p>\n", "title": "Are enum names interned in Java?", "tags": ["java", "enums"], "link": "http://stackoverflow.com/questions/27908213/are-enum-names-interned-in-java/27914059#27914059", "question_id": 27908213, "answer_id": 27914059}], "creation_date": 1421086276, "score": 54, "link": "http://stackoverflow.com/questions/27908213/are-enum-names-interned-in-java", "question_id": 27908213}, {"body": "<p>The following does not compile, giving an 'illegal forward reference' message:</p>\n\n<pre><code>class StaticInitialisation {\n\n    static\n    {\n        System.out.println(\"Test string is: \" + testString);\n    }\n\n    private static String testString;\n\n    public static void main(String args[]) {\n        new StaticInitialisation();\n    }\n}\n</code></pre>\n\n<p>However, the following does compile:</p>\n\n<pre><code>class InstanceInitialisation1 {\n\n    {\n        System.out.println(\"Test string is: \" + this.testString);\n    }\n\n    private String testString;\n\n    public static void main(String args[]) {\n        new InstanceInitialisation1();\n    }\n}\n</code></pre>\n\n<p>But the following does not compile, giving an 'illegal forward reference' message:</p>\n\n<pre><code>class InstanceInitialisation2 {\n\n        private String testString1;\n\n    {\n        testString1 = testString2;\n    }\n\n    private String testString2;\n\n    public static void main(String args[]) {\n        new InstanceInitialisation2();\n    }\n}\n</code></pre>\n\n<p>Why do StaticInitialisation and InstanceInitialisation2 not compile, while InstanceInitialisation1 does?</p>\n", "tags": ["java", "static", "instance", "forward"], "title": "Why do two programs have forward referencing errors while the third does not?", "answers": [{"body": "<p>This is covered by section <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.3.3\">8.3.3</a> of the JLS:</p>\n\n<blockquote>\n  <p>Use of class variables whose declarations appear textually after the use is sometimes restricted, even though these class variables are in scope (\u00a76.3). Specifically, it is a compile-time error if all of the following are true:</p>\n  \n  <ul>\n  <li><p>The declaration of a class variable in a class or interface C appears textually after a use of the class variable;</p></li>\n  <li><p>The use is a simple name in either a class variable initializer of C or a static initializer of C;</p></li>\n  <li><p>The use is not on the left hand side of an assignment;</p></li>\n  <li><p>C is the innermost class or interface enclosing the use.</p></li>\n  </ul>\n  \n  <p>Use of instance variables whose declarations appear textually after the use is sometimes restricted, even though these instance variables are in scope. Specifically, it is a compile-time error if all of the following are true:</p>\n  \n  <ul>\n  <li><p>The declaration of an instance variable in a class or interface C appears textually after a use of the instance variable;</p></li>\n  <li><p>The use is a simple name in either an instance variable initializer of C or an instance initializer of C;</p></li>\n  <li><p>The use is not on the left hand side of an assignment;</p></li>\n  <li><p>C is the innermost class or interface enclosing the use.</p></li>\n  </ul>\n</blockquote>\n\n<p>In your second case, the use <em>isn't</em> a simple name - you've got <code>this</code> explicitly. That means it doesn't comply with the second bullet in the second list quoted above, so there's no error.</p>\n\n<p>If you change it to:</p>\n\n<pre><code>System.out.println(\"Test string is: \" + testString);\n</code></pre>\n\n<p>... then it won't compile.</p>\n\n<p>Or in the opposite direction, you can change the code in the static initializer block to:</p>\n\n<pre><code>System.out.println(\"Test string is: \" + StaticInitialisation.testString);\n</code></pre>\n\n<p>Odd, but that's the way it goes.</p>\n", "title": "Why do two programs have forward referencing errors while the third does not?", "tags": ["java", "static", "instance", "forward"], "link": "http://stackoverflow.com/questions/30838302/why-do-two-programs-have-forward-referencing-errors-while-the-third-does-not/30838462#30838462", "question_id": 30838302, "answer_id": 30838462}, {"body": "<p>Here what we have to understand is that in 2nd code snippet You are using <strong>block and this keyword</strong>.</p>\n\n<ol>\n<li>The block executes if object is created.</li>\n<li>That means the object is created in heap area.</li>\n<li>You are externally using <strong>this keyword</strong> to get a value of instance variable.</li>\n<li>Here object created with default values that will return as value.</li>\n<li>With out using this keyword you can't compile 2nd snippet also.</li>\n</ol>\n", "title": "Why do two programs have forward referencing errors while the third does not?", "tags": ["java", "static", "instance", "forward"], "link": "http://stackoverflow.com/questions/30838302/why-do-two-programs-have-forward-referencing-errors-while-the-third-does-not/30838516#30838516", "question_id": 30838302, "answer_id": 30838516}, {"body": "<p>Lets look at these two example, I guess this will make you clear.</p>\n\n<pre><code>public class InstanceAndSataticInit {\n\n    {\n        System.out.println(\"Test string is (instance init): \" + this.testString);\n    }\n\n    static{\n        System.out.println(\"Test string is (static init ): \" + InstanceAndSataticInit.testStringStatic);\n    }\n\n    public  static String testStringStatic=\"test\";\n    public  String testString=\"test\";\n\n    public static void main(String args[]) {\n        new InstanceAndSataticInit();\n    }\n\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>Test string is (static init ): null\nTest string is (instance init): null\n</code></pre>\n\n<p>And </p>\n\n<pre><code>public class InstanceAndSataticInitVariableFirst {\n\n    public  static String testStringStatic=\"test\";\n    public  String testString=\"test\";\n\n    {\n        System.out.println(\"Test string is (instance init): \" + this.testString);\n    }\n\n    static{\n        System.out.println(\"Test string is (static init ): \" + InstanceAndSataticInitVariableFirst.testStringStatic);\n    }\n\n\n\n    public static void main(String args[]) {\n        new InstanceAndSataticInitVariableFirst();\n    }\n\n\n}\n</code></pre>\n\n<p>output :</p>\n\n<pre><code>Test string is (static init ): test\nTest string is (instance init): test\n</code></pre>\n\n<p>So you can say the sequence  are like this.</p>\n\n<ol>\n<li><p>Static variable will be created but not be initialized.</p></li>\n<li><p>Static initialization will  be executed according to the given sequence.</p></li>\n<li>Non Static variable will be created but not be initialized.</li>\n<li>Non Static initialization will  be executed according to the given sequence.</li>\n</ol>\n\n<p>By sequence I mean appearance in the code.</p>\n\n<p>I guess this steps answer your <strong>two not working</strong> example  <strong><code>StaticInitialisation</code></strong> and <strong><code>InstanceInitialisation2</code></strong></p>\n\n<p>But in case your <strong>second working example</strong> <strong><code>InstanceInitialisation1</code></strong> by using <code>this</code> key word you are actually helping compiler to overlook the textual hierarchy.  Same thing  happen in case of <code>static</code> when I call <code>InstanceAndSataticInit.testStringStatic</code> in my first example <strong>InstanceAndSataticInit</strong></p>\n", "title": "Why do two programs have forward referencing errors while the third does not?", "tags": ["java", "static", "instance", "forward"], "link": "http://stackoverflow.com/questions/30838302/why-do-two-programs-have-forward-referencing-errors-while-the-third-does-not/30838694#30838694", "question_id": 30838302, "answer_id": 30838694}, {"body": "<p>Simple reason - it's too expensive or impossible to analyze and forbid all forward references. e.g.</p>\n\n<pre><code>{\n    print( getX();  );    // this.x\n    print( that().x );    // this.x\n}\n\nint x;\nint getX(){ return x; }\n\nThis that(){ return this; }\n</code></pre>\n\n<p>The spec settles on forbidding some simple cases indicative of common programmer mistakes.</p>\n\n<p>See also <a href=\"http://stackoverflow.com/questions/15820302/recursive-initializer-works-when-i-add-this/15821695#15821695\">Recursive initializer works when I add &quot;this&quot;?</a></p>\n", "title": "Why do two programs have forward referencing errors while the third does not?", "tags": ["java", "static", "instance", "forward"], "link": "http://stackoverflow.com/questions/30838302/why-do-two-programs-have-forward-referencing-errors-while-the-third-does-not/30844950#30844950", "question_id": 30838302, "answer_id": 30844950}], "creation_date": 1434348169, "score": 53, "link": "http://stackoverflow.com/questions/30838302/why-do-two-programs-have-forward-referencing-errors-while-the-third-does-not", "question_id": 30838302}, {"body": "<p>I'm looking at a piece of Java code right now, and it takes a path as a String and gets its URL using <code>URL resource = ClassLoader.getSystemClassLoader().getResource(pathAsString);</code>, then calls <code>String path = resource.getPath()</code> and finally executes <code>new File(path);</code>. </p>\n\n<p>Oh, and there are also calls to <code>URL url = resource.toURI();</code> and <code>String file = resource.getFile()</code>.</p>\n\n<p>I'm totally confused right now - mostly because of the terminology, I guess. Can someone please walk me through the differences, or provide a few links to Dummy-proof material? Especially URI to URL and <em>Resource to File</em>? To me, it feels like they should be the same thing, respectively...</p>\n\n<p>The difference between <strong><code>getFile()</code></strong> and <strong><code>getPath()</code></strong> is explained here: <a href=\"http://stackoverflow.com/a/11928221/2018047\">What's the difference between url.getFile() and getpath()?</a> (Interestingly they both seem to return Strings, which probably adds a whole lot to my state of mind...)</p>\n\n<p>Now, if I have a locator that references a class or package in a jar file, will those two (i.e. path an file strings) differ?</p>\n\n<p><code>resource.toString()</code> would give you <code>jar:file:/C:/path/to/my.jar!/com/example/</code>, after all (note the exclamation mark).</p>\n\n<p>Is the difference between <strong>URI</strong> and <strong>URL</strong> <em>in Java</em> that the former doesn't encode spaces? Cf. <a href=\"http://stackoverflow.com/a/6818370/2018047\">Files, URIs, and URLs conflicting in Java</a> (This answer explains the <em>general, conceptual</em> difference between the two terms fairly well: <a href=\"http://stackoverflow.com/questions/176264/whats-the-difference-between-a-uri-and-a-url/1984225#1984225\">URIs identify and URLs locate;</a>)</p>\n\n<p>Lastly - and most importantly - <strong>why do I need <code>File</code> object; why isn't a Resource (<code>URL</code>) enough?</strong> (And is there a Resource object?)</p>\n\n<p>Sorry if this question is a bit unorganized; it just reflects the confusion I have... :)</p>\n", "tags": ["java", "url", "terminology"], "title": "What&#39;s the difference between a Resource, URI, URL, Path and File in Java?", "answers": [{"body": "<p>Please note that I do not consider myself 100% competent to answer, but nevertheless here are some comments:</p>\n\n<ul>\n<li><code>File</code> represents a file or directory accessible via file system</li>\n<li><em>resource</em> is a <a href=\"http://en.wikipedia.org/wiki/Resource_%28Java%29\">generic term</a> for a  data object which can be loaded by the application\n<ul>\n<li>usually <em>resources</em> are files distributed with the application / library and loaded via class-loading mechanism (when they reside on class-path)</li>\n</ul></li>\n<li><code>URL#getPath</code> is getter on the path part of URL (<code>protocol://host/path?query</code>)</li>\n<li><code>URL#getFile</code> as per JavaDoc returns <code>path+query</code></li>\n</ul>\n\n<p>In Java, <code>URI</code> is just a data structure for manipulating the generic identifier itself.</p>\n\n<p><code>URL</code> on the other hand is really a resource locator and offers you features to actually read the resource via registered <code>URLStreamHandler</code>s. </p>\n\n<p>URLs can lead to file-system resources and you can construct URL for every file system resource by using <code>file://</code> protocol (hence <code>File</code> &lt;-> <code>URL</code> relation). </p>\n\n<p>Also be aware that that <code>URL#getFile</code> is unrelated to <code>java.io.File</code>.</p>\n\n<hr>\n\n<blockquote>\n  <p>Why do I need File object; why isn't a Resource (URL) enough?</p>\n</blockquote>\n\n<p>It is enough. Only if you want to pass the resource to some component which can work only with files, you need to get <code>File</code> from it. However not all resource URLs can be converted to <code>File</code>s.</p>\n\n<blockquote>\n  <p>And is there a Resource object?</p>\n</blockquote>\n\n<p>From the JRE point of view, it's just a term. Some frameworks provide you with such class (e.g. <a href=\"http://docs.spring.io/spring/docs/current/spring-framework-reference/html/resources.html\">Spring's Resource</a>).</p>\n", "title": "What&#39;s the difference between a Resource, URI, URL, Path and File in Java?", "tags": ["java", "url", "terminology"], "link": "http://stackoverflow.com/questions/27845223/whats-the-difference-between-a-resource-uri-url-path-and-file-in-java/27845506#27845506", "question_id": 27845223, "answer_id": 27845506}, {"body": "<p>As I understand them, you could categorize them as following:</p>\n\n<p>Web-Based: URIs and URLs.</p>\n\n<ul>\n<li>URLs: An URL is a definite location on the internt (just a normal webaddress like - stackoverflow.com)</li>\n<li>URIs: Ever URL is an URI. But URIs can also contain things like \"mailto:\", so they are also, well some what of a \"script\" I'd say.</li>\n</ul>\n\n<p>And local: Resource, Path and Files</p>\n\n<ul>\n<li>Resource: Resources are files inside your jar. They are used to load files out of jars / containers.</li>\n<li>Path: A path is basically a string. But it comes with some handy functions to concatenate multiple strings, or add files to a string. It makes sure the path you are building is valid.</li>\n<li>File: This is a reference to a directory or file. It's used to modify files, open them etc.</li>\n</ul>\n\n<p>It would be easier if they would be merged into one class - they are really confusing :D</p>\n\n<p>I hope this helps you :)</p>\n\n<p>(I just took a look at the documentation - look at docs.oracle.com)</p>\n", "title": "What&#39;s the difference between a Resource, URI, URL, Path and File in Java?", "tags": ["java", "url", "terminology"], "link": "http://stackoverflow.com/questions/27845223/whats-the-difference-between-a-resource-uri-url-path-and-file-in-java/27845585#27845585", "question_id": 27845223, "answer_id": 27845585}, {"body": "<p>A File is an abstract representation of an entity in the local filesystem. </p>\n\n<p>A path is generally a string indicating the location of a file within a file system. It usually doesn't include the filename. So c:\\documents\\mystuff\\stuff.txt would have a path with the value of of \"C:\\documents\\mystuff\" Obviously the format of absolute filenames and paths would vary enormously from filesystem to filesystem. </p>\n\n<p>URL is a susbset of URI with URL usually representing resources accessible over http. I don't think there is any sort of ironclad rule about when something has to be a URI vs a URL. URIs are strings in the form of \"protocol://resource-identifier\" such as bitcoin://params, <a href=\"http://something.com?param=value\" rel=\"nofollow\">http://something.com?param=value</a>. Classes like URL generally wrap the string and provide utility methods that String would have no reason to supply.</p>\n\n<p>No such thing as Resource, at least not in the sense you're talking about. Just because a method is named getResource doesn't mean it returns an object of type Resource.</p>\n\n<p>Ultimately the best way to figure out what a Class's methods do is to create an instance of it in your code, call the methods and then either step through in debug mode or send the results to System.out. </p>\n", "title": "What&#39;s the difference between a Resource, URI, URL, Path and File in Java?", "tags": ["java", "url", "terminology"], "link": "http://stackoverflow.com/questions/27845223/whats-the-difference-between-a-resource-uri-url-path-and-file-in-java/27845721#27845721", "question_id": 27845223, "answer_id": 27845721}, {"body": "<p><a href=\"http://stackoverflow.com/a/27845506\">Pavel Horal's answer</a> is nice. </p>\n\n<p>As he says, the word \"file\" has totally different (practically unrelated) meanings in <code>URL#getFile</code> vs  <code>java.io.File</code> - may be that's part of the confusion.</p>\n\n<p>Just to add:</p>\n\n<ul>\n<li><p>A  <strong>resource</strong> in Java is an abstract concept, a source of data that can be read. The location (or address) of a resource is represented in Java by a <strong><code>URL</code></strong> object.</p></li>\n<li><p>A  <strong>resource</strong> can correspond to a regular file in the local filesystem (specifically, when its <code>URL</code> begins with <code>file://</code>).  But a resource is more general (it can be also some file stored in a jar, or some data to be read from the network, or from memory, or...). And it's also more limited, because a <code>File</code> (besides being other things than a regular file: a directory, a link) can also be created and writen to.</p></li>\n<li><p>Remember in Java a <strong><code>File</code></strong> object does not really represents \"a file\" but the location (the full name, with path) of a file. So, a <code>File</code> object allows you to locate (and open) a file, as a <code>URL</code>allows you to access (and open) a resource.  (There is no <code>Resource</code> class in Java to represent a resource, but neither there is one to represent a file! once more : <code>File</code> is not a file, it's the path of a file). </p></li>\n</ul>\n", "title": "What&#39;s the difference between a Resource, URI, URL, Path and File in Java?", "tags": ["java", "url", "terminology"], "link": "http://stackoverflow.com/questions/27845223/whats-the-difference-between-a-resource-uri-url-path-and-file-in-java/27846417#27846417", "question_id": 27845223, "answer_id": 27846417}], "creation_date": 1420735391, "score": 53, "link": "http://stackoverflow.com/questions/27845223/whats-the-difference-between-a-resource-uri-url-path-and-file-in-java", "question_id": 27845223}, {"body": "<p>My application below communicates as a client on a JBoss 7.2.0 system to a receiver JNDI/JMS on a JBoss 4.2.1 system.  It creates a Send Queue and a Receive Queue.  We have been running just fine for 2 months straight with this configuration; no changes were made to either side.  The local client app has the 4.2.1 jbossall-client.jar and jnp-client.jars installed.</p>\n\n<p>After normal activity, we start receiving a <code>org.jboss.mq.SpyJMSException: Exiting on IOE; - nested throwable: (java.io.EOFException) at org.jboss.mq.SpyJMSException.getAsJMSException(SpyJMSException.java:72)</code> exception.</p>\n\n<p>We restarted JBoss 7.2.0 without changing anything, and when we are establishing the receive queue, we are now receiving a <code>org.jboss.mq.SpyJMSException: Cannot subscribe to this Destination: ; {...} Caused by: java.io.EOFException</code> exception thrown from our code at <code>QueueReceiver receiver = session.createReceiver(queue);</code>.  We also start throwing this same exception after the app has been running fine for days, but without connectivity over a multi-day period of time.</p>\n\n<p>We had the 4.2.1 system restarted to see if that was the problem, but that fixed nothing.  <strong>In fact, we can replicate this failure scenario by having both systems connect as normal, then recycle the 4.2.1 system.</strong>  The errors start throwing once the 4.2.1 system is down, and the 7.2.0 system continues to fail to re-establish the connections once the 4.2.1 system is fully established (even when it SHOULD be capable of doing so).</p>\n\n<p>Stopping then starting the app in JBoss does not fix this.  Restarting JBoss has a 20% chance of fixing this (100% chance in the case of the forced failure scenario cited above).  Undeploying, then redeploying the application usually fixes this.</p>\n\n<p><strong>What might be causing this?</strong></p>\n\n<p>This same war file works fine on our test system, which has an identical JBoss set-up.  Communication with the target JBoss system via a test app from the command prompt using the same code works fine.</p>\n\n<p>I suspect there is an issue with JBoss 7.2.0 itself, or is this possibly a timeout issue?  How do I check or extend the timeout length; is that something doable from the client side?  Even if it was timeout, I make the call to the <code>stop()</code> method before the rest of <code>start()</code> re-connects, and I still get the exception; in that scenario, it wouldn't be a timeout issue as a timeout would have reset.</p>\n\n<p><strong>Context Values:</strong></p>\n\n<pre><code>connectionFactoryName=ConnectionFactory\ncontextFactoryName=org.jnp.interfaces.NamingContextFactory\npackagePrefixes=org.jboss.naming:org.jnp.interfaces\nproviderUrl=MYSERVER:1099\n</code></pre>\n\n<p><strong>Java Code:</strong></p>\n\n<pre><code>private ContextContainer contextContainer = null;\nprivate QueueConnection connection = null;\nprivate QueueReceiver receiver = null;\nprivate Queue sendQueue = null;\nprivate Queue receiveQueue = null;\nprivate String sendQueueName = null;\nprivate String receiveQueueName = null;\nprivate MessageHandler messageHandler = null;\n\nprotected synchronized void start() throws Exception {\n\n    // NOTE: This position also has delay code (for pending multiple \n    // consecutive recycling requests), with an external method to \n    // reset the delay. It was removed for code clarity and has no \n    // effect on the issue being discussed.\n\n    // Clear prior Connection\n    stop();\n\n    logger.info(\"Regenerating JMS for : \" + this.getClass().getName());\n\n    Context context = this.contextContainer.getContext();\n\n    logger.info(\"Looking up factory : \" + contextContainer.getConnectionFactoryName());\n\n    QueueConnectionFactory connectionFactory = (QueueConnectionFactory)context.lookup(contextContainer.getConnectionFactoryName()); \n\n    // ESTABLISH SEND MESSAGE QUEUE\n    logger.info(\"Looking up send queue : \" + sendQueueName);\n\n    sendQueue = (Queue)context.lookup(sendQueueName); \n\n    logger.info(\"Send Queue string : \" + sendQueue);\n    logger.info(\"Send Queue name   : \" + sendQueue.getQueueName());\n    logger.info(\"Creating Queue Connection\");\n\n    connection = connectionFactory.createQueueConnection();\n\n    logger.info(\"Setting Exception Listener\");\n\n    connection.setExceptionListener(new ExceptionListener() {\n\n        public void onException(JMSException ex) {\n\n            logger.error(\"JMS Exception received on QueueConnection\", ex);\n\n            start();\n        }\n    });\n\n    // ESTABLISH RECEIVE MESSAGE QUEUE\n    logger.info(\"Looking up receive queue : \" + receiveQueueName);\n\n    receiveQueue = (Queue)context.lookup(receiveQueueName); \n\n    logger.info(\"Receive Queue string : \" + receiveQueue);\n    logger.info(\"Receive Queue name   : \" + receiveQueue.getQueueName());\n    logger.info(\"Creating JMS Session for Receiving\");\n\n    QueueSession session = connection.createQueueSession(false, Session.CLIENT_ACKNOWLEDGE);\n\n    logger.info(\"Created Session \" + session);      \n    logger.info(\"Creating JMS Receiver for Queue \\\"\" + receiveQueue.getQueueName() + \"\\\"\");\n\n    // THIS IS THE LINE WHERE THE EXCEPTION IS THROWN!!!\n    receiver = session.createReceiver(receiveQueue);\n\n    logger.info(\"Setting Message Listener\");\n\n    receiver.setMessageListener(new MessageListener() {\n\n        public void onMessage(Message message) {\n\n            try {\n\n                if (message instanceof ObjectMessage) {\n\n                    Object obj = ((ObjectMessage) message).getObject();\n\n                    //  UNRELATED METHOD FOR HANDLING THE MESSAGE\n                    handleMessage(obj);\n\n                } else {\n\n                    throw new Exception(\"Received message of unexpected type \" + message.getJMSType() + \", was expecting ObjectMessage\");\n                }\n\n            } catch (Exception ex) {\n\n                logger.error(\"Error processing incoming message.\", ex);\n\n            } finally {\n\n                try {\n\n                    message.acknowledge();\n                    logger.info(\"Acknowledged message.\");\n\n                } catch (Exception ex) {\n\n                    logger.error(\"Unable to acknowledge message.\", ex);\n                }\n            }\n        }\n    });\n\n    logger.info(\"Starting Queue Connection\");\n\n    connection.start();\n\n    logger.info(\"Started Queue Connection\");\n}   \n\n/**\n * Extinguish the existing connection.\n */\npublic synchronized void stop() {\n\n    if (receiver != null) {\n\n        try {\n\n            logger.info(\"Nullifying Receiver Listener\");\n            receiver.setMessageListener(null);\n            logger.info(\"Nullified Receiver Listener\");\n\n        } catch(Exception ex) {\n\n            logger.warn(\"Exception nullifying Receiver Listener\", ex);\n        }\n\n        try {\n\n            logger.info(\"Closing Receiver\");\n            receiver.close();\n            logger.info(\"Closed Receiver\");\n\n        } catch(Exception ex) {\n\n            logger.warn(\"Exception closing Receiver\", ex);\n\n        } finally {\n\n            receiver = null;\n        }           \n    }\n\n    if (connection != null) {\n\n        try {\n\n            logger.info(\"Nullifying Exception Listener\");\n            connection.setExceptionListener(null);\n            logger.info(\"Nullified Exception Listener\");\n\n        } catch (Exception ex) {\n\n            logger.warn(\"Exception nullifying Exception Listener\", ex);\n        }\n\n        try {\n\n            logger.info(\"Stopping Queue Connection\");\n            connection.stop();\n            logger.info(\"Stopped Queue Connection\");\n\n        } catch (Exception ex) {\n\n            logger.warn(\"Exception stopping Queue Connection\", ex);\n        }\n\n        try {\n\n            logger.info(\"Closing Queue Connection\");\n            connection.close();\n            logger.info(\"Closed Queue Connection\");\n\n        } catch (Exception ex) {\n\n            logger.warn(\"Exception closing Queue Connection\", ex);\n\n        } finally {\n\n            connection = null;\n        }\n    }\n}\n</code></pre>\n\n<p><strong>Log Output:</strong></p>\n\n<pre><code>Setting Context Factory Class: org.jnp.interfaces.NamingContextFactory\nSetting Package Prefixes: org.jboss.naming:org.jnp.interfaces\nSetting Provider URL: MYSERVER:1099\nGenerating JMS for : MYPACKAGE.ConnectionHandler\nLooking up factory : ConnectionFactory\nLooking up send queue : queue/sendQueue\nSend Queue string : QUEUE.sendQueue\nSend Queue name   : sendQueue\nCreating Queue Connection\nSetting Exception Listener\nLooking up receive queue : queue/receiveQueue\nReceive Queue string : QUEUE.receiveQueue\nReceive Queue name   : receiveQueue\nCreating JMS Session for Receiving\nCreated Session SpySession@1903462020[tx=false ack=CLIENT txid=null RUNNING connection=Connection@1963631553[token=ConnectionToken:ID:273725/9966a9625bb094d33a37f72db71b3bb9 rcvstate=STOPPED]]\nCreating JMS Receiver for Queue \"receiveQueue\"\nException caught during initialization.\norg.jboss.mq.SpyJMSException: Cannot subscribe to this Destination: ; - nested throwable: (java.io.EOFException)\n</code></pre>\n\n<p><strong>Exception trace after normal activity:</strong></p>\n\n<pre><code>JMS Exception received on QueueConnection\norg.jboss.mq.SpyJMSException: Exiting on IOE; - nested throwable: (java.io.EOFException)\nat org.jboss.mq.SpyJMSException.getAsJMSException(SpyJMSException.java:72)\nat org.jboss.mq.Connection.asynchFailure(Connection.java:423)\nat org.jboss.mq.il.uil2.UILClientILService.asynchFailure(UILClientILService.java:174)\nat org.jboss.mq.il.uil2.SocketManager$ReadTask.handleStop(SocketManager.java:439)\nat org.jboss.mq.il.uil2.SocketManager$ReadTask.run(SocketManager.java:371)\nat java.lang.Thread.run(Thread.java:744)\nCaused by: java.io.EOFException\nat java.io.ObjectInputStream$BlockDataInputStream.readByte(ObjectInputStream.java:2766)\nat java.io.ObjectInputStream.readByte(ObjectInputStream.java:916)\nat org.jboss.mq.il.uil2.SocketManager$ReadTask.run(SocketManager.java:316)\n... 1 more\n</code></pre>\n\n<p><strong>Exception trace after restart:</strong></p>\n\n<pre><code>org.jboss.mq.SpyJMSException: Cannot subscribe to this Destination: ; - nested throwable: (java.io.EOFException)\n    at org.jboss.mq.SpyJMSException.getAsJMSException(SpyJMSException.java:72)\n    at org.jboss.mq.SpyJMSException.rethrowAsJMSException(SpyJMSException.java:57)\n    at org.jboss.mq.Connection.addConsumer(Connection.java:800)\n    at org.jboss.mq.SpySession.addConsumer(SpySession.java:947)\n    at org.jboss.mq.SpySession.createReceiver(SpySession.java:658)\n    at org.jboss.mq.SpyQueueSession.createReceiver(SpyQueueSession.java)\n    at org.jboss.mq.SpySession.createReceiver(SpySession.java:647)\n    at org.jboss.mq.SpyQueueSession.createReceiver(SpyQueueSession.java)\n    at MYPACKAGE.ConnectionHandler.start(ConnectionHandler.java:144)\n    at MYPACKAGE.ConnectionHandler.initialize(ConnectionHandler.java:60)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)\n    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)\n    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)\n    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)\n    at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:255)\n    at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:199)\n    at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:45)\n    at org.apache.catalina.core.StandardContext.contextListenerStart(StandardContext.java:3339)\n    at org.apache.catalina.core.StandardContext.start(StandardContext.java:3777)\n    at org.jboss.as.web.deployment.WebDeploymentService.doStart(WebDeploymentService.java:156)\n    at org.jboss.as.web.deployment.WebDeploymentService.access$000(WebDeploymentService.java:60)\n    at org.jboss.as.web.deployment.WebDeploymentService$1.run(WebDeploymentService.java:93)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:744)\n    at org.jboss.threads.JBossThread.run(JBossThread.java:122)\nCaused by: java.io.EOFException\n    at java.io.ObjectInputStream$BlockDataInputStream.readByte(ObjectInputStream.java:2766)\n    at java.io.ObjectInputStream.readByte(ObjectInputStream.java:916)\n    at org.jboss.mq.il.uil2.SocketManager$ReadTask.run(SocketManager.java:316)\n    at java.lang.Thread.run(Thread.java:744)\n</code></pre>\n", "tags": ["java", "exception", "jboss", "jms"], "title": "Why are SpyJMSExceptions still thrown after recycling the client JBoss connection to remote queues?", "answers": [{"body": "<p>As noted in the question, the JBoss 4.2.1 server has been upgraded to 7.1.1 Final.  Upgrading has resolved the issue and the client now works as expected, but unfortunately this solution does not explain the problem.</p>\n", "title": "Why are SpyJMSExceptions still thrown after recycling the client JBoss connection to remote queues?", "tags": ["java", "exception", "jboss", "jms"], "link": "http://stackoverflow.com/questions/27870398/why-are-spyjmsexceptions-still-thrown-after-recycling-the-client-jboss-connectio/34294010#34294010", "question_id": 27870398, "answer_id": 34294010}], "creation_date": 1420843049, "score": 53, "link": "http://stackoverflow.com/questions/27870398/why-are-spyjmsexceptions-still-thrown-after-recycling-the-client-jboss-connectio", "question_id": 27870398}, {"body": "<p>Why does this print 1? </p>\n\n<pre><code>import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\n\nclass Main\n{\n    public static void main (String[] args) throws java.lang.Exception\n    {\n        // your code goes here\n        System.out.println((byte)+(short)-(int)+(long)-1);\n    }\n}\n</code></pre>\n\n<p>Can we mix casting and <code>+,-</code> unary operators? I know that we can do casting multiple times, but why doesn't putting <code>+ ,-</code> unary operators in between produce an error?</p>\n", "tags": ["java"], "title": "Why mixing + and cast does not produce an error in &quot;+(int)+(long)-1&quot;?", "answers": [{"body": "<p>You are not adding nor substracting. Those + and - operators are unary sign operators.</p>\n\n<p>See <a href=\"http://docs.oracle.com/javase/tutorial/java/nutsandbolts/op1.html\">documentation</a> at <strong>The Unary Operators</strong> section.</p>\n\n<p>The sequence in stake: </p>\n\n<pre><code>(byte)+(short)-(int)+(long)-1\n</code></pre>\n\n<p>is evaluated from right to left like this:  </p>\n\n<blockquote>\n  <p>the initial value is -1<br>\n  casting to long (which is still -1)<br>\n  unary + sign (still -1)<br>\n  casting to int (still -1)<br>\n  unary - sign (now the value is 1)<br>\n  so on (the value remains 1 until the end)</p>\n</blockquote>\n", "title": "Why mixing + and cast does not produce an error in &quot;+(int)+(long)-1&quot;?", "tags": ["java"], "link": "http://stackoverflow.com/questions/28582735/why-mixing-and-cast-does-not-produce-an-error-in-intlong-1/28582777#28582777", "question_id": 28582735, "answer_id": 28582777}, {"body": "<p>These <code>+</code> and <code>-</code> are unary ones.</p>\n\n<p>More specifically, it is in fact:</p>\n\n<pre><code>System.out.println((byte) (+((short) (-((int) (+((long) -1)))))));\n</code></pre>\n", "title": "Why mixing + and cast does not produce an error in &quot;+(int)+(long)-1&quot;?", "tags": ["java"], "link": "http://stackoverflow.com/questions/28582735/why-mixing-and-cast-does-not-produce-an-error-in-intlong-1/28582809#28582809", "question_id": 28582735, "answer_id": 28582809}, {"body": "<p>if you remove all casting from your example, because in this case it will do nothing</p>\n\n<blockquote>\n  <p><code>System.out.println((byte)+(short)-(int)+(long)-1);</code></p>\n</blockquote>\n\n<p>will become</p>\n\n<blockquote>\n  <p><code>System.out.println(      +       -     +      -1);</code></p>\n</blockquote>\n\n<p>now you can see that just the operators are still there and because <strong>minus and minus are plus</strong> your result will be 1</p>\n\n<p>basically you can think of it like:</p>\n\n<pre><code>var mylong  = +(long)-1;      &lt;- -1\nvar myint   = -(int)mylong;   &lt;-  1\nvar myshort = +(short)myint;  &lt;-  1\nvar mybyte  =  (byte)myshort; &lt;-  1\n</code></pre>\n", "title": "Why mixing + and cast does not produce an error in &quot;+(int)+(long)-1&quot;?", "tags": ["java"], "link": "http://stackoverflow.com/questions/28582735/why-mixing-and-cast-does-not-produce-an-error-in-intlong-1/28585380#28585380", "question_id": 28582735, "answer_id": 28585380}, {"body": "<blockquote>\n  <p>I know we can do casting multiple times. But putting + ,- unary operators in between doesn't give error?</p>\n</blockquote>\n\n<p>It is simply a consequence of the consistency of Java's grammar. When you write</p>\n\n<pre><code>+ 1\n</code></pre>\n\n<p>what you actually wrote is a <em>unary numeric expression</em> which decomposes into two parts: </p>\n\n<ol>\n<li>the unary plus operator: <code>+</code></li>\n<li>a <em>numeric expression</em>, in this case the <code>int</code> literal <code>1</code>.</li>\n</ol>\n\n<p>Another example of a numeric expression is a <em>cast expression</em> (also unary):</p>\n\n<pre><code>(int) 1\n</code></pre>\n\n<p>Therefore you can substitute this for the original <code>1</code> above:</p>\n\n<pre><code>+ (int) 1\n</code></pre>\n\n<p>Repeating the same consistent process we can end up with a nested unary expression of arbitrary complexity. To return to your key question:</p>\n\n<blockquote>\n  <p>why?</p>\n</blockquote>\n\n<p>Because Java would actually need a specific rule <em>against</em> such expressions. </p>\n", "title": "Why mixing + and cast does not produce an error in &quot;+(int)+(long)-1&quot;?", "tags": ["java"], "link": "http://stackoverflow.com/questions/28582735/why-mixing-and-cast-does-not-produce-an-error-in-intlong-1/28594221#28594221", "question_id": 28582735, "answer_id": 28594221}], "creation_date": 1424259552, "score": 52, "link": "http://stackoverflow.com/questions/28582735/why-mixing-and-cast-does-not-produce-an-error-in-intlong-1", "question_id": 28582735}, {"body": "<p>Why doesn't infinity comparison follow the logic applied to NaNs? This code prints out <code>false</code> three times:</p>\n\n<pre><code>double a = Double.NaN;\ndouble b = Double.NaN;\nSystem.out.println(a == b); // false\nSystem.out.println(a &lt; b); //  false\nSystem.out.println(a &gt; b); //  false\n</code></pre>\n\n<p>However, if I change <code>Double.NaN</code> to <code>Double.POSITIVE_INFINITY</code>, I get <code>true</code> for equality, but <code>false</code> for the greater-than and less-than comparisons:</p>\n\n<pre><code>double a = Double.POSITIVE_INFINITY;\ndouble b = Double.POSITIVE_INFINITY;\nSystem.out.println(a == b); // true\nSystem.out.println(a &lt; b); //  false\nSystem.out.println(a &gt; b); //  false\n</code></pre>\n\n<p>This seems dangerous. Assuming that infinite values result from overflows, I imagine it's more likely that two variables that ended up as infinities wouldn't actually be equal in perfect arithmetic.</p>\n", "tags": ["java", "floating-point", "comparison", "nan", "infinity"], "title": "Why are floating point infinities, unlike NaNs, equal?", "answers": [{"body": "<p>This is because NaN is not a number and is therefore not equal to any number including NaN.</p>\n", "title": "Why are floating point infinities, unlike NaNs, equal?", "tags": ["java", "floating-point", "comparison", "nan", "infinity"], "link": "http://stackoverflow.com/questions/28584669/why-are-floating-point-infinities-unlike-nans-equal/28584767#28584767", "question_id": 28584669, "answer_id": 28584767}, {"body": "<p>Your reasoning is that <code>Double.POSITIVE_INFINITY</code> should not be equal to itself because it is \u201clikely\u201d to have been obtained as the result of a loss of accuracy.</p>\n\n<p>This line of reasoning applies to all of floating-point. Any finite value can be obtained as the result of an inaccurate operation. That did not push the IEEE 754 standardization committee to define <code>==</code> as always evaluating to false for finite values, so why should infinities be different? </p>\n\n<p>As defined, <code>==</code> is useful for people who understand what it does (that is, <strong>test the floating-point values that have been obtained</strong>, and certainly not the values that should have been obtained with real computations). For anyone who understands that, and you need to understand it to use floating-point even for computations that do not involve infinity, having <code>Double.POSITIVE_INFINITY == Double.POSITIVE_INFINITY</code> evaluate to true is convenient, if only to test if the floating-point result of a floating-point computation is <code>Double.POSITIVE_INFINITY</code>.</p>\n\n<p>That leaves the question of why NaN can afford to have special behavior, and infinities should follow the same general principles as finite values. NaN is different from infinities: the underlying principle of the IEEE 754 standard is that values are exactly what they are, but the result of an operation can be approximated with respect to the real result, and in this case, the resulting floating-point value is obtained according to the rounding mode. </p>\n\n<p>Forget for an instant that <code>1.0 / 0.0</code> is defined as +inf, which is an annoyance in this discussion. Think for the moment of <code>Double.POSITIVE_INFINITY</code> only as the result of operations such as <code>1.0e100 / 1.0e-300</code> or <code>Double.MAX_VALUE + Double.MAX_VALUE</code>. For these operations, +inf is the closest approximation of the real result, just like for operations that produce a finite result. By contrast, NaN is the result you obtain when the operation doesn't make sense. It is defensible to have NaN behave specially, but inf is just an approximation of all the values too large to represent.</p>\n\n<p>In reality, <code>1.0 / 0.0</code> also produces +inf, but <strong>that</strong> should be considered an exception. It would have been just as coherent to define the result of that operation as NaN, but defining it as +inf was more convenient in the implementation of some algorithms. An example is provided page 10 in <a href=\"http://www.eecs.berkeley.edu/~wkahan/ieee754status/IEEE754.PDF\">Kahan's notes</a>. More details than most will wish for are in the <a href=\"http://people.freebsd.org/~das/kahan86branch.pdf\">article \u201cBranch Cuts for Complex Elementary Functions, or Much Ado About Nothing's Sign Bit\u201d</a>. I would also interpret the existence in IEEE 754 of a \u201cdivision by zero\u201d flag separate from the NaN flag as recognition that the user may want to treat division by zero specially although it is not defined as producing NaN.</p>\n", "title": "Why are floating point infinities, unlike NaNs, equal?", "tags": ["java", "floating-point", "comparison", "nan", "infinity"], "link": "http://stackoverflow.com/questions/28584669/why-are-floating-point-infinities-unlike-nans-equal/28584932#28584932", "question_id": 28584669, "answer_id": 28584932}, {"body": "<p>Because thats the standard.  Infinity represents a number greater than or less than Double.MAX_VALUE/-Double.MAX_VALUE. </p>\n\n<p>NaN represents the outcome of an operation that didn't make sense.  That is, the operation didn't possibly come out with a number.</p>\n\n<p>I would guess the logic is once a number gets big enough (infinity) and because of the limitation of floating point numbers, adding numbers to it won't change the outcome, so its 'like' infinity.</p>\n\n<p>So if you want to compare to really big numbers, at some point you might just say those two big numbers are close enough for all intents and purposes.  But if you want to compare two things that both aren't numbers, you can't compare them so its false.  At least you couldn't compare them as a primitive.</p>\n", "title": "Why are floating point infinities, unlike NaNs, equal?", "tags": ["java", "floating-point", "comparison", "nan", "infinity"], "link": "http://stackoverflow.com/questions/28584669/why-are-floating-point-infinities-unlike-nans-equal/28584954#28584954", "question_id": 28584669, "answer_id": 28584954}, {"body": "<p>Another perspective that justifies \"infinite\" values being equal is to avoid <a href=\"http://en.wikipedia.org/wiki/Cardinality#Infinite_sets\" rel=\"nofollow\">cardinality</a> concept altogether. Essentially if you cannot speculate on \"just how infinite a value is compared to another, given that both are infinite\" it's simpler to assume that <code>Inf = Inf</code>. </p>\n\n<p><strong>Edit:</strong> as clarification on my comment regarding cardinality I'll give two examples regarding comparison (or equality) of infinite quantities. </p>\n\n<p>Consider the set of positive integers <code>S1 = {1,2,3, ...}</code> , which is infinite. Also consider the set of even integers <code>S2 = {2,4,6, ...}</code>, which are also infinite. While there are clearly twice as many elements in S1 as in S2, they have \"equally many\" elements since you can easily have a one-to-one function between the sets, i.e. <code>1 -&gt; 2</code>, <code>2-&gt; 4</code>, ... They have thus the same cardinality.</p>\n\n<p>Consider instead the set of real numbers <code>R</code>, and the set of integers <code>I</code>. Again both are infinite sets. However for each integer <code>i</code> there are infinitely many real numbers between <code>(i, i+1)</code>. Thus no one-to-one function can map the elements of these two sets, and thus their cardinality is different. </p>\n\n<p><strong>Bottomline:</strong> <em>equality of infinite quantities is complicated, easier to avoid it in imperative languages</em> :)</p>\n", "title": "Why are floating point infinities, unlike NaNs, equal?", "tags": ["java", "floating-point", "comparison", "nan", "infinity"], "link": "http://stackoverflow.com/questions/28584669/why-are-floating-point-infinities-unlike-nans-equal/28585198#28585198", "question_id": 28584669, "answer_id": 28585198}, {"body": "<p>Why are infinities equal? Because it works.</p>\n\n<p>Floating-point arithmetic is designed to produce (relatively) fast computations that preserve errors. The idea being that you don't check for overflows or other nonsense during a lengthy calculation; you wait until it's finished. That's why NaNs propagate the way they do: once you've gotten a NaN, there are very few things you can do that will make it go away. Once the computation is finished you can look for NaNs to check whether something went wrong.</p>\n\n<p>Same for infinities: if there's a possibility of overflow, don't do things that will throw away infinities.</p>\n\n<p>If you want to go slow and safe, IEEE-754 has mechanisms for installing trap handlers to provide callbacks into your code when the result of a calculation would be a NaN or an infinity. Mostly that's not used; it's usually too slow, and pointless once the code has been properly debugged (not that that's easy: people get PhD's in how to do this stuff well).</p>\n", "title": "Why are floating point infinities, unlike NaNs, equal?", "tags": ["java", "floating-point", "comparison", "nan", "infinity"], "link": "http://stackoverflow.com/questions/28584669/why-are-floating-point-infinities-unlike-nans-equal/28588073#28588073", "question_id": 28584669, "answer_id": 28588073}, {"body": "<p>The <em>correct</em> answer is a simple \"because <a href=\"http://dx.doi.org/10.1109/IEEESTD.2008.4610935\" rel=\"nofollow\">the standard</a> (and <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.2.3\" rel=\"nofollow\">the docs</a>) say so\". But I'm not gonna be cynical because it's obvious that's not what you are after.</p>\n\n<hr>\n\n<p>In addition to the other answers here, I'll try to relate the infinities to saturating arithmetic.</p>\n\n<p>Other answers have already stated that the reason the comparisons on NaNs result in <code>true</code>, so I'm not gonna beat a dead horse.</p>\n\n<p>Let's say I have a saturating integer that represents grayscale colors. Why am I using saturating arithmetic? Because anything <em>brighter</em> than white is still white, and anything <em>darker</em> than black is still black (except <a href=\"http://en.wikipedia.org/wiki/Orange_Is_the_New_Black\" rel=\"nofollow\">orange</a>). That means <code>BLACK - x == BLACK</code> and <code>WHITE + x == WHITE</code>. Makes sense?</p>\n\n<p>Now, let's say we want to represent those grayscale colors with a (signed) <a href=\"http://en.wikipedia.org/wiki/Ones&#39;_complement\" rel=\"nofollow\">1s complement</a> 8-bit integer where <code>BLACK == -127</code> and <code>WHITE == 127</code>. Why 1s complement? Because it gives us a <a href=\"http://en.wikipedia.org/wiki/Signed_zero#Representations\" rel=\"nofollow\">signed zero</a> like <a href=\"http://en.wikipedia.org/wiki/IEEE_floating_point\" rel=\"nofollow\">IEEE 754 floating point</a>. And, because we are using saturating arithmetic, <code>-127 - x == -127</code> and <code>127 + x == 127</code>.</p>\n\n<p>How does this relate to floating point infinities? Replace the integer with floating point, <code>BLACK</code> with <code>NEGATIVE_INFINITY</code>, and <code>WHITE</code> with <code>POSITIVE_INFINITY</code> and what do you get? <code>NEGATIVE_INFINITY - x == NEGATIVE_INFINITY</code> and <code>POSITIVE_INFINITY + x == POSITIVE_INFINITY</code>.</p>\n\n<p>Since you used <code>POSITIVE_INFINITY</code>, I'll use it also. First we need a class to represent our saturating integer-based color; let's call it <code>SaturatedColor</code> and assume it works like any other integer in Java. Now, let's take your code and replace <code>double</code> with our own <code>SaturatedColor</code> and <code>Double.POSITIVE_INFINITY</code> with <code>SaturatedColor.WHITE</code>:</p>\n\n<pre><code>SaturatedColor a = SaturatedColor.WHITE;\nSaturatedColor b = SaturatedColor.WHITE;\n</code></pre>\n\n<p>As we established above, <code>SaturatedColor.WHITE</code> (just <code>WHITE</code> above) is <code>127</code>, so let's do that here:</p>\n\n<pre><code>SaturatedColor a = 127;\nSaturatedColor b = 127;\n</code></pre>\n\n<p>Now we take the <code>System.out.println</code> statements you used and replace <code>a</code> and <code>b</code> with their value (values?):</p>\n\n<pre><code>System.out.println(127 == 127);\nSystem.out.println(127 &lt; 127);\nSystem.out.println(127 &gt; 127);\n</code></pre>\n\n<p>It should be obvious what this will print.</p>\n", "title": "Why are floating point infinities, unlike NaNs, equal?", "tags": ["java", "floating-point", "comparison", "nan", "infinity"], "link": "http://stackoverflow.com/questions/28584669/why-are-floating-point-infinities-unlike-nans-equal/28588854#28588854", "question_id": 28584669, "answer_id": 28588854}, {"body": "<p>Since Double.Nan.equals (Double.NaN) was mentioned: It's one thing what should happen when you perform arithmetic and compare numbers, it's a totally different thing when you consider how objects should behave. </p>\n\n<p>Two typical problem cases are: Sorting an array of numbers, and using hash values to implement dictionaries, sets, and so on. There are two exceptional cases where the normal ordering with &lt;, = and > doesn't apply: One case is that +0 = -0 and the other is that NaN \u2260 NaN, and x &lt; NaN, x > NaN, x = NaN will always be false whatever x is. </p>\n\n<p>Sorting algorithms can get into trouble with this. A sorting algorithm may assume that x = x is always true. So if I know that x is stored in an array and look for it, I might not do any bounds check because the search for it must find something. Not if x is NaN. A sorting algorithm may assume that exactly one of a &lt; b and a >= b must be true. Not if one is NaN. So a naive sorting algorithm may crash when NaNs are present. You'd have to decide where you want NaNs to end up when sorting the array, and then change your comparison code so that it works. </p>\n\n<p>Now dictionaries and sets and generally hashing: What if I use an NaN as the key? A set contains unique objects. If the set contains an NaN and I try to add another one, is it unique because it is not equal to the one that is already there? What about +0 and -0, should they be considered equal or different? There's the rule that any two items considered equal must have the same hash value. So the sensible thing is (probably) that a hash function returns one unique value for all NaNs, and one unique value for +0 and -0. And after the hash lookup when you need to find an element with the same hash value that is actually equal, two NaNs should be considered equal (but different from anything else). </p>\n\n<p>That's probably why Double.Nan.equal () behaves different from ==. </p>\n", "title": "Why are floating point infinities, unlike NaNs, equal?", "tags": ["java", "floating-point", "comparison", "nan", "infinity"], "link": "http://stackoverflow.com/questions/28584669/why-are-floating-point-infinities-unlike-nans-equal/28590286#28590286", "question_id": 28584669, "answer_id": 28590286}, {"body": "<p>To me, it seems that \"because it should behave the same as zero\" would make a good answer. Arithmetic overflow and underflow should be handlable similarly.</p>\n\n<p>If you underflow from the largest near-infinitesimally small value which can be stored in a float, you get zero, and zeros compare as identical.</p>\n\n<p>If you overflow from the largest near-infinitely large value which can be stored in a float, you get INF, and INFs compare as identical.</p>\n\n<p>This means that code which handles numbers which are out-of-scope in both directions will not require separate special-casing for one or the other. Instead, either both or neither will need to be treated differently.</p>\n\n<p>And the simplest requirement is covered by the \"neither\" case: you want to check if something over/underflowed, you can compare it to zero/INF using just the normal arithmetic comparison operators, without needing to know you current language's special syntax for the checking command: is it Math.isInfinite(), Float.checkForPositiveInfinity(), hasOverflowed()...?</p>\n", "title": "Why are floating point infinities, unlike NaNs, equal?", "tags": ["java", "floating-point", "comparison", "nan", "infinity"], "link": "http://stackoverflow.com/questions/28584669/why-are-floating-point-infinities-unlike-nans-equal/28596792#28596792", "question_id": 28584669, "answer_id": 28596792}], "creation_date": 1424265684, "score": 52, "link": "http://stackoverflow.com/questions/28584669/why-are-floating-point-infinities-unlike-nans-equal", "question_id": 28584669}, {"body": "<p>When I create a new project on android studio it is not giving any problem. However, looking at the <code>activity_main.xml</code> design it is shows me this: </p>\n\n<blockquote>\n  <p>Rendering Problems Exception raised during rendering: action_bar. </p>\n</blockquote>\n\n<p>when I change sdk level 22 to 21 from the design page android studio shows nothing</p>\n\n<p>How can I solve this problem? This is not important problem but I wondered how can I fix this.</p>\n", "tags": ["java", "android", "android-studio", "sdk", "rendering"], "title": "android studio sdk version 22 exception during rendering: action_bar", "answers": [{"body": "<p>I fixed it by changing <code>buildToolsVersion \"21.1.2\"</code>, on <code>build.gradle</code> <em>(Module: app)</em>,</p>\n\n<p>Do not use <code>buildToolsVersion \"22\"</code></p>\n", "title": "android studio sdk version 22 exception during rendering: action_bar", "tags": ["java", "android", "android-studio", "sdk", "rendering"], "link": "http://stackoverflow.com/questions/29034476/android-studio-sdk-version-22-exception-during-rendering-action-bar/29043743#29043743", "question_id": 29034476, "answer_id": 29043743}, {"body": "<p>Yeah just had to adjust the Android level in the drop down.  The design tab preview in API level 22 is broken right now.  I looked that the stack trace for the error and it has something to do with needing the alpha channel.  I'm sure Google will fix it Monday. :)\n <img src=\"http://i.stack.imgur.com/D7UFV.png\" alt=\"enter image description here\"></p>\n", "title": "android studio sdk version 22 exception during rendering: action_bar", "tags": ["java", "android", "android-studio", "sdk", "rendering"], "link": "http://stackoverflow.com/questions/29034476/android-studio-sdk-version-22-exception-during-rendering-action-bar/29056634#29056634", "question_id": 29034476, "answer_id": 29056634}, {"body": "<p>Please use build API21 to see the preview. I am on mac and build 22 is broken/not working for me. When i switched back to build 21, i could see the preview.!</p>\n", "title": "android studio sdk version 22 exception during rendering: action_bar", "tags": ["java", "android", "android-studio", "sdk", "rendering"], "link": "http://stackoverflow.com/questions/29034476/android-studio-sdk-version-22-exception-during-rendering-action-bar/29184306#29184306", "question_id": 29034476, "answer_id": 29184306}, {"body": "<p>Through days of frustration, I've finally found out the answer lies in the build.gradle of my app module! I've changed the <code>buildToolsVersion</code> from <code>22</code> to <code>21.1.2</code> to properly solve that exact exception like yours. It seems anything to do with <code>API 22: Android 5.1</code> is giving hiccups at the moment. Hopefully Google will fix it soon.</p>\n\n<p>Changing these lines in the build.gradle gave me a quick fix for this problem:</p>\n\n<pre><code>android {\n    compileSdkVersion 21\n    buildToolsVersion \"21.1.2\"\n}\n</code></pre>\n", "title": "android studio sdk version 22 exception during rendering: action_bar", "tags": ["java", "android", "android-studio", "sdk", "rendering"], "link": "http://stackoverflow.com/questions/29034476/android-studio-sdk-version-22-exception-during-rendering-action-bar/29391000#29391000", "question_id": 29034476, "answer_id": 29391000}, {"body": "<p>ActionBar is deprecated in favor of Toolbar, which was added in API 21. However, the base theme for Android Studio's templates still seems to use ActionBar-based themes.</p>\n\n<p>The solution is not to downgrade your build tools version, but rather to change your app's base theme. If you downgrade your build tools, you will miss out on support for the latest features added in Android 5.1 and later.</p>\n\n<p>Your base theme is listed in AndroidManifest.xml under application/android:theme.</p>\n\n<p>Go to res/values/styles.xml and change the parent attribute to a different base theme that doesn't rely on the deprecated ActionBar. In the unlikely case your app is API 21+, you can use Theme.Material. Otherwise, you'll need to use Theme.AppCompat.NoActionBar or define your own base theme.</p>\n\n<p>Here's a styles.xml example:</p>\n\n<pre><code>&lt;style name=\"AppTheme.Base\" parent=\"Theme.AppCompat\"&gt;\n    &lt;item name=\"colorPrimary\"&gt;@color/colorPrimary&lt;/item&gt;\n    &lt;item name=\"colorPrimaryDark\"&gt;@color/colorPrimaryDark&lt;/item&gt;\n    &lt;item name=\"android:windowNoTitle\"&gt;true&lt;/item&gt;\n    &lt;item name=\"windowActionBar\"&gt;false&lt;/item&gt;\n&lt;/style&gt;\n</code></pre>\n\n<p>If you use this, be sure to put a Toolbar element in your XML layouts where you want the ActionBar to appear. You'll need to customize the Toolbar with child XML tags. I recommend using the <code>&lt;include&gt;</code> tag. As it says in the Toolbar documentation, Google's new design principles call for a change in visual style:</p>\n\n<blockquote>\n  <p>In modern Android UIs developers should lean more on a visually distinct color scheme for toolbars than on their application icon. The use of application icon plus title as a standard layout is discouraged on API 21 devices and newer.</p>\n</blockquote>\n\n<p>android.support.v7.widget.Toolbar is in the support library for pre-API 21 devices.</p>\n\n<p>EDIT: As the first comment points out, Google has a blog explaining how to use the new Toolbar. <a href=\"http://android-developers.blogspot.kr/2014/10/appcompat-v21-material-design-for-pre.html\">http://android-developers.blogspot.kr/2014/10/appcompat-v21-material-design-for-pre.html</a></p>\n", "title": "android studio sdk version 22 exception during rendering: action_bar", "tags": ["java", "android", "android-studio", "sdk", "rendering"], "link": "http://stackoverflow.com/questions/29034476/android-studio-sdk-version-22-exception-during-rendering-action-bar/29398484#29398484", "question_id": 29034476, "answer_id": 29398484}, {"body": "<p>It turns out that you cannot use <code>buildToolsVersion \"22\"</code> or <code>targetSdkVersion 22</code> because it fails to render properly. It seems it can only render the app when set to API 21 or lower at the moment because I was getting the same error and as soon as I changed it back to 21 it started working again. Just go into build.gradle(module:app) and change the API back to the latest version of API 21. </p>\n", "title": "android studio sdk version 22 exception during rendering: action_bar", "tags": ["java", "android", "android-studio", "sdk", "rendering"], "link": "http://stackoverflow.com/questions/29034476/android-studio-sdk-version-22-exception-during-rendering-action-bar/29451352#29451352", "question_id": 29034476, "answer_id": 29451352}, {"body": "<p>Sorry about the issue guys. The reason for the issue is that the rendering library is now trying to use more of the actual code from the appcompat library, in order to be more accurate. However, this has exposed some bugs in the Android Studio when the project is not built.</p>\n\n<p>There is no need to update your gradle files or change the styles as some of the answers suggest.</p>\n\n<p>The workaround is to build the project once and then refresh the rendering by clearing the cache. See the attached image for the refresh icon which clears the cache.</p>\n\n<p><img src=\"http://i.stack.imgur.com/C21on.png\" alt=\"Refresh Button Location\"></p>\n", "title": "android studio sdk version 22 exception during rendering: action_bar", "tags": ["java", "android", "android-studio", "sdk", "rendering"], "link": "http://stackoverflow.com/questions/29034476/android-studio-sdk-version-22-exception-during-rendering-action-bar/29641405#29641405", "question_id": 29034476, "answer_id": 29641405}, {"body": "<p>I solved it by rebuilding the project or module.</p>\n", "title": "android studio sdk version 22 exception during rendering: action_bar", "tags": ["java", "android", "android-studio", "sdk", "rendering"], "link": "http://stackoverflow.com/questions/29034476/android-studio-sdk-version-22-exception-during-rendering-action-bar/29873380#29873380", "question_id": 29034476, "answer_id": 29873380}, {"body": "<p>The solve:</p>\n\n<p>Create a New folder\nvalues-v19</p>\n\n<p>Create a styles.xml in this folder </p>\n\n<pre><code>&lt;style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\"&gt;\n    &lt;!-- For actionBar n' statusbar --&gt;\n    &lt;item name=\"colorPrimary\"&gt;#COLOR/item&gt;\n    &lt;item name=\"colorPrimaryDark\"&gt;#COLOR&lt;/item&gt;\n\n    &lt;!-- For items --&gt;\n    &lt;item name=\"colorAccent\"&gt;#COLOR&lt;/item&gt;\n&lt;/style&gt;\n</code></pre>\n\n<p>and is all :) </p>\n", "title": "android studio sdk version 22 exception during rendering: action_bar", "tags": ["java", "android", "android-studio", "sdk", "rendering"], "link": "http://stackoverflow.com/questions/29034476/android-studio-sdk-version-22-exception-during-rendering-action-bar/30044801#30044801", "question_id": 29034476, "answer_id": 30044801}, {"body": "<p>This answer worked for me:</p>\n\n<pre><code>MyActivity extends AppCompatActivity\n</code></pre>\n\n<p>Instead of:</p>\n\n<pre><code>MyActivity extends ActionBarActivity   // now deprecated\n</code></pre>\n\n<p>Go back to your preview, clear cache and refresh!</p>\n", "title": "android studio sdk version 22 exception during rendering: action_bar", "tags": ["java", "android", "android-studio", "sdk", "rendering"], "link": "http://stackoverflow.com/questions/29034476/android-studio-sdk-version-22-exception-during-rendering-action-bar/30289036#30289036", "question_id": 29034476, "answer_id": 30289036}], "creation_date": 1426255995, "score": 51, "link": "http://stackoverflow.com/questions/29034476/android-studio-sdk-version-22-exception-during-rendering-action-bar", "question_id": 29034476}, {"body": "<p>I would like to use a generic type to ensure, that the arguments of a method are of the same type, like this:</p>\n\n<pre><code>public static &lt;T&gt; void x(T a, T b)\n</code></pre>\n\n<p>I would assume that the two arguments (a and b), that are passed to this method, would always have to be of the same type. But to my surprise I was able to pass arguments of any type (even primitives) to method x, as if T is erased to Object, no matter what arguments are passed.</p>\n\n<p>The only work-around I found so far, was to use 'extends' like this:</p>\n\n<pre><code>public static &lt;T, U extends T&gt; void x(T a, U b)\n</code></pre>\n\n<p>But although I can live with it, it is not what I wanted.</p>\n\n<p>Is there a way to use a generic type to force the type of all arguments of a method?</p>\n", "tags": ["java", "generics", "types"], "title": "Can the generic type of a generic Java method be used to enforce the type of arguments?", "answers": [{"body": "<p>You can explicitly specify the type parameter, when calling the method. For example:</p>\n\n<pre><code> &lt;String&gt;x(\"hello\", \"world\");\n</code></pre>\n\n<p>However, if you <strong>don't</strong> specify the type-parameter explicitly and rely only on the type inference feature of Java, then I don't think you can, not only in Generics, but in general.</p>\n\n<p>The method parameter's type is not a concrete type, but it's rather something that denotes a <strong><em>set of applicable types</em></strong> (even this <em>set</em> can comprise of just one type, in the case of <code>final</code> classes, for example).</p>\n\n<p>For example, this method:</p>\n\n<pre><code>public void x(Something a) { }\n</code></pre>\n\n<p>denotes a method, which parameter should be of a type from the <em>set of types</em>, which are compatible with <code>Something</code> (i.e. <code>Something</code> and all its subtypes).</p>\n\n<p>The same applies for Generics.</p>\n", "title": "Can the generic type of a generic Java method be used to enforce the type of arguments?", "tags": ["java", "generics", "types"], "link": "http://stackoverflow.com/questions/30217236/can-the-generic-type-of-a-generic-java-method-be-used-to-enforce-the-type-of-arg/30217406#30217406", "question_id": 30217236, "answer_id": 30217406}, {"body": "<p>This worked for me</p>\n\n<pre><code>public static &lt;T&gt; void x(T a, T b, Class&lt;T&gt; cls) {\n}\n</code></pre>\n\n<p>now this compiles</p>\n\n<pre><code>public static void main(String[] args) throws Exception {\n    x(1, 2, Integer.class);\n}\n</code></pre>\n\n<p>and this does not </p>\n\n<pre><code>public static void main(String[] args) throws Exception {\n    x(1, \"\", Integer.class);\n}\n</code></pre>\n", "title": "Can the generic type of a generic Java method be used to enforce the type of arguments?", "tags": ["java", "generics", "types"], "link": "http://stackoverflow.com/questions/30217236/can-the-generic-type-of-a-generic-java-method-be-used-to-enforce-the-type-of-arg/30217452#30217452", "question_id": 30217236, "answer_id": 30217452}, {"body": "<p>If I understand correctly, one way to do it is to <a href=\"https://docs.oracle.com/javase/tutorial/java/generics/methods.html\">explicitly specify the type of T</a> instead of letting the compiler infer its type to be of the most direct superclass in the case of two objects of different types being passed in as arguments. Take something like this, for example:</p>\n\n<pre><code>public class Test {\n    public static void main(String[] args) {\n        Test.x(5.0, 5);          // This works since type is inferred to be Number\n        Test.&lt;Integer&gt;x(5, 5);   // This works since type is stated to be Integer\n        Test.&lt;Integer&gt;x(5.0, 5); // This doesn't; type is stated to be Integer and Double is passed in\n    }\n\n    public static &lt;T&gt; void x(T a, T b) {\n    }\n}\n</code></pre>\n", "title": "Can the generic type of a generic Java method be used to enforce the type of arguments?", "tags": ["java", "generics", "types"], "link": "http://stackoverflow.com/questions/30217236/can-the-generic-type-of-a-generic-java-method-be-used-to-enforce-the-type-of-arg/30217485#30217485", "question_id": 30217236, "answer_id": 30217485}, {"body": "<p>Presumably, you are not calling your generic method in a generic fashion, so it's treated like a call to <code>x(Object a, Object b)</code>. In this example:</p>\n\n<pre><code>public class Test {\n\n  static &lt;T&gt; void x(T a, T b) {\n  }\n\n  public static void main(String[] args) {\n    x(1, 2); // compiles\n    Test.&lt;String&gt;x(1, 2); // does not compile\n    Test.&lt;String&gt;x(\"a\", \"b\"); // compiles\n  }\n}\n</code></pre>\n\n<p>The first call to x is not made generically so it compiles. The second call equates <code>T</code> to <code>String</code>, so it fails because <code>1</code> and <code>2</code> are not <code>Strings</code>. The third call compiles because it properly passes in <code>Strings</code>.</p>\n", "title": "Can the generic type of a generic Java method be used to enforce the type of arguments?", "tags": ["java", "generics", "types"], "link": "http://stackoverflow.com/questions/30217236/can-the-generic-type-of-a-generic-java-method-be-used-to-enforce-the-type-of-arg/30217518#30217518", "question_id": 30217236, "answer_id": 30217518}, {"body": "<p>Why this should be problem in the first place is kind of nebulous to me. I suspect you've instead misunderstood something about the ways in which the type system is useful.</p>\n\n<p>What can we do with a <code>&lt;T&gt;&nbsp;void&nbsp;x(T&nbsp;a,&nbsp;T&nbsp;b)</code>? Well, not a whole lot. Inside the body of <code>x</code>, <code>T</code> is the same as <code>Object</code>, so we could only do something like call <code>toString</code> on <code>a</code> and <code>b</code> to print them.</p>\n\n<p>There's really no practical <em>reason</em> <code>a</code> and <code>b</code> must have the same type. Just that they have some type in common, and that type is <code>Object</code> or a subtype of it. In fact, there's no clear reason why <code>&lt;T&gt;&nbsp;void&nbsp;x(T&nbsp;a,&nbsp;T&nbsp;b)</code> actually needs to be generic at all.</p>\n\n<ul>\n<li>The method body doesn't care what the actual types of <code>a</code> and <code>b</code> are because it couldn't use them anyway.</li>\n<li>The call site doesn't care what the actual types of <code>a</code> and <code>b</code> are because <code>x</code> is a <code>void</code> method so it's a black hole.</li>\n</ul>\n\n<p>It's more typical for a method to have a result, like <code>&lt;T&gt;&nbsp;List&lt;T&gt;&nbsp;Arrays.asList(T...)</code>:</p>\n\n<pre><code>// This will cause a compile error because\n// the type inferred must be compatible\n// with the return assignment.\nList&lt;Integer&gt; r = Arrays.asList(1, 1.0);\n</code></pre>\n\n<p>Or a bound:</p>\n\n<pre><code>// We don't care what the actual types of\n// a and b are, just that we can call bar()\n// on them.\n// Note: this method does not need to be generic.\n&lt;T extends Foo&gt; void x(T a, T b) {\n    a.bar();\n    a.bar();\n}\n</code></pre>\n\n<p>Or a bound which asserts some kind of relation:</p>\n\n<pre><code>// We don't care what the actual types of\n// a and b are, just that we can compare\n// them to each other.\n&lt;T extends Comparable&lt;T&gt;&gt; T max(T a, T b) {\n    return (a.compareTo(b) &lt; 0) ? b : a;\n}\n</code></pre>\n", "title": "Can the generic type of a generic Java method be used to enforce the type of arguments?", "tags": ["java", "generics", "types"], "link": "http://stackoverflow.com/questions/30217236/can-the-generic-type-of-a-generic-java-method-be-used-to-enforce-the-type-of-arg/30219144#30219144", "question_id": 30217236, "answer_id": 30219144}, {"body": "<p>If I understand your question correctly, you want this:</p>\n\n<pre><code>x(10, \"x\");\n</code></pre>\n\n<p>to fail at compile time.\nNow consider doing this:</p>\n\n<pre><code>Integer i = 10;\nString s = \"x\";\nObject o1 = i;\nObject o2 = s;\nx(o1, o2);\n</code></pre>\n\n<p>In this case they are both objects - the same type. I don't think there is any way to really enforce what you want - when you cast your argument to Object it is always possible to call it with two different types without any warnings/errors.</p>\n\n<p>You can specify the type you want to use by using it like this:</p>\n\n<pre><code>ClassName.&lt;Type&gt;x(obj1, obj2);\n</code></pre>\n\n<p>And it's proably the only way to do it.</p>\n", "title": "Can the generic type of a generic Java method be used to enforce the type of arguments?", "tags": ["java", "generics", "types"], "link": "http://stackoverflow.com/questions/30217236/can-the-generic-type-of-a-generic-java-method-be-used-to-enforce-the-type-of-arg/30228736#30228736", "question_id": 30217236, "answer_id": 30228736}], "creation_date": 1431525811, "score": 51, "link": "http://stackoverflow.com/questions/30217236/can-the-generic-type-of-a-generic-java-method-be-used-to-enforce-the-type-of-arg", "question_id": 30217236}, {"body": "<p>I've been beating my head against this one for awhile and thought that maybe some fresh eyes will see the issue; thanks for your time.</p>\n\n<pre><code>import java.util.*;\n\nclass Tbin&lt;T&gt; extends ArrayList&lt;T&gt; {}\nclass TbinList&lt;T&gt; extends ArrayList&lt;Tbin&lt;T&gt;&gt; {}\n\nclass Base {}\nclass Derived extends Base {}\n\npublic class Test {\n  public static void main(String[] args) {\n    ArrayList&lt;Tbin&lt;? extends Base&gt;&gt; test = new ArrayList&lt;&gt;();\n    test.add(new Tbin&lt;Derived&gt;());\n\n    TbinList&lt;? extends Base&gt; test2 = new TbinList&lt;&gt;();\n    test2.add(new Tbin&lt;Derived&gt;());\n  }\n}\n</code></pre>\n\n<p>Using Java 8. It looks to me like the direct creation of the container in <code>test</code> is equivalent to the container in <code>test2</code>, but the compiler says:</p>\n\n<pre><code>Test.java:15: error: no suitable method found for add(Tbin&lt;Derived&gt;)\n    test2.add(new Tbin&lt;Derived&gt;());\n         ^\n</code></pre>\n\n<p>How do I write <code>Tbin</code> and <code>TbinList</code> so the last line is acceptable?</p>\n\n<p>Note that I will actually be adding typed <code>Tbin</code>s which is why I specified <code>Tbin&lt;Derived&gt;</code> in the last line.</p>\n", "tags": ["java", "generics", "bounded-wildcard"], "title": "Java Generics Puzzler, extending a class and using wildcards", "answers": [{"body": "<p>You're using a bounded wildcard (<code>TbinList&lt;? extends Base&gt;&gt; ...</code>). This wildcard will prevent you from adding any elements to the list. If you want more info, heres the section about <a href=\"http://docs.oracle.com/javase/tutorial/extra/generics/wildcards.html\" rel=\"nofollow\">Wildcards</a> in the docs.</p>\n", "title": "Java Generics Puzzler, extending a class and using wildcards", "tags": ["java", "generics", "bounded-wildcard"], "link": "http://stackoverflow.com/questions/30384955/java-generics-puzzler-extending-a-class-and-using-wildcards/30385117#30385117", "question_id": 30384955, "answer_id": 30385117}, {"body": "<p>you cannot add any objects to <code>TbinList&lt;? extends Base&gt;</code> ,it is not guaranteed what objects you are inserting into the list.  It is supposed to read data from <code>test2</code> when you use wildcard <code>extends</code></p>\n\n<p>If you declared as <code>TbinList&lt;? extends Base&gt;</code> which means you it is any subclass of the class Base or class Base itself, and when you initialize it you use diamond other than concrete class name, it makes your <code>test2</code> not obvious which makes it harder to tell what objects can be inserted. My suggestion is that avoid such declaration it is dangerous, it may not have compile errors but it is horrible code, you might add something, but you also might add the WRONG thing which will break your code.</p>\n", "title": "Java Generics Puzzler, extending a class and using wildcards", "tags": ["java", "generics", "bounded-wildcard"], "link": "http://stackoverflow.com/questions/30384955/java-generics-puzzler-extending-a-class-and-using-wildcards/30385168#30385168", "question_id": 30384955, "answer_id": 30385168}, {"body": "<p>You can define the generic types as follows:</p>\n\n<pre><code>class Tbin&lt;T&gt; extends ArrayList&lt;T&gt; {}\nclass TbinList&lt;K, T extends Tbin&lt;K&gt;&gt; extends ArrayList&lt;T&gt; {}\n</code></pre>\n\n<p>Then you would create instance like:</p>\n\n<pre><code>TbinList&lt;? extends Base, Tbin&lt;? extends Base&gt;&gt; test2 = new TbinList&lt;&gt;();\ntest2.add(new Tbin&lt;Derived&gt;());\n</code></pre>\n", "title": "Java Generics Puzzler, extending a class and using wildcards", "tags": ["java", "generics", "bounded-wildcard"], "link": "http://stackoverflow.com/questions/30384955/java-generics-puzzler-extending-a-class-and-using-wildcards/30385244#30385244", "question_id": 30384955, "answer_id": 30385244}, {"body": "<p>Replacing the definition of <code>TbinList</code> with</p>\n\n<pre><code>class TbinList&lt;T&gt; extends ArrayList&lt;Tbin&lt;? extends T&gt;&gt; {}\n</code></pre>\n\n<p>and defining <code>test2</code> with</p>\n\n<pre><code>TbinList&lt;Base&gt; test2 = new TbinList&lt;&gt;();\n</code></pre>\n\n<p>instead would solve the issue.</p>\n\n<p>With your definition you're ending up with an <code>ArrayList&lt;Tbin&lt;T&gt;&gt;</code> where T is any fixed class extending <code>Base</code>.</p>\n", "title": "Java Generics Puzzler, extending a class and using wildcards", "tags": ["java", "generics", "bounded-wildcard"], "link": "http://stackoverflow.com/questions/30384955/java-generics-puzzler-extending-a-class-and-using-wildcards/30385298#30385298", "question_id": 30384955, "answer_id": 30385298}, {"body": "<p>OK, here's the answer:</p>\n\n<pre><code>import java.util.*;\n\nclass Tbin&lt;T&gt; extends ArrayList&lt;T&gt; {}\nclass TbinList&lt;T&gt; extends ArrayList&lt;Tbin&lt;? extends T&gt;&gt; {}\n\nclass Base {}\nclass Derived extends Base {}\n\npublic class Test {\n  public static void main(String[] args) {\n\n    TbinList&lt;Base&gt; test3 = new TbinList&lt;&gt;();\n    test3.add(new Tbin&lt;Derived&gt;());\n\n  }\n}\n</code></pre>\n\n<p>As I expected, kind of obvious once I saw it. But a lot of thrashing around to get here. Java generics seem simple if you only look at working code.</p>\n\n<p>Thanks, everyone, for being a sounding board.</p>\n", "title": "Java Generics Puzzler, extending a class and using wildcards", "tags": ["java", "generics", "bounded-wildcard"], "link": "http://stackoverflow.com/questions/30384955/java-generics-puzzler-extending-a-class-and-using-wildcards/30385327#30385327", "question_id": 30384955, "answer_id": 30385327}, {"body": "<p>This happens because of the way <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-5.html#jls-5.1.10\">capture conversion</a> works:</p>\n\n<blockquote>\n  <p>There exists a capture conversion from a parameterized type <code>G&lt;T<sub>1</sub>,...,T<sub>n</sub>&gt;</code> to a parameterized type <code>G&lt;S<sub>1</sub>,...,S<sub>n</sub>&gt;</code>, where, for <em>1 \u2264 i \u2264 n</em> :</p>\n  \n  <ul>\n  <li>If <code>T<sub>i</sub></code> is a wildcard type argument of the form <code>?&nbsp;extends&nbsp;B<sub>i</sub></code>, then <code>S<sub>i</sub></code> is a fresh type variable [...].</li>\n  </ul>\n  \n  <p>Capture conversion is not applied recursively.</p>\n</blockquote>\n\n<p>Note the end bit. So, what this means is that, given a type like this:</p>\n\n<pre><code>    Map&lt;?, List&lt;?&gt;&gt;\n//      \u2502  \u2502    \u2514 no capture (not applied recursively)\n//      \u2502  \u2514 T<sub>2</sub> is not a wildcard\n//      \u2514 T<sub>1</sub> is a wildcard\n</code></pre>\n\n<p>Only \"outside\" wildcards are captured. The <code>Map</code> key wildcard is captured, but the <code>List</code> element wildcard is not. This is why, for example, we can add to a <code>List&lt;List&lt;?&gt;&gt;</code>, but not a <code>List&lt;?&gt;</code>. The placement of the wildcard is what matters.</p>\n\n<p>Carrying this over to <code>TbinList</code>, if we have an <code>ArrayList&lt;Tbin&lt;?&gt;&gt;</code>, the wildcard is in a place where it does not get captured, but if we have a <code>TbinList&lt;?&gt;</code>, the wildcard is in a place where it gets captured.</p>\n\n<p>As I alluded to in the comments, one very interesting test is this:</p>\n\n<pre><code>ArrayList&lt;Tbin&lt;? extends Base&gt;&gt; test3 = new TbinList&lt;&gt;();\n</code></pre>\n\n<p>We get this error:</p>\n\n<pre><code>error: incompatible types: cannot infer type arguments for TbinList&lt;&gt;\n    ArrayList&lt;Tbin&lt;?&nbsp;extends&nbsp;Base&gt;&gt;&nbsp;test3&nbsp;=&nbsp;new&nbsp;TbinList&lt;&gt;();\n                                                        ^\n    reason: <strong>no instance(s) of type variable(s) T exist so that\n            TbinList&lt;T&gt;&nbsp;conforms&nbsp;to&nbsp;ArrayList&lt;Tbin&lt;?&nbsp;extends&nbsp;Base&gt;&gt;</strong></code></pre>\n\n<p>So there's no way to make it work as-is. One of the class declarations needs to be changed.</p>\n\n<hr>\n\n<p>Additionally, think about it this way.</p>\n\n<p>Suppose we had:</p>\n\n<pre><code>class Derived1 extends Base {}\nclass Derived2 extends Base {}\n</code></pre>\n\n<p>And since a wildcard allows subtyping, we can do this:</p>\n\n<pre><code>TbinList&lt;? extends Base&gt; test4 = new TbinList&lt;Derived1&gt;();\n</code></pre>\n\n<p>Should we be able to add a <code>Tbin&lt;Derived2&gt;</code> to <code>test4</code>? No, this would be heap pollution. We might end up with <code>Derived2</code>s floating around in a <code>TbinList&lt;Derived1&gt;</code>.</p>\n", "title": "Java Generics Puzzler, extending a class and using wildcards", "tags": ["java", "generics", "bounded-wildcard"], "link": "http://stackoverflow.com/questions/30384955/java-generics-puzzler-extending-a-class-and-using-wildcards/30385343#30385343", "question_id": 30384955, "answer_id": 30385343}], "creation_date": 1432244902, "score": 51, "link": "http://stackoverflow.com/questions/30384955/java-generics-puzzler-extending-a-class-and-using-wildcards", "question_id": 30384955}, {"body": "<p>Some time ago, <a href=\"http://blog.jooq.org/2014/02/28/java-8-friday-goodies-easy-as-pie-local-caching\">I've blogged about a Java 8 functional way of calculating fibonacci numbers recursively</a>, with a <code>ConcurrentHashMap</code> cache and the new, useful <code>computeIfAbsent()</code> method:</p>\n\n<pre><code>import java.util.Map;\nimport java.util.concurrent.ConcurrentHashMap;\n\npublic class Test {\n    static Map&lt;Integer, Integer&gt; cache = new ConcurrentHashMap&lt;&gt;();\n\n    public static void main(String[] args) {\n        System.out.println(\n            \"f(\" + 8 + \") = \" + fibonacci(8));\n    }\n\n    static int fibonacci(int i) {\n        if (i == 0)\n            return i;\n\n        if (i == 1)\n            return 1;\n\n        return cache.computeIfAbsent(i, (key) -&gt; {\n            System.out.println(\n                \"Slow calculation of \" + key);\n\n            return fibonacci(i - 2) + fibonacci(i - 1);\n        });\n    }\n}\n</code></pre>\n\n<p>I chose <code>ConcurrentHashMap</code> because I was thinking of making this example even more sophisticated by introducing parallelism (which I didn't in the end).</p>\n\n<p>Now, let's increase the number from <code>8</code> to <code>25</code> and observe what happens:</p>\n\n<pre><code>        System.out.println(\n            \"f(\" + 25 + \") = \" + fibonacci(25));\n</code></pre>\n\n<p>The program never halts. Inside the method, there's a loop that just runs forever:</p>\n\n<pre><code>for (Node&lt;K,V&gt;[] tab = table;;) {\n    // ...\n}\n</code></pre>\n\n<p>I'm using:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>C:\\Users\\Lukas&gt;java -version\njava version \"1.8.0_40-ea\"\nJava(TM) SE Runtime Environment (build 1.8.0_40-ea-b23)\nJava HotSpot(TM) 64-Bit Server VM (build 25.40-b25, mixed mode)\n</code></pre>\n\n<p><a href=\"http://blog.jooq.org/2014/02/28/java-8-friday-goodies-easy-as-pie-local-caching/#comment-121821\">Matthias, a reader of that blog post also confirmed the issue (he actually found it)</a>.</p>\n\n<p>This is weird. I would have expected any of the following two:</p>\n\n<ul>\n<li>It works</li>\n<li>It throws a <code>ConcurrentModificationException</code></li>\n</ul>\n\n<p>But just never halting? That seems dangerous. Is it a bug? Or did I misunderstand some contract?</p>\n", "tags": ["java", "recursion", "java-8", "concurrenthashmap"], "title": "Recursive ConcurrentHashMap.computeIfAbsent() call never terminates. Bug or &quot;feature&quot;?", "answers": [{"body": "<p>This is of course a <em>\"feature\"</em>. The <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentHashMap.html#computeIfAbsent-K-java.util.function.Function-\"><code>ConcurrentHashMap.computeIfAbsent()</code></a> Javadoc reads:</p>\n\n<blockquote>\n  <p>If the specified key is not already associated with a value, attempts to compute its value using the given mapping function and enters it into this map unless null. The entire method invocation is performed atomically, so the function is applied at most once per key. Some attempted update operations on this map by other threads may be blocked while computation is in progress, so the computation should be short and simple, and <strong><em>must not attempt to update any other mappings of this map</em></strong>.</p>\n</blockquote>\n\n<p>The <em>\"must not\"</em> wording is a clear contract, which my algorithm violated, although not for the same concurrency reasons.</p>\n\n<p>What's still interesting is that there is no <code>ConcurrentModificationException</code>. Instead, the program just never halts - which still is a rather dangerous bug in my opinion (i.e. <a href=\"http://blog.jooq.org/2015/01/16/infinite-loops-or-anything-that-can-possibly-go-wrong-does/\">infinite loops. or: anything that can possibly go wrong, does</a>).</p>\n\n<p>The simplest use-site solution for this concrete problem would be to not use a <code>ConcurrentHashMap</code>, but just a <code>HashMap</code> instead:</p>\n\n<pre><code>static Map&lt;Integer, Integer&gt; cache = new HashMap&lt;&gt;();\n</code></pre>\n\n<p>Now, everything works fine.</p>\n\n<h3>Note:</h3>\n\n<p>The <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html#computeIfAbsent-K-java.util.function.Function-\"><code>HashMap.computeIfAbsent()</code></a> or <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/Map.html#computeIfAbsent-K-java.util.function.Function-\"><code>Map.computeIfAbsent()</code></a> Javadoc don't forbid such recursive computation, which is of course ridiculous as the type of the cache is <code>Map&lt;Integer, Integer&gt;</code>, not <code>ConcurrentHashMap&lt;Integer, Integer&gt;</code>. It is very dangerous for subtypes to drastically re-define super type contracts (<code>Set</code> vs. <code>SortedSet</code> is greeting). <strong>It should thus be forbidden also in super types, to perform such recursion.</strong></p>\n", "title": "Recursive ConcurrentHashMap.computeIfAbsent() call never terminates. Bug or &quot;feature&quot;?", "tags": ["java", "recursion", "java-8", "concurrenthashmap"], "link": "http://stackoverflow.com/questions/28840047/recursive-concurrenthashmap-computeifabsent-call-never-terminates-bug-or-fea/28840048#28840048", "question_id": 28840047, "answer_id": 28840048}, {"body": "<p>This is fixed in <a href=\"https://bugs.openjdk.java.net/browse/JDK-8062841\">JDK-8062841</a>.</p>\n\n<p>In the <a href=\"http://jsr166-concurrency.10961.n7.nabble.com/ConcurrentHashMapV8-td7312.html\">2011 proposal</a>, I identified this issue during the code review. The JavaDoc was updated and a temporary fix was added. It was removed in a further rewrite due to performance issues.</p>\n\n<p>In the <a href=\"http://jsr166-concurrency.10961.n7.nabble.com/Re-ConcurrentHashMap-computeIfAbsent-td11687.html\">2014 discussion</a>, we explored ways to better detect and fail. Note that some of the discussion was taken offline to private email for considering the low-level changes. While not every case can be covered, the common cases will not livelock. These <a href=\"http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/src/main/java/util/concurrent/ConcurrentHashMap.java?r1=1.258&amp;r2=1.259\">fixes</a> are in Doug's repository but have not made it into a JDK release.</p>\n", "title": "Recursive ConcurrentHashMap.computeIfAbsent() call never terminates. Bug or &quot;feature&quot;?", "tags": ["java", "recursion", "java-8", "concurrenthashmap"], "link": "http://stackoverflow.com/questions/28840047/recursive-concurrenthashmap-computeifabsent-call-never-terminates-bug-or-fea/28845674#28845674", "question_id": 28840047, "answer_id": 28845674}, {"body": "<p>This is very similar to the bug.\nBecause, if you create your cache with capacity 32, your program will work until 49.\nAnd it is interesting, that parameter sizeCtl =32 + (32 >>> 1) + 1) =49!\nMay be the reason in resizing?</p>\n", "title": "Recursive ConcurrentHashMap.computeIfAbsent() call never terminates. Bug or &quot;feature&quot;?", "tags": ["java", "recursion", "java-8", "concurrenthashmap"], "link": "http://stackoverflow.com/questions/28840047/recursive-concurrenthashmap-computeifabsent-call-never-terminates-bug-or-fea/28998118#28998118", "question_id": 28840047, "answer_id": 28998118}], "creation_date": 1425410076, "score": 50, "link": "http://stackoverflow.com/questions/28840047/recursive-concurrenthashmap-computeifabsent-call-never-terminates-bug-or-fea", "question_id": 28840047}, {"body": "<p>I'm wondering what the best way is in Java 8 to work with all the values of an enum. Specifically when you need to get all the values and add it to somewhere, for example, supposing that we have the following enum:</p>\n\n<pre><code>public enum Letter {\n A, B, C, D;\n}\n</code></pre>\n\n<p>I could of course do the following:</p>\n\n<pre><code>for (Letter l : Letter.values()) {\n    foo(l);\n}\n</code></pre>\n\n<p>But, I could also add the following method to the enum definition:</p>\n\n<pre><code>public static Stream&lt;Letter&gt; stream() {\n    return Arrays.stream(Letter.values());\n}\n</code></pre>\n\n<p>And then replace the for from above with:</p>\n\n<pre><code>Letter.stream().forEach(l -&gt; foo(l));\n</code></pre>\n\n<p>Is this approach OK or does it have some fault in design or performance? Moreover, why don't enums have a stream() method?</p>\n", "tags": ["java", "design", "enums", "java-8"], "title": "Java 8 way to work with an enum", "answers": [{"body": "<p>My <strong>guess</strong> is that enums are limited in size (i.e the size is not limited by language but limited by usage)and thus they don't need a <em>native</em> stream api. Streams are very good when you have to manipulate transform and recollect the elements in a stream; these are not common uses case for Enum (usually you iterate over enum values, but rarely you need to transform, map and collect them).</p>\n\n<p>If you need only to do an action over each elements perhaps you should expose only a forEach method</p>\n\n<pre><code>     public static void forEach(Consumer&lt;Letter&gt; action) {\n            Arrays.stream(Letter.values()).forEach(action);\n     }\n\n     .... //example of usage\n     Letter.forEach(e-&gt;System.out.println(e));\n</code></pre>\n", "title": "Java 8 way to work with an enum", "tags": ["java", "design", "enums", "java-8"], "link": "http://stackoverflow.com/questions/29922296/java-8-way-to-work-with-an-enum/29922469#29922469", "question_id": 29922296, "answer_id": 29922469}, {"body": "<p>Three questions: three-part answer:</p>\n\n<h3>Is it okay from a design point of view?</h3>\n\n<p>Absolutely. Nothing wrong with it. If you need to do lots of iterating over your enum, the stream API is the clean way to go and hiding the boiler plate behind a little method is fine. Although I\u2019d consider <a href=\"http://stackoverflow.com/users/823393/oldcurmudgeon\">OldCumudgeon</a>\u2019s <a href=\"http://stackoverflow.com/a/29922602/66686\">version</a> even better.</p>\n\n<h3>Is it okay from a performance point of view?</h3>\n\n<p>It most likely doesn\u2019t matter. Most of the time, enums are not that big. Therefore, whatever overhead there is for one method or the other probably doesn\u2019t matter in 99.9% of the cases.</p>\n\n<p>Of course, there are the 0.1% where it does. In that case: measure properly, with your real-world data and consumers.</p>\n\n<p>If I had to bet, I\u2019d expect the <code>for each</code> loop to be faster, since it maps more directly to the memory model, but don\u2019t guess when talking performance, and don\u2019t tune before there is actual need for tuning. Write your code in a way that is correct first, easy to read second and only then worry about performance of code style.</p>\n\n<h3>Why aren\u2019t Enums properly integrated into the Stream API?</h3>\n\n<p>If you compare Java\u2019s Stream API to the equivalent in many other languages, it appears seriously limited. There are various pieces that are missing (reusable Streams and Optionals as Streams, for example). On the other hand, implementing the Stream API was certainly a huge change for the API. It was postponed multiple times for a reason. So I guess Oracle wanted to limit the changes to the most important use cases. Enums aren\u2019t used that much anyway. Sure, every project has a couple of them, but they\u2019re nothing compared to the number of Lists and other Collections. Even when you have an Enum, in many cases you  won\u2019t ever iterate over it. Lists and Sets, on the other hand, are probably iterated over almost every time. I assume that these were the reasons why the Enums didn\u2019t get their own adapter to the Stream world. We\u2019ll see whether more of this gets added in future versions. And until then you always can use <code>Arrays.stream</code>.</p>\n", "title": "Java 8 way to work with an enum", "tags": ["java", "design", "enums", "java-8"], "link": "http://stackoverflow.com/questions/29922296/java-8-way-to-work-with-an-enum/29922831#29922831", "question_id": 29922296, "answer_id": 29922831}, {"body": "<p>I think the shortest code to get a <code>Stream</code> of enum constants is <code>Stream.of(Letter.values())</code>. It's not as nice as <code>Letter.values().stream()</code> but that's an issue with arrays, not specifically enums.</p>\n\n<blockquote>\n  <p>Moreover, why don't enums have a <code>stream()</code> method?</p>\n</blockquote>\n\n<p>You are right that the nicest possible call would be <code>Letter.stream()</code>. Unfortunately a class cannot have two methods with the same signature, so it would not be possible to implicitly add a static method <code>stream()</code> to every enum (in the same way that every enum has an implicitly added static method <code>values()</code>) as this would break every existing enum that already has a static or instance method without parameters called <code>stream()</code>.</p>\n\n<blockquote>\n  <p>Is this approach OK?</p>\n</blockquote>\n\n<p>I think so. The drawback is that <code>stream</code> is a static method, so there is no way to avoid code duplication; it would have to be added to every enum separately.</p>\n", "title": "Java 8 way to work with an enum", "tags": ["java", "design", "enums", "java-8"], "link": "http://stackoverflow.com/questions/29922296/java-8-way-to-work-with-an-enum/29923793#29923793", "question_id": 29922296, "answer_id": 29923793}, {"body": "<p>I'd go for <a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/EnumSet.html\"><code>EnumSet</code></a>. Because <code>forEach()</code> is also defined on <code>Iterable</code>, you can avoid creating the stream altogether:</p>\n\n<pre><code>EnumSet.allOf(Letter.class).forEach(x -&gt; foo(x));\n</code></pre>\n\n<p>Or with a method reference:</p>\n\n<pre><code>EnumSet.allOf(Letter.class).forEach(this::foo);\n</code></pre>\n\n<p>Still, the oldschool for-loop feels a bit simpler:</p>\n\n<pre><code>for (Letter x : Letter.values()) {\n    foo(x);\n}\n</code></pre>\n", "title": "Java 8 way to work with an enum", "tags": ["java", "design", "enums", "java-8"], "link": "http://stackoverflow.com/questions/29922296/java-8-way-to-work-with-an-enum/29926133#29926133", "question_id": 29922296, "answer_id": 29926133}], "creation_date": 1430231045, "score": 50, "link": "http://stackoverflow.com/questions/29922296/java-8-way-to-work-with-an-enum", "question_id": 29922296}, {"body": "<p>Ive just discovered realm and wanted to explore it in more detail so i decided to create sample application and having a mess around with it. So far so good however one thing i havent been able to work out just yet is how to view my database in Realm Browser. Would anyone be able to give me an insight into how this can be done? Any advice would be much appreciated! </p>\n\n<p>Thanks in advance.</p>\n", "tags": ["java", "android", "realm"], "title": "How to view my Realm file in the Realm Browser?", "answers": [{"body": "<p>Currently the Realm Browser doesn't support accessing databases directly on the device, so you need to copy the database from the emulator/phone to view it. That can be done by using ADB:</p>\n\n<p><code>adb pull /data/data/&lt;packagename&gt;/files/ .</code></p>\n\n<p>That command will pull all Realm files created using <code>Realm.getInstance(getContext())</code> or <code>Realm.getInstance(new RealmConfiguration.Builder(context).build())</code> . The default database is called <code>default.realm</code>.</p>\n\n<p>Note that this will only work on a emulator or if the device is rooted.</p>\n", "title": "How to view my Realm file in the Realm Browser?", "tags": ["java", "android", "realm"], "link": "http://stackoverflow.com/questions/28478987/how-to-view-my-realm-file-in-the-realm-browser/28486297#28486297", "question_id": 28478987, "answer_id": 28486297}, {"body": "<p>If you are lazy to get the realm database file every time with adb, you could add an export function to your android code, which send you an email with the realm database file as attachment.</p>\n\n<p>Here an example:</p>\n\n<pre><code>public void exportDatabase() {\n\n    // init realm\n    Realm realm = Realm.getInstance(getActivity());\n\n    File exportRealmFile = null;\n    try {\n        // get or create an \"export.realm\" file\n        exportRealmFile = new File(getActivity().getExternalCacheDir(), \"export.realm\");\n\n        // if \"export.realm\" already exists, delete\n        exportRealmFile.delete();\n\n        // copy current realm to \"export.realm\"\n        realm.writeCopyTo(exportRealmFile);\n\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n    realm.close();\n\n    // init email intent and add export.realm as attachment\n    Intent intent = new Intent(Intent.ACTION_SEND);\n    intent.setType(\"plain/text\");\n    intent.putExtra(Intent.EXTRA_EMAIL, \"YOUR MAIL\");\n    intent.putExtra(Intent.EXTRA_SUBJECT, \"YOUR SUBJECT\");\n    intent.putExtra(Intent.EXTRA_TEXT, \"YOUR TEXT\");\n    Uri u = Uri.fromFile(exportRealmFile);\n    intent.putExtra(Intent.EXTRA_STREAM, u);\n\n    // start email intent\n    startActivity(Intent.createChooser(intent, \"YOUR CHOOSER TITLE\"));\n}\n</code></pre>\n\n<p>Don't forget to add this user permission to your Android Manifest file:</p>\n\n<pre><code>    &lt;uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" /&gt;\n</code></pre>\n", "title": "How to view my Realm file in the Realm Browser?", "tags": ["java", "android", "realm"], "link": "http://stackoverflow.com/questions/28478987/how-to-view-my-realm-file-in-the-realm-browser/29849902#29849902", "question_id": 28478987, "answer_id": 29849902}, {"body": "<p>you can access the realm file directly. Here is solution that i've used.</p>\n\n<p>First you can copy the realm file that is located '/data/data/packagename/files' to Environment.getExternalStorageDirectory()+'/FileName.realm'.</p>\n\n<pre><code>public class FileUtil {\n    public static void copy(File src, File dst) throws IOException {\n        InputStream in = new FileInputStream(src);\n        OutputStream out = new FileOutputStream(dst);\n\n        // Transfer bytes from in to out\n        byte[] buf = new byte[1024];\n        int len;\n        while ((len = in.read(buf)) &gt; 0) {\n            out.write(buf, 0, len);\n        }\n        in.close();\n        out.close();\n    }\n}\n\n\n    Realm realm = null;\n    try {\n        realm = Realm.getInstance(this);\n            File f = new File(realm.getPath());\n            if (f.exists()) {\n                try {\n                    FileUtil.copy(f, new File(Environment.getExternalStorageDirectory()+\"/default.realm\"));\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n    } finally {\n        if (realm != null)\n            realm.close();\n    }\n</code></pre>\n\n<p>Second use adb tool to pull that file like this</p>\n\n<blockquote>\n  <p>$ adb pull /sdcard/default.realm .</p>\n</blockquote>\n\n<p>Now you can open the file as Realm Browser.</p>\n", "title": "How to view my Realm file in the Realm Browser?", "tags": ["java", "android", "realm"], "link": "http://stackoverflow.com/questions/28478987/how-to-view-my-realm-file-in-the-realm-browser/30364742#30364742", "question_id": 28478987, "answer_id": 30364742}, {"body": "<p>see my response from this related thread.... requires Android Studio but easy. Save your realm file, then just open it with the Realm Browser. </p>\n\n<p><a href=\"http://stackoverflow.com/questions/28465706/how-to-find-my-realm-file/30646902#30646902\">How to find my realm file?</a></p>\n", "title": "How to view my Realm file in the Realm Browser?", "tags": ["java", "android", "realm"], "link": "http://stackoverflow.com/questions/28478987/how-to-view-my-realm-file-in-the-realm-browser/30668971#30668971", "question_id": 28478987, "answer_id": 30668971}, {"body": "<p>Now you can view Realm DB on Chrome browser using <a href=\"http://facebook.github.io/stetho/\">Stetho</a>, developed by Facebook. By default, Stetho allows to view Sqlite, network, sharedpreferences but with additional <a href=\"https://github.com/uPhyca/stetho-realm\">plugin here</a> allows to view Realm as well.</p>\n\n<p>After configuring your <code>Application</code> class with above libraries, while app is running and connected, open Chrome browser and navigate <code>chrome://inspect</code> to see</p>\n\n<hr>\n\n<p><a href=\"http://i.stack.imgur.com/qWtv2.png\"><img src=\"http://i.stack.imgur.com/qWtv2.png\" alt=\"enter image description here\"></a></p>\n\n<p>Then <code>Resources-&gt;Web Sql-&gt;default.realm</code></p>\n\n<hr>\n\n<p><a href=\"http://i.stack.imgur.com/EHVrG.png\"><img src=\"http://i.stack.imgur.com/EHVrG.png\" alt=\"enter image description here\"></a></p>\n", "title": "How to view my Realm file in the Realm Browser?", "tags": ["java", "android", "realm"], "link": "http://stackoverflow.com/questions/28478987/how-to-view-my-realm-file-in-the-realm-browser/34187414#34187414", "question_id": 28478987, "answer_id": 34187414}, {"body": "<p>You can also pull your file from any NON rooted device using adb shell and run-as command.</p>\n\n<p>you can use this commands to pull from your app's private storage a database named your_database_file_name located in the files folder</p>\n\n<pre><code>adb shell \"run-as package.name chmod 666 /data/data/package.name/files/your_database_file_name\"\n//for devices running an android version lower than lollipop\nadb pull /data/data/package.name/files/your_database_file_name\n//for devices running an android version equal or grater than lollipop\nadb exec-out run-as package.name cat files/your_database_file_name &gt; your_database_file_name\nadb shell \"run-as package.name chmod 600 /data/data/package.name/files/your_database_file_name\"\n</code></pre>\n", "title": "How to view my Realm file in the Realm Browser?", "tags": ["java", "android", "realm"], "link": "http://stackoverflow.com/questions/28478987/how-to-view-my-realm-file-in-the-realm-browser/36531095#36531095", "question_id": 28478987, "answer_id": 36531095}, {"body": "<p>Here is a shell for lazy people like me :)</p>\n\n<p>The <code>.realm</code> file will be stored inside <code>tmpRealm/</code> folder next to the <code>.sh</code> file.</p>\n\n<pre><code>#!/bin/sh\nadb shell 'su -c \"\ncd /data/data/&lt;packagename&gt;/files\nls\nrm -rf /data/local/tmp/tmpRealm/\nmkdir /data/local/tmp/tmpRealm/\ncp /data/data/com.arefly.sleep/files/* /data/local/tmp/tmpRealm\nchown shell.shell /data/local/tmp/tmpRealm/*\n\"'\nrm -rf ./tmpRealm/\nadb pull /data/local/tmp/tmpRealm ./\n</code></pre>\n\n<p>Or if you prefer to let <code>tmpRealm/</code> be in SD Card.</p>\n\n<pre><code>#!/bin/sh\nadb shell 'su -c \"\ncd /data/data/com.arefly.sleep/files\nls\nmount -o rw,remount $EXTERNAL_STORAGE/\nrm -rf $EXTERNAL_STORAGE/tmpRealm\nmkdir $EXTERNAL_STORAGE/tmpRealm\ncp /data/data/com.arefly.sleep/files/* $EXTERNAL_STORAGE/tmpRealm\n\"'\nrm -rf ./tmpRealm/\n# http://unix.stackexchange.com/a/225750/176808\nadb pull \"$(adb shell 'echo \"$EXTERNAL_STORAGE\"' | tr -d '\\r')/tmpRealm\" ./\n</code></pre>\n\n<p><em>Reference:</em></p>\n\n<ol>\n<li><a href=\"http://stackoverflow.com/a/28486297/2603230\">http://stackoverflow.com/a/28486297/2603230</a></li>\n<li><a href=\"http://android.stackexchange.com/a/129665/179720\">http://android.stackexchange.com/a/129665/179720</a></li>\n</ol>\n", "title": "How to view my Realm file in the Realm Browser?", "tags": ["java", "android", "realm"], "link": "http://stackoverflow.com/questions/28478987/how-to-view-my-realm-file-in-the-realm-browser/38767668#38767668", "question_id": 28478987, "answer_id": 38767668}], "creation_date": 1423748537, "score": 48, "link": "http://stackoverflow.com/questions/28478987/how-to-view-my-realm-file-in-the-realm-browser", "question_id": 28478987}, {"body": "<p>Similar problem like one posted on <a href=\"http://stackoverflow.com/questions/19891423/invalid-target-release-1-7\">invalid target release: 1.7</a> but after following the blog my problem is still unresolved.</p>\n\n<blockquote>\n  <p>Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project hm_app: Fatal error compiling: invalid target release: 1.8 -> [Help 1]</p>\n</blockquote>\n\n<p>I was following <a href=\"http://maven.apache.org/guides/getting-started/index.html\">as tutorial</a> when I faced this problem.</p>\n\n<pre><code>abt java &amp; mvn\n\nC:\\mvn&gt;echo %JAVA_HOME% \nC:\\mvn&gt;echo %JRE_HOME%\nC:\\mvn&gt;echo %MAVEN_HOME% yields\n</code></pre>\n\n<p>outputs</p>\n\n<pre><code>C:\\Program Files\\Java\\jdk1.7.0_51\nC:\\Program Files\\Java\\jre7\nC:\\apache-maven-3.0.4\n</code></pre>\n", "tags": ["java", "maven"], "title": "Fatal error compiling: invalid target release: 1.8 -&gt; [Help 1]", "answers": [{"body": "<p>You have set your <code>%JAVA_HOME</code> to jdk 1.7, but you are trying to compile using 1.8. Install jdk 1.8 and make sure your <code>%JAVA_HOME</code> points to that or drop the target release to 1.7. </p>\n\n<blockquote>\n  <p>invalid target release: 1.8</p>\n</blockquote>\n\n<p>The target release refers to the jdk version.</p>\n", "title": "Fatal error compiling: invalid target release: 1.8 -&gt; [Help 1]", "tags": ["java", "maven"], "link": "http://stackoverflow.com/questions/28291691/fatal-error-compiling-invalid-target-release-1-8-help-1/28291716#28291716", "question_id": 28291691, "answer_id": 28291716}, {"body": "<p>Put the value in the plugin:</p>\n\n<pre><code>&lt;plugin&gt;\n    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n    &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n    &lt;version&gt;3.1&lt;/version&gt;\n    &lt;configuration&gt;\n        &lt;source&gt;1.8&lt;/source&gt;\n        &lt;target&gt;1.8&lt;/target&gt;\n    &lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre>\n\n<p>The error was use:</p>\n\n<pre><code>&lt;source&gt;${java.version}&lt;/source&gt;\n&lt;target&gt;${java.version}&lt;/target&gt;\n</code></pre>\n", "title": "Fatal error compiling: invalid target release: 1.8 -&gt; [Help 1]", "tags": ["java", "maven"], "link": "http://stackoverflow.com/questions/28291691/fatal-error-compiling-invalid-target-release-1-8-help-1/38744822#38744822", "question_id": 28291691, "answer_id": 38744822}], "creation_date": 1422939784, "score": 48, "link": "http://stackoverflow.com/questions/28291691/fatal-error-compiling-invalid-target-release-1-8-help-1", "question_id": 28291691}, {"body": "<p>Similar to:<br>\n- <a href=\"http://stackoverflow.com/questions/28032764/intellij-14-the-supplied-javahome-seems-to-be-invalid\">Intellij 14 the supplied javaHome seems to be invalid</a><br>\n- <a href=\"http://stackoverflow.com/questions/22749200/android-studio-supplied-javahome-is-not-a-valid-folder\">Android Studio - supplied javaHome is not a valid folder</a>  </p>\n\n<p>However, I am trying to use my <code>JAVA_HOME</code> variable which is set to <code>C:\\Program Files\\Java\\jdk1.8.0_40</code></p>\n\n<p>I do not understand why intellij is looking for the JDK inside of its install directory.</p>\n\n<p>In intellij:</p>\n\n<pre><code>Executing external task 'bootRun'...\nThe supplied javaHome seems to be invalid. I cannot find the java executable. Tried location: C:\\Program Files (x86)\\JetBrains\\IntelliJ IDEA 14.1\\jre\\bin\\java.exe\nExternal task execution finished 'bootRun'.\n</code></pre>\n\n<hr>\n\n<pre><code>C:\\&gt;java -version\njava version \"1.8.0_40\"\nJava(TM) SE Runtime Environment (build 1.8.0_40-b25)\nJava HotSpot(TM) 64-Bit Server VM (build 25.40-b25, mixed mode)\n</code></pre>\n\n<hr>\n\n<pre><code>C:&gt;env\n...\nJAVA_HOME=C:\\Program Files\\Java\\jdk1.8.0_40\n...\n</code></pre>\n", "tags": ["java", "intellij-idea", "gradle", "intellij-14", "intellij-idea-14"], "title": "IntelliJ Gradle Plugin: The supplied javaHome seems to be invalid", "answers": [{"body": "<p>Try manually setting a JDK from <code>File &gt; Project Structure &gt; Project &gt; Project SDK</code>, Then rebuild.</p>\n", "title": "IntelliJ Gradle Plugin: The supplied javaHome seems to be invalid", "tags": ["java", "intellij-idea", "gradle", "intellij-14", "intellij-idea-14"], "link": "http://stackoverflow.com/questions/29356796/intellij-gradle-plugin-the-supplied-javahome-seems-to-be-invalid/29365046#29365046", "question_id": 29356796, "answer_id": 29365046}, {"body": "<p>I've solved this issue by putting gradle.properties file in the same dir as build.gradle with exact path to my JDK:</p>\n\n<pre><code>org.gradle.java.home = C:/Dev/JDK\n</code></pre>\n\n<p>Actually it is not a correct solution, probably it should be fixed in IDE, I see in IDEA logs something like (when I executing gradle task of already imported project):</p>\n\n<pre><code>INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from C:/Dev/JDK\n</code></pre>\n\n<p>But when I going to import gradle module to the project I don't see such kind of message, probably IDEA passes link to bundled JRE which is actually not a JDK.</p>\n", "title": "IntelliJ Gradle Plugin: The supplied javaHome seems to be invalid", "tags": ["java", "intellij-idea", "gradle", "intellij-14", "intellij-idea-14"], "link": "http://stackoverflow.com/questions/29356796/intellij-gradle-plugin-the-supplied-javahome-seems-to-be-invalid/29417705#29417705", "question_id": 29356796, "answer_id": 29417705}, {"body": "<p>The problem lies in Intellij IDEA itself. If you go to Intellij installed directory, you will find a <strong>jre</strong> directory where it's searching for the above said <strong>java.exe</strong>. But the problem here is there is no <strong>bin</strong> directory here instead another <strong>jre</strong> directory available.So, solution is upfront. copy all the contents from inner <strong>jre</strong> directory and put it in outer <strong>jre</strong> directory. </p>\n", "title": "IntelliJ Gradle Plugin: The supplied javaHome seems to be invalid", "tags": ["java", "intellij-idea", "gradle", "intellij-14", "intellij-idea-14"], "link": "http://stackoverflow.com/questions/29356796/intellij-gradle-plugin-the-supplied-javahome-seems-to-be-invalid/29665141#29665141", "question_id": 29356796, "answer_id": 29665141}, {"body": "<p>IDEA comes in 2 versions: 32bit and 64bit. </p>\n\n<p>Your <code>JAVA_HOME</code> is 64bit version of Java so you have to run 64bit version of the IDEA <code>...\\IntelliJ\\IntelliJ IDEA Community Edition 14.1.2\\bin\\idea64.exe</code>. </p>\n\n<p>Otherwise, you can provide 32bit JDK or tweak the behaviour with IDEA settings\n<a href=\"https://intellij-support.jetbrains.com/entries/23455956-Selecting-the-JDK-version-the-IDE-will-run-under\">https://intellij-support.jetbrains.com/entries/23455956-Selecting-the-JDK-version-the-IDE-will-run-under</a></p>\n", "title": "IntelliJ Gradle Plugin: The supplied javaHome seems to be invalid", "tags": ["java", "intellij-idea", "gradle", "intellij-14", "intellij-idea-14"], "link": "http://stackoverflow.com/questions/29356796/intellij-gradle-plugin-the-supplied-javahome-seems-to-be-invalid/29897690#29897690", "question_id": 29356796, "answer_id": 29897690}, {"body": "<p><strong>UPDATE</strong> I believe this issue has been fixed as of 14.1.3</p>\n\n<p>Related bug links: </p>\n\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/IDEA-138454\" rel=\"nofollow\">Intellij 14.1 cannot Import correctly Module with Gradle</a></li>\n</ul>\n\n<p>That said, I was able to get by using @Sergii Pechenizkyi's answer; however, it seems like this problem has a few different solutions.</p>\n", "title": "IntelliJ Gradle Plugin: The supplied javaHome seems to be invalid", "tags": ["java", "intellij-idea", "gradle", "intellij-14", "intellij-idea-14"], "link": "http://stackoverflow.com/questions/29356796/intellij-gradle-plugin-the-supplied-javahome-seems-to-be-invalid/30032296#30032296", "question_id": 29356796, "answer_id": 30032296}, {"body": "<p>This can be fixed by setting the <strong>Project</strong> SDK in Module settings to a JDK (as opposed to the <strong>Module</strong> SDK (which shall be <em>Android</em> SDK)</p>\n", "title": "IntelliJ Gradle Plugin: The supplied javaHome seems to be invalid", "tags": ["java", "intellij-idea", "gradle", "intellij-14", "intellij-idea-14"], "link": "http://stackoverflow.com/questions/29356796/intellij-gradle-plugin-the-supplied-javahome-seems-to-be-invalid/35092501#35092501", "question_id": 29356796, "answer_id": 35092501}, {"body": "<p>Im my case the above answers didn't work.\nhere what work for me:\nI need to change Gradle JVM to point to the actual JDK:\n<a href=\"http://i.stack.imgur.com/86YRk.png\"><img src=\"http://i.stack.imgur.com/86YRk.png\" alt=\"enter image description here\"></a></p>\n", "title": "IntelliJ Gradle Plugin: The supplied javaHome seems to be invalid", "tags": ["java", "intellij-idea", "gradle", "intellij-14", "intellij-idea-14"], "link": "http://stackoverflow.com/questions/29356796/intellij-gradle-plugin-the-supplied-javahome-seems-to-be-invalid/36539783#36539783", "question_id": 29356796, "answer_id": 36539783}, {"body": "<p>Upgrading IntelliJ UE from v14.1.1 to 14.1.7 worked for me.</p>\n", "title": "IntelliJ Gradle Plugin: The supplied javaHome seems to be invalid", "tags": ["java", "intellij-idea", "gradle", "intellij-14", "intellij-idea-14"], "link": "http://stackoverflow.com/questions/29356796/intellij-gradle-plugin-the-supplied-javahome-seems-to-be-invalid/38960473#38960473", "question_id": 29356796, "answer_id": 38960473}], "creation_date": 1427751458, "score": 47, "link": "http://stackoverflow.com/questions/29356796/intellij-gradle-plugin-the-supplied-javahome-seems-to-be-invalid", "question_id": 29356796}, {"body": "<p>Running the following stream example in Java8:</p>\n\n<pre><code>    System.out.println(Stream\n        .of(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")\n        .reduce(\"\", (s1, s2) -&gt; s1 + \"/\" + s2)\n    );\n</code></pre>\n\n<p>yields:</p>\n\n<pre><code>/a/b/c/d/e/f\n</code></pre>\n\n<p>Which is - of course - no surprise.\nDue to <a href=\"http://docs.oracle.com/javase/8/docs/api/index.html?overview-summary.html\">http://docs.oracle.com/javase/8/docs/api/index.html?overview-summary.html</a> it shouldn't matter whether the stream is executed sequentially or parallel: </p>\n\n<blockquote>\n  <p>Except for operations identified as explicitly nondeterministic, such as findAny(), whether a stream executes sequentially or in parallel should not change the result of the computation. </p>\n</blockquote>\n\n<p>AFAIK <code>reduce()</code> is deterministic and <code>(s1, s2) -&gt; s1 + \"/\" + s2</code> is associative, so that adding <code>parallel()</code> should yield the same result:</p>\n\n<pre><code>    System.out.println(Stream\n            .of(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")\n            .parallel()\n            .reduce(\"\", (s1, s2) -&gt; s1 + \"/\" + s2)\n    );\n</code></pre>\n\n<p>However the result on my machine is:</p>\n\n<pre><code>/a//b//c//d//e//f\n</code></pre>\n\n<p>What's wrong here?</p>\n\n<p>BTW: using (the preferred) <code>.collect(Collectors.joining(\"/\"))</code> instead of <code>reduce(...)</code> yields the same result <code>a/b/c/d/e/f</code> for sequential and parallel execution.</p>\n\n<p>JVM details:</p>\n\n<pre><code>java.specification.version: 1.8\njava.version: 1.8.0_31\njava.vm.version: 25.31-b07\njava.runtime.version: 1.8.0_31-b13\n</code></pre>\n", "tags": ["java", "lambda", "java-8", "java-stream"], "title": "Java8 streams sequential and parallel execution produce different results?", "answers": [{"body": "<p>From reduce's documentation:</p>\n\n<blockquote>\n  <p>The identity value must be an identity for the accumulator function. This means that for all t, accumulator.apply(identity, t) is equal to t. </p>\n</blockquote>\n\n<p>Which is not true in your case - \"\" and \"a\" creates \"/a\".</p>\n\n<p>I have extracted the accumulator function and added a printout to show what happens:</p>\n\n<pre><code>BinaryOperator&lt;String&gt; accumulator = (s1, s2) -&gt; {\n    System.out.println(\"joining \\\"\" + s1 + \"\\\" and \\\"\" + s2 + \"\\\"\");\n    return s1 + \"/\" + s2;\n};\nSystem.out.println(Stream\n                .of(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")\n                .parallel()\n                .reduce(\"\", accumulator)\n);\n</code></pre>\n\n<p>This is example output (it differs between runs):</p>\n\n<pre><code>joining \"\" and \"d\"\njoining \"\" and \"f\"\njoining \"\" and \"b\"\njoining \"\" and \"a\"\njoining \"\" and \"c\"\njoining \"\" and \"e\"\njoining \"/b\" and \"/c\"\njoining \"/e\" and \"/f\"\njoining \"/a\" and \"/b//c\"\njoining \"/d\" and \"/e//f\"\njoining \"/a//b//c\" and \"/d//e//f\"\n/a//b//c//d//e//f\n</code></pre>\n\n<p>You can add an if statement to your function to handle empty string separately:</p>\n\n<pre><code>System.out.println(Stream\n        .of(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")\n        .parallel()\n        .reduce((s1, s2) -&gt; s1.isEmpty()? s2 : s1 + \"/\" + s2)\n);\n</code></pre>\n\n<p>As Marko Topolnik noticed, checking <code>s2</code> is not required as accumulator doesn't have to be commutative function.</p>\n", "title": "Java8 streams sequential and parallel execution produce different results?", "tags": ["java", "lambda", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/28724850/java8-streams-sequential-and-parallel-execution-produce-different-results/28725182#28725182", "question_id": 28724850, "answer_id": 28725182}, {"body": "<p>To add to other answer,</p>\n\n<p>You might want to use <strong>Mutable reduction</strong>, the doc specify that doing something like </p>\n\n<pre><code>String concatenated = strings.reduce(\"\", String::concat)\n</code></pre>\n\n<p>Will give bad performance result.</p>\n\n<blockquote>\n  <p>We would get the desired result, and it would even work in parallel.\n  However, we might not be happy about the performance! Such an\n  implementation would do a great deal of string copying, and the run\n  time would be O(n^2) in the number of characters. A more performant\n  approach would be to accumulate the results into a <strong>StringBuilder</strong>,\n  which is a mutable container for accumulating strings. We can use the\n  same technique to parallelize mutable reduction as we do with ordinary\n  reduction.</p>\n</blockquote>\n\n<p>So you should use a StringBuilder instead.</p>\n", "title": "Java8 streams sequential and parallel execution produce different results?", "tags": ["java", "lambda", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/28724850/java8-streams-sequential-and-parallel-execution-produce-different-results/28725311#28725311", "question_id": 28724850, "answer_id": 28725311}, {"body": "<p>For someone who just started with lambdas and streams, it took quite some time to get to the \"AHA\" moment, until I really understood what is going on here. I'll rephrase this a bit to make a bit easier (at least how I wish it was really answered) for a stream newbie like me.</p>\n\n<p>It's all under the reduce documentation that states:</p>\n\n<p><strong>The identity value MUST be an identity for the accumulator function. This means that for all t, accumulator.apply(identity, t) is equal to t.</strong></p>\n\n<p>We can easily prove that the way code is, the associativity is broken:</p>\n\n<pre><code>static private void isAssociative() {\n     BinaryOperator&lt;String&gt; operator = (s1, s2) -&gt; s1 + \"/\" + s2;\n     String result = operator.apply(\"\", \"a\");\n     System.out.println(result); \n     System.out.println(result.equals(\"a\")); \n}\n</code></pre>\n\n<p>An empty String concatenated with another String, should really produce the second String; which does not happen, thus accumulator (BinaryOperator) is NOT associative and thus the reduce method can not guarantee the same result in case of parallel invocation.</p>\n", "title": "Java8 streams sequential and parallel execution produce different results?", "tags": ["java", "lambda", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/28724850/java8-streams-sequential-and-parallel-execution-produce-different-results/28854419#28854419", "question_id": 28724850, "answer_id": 28854419}], "creation_date": 1424883156, "score": 47, "link": "http://stackoverflow.com/questions/28724850/java8-streams-sequential-and-parallel-execution-produce-different-results", "question_id": 28724850}, {"body": "<p>I am integrating OAuth login for Google+ on my android application, following the <a href=\"https://developers.google.com/identity/sign-in/android/start-integrating\">tutorial</a>.</p>\n\n<p>According to the tutorial, I should add the Google Service plugin by adding\n<code>classpath 'com.google.gms:google-services:1.0'</code> dependency to top-level  <code>build.gradle</code>  in my android project.</p>\n\n<p>However, when I sync the gradle with the changes, I see the error as follows:</p>\n\n<blockquote>\n  <p>Error:Could not find com.google.gms:google-services:1.0.</p>\n  \n  <p>Searched in the following locations:\n      file:/C:/Program Files/Android/Android Studio/gradle/m2repository/com/google/gms/google-services/1.0/google-services-1.0.pom\n      file:/C:/Program Files/Android/Android  Studio/gradle/m2repository/com/google/gms/google-services/1.0/google-services-1.0.jar\n      <a href=\"https://jcenter.bintray.com/com/google/gms/google-services/1.0/google-services-1.0.pom\">https://jcenter.bintray.com/com/google/gms/google-services/1.0/google-services-1.0.pom</a>\n      <a href=\"https://jcenter.bintray.com/com/google/gms/google-services/1.0/google-services-1.0.jar\">https://jcenter.bintray.com/com/google/gms/google-services/1.0/google-services-1.0.jar</a></p>\n</blockquote>\n\n<p>In my <code>build.gradle</code>:</p>\n\n<pre><code>// Top-level build file where you can add configuration options common to all sub-projects/modules.\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:1.2.3'\n        classpath 'com.google.gms:google-services:1.0'\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n    }\n}\n</code></pre>\n\n<p>It seems that the android studio is not able to find google-services plugin from repositories. </p>\n\n<p>Does anybody have the same issue? Or, am I missing something?</p>\n\n<p>Any input will be greatly appreciated!</p>\n\n<p>Best regards,</p>\n", "tags": ["java", "android", "android-studio", "google-login"], "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "answers": [{"body": "<p>You maybe miss this step</p>\n\n<p><em>Copy the google-services.json file you just downloaded into the app/ or mobile/ directory of your Android Studio project. Open the Android Studio Terminal pane:\n$ move path-to-download/google-services.json app/</em></p>\n\n<p>Have fun.</p>\n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/30527719#30527719", "question_id": 30527369, "answer_id": 30527719}, {"body": "<p>I ran into the same issue today. In the samples they use this line instead:\n<code>\nclasspath 'com.google.gms:google-services:1.3.0-beta1'\n</code>\nThis works.</p>\n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/30532666#30532666", "question_id": 30527369, "answer_id": 30532666}, {"body": "<p>I got a similar problem while following the <a href=\"https://developers.google.com/cloud-messaging/android/client\" rel=\"nofollow\">instructions</a> for implementing a GCM client in Android Studio, however, the message I got was :</p>\n\n<blockquote>\n  <p>Error: Could not find com.google.gms:google-services:1.3.0-beta1...</p>\n</blockquote>\n\n<p>Although I never figured out what was wrong, I simply copied my sources, resources, manifest, and keystore into a new Android Studio project. I then edited the auto-generated gradle build files for the new project by manually re-adding my dependencies.</p>\n\n<p>I made sure not to copy over my build files from the old project verbatim (since the source of the error likely lay in them somewhere).</p>\n\n<p>It is not a satisfying solution, but it worked for me and it took little time.</p>\n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/30542696#30542696", "question_id": 30527369, "answer_id": 30542696}, {"body": "<p>Google updated <a href=\"https://developers.google.com/app-invites/android/guides/app\" rel=\"nofollow\">their guide</a>. Where it was classpath 'com.google.gms:google-services:1.0' now reads classpath 'com.google.gms:google-services:1.3.0-beta1' like joluet suggested.</p>\n\n<p><img src=\"http://i.stack.imgur.com/LLac7.png\" alt=\"enter image description here\"></p>\n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/30617244#30617244", "question_id": 30527369, "answer_id": 30617244}, {"body": "<p>For me I had to switch the repository to <code>jcenter()</code>.  I was using mavenCentral and getting this error.  As soon as I switched to <code>jcenter()</code> it pulled the dependency down.</p>\n\n<p>To do this, open your <code>build.gradle</code> and replace each instance of <code>mavenCentral()</code> with <code>jcenter()</code></p>\n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/30771178#30771178", "question_id": 30527369, "answer_id": 30771178}, {"body": "<p>You should just add classpath 'com.google.gms:google-services:1.3.0-beta1' to dependencies of your (Top level build file) the build.gradle that has the (Project: \n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/31128972#31128972", "question_id": 30527369, "answer_id": 31128972}, {"body": "<p>You need to check the current version as in the link below says, by now:</p>\n\n<pre><code>classpath 'com.google.gms:google-services:1.3.0-beta4'\n</code></pre>\n\n<p>Check this answer:</p>\n\n<p><a href=\"http://stackoverflow.com/a/30536935/4726250\">Update gradle version</a></p>\n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/31586044#31586044", "question_id": 30527369, "answer_id": 31586044}, {"body": "<p>Google now released the plugin v1.3.0 </p>\n\n<p>I was able to solve it using <a href=\"https://jcenter.bintray.com/com/android/tools/build/gradle/\" rel=\"nofollow\">this</a>:</p>\n\n<blockquote>\n  <p>classpath 'com.google.gms:google-services:1.3.0'</p>\n</blockquote>\n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/31829912#31829912", "question_id": 30527369, "answer_id": 31829912}, {"body": "<p>I would advise you against doing what you are doing. I did it too (by following <a href=\"https://developers.google.com/cloud-messaging/android/client#add-config\" rel=\"nofollow\">Set up a GCM Client App on Android</a> blindly) but ended up with exceeding 65K method limit.</p>\n\n<p>So, you should remove the following lines from your gradle:</p>\n\n<pre><code>apply plugin: 'com.google.gms.google-services'\nclasspath 'com.google.gms:google-services:1.0'\n</code></pre>\n\n<p>Now import APIs of Google Plus with simple gradle import:</p>\n\n<pre><code>compile 'com.google.android.gms:play-services-plus:8.1.0'\n</code></pre>\n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/32969021#32969021", "question_id": 30527369, "answer_id": 32969021}, {"body": "<p>I think you forgotten gradle's project level,</p>\n\n<p>From <a href=\"https://developers.google.com/identity/sign-in/android/start-integrating\" rel=\"nofollow\">developers page</a>:</p>\n\n<p>Add the dependency to your <strong>project-level</strong> build.gradle<br>\n<code>classpath 'com.google.gms:google-services:1.5.0-beta2'</code></p>\n\n<p>Add the plugin to your <strong>app-level</strong> build.gradle:<br>\n<code>apply plugin: 'com.google.gms.google-services'</code></p>\n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/33667900#33667900", "question_id": 30527369, "answer_id": 33667900}, {"body": "<p>We have to look for the last version in my case was:</p>\n\n<pre><code>dependencies {    \n    classpath 'com.google.gms:google-services:1.4.0-beta3'\n}\n</code></pre>\n\n<p><a href=\"https://jcenter.bintray.com/com/android/tools/build/gradle/\" rel=\"nofollow\">Here</a> you can find a list of the versions.</p>\n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/33696163#33696163", "question_id": 30527369, "answer_id": 33696163}, {"body": "<p>As of <strong>25th Nov,2015</strong>, google released a newer version.</p>\n\n<p>Try adding:\n<code>classpath 'com.google.gms:google-services:2.0.0-alpha1'</code></p>\n\n<p>And don't forget to add <code>jcenter()</code> repository under buildscript.</p>\n\n<p>Thanks.</p>\n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/33904330#33904330", "question_id": 30527369, "answer_id": 33904330}, {"body": "<p>For me i resolved this issue by doing following things :</p>\n\n<ol>\n<li><p>In build.gradel (at Project Level)</p>\n\n<pre><code>    // Top-level build file where you can add configuration options common to all sub-projects/modules.\n\n    buildscript {\n        repositories {\n            mavenCentral()\n            jcenter()\n        }\n        dependencies {\n            classpath 'com.android.tools.build:gradle:1.3.0'\n            classpath 'com.google.gms:google-services:1.5.0-beta2'\n         }\n    }\n\n    allprojects {\n        repositories {\n            mavenCentral()\n        }\n    }\n</code></pre></li>\n<li><p>In build.gradel (at Module Level)</p>\n\n<pre><code>    On top added:\n    apply plugin: 'com.google.gms.google-services'\n\n    and in dependecies added :\n        compile 'com.google.android.gms:play-services-analytics:8.3.0'\n</code></pre></li>\n</ol>\n\n<p>Apart from this make sure you have updated google play service and google repository in SDK.</p>\n\n<p>Hope this Helps , Cheers.</p>\n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/34350832#34350832", "question_id": 30527369, "answer_id": 34350832}, {"body": "<p>Adding <strong>jcenter</strong> repository to project level build.gradle helped in my case:</p>\n\n<pre><code>buildscript {\n    repositories {\n        jcenter();\n        mavenCentral()\n    }\n</code></pre>\n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/35726101#35726101", "question_id": 30527369, "answer_id": 35726101}, {"body": "<p>Google has updated <a href=\"https://developers.google.com/app-invites/android/guides/app#set-up-your-project\" rel=\"nofollow\">GCM</a> go check it and for that you have to update your Android Studio too.</p>\n\n<p><a href=\"http://i.stack.imgur.com/06PK2.png\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/06PK2.png\" alt=\"enter image description here\"></a></p>\n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/35995028#35995028", "question_id": 30527369, "answer_id": 35995028}, {"body": "<p>Inside the .idea folder exists a workspace.xml file that defines the project's structure. I suggest you to close Android Studio, then delete .idea folder and then import the project again. The .idea would be generated by the IDE again. For me this solution works.</p>\n", "title": "Error: Could not find com.google.gms:google-services:1.0. when adding google service plugin in build.gradle in android studio", "tags": ["java", "android", "android-studio", "google-login"], "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser/36865604#36865604", "question_id": 30527369, "answer_id": 36865604}], "creation_date": 1432895665, "score": 46, "link": "http://stackoverflow.com/questions/30527369/error-could-not-find-com-google-gmsgoogle-services1-0-when-adding-google-ser", "question_id": 30527369}, {"body": "<h1>The problem</h1>\n\n<p>I would like to be able to override my apps resources such as R.colour.brand_colour or R.drawable.ic_action_start at runtime.  My application connects to a CMS system that will provide branding colours and images.  Once the app has downloaded the CMS data it needs to be able to re-skin itself.</p>\n\n<p>I know what you are about to say - overriding resources at runtime is not possible.</p>\n\n<p>Except that it kinda is.  In particular I have found this <a href=\"http://comserv.cs.ut.ee/forms/ati_report/downloader.php?file=FE07EAE132DBEEBE7231CEFB0E0200EA2E6E508E\">Bachelor Thesis</a> from 2012 which explains the basic concept - The Activity class in android extends <code>ContextWrapper</code>, which contains the attachBaseContext method.  You can override attachBaseContext to wrap the Context with your own custom class which overrides methods such as getColor and getDrawable.  Your own implementation of getColor could look the colour up however it wanted.  The <a href=\"https://github.com/chrisjenx/Calligraphy\">Calligraphy library</a> uses a similar approach to inject a custom LayoutInflator which can deal with loading custom fonts.</p>\n\n<h1>The code</h1>\n\n<p>I have created a simple Activity which uses this approach to override the loading of a colour.</p>\n\n<pre><code>public class MainActivity extends Activity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n\n    @Override\n    protected void attachBaseContext(Context newBase) {\n        super.attachBaseContext(new CmsThemeContextWrapper(newBase));\n    }\n\n    private class CmsThemeContextWrapper extends ContextWrapper{\n\n        private Resources resources;\n\n        public CmsThemeContextWrapper(Context base) {\n            super(base);\n            resources = new Resources(base.getAssets(), base.getResources().getDisplayMetrics(), base.getResources().getConfiguration()){\n                @Override\n                public void getValue(int id, TypedValue outValue, boolean resolveRefs) throws NotFoundException {\n                    Log.i(\"ThemeTest\", \"Getting value for resource \" + getResourceName(id));\n                    super.getValue(id, outValue, resolveRefs);\n                    if(id == R.color.theme_colour){\n                        outValue.data = Color.GREEN;\n                    }\n                }\n\n                @Override\n                public int getColor(int id) throws NotFoundException {\n                    Log.i(\"ThemeTest\", \"Getting colour for resource \" + getResourceName(id));\n                    if(id == R.color.theme_colour){\n                        return Color.GREEN;\n                    }\n                    else{\n                        return super.getColor(id);\n                    }\n                }\n            };\n        }\n\n        @Override\n        public Resources getResources() {\n            return resources;\n        }\n    }\n}\n</code></pre>\n\n<p>The problem is, it doesn't work!  The logging shows calls to load resources such as layout/activity_main and mipmap/ic_launcher however color/theme_colour is never loaded.  It seems that the context is being used to create the window and action bar, but not the activity's content view. </p>\n\n<p>My questions is - <strong>Where does the layout inflator load resources from, if not the activities context?</strong>  I would also like to know - <strong>Is there a workable way to override the loading of colours and drawables at runtime?</strong></p>\n\n<h1>A word about alternative approaches</h1>\n\n<p>I know its possible to theme an app from CMS data other ways - for example we could create a method <code>getCMSColour(String key)</code> then inside our <code>onCreate()</code> we have a bunch of code along the lines of:</p>\n\n<pre><code>myTextView.setTextColour(getCMSColour(\"heading_text_colour\"))\n</code></pre>\n\n<p>A similar approach could be taken for drawables, strings, etc.  However this would result in a large amount of boilerplate code - all of which needs maintaining.  When modifying the UI it would be easy to forget to set the colour on a particular view.</p>\n\n<p>Wrapping the Context to return our own custom values is 'cleaner' and less prone to breakage.  I would like to understand why it doesn't work, before exploring alternative approaches.</p>\n", "tags": ["java", "android", "android-activity"], "title": "Overriding resources at runtime", "answers": [{"body": "<p>After searching for a quite long time I finally found an excellent solution.    </p>\n\n<pre><code>protected void redefineStringResourceId(final String resourceName, final int newId) {\n        try {\n            final Field field = R.string.class.getDeclaredField(resourceName);\n            field.setAccessible(true);\n            field.set(null, newId);\n        } catch (Exception e) {\n            Log.e(getClass().getName(), \"Couldn't redefine resource id\", e);\n        }\n    }\n</code></pre>\n\n<p>For a sample test,</p>\n\n<pre><code>private Object initialStringValue() {\n                // TODO Auto-generated method stub\n                 return getString(R.string.initial_value);\n            }\n</code></pre>\n\n<p>And inside the Main activity,</p>\n\n<pre><code>before.setText(getString(R.string.before, initialStringValue()));\n\n            final String resourceName = getResources().getResourceEntryName(R.string.initial_value);\n            redefineStringResourceId(resourceName, R.string.evil_value);\n\n            after.setText(getString(R.string.after, initialStringValue()));\n</code></pre>\n\n<p>This solution was originally posted by, <strong>Roman Zhilich</strong> </p>\n\n<p><a href=\"https://github.com/RomanZhilich/android-resource-hack/blob/master/src/tk/dweller/resourcehack/ResourceHackActivity.java\" rel=\"nofollow\">ResourceHackActivity</a></p>\n", "title": "Overriding resources at runtime", "tags": ["java", "android", "android-activity"], "link": "http://stackoverflow.com/questions/30522698/overriding-resources-at-runtime/30644561#30644561", "question_id": 30522698, "answer_id": 30644561}, {"body": "<p>While \"dynamically overriding resources\" might seem the straightforward solution to your problem, I believe a cleaner approach would be to use the official data binding implementation <a href=\"https://developer.android.com/tools/data-binding/guide.html\">https://developer.android.com/tools/data-binding/guide.html</a> since it doesn't imply <em>hacking</em> the android way.</p>\n\n<p>You could pass your branding settings using a POJO. Instead of using static styles like <code>@color/button_color</code> you could write <code>@{brandingConfig.buttonColor}</code> and bind your views with the desired values. With a proper activity hierarchy, it shouldn't add too much boilerplate.</p>\n\n<p>This also gives you the ability to change more complex elements on your layout, i.e.: including different layouts on other layout depending on the branding settings, making your UI highly configurable without too much effort.</p>\n", "title": "Overriding resources at runtime", "tags": ["java", "android", "android-activity"], "link": "http://stackoverflow.com/questions/30522698/overriding-resources-at-runtime/30748291#30748291", "question_id": 30522698, "answer_id": 30748291}, {"body": "<p>Having basically the same issue as Luke Sleeman, I had a look at how the <code>LayoutInflater</code> is creating the views when parsing the XML layout files. I focused on checking why the string resources assigned to the text attribute of <code>TextView</code>s inside the layout are not overwritten by my <code>Resources</code> object returned by a custom <code>ContextWrapper</code>. At the same time, the strings are overwritten as expected when setting the text or hint programatically through <code>TextView.setText()</code> or <code>TextView.setHint()</code>.\n<br/><br/>\nThis is how the text is received as a <code>CharSequence</code> inside the constructor of the <code>TextView</code> (sdk v 23.0.1): </p>\n\n<pre><code>// android.widget.TextView.java, line 973\ntext = a.getText(attr);\n</code></pre>\n\n<p>where <code>a</code> is a <code>TypedArray</code> obtained earlier:</p>\n\n<pre><code> // android.widget.TextView.java, line 721\n a = theme.obtainStyledAttributes(attrs, com.android.internal.R.styleable.TextView, defStyleAttr, defStyleRes);\n</code></pre>\n\n<p>The <code>Theme.obtainStyledAttributes()</code> method calls a native method on the <code>AssetManager</code>:</p>\n\n<pre><code>// android.content.res.Resources.java line 1593\npublic TypedArray obtainStyledAttributes(AttributeSet set,\n            @StyleableRes int[] attrs, @AttrRes int defStyleAttr, @StyleRes int defStyleRes) {\n...\n        AssetManager.applyStyle(mTheme, defStyleAttr, defStyleRes,\n                parser != null ? parser.mParseState : 0, attrs, array.mData, array.mIndices);\n\n...\n</code></pre>\n\n<p>And this is the declaration of the <code>AssetManager.applyStyle()</code> method:</p>\n\n<pre><code>// android.content.res.AssetManager.java, line 746\n/*package*/ native static final boolean applyStyle(long theme,\n        int defStyleAttr, int defStyleRes, long xmlParser,\n        int[] inAttrs, int[] outValues, int[] outIndices);\n</code></pre>\n\n<p><br/>\nIn conclusion, even though the <code>LayoutInflater</code> is using the correct extended context, when inflating the XML layouts and creating the views, the methods <code>Resources.getText()</code> (on the resources returned by the custom <code>ContextWrapper</code>) are never called to get the strings for the text attribute, because the constructor of the <code>TextView</code> is using the <code>AssetManager</code> directly to load the resources for the attributes. The same might be valid for other views and attributes.\n<br/></p>\n", "title": "Overriding resources at runtime", "tags": ["java", "android", "android-activity"], "link": "http://stackoverflow.com/questions/30522698/overriding-resources-at-runtime/33693516#33693516", "question_id": 30522698, "answer_id": 33693516}], "creation_date": 1432881376, "score": 46, "link": "http://stackoverflow.com/questions/30522698/overriding-resources-at-runtime", "question_id": 30522698}, {"body": "<p>I want to sum a list of integers. It works as follows, but the syntax does not feel right. Could the code be optimized?</p>\n\n<pre><code>Map&lt;String, Integer&gt; integers;\nintegers.values().stream().mapToInt(i -&gt; i).sum();\n</code></pre>\n", "tags": ["java", "java-8", "java-stream"], "title": "How to sum a list of integers with java streams?", "answers": [{"body": "<p>From the <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html\">docs</a></p>\n\n<blockquote>\n  <p>Reduction operations\n  A reduction operation (also called a fold) takes a sequence of input elements and combines them into a single summary result by repeated application of a combining operation, such as finding the sum or maximum of a set of numbers, or accumulating elements into a list. The streams classes have multiple forms of general reduction operations, called reduce() and collect(), as well as multiple specialized reduction forms such as sum(), max(), or count().</p>\n  \n  <p>Of course, such operations can be readily implemented as simple sequential loops, as in:</p>\n\n<pre><code>int sum = 0;\nfor (int x : numbers) {\n   sum += x;\n}\n</code></pre>\n  \n  <p>However, there are good reasons to prefer a reduce operation over a mutative accumulation such as the above. Not only is a reduction \"more abstract\" -- it operates on the stream as a whole rather than individual elements -- but a properly constructed reduce operation is inherently parallelizable, so long as the function(s) used to process the elements are associative and stateless. For example, given a stream of numbers for which we want to find the sum, we can write:</p>\n\n<pre><code>int sum = numbers.stream().reduce(0, (x,y) -&gt; x+y);\n</code></pre>\n  \n  <p>or:</p>\n\n<pre><code>int sum = numbers.stream().reduce(0, Integer::sum);\n</code></pre>\n  \n  <p>These reduction operations can run safely in parallel with almost no modification:</p>\n\n<pre><code>int sum = numbers.parallelStream().reduce(0, Integer::sum);\n</code></pre>\n</blockquote>\n\n<p>So, for a map you would use:</p>\n\n<pre><code>integers.values().stream().mapToInt(i -&gt; i).reduce(0, (x,y) -&gt; x+y);\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>integers.values().stream().reduce(0, Integer::sum);\n</code></pre>\n", "title": "How to sum a list of integers with java streams?", "tags": ["java", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/30125296/how-to-sum-a-list-of-integers-with-java-streams/30125423#30125423", "question_id": 30125296, "answer_id": 30125423}, {"body": "<p>I suggest 2 more options:</p>\n\n<pre><code>integers.values().stream().mapToInt(Integer::intValue).sum();\nintegers.values().stream().collect(summingInt(Integer::intValue));\n</code></pre>\n\n<p>The second one uses <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#summingInt-java.util.function.ToIntFunction-\" rel=\"nofollow\"><code>Collectors.summingInt()</code></a> collector.</p>\n\n<hr>\n\n<p>Besides, Java 8 introduces a very effective <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/atomic/LongAdder.html\" rel=\"nofollow\"><code>LongAdder</code></a> accumulator designed to speed-up summarizing in parallel streams and multi-thread environments. Here, it may be used as follows:</p>\n\n<pre><code>LongAdder a = new LongAdder();\nmap.values().parallelStream().forEach(a::add);\nsum = a.intValue();\n</code></pre>\n", "title": "How to sum a list of integers with java streams?", "tags": ["java", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/30125296/how-to-sum-a-list-of-integers-with-java-streams/30125487#30125487", "question_id": 30125296, "answer_id": 30125487}, {"body": "<p>This will work, but the <code>i -&gt; i</code> is doing some automatic unboxing which is why it \"feels\" strange. Either of the following will work and better explain what the compiler is doing under the hood with your original syntax:</p>\n\n<pre><code>integers.values().stream().mapToInt(i -&gt; i.intValue()).sum();\nintegers.values().stream().mapToInt(Integer::intValue).sum();\n</code></pre>\n", "title": "How to sum a list of integers with java streams?", "tags": ["java", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/30125296/how-to-sum-a-list-of-integers-with-java-streams/30125523#30125523", "question_id": 30125296, "answer_id": 30125523}, {"body": "<p>You can use reduce method:</p>\n\n<pre><code>long creditAmountSum = result.stream().map(e -&gt; e.getCreditAmount()).reduce(0L, (x, y) -&gt; x + y);\n</code></pre>\n", "title": "How to sum a list of integers with java streams?", "tags": ["java", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/30125296/how-to-sum-a-list-of-integers-with-java-streams/35035659#35035659", "question_id": 30125296, "answer_id": 35035659}], "creation_date": 1431092349, "score": 45, "link": "http://stackoverflow.com/questions/30125296/how-to-sum-a-list-of-integers-with-java-streams", "question_id": 30125296}, {"body": "<p>I ran the following code in my Android app</p>\n\n<pre><code>Integer.parseInt(\"+91\");\n</code></pre>\n\n<p>In <a href=\"https://en.wikipedia.org/wiki/Android_Lollipop\">Android 5.0</a> (Lollipop), it <strong><em>did not</em></strong> throw any exception as <code>+91</code> is an integer. But in <a href=\"https://en.wikipedia.org/wiki/Android_version_history#Android_4.4_KitKat_.28API_level_19.29\">Android 4.4.x</a> (KitKat) and lower versions it throws:</p>\n\n<blockquote>\n  <p>NumberFormatException : Invalid Int : \"+91\"</p>\n</blockquote>\n\n<p>How is the version of Android causing this difference?</p>\n", "tags": ["java", "android"], "title": "Integer.parseInt and NumberFormatException on Android", "answers": [{"body": "<p>It works after Java 7.</p>\n\n<p>Android 5 introduces the new parseInt feature like the Java 7 version - <a href=\"http://stackoverflow.com/a/30071813/4807777\">Martin Nordholts's answer points exactly the revision</a></p>\n\n<p>So this means that your Lollipop uses a newer sdk based on Java 7  which has the parseInt method with the sign handling part too. </p>\n\n<p>KitKat did introduce <a href=\"http://moonlightbox.logdown.com/posts/2015/04/17/android-kitkat-support-java-7\" rel=\"nofollow\">some java 7 features</a> into Android sdk 19, but not the new parseInt. Lower versions use an earlier implementation of parseInt (Java 6's version) so they will obviously fail as well.</p>\n\n<hr>\n\n<p>The difference between parseInt implementations : \n <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Integer.html#parseInt%28java.lang.String%29\" rel=\"nofollow\">Java 6 parseInt documentation</a> vs <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#parseInt%28java.lang.String%29\" rel=\"nofollow\">Java 7 parseInt documentation</a></p>\n", "title": "Integer.parseInt and NumberFormatException on Android", "tags": ["java", "android"], "link": "http://stackoverflow.com/questions/30071576/integer-parseint-and-numberformatexception-on-android/30071702#30071702", "question_id": 30071576, "answer_id": 30071702}, {"body": "<p>This behaviour is actually part of Java 7, as the <a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#parseInt(java.lang.String)\">docs</a> state: </p>\n\n<blockquote>\n  <p>Parses the string argument as a signed decimal integer. The characters\n  in the string must all be decimal digits, except that the first\n  character may be an ASCII minus sign '-' ('\\u002D') to indicate a\n  negative value or an ASCII plus sign '+' ('\\u002B') to indicate a\n  positive value.</p>\n</blockquote>\n\n<p><em>However</em>, in Java 6 only the <code>-</code> symbol was accepted. </p>\n\n<p>The Android SDK 21+ has JDK7 dependencies, which is presumably why you are experiencing this behaviour. </p>\n", "title": "Integer.parseInt and NumberFormatException on Android", "tags": ["java", "android"], "link": "http://stackoverflow.com/questions/30071576/integer-parseint-and-numberformatexception-on-android/30071741#30071741", "question_id": 30071576, "answer_id": 30071741}, {"body": "<p>Support for explicit <code>+</code> was added in <a href=\"https://android.googlesource.com/platform/libcore/+/6b40837ee3a023bba698c38fd6d6e46ae0065a55%5E!/\">this commit</a>:</p>\n\n<pre><code>Support explicit + in Byte, Short, Integer, Long.\n\nBug: 5239391\nChange-Id: I2b25228815d70d570d537db0ed9b5b759f25b5a3\n</code></pre>\n\n<p>which has been included starting with <code>android-5.0.0_r1</code>. If you have fetched the Git repository, you can verify with:</p>\n\n<pre><code>git tag --contains 6b40837ee3a023bba698c38fd6d6e46ae0065a55\n</code></pre>\n\n<p>which gives you</p>\n\n<pre><code>android-5.0.0_r1\nandroid-5.0.0_r2\nandroid-5.0.0_r3\n...\n</code></pre>\n\n<p>Even though documentation can give insights into <em>why</em> the change was made (to achieve Java 7 behavior as other answers point out), analyzing the history of the source code gives the most accurate answer to <em>when</em> the behavior changed, since documentation does not necessarily match implementation.</p>\n", "title": "Integer.parseInt and NumberFormatException on Android", "tags": ["java", "android"], "link": "http://stackoverflow.com/questions/30071576/integer-parseint-and-numberformatexception-on-android/30071813#30071813", "question_id": 30071576, "answer_id": 30071813}, {"body": "<p>This is a Java-specific issue. As you see in the documentation, <a href=\"https://docs.oracle.com/javase/6/docs/api/java/lang/Integer.html#parseInt(java.lang.String)\" rel=\"nofollow\">Java 6</a> allows <code>-</code> and <a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#parseInt(java.lang.String)\" rel=\"nofollow\">Java 7</a> allows <code>+</code> or <code>-</code>. </p>\n\n<p>With Android Version 19 (KitKat) Java 7 is supported, so you don't get this error. I recommend not to use <code>+</code>, because you only need a sign if you have a negative integer.</p>\n", "title": "Integer.parseInt and NumberFormatException on Android", "tags": ["java", "android"], "link": "http://stackoverflow.com/questions/30071576/integer-parseint-and-numberformatexception-on-android/30071993#30071993", "question_id": 30071576, "answer_id": 30071993}], "creation_date": 1430901500, "score": 44, "link": "http://stackoverflow.com/questions/30071576/integer-parseint-and-numberformatexception-on-android", "question_id": 30071576}, {"body": "<p>The below code produces the output <code>middle</code>. Can anyone explain in detail how this is happening? </p>\n\n<p>Is it because the declaration of \"inner\" version of <code>class A</code> comes after the instance of <code>class A</code> is created in the <code>go()</code> method?</p>\n\n<pre><code>class A {\n    void m() {\n        System.out.println(\"outer\");\n    }\n}\n\npublic class MethodLocalVSInner {\n    public static void main(String[] args) {\n        new MethodLocalVSInner().go();\n    }\n\n    void go() {\n        new A().m();\n        class A {\n            void m() {\n                System.out.println(\"inner\");\n            }\n        }\n    }\n\n    class A {\n        void m() {\n            System.out.println(\"middle\");\n        }\n    }\n}\n</code></pre>\n", "tags": ["java", "inner-classes"], "title": "Method local inner class vs inner class", "answers": [{"body": "<p>I guess you expected the local class method to be invoked. That didn't happen, because you're using <code>new A()</code> outside the scope of local class. So, it accesses the next closer candidate in scope, that would be the inner class. From <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-6.html#jls-6.3\">JLS &sect;6.3</a>:</p>\n\n<blockquote>\n  <p>The scope of a local class declaration immediately enclosed by a block (\u00a714.2) is the rest of the immediately enclosing block, including its own class declaration.</p>\n</blockquote>\n\n<p>Thus, <code>new A()</code> in the first line of method, will not access the local class appearing after it. If you move the class declaration before that, you'll get the expected output.</p>\n\n<p>Also see <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-14.html#jls-14.3\">JLS &sect;14.3</a>, which contains similar example.</p>\n", "title": "Method local inner class vs inner class", "tags": ["java", "inner-classes"], "link": "http://stackoverflow.com/questions/29620714/method-local-inner-class-vs-inner-class/29620803#29620803", "question_id": 29620714, "answer_id": 29620803}, {"body": "<p>You are getting the output \"middle\" because of the order in which you have your code.  Since the method-scoped <code>class A</code> occurs <strong>after</strong> your call to <code>new A()</code>, you are getting the output \"middle\".  If you switch around the order as follows, you will get the output \"inner\":</p>\n\n<pre><code>void go() {\n    class A {\n        void m() {\n            System.out.println(\"inner\");\n        }\n    }\n    new A().m();\n}\n</code></pre>\n\n<p><strong>Output:</strong></p>\n\n<p><code>inner</code></p>\n\n<p>The order of precedence for instantiating <code>class A</code>, from high to low, is:</p>\n\n<ol>\n<li>block</li>\n<li>method</li>\n<li>class</li>\n<li>package</li>\n</ol>\n\n<p>Please have a look at the official <a href=\"https://docs.oracle.com/javase/specs/jls/se7/html/jls-8.html#jls-8.1.3\">Java Language Specification discussing inner classes</a> for more information.</p>\n", "title": "Method local inner class vs inner class", "tags": ["java", "inner-classes"], "link": "http://stackoverflow.com/questions/29620714/method-local-inner-class-vs-inner-class/29620807#29620807", "question_id": 29620714, "answer_id": 29620807}, {"body": "<p>You are calling <code>go</code> method using an instance of <code>MethodLocalVSInner</code></p>\n\n<p>Inside the go method\nyou are creating an instance of <code>A()</code>\nhere since you are not explicitly import the outer <code>A class</code> and immediate inner class is after the method calling statement, JVM is picking the <code>inner class A</code> which is in the class level of <code>MethodLocalVSInner</code> and execute the go method inside that</p>\n", "title": "Method local inner class vs inner class", "tags": ["java", "inner-classes"], "link": "http://stackoverflow.com/questions/29620714/method-local-inner-class-vs-inner-class/29620812#29620812", "question_id": 29620714, "answer_id": 29620812}, {"body": "<p>Case 1: </p>\n\n<pre><code>void go() {\n        new A().m();\n        class A {\n            void m() {\n                System.out.println(\"inner\");\n            }\n        }\n    }\n</code></pre>\n\n<p>In this case if you running your method outside the scope of local class. That  why it will print <code>middle</code></p>\n\n<p>Case 2: </p>\n\n<pre><code>void go() {\n        class A {\n            void m() {\n                System.out.println(\"inner\");\n            }\n        }\n        new A().m();\n    }\n</code></pre>\n\n<p>In this case it will print <code>inner</code> becase class is now in the scope.</p>\n", "title": "Method local inner class vs inner class", "tags": ["java", "inner-classes"], "link": "http://stackoverflow.com/questions/29620714/method-local-inner-class-vs-inner-class/29620837#29620837", "question_id": 29620714, "answer_id": 29620837}, {"body": "<p>in method :</p>\n\n<pre><code> void go() {\n    new A().m();\n    class A {\n        void m() {\n            System.out.println(\"inner\");\n        }\n    }\n}\n</code></pre>\n\n<p>when method is started executing, first line will be executed \n<code>new A().m();</code></p>\n\n<p>and because inner class is already in scope so object for that class will be created and <code>m</code> method will be called for <code>inner class</code> not for <code>local method class</code> because its still not in scope. that is why you are getting <code>middle</code> as output.</p>\n\n<p>but if you change your method as :</p>\n\n<pre><code> void go() {\n\n    class A {\n        void m() {\n            System.out.println(\"inner\");\n        }\n    }\n   new A().m();\n}\n</code></pre>\n\n<p>Your local method class will now be in scope and will have higher preference so you will get output now <code>inner</code>. </p>\n", "title": "Method local inner class vs inner class", "tags": ["java", "inner-classes"], "link": "http://stackoverflow.com/questions/29620714/method-local-inner-class-vs-inner-class/29620900#29620900", "question_id": 29620714, "answer_id": 29620900}, {"body": "<p>The reason <code>inner</code> doesn't get printed is (<a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-6.html#jls-6.3\" rel=\"nofollow\">6.3</a>):</p>\n\n<blockquote>\n  <p>The scope of a local class declaration immediately enclosed by a block is the rest of the immediately enclosing block, including its own class declaration.</p>\n</blockquote>\n\n<p>(A class declared inside a method is called a local class.)</p>\n\n<p>So <code>A</code> can't refer to the local class, because the expression <code>new A()</code> happens before its declaration. In other words, local classes have similar scope to local variables.</p>\n\n<p>The reason <code>middle</code> gets printed instead of <code>outer</code> is that the inner class <code>A</code> <em>shadows</em> the top-level class <code>A</code> (<a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-6.html#jls-6.4.1\" rel=\"nofollow\">6.4.1</a>):</p>\n\n<blockquote>\n  <p>A declaration <code>d</code> of a type named <code>n</code> shadows the declarations of any other types named <code>n</code> that are in scope [&hellip;] of <code>d</code>.</p>\n</blockquote>\n\n<p>This means that anywhere in the body of <code>MethodLocalVSInner</code>, the unqualified <code>A</code> must refer to the inner class.</p>\n\n<p>If you are familiar with shadowing of member variables e.g.:</p>\n\n<pre><code>class Example {\n    int x;\n    void setX(int x) {\n        //       \u250c 'x' refers to the local method parameter\n        this.x = x;\n    }\n}\n</code></pre>\n\n<p>Essentially the same thing is going on with class declarations.</p>\n", "title": "Method local inner class vs inner class", "tags": ["java", "inner-classes"], "link": "http://stackoverflow.com/questions/29620714/method-local-inner-class-vs-inner-class/29621069#29621069", "question_id": 29620714, "answer_id": 29621069}], "creation_date": 1428993495, "score": 44, "link": "http://stackoverflow.com/questions/29620714/method-local-inner-class-vs-inner-class", "question_id": 29620714}, {"body": "<p>I have created a Google app engine project using an maven archetype project with the Datanucleus JPA provider, essentially following the Google app engine documentation.</p>\n\n<p>Everything works fine when running the maven goal \"test\".</p>\n\n<p>Now I had to integrate the project into Android studio and wanted to migrate the build script to gradle. I copied all dependencies from the <code>pom.xml</code> to the <code>build.gradle</code> and the project builds fine. However, all tests that access the Google datastore fail.</p>\n\n<p>During test output I get the following message:</p>\n\n<blockquote>\n  <p>Warning:No META-INF/persistence.xml files were found in the CLASSPATH of the current thread!</p>\n</blockquote>\n\n<p>I checked the <code>build</code> folder which is created during the build and no folder contains the <code>persistence.xml</code> from <code>src/main/webapp/WEB-INF/classes/META-INF</code></p>\n\n<p>Using maven, however, it is correctly put in the <code>target/myapp-1.0-SNAPSHOT/WEB-INF/classes/META-INF</code> folder.</p>\n\n<p>I have tried copying the <code>persistence.xml</code> using a gradle copy task into various locations, such as <code>build/classes/META-INF</code> <code>build/classes/webapp/WEB-INF/classes/META-INF</code> and so on, but nothing worked.</p>\n", "tags": ["java", "google-app-engine", "jpa", "junit", "gradle"], "title": "Where do gradle unit tests for Google app engine expect persistence.xml?", "answers": [{"body": "<p>Just because the file is placed in a directory doesn't automatically mean it's in the CLASSPATH.</p>\n\n<p>Place the META-INF folder containing <code>persistence.xml</code> in <code>/src/main/resources</code>.</p>\n", "title": "Where do gradle unit tests for Google app engine expect persistence.xml?", "tags": ["java", "google-app-engine", "jpa", "junit", "gradle"], "link": "http://stackoverflow.com/questions/29230881/where-do-gradle-unit-tests-for-google-app-engine-expect-persistence-xml/29310302#29310302", "question_id": 29230881, "answer_id": 29310302}], "creation_date": 1427194921, "score": 44, "link": "http://stackoverflow.com/questions/29230881/where-do-gradle-unit-tests-for-google-app-engine-expect-persistence-xml", "question_id": 29230881}, {"body": "<p>The following is taken from a job interview: </p>\n\n<blockquote>\n  <p>In a given array, which contains integers, each number repeats itself\n  once except for one, which doesn't repeat. Write a function that finds\n  the number that doesn't repeat.</p>\n</blockquote>\n\n<p>I thought about using an HashSet, but it might complicate everything...</p>\n\n<p>Any ideas of a simple solution?</p>\n", "tags": ["java", "arrays", "algorithm"], "title": "How to find the only number in an array that doesn&#39;t occur twice", "answers": [{"body": "<p>You can define an integer \"result\" initialized to 0, and then you do some bitwise operations by applying a XOR logic to all elements in your array.</p>\n\n<p>At the end, \"result\" will be equal to the only element that appears only one time.</p>\n\n<pre><code>result = 0\nfor i in array:\n  result ^= i\nreturn result\n</code></pre>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Bitwise_operation#XOR\">http://en.wikipedia.org/wiki/Bitwise_operation#XOR</a></p>\n\n<p>For instance, if your array contains the elements [3, 4, 5, 3, 4], the algorithm will return</p>\n\n<p>3 ^ 4 ^ 5 ^ 3 ^ 4</p>\n\n<p>But the XOR operator ^ is associative and commutative, so the result will be also equal to:</p>\n\n<p>(3 ^ 3) ^ (4 ^ 4) ^ 5</p>\n\n<p>Since i ^ i = 0 for any integer i, and i ^ 0 = i, you have</p>\n\n<p>(3 ^ 3) ^ (4 ^ 4) ^ 5 = 0 ^ 0 ^ 5 = 5</p>\n", "title": "How to find the only number in an array that doesn&#39;t occur twice", "tags": ["java", "arrays", "algorithm"], "link": "http://stackoverflow.com/questions/29333689/how-to-find-the-only-number-in-an-array-that-doesnt-occur-twice/29333723#29333723", "question_id": 29333689, "answer_id": 29333723}, {"body": "<p>I've seen this question before. It's a trick. Assuming all the repeated numbers appear exactly twice you do this:</p>\n\n<pre><code>int result = 0;\nfor (int a : arr)\n    result ^= a;\n</code></pre>\n", "title": "How to find the only number in an array that doesn&#39;t occur twice", "tags": ["java", "arrays", "algorithm"], "link": "http://stackoverflow.com/questions/29333689/how-to-find-the-only-number-in-an-array-that-doesnt-occur-twice/29333744#29333744", "question_id": 29333689, "answer_id": 29333744}, {"body": "<p>Here's a slightly less obfuscated way to do it:</p>\n\n<pre><code>List list = Arrays.asList(a);\nint result;\nfor(int i:a)\n{\n    if(list.indexOf(i)==list.lastIndexOf(i))\n    {\n        result = i;\n        break;\n    }\n}\n</code></pre>\n\n<p><code>result</code> will contain the non-repeated value.</p>\n", "title": "How to find the only number in an array that doesn&#39;t occur twice", "tags": ["java", "arrays", "algorithm"], "link": "http://stackoverflow.com/questions/29333689/how-to-find-the-only-number-in-an-array-that-doesnt-occur-twice/29333805#29333805", "question_id": 29333689, "answer_id": 29333805}, {"body": "<p>My intuition in Python is to use the <code>collections.Counter</code> as a multiset:</p>\n\n<pre><code>&gt;&gt;&gt; import collections\n&gt;&gt;&gt; r = xrange(100) # range in python 3\n&gt;&gt;&gt; arr = (list(r) + list(r))\n&gt;&gt;&gt; arr.pop(-34)\n66\n</code></pre>\n\n<p>So we have a list of integers from 0-99 twice except for 66.</p>\n\n<pre><code>&gt;&gt;&gt; counts = collections.Counter(arr)\n&gt;&gt;&gt; counts.most_common()[-1][0]\n66\n</code></pre>\n\n<p>Which gets the least common (last item) from a list sorted by frequency.</p>\n\n<p>Such a function would be:</p>\n\n<pre><code>def least_common(arr):\n    '''return the element of an array that is least common'''\n    return collections.Counter(arr).most_common()[-1][0]\n</code></pre>\n\n<p>And usage:</p>\n\n<pre><code>&gt;&gt;&gt; least_common([1,2,3,1,2,3,4,6,4,5,6])\n5\n</code></pre>\n\n<p>This is a generalized solution that works for any number of items.</p>\n", "title": "How to find the only number in an array that doesn&#39;t occur twice", "tags": ["java", "arrays", "algorithm"], "link": "http://stackoverflow.com/questions/29333689/how-to-find-the-only-number-in-an-array-that-doesnt-occur-twice/29337734#29337734", "question_id": 29333689, "answer_id": 29337734}, {"body": "<p>The best answer is already given (XOR-ing the elements), this is to provide an alternative, more general way.</p>\n\n<p>If the input array would be sorted (we can make it sorted), we could simply iterate over the elements in pairs (stepping by 2) and if the elements of the \"pair\" are different, we're done:</p>\n\n<pre><code>public static int findSingle(int[] arr) {\n    Arrays.sort(arr);\n    for (int i = 0, max = arr.length - 1; i &lt; max; i += 2)\n        if (arr[i] != arr[i + 1])\n            return arr[i];\n    return arr[arr.length - 1]; // Single element is the last\n}\n</code></pre>\n\n<p><strong>Note:</strong> This solution sorts the input array; if this is unwanted or not allowed, it can be cloned first:</p>\n\n<pre><code>arr = arr.clone();\n</code></pre>\n\n<p>If input array is sorted, the <code>Arrays.sort(arr)</code> call can be left out of course.</p>\n\n<h3>Generalization</h3>\n\n<p>The advantage of this solution is that it can be applied to all types which are comparable and therefore can be sorted (types which implement <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html\" rel=\"nofollow\"><code>Comparable</code></a>), for example <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\" rel=\"nofollow\"><code>String</code></a> or <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Date.html\" rel=\"nofollow\"><code>Date</code></a>. The <code>XOR</code> solution is limited to numbers only.</p>\n\n<p>Here is a slightly modified version which takes an input array of any element type which is comparable:</p>\n\n<pre><code>public static &lt;E extends Comparable&lt;E&gt;&gt; E findSingle(E[] arr) {\n    Arrays.sort(arr);\n    for (int i = 0, max = arr.length - 1; i &lt; max; i += 2)\n        if (arr[i].compareTo(arr[i + 1]) != 0)\n            return arr[i];\n    return arr[arr.length - 1]; // Single element is the last\n}\n</code></pre>\n\n<p><em>Note: In most cases you could also use <code>arr[i].equals(arr[i + 1])</code> to compare elements instead of using <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html#compareTo-T-\" rel=\"nofollow\"><code>Comparable.compareTo()</code></a>. For details read the linked javadoc. Quoting the relevant part:</em></p>\n\n<blockquote>\n  <p>It is strongly recommended, but <em>not</em> strictly required that <code>(x.compareTo(y)==0) == (x.equals(y))</code>. Generally speaking, any class that implements the <code>Comparable</code> interface and violates this condition should clearly indicate this fact. The recommended language is \"Note: this class has a natural ordering that is inconsistent with equals.\"</p>\n</blockquote>\n\n<p>Now you can call this with a <code>String[]</code> for example:</p>\n\n<pre><code>System.out.println(findSingle(new String[] { \"1\", \"2\", \"3\", \"1\", \"3\" }));\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>2\n</code></pre>\n\n<p><strong>Final notes:</strong></p>\n\n<p>Starting from the problem statement it is not checked whether there are more than 2 occurrences of the elements, and neither is whether the array length is odd. Also the second example doesn't check for <code>null</code> values, these are to be added if necessary.</p>\n", "title": "How to find the only number in an array that doesn&#39;t occur twice", "tags": ["java", "arrays", "algorithm"], "link": "http://stackoverflow.com/questions/29333689/how-to-find-the-only-number-in-an-array-that-doesnt-occur-twice/29341981#29341981", "question_id": 29333689, "answer_id": 29341981}, {"body": "<p>Yet another \"ordinary\" solution (in Java):</p>\n\n<pre><code>public static int findSingle(int[] array) {\n\n    Set&lt;Integer&gt; set = new HashSet&lt;Integer&gt;();\n\n    for (int item : array) {\n        if (!set.remove(item)) {\n            set.add(item);\n        }\n    }       \n\n    assert set.size() == 1;\n\n    return set.iterator().next();\n}\n</code></pre>\n\n<p>In my opinion the solution with XOR is kind of beautiful.</p>\n\n<p>This one is not as fast as XOR but usage of HashSet makes it close to O(n). And it is certainly more readable.</p>\n", "title": "How to find the only number in an array that doesn&#39;t occur twice", "tags": ["java", "arrays", "algorithm"], "link": "http://stackoverflow.com/questions/29333689/how-to-find-the-only-number-in-an-array-that-doesnt-occur-twice/29345980#29345980", "question_id": 29333689, "answer_id": 29345980}], "creation_date": 1427656858, "score": 43, "link": "http://stackoverflow.com/questions/29333689/how-to-find-the-only-number-in-an-array-that-doesnt-occur-twice", "question_id": 29333689}, {"body": "<p>I am using <a href=\"http://square.github.io/retrofit/\">Retrofit</a> library in my app, and I'd like to set a timeout of 60 seconds. Does Retrofit have some way to do this? </p>\n\n<p>I set Retrofit this way:</p>\n\n<pre><code>RestAdapter restAdapter = new RestAdapter.Builder()\n    .setServer(BuildConfig.BASE_URL)\n    .setConverter(new GsonConverter(gson))\n    .build();\n</code></pre>\n\n<p>How can I set the timeout?</p>\n", "tags": ["java", "android", "timeout", "retrofit"], "title": "How to set timeout in Retrofit library?", "answers": [{"body": "<p>You can set timeouts on the underlying HTTP client. If you don't specify a client, Retrofit will create one with default connect and read timeouts.  To set your own timeouts, you need to configure your own client and supply it to the <code>RestAdapter.Builder</code>.</p>\n\n<p>An option is to use the <a href=\"http://square.github.io/okhttp/\">OkHttp</a> client, also from Square.</p>\n\n<p><strong>1. Add the library dependency</strong></p>\n\n<p>In the build.gradle, include this line:</p>\n\n<pre><code>compile 'com.squareup.okhttp:okhttp:x.x.x'\n</code></pre>\n\n<p><em>Where <code>x.x.x</code> is the desired library version.</em></p>\n\n<p><strong>2. Set the client</strong> </p>\n\n<p>For example, if you want to set a timeout of 60 seconds, do this way for Retrofit before version 2 and Okhttp before version 3 (<em>the new versions are in the edits</em>):</p>\n\n<pre><code>public RestAdapter providesRestAdapter(Gson gson) {\n    final OkHttpClient okHttpClient = new OkHttpClient();\n    okHttpClient.setReadTimeout(60, TimeUnit.SECONDS);\n    okHttpClient.setConnectTimeout(60, TimeUnit.SECONDS);\n\n    return new RestAdapter.Builder()\n        .setEndpoint(BuildConfig.BASE_URL)\n        .setConverter(new GsonConverter(gson))\n        .setClient(new OkClient(okHttpClient))\n        .build();\n}\n</code></pre>\n\n<p><strong>EDIT 1</strong></p>\n\n<p>For okhttp versions since <code>3.x.x</code>, you have to set the client using the builder pattern, this way:</p>\n\n<pre><code>final OkHttpClient okHttpClient = new OkHttpClient.Builder()\n        .readTimeout(60, TimeUnit.SECONDS)\n        .connectTimeout(60, TimeUnit.SECONDS)\n        .build();\n</code></pre>\n\n<p>More info in <a href=\"https://github.com/square/okhttp/wiki/Recipes#timeouts\">Timeouts</a></p>\n\n<p><strong>EDIT 2</strong></p>\n\n<p>Retrofit versions since <code>2.x.x</code> also uses the builder pattern, so change the return block above to this:</p>\n\n<pre><code>return new Retrofit.Builder()\n    .baseUrl(BuildConfig.BASE_URL)\n    .addConverterFactory(GsonConverterFactory.create())\n    .client(okHttpClient)\n    .build();\n</code></pre>\n\n<p>If using a code like my <code>providesRestAdapter</code> method, then change the method return type to <a href=\"https://square.github.io/retrofit/2.x/retrofit/\">Retrofit</a>.</p>\n\n<p>More info in <a href=\"https://futurestud.io/blog/retrofit-2-upgrade-guide-from-1-9\">Retrofit 2 \u2014 Upgrade Guide from 1.9\n</a></p>\n\n<hr>\n\n<p>ps: If your minSdkVersion is greater than 8, you can use <code>TimeUnit.MINUTES</code>:</p>\n\n<pre><code>okHttpClient.setReadTimeout(1, TimeUnit.MINUTES);\nokHttpClient.setConnectTimeout(1, TimeUnit.MINUTES);\n</code></pre>\n\n<p>For more details about the units, see <a href=\"http://developer.android.com/reference/java/util/concurrent/TimeUnit.html\">TimeUnit</a>.</p>\n", "title": "How to set timeout in Retrofit library?", "tags": ["java", "android", "timeout", "retrofit"], "link": "http://stackoverflow.com/questions/29380844/how-to-set-timeout-in-retrofit-library/29380845#29380845", "question_id": 29380844, "answer_id": 29380845}, {"body": "<p>I am using <strong>Retrofit 1.9</strong> to obtain a <strong>XML</strong>.</p>\n\n<pre><code>public class ServicioConexionRetrofitXML {\n\n    public static final String API_BASE_URL = new GestorPreferencias().getPreferencias().getHost();\n    public static final long tiempoMaximoRespuestaSegundos = 60;\n    public static final long tiempoMaximoLecturaSegundos = 100;\n    public static final OkHttpClient clienteOkHttp = new OkHttpClient();\n\n\n    private static RestAdapter.Builder builder = new RestAdapter.Builder().\n            setEndpoint(API_BASE_URL).\n            setClient(new OkClient(clienteOkHttp)).setConverter(new SimpleXMLConverter());\n\n\n    public static &lt;S&gt; S createService(Class&lt;S&gt; serviceClass) {\n        clienteOkHttp.setConnectTimeout(tiempoMaximoRespuestaSegundos, TimeUnit.SECONDS);\n        clienteOkHttp.setReadTimeout(tiempoMaximoLecturaSegundos, TimeUnit.SECONDS);\n        RestAdapter adapter = builder.build();\n        return adapter.create(serviceClass);\n    }\n\n}\n</code></pre>\n\n<p>If you are using Retrofit 1.9.0 and okhttp 2.6.0, add to your Gradle file.</p>\n\n<pre><code>    compile 'com.squareup.retrofit:retrofit:1.9.0'\n    compile 'com.squareup.okhttp:okhttp:2.6.0'\n    // Librer\u00eda de retrofit para XML converter (Simple) Se excluyen grupos para que no entre\n    // en conflicto.\n    compile('com.squareup.retrofit:converter-simplexml:1.9.0') {\n        exclude group: 'xpp3', module: 'xpp3'\n        exclude group: 'stax', module: 'stax-api'\n        exclude group: 'stax', module: 'stax'\n    }\n</code></pre>\n\n<p>Note: If you need to fetch a <strong>JSON</strong>, just remove from code above.</p>\n\n<pre><code>.setConverter(new SimpleXMLConverter())\n</code></pre>\n", "title": "How to set timeout in Retrofit library?", "tags": ["java", "android", "timeout", "retrofit"], "link": "http://stackoverflow.com/questions/29380844/how-to-set-timeout-in-retrofit-library/36596425#36596425", "question_id": 29380844, "answer_id": 36596425}, {"body": "<p>These answers were outdated for me, so here's how it worked out.</p>\n\n<p>Add OkHttp, in my case the version is <code>3.3.1</code>:</p>\n\n<pre><code>compile 'com.squareup.okhttp3:okhttp:3.3.1'\n</code></pre>\n\n<p>Then before building your Retrofit, do this:</p>\n\n<pre><code>OkHttpClient okHttpClient = new OkHttpClient().newBuilder()\n    .connectTimeout(60, TimeUnit.SECONDS)\n    .readTimeout(60, TimeUnit.SECONDS)\n    .writeTimeout(60, TimeUnit.SECONDS)\n    .build();\nreturn new Retrofit.Builder()\n    .baseUrl(baseUrl)\n    .client(okHttpClient)\n    .addConverterFactory(GsonConverterFactory.create())\n    .build();\n</code></pre>\n", "title": "How to set timeout in Retrofit library?", "tags": ["java", "android", "timeout", "retrofit"], "link": "http://stackoverflow.com/questions/29380844/how-to-set-timeout-in-retrofit-library/38050694#38050694", "question_id": 29380844, "answer_id": 38050694}], "creation_date": 1427847972, "score": 43, "link": "http://stackoverflow.com/questions/29380844/how-to-set-timeout-in-retrofit-library", "question_id": 29380844}, {"body": "<p>In the below code:</p>\n\n<pre><code>final int a;\na=2;\nbyte b=a;   // error: possible loss of precision\n</code></pre>\n\n<p>Why do I get this error? Isn't <code>a</code> final variable compile time constant expression and hence implicitly narrowed to byte during the assignment?</p>\n\n<p>In other words isn't the above code equivalent to:</p>\n\n<pre><code>final int a=2;\nbyte b=a;\n</code></pre>\n", "tags": ["java", "expression", "constants", "compile-time-constant", "narrowing"], "title": "Why isn&#39;t a final variable always a constant expression?", "answers": [{"body": "<p>From the <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.12.4\">JLS</a></p>\n\n<blockquote>\n  <p>A <em>blank <code>final</code></em> is a <code>final</code> variable whose declaration lacks an initializer. </p>\n  \n  <p>A constant variable is a <code>final</code> variable of primitive type or type\n  <code>String</code> that is initialized with a constant expression (\u00a715.28).</p>\n</blockquote>\n\n<p>Your variable </p>\n\n<pre><code>final int a;\n</code></pre>\n\n<p>is a <em>blank <code>final</code></em> variable. It lacks an initializer. The second paragraph doesn't apply to it because it is not initialized at declaration. It therefore isn't a constant expression.</p>\n\n<p>This applies to fields as well.</p>\n", "title": "Why isn&#39;t a final variable always a constant expression?", "tags": ["java", "expression", "constants", "compile-time-constant", "narrowing"], "link": "http://stackoverflow.com/questions/30785220/why-isnt-a-final-variable-always-a-constant-expression/30785291#30785291", "question_id": 30785220, "answer_id": 30785291}, {"body": "<p>As final variables can be delayed initialized and the compiler cannot determine for b that it has a value in the case branch. </p>\n", "title": "Why isn&#39;t a final variable always a constant expression?", "tags": ["java", "expression", "constants", "compile-time-constant", "narrowing"], "link": "http://stackoverflow.com/questions/30785220/why-isnt-a-final-variable-always-a-constant-expression/30785313#30785313", "question_id": 30785220, "answer_id": 30785313}, {"body": "<p>The compiler isn't that smart.</p>\n\n<p><em>We</em> can tell that the value will always be 2. But what if we had something like this?</p>\n\n<pre><code>class ABC{\n    final int a;\n\n    public ABC(){\n       if(Math.random() &lt; .5){\n          a = 2;\n       }\n       else{\n          a = 12345;\n       }\n\n       byte b = a;\n    }\n}\n</code></pre>\n\n<p>The compiler is not smart enough to tell these two cases apart, so it gives you an error instead.</p>\n", "title": "Why isn&#39;t a final variable always a constant expression?", "tags": ["java", "expression", "constants", "compile-time-constant", "narrowing"], "link": "http://stackoverflow.com/questions/30785220/why-isnt-a-final-variable-always-a-constant-expression/30785465#30785465", "question_id": 30785220, "answer_id": 30785465}], "creation_date": 1434036835, "score": 43, "link": "http://stackoverflow.com/questions/30785220/why-isnt-a-final-variable-always-a-constant-expression", "question_id": 30785220}, {"body": "<p>I have created an AIR application which has two windows. First one is main window(spark Windowed Application) and the second one is a component(spark window). I am using Java to capture the Desktop screen with Flex-Java Bridge Flerry.</p>\n\n<p>Here is the code to capture the screen which is:-</p>\n\n<pre><code>HDC hdcWindow = User32.INSTANCE.GetDC(hWnd);\nHDC hdcMemDC = GDI32.INSTANCE.CreateCompatibleDC(hdcWindow);\nRECT bounds = new RECT();\nUser32Extra.INSTANCE.GetClientRect(hWnd, bounds);\n\nint width = bounds.right;\nint height = bounds.bottom ;\nHBITMAP hBitmap = GDI32.INSTANCE.CreateCompatibleBitmap(hdcWindow, width, height);\n\nHANDLE hOld = GDI32.INSTANCE.SelectObject(hdcMemDC, hBitmap);\nGDI32Extra.INSTANCE.BitBlt(hdcMemDC, 0, 0, width, height, hdcWindow, 0, 0, WinGDIExtra.SRCCOPY);\n</code></pre>\n\n<p>I don't want the main flex window to be captured. It should skipped(transparent) from being captured.</p>\n\n<p>Is that possible by changing the configuration of flex project?</p>\n\n<p>If it cannot be done in flex and java, in what platform it can be done?</p>\n", "tags": ["java", "winapi", "flex", "air", "jna"], "title": "Skip window from being captured", "answers": [{"body": "<p>If I understood correctly your problem.</p>\n\n<p>You can use built in Flex/as3 function to take a screenshot of the entire application or a particular component then convert into bytearray and PngEncoder (or JPGEncoder if you prefer), than save it...</p>\n\n<p>Here's an example:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;s:WindowedApplication xmlns:fx=\"http://ns.adobe.com/mxml/2009\" \n                       xmlns:s=\"library://ns.adobe.com/flex/spark\" \n                       xmlns:mx=\"library://ns.adobe.com/flex/mx\"&gt;   \n    &lt;fx:Script&gt;\n        &lt;![CDATA[\n            import mx.graphics.codec.PNGEncoder;\n\n            private function takeSnapshot(comp:DisplayObject):void {\n                var bitmapData:BitmapData = new BitmapData(comp.width,comp.height,false,0x00000000);\n                bitmapData.draw(comp, new Matrix());\n\n                var fileStream:FileStream = new FileStream();\n                fileStream.open(File.desktopDirectory.resolvePath(\"screenshot.png\"), FileMode.UPDATE);\n                fileStream.writeBytes(new PNGEncoder().encode(bitmapData));\n            }\n        ]]&gt;\n    &lt;/fx:Script&gt;    \n    &lt;s:BorderContainer width=\"100%\" height=\"100%\" backgroundColor=\"#ff00ff\"&gt;\n        &lt;s:Label text=\"this text and box should be saved\"/&gt;\n        &lt;s:BorderContainer width=\"25%\" height=\"25%\" backgroundColor=\"#ffff00\" horizontalCenter=\"0\"\n                           id=\"extended\"\n                           verticalCenter=\"0\"&gt;\n            &lt;s:Label text=\"this text and box should be saved\" width=\"100%\" maxDisplayedLines=\"5\"/&gt;\n        &lt;/s:BorderContainer&gt;\n    &lt;/s:BorderContainer&gt;    \n    &lt;s:Button bottom=\"0\" left=\"0\" label=\"screen\" click=\"takeSnapshot(extended)\"/&gt;\n&lt;/s:WindowedApplication&gt;\n</code></pre>\n\n<p><strong>EDIT:</strong></p>\n\n<p>As I thought I misunderstood the request..</p>\n\n<p>The only way I can think of is to:</p>\n\n<ol>\n<li>Minimize the application (<code>this.minimize();</code>) or setting the alpha to 0 (<code>this.alpha=0</code>).</li>\n<li>Take the screenshot</li>\n<li>Maximize the application (<code>this.maximize();</code>) or setting the alpha to 1 (<code>this.alpha=0</code>).</li>\n</ol>\n", "title": "Skip window from being captured", "tags": ["java", "winapi", "flex", "air", "jna"], "link": "http://stackoverflow.com/questions/30905868/skip-window-from-being-captured/32247664#32247664", "question_id": 30905868, "answer_id": 32247664}, {"body": "<p>A solution I can think of is that you can move the \"unwanted\" windows out of capture are like. (Below 0,0 coordinate) with some code like this.</p>\n\n<pre><code>public void foo(){\nthis.xCoord = -this.xCoord;\nthis.yCoord = -this.yCoord;\n}   \n//Im not sure about the exact syntax but you should get the idea.\n</code></pre>\n\n<p>and than </p>\n\n<pre><code>foo();\ncapture();\nfoo();\n</code></pre>\n", "title": "Skip window from being captured", "tags": ["java", "winapi", "flex", "air", "jna"], "link": "http://stackoverflow.com/questions/30905868/skip-window-from-being-captured/32624694#32624694", "question_id": 30905868, "answer_id": 32624694}], "creation_date": 1434597027, "score": 43, "link": "http://stackoverflow.com/questions/30905868/skip-window-from-being-captured", "question_id": 30905868}, {"body": "<p>In the following code, a dowcast to an apparently incompatible type passes compilation:</p>\n\n<pre><code>public class Item {\n  List&lt;Item&gt; items() { return asList(new Item()); }\n  Item m = (Item) items();\n}\n</code></pre>\n\n<p><code>Item</code> and <code>List&lt;Item&gt;</code> are disparate types so the cast can never succeed. Why did the compiler allow this?</p>\n", "tags": ["java", "casting"], "title": "Unexpected type safety violation", "answers": [{"body": "<p>A <code>List&lt;Item&gt;</code> could very well be an Item. See for example:</p>\n\n<pre><code>public class Foo extends Item implements List&lt;Item&gt; {\n    // implement required methods\n}\n</code></pre>\n\n<p>A cast tells the compiler: \"I know you can't be sure that this is a object of type Item, but I know better than you, so please compile\". The compiler will only refuse to compile that if it's impossible for the returned object to be an instance of Item (like, for example, <code>Integer</code> can't ever be a <code>String</code>)</p>\n\n<p>At runtime, the type of the actual object returned by the method will be checked, and if it's not actually an object of type Item, you'll get a ClassCastException.</p>\n", "title": "Unexpected type safety violation", "tags": ["java", "casting"], "link": "http://stackoverflow.com/questions/27747562/unexpected-type-safety-violation/27747702#27747702", "question_id": 27747562, "answer_id": 27747702}, {"body": "<p>The relevant specification entry <a href=\"http://docs.oracle.com/javase/specs/jls/se7/html/jls-5.html#jls-5.5.1\">can be found here</a>.  Let S be the source, and T the target; in this case, the source is the interface, and the target is a non-final type.</p>\n\n<blockquote>\n  <p>If S is an interface type:</p>\n  \n  <ul>\n  <li><p>If T is an array type, then S must be the type <code>java.io.Serializable</code> or <code>Cloneable</code> (the only interfaces implemented by arrays), or a\n  compile-time error occurs.</p></li>\n  <li><p>If T is a type that is not final (\u00a78.1.1), then if there exists a supertype X of T, and a supertype Y of S, such that both X and Y are\n  provably distinct parameterized types, and that the erasures of X and\n  Y are the same, a compile-time error occurs.</p>\n  \n  <p>Otherwise, the cast is always legal at compile time (because even if\n  T does not implement S, a subclass of T might).</p></li>\n  </ul>\n</blockquote>\n\n<p>It took a few readings to get this straight, but let's start from the top.</p>\n\n<ul>\n<li>The target is not an array, so this rule doesn't apply.</li>\n<li>Our target does not have a parameterized type associated with it, so this rule would not apply.</li>\n<li>This means that the cast will always be legal at compile time, for the reason illustrated by JB Nizet:  our target class may not implement the source, but a subclass <em>might</em>.</li>\n</ul>\n\n<p>This also means that it won't work if we cast to a final class that doesn't implement the interface, per this snippet:</p>\n\n<blockquote>\n  <p><strong>If S is not a parameterized type or a raw type, then T must implement S, or a compile-time error occurs.</strong></p>\n</blockquote>\n", "title": "Unexpected type safety violation", "tags": ["java", "casting"], "link": "http://stackoverflow.com/questions/27747562/unexpected-type-safety-violation/27747837#27747837", "question_id": 27747562, "answer_id": 27747837}], "creation_date": 1420227306, "score": 42, "link": "http://stackoverflow.com/questions/27747562/unexpected-type-safety-violation", "question_id": 27747562}, {"body": "<p>I understand the use of the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/annotation/Native.html\" rel=\"nofollow\"><code>@Native</code></a> annotation.</p>\n\n<blockquote>\n  <p>Indicates that a field defining a constant value may be referenced\n  from native code. The annotation may be used as a hint by tools that\n  generate native header files to determine whether a header file is\n  required, and if so, what declarations it should contain.</p>\n</blockquote>\n\n<p>However, while reading the java source code I noticed that in the class <code>Integer</code> and <code>Long</code> the <code>SIZE</code> constant is <code>@Native</code> while it is not for the Float, Byte, Double, Short and Character.</p>\n\n<p>Note that the SIZE constant represents the number of bits used to represent the actual value.</p>\n\n<pre><code>public static final int SIZE = 8;//Byte\npublic static final int SIZE = 16;//Character\npublic static final int SIZE = 16;//Short\npublic static final int SIZE = 32;//Float\n@Native public static final int SIZE = 32;//Integer\n@Native public static final int SIZE = 64;//Long\npublic static final int SIZE = 64;//Double\n</code></pre>\n\n<hr>\n\n<p><strong>Edit :</strong> I just noticed that this also applies for <code>MAX_VALUE</code> and <code>MIN_VALUE</code> of the same classes.</p>\n\n<hr>\n\n<p><strong>Edit 2 :</strong> I had spare time to do some research on this, and looking at the header files of the Long, Float etc. classes I had hope to figure out that the constants were not present in the other headers, but unfortunately they are.</p>\n\n<pre><code>static const jint SIZE = 8L;//java/lang/Byte.h\nstatic const jint SIZE = 16L;//java/lang/Character.h\nstatic const jint SIZE = 16L;//java/lang/Short.h\nstatic const jint SIZE = 32L;//java/lang/Float.h\nstatic const jint SIZE = 32L;//java/lang/Integer.h\nstatic const jint SIZE = 64L;//java/lang/Double.h\nstatic const jint SIZE = 64L;//java/lang/Long.h\n</code></pre>\n\n<hr>\n\n<p><strong>Why is the SIZE constant only @Native for Integer and Long ?</strong></p>\n", "tags": ["java", "java-8"], "title": "Why is the SIZE constant only @Native for Integer and Long?", "answers": [{"body": "<p>Looking at the issue and fix, it looks like this has been done to resolve a handling of a header file generation for special classes in jigsaw</p>\n\n<p>Jigsaw is a module system designated to use in Java SE Platform and JDK. More details <a href=\"http://openjdk.java.net/projects/jigsaw/\" rel=\"nofollow\">here</a> </p>\n\n<p>Here is a corresponding <a href=\"http://hg.openjdk.java.net/build-infra/jdk8/jdk/rev/9fe81cc79176\" rel=\"nofollow\">changeset</a>. You can see a comment,</p>\n\n<blockquote>\n  <p>Special handling of header file generation for classes in the jigsaw\n  base module which currently can't add the annotaion\n  GenerateNativeHeaders. For these specific classes the java file and\n  the class have the same names which enables shortcutting the\n  dependencies.</p>\n</blockquote>\n\n<p>From the changeset I see that for the sake of purpose in addition to<code>java.lang.Integer</code> and <code>java.lang.Long</code> , also some properties in <code>java.net.SocketOptions</code>, <code>sun.nio.ch.IOStatus</code>, <code>java.io.FileSystem</code> have been changed to <code>@Native</code>. </p>\n\n<p>So I assume only those were needed to solve the dependency with jigsaw.</p>\n", "title": "Why is the SIZE constant only @Native for Integer and Long?", "tags": ["java", "java-8"], "link": "http://stackoverflow.com/questions/28770822/why-is-the-size-constant-only-native-for-integer-and-long/28816219#28816219", "question_id": 28770822, "answer_id": 28816219}, {"body": "<p><strong>TLDR</strong>: Jump to the conclusion</p>\n\n<hr>\n\n<blockquote>\n  <p>Why is the SIZE constant only @Native for Integer and Long?</p>\n</blockquote>\n\n<h2>A brief history of <code>@Native</code></h2>\n\n<p>I made some search on the mailing lists. I found some interesting things.</p>\n\n<p><strong>At first</strong> an annotation (<a href=\"http://mail.openjdk.java.net/pipermail/build-infra-dev/2011-November/000234.html\">1</a> <a href=\"http://mail.openjdk.java.net/pipermail/build-infra-dev/2011-November/000234.html\">2</a>) <a href=\"http://hg.openjdk.java.net/build-infra/jdk7/langtools/file/5d684df20334/src/share/classes/javax/tools/ForceNativeHeader.java\"><code>javax.tools.annotation.ForceNativeHeader</code></a>\n was introduced to</p>\n\n<blockquote>\n  <p>to trigger javah on a class.</p>\n</blockquote>\n\n<p>It is used by <a href=\"http://hg.openjdk.java.net/build-infra/jdk7/langtools/file/5d684df20334/src/share/classes/com/sun/tools/javac/processing/NativeapiVisitor.java\"><code>com.sun.tools.javac.processing.NativeapiVisitor</code></a>. By looking at the code we can see that the native header is generated if the class declare some native methods or if the class is annotated <code>@ForceNativeHeader</code>.</p>\n\n<p><strong>Later</strong> this annotation was renamed to <a href=\"http://hg.openjdk.java.net/build-infra/jdk8/langtools/file/27344710eaf1/src/share/classes/javax/tools/annotation/GenerateNativeHeader.java\"><code>GenerateNativeHeader</code></a> (<a href=\"http://mail.openjdk.java.net/pipermail/build-infra-dev/2012-March/000546.html\">1</a> <a href=\"http://mail.openjdk.java.net/pipermail/build-infra-dev/2012-March/000545.html\">2</a>).</p>\n\n<p><strong>Then</strong> <a href=\"http://cr.openjdk.java.net/~ohair/openjdk8/generateHeaders1/webrev/\">this annotation was added to several types</a> (especially <a href=\"http://cr.openjdk.java.net/~ohair/openjdk8/generateHeaders1/webrev/src/share/classes/java/lang/Integer.java.udiff.html\">Integer</a> and <a href=\"http://cr.openjdk.java.net/~ohair/openjdk8/generateHeaders1/webrev/src/share/classes/java/lang/Long.java.udiff.html\">Long</a>) with an interresting comment:</p>\n\n<pre><code>/* No native methods here, but the constants are needed in the supporting JNI code */\n@GenerateNativeHeader\npublic final class Long extends Number implements Comparable&lt;Long&gt; {...\n</code></pre>\n\n<p><strong>But</strong> by adding this annotation it add <a href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=8000404\">a problematic dependency</a> from base module to the module containing javax.tools. So the annotation were removed from <a href=\"http://cr.openjdk.java.net/~erikj/build-infra-m1.1/jdk-base-headers/src/share/classes/java/lang/Integer.java.udiff.html\"><code>Integer</code></a> and <a href=\"http://cr.openjdk.java.net/~erikj/build-infra-m1.1/jdk-base-headers/src/share/classes/java/lang/Long.java.udiff.html\"><code>Long</code></a> and these files were explicitly <a href=\"http://cr.openjdk.java.net/~erikj/build-infra-m1.1/jdk-base-headers/makefiles/CompileJavaClasses.gmk.udiff.html\">added to the build process</a> since the header were no more automatically generated... a <a href=\"http://mail.openjdk.java.net/pipermail/build-dev/2012-June/006238.html\">\"(hopefully temporary) hack\"</a>.</p>\n\n<p><strong>So</strong> a new annotation <code>java.lang.annotation.Native</code> <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/rev/369709a13823\">was created</a> and used in <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/f92ab6dbbff8/src/share/classes/java/lang/Integer.java\">Integer</a> and <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/f92ab6dbbff8/src/share/classes/java/lang/Long.java\">Long</a>. The annotation was set a <code>TargetType FIELD</code>.</p>\n\n<blockquote>\n  <p>the annotation should be directly applied to the constant fields that need to be exported -- and not to the class as a whole. </p>\n</blockquote>\n\n<hr>\n\n<p>All the purpose of this stuff is:</p>\n\n<blockquote>\n  <p>javac could generate native headers for classes containing native methods.</p>\n</blockquote>\n\n<p>It is the case of <code>Integer</code> and <code>Long</code></p>\n\n<p>this was a part of the <a href=\"http://openjdk.java.net/jeps/139\">JEP 139: Enhance javac to Improve Build Speed</a>:</p>\n\n<blockquote>\n  <p>javah will be automatically run on any class that contains native methods and the generated C-headers will be put in the (-h) headerdir. A new annotation @ForceNativeHeader is used for classes that have final static primitives that need to be exported to JNI, but no native methods.</p>\n</blockquote>\n\n<hr>\n\n<h2>A basic experimentation</h2>\n\n<p>I made a basic experimentation on the JDK. I clone the open-jdk forest and i successfully build it. As expected the header files where generated for <code>Integer</code> and <code>Long</code> (thanks to <code>@Native</code>) and for <code>Float</code> and <code>Double</code> (thanks to their native methods) but not for <code>Byte</code>, <code>Short</code>...</p>\n\n<pre><code>    ls -l build/macosx-x86_64-normal-server-release/support/headers/java.base/java_lang_*\n    ...\n    java_lang_Double.h\n    java_lang_Float.h\n    java_lang_Integer.h\n    java_lang_Long.h\n    java_lang_Object.h\n    java_lang_Package.h\n    ...\n</code></pre>\n\n<p>Then i tried to remove the <code>@Native</code> from the <code>Integer</code> fields and i tried to build again the <code>jdk</code> but i get an error:</p>\n\n<pre><code>jdk/src/java.base/unix/native/libnio/ch/FileChannelImpl.c:35:10: fatal error: 'java_lang_Integer.h' file not found\n#include \"java_lang_Integer.h\"\n         ^\n1 error generated.\n</code></pre>\n\n<p>logically since the header have not been generated.</p>\n\n<p>I have also confirmed that <code>java_lang_Integer.h</code> is included <strong>in several c and cpp files</strong>:</p>\n\n<pre><code>find .  \\( -name \"*.c\" -o -name \"*.cpp\" \\) -exec grep \"java_lang_Integer.h\" {} \\; -print\n#include \"java_lang_Integer.h\"\n./jdk/src/java.base/unix/native/libnio/ch/FileChannelImpl.c\n#include \"java_lang_Integer.h\"\n./jdk/src/java.base/unix/native/libnio/ch/IOUtil.c\n#include \"java_lang_Integer.h\"\n./jdk/src/java.base/windows/native/libnet/TwoStacksPlainSocketImpl.c\n#include \"java_lang_Integer.h\"\n./jdk/src/java.base/windows/native/libnio/ch/FileChannelImpl.c\n#include &lt;java_lang_Integer.h&gt;\n./jdk/src/java.desktop/windows/native/libawt/windows/awt_Frame.cpp\n</code></pre>\n\n<p>like <code>Long</code></p>\n\n<pre><code>find .  \\( -name \"*.c\" -o -name \"*.cpp\" \\) -exec grep \"java_lang_Long.h\" {} \\; -print\n#include \"java_lang_Long.h\"\n./jdk/src/java.base/unix/native/libnio/ch/FileDispatcherImpl.c\n</code></pre>\n\n<p>like <code>Float</code></p>\n\n<pre><code>find .  \\( -name \"*.c\" -o -name \"*.cpp\" \\) -exec grep \"java_lang_Float.h\" {} \\; -print\n#include \"java_lang_Float.h\"\n./jdk/src/java.base/share/native/libjava/Float.c\n#include \"java_lang_Float.h\"\n./jdk/src/java.base/share/native/libjava/ObjectInputStream.c\n#include \"java_lang_Float.h\"\n./jdk/src/java.base/share/native/libjava/ObjectOutputStream.c\n</code></pre>\n\n<p>and like <code>Double</code></p>\n\n<pre><code>find .  \\( -name \"*.c\" -o -name \"*.cpp\" \\) -exec grep \"java_lang_Double.h\" {} \\; -print\n#include \"java_lang_Double.h\"\n./jdk/src/java.base/share/native/libjava/Double.c\n#include \"java_lang_Double.h\"\n./jdk/src/java.base/share/native/libjava/ObjectInputStream.c\n#include \"java_lang_Double.h\"\n./jdk/src/java.base/share/native/libjava/ObjectOutputStream.c\n</code></pre>\n\n<p>but neither <code>Short</code></p>\n\n<pre><code>find .  \\( -name \"*.c\" -o -name \"*.cpp\" \\) -exec grep \"java_lang_Short.h\" {} \\; -print\n</code></pre>\n\n<p>nor <code>Byte</code>, nor <code>Character</code>.</p>\n\n<hr>\n\n<h1>Conclusion</h1>\n\n<p>Among all these types, <strong>only</strong> <code>Integer</code>, <code>Long</code>, <code>Float</code>, <code>Double</code> are used in the <strong>native source code of the jdk</strong>.</p>\n\n<p>And only the <code>Integer</code> and <code>Long</code> fields are annotated with <strong><code>@Native</code></strong> because they have <strong>no native methods</strong> (as opposed to <code>Float</code> and <code>Double</code>)</p>\n", "title": "Why is the SIZE constant only @Native for Integer and Long?", "tags": ["java", "java-8"], "link": "http://stackoverflow.com/questions/28770822/why-is-the-size-constant-only-native-for-integer-and-long/28853754#28853754", "question_id": 28770822, "answer_id": 28853754}, {"body": "<p><a href=\"http://stackoverflow.com/a/28853754/1594933\">gontard got it right</a>.</p>\n\n<p>javac will (optionally) generate a native header file if a class contains native methods or fields annotated with @Native.</p>\n\n<p>This was a new feature for javac in JDK 8, and is nothing to do with the Jigsaw module system, as some have conjectured. The JDK build system notes when javac has generated new/different native header files, and uses that to only trigger recompilation of native code when necessary.</p>\n\n<p>Jonathan Gibbons,\nOracle's javac team</p>\n", "title": "Why is the SIZE constant only @Native for Integer and Long?", "tags": ["java", "java-8"], "link": "http://stackoverflow.com/questions/28770822/why-is-the-size-constant-only-native-for-integer-and-long/28892487#28892487", "question_id": 28770822, "answer_id": 28892487}], "creation_date": 1425057894, "score": 42, "link": "http://stackoverflow.com/questions/28770822/why-is-the-size-constant-only-native-for-integer-and-long", "question_id": 28770822}, {"body": "<p>I am looking at few maven tutorial videos and then ran this command after installing maven</p>\n\n<pre><code>mvn archetype:create -DgroupId=com.di.maven -DartifactId=hello-world\n</code></pre>\n\n<p>The build fails and throws the following error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Failed to execute goal org.apache.maven.plugins:maven-archetype-plugin:2.3:create \n(default-cli) on project standalone-pom: Unable to parse configuration of mojo \norg.apache.maven.plugins:maven-archetype-plugin:2.3:create for parameter #: Abstract \nclass or interface 'org.apache.maven.artifact.repository.ArtifactRepository' cannot be \ninstantiated -&gt; [Help 1]\n</code></pre>\n\n<p>What is the reason and how can I fix it? I am running as an user in Ubuntu</p>\n", "tags": ["java", "maven"], "title": "Unable to create a new maven hello-world project", "answers": [{"body": "<p>change <code>create</code> to <code>generate</code></p>\n\n<pre><code>mvn archetype:generate -DgroupId=com.di.maven -DartifactId=hello-world -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false\n</code></pre>\n", "title": "Unable to create a new maven hello-world project", "tags": ["java", "maven"], "link": "http://stackoverflow.com/questions/29147329/unable-to-create-a-new-maven-hello-world-project/29147687#29147687", "question_id": 29147329, "answer_id": 29147687}, {"body": "<p><code>mvn archetype:create</code> is deprecated in Maven 3.0.5 and beyond, <a href=\"http://maven.apache.org/archetype/maven-archetype-plugin/create-mojo.html\">as mentioned in the documentation</a></p>\n\n<p>Use <code>mvn archetype:generate</code> instead:</p>\n\n<blockquote>\n  <p><code>mvn archetype:generate -DarchetypeArtifactId=maven-archetype-archetype</code></p>\n</blockquote>\n\n<p>This is an interactive command and will ask for values like <code>groupId</code>, <code>artifactId</code>, <code>version</code>, etc. You can also specify these values in the command and choose the non-interactive mode.</p>\n", "title": "Unable to create a new maven hello-world project", "tags": ["java", "maven"], "link": "http://stackoverflow.com/questions/29147329/unable-to-create-a-new-maven-hello-world-project/29545955#29545955", "question_id": 29147329, "answer_id": 29545955}, {"body": "<p>Add</p>\n\n<pre><code>    &lt;dependency&gt;\n     &lt;groupId&gt;commons-lang&lt;/groupId&gt;\n     &lt;artifactId&gt;commons-lang&lt;/artifactId&gt;\n     &lt;version&gt;2.3&lt;/version&gt;\n    &lt;/dependency&gt;\n</code></pre>\n\n<p>to your pom file in</p>\n\n<pre><code> {user.home}/.m2/repository/org/apache/maven/plugins/maven-archetype-plugin/2.3\n</code></pre>\n", "title": "Unable to create a new maven hello-world project", "tags": ["java", "maven"], "link": "http://stackoverflow.com/questions/29147329/unable-to-create-a-new-maven-hello-world-project/30650982#30650982", "question_id": 29147329, "answer_id": 30650982}, {"body": "<pre><code>mvn archetype:generate \n  -DgroupId=com.biswajit.maven \n  -DartifactId=com.biswajit.maven \n  -DarchetypeArtifactId=maven-archetype-quickstart \n  -DinteractiveMode=false\n</code></pre>\n\n<p>Create does not work in maven 3.0.X or beyond. So use generate instead of create</p>\n", "title": "Unable to create a new maven hello-world project", "tags": ["java", "maven"], "link": "http://stackoverflow.com/questions/29147329/unable-to-create-a-new-maven-hello-world-project/33194479#33194479", "question_id": 29147329, "answer_id": 33194479}], "creation_date": 1426775598, "score": 41, "link": "http://stackoverflow.com/questions/29147329/unable-to-create-a-new-maven-hello-world-project", "question_id": 29147329}, {"body": "<p>I used to define a set of related constants like <code>Bundle</code> keys together in an interface like below:</p>\n\n<pre><code>public interface From{\n    String LOGIN_SCREEN = \"LoginSCreen\";\n    String NOTIFICATION = \"Notification\";\n    String WIDGET = \"widget\";\n}\n</code></pre>\n\n<p>This provides me a nicer way to group related constants together and used them by making a static import (not implements). I know <code>Android</code> framework also uses the constants in same way like <code>Toast.LENTH_LONG</code>, <code>View.GONE</code>.</p>\n\n<p>However, I often feel that the <code>Java Enums</code> provide much better and powerful way to represent the constant.</p>\n\n<p>But is there a performence issue in using <code>enums</code> on <code>Android</code>?</p>\n\n<p>With a bit of research I ended up in confusion. From this question \n<a href=\"http://stackoverflow.com/questions/5143256/why-was-avoid-enums-where-you-only-need-ints-removed-from-androids-performanc\">\"Avoid Enums Where You Only Need Ints\u201d removed from Android's performance tips?</a> it's clear that <code>Google</code> has removed <em>\"Avoid enums\"</em> from its performance tips, but from it's official training docs <a href=\"http://developer.android.com/training/articles/memory.html#Overhead\">Be aware of memory overhead</a> section it clearly says: <em>\"Enums often require more than twice as much memory as static constants. You should strictly avoid using enums on Android.\"</em> Is this still holds good? (say in <code>Java</code> versions after 1.6)</p>\n\n<p>One more issue that I observed is to send <code>enums</code> across <code>intents</code> using <code>Bundle</code> I should send them by serializing (i.e <code>putSerializable()</code>, that I think an expensive operation compared to primitive <code>putString()</code> method, eventhough <code>enums</code> provides it for free).</p>\n\n<p>Can someone please clarify which one is the best way to represent the same in <code>Android</code>? Should I strictly avoid using <code>enums</code> on <code>Android</code>?</p>\n", "tags": ["java", "android", "enums"], "title": "Should I strictly avoid using enums on Android?", "answers": [{"body": "<blockquote>\n  <p>Should I strictly avoid using enums on Android?</p>\n</blockquote>\n\n<p>No. \"<em>Strictly</em>\" means they are so bad, they should not be used at all. Possibly a performance issues might arise in an extreme situation like <em>many many many</em> (thousands or millions of) operations with enums (consecutive on the ui thread). Far more common are the network I/O operations that should <em>strictly</em> happen in a background thread.\nThe most common usage of enums is probably some kind of type check - whether an object is <em>this</em> or <em>that</em> which is so fast you won't be able to notice a difference between a single comparison of enums and a comparison of integers.</p>\n\n<blockquote>\n  <p>Can someone please clarify which one is the best way to represent the same in Android?</p>\n</blockquote>\n\n<p>There is no general rule of thumb for this. Use whatever works for you and helps you get your app ready. Optimize later - after you notice there's a bottleneck that slows some aspect of your app.</p>\n", "title": "Should I strictly avoid using enums on Android?", "tags": ["java", "android", "enums"], "link": "http://stackoverflow.com/questions/29183904/should-i-strictly-avoid-using-enums-on-android/29968015#29968015", "question_id": 29183904, "answer_id": 29968015}, {"body": "<p>Use <code>enum</code> when you need its features. <strong>Don't avoid it <em>strictly</em></strong>.</p>\n\n<p>Java enum is more powerful, but if you don't need its features, use constants, they occupy less space and they can be primitive itself.</p>\n\n<h3>When to use enum:</h3>\n\n<ul>\n<li>type checking - you can accept <em>only</em> listed values, and they are not continuous (see below what I call <em>continuous</em> here)</li>\n<li><p>method overloading - every enum constant has its own implementation of a method<br/></p>\n\n<pre><code>public enum UnitConverter{\n    METERS{\n        @Override\n        public double toMiles(final double meters){\n            return meters * 0.00062137D;\n        }\n\n        @Override\n        public double toMeters(final double meters){\n            return meters;\n        }\n    },\n    MILES{\n        @Override\n        public double toMiles(final double miles){\n            return miles;\n        }\n\n        @Override\n        public double toMeters(final double miles){\n            return miles / 0.00062137D;\n        }\n    };\n\n    public abstract double toMiles(double unit);\n    public abstract double toMeters(double unit);\n}\n</code></pre></li>\n<li><p>more data - your one constant contains more than one information that cannot be put in one variable</p></li>\n<li>complicated data - your constant need methods to operate on the data</li>\n</ul>\n\n<h3>When <em>not</em> to use enum:</h3>\n\n<ul>\n<li>you can accept all values of one type, and your constants contain only these most used</li>\n<li><p>you can accept continuous data<br/></p>\n\n<pre><code>public class Month{\n    public static final int JANUARY = 1;\n    public static final int FEBRUARY = 2;\n    public static final int MARCH = 3;\n    ...\n\n    public static String getName(final int month){\n        if(month &lt;= 0 || month &gt; 12){\n            throw new IllegalArgumentException(\"Invalid month number: \" + month);\n        }\n\n        ...\n    }\n}\n</code></pre></li>\n<li>for names (like in your example)</li>\n<li>for everything other that really doesn't need an enum</li>\n</ul>\n\n<h3>Enum occupies more space</h3>\n\n<ul>\n<li>a single reference to an enum constant occupy <strong>4 bytes</strong></li>\n<li>every enum constant occupy space that is a <strong>sum of its fields' sizes</strong> aligned to 8 bytes + <strong>overhead of the object</strong></li>\n<li>the enum class itself occupy some space</li>\n</ul>\n\n<h3>Constant occupies less space</h3>\n\n<ul>\n<li>a constant doesn't have a reference so it's a pure data (even if it's a reference, then enum instance would be a reference to another reference)</li>\n<li>constants may be added to existing class - it's not necessary to add another class</li>\n<li>constants may be inlined; it brings extended compile-time features (such as null checking, finding dead code etc.)</li>\n</ul>\n", "title": "Should I strictly avoid using enums on Android?", "tags": ["java", "android", "enums"], "link": "http://stackoverflow.com/questions/29183904/should-i-strictly-avoid-using-enums-on-android/29972028#29972028", "question_id": 29183904, "answer_id": 29972028}, {"body": "<p>If the enums simply have values, you should try to use IntDef/StringDef , as shown here:</p>\n\n<p><a href=\"http://tools.android.com/tech-docs/support-annotations\">http://tools.android.com/tech-docs/support-annotations</a></p>\n\n<p>Example: instead of :</p>\n\n<pre><code>enum NavigationMode {NAVIGATION_MODE_STANDARD, NAVIGATION_MODE_LIST, NAVIGATION_MODE_TABS} \n</code></pre>\n\n<p>you use:</p>\n\n<pre><code>@IntDef({NAVIGATION_MODE_STANDARD, NAVIGATION_MODE_LIST, NAVIGATION_MODE_TABS})\n@Retention(RetentionPolicy.SOURCE)\npublic @interface NavigationMode {}\n\npublic static final int NAVIGATION_MODE_STANDARD = 0;\npublic static final int NAVIGATION_MODE_LIST = 1;\npublic static final int NAVIGATION_MODE_TABS = 2;\n</code></pre>\n\n<p>and in the function that has it as a parameter/returned value , use:</p>\n\n<pre><code>@NavigationMode\npublic abstract int getNavigationMode();\n\npublic abstract void setNavigationMode(@NavigationMode int mode);\n</code></pre>\n\n<p>In case the enum is complex, use an enum. It's not that bad.</p>\n\n<p>To compare enums vs constant values, you should read here:</p>\n\n<pre><code>http://hsc.com/Blog/Best-Practices-For-Memory-Optimization-on-Android-1\n</code></pre>\n\n<p>Their example is of an enum with 2 values. It takes 1112 bytes in dex file compared to 128 bytes when constant integers are used . Makes sense, as enums are real classes, as opposed to how it works on C/C++ .</p>\n", "title": "Should I strictly avoid using enums on Android?", "tags": ["java", "android", "enums"], "link": "http://stackoverflow.com/questions/29183904/should-i-strictly-avoid-using-enums-on-android/32495161#32495161", "question_id": 29183904, "answer_id": 32495161}], "creation_date": 1426948652, "score": 41, "link": "http://stackoverflow.com/questions/29183904/should-i-strictly-avoid-using-enums-on-android", "question_id": 29183904}, {"body": "<p>I've been working with the new <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html\">Optional type in Java 8</a>, and I've come across what seems like a common operation that isn't supported functionally: an \"orElseOptional\"</p>\n\n<p>Consider the following pattern:</p>\n\n<pre><code>Optional&lt;Result&gt; resultFromServiceA = serviceA(args);\nif (resultFromServiceA.isPresent) return result;\nelse {\n    Optional&lt;Result&gt; resultFromServiceB = serviceB(args);\n    if (resultFromServiceB.isPresent) return resultFromServiceB;\n    else return serviceC(args);\n}\n</code></pre>\n\n<p>There are many forms of this pattern, but it boils down to wanting an \"orElse\" on an optional that takes a function producing a new optional, called only if the current one does not exist.</p>\n\n<p>It's implementation would look like this:</p>\n\n<pre><code>public Optional&lt;T&gt; orElse(Supplier&lt;Optional&lt;? extends T&gt;&gt; otherSupplier) {\n    return value != null ? this : other.get();\n}\n</code></pre>\n\n<p>I'm curious if there's a reason such a method doesn't exist, if I'm just using Optional in an unintended way, and what other ways people have come up with to deal with this case.</p>\n\n<p>I should say that I think that solutions involving custom utility classes/methods aren't elegant because people working with my code won't necessarily know they exist.</p>\n\n<p>Also, if anyone knows, will such a method be included in JDK 9, and where might I propose such a method? This seems like a pretty glaring omission to the API to me.</p>\n", "tags": ["java", "lambda", "java-8", "optional", "java-9"], "title": "Java 8 Optional orElse optional", "answers": [{"body": "<p>Perhaps this is what you're after: <a href=\"http://stackoverflow.com/questions/24599996/get-value-from-one-optional-or-another\">Get value from one Optional or another</a></p>\n\n<p>Otherwise, you may want to have a look at <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/Optional.html#orElseGet-java.util.function.Supplier-\"><code>Optional.orElseGet</code></a>. Here's an example of what I <em>think</em> that you're after:</p>\n\n<pre><code>result = Optional.ofNullable(serviceA().orElseGet(\n                                 () -&gt; serviceB().orElseGet(\n                                     () -&gt; serviceC().orElse(null))));\n</code></pre>\n", "title": "Java 8 Optional orElse optional", "tags": ["java", "lambda", "java-8", "optional", "java-9"], "link": "http://stackoverflow.com/questions/28818506/java-8-optional-orelse-optional/28818627#28818627", "question_id": 28818506, "answer_id": 28818627}, {"body": "<p>It's not pretty, but this will work:</p>\n\n<pre><code>return serviceA(args)\n  .map(Optional::of).orElseGet(() -&gt; serviceB(args))\n  .map(Optional::of).orElseGet(() -&gt; serviceC(args))\n  .map(Optional::of).orElseGet(() -&gt; serviceD(args));\n</code></pre>\n\n<p><code>.map(func).orElseGet(sup)</code> is a fairly handy pattern for use with <code>Optional</code>.  It means \"If this <code>Optional</code> contains value <code>v</code>, give me <code>func(v)</code>, otherwise give me <code>sup.get()</code>\".  </p>\n\n<p>In this case, we call <code>serviceA(args)</code> and get an <code>Optional&lt;Result&gt;</code>.  If that <code>Optional</code> contains value <code>v</code>, we want to get <code>Optional.of(v)</code>, but if it is empty, we want to get <code>serviceB(args)</code>. Rinse-repeat with more alternatives.</p>\n\n<p>Other uses of this pattern are </p>\n\n<ul>\n<li><code>.map(Stream::of).orElseGet(Stream::empty)</code></li>\n<li><code>.map(Collections::singleton).orElseGet(Collections::emptySet)</code></li>\n</ul>\n", "title": "Java 8 Optional orElse optional", "tags": ["java", "lambda", "java-8", "optional", "java-9"], "link": "http://stackoverflow.com/questions/28818506/java-8-optional-orelse-optional/28821352#28821352", "question_id": 28818506, "answer_id": 28821352}, {"body": "<p>The cleanest \u201ctry services\u201d approach given the current API would be:</p>\n\n<pre><code>Optional&lt;Result&gt; o = Stream.&lt;Supplier&lt;Optional&lt;Result&gt;&gt;&gt;of(\n    ()-&gt;serviceA(args), \n    ()-&gt;serviceB(args), \n    ()-&gt;serviceC(args), \n    ()-&gt;serviceD(args))\n.map(Supplier::get)\n.filter(Optional::isPresent)\n.map(Optional::get)\n.findFirst();\n</code></pre>\n\n<p>The important aspect is not the (constant) chain of operations you have to write once but how easy it is to add another service (or modify the list of services is general). Here, adding or removing a single <code>()-&gt;serviceX(args)</code> is enough.</p>\n\n<p>Due to the lazy evaluation of streams, no service will be invoked if a preceding service returned a non-empty <code>Optional</code>.</p>\n", "title": "Java 8 Optional orElse optional", "tags": ["java", "lambda", "java-8", "optional", "java-9"], "link": "http://stackoverflow.com/questions/28818506/java-8-optional-orelse-optional/28833677#28833677", "question_id": 28818506, "answer_id": 28833677}, {"body": "<p>This is looks like a good fit for pattern matching and a more traditional Option interface with Some and None implementations (such as those in <a href=\"https://github.com/javaslang/javaslang\" rel=\"nofollow\">Javaslang</a>, <a href=\"https://github.com/functionaljava/functionaljava\" rel=\"nofollow\">FunctionalJava</a>) or a lazy <a href=\"http://www.javadoc.io/doc/com.aol.simplereact/cyclops-react/1.0.0-RC3\" rel=\"nofollow\">Maybe</a> implementation in <a href=\"https://github.com/aol/cyclops-react\" rel=\"nofollow\">cyclops-react</a>.I'm the author of this library. </p>\n\n<p>With <a href=\"https://github.com/aol/cyclops-react\" rel=\"nofollow\">cyclops-react</a> you can also use structural <a href=\"http://gist.asciidoctor.org/?github-aol/simple-react//user-guide/pattern-matching.adoc\" rel=\"nofollow\">pattern matching</a> on JDK types. For Optional you can match on the present and absent cases via the <a href=\"http://gist.asciidoctor.org/?github-aol/simple-react//user-guide/visitor-pattern.adoc\" rel=\"nofollow\">visitor pattern</a>.  it would look something like this -</p>\n\n<pre><code>  import static com.aol.cyclops.Matchables.optional;\n\n  optional(serviceA(args)).visit(some -&gt; some , \n                                 () -&gt; optional(serviceB(args)).visit(some -&gt; some,\n                                                                      () -&gt; serviceC(args)));\n</code></pre>\n", "title": "Java 8 Optional orElse optional", "tags": ["java", "lambda", "java-8", "optional", "java-9"], "link": "http://stackoverflow.com/questions/28818506/java-8-optional-orelse-optional/32653133#32653133", "question_id": 28818506, "answer_id": 32653133}, {"body": "<p>This is part of JDK 9 in the form of <code>or</code>, which takes a <code>Supplier&lt;Optional&lt;T&gt;&gt;</code>. Your example would then be:</p>\n\n<pre><code>return serviceA(args)\n    .or(() -&gt; serviceB(args))\n    .or(() -&gt; serviceC(args));\n</code></pre>\n\n<p>For details see <a href=\"http://download.java.net/java/jdk9/docs/api/java/util/Optional.html#or-java.util.function.Supplier-\" rel=\"nofollow\">the (preliminary) Javadoc</a> or <a href=\"http://blog.codefx.org/java/dev/java-9-optional/#or\" rel=\"nofollow\">this post</a> I wrote.</p>\n", "title": "Java 8 Optional orElse optional", "tags": ["java", "lambda", "java-8", "optional", "java-9"], "link": "http://stackoverflow.com/questions/28818506/java-8-optional-orelse-optional/38560612#38560612", "question_id": 28818506, "answer_id": 38560612}], "creation_date": 1425326627, "score": 41, "link": "http://stackoverflow.com/questions/28818506/java-8-optional-orelse-optional", "question_id": 28818506}, {"body": "<pre><code>import java.math.BigDecimal;\nimport java.math.RoundingMode;\n\npublic class BigDecimalTest {\n\n  public static void main (String[] args) {\n\n    // 4.88...e+888 (1817 digits)\n    BigDecimal x = new BigDecimal(\"4.8832420563130171734733855852454330503023811919919497272520875234748556667894678622576481754268427107559208829679871295885797242917923401597269406065677191699322289667695163278484184288979073748578074654323955355081326227413484377691676742424283166095829482224974429868654315166151274143385980609237680132582337344627820946638217515894542788180511625488217105374918015830882194114839900966043221545533114607439892553114356192220778082796185122942407317178325055570254731781136589172583464356709469398354084238614163644229733602505332671951571644165960364672255033809137641462904872690406789293887232669588297154237004709334039097468524122773548736567569610163195984254280720739773383424940292419418795538600322135358425131164741597944425501875163782825762694824406500718290697914964822219714335320528259344719705157913218736206355811213275685167080292570345461898557739737178480700932922510537942188898832900701474604169230215866582286672118698263686941093382945779882215421032414999405126831495224267159359035083987132591639397950272617333366716471522059176764287433877865132652162238979110053714139119937420203828830308427979430335027147927304099711225033972679405835031675622271744826476172494554124259735452592820489036311645033355738586053207859638698142614469753279404304130088308403735928520706825401977138623732336487326694527108332032932321484204820451539099031068139840323111890984119271864483907126875945501867099986131423579718697889448836497435592993168391953327829695391643033262276364164246663414855044991442223872210174626308430613254236633497864858897399515832571171741522071020097519091890029843359547212185712419638040776450730043492270253991396124987467648536016180816769990203447616590740625203442076233929983869509074724986395815800482885710533831896927860285993286232937744729344906236207008084e+888\");\n    BigDecimal y = new BigDecimal(\"7.11510949782866099699296193137700951609335763543887012748548458182417747578081585833524887774072570691956766860384875364912060891737185872746005419263400444156198098581226885923291670353816772414798224148927688218647602446762953730527741703572368727049379249227044080281137229152770971832240631944592537904743732558993126e+302\");\n    BigDecimal z = x.divide(y, 0, RoundingMode.HALF_UP);\n\n    System.out.println(\"x: \" + x.toString());\n    System.out.println();\n    System.out.println(\"y: \" + y.toString());\n    System.out.println();\n    System.out.println(\"z: \" + z.toString());\n  }\n}\n</code></pre>\n\n<p>Compile</p>\n\n<pre><code>&gt;javac BigDecimalTest.java\n</code></pre>\n\n<p>Execute</p>\n\n<pre><code> &gt;java BigDecimalTest\n</code></pre>\n\n<p>Output</p>\n\n<pre><code>x: 625054983208066198204593354911415430438704792574969565088267203004781525349051886368978966454635866976757873019902352587338204709349419540445048397640668053751325307746498089964597558898932143981799355575346628545040975710892600034453462303030824526026617372479672702318775234126736309035340551798242305697053918011236108116969184203450147688710548806249178948798950602635292084669950732365353235782823866975230624679863759260425959459791169573662813659882560711299260566798548341409068343765881208298932278254261294646140590112068258200980117045324292667804864432756961810725182370437206902961756578170730203574233660279475700447597108771501423828064891010088908598454793225469099307839235742968560582894084123332587841678908692453688646424002096420169762493752403209194120933311549724412343492102761719612412226021289199823441354383529928770138627744900421912301539068635884552971941408134.8856600179050611289788749333661467630922532694031193377751928459953017059824923573892149119923856234431388706196397956490750352971729842937634895018670939708354823574625828791536366736979476766589326086875409807351989786090090279478781367082883474934694924763036804348502963946884054479650783337788950079302927905246137931881022596647890564269534539014810606033753362254652128419763750928651303475678198850650473651453073743837739070377816899469866500215337149978217017797004675976721899561358322045967266798653940112240121024238988798224822218203993329849451071671755903125554170025962201010130308257571374613023572917101445758904604655642902352167479118496542289087726701938867138026569109982914825090572482443761923819950022043159771189713669219385693445567010592510898703998395859012610071144546558746041294923614800026040585757943037935297161564798258664422461809370948330482806766116607140637816031325356147998234497034752\n\ny: 711510949782866099699296193137700951609335763543887012748548458182417747578081585833524887774072570691956766860384875364912060891737185872746005419263400444156198098581226885923291670353816772414798224148927688218647602446762953730527741703572368727049379249227044080281137229152770971832240631944592537.904743732558993126\n\nz: 6863200148645991450016700150728475158275817266239021182863526677885700921863906334312309256001619020949572592642200844420107346867400206096485382274175041601107978676753014927820457112641389679172479926134263590581506384223135957016211147412682886175625161361918270282067511320630977561140325469899962049739132122854543111824994613211802165652292305592183629295330885779837415870933600699791946039851356918600890315497940083093271504897016557099915008808164166772999720870505507779642391694002178573568389923682384862328430119487673749084566046514914589822168578412569408216619911686172\n</code></pre>\n\n<p>The value of <code>z.toString()</code> in the output is correct</p>\n\n<pre><code>4.883242e+888 / 7.115109e+302 = 6.863200e+585\n</code></pre>\n\n<p>as is the value of <code>y.toString()</code>, but notice that the value given for <code>x.toString()</code> is completely wrong.</p>\n\n<p>Why is this?</p>\n\n<p>Strangely, if the scale (i.e. desired decimal places) of the result of the division is changed </p>\n\n<pre><code>BigDecimal z = x.divide(y, 3, RoundingMode.HALF_UP);\n</code></pre>\n\n<p>then <code>x.toString()</code> will produce the correct value for <code>x</code>.</p>\n\n<p>Or, if the operands are swapped</p>\n\n<pre><code>BigDecimal z = y.divide(x, 0, RoundingMode.HALF_UP);\n</code></pre>\n\n<p>then <code>x.toString()</code> will also then produce the correct value.</p>\n\n<p>Or, if the exponent of <code>x</code> is changed from <code>e+888</code> to e.g. <code>e+878</code> then  <code>x.toString()</code> will be correct.</p>\n\n<p>Or, if another <code>x.toString()</code> call is added above the <code>divide</code> operation, then <em>both</em> <code>x.toString()</code> calls will produce the correct value!</p>\n\n<p>On the machine I'm testing this, Windows 7 64 bit, the behaviour is the same using java 7 and 8, both 32bit and 64 bit versions, but testing online at <a href=\"https://ideone.com/\">https://ideone.com/</a> produces different results for java 7 and java 8. </p>\n\n<p>Using java 7, the value of <code>x</code> is given correctly: <a href=\"http://ideone.com/P1sXQQ\">http://ideone.com/P1sXQQ</a>, but using java 8 its value is incorrect: <a href=\"http://ideone.com/OMAq7a\">http://ideone.com/OMAq7a</a>.</p>\n\n<p>Also, this behaviour is not unique to this particular value of <code>x</code>, as calling <code>toString</code> on other BigDecimals with more than about 1500 digits after passing them as the first operand to a <code>divide</code> operation will also produce incorrect values.</p>\n\n<p>What is the explanation for this? </p>\n\n<p>The <code>divide</code> operation seems to be mutating the value produced by subsequent <code>toString</code> calls on its operands.</p>\n\n<p>Does this happen on your platform?</p>\n\n<p><em>Edit:</em></p>\n\n<p>The issue seems to be with the java 8 runtime only, as the above program compiled with java 7 produces correct output when executed with the java 7 runtime, but incorrect output when executed with the java 8 runtime.</p>\n\n<p><em>Edit:</em></p>\n\n<p>I've tested with the early access <a href=\"https://jdk8.java.net/download.html\">jre1.8.0_60</a> and the bug does not appear, and according to Marco13's answer it was fixed in build 51. The Oracle JDK 8 product binaries are only at update 40 though so it may be some time before the fixed versions are widely used.</p>\n", "tags": ["java", "bigdecimal"], "title": "Why does toString fail to produce the correct value on an immutable BigDecimal?", "answers": [{"body": "<p>It's not so hard to track down the <em>reason</em> for the odd behavior. </p>\n\n<p>The <code>divide</code> call goes to </p>\n\n<pre><code>public BigDecimal divide(BigDecimal divisor, int scale, RoundingMode roundingMode) {\n    return divide(divisor, scale, roundingMode.oldMode);\n}\n</code></pre>\n\n<p>This, internally, delegates to another <code>divide</code> method, based on the rounding mode:</p>\n\n<pre><code>public BigDecimal divide(BigDecimal divisor, int scale, int roundingMode) {\n    if (roundingMode &lt; ROUND_UP || roundingMode &gt; ROUND_UNNECESSARY)\n        throw new IllegalArgumentException(\"Invalid rounding mode\");\n    if (this.intCompact != INFLATED) {\n        if ((divisor.intCompact != INFLATED)) {\n            return divide(this.intCompact, this.scale, divisor.intCompact, divisor.scale, scale, roundingMode);\n        } else {\n            return divide(this.intCompact, this.scale, divisor.intVal, divisor.scale, scale, roundingMode);\n        }\n    } else {\n        if ((divisor.intCompact != INFLATED)) {\n            return divide(this.intVal, this.scale, divisor.intCompact, divisor.scale, scale, roundingMode);\n        } else {\n            return divide(this.intVal, this.scale, divisor.intVal, divisor.scale, scale, roundingMode);\n        }\n    }\n}\n</code></pre>\n\n<p>In this case, the last call applies. Note that the <code>intVal</code> (which is a <code>BigInteger</code> that is stored in the <code>BigDecimal</code>) is passed directly to this method as the first argument:</p>\n\n<pre><code>private static BigDecimal divide(BigInteger dividend, int dividendScale, BigInteger divisor, int divisorScale, int scale, int roundingMode) {\n    if (checkScale(dividend,(long)scale + divisorScale) &gt; dividendScale) {\n        int newScale = scale + divisorScale;\n        int raise = newScale - dividendScale;\n        BigInteger scaledDividend = bigMultiplyPowerTen(dividend, raise);\n        return divideAndRound(scaledDividend, divisor, scale, roundingMode, scale);\n    } else {\n        int newScale = checkScale(divisor,(long)dividendScale - scale);\n        int raise = newScale - divisorScale;\n        BigInteger scaledDivisor = bigMultiplyPowerTen(divisor, raise);\n        return divideAndRound(dividend, scaledDivisor, scale, roundingMode, scale);\n    }\n}\n</code></pre>\n\n<p>Finally, the path to the <strong>second</strong> <code>divideAndRound</code> is taken here, again passing the <code>dividend</code> on (which was the <code>intVal</code> of the original <code>BigDecimal</code>), ending up with this code:</p>\n\n<pre><code>private static BigDecimal divideAndRound(BigInteger bdividend, BigInteger bdivisor, int scale, int roundingMode,\n                                         int preferredScale) {\n    boolean isRemainderZero; // record remainder is zero or not\n    int qsign; // quotient sign\n    // Descend into mutables for faster remainder checks\n    MutableBigInteger mdividend = new MutableBigInteger(bdividend.mag);\n    MutableBigInteger mq = new MutableBigInteger();\n    MutableBigInteger mdivisor = new MutableBigInteger(bdivisor.mag);\n    MutableBigInteger mr = mdividend.divide(mdivisor, mq);\n    ...\n</code></pre>\n\n<p>And this is where the error is introduced: The <code>mdivididend</code> is a <strong>mutable</strong> <code>BigInteger</code>, that was created as a mutable view on the <code>mag</code> array of the <code>BigInteger</code> that is stored in the <code>BigDecimal</code> <code>x</code> from the original call. The division modifies the <code>mag</code> field, and thus, the state of the (now not-so-immutable) <code>BigDecimal</code>.</p>\n\n<p>This is clearly a bug in the implementation of one of the <code>divide</code> methods. I already started tracking the change sets of the OpenJDK, but have not yet spotted the definite culprit. (<em>Edit: See updates below</em>)</p>\n\n<p>(A side note: Calling <code>x.toString()</code> before doing the division does not really <em>avoid</em>, but only <em>hide</em> the bug: It causes a string cache of the correct state to be created internally. The right value is printed, but the internal state is still wrong - which is concerning, to say the least...)</p>\n\n<hr>\n\n<blockquote>\n  <p><strong>Update</strong>: To confirm what <code>@MikeM</code> said: Bug has been listed on <a href=\"https://bugs.openjdk.java.net/browse/JDK-8066842\">openjdk bug list</a> and it has been resolved in <code>JDK8 Build 51</code></p>\n  \n  <p><strong>Update</strong> : Kudos to Mike and exex zian for digging out the bug reports. According to the discussion there, the bug was introduced with <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/rev/ffada2ce20e5#l1.1174\">this changeset</a>. \n  <sub>(Admittedly, while skimming through the changes, I also considered this as a hot candidate, but could not believe that this was introduced <em>four years ago</em> and remained unnoticed until now...)</sub></p>\n</blockquote>\n", "title": "Why does toString fail to produce the correct value on an immutable BigDecimal?", "tags": ["java", "bigdecimal"], "link": "http://stackoverflow.com/questions/29328785/why-does-tostring-fail-to-produce-the-correct-value-on-an-immutable-bigdecimal/29330741#29330741", "question_id": 29328785, "answer_id": 29330741}], "creation_date": 1427630121, "score": 41, "link": "http://stackoverflow.com/questions/29328785/why-does-tostring-fail-to-produce-the-correct-value-on-an-immutable-bigdecimal", "question_id": 29328785}, {"body": "<p>For a few days I'm trying to build <a href=\"https://github.com/sujaybhowmick/OpenAlprDroidApp\">OpenALPR example project for Android</a>. It builds and launches, but after calling native method for recognizing it make exception:</p>\n\n<pre><code>java.lang.RuntimeException: An error occured while executing doInBackground()\nat android.os.AsyncTask$3.done(AsyncTask.java:299)\nat java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:352)\nat java.util.concurrent.FutureTask.setException(FutureTask.java:219)\nat java.util.concurrent.FutureTask.run(FutureTask.java:239)\nat android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:230)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\nat java.lang.Thread.run(Thread.java:838)\n\nCaused by: java.lang.UnsatisfiedLinkError: Native method not found: org.openalpr.AlprJNIWrapper.recognizeWithCountryRegionNConfig:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;\nat org.openalpr.AlprJNIWrapper.recognizeWithCountryRegionNConfig(Native Method)\nat org.openalpr.app.AlprFragment$AlprTask.doInBackground(AlprFragment.java:78)\nat org.openalpr.app.AlprFragment$AlprTask.doInBackground(AlprFragment.java:1)\nat android.os.AsyncTask$2.call(AsyncTask.java:287)\nat java.util.concurrent.FutureTask.run(FutureTask.java:234)\n... 4 more\n</code></pre>\n\n<p>I can't do anything, it appears all the time.</p>\n\n<p>Application.mk</p>\n\n<pre><code>APP_ABI := armeabi-v7a\nAPP_CPPFLAGS := -frtti -fexceptions\nAPP_STL := gnustl_static\n</code></pre>\n\n<p>Android.mk after all of my attempts</p>\n\n<pre><code>LOCAL_PATH := $(call my-dir)\nLIB_PATH := $(LOCAL_PATH)/../libs/armeabi-v7a\n\ninclude $(CLEAR_VARS)\n\nLOCAL_MODULE := leptonica\nLOCAL_SRC_FILES := 3rdparty/liblept.so\ninclude $(PREBUILT_SHARED_LIBRARY)\n\ninclude $(CLEAR_VARS)\n\nLOCAL_MODULE := tesseract\nLOCAL_SRC_FILES := 3rdparty/libtess.so\ninclude $(PREBUILT_SHARED_LIBRARY)\n\ninclude $(CLEAR_VARS)\n\nLOCAL_MODULE := simpleini\nLOCAL_SRC_FILES := 3rdparty/libsimpleini.a\ninclude $(PREBUILT_STATIC_LIBRARY)\n\ninclude $(CLEAR_VARS)\n\nLOCAL_MODULE := support\nLOCAL_SRC_FILES := 3rdparty/libsupport.a\ninclude $(PREBUILT_STATIC_LIBRARY)\n\ninclude $(CLEAR_VARS)\n\nLOCAL_MODULE := openalpr\nLOCAL_SRC_FILES := 3rdparty/libopenalpr-static.a\ninclude $(PREBUILT_STATIC_LIBRARY)\n\ninclude $(CLEAR_VARS)\n\nOPENCV_INSTALL_MODULES:=on\nOPENCV_CAMERA_MODULES:=off\n\ninclude d:\\Other\\robovisor_mobile\\OpenCV-android-sdk\\sdk\\native\\jni\\OpenCV.mk\n\nLOCAL_MODULE := openalpr-native\nSOURCE_LIST := $(wildcard $(LOCAL_PATH)/*.cpp)\nHEADER_LIST := $(wildcard $(LOCAL_PATH)/*.h)\nLOCAL_SRC_FILES := AlprJNIWrapper.cpp\nLOCAL_SRC_FILES += $(HEADER_LIST:$(LOCAL_PATH)/%=%)\nLOCAL_SRC_FILES += $(SOURCE_LIST:$(LOCAL_PATH)/%=%)\nLOCAL_EXPORT_C_INCLUDES += /home/sujay/builds/src/openalpr/src/openalpr\nLOCAL_EXPORT_C_INCLUDES += /home/sujay/builds/src/OpenCV-2.4.9-android-sdk/sdk/native/include\nFILE_LIST := $(foreach dir, $(LOCAL_EXPORT_C_INCLUDES), $(wildcard $(dir)/*.cpp))\nLOCAL_SRC_FILES := $(FILE_LIST:$(LOCAL_PATH)/%=%)\n\nLOCAL_C_INCLUDES += /home/sujay/builds/src/openalpr/src/openalpr\nLOCAL_C_INCLUDES += /home/sujay/builds/src/OpenCV-2.4.9-android-sdk/sdk/native/include\nLOCAL_C_INCLUDES += /home/sujay/tools/android-ndk-r10/platforms/android-19/arch-arm/usr/include\nLOCAL_SHARED_LIBRARIES += tesseract leptonica\nLOCAL_STATIC_LIBRARIES += openalpr support simpleini\nLOCAL_LDLIBS := -llog\n\ninclude $(BUILD_SHARED_LIBRARY)\n</code></pre>\n\n<p>AlprJNIWrapper.cpp contains needed for me native functions</p>\n\n<pre><code>/**\n * Created by sujay on 13/11/14.\n */\n#include &lt;string&gt;\n#include &lt;sstream&gt;\n#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n\n// openCV includes\n#include \"opencv2/highgui/highgui.hpp\"\n#include \"opencv2/imgproc/imgproc.hpp\"\n\n// open alpr includes\n#include \"support/filesystem.h\"\n#include \"support/timing.h\"\n#include \"alpr.h\"\n#include \"cjson.h\"\n\n#include \"AlprJNIWrapper.h\"\n#include \"AlprNative.h\"\n\nusing namespace alpr;\n\nJNIEXPORT jstring JNICALL Java_org_openalpr_AlprJNIWrapper_recognize(JNIEnv *env,\n        jobject object, jstring jimgFilePath, jint jtopN)\n{\n    jstring defaultCountry = env-&gt;NewStringUTF(\"us\");\n    jstring defaultRegion = env-&gt;NewStringUTF(\"\");\n    jstring defaultConfigFilePath = env-&gt;NewStringUTF(CONFIG_FILE);\n    return _recognize(env, object, defaultCountry, defaultRegion, jimgFilePath, defaultConfigFilePath, jtopN);\n}\n\nJNIEXPORT jstring JNICALL Java_org_openalpr_AlprJNIWrapper_recognizeWithCountryNRegion(\n        JNIEnv *env, jobject object, jstring jcountry,\n        jstring jregion, jstring jimgFilePath, jint jtopN)\n{\n    jstring defaultConfigFilePath = env-&gt;NewStringUTF(CONFIG_FILE);\n    return _recognize(env, object, jcountry, jregion, jimgFilePath, defaultConfigFilePath, jtopN);\n}\n\nJNIEXPORT jstring JNICALL Java_org_openalpr_AlprJNIWrapper_recognizeWithCountryRegionNConfig\n  (JNIEnv *env, jobject object, jstring jcountry, jstring jregion,\n          jstring jimgFilePath, jstring jconfigFilePath, jint jtopN)\n{\n    return _recognize(env, object, jcountry, jregion, jimgFilePath, jconfigFilePath, jtopN);\n}\n\njstring _recognize(JNIEnv *env, jobject object,\n        jstring jcountry, jstring jregion, jstring jimgFilePath,\n        jstring jconfigFilePath, jint jtopN)\n{\n\n    const char* countryChars = env-&gt;GetStringUTFChars(jcountry, NULL);\n\n    std::string country(countryChars);\n\n    env-&gt;ReleaseStringUTFChars(jcountry, countryChars);\n\n    if(country.empty())\n    {\n        country = \"us\";\n    }\n\n    const char* configFilePathChars = env-&gt;GetStringUTFChars(jconfigFilePath, NULL);\n\n    std::string configFilePath(configFilePathChars);\n\n    env-&gt;ReleaseStringUTFChars(jconfigFilePath, configFilePathChars);\n\n    if(configFilePath.empty())\n    {\n        configFilePath = \"/etc/openalpr/openalpr.conf\";\n    }\n\n    const char* imgFilePath = env-&gt;GetStringUTFChars(jimgFilePath, NULL);\n\n    int topN = jtopN;\n\n    std::string response = \"\";\n\n    cv::Mat frame;\n    Alpr alpr(country, configFilePath);\n\n    const char* regionChars = env-&gt;GetStringUTFChars(jregion, NULL);\n\n    std::string region(regionChars);\n\n    env-&gt;ReleaseStringUTFChars(jregion, regionChars);\n\n    if(region.empty())\n    {\n        alpr.setDetectRegion(true);\n        alpr.setDefaultRegion(region);\n    }\n\n\n    alpr.setTopN(topN);\n\n    if (alpr.isLoaded() == false) {\n        env-&gt;ReleaseStringUTFChars(jimgFilePath, imgFilePath);\n        response = errorJsonString(\"Error initializing Open Alpr\");\n        return env-&gt;NewStringUTF(response.c_str());\n    }\n\n    if(fileExists(imgFilePath))\n    {\n        frame = cv::imread(imgFilePath);\n        response = detectandshow(&amp;alpr, frame, \"\");\n    }\n    else\n    {\n        response = errorJsonString(\"Image file not found\");\n    }\n    env-&gt;ReleaseStringUTFChars(jimgFilePath, imgFilePath);\n    return env-&gt;NewStringUTF(response.c_str());\n}\n\nJNIEXPORT jstring JNICALL Java_org_openalpr_AlprJNIWrapper_version\n  (JNIEnv *env, jobject object)\n{\n    return env-&gt;NewStringUTF(Alpr::getVersion().c_str());\n}\n\nstd::string detectandshow(Alpr* alpr, cv::Mat frame, std::string region) \n{\n    std::vector &lt; uchar &gt; buffer;\n    std::string resultJson = \"\";\n    cv::imencode(\".bmp\", frame, buffer);\n\n    std::vector &lt; char &gt; buffer1;\n\n    for(std::vector &lt; uchar &gt;::iterator i = buffer.begin(); i &lt; buffer.end(); i++) {\n        buffer1.push_back(*i);\n    }\n\n    timespec startTime;\n    getTimeMonotonic(&amp;startTime);\n\n    //std::vector &lt; AlprResults &gt; results = alpr-&gt;recognize(buffer);\n    AlprResults results = alpr-&gt;recognize(buffer1);\n\n    timespec endTime;\n    getTimeMonotonic(&amp;endTime);\n    double totalProcessingTime = diffclock(startTime, endTime);\n\n    //if (results.size() &gt; 0)\n    {\n        resultJson = alpr-&gt;toJson(results/*, totalProcessingTime*/);\n    }\n\n    return resultJson;\n}\n\nstd::string errorJsonString(std::string msg) \n{\n    cJSON *root;\n    root = cJSON_CreateObject();\n    cJSON_AddTrueToObject(root, \"error\");\n    cJSON_AddStringToObject(root, \"msg\", msg.c_str());\n\n    char *out;\n    out = cJSON_PrintUnformatted(root);\n\n    cJSON_Delete(root);\n\n    std::string response(out);\n\n    free(out);\n    return response;\n}\n</code></pre>\n\n<p>AlprJNIWrapper.java calls native method</p>\n\n<pre><code>/**\n * \n */\npackage org.openalpr;\n\n/**\n * @author sujay\n *\n */\npublic class AlprJNIWrapper implements Alpr {\n\n        static { \n            System.loadLibrary(\"lept\");\n            System.loadLibrary(\"tess\");\n            System.loadLibrary(\"opencv_java\");\n            System.loadLibrary(\"openalpr-native\");\n        }\n\n    /* (non-Javadoc)\n     * @see org.openalpr.Alpr#recognize(java.lang.String, int)\n     */\n    @Override\n    public native String recognize(String imgFilePath, int topN);\n\n    /* (non-Javadoc)\n     * @see org.openalpr.Alpr#recognizeWithCountryNRegion(java.lang.String, java.lang.String, java.lang.String, int)\n     */\n    @Override\n    public native String recognizeWithCountryNRegion(String country, String region,\n            String imgFilePath, int topN);\n\n    /* (non-Javadoc)\n     * @see org.openalpr.Alpr#recognizeWithCountryRegionNConfig(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)\n     */\n    @Override\n    public native String recognizeWithCountryRegionNConfig(String country,\n            String region, String imgFilePath, String configFilePath, int topN);\n\n    /*\n     * (non-Javadoc)\n     * @see org.openalpr.Alpr#version()\n     */\n    @Override\n    public native String version();\n}\n</code></pre>\n\n<p><strong>Edited</strong></p>\n\n<p>There is info about processor on my phone.</p>\n\n<pre><code>Processor       : ARMv7 Processor rev 3 (v7l)\nprocessor       : 0\nBogoMIPS        : 1993.93\n\nFeatures        : swp half thumb fastmult vfp edsp thumbee neon vfpv3 tls vfpv4\nidiva idivt\nCPU implementer : 0x41\nCPU architecture: 7\nCPU variant     : 0x0\nCPU part        : 0xc07\nCPU revision    : 3\n</code></pre>\n\n<p><strong>Edited again</strong></p>\n\n<p>I tried to get info about function in result <code>.so</code> file and there is what I get:</p>\n\n<pre><code>Symbol table '.dynsym' contains 6 entries:\n   Num:    Value  Size Type    Bind   Vis      Ndx Name\n     0: 00000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 00000000     0 FUNC    GLOBAL DEFAULT  UND __cxa_finalize\n     2: 00000000     0 FUNC    GLOBAL DEFAULT  UND __cxa_atexit\n     3: 00002004     0 NOTYPE  GLOBAL DEFAULT  ABS _edata\n     4: 00002004     0 NOTYPE  GLOBAL DEFAULT  ABS __bss_start\n     5: 00002004     0 NOTYPE  GLOBAL DEFAULT  ABS _end\n</code></pre>\n\n<p>I get it from:</p>\n\n<pre><code>&lt;ndk_path&gt;\\toolchains\\arm-linux-androideabi-4.8\\prebuilt\\windows\\bin&gt;arm-linux-androideabi-readelf.exe \n-Ws &lt;projects_path&gt;\\libs\\armeabi-v7a\\libopenalpr-native.so\n</code></pre>\n\n<p>Am I doing something wrong? Or there is really no my functions in <code>.so</code> file?</p>\n", "tags": ["java", "android", "c++", "android-ndk"], "title": "Unsatisfiedlinkerror OpenALPR test project for android", "answers": [{"body": "<p>There are could be several issues.<br>\nFirst, you run the sample on unsupported device, like if lib built for armeabi-v7 (and its definitely so due to <code>APP_ABI := armeabi-v7a</code> setting in make file) and your device is intel x86 or lower than 7 armeabi version, etc.<br>\nCould be that sample is outdated while lib project has been updated, so some method names was changed or method was removed as deprecated, etc.<br>\nAlso compiled NDK lib is package sensitive so if you place JNI class into a different package it wont work either.<br>\nAlso the native library .so-file has to be placed into the right place of your project and its not a libs folder where you place jar-libs usually. Its a bit different folder like as for android studio:  </p>\n\n<blockquote>\n  <p>...\\src\\main\\jniLibs\\aremabi-v7a\\libYourLib.so (for aremabi-v7a version)<br>\n  ...\\src\\main\\jniLibs\\x86\\libYourLib.so (for x86 version and so on)  </p>\n</blockquote>\n\n<p><strong>UPDATE:</strong><br>\nDon't forget to respect the min API level which is 19. App wont work on devices with lower API level, I mean you could change the min API level in project - don't do it.<br>\nThe issue here is that <code>libopenalpr-native.so</code> has a dash <code>-</code> char in its name. Dash is a restricted char for resource naming in AOS. So I replaced it with \"_\" and <a href=\"http://prntscr.com/6w355i\">app works now</a>\nAnd replace it here as well:</p>\n\n<pre><code>System.loadLibrary(\"openalpr_native\");\n</code></pre>\n\n<p>And I didn't use your version of .so but only the included in project one.<br>\n<strong>UPDATE</strong><br>\nTake a look: <a href=\"http://prntscr.com/6w6qfx\">http://prntscr.com/6w6qfx</a> your lib is just 5kb comparing to original 1.7Mb there is something wrong definitely. And it explains your question in comment:</p>\n\n<blockquote>\n  <p>Why there is no error on System.loadLibrary(\"openalpr-native\");? I\n  just can't understand this situation - creates libopenalpr-native.so\n  file, it loads to program, by there is no method.</p>\n</blockquote>\n\n<p>Could you just use original lib included in sample project instead? Just to test.</p>\n", "title": "Unsatisfiedlinkerror OpenALPR test project for android", "tags": ["java", "android", "c++", "android-ndk"], "link": "http://stackoverflow.com/questions/29512673/unsatisfiedlinkerror-openalpr-test-project-for-android/29535334#29535334", "question_id": 29512673, "answer_id": 29535334}, {"body": "<p>No correct method found in your library is due to name mismatch, you should wrap your JNI function code with <code>extern \"C\"</code> in C++ code. </p>\n", "title": "Unsatisfiedlinkerror OpenALPR test project for android", "tags": ["java", "android", "c++", "android-ndk"], "link": "http://stackoverflow.com/questions/29512673/unsatisfiedlinkerror-openalpr-test-project-for-android/29841054#29841054", "question_id": 29512673, "answer_id": 29841054}], "creation_date": 1428490435, "score": 41, "link": "http://stackoverflow.com/questions/29512673/unsatisfiedlinkerror-openalpr-test-project-for-android", "question_id": 29512673}, {"body": "<p>I am aware that it is better to call the <code>equals</code> method over using the <code>==</code> operator (see <a href=\"http://stackoverflow.com/questions/513832/how-do-i-compare-strings-in-java\">this question</a>). I want two strings to compare as equal if they are both null or if they represent the same string. Unfortunately the <code>equals</code> method will throw an <code>NPE</code> if the strings are <code>null</code>. My code is currently:</p>\n\n<pre><code>boolean equals(String s1, String s2) {\n  if (s1 == null &amp;&amp; s2 == null) {\n    return true;\n  }\n  if (s1 == null || s2 == null) {\n    return false;\n  }\n  return s1.equals(s2);\n}\n</code></pre>\n\n<p>This is inelegant. What is the correct way to perform this test?</p>\n", "tags": ["java", "equals", "equality"], "title": "How to compare two Strings when both can be null?", "answers": [{"body": "<p>From <a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/Objects.html#equals(java.lang.Object,%20java.lang.Object)\"><code>Objects.equals()</code></a>:</p>\n\n<pre><code>return (a == b) || (a != null &amp;&amp; a.equals(b));\n</code></pre>\n\n<p>Very simple, self-explaining and elegant.</p>\n", "title": "How to compare two Strings when both can be null?", "tags": ["java", "equals", "equality"], "link": "http://stackoverflow.com/questions/30081520/how-to-compare-two-strings-when-both-can-be-null/30081600#30081600", "question_id": 30081520, "answer_id": 30081600}, {"body": "<p>If Java 7+, use <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/Objects.html#equals-java.lang.Object-java.lang.Object-\"><code>Objects.equals()</code></a>; its documentation explicitly specifies that:</p>\n\n<blockquote>\n  <p>[...] if both arguments are null, true is returned and if exactly one argument is null, false is returned. Otherwise, equality is determined by using the equals method of the first argument.</p>\n</blockquote>\n\n<p>which is what you want.</p>\n\n<p>If you don't, your method can be rewritten to:</p>\n\n<pre><code>return s1 == null ? s2 == null : s1.equals(s2);\n</code></pre>\n\n<p>This works because the <code>.equals()</code> contract guarantees that for any object <code>o</code>, <code>o.equals(null)</code> is always false.</p>\n", "title": "How to compare two Strings when both can be null?", "tags": ["java", "equals", "equality"], "link": "http://stackoverflow.com/questions/30081520/how-to-compare-two-strings-when-both-can-be-null/30081607#30081607", "question_id": 30081520, "answer_id": 30081607}, {"body": "<p>If you can't use Java 7+ solution, but you have Guava or Commons Lang in classpath, then you can use the following:</p>\n\n<p><strong>Guava</strong>:</p>\n\n<pre><code>import com.google.common.base.Objects;\n\nObjects.equal(s1, s2);\n</code></pre>\n\n<p><strong>Commons Lang</strong>:</p>\n\n<pre><code>import org.apache.commons.lang3.builder.EqualsBuilder;\n\nnew EqualsBuilder().append(s1, s2).isEquals();\n</code></pre>\n\n<p>or</p>\n\n<pre><code>import org.apache.commons.lang3.StringUtils;\n\nStringUtils.equals(s1, s2);\n</code></pre>\n", "title": "How to compare two Strings when both can be null?", "tags": ["java", "equals", "equality"], "link": "http://stackoverflow.com/questions/30081520/how-to-compare-two-strings-when-both-can-be-null/30081794#30081794", "question_id": 30081520, "answer_id": 30081794}], "creation_date": 1430927011, "score": 40, "link": "http://stackoverflow.com/questions/30081520/how-to-compare-two-strings-when-both-can-be-null", "question_id": 30081520}, {"body": "<p>How to make moving money from one account to another atomic? For:</p>\n\n<pre><code>public class Account {\n    public Account(BigDecimal initialAmount) {...}\n    public BigDecimal getAmount() {...}\n    public void setAmount(BigDecimal amount) {...}\n}\n</code></pre>\n\n<p>I expect that pseudo-code:</p>\n\n<pre><code>public boolean transfer(Account from, Account to, BigDecimal amount) {\n    BigDecimal fromValue = from.getAmount();\n    if (amount.compareTo(fromValue) &lt; 0)\n         return false;\n    BigDecimal toValue = to.getAmount();\n    from.setAmount(fromValue.add(amount.negate()));\n    to.setAmount(toValue.add(amount));\n    return true;\n}\n</code></pre>\n\n<p>update accounts safely in multithreading environment, I see danger case as:</p>\n\n<pre><code>acc1 --&gt; acc2  ||  acc2 --&gt; acc1\nacc1 --&gt; acc2  ||  acc2 --&gt; acc3  ||  acc3 --&gt; acc1\n...\n</code></pre>\n\n<p>Easiest solution is to make blocking on shared object, but it will be inefficient for cases like:</p>\n\n<pre><code>acc1 --&gt; acc2  ||  acc3 --&gt; acc4  and  acc1 != acc3 and acc2 != acc4\n</code></pre>\n\n<p>I expect that independent moves performed in parallel, dependent in sequence.</p>\n\n<p><strong>UPDATE</strong> Seems that suggested solution:</p>\n\n<pre><code>synchronize (acc1) {\n   synchronize (acc2) {\n     ....\n   }\n}\n</code></pre>\n\n<p>lead to deadlock as 2 locks acquired sequentially... </p>\n\n<p><strong>UPDATE 2</strong> <em>what do you mean with \"update accounts safely in multithreading environment\" exactly? Is the only worry that the accounts won't end up having minus funds or is there some other problem?</em></p>\n\n<p>If <code>acc1(2); acc2(3)</code> and <code>acc1 --1--&gt; acc2</code> and <code>acc2 --2--&gt; acc1</code> I expect consistency: <code>(acc1, acc2)</code> has <code>(3, 2)</code> value, not <code>(4, 2)</code> or <code>(3, 4)</code> if you get intermediate account value during simultaneous execution.</p>\n\n<p><em>how much concurrent transaction are you expecting at a time ?</em> 1000-10000 - so lock on shared object isn't efficient.</p>\n", "tags": ["java", "multithreading"], "title": "Java synchronisation: atomically moving money across account pairs?", "answers": [{"body": "<p>I would propose to create a method Account.withdraw(amount) which throws an exception if it doesn't have sufficient funds. This method needs to be synchronized on the account itself.</p>\n\n<p>Edit:</p>\n\n<p>There also needs to be a Account.deposit(amount) method which is synchronized on the receiving account instance.</p>\n\n<p>Basically this will result in a lock of the first account while withdrawing and then another lock on the receiving account while depositing. So two locks but not at the same time.</p>\n\n<p><strong>Code sample:</strong> Assumes that withdraw/deposit are synchronized and return boolean success status rather than throw exception.</p>\n\n<pre><code>public boolean transfer(Account from, Account to, BigDecimal amount) {\n    boolean success = false;\n    boolean withdrawn = false;\n    try {\n        if (from.withdraw(amount)) {\n            withdrawn = true;\n            if (to.deposit(amount)) {\n                success = true;\n            }\n        }\n    } finally {\n        if (withdrawn &amp;&amp; !success) {\n            from.deposit(amount);\n        }\n    }\n\n    return success;\n}\n</code></pre>\n", "title": "Java synchronisation: atomically moving money across account pairs?", "tags": ["java", "multithreading"], "link": "http://stackoverflow.com/questions/29280857/java-synchronisation-atomically-moving-money-across-account-pairs/29281389#29281389", "question_id": 29280857, "answer_id": 29281389}, {"body": "<p>One approach is to use kind of \"striped lock\" with lock/unlock methods operating on several locks. Accounts are mapped to locks using <code>hashCode</code>, the more locks you allocate, the more parallelism you get.</p>\n\n<p>Here's code sample:</p>\n\n<pre><code>public class StripedLock {\n\n    private final NumberedLock[] locks;\n\n    private static class NumberedLock {\n        private final int id;\n        private final ReentrantLock lock;\n\n        public NumberedLock(int id) {\n            this.id = id;\n            this.lock = new ReentrantLock();\n        }\n    }\n\n\n    /**\n     * Default ctor, creates 16 locks\n     */\n    public StripedLock() {\n        this(4);\n    }\n\n    /**\n     * Creates array of locks, size of array may be any from set {2, 4, 8, 16, 32, 64}\n     * @param storagePower size of array will be equal to &lt;code&gt;Math.pow(2, storagePower)&lt;/code&gt;\n     */\n    public StripedLock(int storagePower) {\n        if (!(storagePower &gt;= 1 &amp;&amp; storagePower &lt;= 6)) { throw new IllegalArgumentException(\"storage power must be in [1..6]\"); }\n\n        int lockSize = (int) Math.pow(2, storagePower);\n        locks = new NumberedLock[lockSize];\n        for (int i = 0; i &lt; locks.length; i++)\n            locks[i] = new NumberedLock(i);\n    }\n\n    /**\n     * Map function between integer and lock from locks array\n     * @param id argument\n     * @return lock which is result of function\n     */\n    private NumberedLock getLock(int id) {\n        return locks[id &amp; (locks.length - 1)];\n    }\n\n    private static final Comparator&lt;? super NumberedLock&gt; CONSISTENT_COMPARATOR = new Comparator&lt;NumberedLock&gt;() {\n        @Override\n        public int compare(NumberedLock o1, NumberedLock o2) {\n            return o1.id - o2.id;\n        }\n    };\n\n\n    public void lockIds(@Nonnull int[] ids) {\n        Preconditions.checkNotNull(ids);\n        NumberedLock[] neededLocks = getOrderedLocks(ids);\n        for (NumberedLock nl : neededLocks)\n            nl.lock.lock();\n    }\n\n    public void unlockIds(@Nonnull int[] ids) {\n        Preconditions.checkNotNull(ids);\n        NumberedLock[] neededLocks = getOrderedLocks(ids);\n        for (NumberedLock nl : neededLocks)\n            nl.lock.unlock();\n    }\n\n    private NumberedLock[] getOrderedLocks(int[] ids) {\n        NumberedLock[] neededLocks = new NumberedLock[ids.length];\n        for (int i = 0; i &lt; ids.length; i++) {\n            neededLocks[i] = getLock(i);\n        }\n        Arrays.sort(neededLocks, CONSISTENT_COMPARATOR);\n        return neededLocks;\n    }\n}\n\n    // ...\n    public void transfer(StripedLock lock, Account from, Account to) {\n        int[] accountIds = new int[]{from.getId(), to.getId()};\n        lock.lockIds(accountIds);\n        try {\n            // profit!\n        } finally {\n            lock.unlockIds(accountIds);\n        }\n    }\n</code></pre>\n", "title": "Java synchronisation: atomically moving money across account pairs?", "tags": ["java", "multithreading"], "link": "http://stackoverflow.com/questions/29280857/java-synchronisation-atomically-moving-money-across-account-pairs/29281569#29281569", "question_id": 29280857, "answer_id": 29281569}, {"body": "<p>One way to do this is to have a transaction log. Before moving the money, you'll need to write to the transaction log of each account what you intend to do. The log should contain: the amount of money that's taken in/out of the account, and an lock which is shared between the log pair.</p>\n\n<p>Initially the lock should be in a blocked state. You created the log pair, one with amount of X and the other with amount of -X, and both shares a lock. Then deliver the log entry to the inbox of the respective accounts, the account from which money is taken out should reserve that amount. Once you've confirmed that they're delivered safely, then release the lock. The moment the lock is released you're at a point if no return. The accounts then should resolve themselves.</p>\n\n<p>If either of the party want to fail the transaction at any time before the lock is released, then simply remove the logs and return the reserved amount to the main balance.</p>\n\n<p>This approach may be a bit heavy, but it would also work in a distributed scenario where the accounts actually are in different machines, and the inboxes actually would have to be persisted, to ensure money never get lost if any of the machine crashes/goes offline unexpectedly. Its general technique is called two phase locking.</p>\n", "title": "Java synchronisation: atomically moving money across account pairs?", "tags": ["java", "multithreading"], "link": "http://stackoverflow.com/questions/29280857/java-synchronisation-atomically-moving-money-across-account-pairs/29281872#29281872", "question_id": 29280857, "answer_id": 29281872}, {"body": "<p>You can create an extra <code>Account</code> <code>T</code> that exists solely for transferring the money. So if you want to transfer from <code>A</code> to <code>B</code> you actually transfer from <code>A</code> to <code>T</code> and then from <code>T</code> to <code>B</code>. For each of these transfers you only lock either <code>A</code> or <code>B</code> depending on which account is participating in the transfer. Since you are using the same type for transfers, you end up with little extra code and therefore low maintenance costs.</p>\n\n<p>To reduce the number of extra accounts you could hold them in a pool. If you have a thread pool that is processing transfers, than you can assign each thread it's own extra account. Therefore you don't need to request and release those extra accounts from/to a pool too often.</p>\n", "title": "Java synchronisation: atomically moving money across account pairs?", "tags": ["java", "multithreading"], "link": "http://stackoverflow.com/questions/29280857/java-synchronisation-atomically-moving-money-across-account-pairs/29282055#29282055", "question_id": 29280857, "answer_id": 29282055}, {"body": "<p>A simple solution could be to use a lock per account, but to avoid deadlock you have to acquire locks in the same order always. So, you could have a final account ID, and acquire the lock of the account with a less id first:</p>\n\n<pre><code>public void transfer(Account acc1, Account acc2, BigDecimal value) {\n    Object lock1 = acc1.ID &lt; acc2.ID ? acc1.LOCK : acc2.LOCK;\n    Object lock2 = acc1.ID &lt; acc2.ID ? acc2.LOCK : acc1.LOCK;\n    synchronized (lock1) {\n       synchronized (lock2) {\n          acc1.widrawal(value);\n          acc2.send(value);\n       }\n    }\n}\n</code></pre>\n", "title": "Java synchronisation: atomically moving money across account pairs?", "tags": ["java", "multithreading"], "link": "http://stackoverflow.com/questions/29280857/java-synchronisation-atomically-moving-money-across-account-pairs/29282150#29282150", "question_id": 29280857, "answer_id": 29282150}, {"body": "<p>Don't use built-in synchronization, use a Lock object. Use tryLock() to get an exclusive lock on both accounts at the same time. If either one fails, then release both locks and wait a random amount of time and try again.</p>\n", "title": "Java synchronisation: atomically moving money across account pairs?", "tags": ["java", "multithreading"], "link": "http://stackoverflow.com/questions/29280857/java-synchronisation-atomically-moving-money-across-account-pairs/29282301#29282301", "question_id": 29280857, "answer_id": 29282301}, {"body": "<p>As you have mentioned there will be 1000-10000 concurrent transaction you expecting at a time than you can store accounts on which some transaction is going on and handle concurrency</p>\n\n<p>One Solution is to allow system to create only one object of particulate account id, means that if you want to make a transaction between account \"123\" and \"456\" than your thread will create account object and in that constructor of account class we will check if any other object of account is there with particulate account id, if other object of account is there with same account id means that some transaction is going on with particulate account id so you have to wait to get the account object.</p>\n\n<p>So we can do transaction between \"123\" and \"456\" and at same time we can do transaction between \"abc\" and \"xyz\" but if at same time some other thread will try to create object of account \"123\" than system will say please wait </p>\n\n<p>for reference you can see below code </p>\n\n<p>Please note :</p>\n\n<ol>\n<li><p>dont forgote to remove your account id from locks map by call to  freeAccount(BigDecimal accId) from LockHolder class</p></li>\n<li><p>I have used HasMap instand of list because list will not be a good choice when you are randomly removing element from it(or when frequently you are updating it) </p>\n\n<pre><code>package test;\n\nimport java.math.BigDecimal;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class T {\n\npublic static void main(String[] args) {\n    Account ac, ac2;\n\n    try {\n        ac = new Account(new BigDecimal(\"123\"));\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n    try {\n        ac2 = new Account(new BigDecimal(\"123\"));\n    } catch (Exception e) {\n        System.out.println(\"Please Wait\");\n    }\n\n}\n}\n\nclass Account {\n public Account(BigDecimal accId) throws Exception {\n    if (LockHolder.isLocked(accId)) {\n        throw new Exception();\n    } else {\n        LockHolder.setLock(accId);\n    }\n }\n}\n\nclass LockHolder {\n public static  Map&lt;BigDecimal, Integer&gt; locks = new HashMap&lt;BigDecimal, Integer&gt;();\n\n public synchronized static boolean isLocked(BigDecimal accId) {\n    return LockHolder.locks.containsKey(accId);\n }\n\n public synchronized static void setLock(BigDecimal accId) {\n    LockHolder.locks.put(accId , 1);\n }\n public synchronized static void freeAccount(BigDecimal accId) {\n    LockHolder.locks.remove(accId);\n }\n}\n</code></pre></li>\n</ol>\n", "title": "Java synchronisation: atomically moving money across account pairs?", "tags": ["java", "multithreading"], "link": "http://stackoverflow.com/questions/29280857/java-synchronisation-atomically-moving-money-across-account-pairs/29282558#29282558", "question_id": 29280857, "answer_id": 29282558}, {"body": "<p>An approach which will remain robust even if threads may get arbitrarily waylaid is to have each account maintain a list of transactions requested or posted against it.  To request a transfer from one account to another, create a transaction object defining the request and add it to the request queue for the source account.  If that account can perform the transaction, it should move it to its list of posted transactions and add it to the request queue for the destination.  Using <code>AtomicReference</code> it's possible to ensure that from the moment the transaction is placed into the queue for the first account, the state of the system will always thereafter either have the transaction pending, completed, or aborted, and even if some or all threads were to get waylaid, examining the transaction lists would make it possible to determine what money belonged where.</p>\n\n<p>By contrast, when using locks, events which unexpectedly delay one thread can arbitrarily impede the execution of many others, and if a thread gets killed off while holding a lock it may be impossible to determine what exactly it had or had not done prior to that.</p>\n", "title": "Java synchronisation: atomically moving money across account pairs?", "tags": ["java", "multithreading"], "link": "http://stackoverflow.com/questions/29280857/java-synchronisation-atomically-moving-money-across-account-pairs/29290458#29290458", "question_id": 29280857, "answer_id": 29290458}, {"body": "<p>As stated previously, you should lock on both accounts, always in the same order. The key part, however, is ensuring both high granularity and singularity across the VM instance. This can be done using <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#intern()\" rel=\"nofollow\"><code>String.intern()</code></a>:</p>\n\n<pre><code>public boolean transfer(Account from, Account to, BigDecimal amount) {\n    String fromAccountId = from.id.toString().intern();\n    String toAccountId = to.id.toString().intern();\n    String lock1, lock2;\n\n    if (from.id &lt; to.id) {\n       lock1 = fromAccountId;\n       lock2 = toAccountId;\n    } else {\n       lock1 = toAccountId;\n       lock2 = fromAccountId;\n    }\n\n    // synchronizing from this point, since balances are checked\n    synchronized(lock1) {\n        synchronized(lock2) {\n            BigDecimal fromValue = from.getAmount();\n            if (amount.compareTo(fromValue) &lt; 0)\n                 return false;\n            BigDecimal toValue = to.getAmount();\n            from.setAmount(fromValue.add(amount.negate()));\n            to.setAmount(toValue.add(amount));\n            return true;\n        }\n    }\n}\n</code></pre>\n", "title": "Java synchronisation: atomically moving money across account pairs?", "tags": ["java", "multithreading"], "link": "http://stackoverflow.com/questions/29280857/java-synchronisation-atomically-moving-money-across-account-pairs/29382161#29382161", "question_id": 29280857, "answer_id": 29382161}, {"body": "<p>Thanks all for interest to question.</p>\n\n<p>I found several solutions in <a href=\"https://www.securecoding.cert.org/confluence/display/java/LCK07-J.+Avoid+deadlock+by+requesting+and+releasing+locks+in+the+same+order\" rel=\"nofollow\">https://www.securecoding.cert.org/confluence/display/java/LCK07-J.+Avoid+deadlock+by+requesting+and+releasing+locks+in+the+same+order</a></p>\n\n<p>As one link answer was removed here essential piece of code that help anyone when cert.org fall. Pieces are long so I didn't include any pros/cons.</p>\n\n<p><strong>Private Static Final Lock Object</strong>:</p>\n\n<pre><code>final class BankAccount {\n  private double balanceAmount;  // Total amount in bank account\n  private static final Object lock = new Object();\n\n  BankAccount(double balance) {\n    this.balanceAmount = balance;\n  }\n\n  // Deposits the amount from this object instance\n  // to BankAccount instance argument ba\n  private void depositAmount(BankAccount ba, double amount) {\n    synchronized (lock) {\n      if (amount &gt; balanceAmount) {\n        throw new IllegalArgumentException(\n            \"Transfer cannot be completed\");\n      }\n      ba.balanceAmount += amount;\n      this.balanceAmount -= amount;\n    }\n  }\n\n  public static void initiateTransfer(final BankAccount first,\n    final BankAccount second, final double amount) {\n\n    Thread transfer = new Thread(new Runnable() {\n        @Override public void run() {\n          first.depositAmount(second, amount);\n        }\n    });\n    transfer.start();\n  }\n}\n</code></pre>\n\n<p><strong>Ordered Locks</strong>:</p>\n\n<pre><code>final class BankAccount implements Comparable&lt;BankAccount&gt; {\n  private double balanceAmount;  // Total amount in bank account\n  private final Object lock;\n\n  private final long id; // Unique for each BankAccount\n  private static long NextID = 0; // Next unused ID\n\n  BankAccount(double balance) {\n    this.balanceAmount = balance;\n    this.lock = new Object();\n    this.id = this.NextID++;\n  }\n\n  @Override public int compareTo(BankAccount ba) {\n     return (this.id &gt; ba.id) ? 1 : (this.id &lt; ba.id) ? -1 : 0;\n  }\n\n  // Deposits the amount from this object instance\n  // to BankAccount instance argument ba\n  public void depositAmount(BankAccount ba, double amount) {\n    BankAccount former, latter;\n    if (compareTo(ba) &lt; 0) {\n      former = this;\n      latter = ba;\n    } else {\n      former = ba;\n      latter = this;\n    }\n    synchronized (former) {\n      synchronized (latter) {\n        if (amount &gt; balanceAmount) {\n          throw new IllegalArgumentException(\n              \"Transfer cannot be completed\");\n        }\n        ba.balanceAmount += amount;\n        this.balanceAmount -= amount;\n      }\n    }\n  }\n\n  public static void initiateTransfer(final BankAccount first,\n    final BankAccount second, final double amount) {\n\n    Thread transfer = new Thread(new Runnable() {\n        @Override public void run() {\n          first.depositAmount(second, amount);\n        }\n    });\n    transfer.start();\n  }\n}\n</code></pre>\n\n<p><strong>Compliant Solution (ReentrantLock)</strong>:</p>\n\n<pre><code>final class BankAccount {\n  private double balanceAmount;  // Total amount in bank account\n  private final Lock lock = new ReentrantLock();\n  private final Random number = new Random(123L);\n\n  BankAccount(double balance) {\n    this.balanceAmount = balance;\n  }\n\n  // Deposits amount from this object instance\n  // to BankAccount instance argument ba\n  private void depositAmount(BankAccount ba, double amount)\n                             throws InterruptedException {\n    while (true) {\n      if (this.lock.tryLock()) {\n        try {\n          if (ba.lock.tryLock()) {\n            try {\n              if (amount &gt; balanceAmount) {\n                throw new IllegalArgumentException(\n                    \"Transfer cannot be completed\");\n              }\n              ba.balanceAmount += amount;\n              this.balanceAmount -= amount;\n              break;\n            } finally {\n              ba.lock.unlock();\n            }\n          }\n        } finally {\n          this.lock.unlock();\n        }\n      }\n      int n = number.nextInt(1000);\n      int TIME = 1000 + n; // 1 second + random delay to prevent livelock\n      Thread.sleep(TIME);\n    }\n  }\n\n  public static void initiateTransfer(final BankAccount first,\n    final BankAccount second, final double amount) {\n\n    Thread transfer = new Thread(new Runnable() {\n        public void run() {\n          try {\n            first.depositAmount(second, amount);\n          } catch (InterruptedException e) {\n            Thread.currentThread().interrupt(); // Reset interrupted status\n          }\n        }\n    });\n    transfer.start();\n  }\n}\n</code></pre>\n", "title": "Java synchronisation: atomically moving money across account pairs?", "tags": ["java", "multithreading"], "link": "http://stackoverflow.com/questions/29280857/java-synchronisation-atomically-moving-money-across-account-pairs/29385349#29385349", "question_id": 29280857, "answer_id": 29385349}], "creation_date": 1427379603, "score": 40, "link": "http://stackoverflow.com/questions/29280857/java-synchronisation-atomically-moving-money-across-account-pairs", "question_id": 29280857}, {"body": "<p>I've been attempting to implement a CollapsingToolbar with a RecyclerView using the small amount of guidance here: <a href=\"http://android-developers.blogspot.co.uk/2015/05/android-design-support-library.html\">http://android-developers.blogspot.co.uk/2015/05/android-design-support-library.html</a> and the project here: <a href=\"https://github.com/chrisbanes/cheesesquare\">https://github.com/chrisbanes/cheesesquare</a>, and I currently have the following layout:</p>\n\n<pre><code>&lt;android.support.design.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\nandroid:id=\"@+id/main_content\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"&gt;\n\n&lt;android.support.design.widget.AppBarLayout\n    android:id=\"@+id/appbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"@dimen/detail_backdrop_height\"\n    android:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\"\n    android:fitsSystemWindows=\"true\"&gt;\n\n    &lt;android.support.design.widget.CollapsingToolbarLayout\n        android:id=\"@+id/collapsing_toolbar\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:layout_scrollFlags=\"scroll|exitUntilCollapsed\"\n        android:fitsSystemWindows=\"true\"\n        app:theme=\"@style/Toolbar\"\n        app:contentScrim=\"@color/primary\"\n        app:expandedTitleMarginStart=\"48dp\"\n        app:expandedTitleMarginEnd=\"64dp\"&gt;\n\n        &lt;ImageView\n            android:id=\"@+id/backdrop\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:scaleType=\"centerCrop\"\n            android:fitsSystemWindows=\"true\"\n            app:layout_collapseMode=\"parallax\" /&gt;\n\n        &lt;android.support.v7.widget.Toolbar\n            android:id=\"@+id/toolbar\"\n            app:theme=\"@style/Toolbar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"?attr/actionBarSize\"\n            app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\n            app:layout_collapseMode=\"pin\" /&gt;\n\n    &lt;/android.support.design.widget.CollapsingToolbarLayout&gt;\n\n&lt;/android.support.design.widget.AppBarLayout&gt;\n\n&lt;android.support.v7.widget.RecyclerView\n    android:id=\"@+id/recyclerView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:layout_behavior=\"@string/appbar_scrolling_view_behavior\" /&gt;\n\n&lt;android.support.design.widget.FloatingActionButton\n    android:layout_height=\"wrap_content\"\n    android:layout_width=\"wrap_content\"\n    app:layout_anchor=\"@id/appbar\"\n    app:layout_anchorGravity=\"bottom|right|end\"\n    android:src=\"@drawable/ic_directions\"\n    android:layout_margin=\"@dimen/fab_margin\"\n    android:clickable=\"true\"/&gt;\n\n &lt;/android.support.design.widget.CoordinatorLayout&gt;\n</code></pre>\n\n<p>The source is as follows:</p>\n\n<pre><code>    setContentView(R.layout.activity_details_image);\n    final Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n    setSupportActionBar(toolbar);\n    getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n    loadImage();\n    CollapsingToolbarLayout collapsingToolbar =\n            (CollapsingToolbarLayout) findViewById(R.id.collapsing_toolbar);\n    collapsingToolbar.setTitle(formatName(getIntent().getStringExtra(\"name\")));\n    RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recyclerView);\n    recyclerView.setLayoutManager(new LinearLayoutManager(this));\n    ArrayList&lt;DetailsAdapter.Detail&gt; details = new ArrayList&lt;DetailsAdapter.Detail&gt;();\n    details.add(new DetailsAdapter.Detail(\"Main Facilities\", \"Children's Play Area, Ecotricity Electric Vehicle Charging Point, Lucky Coin, Multi Faith Room (southbound only), Showers\", R.drawable.ic_moto));\n    details.add(new DetailsAdapter.Detail(\"Restaurants\", \"Eat &amp; Drink Co., Burger King, Costa, West Cornwall Pasty Co. (northbound only), Greggs, Costa Express, Krispy Kreme\", R.drawable.ic_moto));\n    details.add(new DetailsAdapter.Detail(\"Shops\", \"WHSmith, M&amp;S Simply Food, Fone Bitz, Cotton Traders, Ladbrokes (southbound only)\", R.drawable.ic_moto));\n    details.add(new DetailsAdapter.Detail(\"Motel\", \"Travelodge\", R.drawable.ic_moto));\n    details.add(new DetailsAdapter.Detail(\"Forecourt\", \"BP (with: LPG), Costa Express, Air1 AdBlue\", R.drawable.ic_moto));\n    DetailsAdapter mAdapter = new DetailsAdapter(this, details);\n    recyclerView.setAdapter(mAdapter);\n    recyclerView.setItemAnimator(new DefaultItemAnimator());\n</code></pre>\n\n<p>I've tested it without the collapsing toolbar and it scrolls fine</p>\n\n<p>However it doesn't scroll, even when the list is longer than the visible parts. What have I done wrong?</p>\n", "tags": ["java", "android", "xml", "appcompat", "android-design-library"], "title": "CoordinatorLayout with RecyclerView &amp; CollapsingToolbarLayout", "answers": [{"body": "<p>Make sure you're using <strong>com.android.support:recyclerview-v7:22.2.0</strong></p>\n\n<p>(With version prior to 22.2.0 it didn't work for me either)</p>\n", "title": "CoordinatorLayout with RecyclerView &amp; CollapsingToolbarLayout", "tags": ["java", "android", "xml", "appcompat", "android-design-library"], "link": "http://stackoverflow.com/questions/30546812/coordinatorlayout-with-recyclerview-collapsingtoolbarlayout/30555460#30555460", "question_id": 30546812, "answer_id": 30555460}, {"body": "<p>im probably 1 year late to answer this. I found a solution. Here it is, add layout_marginBottom in the nested scroll view:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n\n&lt;android.support.design.widget.CoordinatorLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/main_coord_layout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\"com.example.android.minhnguyencv.MainActivity\"&gt;\n\n    &lt;android.support.design.widget.AppBarLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"256dp\"\n        android:id=\"@+id/appbar\"\n        android:theme=\"@style/AppTheme.AppBarOverlay\"\n        app:elevation=\"4dp\"&gt;\n\n        &lt;android.support.design.widget.CollapsingToolbarLayout\n            android:id=\"@+id/collapse_toolbar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            app:layout_scrollFlags = \"scroll|exitUntilCollapsed\"\n            app:contentScrim=\"@color/colorPrimary\"\n            android:fitsSystemWindows=\"true\"\n            app:expandedTitleTextAppearance=\"@android:color/transparent\"&gt;\n\n            &lt;ImageView\n                android:id=\"@+id/coverPhoto\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:scaleType=\"fitXY\"\n                android:fitsSystemWindows=\"true\"\n                android:src=\"@drawable/coverphoto\"\n                app:layout_collapseMode=\"parallax\"\n                android:clickable=\"true\" /&gt;\n\n            &lt;ImageView\n                android:id=\"@+id/profilePhoto\"\n                android:layout_width=\"150dp\"\n                android:layout_height=\"150dp\"\n                android:layout_gravity=\"center_horizontal|bottom\"\n                android:scaleType=\"fitXY\"\n                android:fitsSystemWindows=\"true\"\n                app:layout_collapseMode=\"parallax\"\n                android:clickable=\"true\" /&gt;\n\n            &lt;android.support.v7.widget.Toolbar\n                android:id=\"@+id/toolbar\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"?attr/actionBarSize\"\n                app:popupTheme=\"@style/AppTheme.PopupOverlay\"\n                app:layout_collapseMode = \"pin\" /&gt;\n\n        &lt;/android.support.design.widget.CollapsingToolbarLayout&gt;\n\n    &lt;/android.support.design.widget.AppBarLayout&gt;\n\n    &lt;android.support.v4.widget.NestedScrollView\n        android:id=\"@+id/main_nested_scroll_view\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity = \"fill_vertical\"\n        android:layout_marginBottom=\"?attr/actionBarSize\"\n        app:layout_behavior = \"@string/appbar_scrolling_view_behavior\"&gt;\n\n        &lt;include layout=\"@layout/content_main\" /&gt;\n\n    &lt;/android.support.v4.widget.NestedScrollView&gt;\n\n    &lt;include layout=\"@layout/floating_button_menu\"/&gt;\n\n&lt;/android.support.design.widget.CoordinatorLayout&gt;\n</code></pre>\n", "title": "CoordinatorLayout with RecyclerView &amp; CollapsingToolbarLayout", "tags": ["java", "android", "xml", "appcompat", "android-design-library"], "link": "http://stackoverflow.com/questions/30546812/coordinatorlayout-with-recyclerview-collapsingtoolbarlayout/37238077#37238077", "question_id": 30546812, "answer_id": 37238077}], "creation_date": 1432992810, "score": 40, "link": "http://stackoverflow.com/questions/30546812/coordinatorlayout-with-recyclerview-collapsingtoolbarlayout", "question_id": 30546812}, {"body": "<p>I have the following sample code:</p>\n\n<pre><code>System.out.println(\n       \"Result: \" +\n        Stream.of(1, 2, 3)\n                .filter(i -&gt; {\n                    System.out.println(i);\n                    return true;\n                })\n                .findFirst()\n                .get()\n);\nSystem.out.println(\"-----------\");\nSystem.out.println(\n       \"Result: \" +\n        Stream.of(1, 2, 3)\n                .flatMap(i -&gt; Stream.of(i - 1, i, i + 1))\n                .flatMap(i -&gt; Stream.of(i - 1, i, i + 1))\n                .filter(i -&gt; {\n                    System.out.println(i);\n                    return true;\n                })\n                .findFirst()\n                .get()\n);\n</code></pre>\n\n<p>The output is as follows:</p>\n\n<pre><code>1\nResult: 1\n-----------\n-1\n0\n1\n0\n1\n2\n1\n2\n3\nResult: -1\n</code></pre>\n\n<p>From here I see that in first case <code>stream</code> really behaves lazily - we use <code>findFirst()</code> so once we have first element our filtering lambda is not invoked.\nHowever, in second case which uses <code>flatMaps</code> we see that despite first element which <code>fulfils</code> the filter condition is found (it's just any first element as lambda always returns true) further contents of the stream are still being fed through filtering function.</p>\n\n<p>I am trying to understand why it behaves like this rather than giving up after first element is calculated as in the first case.\nAny helpful information would be appreciated.</p>\n", "tags": ["java", "lambda", "java-8", "java-stream"], "title": "Why filter() after flatMap() is &quot;not completely&quot; lazy in Java streams?", "answers": [{"body": "<p>The elements of the input stream are consumed lazily one by one. The first element, <code>1</code>, is transformed by the two <code>flatMap</code>s into the stream <code>-1, 0, 1, 0, 1, 2, 1, 2, 3</code>, so that entire stream corresponds to just the first input element. The nested streams are eagerly materialized by the pipeline, then flattened, then fed to the <code>filter</code> stage. This explains your output.</p>\n\n<p>The above does not stem from a fundamental limitation, but it would probably make things much more complicated to get full-blown laziness for nested streams. I suspect it would be an even greater challenge to make it performant. For comparison, Clojure's lazy seqs get another layer of wrapping for each such level of nesting. Due to this design the operations may even fail with <code>StackOverflowError</code> when nesting is exercised to the extreme.</p>\n", "title": "Why filter() after flatMap() is &quot;not completely&quot; lazy in Java streams?", "tags": ["java", "lambda", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/29229373/why-filter-after-flatmap-is-not-completely-lazy-in-java-streams/29229513#29229513", "question_id": 29229373, "answer_id": 29229513}, {"body": "<p>When looking into the implementation (<code>ReferencePipeline.java</code>) we see the method [<a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/java/util/stream/ReferencePipeline.java#l124\">link</a>]</p>\n\n<pre><code>@Override\nfinal void forEachWithCancel(Spliterator&lt;P_OUT&gt; spliterator, Sink&lt;P_OUT&gt; sink) {\n    do { } while (!sink.cancellationRequested() &amp;&amp; spliterator.tryAdvance(sink));\n}\n</code></pre>\n\n<p>which will be invoke for <code>findFirst</code> operation. The special thing to take care about is the <code>sink.cancellationRequested()</code> which allows to end the loop on the first match. Compare to [<a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/java/util/stream/ReferencePipeline.java#l252\">link</a>]</p>\n\n<pre><code>@Override\npublic final &lt;R&gt; Stream&lt;R&gt; flatMap(Function&lt;? super P_OUT, ? extends Stream&lt;? extends R&gt;&gt; mapper) {\n    Objects.requireNonNull(mapper);\n    // We can do better than this, by polling cancellationRequested when stream is infinite\n    return new StatelessOp&lt;P_OUT, R&gt;(this, StreamShape.REFERENCE,\n                                 StreamOpFlag.NOT_SORTED | StreamOpFlag.NOT_DISTINCT | StreamOpFlag.NOT_SIZED) {\n        @Override\n        Sink&lt;P_OUT&gt; opWrapSink(int flags, Sink&lt;R&gt; sink) {\n            return new Sink.ChainedReference&lt;P_OUT, R&gt;(sink) {\n                @Override\n                public void begin(long size) {\n                    downstream.begin(-1);\n                }\n\n                @Override\n                public void accept(P_OUT u) {\n                    try (Stream&lt;? extends R&gt; result = mapper.apply(u)) {\n                        // We can do better that this too; optimize for depth=0 case and just grab spliterator and forEach it\n                        if (result != null)\n                            result.sequential().forEach(downstream);\n                    }\n                }\n            };\n        }\n    };\n}\n</code></pre>\n\n<p>The method for advancing one item ends up calling <code>forEach</code> on the sub-stream without any possibility for earlier termination and the comment at the beginning of the <code>flatMap</code> method even tells about this absent feature.</p>\n\n<p>Since this is more than just an optimization thing as it implies that the code simply breaks when the sub-stream is infinite, I hope that the developers soon prove that they \u201ccan do better than this\u201d\u2026</p>\n\n<hr>\n\n<p>To illustrate the implications, while <code>Stream.iterate(0, i-&gt;i+1).findFirst()</code> works as expected, <code>Stream.of(\"\").flatMap(x-&gt;Stream.iterate(0, i-&gt;i+1)).findFirst()</code> will end up in an infinite loop.</p>\n\n<p>Regarding the specification, most of it can be found in the</p>\n\n<p><a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#StreamOps\">chapter \u201cStream operations and pipelines\u201d of the package specification</a>:</p>\n\n<blockquote>\n  <p>\u2026</p>\n  \n  <p>Intermediate operations return a new stream. They are always <em>lazy</em>;</p>\n  \n  <p>\u2026</p>\n  \n  <p>\u2026 Laziness also allows avoiding examining all the data when it is not necessary; for operations such as \"find the first string longer than 1000 characters\", it is only necessary to examine just enough strings to find one that has the desired characteristics without examining all of the strings available from the source. (This behavior becomes even more important when the input stream is infinite and not merely large.)</p>\n  \n  <p>\u2026</p>\n  \n  <p>Further, some operations are deemed <em>short-circuiting</em> operations. An intermediate operation is short-circuiting if, when presented with infinite input, it may produce a finite stream as a result. A terminal operation is short-circuiting if, when presented with infinite input, it may terminate in finite time. Having a short-circuiting operation in the pipeline is a necessary, but not sufficient, condition for the processing of an infinite stream to terminate normally in finite time.</p>\n</blockquote>\n\n<p>It\u2019s clear that a short-circuiting operation doesn\u2019t guaranty a finite time termination, e.g. when a filter doesn\u2019t match any item the processing can\u2019t complete, but an implementation which doesn\u2019t support any termination in finite time by simply ignoring the short-circuiting nature of an operation is far off the specification.</p>\n", "title": "Why filter() after flatMap() is &quot;not completely&quot; lazy in Java streams?", "tags": ["java", "lambda", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/29229373/why-filter-after-flatmap-is-not-completely-lazy-in-java-streams/29230939#29230939", "question_id": 29229373, "answer_id": 29230939}, {"body": "<p>With regard to breakage with infinite sub-streams, the behavior of flatMap becomes still more surprising when one throws in an <strong>intermediate</strong> (as opposed to terminal) short-circuiting operation.</p>\n\n<p>While the following works as expected, printing out the infinite sequence of integers</p>\n\n<pre><code>Stream.of(\"x\").flatMap(_x -&gt; Stream.iterate(1, i -&gt; i + 1)).forEach(System.out::println);\n</code></pre>\n\n<p>the  following code prints out only the \"1\", but still does <strong>not</strong> terminate:</p>\n\n<pre><code>Stream.of(\"x\").flatMap(_x -&gt; Stream.iterate(1, i -&gt; i + 1)).limit(1).forEach(System.out::println);\n</code></pre>\n\n<p>I cannot imagine a reading of the spec in which that were not a bug.</p>\n", "title": "Why filter() after flatMap() is &quot;not completely&quot; lazy in Java streams?", "tags": ["java", "lambda", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/29229373/why-filter-after-flatmap-is-not-completely-lazy-in-java-streams/29986041#29986041", "question_id": 29229373, "answer_id": 29986041}, {"body": "<p>In my free <a href=\"https://github.com/amaembo/streamex\" rel=\"nofollow\">StreamEx</a> library I introduced the short-circuiting collectors. When collecting sequential stream with short-circuiting collector (like <a href=\"http://amaembo.github.io/streamex/javadoc/javax/util/streamex/MoreCollectors.html#first--\" rel=\"nofollow\"><code>MoreCollectors.first()</code></a>) exactly one element is consumed from the source. Internally it's implemented in quite dirty way: using a custom exception to break the control flow. Using my library your sample could be rewritten in this way:</p>\n\n<pre><code>System.out.println(\n        \"Result: \" +\n                StreamEx.of(1, 2, 3)\n                .flatMap(i -&gt; Stream.of(i - 1, i, i + 1))\n                .flatMap(i -&gt; Stream.of(i - 1, i, i + 1))\n                .filter(i -&gt; {\n                    System.out.println(i);\n                    return true;\n                })\n                .collect(MoreCollectors.first())\n                .get()\n        );\n</code></pre>\n\n<p>The result is the following:</p>\n\n<pre><code>-1\nResult: -1\n</code></pre>\n", "title": "Why filter() after flatMap() is &quot;not completely&quot; lazy in Java streams?", "tags": ["java", "lambda", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/29229373/why-filter-after-flatmap-is-not-completely-lazy-in-java-streams/33839551#33839551", "question_id": 29229373, "answer_id": 33839551}], "creation_date": 1427190414, "score": 40, "link": "http://stackoverflow.com/questions/29229373/why-filter-after-flatmap-is-not-completely-lazy-in-java-streams", "question_id": 29229373}, {"body": "<p>I have trouble understanding the source code of <code>Arrays.copyOf</code>.</p>\n\n<pre><code>public static &lt;T,U&gt; T[] copyOf(U[] original, int newLength, Class&lt;? extends T[]&gt; newType) {\n    T[] copy = ((Object)newType == (Object)Object[].class)\n        ? (T[]) new Object[newLength]\n        : (T[]) Array.newInstance(newType.getComponentType(), newLength);\n    System.arraycopy(original, 0, copy, 0,\n                     Math.min(original.length, newLength));\n    return copy;\n}\n</code></pre>\n\n<ol>\n<li><p>what is this line checking?</p>\n\n<pre><code>(Object)newType == (Object)Object[].class\n</code></pre></li>\n<li><p>What are the differences between <code>(T[]) new Object[newLength]</code> and <code>(T[]) Array.newInstance(newType.getComponentType(), newLength)</code>. why <code>Array.newInstance</code> not good enough for both cases?</p></li>\n<li><p>This following line compiles, but crashes at run time (as expected). When should I use this method?</p>\n\n<pre><code>Integer[] nums = Arrays.copyOf(new String[]{\"a\", \"b\"}, 2, Integer[].class) \n</code></pre></li>\n</ol>\n", "tags": ["java", "arrays", "generics"], "title": "Do not understand the source code of Arrays.copyOf", "answers": [{"body": "<ol>\n<li><p>It is checking if newType is array of Objects or not:</p>\n\n<pre><code>Object[] a1 = new Object[100]; -- array of Objects\n\nString[] a2 = new String[100]; -- array of Strings\n</code></pre></li>\n</ol>\n\n<p>Why to do that? Because new Object[n] is faster than Array.newInstance</p>\n\n<ol start=\"2\">\n<li><p><code>Array.newInstance(Class&lt;?&gt; componentType, int... dimensions)</code> creates an array of types defined by the first argument, eg <code>String.class</code> -> <code>String[]</code>. Note that <code>String[].class.getComponentType()</code> returns <code>String.class</code></p></li>\n<li><p>You cannot use it like that, but it can be like this</p>\n\n<pre><code>Integer[] nums = Arrays.copyOf(new Object[]{1, 2}, 2, Integer[].class);\n</code></pre></li>\n</ol>\n\n<p>in this case it depends only on actual type of elements, eg</p>\n\n<pre><code>  Arrays.copyOf(new Object[]{1L, 2}, 2, Integer[].class);\n</code></pre>\n\n<p>will fail, you cannot write in <code>Integer[]</code> anything but <code>Integer</code></p>\n", "title": "Do not understand the source code of Arrays.copyOf", "tags": ["java", "arrays", "generics"], "link": "http://stackoverflow.com/questions/29494800/do-not-understand-the-source-code-of-arrays-copyof/29495065#29495065", "question_id": 29494800, "answer_id": 29495065}, {"body": "<blockquote>\n  <ol>\n  <li>what is this line checking?</li>\n  </ol>\n</blockquote>\n\n<pre><code>(Object)newType == (Object)Object[].class\n</code></pre>\n\n<p>It is checking whether variable <code>newType</code> holds a reference to an instance of <code>java.lang.Class</code> representing type <code>Object[]</code>.  The casts are unneeded.</p>\n\n<blockquote>\n  <ol start=\"2\">\n  <li>What are the differences between <code>(T[]) new Object[newLength]</code> and <code>(T[]) Array.newInstance(newType.getComponentType(), newLength)</code>. why <code>Array.newInstance</code> not good enough for both cases?</li>\n  </ol>\n</blockquote>\n\n<p>As far as I can tell, <code>Array.newInstance()</code> <em>could</em> be used in both cases, but non-reflective ordinary array construction is likely a bit faster.  Thus, I suppose that <code>Object[]</code> is called out as a special case for performance reasons, but I have no idea whether that case is exercised frequently enough for the optimization to be important.</p>\n\n<blockquote>\n  <ol start=\"3\">\n  <li>This following line compiles, but crashes at run time (as expected). When should I use this method?</li>\n  </ol>\n</blockquote>\n\n<pre><code>Integer[] nums = Arrays.copyOf(new String[]{\"a\", \"b\"}, 2, Integer[].class) \n</code></pre>\n\n<p>You should use it when you need to copy an array to an array with a possibly different (but compatible) element type, especially when the element types are not statically known.  If you know you want the copy to have the same element type as the original, then it's easier to use the original array's <code>clone()</code> method.</p>\n", "title": "Do not understand the source code of Arrays.copyOf", "tags": ["java", "arrays", "generics"], "link": "http://stackoverflow.com/questions/29494800/do-not-understand-the-source-code-of-arrays-copyof/29495113#29495113", "question_id": 29494800, "answer_id": 29495113}, {"body": "<p>Let me attempt to answer this:</p>\n\n<p>To answer your first question, it's checking if the newType type is the same as the types in the array. Both are also upcasting the types to an Object type. That is, it tries to see if the array's parent type is of object. <a href=\"http://stackoverflow.com/questions/23414090/what-is-the-difference-between-up-casting-and-down-casting-with-respect-to-class\">See this SO question on Upcasting and Downcasting</a>. My guess is that it casts not because to check for type-safety. Even though all objects in Java <a href=\"https://docs.oracle.com/javase/tutorial/java/IandI/objectclass.html\" rel=\"nofollow\">derive from objects as a superclass.</a></p>\n\n<p>It would be helpful to notice that </p>\n\n<pre><code> T[] copy = ((Object)newType == (Object)Object[].class)\n    ? (T[]) new Object[newLength]\n    : (T[]) Array.newInstance(newType.getComponentType(), newLength);\n</code></pre>\n\n<p>is actually one line. i.e it is actually an if-else conditional.</p>\n\n<p><code>result = (condition) ? (doThisIfTrue) : (elseDoThisIfFalse)</code></p>\n\n<p><a href=\"http://www.cafeaulait.org/course/week2/43.html\" rel=\"nofollow\">Simple example here</a></p>\n\n<p>So essentially that line would be the same as:</p>\n\n<pre><code>T[] copy;\nBoolean condition = ((Object)newType == (Object)Object[].class)\nif(condition) \n     copy = (T[]) new Object[newLength];\nelse \n     copy = (T[]) Array.newInstance(newType.getComponentType(), newLength);\n</code></pre>\n\n<p>The reason why creating a new instance in Array.newInstance is likely a performance choice, where if the program always has to create new instances it'll be more expensive than just directly initializing a generic Object array and copy things over. </p>\n\n<p>Arrays.copyOf will create a new array (with references to the old one) but with a newer length and pads the unused positions with empty objects. <a href=\"http://www.tutorialspoint.com/java/util/arrays_copyof_int.htm\" rel=\"nofollow\">This is what it does on an array of ints</a> in which it pads the unused indexes with zeros.</p>\n\n<p>Arrays.CopyOf serves to provide a shallow-copy of the objects, that is it refers to the old items, but in a <em>new array</em>. <a href=\"http://stackoverflow.com/questions/18351726/does-arrays-copyof-produce-a-shallow-or-a-deep-copy\">This SO question has more info on it.</a></p>\n", "title": "Do not understand the source code of Arrays.copyOf", "tags": ["java", "arrays", "generics"], "link": "http://stackoverflow.com/questions/29494800/do-not-understand-the-source-code-of-arrays-copyof/29495437#29495437", "question_id": 29494800, "answer_id": 29495437}, {"body": "<p>First of all, the cast in that line</p>\n\n<pre><code>((Object)newType == (Object)Object[].class)\n</code></pre>\n\n<p>are absobuletly needed. Removing them will result in a compilation error :</p>\n\n<pre><code>incomparable types: Class&lt;CAP#1&gt; and Class&lt;Object[]&gt;\n where CAP#1 is a fresh type-variable:\n  CAP#1 extends T[] from capture of ? extends T[]\n</code></pre>\n\n<p>Now to answer your question <strong><em>What is this line checking ?</em></strong></p>\n\n<p>It simply verify if the given array is of object type, which is part of the answer for your other question <strong><em>Why <code>Array.newInstance</code> not good enough for both cases?</em></strong></p>\n\n<p>In the first case, we already know that the array is of <code>Object</code> type so there is no point in calling the <code>newInstance</code> method to retrieve the correct type, this would only result in performance loss.</p>\n\n<p>As for your final example,</p>\n\n<pre><code>Integer[] nums = Arrays.copyOf(new String[]{\"a\", \"b\"}, 2, Integer[].class) \n</code></pre>\n\n<p>That it does compile, it is true. Because the given arguments to the method are all valids. It will certainly fail at runtime; what would be the expected output of converting \"a\" to <code>Integer</code> type ?</p>\n\n<p>Now, when to use <code>copyOf</code> ? When you already know the both types, and already know that they are valid together. </p>\n\n<p>It main usage is to return a copy but truncated or padded with [null/default values] to the original array.</p>\n", "title": "Do not understand the source code of Arrays.copyOf", "tags": ["java", "arrays", "generics"], "link": "http://stackoverflow.com/questions/29494800/do-not-understand-the-source-code-of-arrays-copyof/29500496#29500496", "question_id": 29494800, "answer_id": 29500496}, {"body": "<blockquote>\n  <p>What is this line checking? <code>(Object)newType == (Object)Object[].class</code></p>\n</blockquote>\n\n<p>It's checking simple equality (likely for the purpose of a micro-optimization, but more on that later).</p>\n\n<p>The unusual casting is necessary because <code>Class&lt;Object[]&gt;</code> (the type of <code>Object[].class</code>) and <code>Class&lt;? extends T[]&gt;</code> are incomparable types. Basically, for an equality comparison with <code>==</code> to compile, one of the sides has to be a subtype or supertype of the other.</p>\n\n<p>I.e. we can't do:</p>\n\n<pre><code>// doesn't compile\n// this expression can never evaluate to true\n(new Integer(0) == new Float(0f))\n</code></pre>\n\n<p>The rules for generic types are a bit more complicated and there are a few cases where a comparison doesn't compile, but it may still evaluate to true.</p>\n\n<p>The reason <code>Class&lt;Object[]&gt;</code> is not a supertype of <code>Class&lt;? extends T[]&gt;</code>, despite <code>Object[]</code> being a supertype of all object array types, is that <a href=\"http://stackoverflow.com/q/2745265/2891664\">Java generics are invariant</a> without the presence of a wildcard.</p>\n\n<p>Another way to do the comparison would be:</p>\n\n<pre><code>(newType == (Class&lt;? extends Object[]&gt;)Object[].class)\n</code></pre>\n\n<blockquote>\n  <p>What are the differences between <code>(T[]) new Object[newLength]</code> and <code>(T[]) Array.newInstance(newType.getComponentType(), newLength)</code>?</p>\n</blockquote>\n\n<ul>\n<li><code>new Object[...]</code> creates an array the normal way, of a type that is statically known. Remember, the code has just checked that <code>T[]</code> is <code>Object[]</code>.</li>\n<li><code>Array.newInstance(...)</code> uses reflection to dynamically create an array of the <code>Class</code> type passed in.</li>\n</ul>\n\n<blockquote>\n  <p>Why <code>Array.newInstance</code> not good enough for both cases?</p>\n</blockquote>\n\n<p>An operation using reflection is <a href=\"http://stackoverflow.com/q/435553/2891664\">generally slower</a> than its non-reflective counterpart.</p>\n\n<p>The <a href=\"https://docs.oracle.com/javase/tutorial/reflect/\">reflection tutorial</a> says:</p>\n\n<blockquote>\n  <p>Because reflection involves types that are dynamically resolved, certain Java virtual machine optimizations can not be performed. Consequently, reflective operations have slower performance than their non-reflective counterparts, and should be avoided in sections of code which are called frequently in performance-sensitive applications.</p>\n</blockquote>\n\n<p>Java SE is filled with micro-optimization like this. The writers of SE try to squeeze everything they can out of it.</p>\n\n<p>But I wouldn't be worried about a performance hit in this case: <a href=\"http://hg.openjdk.java.net/jdk7u/jdk7u/hotspot/file/6e9aa487055f/src/share/vm/classfile/vmSymbols.hpp#l691\"><code>newInstance</code> and <code>copyOf</code></a> are <a href=\"http://bad-concurrency.blogspot.co.uk/2012/08/arithmetic-overflow-and-intrinsics.html\">HotSpot intrinsics</a>. This means that ideally calls to these methods get replaced with machine-specific assembly. Anecdotally, I ran some tests and found the difference between <code>new Object[...]</code> and <code>Array.newInstance(...)</code> to be negligible. The code in the question is probably a relic, although it may still be useful on less well-equipped JVMs.</p>\n\n<p>Reflection can also be disabled in certain contexts with strict security (such as an applet), but not typically for a normal desktop application.</p>\n\n\n\n<blockquote>\n  <p>When should I use this method?</p>\n</blockquote>\n\n<p>In general, you will probably never use this overload. This overload is only useful if you want to change the type of the array.</p>\n\n<ul>\n<li><p>Widening:</p>\n\n<pre><code>Object[] a = Arrays.copyOf(\n    new String[] { \"hello\", \"world\" }, 3, Object[].class);\na[2] = Character.valueOf('!');\nSystem.out.println(Arrays.toString(a));\n</code></pre></li>\n<li><p>Narrowing:</p>\n\n<pre><code>String[] a = Arrays.copyOf(\n    new Object[] { \"hello\", \"world\" }, 2, String[].class);\nSystem.out.println(String.join(\" \", a));\n</code></pre></li>\n</ul>\n\n<p>It's more typical to use <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#copyOf-T:A-int-\"><code>Arrays.copyOf(T[], int)</code></a>.</p>\n", "title": "Do not understand the source code of Arrays.copyOf", "tags": ["java", "arrays", "generics"], "link": "http://stackoverflow.com/questions/29494800/do-not-understand-the-source-code-of-arrays-copyof/29502668#29502668", "question_id": 29494800, "answer_id": 29502668}], "creation_date": 1428418938, "score": 40, "link": "http://stackoverflow.com/questions/29494800/do-not-understand-the-source-code-of-arrays-copyof", "question_id": 29494800}, {"body": "<p>I am trying to set up a large-scale REST services server.  We're using Spring Boot 1.2.1 Spring 4.1.5, and Java 8.  Our controllers are implementing @RestController and the standard @RequestMapping annotations.</p>\n\n<p>My problem is that Spring Boot sets up a default redirect for controller exceptions to \"/error\".  From the docs:</p>\n\n<blockquote>\n  <p>Spring Boot provides an /error mapping by default that handles all errors in a sensible way, and it is registered as a \u2018global\u2019 error page in the servlet container. </p>\n</blockquote>\n\n<p>Coming from years writing REST applications with Node.js, this is, to me, anything but sensible.  Any exception a service endpoint generates should return in the response.  I can't understand why you'd send a redirect to what is most likely an Angular or JQuery SPA consumer which is only looking for an answer and can't or won't take any action on a redirect.</p>\n\n<p>What I want to do is set up a global error handler that can take any exception - either purposefully thrown from a request mapping method or auto generated by Spring (404 if no handler method is found for the request path signature), and return a standard formatted error response (400, 500, 503, 404) to the client without any MVC redirects.  Specifically, we are going to take the error, log it to NoSQL with a UUID, then return to the client the right HTTP error code with the UUID of the log entry in the JSON body.</p>\n\n<p>The docs have been vague on how to do this.  It seems to me that you have to either create your own <a href=\"http://docs.spring.io/spring-boot/docs/1.2.2.RELEASE/api/org/springframework/boot/autoconfigure/web/ErrorController.html\">ErrorController</a> implementation or use <a href=\"http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/bind/annotation/ControllerAdvice.html\">ControllerAdvice</a> in some fashion, but all the examples I've see still include forwarding the response to some kind of error mapping, which doesn't help.  Other examples suggest that you'd have to list every Exception type you want to handle instead of just listing \"Throwable\" and getting everything.</p>\n\n<p>Can anyone tell me what I missed, or point me in the right direction on how to do this without suggesting up the chain that Node.js would be easier to deal with?  </p>\n", "tags": ["java", "spring", "rest", "exception-handling", "spring-boot"], "title": "Spring Boot REST service exception handling", "answers": [{"body": "<p>I think <code>ResponseEntityExceptionHandler</code> meets your requirements. A sample piece of code for HTTP 400:</p>\n\n<pre><code>@ControllerAdvice\npublic class MyExceptionHandler extends ResponseEntityExceptionHandler {\n\n  @ResponseStatus(value = HttpStatus.BAD_REQUEST)\n  @ExceptionHandler({HttpMessageNotReadableException.class, MethodArgumentNotValidException.class,\n      HttpRequestMethodNotSupportedException.class})\n  public ResponseEntity&lt;Object&gt; badRequest(HttpServletRequest req, Exception exception) {\n    // ...\n  }\n}\n</code></pre>\n\n<p>You can check this <a href=\"http://springinpractice.com/2013/10/09/generating-json-error-object-responses-with-spring-web-mvc\">post</a></p>\n", "title": "Spring Boot REST service exception handling", "tags": ["java", "spring", "rest", "exception-handling", "spring-boot"], "link": "http://stackoverflow.com/questions/28902374/spring-boot-rest-service-exception-handling/28903217#28903217", "question_id": 28902374, "answer_id": 28903217}, {"body": "<p>By default Spring Boot gives json with error details.</p>\n\n<pre><code>curl -v localhost:8080/greet | json_pp\n[...]\n&lt; HTTP/1.1 400 Bad Request\n[...]\n{\n   \"timestamp\" : 1413313361387,\n   \"exception\" : \"org.springframework.web.bind.MissingServletRequestParameterException\",\n   \"status\" : 400,\n   \"error\" : \"Bad Request\",\n   \"path\" : \"/greet\",\n   \"message\" : \"Required String parameter 'name' is not present\"\n}\n</code></pre>\n\n<p>It also works for all kind of request mapping errors. Check this article\n<a href=\"http://www.jayway.com/2014/10/19/spring-boot-error-responses/\" rel=\"nofollow\">http://www.jayway.com/2014/10/19/spring-boot-error-responses/</a></p>\n\n<p>If you want to create log it to NoSQL. You can create @ControllerAdvice where you would log it and then re-throw the exception. \nThere is example in documentation\n<a href=\"https://spring.io/blog/2013/11/01/exception-handling-in-spring-mvc\" rel=\"nofollow\">https://spring.io/blog/2013/11/01/exception-handling-in-spring-mvc</a></p>\n", "title": "Spring Boot REST service exception handling", "tags": ["java", "spring", "rest", "exception-handling", "spring-boot"], "link": "http://stackoverflow.com/questions/28902374/spring-boot-rest-service-exception-handling/29767982#29767982", "question_id": 28902374, "answer_id": 29767982}, {"body": "<p><strong>Addendum (4/20/16)</strong></p>\n\n<p>An annoymous user suggested an edit and got rejected, but his suggestion looks good and helpful so I'm adding it:</p>\n\n<p>Using Spring Boot 1.3.1.RELEASE</p>\n\n<p><strong>New Step 1 -</strong> It is easy and less intrusive to add the following properties to the application.properties:</p>\n\n<pre><code>spring.mvc.throw-exception-if-no-handler-found=true\nspring.resources.add-mappings=false\n</code></pre>\n\n<blockquote>\n  <p>Much easier than modifying the existing DispatcherServlet instance (as below)! - JO'</p>\n</blockquote>\n\n<p>If working with a full RESTful Application, it is very important to disable the automatic mapping of static resources since if you are using Spring Boot's default configuration for handling static resources then the resource handler will be handling the request (it's ordered last and mapped to /** which means that it picks up any requests that haven't been handled by any other handler in the application) so the dispatcher servlet doesn't get a chance to throw an exception.</p>\n\n<hr>\n\n<p><strong>New Answer (12/04/15)</strong></p>\n\n<p>Using Spring Boot 1.2.7.RELEASE</p>\n\n<p><strong>New Step 1 -</strong> I found a much less intrusive way of setting the \"throExceptionIfNoHandlerFound\" flag.  Replace the DispatcherServlet replacement code below (Step 1) with this in your application initialization class:</p>\n\n<pre><code>@ComponentScan()\n@EnableAutoConfiguration\npublic class MyApplication extends SpringBootServletInitializer {\n    private static Logger LOG = LoggerFactory.getLogger(MyApplication.class);\n    public static void main(String[] args) {\n        ApplicationContext ctx = SpringApplication.run(MyApplication.class, args);\n        DispatcherServlet dispatcherServlet = (DispatcherServlet)ctx.getBean(\"dispatcherServlet\");\n        dispatcherServlet.setThrowExceptionIfNoHandlerFound(true);\n    }\n</code></pre>\n\n<p>In this case, we're setting the flag on the existing DispatcherServlet, which preserves any auto-configuration by the Spring Boot framework.  </p>\n\n<p>One more thing I've found - the @EnableWebMvc annotation is deadly to Spring Boot.  Yes, that annotation enables things like being able to catch all the controller exceptions as described below, but it also kills a LOT of the helpful auto-configuration that Spring Boot would normally provide.  Use that annotation with extreme caution when you use Spring Boot.</p>\n\n<hr>\n\n<p><strong>Original Answer:</strong></p>\n\n<p>After a lot more research and following up on the solutions posted here (thanks for the help!) and no small amount of runtime tracing into the Spring code, I finally found a configuration that will handle all Exceptions (not Errors, but read on) including 404s.</p>\n\n<p><strong>Step 1 -</strong> tell SpringBoot to stop using MVC for \"handler not found\" situations.  We want Spring to throw an exception instead of returning to the client a view redirect to \"/error\".  To do this, you need to have an entry in one of your configuration classes:</p>\n\n<pre><code>// NEW CODE ABOVE REPLACES THIS! (12/04/15)\n@Configuration\npublic class MyAppConfig {\n    @Bean  // Magic entry \n    public DispatcherServlet dispatcherServlet() {\n        DispatcherServlet ds = new DispatcherServlet();\n        ds.setThrowExceptionIfNoHandlerFound(true);\n        return ds;\n    }\n}\n</code></pre>\n\n<p>The downside of this is that it replaces the default dispatcher servlet. This hasn't been a problem for us yet, with no side effects or execution problems showing up.  If you're going to do anything else with the dispatcher servlet for other reasons, this is the place to do them.</p>\n\n<p><strong>Step 2 -</strong> Now that spring boot will throw an exception when no handler is found, that exception can be handled with any others in a unified exception handler:</p>\n\n<pre><code>@EnableWebMvc\n@ControllerAdvice\npublic class ServiceExceptionHandler extends ResponseEntityExceptionHandler {\n\n    @ExceptionHandler(Throwable.class)\n    @ResponseBody\n    ResponseEntity&lt;Object&gt; handleControllerException(HttpServletRequest req, Throwable ex) {\n        ErrorResponse errorResponse = new ErrorResponse(ex);\n        if(ex instanceof ServiceException) {\n            errorResponse.setDetails(((ServiceException)ex).getDetails());\n        }\n        if(ex instanceof ServiceHttpException) {\n            return new ResponseEntity&lt;Object&gt;(errorResponse,((ServiceHttpException)ex).getStatus());\n        } else {\n            return new ResponseEntity&lt;Object&gt;(errorResponse,HttpStatus.INTERNAL_SERVER_ERROR);\n        }\n    }\n\n    @Override\n    protected ResponseEntity&lt;Object&gt; handleNoHandlerFoundException(NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {\n        Map&lt;String,String&gt; responseBody = new HashMap&lt;&gt;();\n        responseBody.put(\"path\",request.getContextPath());\n        responseBody.put(\"message\",\"The URL you have reached is not in service at this time (404).\");\n        return new ResponseEntity&lt;Object&gt;(responseBody,HttpStatus.NOT_FOUND);\n    }\n    ...\n}\n</code></pre>\n\n<p>Keep in mind that I think the \"@EnableWebMvc\" annotation is significant here.  It seems that none of this works without it.  And that's it - your Spring boot app will now catch all exceptions, including 404s, in the above handler class and you may do with them as you please.</p>\n\n<p>One last point - there doesn't seem to be a way to get this to catch thrown Errors.  I have a wacky idea of using aspects to catch errors and turn them into Exceptions that the above code can then deal with, but I have not yet had time to actually try implementing that.  Hope this helps someone.</p>\n\n<p>Any comments/corrections/enhancements will be appreciated.</p>\n", "title": "Spring Boot REST service exception handling", "tags": ["java", "spring", "rest", "exception-handling", "spring-boot"], "link": "http://stackoverflow.com/questions/28902374/spring-boot-rest-service-exception-handling/30193013#30193013", "question_id": 28902374, "answer_id": 30193013}, {"body": "<p>Solution with \n<code>dispatcherServlet.setThrowExceptionIfNoHandlerFound(true);</code> and\n<code>@EnableWebMvc\n@ControllerAdvice</code>\nworked for me with Spring Boot 1.3.1, while was not working on 1.2.7</p>\n", "title": "Spring Boot REST service exception handling", "tags": ["java", "spring", "rest", "exception-handling", "spring-boot"], "link": "http://stackoverflow.com/questions/28902374/spring-boot-rest-service-exception-handling/34514907#34514907", "question_id": 28902374, "answer_id": 34514907}, {"body": "<p>What about this code ? I use a fallback request mapping to catch 404 errors.</p>\n\n<pre><code>@Controller\n@ControllerAdvice\npublic class ExceptionHandlerController {\n\n    @ExceptionHandler(Exception.class)\n    public ModelAndView exceptionHandler(HttpServletRequest request, HttpServletResponse response, Exception ex) {\n        //If exception has a ResponseStatus annotation then use its response code\n        ResponseStatus responseStatusAnnotation = AnnotationUtils.findAnnotation(ex.getClass(), ResponseStatus.class);\n\n        return buildModelAndViewErrorPage(request, response, ex, responseStatusAnnotation != null ? responseStatusAnnotation.value() : HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n\n    @RequestMapping(\"*\")\n    public ModelAndView fallbackHandler(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        return buildModelAndViewErrorPage(request, response, null, HttpStatus.NOT_FOUND);\n    }\n\n    private ModelAndView buildModelAndViewErrorPage(HttpServletRequest request, HttpServletResponse response, Exception ex, HttpStatus httpStatus) {\n        response.setStatus(httpStatus.value());\n\n        ModelAndView mav = new ModelAndView(\"error.html\");\n        if (ex != null) {\n            mav.addObject(\"title\", ex);\n        }\n        mav.addObject(\"content\", request.getRequestURL());\n        return mav;\n    }\n\n}\n</code></pre>\n", "title": "Spring Boot REST service exception handling", "tags": ["java", "spring", "rest", "exception-handling", "spring-boot"], "link": "http://stackoverflow.com/questions/28902374/spring-boot-rest-service-exception-handling/34519712#34519712", "question_id": 28902374, "answer_id": 34519712}, {"body": "<p>I would recommend to use <code>Zalando Problem Spring Web</code>.</p>\n\n<p><a href=\"https://github.com/zalando/problem-spring-web\" rel=\"nofollow\">https://github.com/zalando/problem-spring-web</a></p>\n\n<p>If Spring Boot aims to embedd some autoconfiguration, this library does more fore exception handling. You just need to add the dependency:</p>\n\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.zalando&lt;/groupId&gt;\n    &lt;artifactId&gt;problem-spring-web&lt;/artifactId&gt;\n    &lt;version&gt;0.5.0&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n\n<p>And then define  one or more advice traits for your exceptions (or use those provided by default)</p>\n\n<pre><code>public interface NotAcceptableAdviceTrait extends AdviceTrait {\n\n    @ExceptionHandler\n    default ResponseEntity&lt;Problem&gt; handleMediaTypeNotAcceptable(\n            final HttpMediaTypeNotAcceptableException exception,\n            final NativeWebRequest request) {\n        return Responses.create(Status.NOT_ACCEPTABLE, exception, request);\n    }\n\n}\n</code></pre>\n\n<p>Then you can defined the controller advice for exception handling as:</p>\n\n<pre><code>@ControllerAdvice\nclass ExceptionHandling implements MethodNotAllowedAdviceTrait, NotAcceptableAdviceTrait {\n\n}\n</code></pre>\n", "title": "Spring Boot REST service exception handling", "tags": ["java", "spring", "rest", "exception-handling", "spring-boot"], "link": "http://stackoverflow.com/questions/28902374/spring-boot-rest-service-exception-handling/35302410#35302410", "question_id": 28902374, "answer_id": 35302410}], "creation_date": 1425656788, "score": 39, "link": "http://stackoverflow.com/questions/28902374/spring-boot-rest-service-exception-handling", "question_id": 28902374}, {"body": "<p>Let's say I have the following functional interface in Java 8:</p>\n\n<pre><code>interface Action&lt;T, U&gt; {\n   U execute(T t);\n}\n</code></pre>\n\n<p>And for some cases I need an action without arguments or return type. So I write\nsomething like this:</p>\n\n<pre><code>Action&lt;Void, Void&gt; a = () -&gt; { System.out.println(\"Do nothing!\"); };\n</code></pre>\n\n<p>However, it gives me compile error, I need to write it as</p>\n\n<pre><code>Action&lt;Void, Void&gt; a = (Void v) -&gt; { System.out.println(\"Do nothing!\"); return null;};\n</code></pre>\n\n<p>Which is ugly. Is there any way to get rid of the <code>Void</code> type?</p>\n", "tags": ["java", "lambda", "java-8", "void"], "title": "Java 8 lambda Void argument", "answers": [{"body": "<p>The lambda:</p>\n\n<pre><code>() -&gt; { System.out.println(\"Do nothing!\"); };\n</code></pre>\n\n<p>actually represents an implementation for an interface like:</p>\n\n<pre><code>public interface Something {\n    void action();\n}\n</code></pre>\n\n<p>which is completely different than the one you've defined. That's why you get an error.</p>\n\n<p>Since you can't extend your <code>@FunctionalInterface</code>, nor introduce a brand new one, then I think you don't have much options. You can use the <code>Optional&lt;T&gt;</code> interfaces to denote that some of the values (return type or method parameter) is missing, though. However, this won't make the lambda body simpler.</p>\n", "title": "Java 8 lambda Void argument", "tags": ["java", "lambda", "java-8", "void"], "link": "http://stackoverflow.com/questions/29945627/java-8-lambda-void-argument/29945754#29945754", "question_id": 29945627, "answer_id": 29945754}, {"body": "<p>I don't think it is possible, because function definitions do not match in your example.</p>\n\n<p>Your lambda expression is evaluated exactly as</p>\n\n<pre><code>void action() { }\n</code></pre>\n\n<p>whereas your declaration looks like</p>\n\n<pre><code>Void action(Void v) {\n    //must return Void type.\n}\n</code></pre>\n\n<p>as an example, if you have following interface</p>\n\n<pre><code>public interface VoidInterface {\n    public Void action(Void v);\n}\n</code></pre>\n\n<p>the only kind of function (while instantiating) that will be compatibile looks like</p>\n\n<pre><code>new VoidInterface() {\n    public Void action(Void v) {\n        //do something\n        return v;\n    }\n}\n</code></pre>\n\n<p>and either lack of return statement or argument will give you a compiler error.</p>\n\n<p>Therefore, if you declare a function which takes an argument and returns one, I think it is impossible to convert it to function which does neither of mentioned above.</p>\n", "title": "Java 8 lambda Void argument", "tags": ["java", "lambda", "java-8", "void"], "link": "http://stackoverflow.com/questions/29945627/java-8-lambda-void-argument/29946097#29946097", "question_id": 29945627, "answer_id": 29946097}, {"body": "<p>The syntax you're after is possible with a little helper function that converts a <code>Runnable</code> into <code>Action&lt;Void, Void&gt;</code> (you can place it in <code>Action</code> for example):</p>\n\n<pre><code>public static Action&lt;Void, Void&gt; action(Runnable runnable) {\n    return (v) -&gt; {\n        runnable.run();\n        return null;\n    };\n}\n\n// Somewhere else in your code\n Action&lt;Void, Void&gt; action = action(() -&gt; System.out.println(\"foo\"));\n</code></pre>\n", "title": "Java 8 lambda Void argument", "tags": ["java", "lambda", "java-8", "void"], "link": "http://stackoverflow.com/questions/29945627/java-8-lambda-void-argument/29946155#29946155", "question_id": 29945627, "answer_id": 29946155}, {"body": "<p>That is not possible. A function that has a non-void return type (even if it's <code>Void</code>) has to return a value. However you could add static methods to <code>Action</code> that allows you to \"create\" a <code>Action</code>:</p>\n\n<pre><code>interface Action&lt;T, U&gt; {\n   U execute(T t);\n\n   public static Action&lt;Void, Void&gt; create(Runnable r) {\n       return (t) -&gt; {r.run(); return null;};\n   }\n\n   public static &lt;T, U&gt; Action&lt;T, U&gt; create(Action&lt;T, U&gt; action) {\n       return action;\n   } \n}\n</code></pre>\n\n<p>That would allow you to write the following:</p>\n\n<pre><code>// create action from Runnable\nAction.create(()-&gt; System.out.println(\"Hello World\")).execute(null);\n// create normal action\nSystem.out.println(Action.create((Integer i) -&gt; \"number: \" + i).execute(100));\n</code></pre>\n", "title": "Java 8 lambda Void argument", "tags": ["java", "lambda", "java-8", "void"], "link": "http://stackoverflow.com/questions/29945627/java-8-lambda-void-argument/29946262#29946262", "question_id": 29945627, "answer_id": 29946262}, {"body": "<p>You can create a sub-interface for that special case:</p>\n\n<pre><code>interface Command extends Action&lt;Void, Void&gt; {\n  default Void execute(Void v) {\n    execute();\n    return null;\n  }\n  void execute();\n}\n</code></pre>\n\n<p>It uses a <a href=\"https://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html\">default method</a> to override the inherited parameterized method <code>Void execute(Void)</code>, delegating the call to the simpler method <code>void execute()</code>.</p>\n\n<p>The result is that it's much simpler to use:</p>\n\n<pre><code>Command c = () -&gt; System.out.println(\"Do nothing!\");\n</code></pre>\n", "title": "Java 8 lambda Void argument", "tags": ["java", "lambda", "java-8", "void"], "link": "http://stackoverflow.com/questions/29945627/java-8-lambda-void-argument/29947569#29947569", "question_id": 29945627, "answer_id": 29947569}, {"body": "<p>Add a static method inside your functional interface</p>\n\n<pre><code>package example;\n\ninterface Action&lt;T, U&gt; {\n       U execute(T t);\n       static  Action&lt;Void,Void&gt; invoke(Runnable runnable){\n           return (v) -&gt; {\n               runnable.run();\n                return null;\n            };         \n       }\n    }\n\npublic class Lambda {\n\n\n    public static void main(String[] args) {\n\n        Action&lt;Void, Void&gt; a = Action.invoke(() -&gt; System.out.println(\"Do nothing!\"));\n        Void t = null;\n        a.execute(t);\n    }\n\n}\n</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre><code>Do nothing!\n</code></pre>\n", "title": "Java 8 lambda Void argument", "tags": ["java", "lambda", "java-8", "void"], "link": "http://stackoverflow.com/questions/29945627/java-8-lambda-void-argument/29949223#29949223", "question_id": 29945627, "answer_id": 29949223}, {"body": "<p>Just for reference which functional interface can be used for method reference in cases method throws and/or returns a value.</p>\n\n<pre><code>void notReturnsNotThrows() {};\nvoid notReturnsThrows() throws Exception {}\nString returnsNotThrows() { return \"\"; }\nString returnsThrows() throws Exception { return \"\"; }\n\n{\n    Runnable r1 = this::notReturnsNotThrows; //ok\n    Runnable r2 = this::notReturnsThrows; //error\n    Runnable r3 = this::returnsNotThrows; //ok\n    Runnable r4 = this::returnsThrows; //error\n\n    Callable c1 = this::notReturnsNotThrows; //error\n    Callable c2 = this::notReturnsThrows; //error\n    Callable c3 = this::returnsNotThrows; //ok\n    Callable c4 = this::returnsThrows; //ok\n\n}\n\n\ninterface VoidCallableExtendsCallable extends Callable&lt;Void&gt; {\n    @Override\n    Void call() throws Exception;\n}\n\ninterface VoidCallable {\n    void call() throws Exception;\n}\n\n{\n    VoidCallableExtendsCallable vcec1 = this::notReturnsNotThrows; //error\n    VoidCallableExtendsCallable vcec2 = this::notReturnsThrows; //error\n    VoidCallableExtendsCallable vcec3 = this::returnsNotThrows; //error\n    VoidCallableExtendsCallable vcec4 = this::returnsThrows; //error\n\n    VoidCallable vc1 = this::notReturnsNotThrows; //ok\n    VoidCallable vc2 = this::notReturnsThrows; //ok\n    VoidCallable vc3 = this::returnsNotThrows; //ok\n    VoidCallable vc4 = this::returnsThrows; //ok\n}\n</code></pre>\n", "title": "Java 8 lambda Void argument", "tags": ["java", "lambda", "java-8", "void"], "link": "http://stackoverflow.com/questions/29945627/java-8-lambda-void-argument/35770474#35770474", "question_id": 29945627, "answer_id": 35770474}], "creation_date": 1430315082, "score": 38, "link": "http://stackoverflow.com/questions/29945627/java-8-lambda-void-argument", "question_id": 29945627}, {"body": "<p>Since <code>String</code> in Java (like other languages) consumes a lot of memory because each character consumes two bytes, Java 8 has introduced a new feature called <strong><em>String Deduplication</em></strong> which takes advantage of the fact that the char arrays are internal to strings and final, so the JVM can mess around with them.</p>\n\n<p>I have read <a href=\"https://blog.codecentric.de/en/2014/08/string-deduplication-new-feature-java-8-update-20-2/\">this example</a> so far but since I am not a pro java coder, I am having a hard time grasping the concept.</p>\n\n<p>Here is what it says,</p>\n\n<blockquote>\n  <p>Various strategies for String Duplication have been considered, but\n  the one implemented now follows the following approach: Whenever the\n  garbage collector visits String objects it takes note of the char\n  arrays. It takes their hash value and stores it alongside with a weak\n  reference to the array. As soon as it finds another String which has\n  the same hash code it compares them char by char. If they match as\n  well, one String will be modified and point to the char array of the\n  second String. The first char array then is no longer referenced\n  anymore and can be garbage collected.</p>\n  \n  <p>This whole process of course brings some overhead, but is controlled\n  by tight limits. For example if a string is not found to have\n  duplicates for a while it will be no longer checked.</p>\n</blockquote>\n\n<p><strong>My First question,</strong></p>\n\n<p>There is still a lack of resources on this topic since it is recently added in Java 8 update 20, could anyone here share some practical examples on how it help in reducing the memory consumed by <code>String</code> in Java ?</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>The above link says,</p>\n\n<blockquote>\n  <p>As soon as it finds another String which has the same hash code it\n  compares them char by char</p>\n</blockquote>\n\n<p><strong>My 2nd question,</strong></p>\n\n<p>If hash code of two <code>String</code> are same then the <code>Strings</code> are already the same, then why compare them <code>char</code> by <code>char</code> once it is found that the two <code>String</code> have same hash code ?</p>\n", "tags": ["java", "string", "java-8"], "title": "String Deduplication feature of Java 8", "answers": [{"body": "<p>The strategy they describe is to simply reuse the internal character array of one String in possibly many <code>equal</code> Strings. There's no need for each String to have its own copy if they are equal. </p>\n\n<p>In order to more quickly determine if 2 strings are equal, the hash code is used as a first step, as it is a fast way to determine if Strings <strong>may</strong> be equal. Hence their statement:</p>\n\n<blockquote>\n  <p>As soon as it finds another String which has the same hash code it compares them char by char</p>\n</blockquote>\n\n<p>This is to make a <strong>certain</strong> (but slower) comparison for equality once <strong>possible</strong> equality has been determined using the hash code.</p>\n\n<p>In the end, equal Strings will share a single underlying char array. </p>\n\n<p>Java has had <code>String.intern()</code> for a long time, to do more or less the same (i.e. save memory by deduplicating equal Strings). What's novel about this is that it happens during garbage collection time and can be externally controlled.</p>\n", "title": "String Deduplication feature of Java 8", "tags": ["java", "string", "java-8"], "link": "http://stackoverflow.com/questions/27949213/string-deduplication-feature-of-java-8/27949367#27949367", "question_id": 27949213, "answer_id": 27949367}, {"body": "<p>Imagine you have a phone book, which contains people, which have a <code>String firstName</code> and a <code>String lastName</code>. And it happens that in your phone book, 100,000 people have the same <code>firstName = \"John\"</code>.</p>\n\n<p>Because you get the data from a database or a file those strings are not interned so your JVM memory contains the char array <code>{'J', 'o', 'h', 'n'}</code> 100 thousand times, one per John string. Each of these arrays takes, say, 20 bytes of memory so those 100k Johns take up 2 MB of memory.</p>\n\n<p>With deduplication, the JVM will realise that \"John\" is duplicated many times and make all those John strings point to the same underlying char array, decreasing the memory usage from 2MB to 20 bytes.</p>\n\n<p>You can find a more detailed explanation in the <a href=\"http://openjdk.java.net/jeps/192\">JEP</a>. In particular:</p>\n\n<blockquote>\n  <p>Many large-scale Java applications are currently bottlenecked on memory. Measurements have shown that roughly 25% of the Java heap live data set in these types of applications is consumed by String objects. Further, roughly half of those String objects are duplicates, where duplicates means <code>string1.equals(string2)</code> is true. Having duplicate String objects on the heap is, essentially, just a waste of memory.</p>\n  \n  <p>[...]</p>\n  \n  <p>The actual expected benefit ends up at around 10% heap reduction. Note that this number is a calculated average based on a wide range of applications. The heap reduction for a specific application could vary significantly both up and down.</p>\n</blockquote>\n", "title": "String Deduplication feature of Java 8", "tags": ["java", "string", "java-8"], "link": "http://stackoverflow.com/questions/27949213/string-deduplication-feature-of-java-8/27949581#27949581", "question_id": 27949213, "answer_id": 27949581}, {"body": "<p>Since your first question has already been answered, I'll answer your second question.</p>\n\n<p>The <code>String</code> objects must be compared character by character, because though equal <code>Object</code>s implies equal hashes, the inverse is <em>not</em> necessarily true.</p>\n\n<p>As <a href=\"http://stackoverflow.com/users/2711488/holger\">Holger</a> said in his <a href=\"http://stackoverflow.com/questions/27949213/string-deduplication-feature-of-java-8/27950675#comment44295749_27949213\">comment</a>, this represents a hash collision.</p>\n\n<p>The applicable specifications for the <code>hashcode()</code> method are as follows:</p>\n\n<blockquote>\n  <ul>\n  <li><p>If two objects are equal according to the <code>equals(Object)</code> method, then calling the <code>hashCode</code> method on each of the two objects must produce the same integer result.</p></li>\n  <li><p>It is not required that if two objects are unequal according to the <code>equals(java.lang.Object)</code> method, then calling the <code>hashCode</code> method on each of the two objects must produce distinct integer results. ...</p></li>\n  </ul>\n</blockquote>\n\n<p>This means that in order for them to guarantee equality, the comparison of each character is necessary in order for them to confirm the equality of the two objects. They start by comparing <code>hashCode</code>s rather than using <code>equals</code> since they are using a hash table for the references, and this improves performance.</p>\n", "title": "String Deduplication feature of Java 8", "tags": ["java", "string", "java-8"], "link": "http://stackoverflow.com/questions/27949213/string-deduplication-feature-of-java-8/27950675#27950675", "question_id": 27949213, "answer_id": 27950675}, {"body": "<p>@assylias answer basiclly tells you how it work and is very good answer. I have tested a production application with String Deduplication and have some results. The web app heavily uses Strings so i think the advantage is pretty clear. </p>\n\n<p>To enable String Deduplication you  have to add these JVM params (you need at least Java 8u20):</p>\n\n<pre><code>-XX:+UseG1GC -XX:+UseStringDeduplication -XX:+PrintStringDeduplicationStatistics\n</code></pre>\n\n<p>The last one is optional but like the name says it shows you the String Deduplication statistics. Here are mine:</p>\n\n<pre><code>[GC concurrent-string-deduplication, 2893.3K-&gt;2672.0B(2890.7K), avg 97.3%, 0.0175148 secs]\n   [Last Exec: 0.0175148 secs, Idle: 3.2029081 secs, Blocked: 0/0.0000000 secs]\n      [Inspected:           96613]\n         [Skipped:              0(  0.0%)]\n         [Hashed:           96598(100.0%)]\n         [Known:                2(  0.0%)]\n         [New:              96611(100.0%)   2893.3K]\n      [Deduplicated:        96536( 99.9%)   2890.7K( 99.9%)]\n         [Young:                0(  0.0%)      0.0B(  0.0%)]\n         [Old:              96536(100.0%)   2890.7K(100.0%)]\n   [Total Exec: 452/7.6109490 secs, Idle: 452/776.3032184 secs, Blocked: 11/0.0258406 secs]\n      [Inspected:        27108398]\n         [Skipped:              0(  0.0%)]\n         [Hashed:        26828486( 99.0%)]\n         [Known:            19025(  0.1%)]\n         [New:           27089373( 99.9%)    823.9M]\n      [Deduplicated:     26853964( 99.1%)    801.6M( 97.3%)]\n         [Young:             4732(  0.0%)    171.3K(  0.0%)]\n         [Old:           26849232(100.0%)    801.4M(100.0%)]\n   [Table]\n      [Memory Usage: 2834.7K]\n      [Size: 65536, Min: 1024, Max: 16777216]\n      [Entries: 98687, Load: 150.6%, Cached: 415, Added: 252375, Removed: 153688]\n      [Resize Count: 6, Shrink Threshold: 43690(66.7%), Grow Threshold: 131072(200.0%)]\n      [Rehash Count: 0, Rehash Threshold: 120, Hash Seed: 0x0]\n      [Age Threshold: 3]\n   [Queue]\n      [Dropped: 0]\n</code></pre>\n\n<p>These are the results after running the app for 10 minutes. As you can see String Deduplication was executed <strong>452</strong> times and \"deduplicated\" <strong>801.6 MB</strong> Strings. String Deduplication inspected <strong>27 000 000</strong> Strings. When i compared my memory consumption from Java 7 with the standard Parallel GC to Java 8u20 with the G1 GC and enabled String Deduplication the heap dropped approximatley <strong>50%</strong>: </p>\n\n<p><strong>Java 7 Parallel GC</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/rhmQ9.png\" alt=\"Java 7 Parallel GC\"></p>\n\n<p><strong>Java 8 G1 GC with String Deduplication</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/tDWnV.png\" alt=\"Java 8 G1 GC with String Deduplication\"></p>\n", "title": "String Deduplication feature of Java 8", "tags": ["java", "string", "java-8"], "link": "http://stackoverflow.com/questions/27949213/string-deduplication-feature-of-java-8/27953779#27953779", "question_id": 27949213, "answer_id": 27953779}], "creation_date": 1421257530, "score": 38, "link": "http://stackoverflow.com/questions/27949213/string-deduplication-feature-of-java-8", "question_id": 27949213}, {"body": "<p>I have this list (<code>List&lt;String&gt;</code>):</p>\n\n<pre><code>[\"a\", \"b\", null, \"c\", null, \"d\", \"e\"]\n</code></pre>\n\n<p>And I'd like something like this:</p>\n\n<pre><code>[[\"a\", \"b\"], [\"c\"], [\"d\", \"e\"]]\n</code></pre>\n\n<p>In other words I want to split my list in sublists using the <code>null</code> value as separator, in order to obtain a list of lists (<code>List&lt;List&lt;String&gt;&gt;</code>). I'm looking for a Java 8 solution. I've tried with <code>Collectors.partitioningBy</code> but I'm not sure it is what I'm looking for. Thanks!</p>\n", "tags": ["java", "list", "java-8", "collectors"], "title": "Splitting List into sublists along elements", "answers": [{"body": "<p>The only solution I come up with for the moment is by implementing your own custom collector. </p>\n\n<p>Before reading the solution, I want to add a few notes about this. I took this question more as a programming exercise, I'm not sure if it can be done with a parallel stream. </p>\n\n<p>So you have to be aware that it'll <strong>silently break</strong> if the pipeline is run in <strong>parallel</strong>. </p>\n\n<p>This is <strong>not</strong> a desirable behavior and should be <strong>avoided</strong>. This is why I throw an exception in the combiner part (instead of <code>(l1, l2) -&gt; {l1.addAll(l2); return l1;}</code>), as it's used in parallel when combining the two lists, so that you have an exception instead of a wrong result.</p>\n\n<p>Also this is not very efficient due to list copying (although it uses a native method to copy the underlying array).</p>\n\n<p>So here's the collector implementation:</p>\n\n<pre><code>private static Collector&lt;String, List&lt;List&lt;String&gt;&gt;, List&lt;List&lt;String&gt;&gt;&gt; splitBySeparator(Predicate&lt;String&gt; sep) {\n    final List&lt;String&gt; current = new ArrayList&lt;&gt;();\n    return Collector.of(() -&gt; new ArrayList&lt;List&lt;String&gt;&gt;(),\n                        (l, elem) -&gt; {if(sep.test(elem)){l.add(new ArrayList&lt;&gt;(current)); current.clear();} else current.add(elem);},\n                        (l1, l2) -&gt; {throw new RuntimeException(\"Should not run this in parallel\");},\n                        l -&gt; {if(current.size() != 0) l.add(current); return l;});\n}\n</code></pre>\n\n<p>and how to use it:</p>\n\n<pre><code>List&lt;List&lt;String&gt;&gt; ll = list.stream().collect(splitBySeparator(Objects::isNull));\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>[[a, b], [c], [d, e]]\n</code></pre>\n\n<p><hr/>\nAs the <a href=\"http://stackoverflow.com/a/29098447/1587046\">answer of Joop Eggen is out</a>, it appears that it can be done in parallel (give him credit for that!). With that it reduces the custom collector implementation to:</p>\n\n<pre><code>private static Collector&lt;String, List&lt;List&lt;String&gt;&gt;, List&lt;List&lt;String&gt;&gt;&gt; splitBySeparator(Predicate&lt;String&gt; sep) {\n    return Collector.of(() -&gt; new ArrayList&lt;List&lt;String&gt;&gt;(Arrays.asList(new ArrayList&lt;&gt;())),\n                        (l, elem) -&gt; {if(sep.test(elem)){l.add(new ArrayList&lt;&gt;());} else l.get(l.size()-1).add(elem);},\n                        (l1, l2) -&gt; {l1.get(l1.size() - 1).addAll(l2.remove(0)); l1.addAll(l2); return l1;});\n}\n</code></pre>\n\n<p>which let the paragraph about parallelism a bit obsolete, however I let it as it can be a good reminder.</p>\n\n<hr/>\n\n<p>Note that the Stream API is not always a substitute. There are tasks that are easier and more suitable using the streams and there are tasks that are not. In your case, you could also create a utility method for that:</p>\n\n<pre><code>private static &lt;T&gt; List&lt;List&lt;T&gt;&gt; splitBySeparator(List&lt;T&gt; list, Predicate&lt;? super T&gt; predicate) {\n    final List&lt;List&lt;T&gt;&gt; finalList = new ArrayList&lt;&gt;();\n    int fromIndex = 0;\n    int toIndex = 0;\n    for(T elem : list) {\n        if(predicate.test(elem)) {\n            finalList.add(list.subList(fromIndex, toIndex));\n            fromIndex = toIndex + 1;\n        }\n        toIndex++;\n    }\n    if(fromIndex != toIndex) {\n        finalList.add(list.subList(fromIndex, toIndex));\n    }\n    return finalList;\n}\n</code></pre>\n\n<p>and call it like <code>List&lt;List&lt;String&gt;&gt; list = splitBySeparator(originalList, Objects::isNull);</code>. </p>\n\n<p>It can be improved for checking edge-cases. </p>\n", "title": "Splitting List into sublists along elements", "tags": ["java", "list", "java-8", "collectors"], "link": "http://stackoverflow.com/questions/29095967/splitting-list-into-sublists-along-elements/29096777#29096777", "question_id": 29095967, "answer_id": 29096777}, {"body": "<p>Here's another approach, which uses a grouping function, which makes use of list indices for grouping.</p>\n\n<p>Here I'm grouping the element by the first index following that element, with value <code>null</code>. So, in your example, <code>\"a\"</code> and <code>\"b\"</code> would be mapped to <code>2</code>. Also, I'm mapping <code>null</code> value to <code>-1</code> index, which should be removed later on.</p>\n\n<pre><code>List&lt;String&gt; list = Arrays.asList(\"a\", \"b\", null, \"c\", null, \"d\", \"e\");\n\nFunction&lt;String, Integer&gt; indexGroupingFunc = (str) -&gt; {\n             if (str == null) {\n                 return -1;\n             }\n             int index = list.indexOf(str) + 1;\n             while (index &lt; list.size() &amp;&amp; list.get(index) != null) {\n                 index++;\n             }\n             return index;\n         };\n\nMap&lt;Integer, List&lt;String&gt;&gt; grouped = list.stream()\n               .collect(Collectors.groupingBy(indexGroupingFunc));\n\ngrouped.remove(-1);  // Remove null elements grouped under -1\nSystem.out.println(grouped.values()); // [[a, b], [c], [d, e]]\n</code></pre>\n\n<p>You can also avoid getting the first index of <code>null</code> element every time, by caching the current min index in an <code>AtomicInteger</code>. The updated <code>Function</code> would be like:</p>\n\n<pre><code>AtomicInteger currentMinIndex = new AtomicInteger(-1);\n\nFunction&lt;String, Integer&gt; indexGroupingFunc = (str) -&gt; {\n        if (str == null) {\n            return -1;\n        }\n        int index = names.indexOf(str) + 1;\n\n        if (currentMinIndex.get() &gt; index) {\n            return currentMinIndex.get();\n        } else {\n            while (index &lt; names.size() &amp;&amp; names.get(index) != null) {\n              index++;\n            }\n            currentMinIndex.set(index);\n            return index;\n        }\n    };\n</code></pre>\n", "title": "Splitting List into sublists along elements", "tags": ["java", "list", "java-8", "collectors"], "link": "http://stackoverflow.com/questions/29095967/splitting-list-into-sublists-along-elements/29097535#29097535", "question_id": 29095967, "answer_id": 29097535}, {"body": "<p><em>Please do not vote. I do not have enough place to explain this in comments</em>.</p>\n\n<p>This is a solution with a <code>Stream</code> and a <code>foreach</code> but this is strictly equivalent to Alexis's solution or a <code>foreach</code> loop (and less clear, and I could not get rid of the copy constructor) :</p>\n\n<pre><code>List&lt;List&lt;String&gt;&gt; result = new ArrayList&lt;&gt;();\nfinal List&lt;String&gt; current = new ArrayList&lt;&gt;();\nlist.stream().forEach(s -&gt; {\n      if (s == null) {\n        result.add(new ArrayList&lt;&gt;(current));\n        current.clear();\n      } else {\n        current.add(s);\n      }\n    }\n);\nresult.add(current);\n\nSystem.out.println(result);\n</code></pre>\n\n<p>I understand that you want to find a more elegant solution with Java 8 but I truly think that it has not been designed for this case. And as said by Mr spoon, highly prefer the naive way in this case.</p>\n", "title": "Splitting List into sublists along elements", "tags": ["java", "list", "java-8", "collectors"], "link": "http://stackoverflow.com/questions/29095967/splitting-list-into-sublists-along-elements/29097694#29097694", "question_id": 29095967, "answer_id": 29097694}, {"body": "<p>The solution is to use <code>Stream.collect</code>. To create a Collector using its builder pattern is already given as solution. The alternative is the other overloaded <code>collect</code> being a tiny bit more primitive.</p>\n\n<pre><code>    List&lt;String&gt; strings = Arrays.asList(\"a\", \"b\", null, \"c\", null, \"d\", \"e\");\n    List&lt;List&lt;String&gt;&gt; groups = strings.stream()\n            .collect(() -&gt; {\n                List&lt;List&lt;String&gt;&gt; list = new ArrayList&lt;&gt;();\n                list.add(new ArrayList&lt;&gt;());\n                return list;\n            },\n            (list, s) -&gt; {\n                if (s == null) {\n                    list.add(new ArrayList&lt;&gt;());\n                } else {\n                    list.get(list.size() - 1).add(s);\n                }\n            },\n            (list1, list2) -&gt; {\n                // Simple merging of partial sublists would\n                // introduce a false level-break at the beginning.\n                list1.get(list1.size() - 1).addAll(list2.remove(0));\n                list1.addAll(list2);\n            });\n</code></pre>\n\n<p>As one sees, I make a list of string lists, where there always is at least one last (empty) string list.</p>\n\n<ul>\n<li>The first function creates a starting list of string lists. <strong>It specifies the result (typed) object.</strong></li>\n<li>The second function is called to process each element. <strong>It is an action on the partial result and an element.</strong></li>\n<li>The third is not really used, it comes into play on parallelising the processing, when partial results must be combined.</li>\n</ul>\n\n<hr>\n\n<p><strong><em>A solution with an accumulator:</em></strong></p>\n\n<p><em>As @StuartMarks points out, the combiner does not fullfill the contract for parallelism.</em></p>\n\n<p>Due to the comment of @ArnaudDenoyelle a version using <code>reduce</code>.</p>\n\n<pre><code>    List&lt;List&lt;String&gt;&gt; groups = strings.stream()\n            .reduce(new ArrayList&lt;List&lt;String&gt;&gt;(),\n                    (list, s) -&gt; {\n                        if (list.isEmpty()) {\n                            list.add(new ArrayList&lt;&gt;());\n                        }\n                        if (s == null) {\n                            list.add(new ArrayList&lt;&gt;());\n                        } else {\n                            list.get(list.size() - 1).add(s);\n                        }\n                        return list;\n                    },\n                    (list1, list2) -&gt; {\n                            list1.addAll(list2);\n                            return list1;\n                    });\n</code></pre>\n\n<ul>\n<li>The first parameter is the accumulated object.</li>\n<li>The second function accumulates.</li>\n<li>The third is the aforementioned combiner.</li>\n</ul>\n", "title": "Splitting List into sublists along elements", "tags": ["java", "list", "java-8", "collectors"], "link": "http://stackoverflow.com/questions/29095967/splitting-list-into-sublists-along-elements/29098447#29098447", "question_id": 29095967, "answer_id": 29098447}, {"body": "<p>This is a very interesting problem. I came up with a one line solution. It might not very performant but it works.</p>\n\n<pre><code>List&lt;String&gt; list = Arrays.asList(\"a\", \"b\", null, \"c\", null, \"d\", \"e\");\nCollection&lt;List&lt;String&gt;&gt; cl = IntStream.range(0, list.size()).filter(i -&gt; list.get(i) != null).boxed().collect(Collectors.groupingBy(i -&gt; IntStream.range(0, i).reduce(0, (result, idx) -&gt; result + (list.get(idx) == null ? 1 : 0)), Collectors.mapping(i -&gt; list.get(i), Collectors.toList()))).values();\n</code></pre>\n\n<p>It is a similar idea that @Rohit Jain came up with. I'm grouping the space between the null values.\nIf you really want a <code>List&lt;List&lt;String&gt;&gt;</code> you may append:</p>\n\n<pre><code>List&lt;List&lt;String&gt;&gt; ll = cl.stream().collect(Collectors.toList());\n</code></pre>\n", "title": "Splitting List into sublists along elements", "tags": ["java", "list", "java-8", "collectors"], "link": "http://stackoverflow.com/questions/29095967/splitting-list-into-sublists-along-elements/29099896#29099896", "question_id": 29095967, "answer_id": 29099896}, {"body": "<p>Although there are several answers already, and an accepted answer, there are still a couple points missing from this topic. First, the consensus seems to be that solving this problem using streams is merely an exercise, and that the conventional for-loop approach is preferable. Second, the answers given thus far have overlooked an approach using array or vector-style techniques that I think improves the streams solution considerably.</p>\n\n<p>First, here's a conventional solution, for purposes of discussion and analysis:</p>\n\n<pre><code>static List&lt;List&lt;String&gt;&gt; splitConventional(List&lt;String&gt; input) {\n    List&lt;List&lt;String&gt;&gt; result = new ArrayList&lt;&gt;();\n    int prev = 0;\n\n    for (int cur = 0; cur &lt; input.size(); cur++) {\n        if (input.get(cur) == null) {\n            result.add(input.subList(prev, cur));\n            prev = cur + 1;\n        }\n    }\n    result.add(input.subList(prev, input.size()));\n\n    return result;\n}\n</code></pre>\n\n<p>This is mostly straightforward but there's a bit of subtlety. One point is that a pending sublist from <code>prev</code> to <code>cur</code> is always open. When we encounter <code>null</code> we close it, add it to the result list, and advance <code>prev</code>. After the loop we close the sublist unconditionally.</p>\n\n<p>Another observation is that this is a loop over indexes, not over the values themselves, thus we use an arithmetic for-loop instead of the enhanced \"for-each\" loop. But it suggests that we can stream using the indexes to generate subranges instead of streaming over values and putting the logic into the collector (as was done by <a href=\"http://stackoverflow.com/a/29098447/1441122\">Joop Eggen's proposed solution</a>).</p>\n\n<p>Once we've realized that, we can see that each position of <code>null</code> in the input is the delimiter for a sublist: it's the right end of the sublist to the left, and it (plus one) is the left end of the sublist to the right. If we can handle the edge cases, it leads to an approach where we find the indexes at which <code>null</code> elements occur, map them to sublists, and collect the sublists.</p>\n\n<p>The resulting code is as follows:</p>\n\n<pre><code>static List&lt;List&lt;String&gt;&gt; splitStream(List&lt;String&gt; input) {\n    int[] indexes = Stream.of(IntStream.of(-1),\n                              IntStream.range(0, input.size())\n                                       .filter(i -&gt; input.get(i) == null),\n                              IntStream.of(input.size()))\n                          .flatMapToInt(s -&gt; s)\n                          .toArray();\n\n    return IntStream.range(0, indexes.length-1)\n                    .mapToObj(i -&gt; input.subList(indexes[i]+1, indexes[i+1]))\n                    .collect(toList());\n}\n</code></pre>\n\n<p>Getting the indexes at which <code>null</code> occurs is pretty easy. The stumbling block is adding <code>-1</code> at the left and <code>size</code> at the right end. I've opted to use <code>Stream.of</code> to do the appending and then <code>flatMapToInt</code> to flatten them out. (I tried several other approaches but this one seemed like the cleanest.)</p>\n\n<p>It's a bit more convenient to use arrays for the indexes here. First, the notation for accessing an array is nicer than for a List: <code>indexes[i]</code> vs. <code>indexes.get(i)</code>. Second, using an array avoids boxing.</p>\n\n<p>At this point, each index value in the array (except for the last) is one less than the beginning position of a sublist. The index to its immediate right is the end of the sublist. We simply stream over the array and map each pair of indexes into a sublist and collect the output.</p>\n\n<p><strong>Discussion</strong></p>\n\n<p>The streams approach is slightly shorter than the for-loop version, but it's denser. The for-loop version is familiar, because we do this stuff in Java all the time, but if you're not already aware of what this loop is supposed to be doing, it's not obvious. You might have to simulate a few loop executions before you figure out what <code>prev</code> is doing and why the open sublist has to be closed after the end of the loop. (I initially forgot to have it, but I caught this in testing.)</p>\n\n<p>The streams approach is, I think, easier to conceptualize what's going on: get a list (or an array) that indicates the boundaries between sublists. That's an easy streams two-liner. The difficulty, as I mentioned above, is finding a way to tack the edge values onto the ends. If there were a better syntax for doing this, e.g.,</p>\n\n<pre><code>    // Java plus pidgin Scala\n    int[] indexes =\n        [-1] ++ IntStream.range(0, input.size())\n                         .filter(i -&gt; input.get(i) == null) ++ [input.size()];\n</code></pre>\n\n<p>it would make things a lot less cluttered. (What we really need is array or list comprehension.) Once you have the indexes, it's a simple matter to map them into actual sublists and collect them into the result list.</p>\n\n<p>And of course this is safe when run in parallel.</p>\n\n<p><strong>UPDATE 2016-02-06</strong></p>\n\n<p>Here's a nicer way to create the array of sublist indexes. It's based on the same principles, but it adjusts the index range and adds some conditions to the filter to avoid having to concatenate and flatmap the indexes.</p>\n\n<pre><code>static List&lt;List&lt;String&gt;&gt; splitStream(List&lt;String&gt; input) {\n    int sz = input.size();\n    int[] indexes =\n        IntStream.rangeClosed(-1, sz)\n                 .filter(i -&gt; i == -1 || i == sz || input.get(i) == null)\n                 .toArray();\n\n    return IntStream.range(0, indexes.length-1)\n                    .mapToObj(i -&gt; input.subList(indexes[i]+1, indexes[i+1]))\n                    .collect(toList());\n}\n</code></pre>\n", "title": "Splitting List into sublists along elements", "tags": ["java", "list", "java-8", "collectors"], "link": "http://stackoverflow.com/questions/29095967/splitting-list-into-sublists-along-elements/29111023#29111023", "question_id": 29095967, "answer_id": 29111023}, {"body": "<p>Well, after a bit of work U have come up with a one-line stream-based solution. It ultimately uses <code>reduce()</code> to do the grouping, which seemed the natural choice, but it was a bit ugly getting the strings into the <code>List&lt;List&lt;String&gt;&gt;</code> required by reduce:</p>\n\n<pre><code>List&lt;List&lt;String&gt;&gt; result = list.stream()\n  .map(Arrays::asList)\n  .map(x -&gt; new LinkedList&lt;String&gt;(x))\n  .map(Arrays::asList)\n  .map(x -&gt; new LinkedList&lt;List&lt;String&gt;&gt;(x))\n  .reduce( (a, b) -&gt; {\n    if (b.getFirst().get(0) == null) \n      a.add(new LinkedList&lt;String&gt;());\n    else\n      a.getLast().addAll(b.getFirst());\n    return a;}).get();\n</code></pre>\n\n<p>It <em>is</em> however 1 line!</p>\n\n<p>When run with input from the question,</p>\n\n<pre><code>System.out.println(result);\n</code></pre>\n\n<p>Produces:</p>\n\n<pre><code>[[a, b], [c], [d, e]]\n</code></pre>\n", "title": "Splitting List into sublists along elements", "tags": ["java", "list", "java-8", "collectors"], "link": "http://stackoverflow.com/questions/29095967/splitting-list-into-sublists-along-elements/29124651#29124651", "question_id": 29095967, "answer_id": 29124651}, {"body": "<p>In my <a href=\"https://github.com/amaembo/streamex\" rel=\"nofollow\">StreamEx</a> library there's a <a href=\"http://amaembo.github.io/streamex/javadoc/javax/util/streamex/StreamEx.html#groupRuns-java.util.function.BiPredicate-\" rel=\"nofollow\"><code>groupRuns</code></a> method which can help you to solve this:</p>\n\n<pre><code>List&lt;String&gt; input = Arrays.asList(\"a\", \"b\", null, \"c\", null, \"d\", \"e\");\nList&lt;List&lt;String&gt;&gt; result = StreamEx.of(input)\n        .groupRuns((a, b) -&gt; a != null &amp;&amp; b != null)\n        .remove(list -&gt; list.get(0) == null).toList();\n</code></pre>\n\n<p>The <code>groupRuns</code> method takes a <code>BiPredicate</code> which for the pair of adjacent elements returns true if they should be grouped. After that we remove groups containing nulls and collect the rest to the List.</p>\n\n<p>This solution is parallel-friendly: you may use it for parallel stream as well. Also it works nice with any stream source (not only random access lists like in some other solutions) and it's somewhat better than collector-based solutions as here you can use any terminal operation you want without intermediate memory waste.</p>\n", "title": "Splitting List into sublists along elements", "tags": ["java", "list", "java-8", "collectors"], "link": "http://stackoverflow.com/questions/29095967/splitting-list-into-sublists-along-elements/31427685#31427685", "question_id": 29095967, "answer_id": 31427685}], "creation_date": 1426585952, "score": 38, "link": "http://stackoverflow.com/questions/29095967/splitting-list-into-sublists-along-elements", "question_id": 29095967}, {"body": "<p>I have a single line code,</p>\n\n<pre><code>int a = 10;\na = ++a * ( ++a + 5);\n</code></pre>\n\n<p>My expected output was <code>12 * (11 + 5) = 192</code> ,but I got <strong>187</strong>. As much as I knew the increment operator inside <code>()</code> is to be solved first, then why the one outside is solved first?</p>\n", "tags": ["java", "precedence"], "title": "If parenthesis has a higher precedence then why is increment operator solved first?", "answers": [{"body": "<p>Expressions are evaluated left to right. Parentheses just express grouping, they don't express ordering of evaluation.</p>\n\n<p>So</p>\n\n<pre><code> 11 * (12 + 5)\n++a   ++a\n</code></pre>\n\n<p>equals </p>\n\n<pre><code>187\n</code></pre>\n", "title": "If parenthesis has a higher precedence then why is increment operator solved first?", "tags": ["java", "precedence"], "link": "http://stackoverflow.com/questions/28219423/if-parenthesis-has-a-higher-precedence-then-why-is-increment-operator-solved-fir/28219479#28219479", "question_id": 28219423, "answer_id": 28219479}, {"body": "<p>Quoting from <a href=\"http://blogs.msdn.com/b/ericlippert/archive/2008/05/23/precedence-vs-associativity-vs-order.aspx?Redirected=true\">Eric Lippert's Blog</a>:    </p>\n\n<blockquote>\n  <p>The evaluation of an arithmetical expression is controlled by three sets of rules: precedence rules, associativity rules, and order rules.   </p>\n  \n  <p><strong>Precedence</strong> rules describe how an underparenthesized expression should be parenthesized when the expression mixes different kinds of operators.  </p>\n  \n  <p><strong>Associativity</strong> rules describe how an underparenthesized expression should be parenthesized when the expression has a bunch of the same kind of operator.  </p>\n  \n  <p><strong>Order of evaluation</strong> rules describe the order in which each operand in an expression is evaluated.  </p>\n</blockquote>\n\n<p>Higher precedence results in grouping of operands with an operator and doesn't mean the evaluation of operands. It is the order of evaluation which decides sequence of evaluation of sub-expressions in an expression.  </p>\n\n<hr>\n\n<h3>Update:</h3>\n\n<p>As I can see many programmers think that statement  </p>\n\n<pre><code>a = ++a * ( ++a + 5);  \n</code></pre>\n\n<p>will invoke undefined behavior. Yes it will invoke UB if there is no guarantee of evaluation order of operands of an operator.   </p>\n\n<p>But this is not true in context of java programming language. It has well defined behavior in java (as well as in C#). The Java Language Specification states that:  </p>\n\n<h3><a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.7\">15.7. Evaluation Order</a></h3>\n\n<blockquote>\n  <p>The Java programming language guarantees that the operands of operators appear to be <strong>evaluated in a specific evaluation order, namely, from left to right</strong>.  </p>\n</blockquote>\n\n<p><strong>Example 15.7.1-1. Left-Hand Operand Is Evaluated First</strong></p>\n\n<blockquote>\n  <p>In the following program, the <code>*</code> operator has a left-hand operand that contains an assignment to a variable and a right-hand operand that contains a reference to the same variable. The value produced by the reference will reflect the fact that the assignment occurred first.</p>\n\n<pre><code>class Test1 {\n    public static void main(String[] args) {\n        int i = 2;\n        int j = (i=3) * i;\n        System.out.println(j);\n    }\n}\n</code></pre>\n  \n  <p>This program produces the output:</p>\n\n<pre><code>9\n</code></pre>\n  \n  <p><em>It is not permitted for evaluation of the <code>*</code> operator to produce 6 instead of 9</em>.  </p>\n</blockquote>\n\n<p>But, still java specification clearly states that not to write such codes:  </p>\n\n<blockquote>\n  <p><strong>It is recommended that code not rely crucially on this specification</strong>. Code is usually clearer when each expression contains at most one side effect, as its outermost operation, and when code does not depend on exactly which exception arises as a consequence of the left-to-right evaluation of expressions.</p>\n</blockquote>\n", "title": "If parenthesis has a higher precedence then why is increment operator solved first?", "tags": ["java", "precedence"], "link": "http://stackoverflow.com/questions/28219423/if-parenthesis-has-a-higher-precedence-then-why-is-increment-operator-solved-fir/28220822#28220822", "question_id": 28219423, "answer_id": 28220822}, {"body": "<p>The effect of parentheses is to control which computed values are used as operands for subsequent operations.  They control the sequence in which operations are performed only to the extent that an operation cannot be evaluated until after its operands have been.  Consider the expressions:</p>\n\n<pre><code>(a()+b()) * (c()+d())\na() + (b()*c()) + d()\n</code></pre>\n\n<p>The parenthesis need not (and in Java cannot) affect the order in which a(), b(), c(), and d() are called.  They may affect whether the multiplication gets performed before or after d() gets called, but only in very rare circumstances (e.g. d() calling a Java Native Interface which alters the numerical rounding mode used in multiplication in a way Java doesn't know about) would code have any way of knowing or caring whether the multiply was performed before or after d().</p>\n\n<p>Otherwise, what's important is that in the first case, one addition operations will act upon a() and b(), and the other upon c() and d(); the multiplication will act upon a()+b() and c()+d().  In the other case, the first multiplication will act upon b() and c(), the first addition upon a() and the aforementioned product, and the second addition upon the first sum and d().</p>\n", "title": "If parenthesis has a higher precedence then why is increment operator solved first?", "tags": ["java", "precedence"], "link": "http://stackoverflow.com/questions/28219423/if-parenthesis-has-a-higher-precedence-then-why-is-increment-operator-solved-fir/28222772#28222772", "question_id": 28219423, "answer_id": 28222772}, {"body": "<p>From that snippet</p>\n\n<pre><code>int a = 10;\na = ++a * ( ++a + 5);\n</code></pre>\n\n<p>Sometimes, the most simple solution is to use javap to understand the evaluation order:</p>\n\n<pre><code> 0: bipush 10 // push 10 onto the stack (stack={10})\n 2: istore_1  // store 10 into variable 1 (a = 10, stack={})\n 3: iinc 1, 1 // increment local variable 1 by 1 (a = 11, stack={})\n 6: iload_1   // push integer in local variable 1 onto the stack (a = 11, stack = {11})\n 7: iinc 1, 1 // increment local variable 1 by 1 (a = 12, stack={11})\n 10: iload_1  // push integer in local variable 1 onto the stack (a = 12, stack = {12, 11})\n 11: iconst_5 // load the int value 5 onto the stack (a = 12, stack = {5, 12, 11})\n 12: iadd     // add 5 and 12 (a = 12, stack = {17, 11})\n 13: imul     // multiply 17 and 11 (a = 12, stack = {})\n</code></pre>\n\n<ol>\n<li><code>a</code> is incremented by 1. (line 3) // a = 11</li>\n<li><code>a</code> is incremented by 1. (line 7) // a = 12</li>\n<li>add <code>5</code> to <code>a</code> (line 12) // a = 17</li>\n<li>multiply <code>11</code> to <code>17</code> (line 13) // a = 187</li>\n</ol>\n\n<p>(10 + 1 + 1 + 5) * 11 = 187</p>\n", "title": "If parenthesis has a higher precedence then why is increment operator solved first?", "tags": ["java", "precedence"], "link": "http://stackoverflow.com/questions/28219423/if-parenthesis-has-a-higher-precedence-then-why-is-increment-operator-solved-fir/28259501#28259501", "question_id": 28219423, "answer_id": 28259501}, {"body": "<pre><code>  int a = 10;\n  a = ++a * ( ++a + 5);\n</code></pre>\n\n<p>above kind of expressions are always evaluated in left to right fashion be it C or JAVA </p>\n\n<p>in this case it is solving like this \n  11*(12+5) which results in 11*17 = 187 // w.r.t java</p>\n\n<p>but if it we solve the same expression  w.r.t C-language</p>\n\n<p>then the answer gets changed as the way of evaluation changes</p>\n\n<p>in c first pre-increment/pre-decrement happens ,so if \"N\" no of times pre inc/dec\nare there in the expression then inc/dec will happen first \"N\" no of times</p>\n\n<p>then the same value will be substituted in each ocurrence of the variable in the expression and the expression value is calculated and after that post increment/decrement happens</p>\n\n<p>i.e a gets incremented to 11 then again 12 as there are two incrementation for a in the expression and then the expression is evaluated as</p>\n\n<p>12*(12+5)=12*17=204 //w.r.t C-language</p>\n", "title": "If parenthesis has a higher precedence then why is increment operator solved first?", "tags": ["java", "precedence"], "link": "http://stackoverflow.com/questions/28219423/if-parenthesis-has-a-higher-precedence-then-why-is-increment-operator-solved-fir/28311823#28311823", "question_id": 28219423, "answer_id": 28311823}], "creation_date": 1422548063, "score": 37, "link": "http://stackoverflow.com/questions/28219423/if-parenthesis-has-a-higher-precedence-then-why-is-increment-operator-solved-fir", "question_id": 28219423}, {"body": "<p>My first question is - </p>\n\n<pre><code>   class Explain() {\n        public Explain() {\n      }\n   }\n</code></pre>\n\n<p>Should Constructor always declared as public? </p>\n\n<p>What if I create a <code>private</code> constructor.</p>\n\n<p>I always seen constructors are implicitly <code>public</code>. So why <code>private</code> constructor is useful? Or is it not useful at all. Because nobody could ever call it, or never make an object(because of the <code>private</code> constructor) ! And that is my second question.</p>\n", "tags": ["java", "oop", "design-patterns", "constructor"], "title": "Do constructors always have to be public?", "answers": [{"body": "<p>No, <em>Constructors</em> can be <code>public</code>, <code>private</code>, <code>protected</code>  or <code>default</code>(no access modifier at all).</p>\n\n<p>Making something <code>private</code>  doesn't mean nobody can access it. It just means that nobody outside the class can access it. So <code>private</code> constructor is useful too. </p>\n\n<p>One of the use of <code>private</code> constructor is to serve singleton classes. A singleton class is one which limits the number of objects creation to one. Using <code>private</code> constructor we can ensure that no more than one object can be created at a time.</p>\n\n<p>Example - </p>\n\n<pre><code>public class Database {\n\n    private static Database singleObject;\n    private int record;\n    private String name;\n\n    private Database(String n) {\n        name = n;\n        record = 0;\n    }\n\n    public static synchronized Database getInstance(String n) {\n        if (singleObject == null) {\n            singleObject = new Database(n);\n        }\n\n        return singleObject;\n    }\n\n    public void doSomething() {\n        System.out.println(\"Hello StackOverflow.\");\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n</code></pre>\n\n<p><em>More information about</em> <a href=\"http://stackoverflow.com/q/215497/4533771\">access modifiers. </a></p>\n", "title": "Do constructors always have to be public?", "tags": ["java", "oop", "design-patterns", "constructor"], "link": "http://stackoverflow.com/questions/30995942/do-constructors-always-have-to-be-public/30995962#30995962", "question_id": 30995942, "answer_id": 30995962}, {"body": "<p>Yes , Constructors can have any access specifier/access modifier.</p>\n\n<p>Private constructors are useful for creating <code>singleton</code> classes.</p>\n\n<p><strong>Singleton</strong> - A singleton class is a class where only a single object can be created at runtime (per JVM) .</p>\n\n<p>A simple example of a singleton class is -</p>\n\n<pre><code>class Ex {\n    private static Ex instance;\n    int a;\n    private Ex() {\n        a = 10;\n    }\n    public static Ex getInstance() {\n        if(instance == null) {\n            instance = new Ex();\n        }\n        return instance;\n    }\n}\n</code></pre>\n\n<p>Note, for the above class, the only way to get an object (outside this class) is to call the getInstance() function, which would only create a single instance and keep returning that.</p>\n\n<p>Also, note that this is not thread-safe.</p>\n", "title": "Do constructors always have to be public?", "tags": ["java", "oop", "design-patterns", "constructor"], "link": "http://stackoverflow.com/questions/30995942/do-constructors-always-have-to-be-public/30996060#30996060", "question_id": 30995942, "answer_id": 30996060}, {"body": "<p>Constructors could be public, default or private and it all depends on what you want to do with it. </p>\n\n<p>For example, if you are defining a Singleton class, you'd better <strong>hide</strong> (meaning making it private so that it is only available to the class where it belongs) the constructor to prevent other classes to instantiate your class at their will. </p>\n\n<p>You may want to declare it default, let's say, for testing purposes so that test cases within the same package could access it. </p>\n\n<p>More detailed info could be found <a href=\"https://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html\">here</a></p>\n", "title": "Do constructors always have to be public?", "tags": ["java", "oop", "design-patterns", "constructor"], "link": "http://stackoverflow.com/questions/30995942/do-constructors-always-have-to-be-public/30996139#30996139", "question_id": 30995942, "answer_id": 30996139}, {"body": "<p>Constructors can have all kind of access modifiers. The usage of different access modifier on constructors are different.</p>\n\n<p>You make a constructor <code>public</code> if you want the class to be instantiated from any where.</p>\n\n<p>You make a constructor <code>protected</code> if you want the class to be inherited and its inherited classes be instantiated.</p>\n\n<p>You make a constructor <code>private</code> if you want the class to be instantiated just from its own members usually a static block or static method. It means that you take control of instantiating the class and apply some rule on instantiation. Example of usage of private constructor is singleton design pattern.</p>\n", "title": "Do constructors always have to be public?", "tags": ["java", "oop", "design-patterns", "constructor"], "link": "http://stackoverflow.com/questions/30995942/do-constructors-always-have-to-be-public/30996193#30996193", "question_id": 30995942, "answer_id": 30996193}, {"body": "<p>A constructor <strong>has</strong> to be at least protected or even private while creating, for example, custom factory classes, like:</p>\n\n<pre><code>public final class MyFactory {\n  private MyFactory(){} // this one prevents instances of your factory\n}\n\npublic static void doSomething(){} // access that with MyFactory.doSomething\n</code></pre>\n\n<p>Note that this is only one example showing when a constructor shouldn't be public.</p>\n", "title": "Do constructors always have to be public?", "tags": ["java", "oop", "design-patterns", "constructor"], "link": "http://stackoverflow.com/questions/30995942/do-constructors-always-have-to-be-public/30996258#30996258", "question_id": 30995942, "answer_id": 30996258}, {"body": "<p>There is no rule that constructor to be public .Generally we define it public just because we would like to instantiate it from other classes too .</p>\n\n<p>Private constructor means,\"i dont let anyone create my instance except me \".\nSo normally you would do this when you like to have a singleton pattern.</p>\n\n<p>Following is the class in JDK which uses a private constructor .</p>\n\n<pre><code>public class Runtime {\n    private static Runtime currentRuntime = new Runtime();\n\n    public static Runtime getRuntime() {\n        return currentRuntime;\n    }\n\n    // Don't let anyone else instantiate this class\n    private Runtime() {\n    }\n}\n</code></pre>\n", "title": "Do constructors always have to be public?", "tags": ["java", "oop", "design-patterns", "constructor"], "link": "http://stackoverflow.com/questions/30995942/do-constructors-always-have-to-be-public/30996271#30996271", "question_id": 30995942, "answer_id": 30996271}, {"body": "<p>No,Constructors can use any access modifier, including private. (A private \nconstructor means only code within the class itself can instantiate an object \nof that type, so if the private constructor class wants to allow an instance \nof the class to be used, the class must provide a static method or variable that allows access to an instance created from within the class.)</p>\n\n<p>Example</p>\n\n<pre><code>class Alpha {\n   static String s = \" \";\n   protected Alpha() { s += \"alpha \"; }\n }\n class SubAlpha extends Alpha {\n   private SubAlpha() { s += \"sub \"; }\n }\n public class SubSubAlpha extends Alpha {\n   private SubSubAlpha() { s += \"subsub \"; }\n   public static void main(String[] args) {\n     new SubSubAlpha();\n     System.out.println(s);\n   }\n }\n</code></pre>\n\n<p>Output of above program will be</p>\n\n<p>alpha subsub</p>\n", "title": "Do constructors always have to be public?", "tags": ["java", "oop", "design-patterns", "constructor"], "link": "http://stackoverflow.com/questions/30995942/do-constructors-always-have-to-be-public/30996822#30996822", "question_id": 30995942, "answer_id": 30996822}, {"body": "<p>I agree with the previous answers that a Singleton is a good example of a class having a private constructor. I would though recommend a different implementation: a thread safe Singleton:</p>\n\n<pre><code>/**\n * Thread safe singleton\n */\npublic class Singleton {\n\n    private static volatile Singleton instance = null;\n\n    /**\n     * Private constructor\n     */\n    private Singleton() {\n    }\n\n    /**\n     * Gets the Instance of the Singleton in a thread safe way.\n     * @return\n     */\n    public static Singleton getInstance() {\n        if (instance == null) {\n            synchronized (Singleton.class) {\n                if (instance == null) {\n                    instance = new Singleton();\n                }\n            }\n        }\n        return instance;\n    }\n}\n</code></pre>\n\n<p>Using a singleton in a thread safe way will safe you a lot of pain in parallel code.</p>\n", "title": "Do constructors always have to be public?", "tags": ["java", "oop", "design-patterns", "constructor"], "link": "http://stackoverflow.com/questions/30995942/do-constructors-always-have-to-be-public/30996974#30996974", "question_id": 30995942, "answer_id": 30996974}, {"body": "<p>The simple explanation is if there is no constructor in a class, the compiler automatically creates a default constructor.</p>\n\n<p>The constructor is not always declared as public, it can also be private, protected, or default.</p>\n\n<p>The private constructors prevent a class from fully and clearly expressed/represented by its callers. In that case private constructors are useful. And if if we do not need our class to be sub-classed, we can use private constructors.</p>\n", "title": "Do constructors always have to be public?", "tags": ["java", "oop", "design-patterns", "constructor"], "link": "http://stackoverflow.com/questions/30995942/do-constructors-always-have-to-be-public/31001150#31001150", "question_id": 30995942, "answer_id": 31001150}, {"body": "<p>Most of these answers refer to a singleton or factory class.  Another time a private constructor appears is (for example) in the <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Math.html\" rel=\"nofollow\">java.lang.Math class</a>, where everything is static and no one should ever call the constructor (including the class itself).  By having the private constructor, you prevent anyone outside the class from calling the constructor.  (This doesn\u2019t prevent someone inside the class from calling the constructor, but then they\u2019re breaking their own rule.)</p>\n", "title": "Do constructors always have to be public?", "tags": ["java", "oop", "design-patterns", "constructor"], "link": "http://stackoverflow.com/questions/30995942/do-constructors-always-have-to-be-public/31008158#31008158", "question_id": 30995942, "answer_id": 31008158}, {"body": "<p>Others have noted that constructors may have access modifiers; an aspect not yet mentioned is that the aspect modifiers on a constructor control two very different aspects of construction, but do not allow them to be controlled separately:</p>\n\n<ol>\n<li>Who is allowed to create <em>instances</em> of <code>ClassName</code> and what constructors are they allowed to use.</li>\n<li>Who is allowed to create <em>extensions</em> of <code>ClassName</code> and what constructors are they allowed to use.</li>\n</ol>\n\n<p>Both Java and .NET require that the answers to those two questions go together; if a class isn't <code>final</code> (or <code>sealed</code>) and allows a constructor to be used by outside code to create new instances, then outside code will also have total freedom to use that same constructor to create derived types.</p>\n\n<p>In many cases, it may be appropriate for a class to have only package-private (<code>internal</code>) constructors, but expose public methods that return new instances.  Such an approach might be used if one were designing a type like <code>String</code> from scratch; a package including <code>String</code> could define it as an abstract type but include concrete derived types like <code>AsciiString</code> and <code>UCS16String</code> which store their content as a <code>byte[]</code> and <code>Char[]</code>, respectively; methods that return <code>String</code> could then return one of the derivatives depending upon whether the string contained characters outside the ASCII range.  If neither <code>String</code> nor any derived types expose any constructors outside its package, and all derived types within the package behave as a string would be expected to behave, then code which receives a reference of type <code>String</code> could expect it to behave sanely as a string (e.g. guaranteeing that any observations about its value will forevermore remain true).  Exposing constructors outside the package, however, would make it possible for derived types to behave in weird and bizarre fashion (e.g. changing their contents after they've been examined and validated).</p>\n\n<p>From a syntactical perspective, being able to say <code>Fnord foo = new Fnord(123);</code> is a little nicer than having to say <code>Fnord foo = Fnord.Create(123);</code>, but a class <code>Fnord</code> that requires the latter syntax can maintain much better control over the object-creation process.</p>\n", "title": "Do constructors always have to be public?", "tags": ["java", "oop", "design-patterns", "constructor"], "link": "http://stackoverflow.com/questions/30995942/do-constructors-always-have-to-be-public/31009341#31009341", "question_id": 30995942, "answer_id": 31009341}], "creation_date": 1435042938, "score": 37, "link": "http://stackoverflow.com/questions/30995942/do-constructors-always-have-to-be-public", "question_id": 30995942}, {"body": "<p>Let's say I have following interface:</p>\n\n<pre><code>interface Mammal {\n    void marry(Mammal m);\n    Mammal giveBirthTo();\n}\n</code></pre>\n\n<p>However, this doesn't say quite exactly what I want.</p>\n\n<p>Obviously, a human can't marry a dog, nor give birth to a cat. So how can I embed this information into the interface, such that the input type and output type can be changed automatically as it gets implemented?</p>\n", "tags": ["java", "generics", "interface"], "title": "How to apply more constraints on an interface declaration in Java?", "answers": [{"body": "<p>You could use generics and change your design. </p>\n\n<p>Something in the lines of:</p>\n\n<pre><code>interface Marriable&lt;T extends Mammal&gt; {\n    void marry(T sweetHalf);\n    T giveBirthTo();\n}\n</code></pre>\n\n<p>... where <code>Mammal</code> is your top interface or abstract class, and <code>Human</code>, <code>Dog</code>, <code>Unicorn</code> etc. extend / implement it. </p>\n", "title": "How to apply more constraints on an interface declaration in Java?", "tags": ["java", "generics", "interface"], "link": "http://stackoverflow.com/questions/30215583/how-to-apply-more-constraints-on-an-interface-declaration-in-java/30215694#30215694", "question_id": 30215583, "answer_id": 30215694}, {"body": "<p>Generics. Try with</p>\n\n<pre><code> private static interface Race {\n}\n\nprivate static class Human implements Race {}\nprivate static class Canine implements Race {}\n\nprivate static interface Being&lt;R extends Race&gt; {\n    void marry(Being&lt;R&gt; other);\n    Being&lt;R&gt; giveBirthTo();\n}\n\nprivate void tryMe() {\n    Being&lt;Human&gt; aHuman = new Being&lt;Human&gt;() {\n\n        @Override\n        public void marry(Being&lt;Human&gt; other) {\n        }\n\n        @Override\n        public Being&lt;Human&gt; giveBirthTo() {\n            return null;\n        }\n    };\n\n    Being&lt;Canine&gt; aCanine = new Being&lt;Canine&gt;() {\n\n        @Override\n        public void marry(Being&lt;Canine&gt; other) {\n        }\n\n        @Override\n        public Being&lt;Canine&gt; giveBirthTo() {\n            return null;\n        }\n    };\n\n    aHuman.marry(aCanine); // not possible\n}\n</code></pre>\n", "title": "How to apply more constraints on an interface declaration in Java?", "tags": ["java", "generics", "interface"], "link": "http://stackoverflow.com/questions/30215583/how-to-apply-more-constraints-on-an-interface-declaration-in-java/30215890#30215890", "question_id": 30215583, "answer_id": 30215890}, {"body": "<p>You can generify your interface using a recursive type variable:</p>\n\n<pre><code>interface Mammal&lt;T extends Mammal&lt;T&gt;&gt; {\n  void marry(T m);\n  T giveBirthTo();\n}\n</code></pre>\n\n<p>This way, the Java compiler can give you a certain validation level. Notice however that this approach is still open to abuse. For example:</p>\n\n<pre><code>class Cat implements Mammal&lt;Cat&gt; {\n  @Override void marry(Cat cat) { ... }\n  @Override Cat giveBirthTo() { ... }\n}\n\nclass Dog implements Mammal&lt;Cat&gt; { // implements wrong interface\n  @Override void marry(Cat cat) { ... }\n  @Override Cat giveBirthTo() { ... }\n}\n</code></pre>\n\n<p>The compiler can only assure that you implement the <code>Mammal</code> interface by some sub type of the same interface, but not by the particular class that implements it. This latter type constraint cannot be expressed in the Java programming language.</p>\n", "title": "How to apply more constraints on an interface declaration in Java?", "tags": ["java", "generics", "interface"], "link": "http://stackoverflow.com/questions/30215583/how-to-apply-more-constraints-on-an-interface-declaration-in-java/30216050#30216050", "question_id": 30215583, "answer_id": 30216050}], "creation_date": 1431522083, "score": 37, "link": "http://stackoverflow.com/questions/30215583/how-to-apply-more-constraints-on-an-interface-declaration-in-java", "question_id": 30215583}, {"body": "<p>Why it was always \"GC (Allocation Failure)\"?</p>\n\n<p>Java HotSpot(TM) 64-Bit Server VM (25.25-b02) for linux-amd64 JRE (<strong>1.8.0_25</strong>-b17), </p>\n\n<pre><code>CommandLine flags: \n-XX:CMSInitiatingOccupancyFraction=60 \n-XX:GCLogFileSize=10485760 \n-XX:+HeapDumpOnOutOfMemoryError \n-XX:InitialHeapSize=32212254720 \n-XX:MaxHeapSize=32212254720 \n-XX:NewRatio=10 \n-XX:OldPLABSize=16 \n-XX:ParallelGCThreads=4 \n-XX:+PrintGC \n-XX:+PrintGCDetails \n-XX:+PrintGCTimeStamps \n-XX:+PrintStringTableStatistics \n-XX:+PrintTenuringDistribution \n-XX:StringTableSize=1000003 \n-XX:SurvivorRatio=4 \n-XX:TargetSurvivorRatio=50 \n-XX:+UseCompressedClassPointers \n-XX:+UseCompressedOops\n-XX:+UseParNewGC \n-XX:+UseConcMarkSweepGC\n</code></pre>\n\n\n\n<pre><code>27.329: [GC (Allocation Failure) 27.329: [ParNew\nDesired survivor size 44728320 bytes, new threshold 15 (max 15)\n- age   1:   16885304 bytes,   16885304 total\n: 349568K-&gt;16618K(436928K), 0.2069129 secs] 349568K-&gt;16618K(31369920K), 0.2070712 secs] [Times: user=0.78 sys=0.04, real=0.21 secs]\n\n\n28.210: [GC (Allocation Failure) 28.210: [ParNew\nDesired survivor size 44728320 bytes, new threshold 15 (max 15)\n- age   1:   28866504 bytes,   28866504 total\n- age   2:   12582536 bytes,   41449040 total\n: 366186K-&gt;47987K(436928K), 0.2144807 secs] 366186K-&gt;47987K(31369920K), 0.2146024 secs] [Times: user=0.84 sys=0.01, real=0.22 secs]\n\n\n29.037: [GC (Allocation Failure) 29.038: [ParNew\nDesired survivor size 44728320 bytes, new threshold 2 (max 15)\n- age   1:   28443488 bytes,   28443488 total\n- age   2:   28386624 bytes,   56830112 total\n- age   3:   12579928 bytes,   69410040 total\n: 397555K-&gt;76018K(436928K), 0.2357352 secs] 397555K-&gt;76018K(31369920K), 0.2358535 secs] [Times: user=0.93 sys=0.01, real=0.23 secs]\n</code></pre>\n", "tags": ["java", "garbage-collection"], "title": "Java GC (Allocation Failure)", "answers": [{"body": "<p>\"Allocation Failure\" is a cause of GC cycle to kick.</p>\n\n<p>\"Allocation Failure\" means that no more space left in Eden to allocate object. So, it is normal cause of young GC.</p>\n\n<p>Older JVM were not printing GC cause for minor GC cycles.</p>\n\n<p>\"Allocation Failure\" is almost only possible cause for minor GC. Another reason for minor GC to kick could be CMS remark phase (if <code>+XX:+ScavengeBeforeRemark</code> is enabled).</p>\n", "title": "Java GC (Allocation Failure)", "tags": ["java", "garbage-collection"], "link": "http://stackoverflow.com/questions/28342736/java-gc-allocation-failure/28357523#28357523", "question_id": 28342736, "answer_id": 28357523}], "creation_date": 1423135602, "score": 37, "link": "http://stackoverflow.com/questions/28342736/java-gc-allocation-failure", "question_id": 28342736}, {"body": "<p>I have a question regarding the usage of the <code>Function.identity()</code> method.</p>\n\n<p>Imagine the following code:</p>\n\n<pre><code>Arrays.asList(\"a\", \"b\", \"c\")\n          .stream()\n          .map(Function.identity()) // &lt;- This,\n          .map(str -&gt; str)          // &lt;- is the same as this.\n          .collect(Collectors.toMap(\n                       Function.identity(), // &lt;-- And this,\n                       str -&gt; str));        // &lt;-- is the same as this.\n</code></pre>\n\n<p>Is there any reason why you should use <code>Function.identity()</code> instead of <code>str-&gt;str</code> (or vice versa). I think that the second option is more readable (a matter of taste of course). But, is there any \"real\" reason why one should be preferred?</p>\n", "tags": ["java", "lambda", "java-8"], "title": "Java 8 lambdas, Function.identity() or t-&gt;t", "answers": [{"body": "<p>In your example there is no big difference between <code>str -&gt; str</code> and <code>Function.identity()</code> since internally it is simply <code>t-&gt;t</code>.</p>\n\n<p>But sometimes we can't use <code>Function.identity</code>. Take a look here</p>\n\n<pre><code>List&lt;Integer&gt; list = new ArrayList&lt;&gt;();\nlist.add(1);\nlist.add(2);\n</code></pre>\n\n<p>this will compile fine</p>\n\n<pre><code>int[] arrayOK = list.stream().mapToInt(i -&gt; i).toArray();\n</code></pre>\n\n<p>but if you will try to compile </p>\n\n<pre><code>int[] arrayProblem = list.stream().mapToInt(Function.identity()).toArray();\n</code></pre>\n\n<p>you will get compilation error since <code>mapToInt</code> expects <code>ToIntFunction</code>, which is not related to <code>Function</code>. Also <code>ToIntFunction</code> doesn't have <code>identity()</code> method.</p>\n", "title": "Java 8 lambdas, Function.identity() or t-&gt;t", "tags": ["java", "lambda", "java-8"], "link": "http://stackoverflow.com/questions/28032827/java-8-lambdas-function-identity-or-t-t/28032999#28032999", "question_id": 28032827, "answer_id": 28032999}, {"body": "<p>From the <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/java/util/function/Function.java\">JDK source</a>:</p>\n\n<pre><code>static &lt;T&gt; Function&lt;T, T&gt; identity() {\n    return t -&gt; t;\n}\n</code></pre>\n\n<p>So, no, as long as it is syntactically correct.</p>\n", "title": "Java 8 lambdas, Function.identity() or t-&gt;t", "tags": ["java", "lambda", "java-8"], "link": "http://stackoverflow.com/questions/28032827/java-8-lambdas-function-identity-or-t-t/28033143#28033143", "question_id": 28032827, "answer_id": 28033143}, {"body": "<p>As of the current JRE implementation, <code>Function.identity()</code> will always return the same instance while each occurrence of <code>identifier -&gt; identifier</code> will not only create its own instance but even have a distinct implementation class. For more details, see <a href=\"http://stackoverflow.com/a/27524543/2711488\">here</a>.</p>\n\n<p>The reason is that the compiler generates a synthetic method holding the trivial body of that lambda expression (in the case of <code>x-&gt;x</code>, equivalent to <code>return identifier;</code>) and tell the runtime to create an implementation of the functional interface calling this method. So the runtime sees only different target methods and the current implementation does not analyze the methods to find out whether certain methods are equivalent.</p>\n\n<p>So using <code>Function.identity()</code> instead of <code>x -&gt; x</code> might save some memory but that shouldn\u2019t drive your decision if you really think that <code>x -&gt; x</code> is more readable than <code>Function.identity()</code>.</p>\n\n<p>You may also consider that when compiling with debug information enabled, the synthetic method will have a line debug attribute pointing to the source code line(s) holding the lambda expression, therefore you have a chance of finding the source of a particular <code>Function</code> instance while debugging. In contrast, when encountering the instance returned by <code>Function.identity()</code> during debugging an operation, you won\u2019t know who has called that method and passed the instance to the operation.</p>\n", "title": "Java 8 lambdas, Function.identity() or t-&gt;t", "tags": ["java", "lambda", "java-8"], "link": "http://stackoverflow.com/questions/28032827/java-8-lambdas-function-identity-or-t-t/28041480#28041480", "question_id": 28032827, "answer_id": 28041480}], "creation_date": 1421698558, "score": 36, "link": "http://stackoverflow.com/questions/28032827/java-8-lambdas-function-identity-or-t-t", "question_id": 28032827}, {"body": "<p>This code works (taken in the Javadoc):</p>\n\n<pre><code>List&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3, 4);\nString commaSeparatedNumbers = numbers.stream()\n    .map(i -&gt; i.toString())\n    .collect(Collectors.joining(\", \"));\n</code></pre>\n\n<p>This one can't be compiled:</p>\n\n<pre><code>int[] numbers = {1, 2, 3, 4};\nString commaSeparatedNumbers = Arrays.stream(numbers)\n    .map((Integer i) -&gt; i.toString())\n    .collect(Collectors.joining(\", \"));\n</code></pre>\n\n<p>IDEA tells me I have an \"incompatible return type String in lambda expression\".</p>\n\n<p>Why ? And how to fix that ?</p>\n", "tags": ["java", "functional-programming", "java-8", "java-stream"], "title": "Why can&#39;t I map integers to strings when streaming from an array?", "answers": [{"body": "<p><code>Arrays.stream(int[])</code> creates an <code>IntStream</code>, not a <code>Stream&lt;Integer&gt;</code>. So you need to call <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html#mapToObj-java.util.function.IntFunction-\"><code>mapToObj</code></a> instead of just <code>map</code>, when mapping an <code>int</code> to an object.</p>\n\n<p>This should work as expected:</p>\n\n<pre><code>String commaSeparatedNumbers = Arrays.stream(numbers)\n    .mapToObj(i -&gt; ((Integer) i).toString()) //i is an int, not an Integer\n    .collect(Collectors.joining(\", \"));\n</code></pre>\n\n<p>which you can also write:</p>\n\n<pre><code>String commaSeparatedNumbers = Arrays.stream(numbers)\n    .mapToObj(Integer::toString)\n    .collect(Collectors.joining(\", \"));\n</code></pre>\n", "title": "Why can&#39;t I map integers to strings when streaming from an array?", "tags": ["java", "functional-programming", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/29028980/why-cant-i-map-integers-to-strings-when-streaming-from-an-array/29029039#29029039", "question_id": 29028980, "answer_id": 29029039}, {"body": "<p><code>Arrays.stream(numbers)</code> creates an <code>IntStream</code> under the hood and the map operation on an <code>IntStream</code> requires an <code>IntUnaryOperator</code> (i.e a  function <code>int -&gt; int</code>). The mapping function you want to apply does not respect this contract and hence the compilation error.</p>\n\n<p>You would need to call <code>boxed()</code> before in order to get a <code>Stream&lt;Integer&gt;</code> (this is what <code>Arrays.asList(...).stream()</code> returns). Then just call <code>map</code> as you did in the first snippet.</p>\n\n<p>Note that if you need <code>boxed()</code> followed by <code>map</code> you probably want to use <code>mapToObj</code> directly. </p>\n\n<p>The advantage is that <code>mapToObj</code> doesn't require to box each <code>int</code> value to an <code>Integer</code> object; depending on the mapping function you apply of course; so I would go with this option which is also shorter to write.</p>\n", "title": "Why can&#39;t I map integers to strings when streaming from an array?", "tags": ["java", "functional-programming", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/29028980/why-cant-i-map-integers-to-strings-when-streaming-from-an-array/29029043#29029043", "question_id": 29028980, "answer_id": 29029043}, {"body": "<p>You can create an  Integer Stream using Arrays.stream(int[]) , you can call <code>mapToObj</code> like <code>mapToObj(Integer::toString)</code>.</p>\n\n<pre><code>String csn = Arrays.stream(numbers) // your numbers array\n.mapToObj(Integer::toString)\n.collect(Collectors.joining(\", \"));\n</code></pre>\n\n<p>Hope this helps..</p>\n", "title": "Why can&#39;t I map integers to strings when streaming from an array?", "tags": ["java", "functional-programming", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/29028980/why-cant-i-map-integers-to-strings-when-streaming-from-an-array/29029173#29029173", "question_id": 29028980, "answer_id": 29029173}, {"body": "<p>If the purpose of this sample and question is to figure out how to map strings to a stream of ints (for example, using a stream of ints to access an index in an Array of strings), you can also use boxing, then casting to an int (which would then allow accessing the index of the array).</p>\n\n<pre><code>int[] numbers = {0, 1, 2, 3}; \nString commaSeparatedNumbers = Arrays.stream(numbers)\n    .boxed()\n    .map((Integer i) -&gt; Integer.toString((int)i))\n    .collect(Collectors.joining(\", \"));\n</code></pre>\n\n<p>The .boxed() call converts your IntStream (a stream of primitive ints) to a Stream (a stream of objects -- namely, Integer objects) which will then accept the return of an object (in this case, a String object) from your lambda. Here it is just a string representation of the number for demonstration purposes, but it could just as easily (and more practically) be any string object -- like the element of a string array as mentioned before.</p>\n\n<p>Just thought I'd offer another possibility. In programming, there are always multiple ways of accomplishing a task. Know as many as you can, then choose the one that fits the best for the task at hand, keeping in mind performance issues, intuitiveness, clarity of code, your preferences in coding style, and the most self-documenting.</p>\n\n<p>Happy coding!</p>\n", "title": "Why can&#39;t I map integers to strings when streaming from an array?", "tags": ["java", "functional-programming", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/29028980/why-cant-i-map-integers-to-strings-when-streaming-from-an-array/33478374#33478374", "question_id": 29028980, "answer_id": 33478374}], "creation_date": 1426239579, "score": 36, "link": "http://stackoverflow.com/questions/29028980/why-cant-i-map-integers-to-strings-when-streaming-from-an-array", "question_id": 29028980}, {"body": "<p>I have an Android app that uses Dagger 2 for dependency injection. I am also using the latest gradle build tools that allow a build variant for unit testing and one for instrumentation tests. I am using <code>java.util.Random</code> in my app, and I want to mock this for testing. The classes I'm testing don't use any Android stuff, so they're just regular java classes.</p>\n\n<p>In my main code I define a <code>Component</code> in a class that extends the <code>Application</code> class, but in the unit tests I'm not using an <code>Application</code>. I tried defining a test <code>Module</code> and <code>Component</code>, but Dagger won't generate the <code>Component</code>. I have also tried using the <code>Component</code> that I defined in my application and swapping the <code>Module</code> when I build it, but the application's <code>Component</code> doesn't have <code>inject</code> methods for my test classes. How can I provide a mock implementation of <code>Random</code> for testing?</p>\n\n<p>Here's some sample code:</p>\n\n<p>Application:</p>\n\n<pre><code>public class PipeGameApplication extends Application {\n\n    private PipeGame pipeGame;\n\n    @Singleton\n    @Component(modules = PipeGameModule.class)\n    public interface PipeGame {\n        void inject(BoardFragment boardFragment);\n        void inject(ConveyorFragment conveyorFragment);\n    }\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        pipeGame = DaggerPipeGameApplication_PipeGame.create();\n    }\n\n    public PipeGame component() {\n        return pipeGame;\n    }\n}\n</code></pre>\n\n<p>Module:</p>\n\n<pre><code>@Module\npublic class PipeGameModule {\n\n    @Provides\n    @Singleton\n    Random provideRandom() {\n        return new Random();\n    }\n}\n</code></pre>\n\n<p>Base class for tests:</p>\n\n<pre><code>public class BaseModelTest {\n\n    PipeGameTest pipeGameTest;\n\n    @Singleton\n    @Component(modules = PipeGameTestModule.class)\n    public interface PipeGameTest {\n        void inject(BoardModelTest boardModelTest);\n        void inject(ConveyorModelTest conveyorModelTest);\n    }\n\n    @Before\n    public void setUp() {\n        pipeGameTest = DaggerBaseModelTest_PipeGameTest.create(); // Doesn't work\n    }\n\n    public PipeGameTest component() {\n        return pipeGameTest;\n    }\n}\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>public class BaseModelTest {\n\n    PipeGameApplication.PipeGame pipeGameTest;\n\n    // This works if I make the test module extend\n    // the prod module, but it can't inject my test classes\n    @Before\n    public void setUp() {\n        pipeGameTest = DaggerPipeGameApplication_PipeGame.builder().pipeGameModule(new PipeGameModuleTest()).build();\n    }\n\n    public PipeGameApplication.PipeGame component() {\n        return pipeGameTest;\n    }\n}\n</code></pre>\n\n<p>Test Module:</p>\n\n<pre><code>@Module\npublic class PipeGameTestModule {\n\n    @Provides\n    @Singleton\n    Random provideRandom() {\n        return mock(Random.class);\n    }\n}\n</code></pre>\n", "tags": ["java", "android", "unit-testing", "dagger-2"], "title": "Android Unit Tests with Dagger 2", "answers": [{"body": "<p>This is currently impossible with Dagger 2 (as of v2.0.0) without some workarounds. You can read about it <a href=\"https://github.com/google/dagger/issues/110\">here</a>.</p>\n\n<p>More about possible workarounds:</p>\n\n<ul>\n<li><p><a href=\"https://stackoverflow.com/questions/26939340/how-do-you-override-a-module-dependency-in-a-unit-test-with-dagger-2-0?lq=1\">How do you override a module/dependency in a unit test with Dagger 2.0?</a></p></li>\n<li><p><a href=\"https://stackoverflow.com/questions/29969913/creating-test-dependencies-when-using-dagger2\">Creating test dependencies when using Dagger2</a></p></li>\n</ul>\n", "title": "Android Unit Tests with Dagger 2", "tags": ["java", "android", "unit-testing", "dagger-2"], "link": "http://stackoverflow.com/questions/29989245/android-unit-tests-with-dagger-2/30058025#30058025", "question_id": 29989245, "answer_id": 30058025}, {"body": "<p>In my opinion you can approach this problem by looking at it from a different angle. You will easily be able to unit test your class by not depending upon Dagger for construction class under test with its mocked dependencies injected into it. </p>\n\n<p>What I mean to say is that in the test setup you can: </p>\n\n<ul>\n<li>Mock the dependencies of the class under test</li>\n<li>Construct the class under test manually using the mocked dependencies</li>\n</ul>\n\n<p>We don't need to test whether dependencies are getting injected correctly as Dagger verifies the correctness of the dependency graph during compilation. So any such errors will be reported by failure of compilation. And that is why manual creation of class under test in the setup method should be acceptable.</p>\n\n<p>Code example where dependency is injected using constructor in the class under test:  </p>\n\n<pre><code>public class BoardModelTest {\n\n  private BoardModel boardModel;\n  private Random random;\n\n  @Before\n  public void setUp() {\n    random = mock(Random.class);\n    boardModel = new BoardModel(random);\n  }\n\n  @Test\n  ...\n}\n\npublic class BoardModel {\n  private Random random;\n\n  @Inject\n  public BoardModel(Random random) {\n    this.random = random;\n  }\n\n  ...\n}\n</code></pre>\n\n<p>Code example where dependency is injected using field in the class under test (in case <code>BoardModel</code> is constructed by a framework):  </p>\n\n<pre><code>public class BoardModelTest {\n\n  private BoardModel boardModel;\n  private Random random;\n\n  @Before\n  public void setUp() {\n    random = mock(Random.class);\n    boardModel = new BoardModel();\n    boardModel.random = random;\n  }\n\n  @Test\n  ...\n}\n\npublic class BoardModel {\n  @Inject\n  Random random;\n\n  public BoardModel() {}\n\n  ...\n}\n</code></pre>\n", "title": "Android Unit Tests with Dagger 2", "tags": ["java", "android", "unit-testing", "dagger-2"], "link": "http://stackoverflow.com/questions/29989245/android-unit-tests-with-dagger-2/30059666#30059666", "question_id": 29989245, "answer_id": 30059666}, {"body": "<p>If you are using dagger2 with Android, you can use app flavours for providing mocking resources.</p>\n\n<p>See here for a demo of flavours in mock testing(without dagger):\n<a href=\"https://www.youtube.com/watch?v=vdasFFfXKOY\" rel=\"nofollow\">https://www.youtube.com/watch?v=vdasFFfXKOY</a></p>\n\n<p>This codebase has an example:\n<a href=\"https://github.com/googlecodelabs/android-testing\" rel=\"nofollow\">https://github.com/googlecodelabs/android-testing</a></p>\n\n<p>In your <strong>/src/prod/com/yourcompany/Component.java</strong>\nyou provide your production components.</p>\n\n<p>In your <strong>/src/mock/com/yourcompany/Component.java</strong>\nyou provide your mocking components.</p>\n\n<p>This allows you create builds of your app with or without mocking.\nIt also allows parallel development (backend by one team, frontend app by another team), you can mock until api methods are avilable.</p>\n\n<p>How my gradle commands look (its a Makefile):</p>\n\n<pre><code>install_mock:\n    ./gradlew installMockDebug\n\ninstall:\n    ./gradlew installProdDebug\n\ntest_unit:\n    ./gradlew testMockDebugUnitTest\n\ntest_integration_mock:\n    ./gradlew connectedMockDebugAndroidTest\n\ntest_integration_prod:\n    ./gradlew connectedProdDebugAndroidTest\n</code></pre>\n", "title": "Android Unit Tests with Dagger 2", "tags": ["java", "android", "unit-testing", "dagger-2"], "link": "http://stackoverflow.com/questions/29989245/android-unit-tests-with-dagger-2/35653738#35653738", "question_id": 29989245, "answer_id": 35653738}, {"body": "<p>You have hit the nail on the head by saying: </p>\n\n<blockquote>\n  <p>application's Component doesn't have inject methods for my test classes</p>\n</blockquote>\n\n<p>So, to get around this problem we can make a test version of your Application class.  Then we can have a test version of your module.  And to make it all run in a test, we can use Robolectric.</p>\n\n<p>1) Create the test version of your Application class</p>\n\n<pre><code>public class TestPipeGameApp extends PipeGameApp {\n    private PipeGameModule pipeGameModule;\n\n    @Override protected PipeGameModule getPipeGameModule() {\n        if (pipeGameModule == null) {\n            return super.pipeGameModule();\n        }\n        return pipeGameModule;\n    }\n\n    public void setPipeGameModule(PipeGameModule pipeGameModule) {\n        this.pipeGameModule = pipeGameModule;\n        initComponent();\n    }}\n</code></pre>\n\n<p>2) Your original Application class needs to have <strong>initComponent()</strong> and <strong>pipeGameModule()</strong> methods</p>\n\n<pre><code>public class PipeGameApp extends Application {\n    protected void initComponent() {\n        DaggerPipeGameComponent.builder()\n            .pipeGameModule(getPipeGameModule())\n            .build();\n    }\n\n    protected PipeGameModule pipeGameModule() {\n        return new PipeGameModule(this);\n    }}\n</code></pre>\n\n<p>3) Your PipeGameTestModule should extend the production module with a constructor:</p>\n\n<pre><code>public class PipeGameTestModule extends PipeGameModule {\n    public PipeGameTestModule(Application app) {\n        super(app);\n    }}\n</code></pre>\n\n<p>4) Now, in your junit test's <strong>setup()</strong> method, set this test module on your test app:</p>\n\n<pre><code>@Before\npublic void setup() {\n    TestPipeGameApp app = (TestPipeGameApp) RuntimeEnvironment.application;\n    PipeGameTestModule module = new PipeGameTestModule(app);\n    app.setPipeGameModule(module);\n}\n</code></pre>\n\n<p>Now you can customize your test module how you originally wanted.</p>\n", "title": "Android Unit Tests with Dagger 2", "tags": ["java", "android", "unit-testing", "dagger-2"], "link": "http://stackoverflow.com/questions/29989245/android-unit-tests-with-dagger-2/36393045#36393045", "question_id": 29989245, "answer_id": 36393045}], "creation_date": 1430492139, "score": 36, "link": "http://stackoverflow.com/questions/29989245/android-unit-tests-with-dagger-2", "question_id": 29989245}, {"body": "<p>In my abstract class, I have something like this:</p>\n\n<pre><code>public Object methodIWantToExpose(){\n  // ... \n  methodIDontWantExposed()\n  // ...\n}\n\nprotected abstract void methodIDontWantExposed();\n</code></pre>\n\n<p>The thing is, I want to force the person that extends methodIDontWantExposed() to make it protected, because I don't want the extending class to have both methodIDontWantExposed and methodIWantToExpose exposed.    </p>\n\n<p>Is there a way to do this (or a different approach which might avoid my problem)?</p>\n", "tags": ["java", "access-modifiers"], "title": "Can I force abstract methods to be protected when someone overrides them?", "answers": [{"body": "<p>No. A subclass can <em>always</em> make a method more public.</p>\n\n<p>Even if they couldn't do this with the method you have in your class, they could always write:</p>\n\n<pre><code>public void callsMethodIDontWantExposed() {\n    methodIDontWantExposed();\n}\n</code></pre>\n\n<p>... so you'd be in the same situation.</p>\n", "title": "Can I force abstract methods to be protected when someone overrides them?", "tags": ["java", "access-modifiers"], "link": "http://stackoverflow.com/questions/28671534/can-i-force-abstract-methods-to-be-protected-when-someone-overrides-them/28671615#28671615", "question_id": 28671534, "answer_id": 28671615}, {"body": "<p>No you can't. If it were to be a concrete method, you could make it private. In your case there is no smart way to prevent an extending class from declaring it public (you can of course comment the method, saying it shouldn't be made public).</p>\n", "title": "Can I force abstract methods to be protected when someone overrides them?", "tags": ["java", "access-modifiers"], "link": "http://stackoverflow.com/questions/28671534/can-i-force-abstract-methods-to-be-protected-when-someone-overrides-them/28671634#28671634", "question_id": 28671534, "answer_id": 28671634}, {"body": "<p>No, a subclass can always widen the access when overriding a method. There's no way to prevent that. Usually however, when I override a method I rarely change visibility from protected to public. Documenting the purpose of the method carefully might be enough to convince the implementer that it would be a bad idea in this case.</p>\n\n<p>If you really want to encapsulate the behavior in a private way, you could do something along the following lines:</p>\n\n<pre><code>abstract class YourClass {\n    private HandlerInterface unexposedHandler;\n\n    YourClass(HandlerInterface handler) {\n        unexposedHandler = handler;\n    }\n\n    public Object methodIWantToExpose(){\n        // ... \n        handler.methodIDontWantExposed();\n        // ...\n    }\n}\n</code></pre>\n\n<p>With Java 8 you could even make <code>HandlerInterface</code> a functional interface and conveniently use a lambda as follows:</p>\n\n<pre><code>class YourSubClass extends YourClass {\n    YourSubClass() {\n        super(() -&gt; {\n            System.out.println(\"This is the unexposed code\");\n        });\n    }\n\n    ...\n}\n</code></pre>\n", "title": "Can I force abstract methods to be protected when someone overrides them?", "tags": ["java", "access-modifiers"], "link": "http://stackoverflow.com/questions/28671534/can-i-force-abstract-methods-to-be-protected-when-someone-overrides-them/28671670#28671670", "question_id": 28671534, "answer_id": 28671670}, {"body": "<p>It depends on whether you want users of your class to be able to override that method or not. If you let them override it, they can always override it with a public method.</p>\n\n<p>Some ways you can avoid letting them override that method :</p>\n\n<ol>\n<li><p>Have it implemented in the abstract class and make it final, so it can't be overridden.</p></li>\n<li><p>Make it package private and implement it in one of more sub-classes that belong to the same package. Since you'd be the one implementing it, you can keep it package private, or change it to final protected, so that sub-classes outside your package wouldn't be able to override it with a public method.</p></li>\n</ol>\n", "title": "Can I force abstract methods to be protected when someone overrides them?", "tags": ["java", "access-modifiers"], "link": "http://stackoverflow.com/questions/28671534/can-i-force-abstract-methods-to-be-protected-when-someone-overrides-them/28671748#28671748", "question_id": 28671534, "answer_id": 28671748}, {"body": "<p>You can't because increasing the visibility of a method does not break base class contract.</p>\n\n<p>Take a look at <a href=\"http://stackoverflow.com/questions/12780779/why-java-allows-increasing-the-visibility-of-protected-methods-in-child-class\">Why Java allows increasing the visibility of protected methods in child class?</a></p>\n", "title": "Can I force abstract methods to be protected when someone overrides them?", "tags": ["java", "access-modifiers"], "link": "http://stackoverflow.com/questions/28671534/can-i-force-abstract-methods-to-be-protected-when-someone-overrides-them/28671953#28671953", "question_id": 28671534, "answer_id": 28671953}, {"body": "<p>In certain cases you can avoid having an abstract method (and indeed even subclassing) altogether and instead you can use a <a href=\"http://en.wikipedia.org/wiki/Strategy_pattern\" rel=\"nofollow\">strategy</a> defined in an enum.</p>\n\n<p>Of course the enum instance used can still be exposed but at least it's guaranteed that the only behaviours allowed are the ones defined in your enum.</p>\n\n<p>So your solution would be something like this:</p>\n\n<pre><code>enum Behaviour {\n  ONE() {\n     public Object doSomething() { return \"ONE\"; }\n  };\n\n   public abstract Object doSomething();\n}\n\n// and your class\n\npublic abstract class MyClass {\n   private final Behaviour behaviour;\n\n   protected MyClass( Behaviour behaviour ) {\n     this.behaviour = behaviour;\n   }\n\n   public final void methodIWantToExpose() {\n      // ...\n      behaviour.doSomething();\n      // ...\n   } \n}\n</code></pre>\n", "title": "Can I force abstract methods to be protected when someone overrides them?", "tags": ["java", "access-modifiers"], "link": "http://stackoverflow.com/questions/28671534/can-i-force-abstract-methods-to-be-protected-when-someone-overrides-them/28672168#28672168", "question_id": 28671534, "answer_id": 28672168}], "creation_date": 1424687043, "score": 35, "link": "http://stackoverflow.com/questions/28671534/can-i-force-abstract-methods-to-be-protected-when-someone-overrides-them", "question_id": 28671534}, {"body": "<p>To give some context, I have been writing a basic Perlin noise implementation in Java, and when it came to implementing seeding, I had encountered a bug that I couldn't explain.</p>\n\n<p>In order to generate the same random weight vectors each time for the same seed no matter which set of coordinates' noise level is queried and in what order, I generated a new seed (<code>newSeed</code>), based on a combination of the original seed and the coordinates of the weight vector, and used this as the seed for the randomization of the weight vector by running:</p>\n\n<pre><code>rnd.setSeed(newSeed);\nweight = new NVector(2);\nweight.setElement(0, rnd.nextDouble() * 2 - 1);\nweight.setElement(1, rnd.nextDouble() * 2 - 1);\nweight.normalize()\n</code></pre>\n\n<p>Where <code>NVector</code> is a self-made class for vector mathematics.</p>\n\n<p>However, when run, the program generated very bad noise:\n<img src=\"http://i.stack.imgur.com/kPCqA.png\" alt=\"Very bad noise, with vertical streaks\"></p>\n\n<p>After some digging, I found that the first element of each vector was very similar (and so the first <code>nextDouble()</code> call after each <code>setSeed()</code> call) resulting in the first element of every vector in the vector grid being similar.</p>\n\n<p>This can be proved by running:</p>\n\n<pre><code>long seed = Long.valueOf(args[0]);\nint loops = Integer.valueOf(args[1]);\ndouble avgFirst = 0.0, avgSecond = 0.0, avgThird = 0.0;\ndouble lastfirst = 0.0, lastSecond = 0.0, lastThird = 0.0;\nfor(int i = 0; i&lt;loops; i++)\n{\n    ran.setSeed(seed + i);\n    double first = ran.nextDouble();\n    double second = ran.nextDouble();\n    double third = ran.nextDouble();\n    avgFirst += Math.abs(first - lastfirst);\n    avgSecond += Math.abs(second - lastSecond);\n    avgThird += Math.abs(third - lastThird);\n    lastfirst = first;\n    lastSecond = second;\n    lastThird = third;\n}\nSystem.out.println(\"Average first difference.: \" + avgFirst/loops);\nSystem.out.println(\"Average second Difference: \" + avgSecond/loops);\nSystem.out.println(\"Average third Difference.: \" + avgSecond/loops);\n</code></pre>\n\n<p>Which finds the average difference between the first, second and third random numbers generated after a <code>setSeed()</code> method has been called over a range of seeds as specified by the program's arguments; which for me returned these results:</p>\n\n<pre><code>C:\\java Test 462454356345 10000\nAverage first difference.: 7.44638117976783E-4\nAverage second Difference: 0.34131692827329957\nAverage third Difference.: 0.34131692827329957\n\nC:\\java Test 46245445 10000\nAverage first difference.: 0.0017196011123287126\nAverage second Difference: 0.3416750057190849\nAverage third Difference.: 0.3416750057190849\n\nC:\\java Test 1 10000\nAverage first difference.: 0.0021601598225344998\nAverage second Difference: 0.3409914232342002\nAverage third Difference.: 0.3409914232342002\n</code></pre>\n\n<p>Here you can see that the first average difference is significantly smaller than the rest, and seemingly decreasing with higher seeds.</p>\n\n<p>As such, by adding a simple dummy call to <code>nextDouble()</code> before setting the weight vector, I was able to fix my perlin noise implementation:</p>\n\n<pre><code>rnd.setSeed(newSeed);\nrnd.nextDouble();\nweight.setElement(0, rnd.nextDouble() * 2 - 1);\nweight.setElement(1, rnd.nextDouble() * 2 - 1);\n</code></pre>\n\n<p>Resulting in:</p>\n\n<p><img src=\"http://i.stack.imgur.com/tfEvQ.png\" alt=\"enter image description here\"></p>\n\n<p>I would like to know why this bad variation in the first call to <code>nextDouble()</code> (I have not checked other types of randomness) occurs and/or to alert people to this issue.</p>\n\n<p>Of course, it could just be an implementation error on my behalf, which I would be greatful if it were pointed out to me.</p>\n", "tags": ["java", "random", "noise"], "title": "First random number after setSeed in Java always similar", "answers": [{"body": "<p>Move your <code>setSeed</code> out of the loop.  Java's PRNG is a linear congruential generator, so seeding it with sequential values is guaranteed to give results that are correlated across iterations of the loop.</p>\n\n<p><strong>ADDENDUM</strong></p>\n\n<p>I dashed that off before running out the door to a meeting, and now have time to illustrate what I was saying above.</p>\n\n<p>I've written a little Ruby script which implements Schrage's portable prime modulus multiplicative linear congruential generator.  I instantiate two copies of the LCG, both seeded with a value of 1.  However, in each iteration of the output loop I reseed the second one based on the loop index.  Here's the code:</p>\n\n<pre><code># Implementation of a Linear Congruential Generator (LCG)\nclass LCG\n  attr_reader :state\n  M = (1 &lt;&lt; 31) - 1    # Modulus = 2**31 - 1, which is prime\n\n  # constructor requires setting a seed value to use as initial state\n  def initialize(seed)\n    reseed(seed)\n  end\n\n  # users can explicitly reset the seed.\n  def reseed(seed)\n    @state = seed.to_i\n  end\n\n  # Schrage's portable prime modulus multiplicative LCG\n  def value\n    @state = 16807 * @state % M\n    # return the generated integer value AND its U(0,1) mapping as an array\n    [@state, @state.to_f / M]\n  end\nend\n\nif __FILE__ == $0\n  # create two instances of LCG, both initially seeded with 1\n  mylcg1 = LCG.new(1)\n  mylcg2 = LCG.new(1)\n  puts \"   default progression     manual reseeding\"\n  10.times do |n|\n    mylcg2.reseed(1 + n)  # explicitly reseed 2nd LCG based on loop index\n    printf \"%d %11d %f %11d %f\\n\", n, *mylcg1.value, *mylcg2.value\n  end\nend\n</code></pre>\n\n<p>and here's the output it produces:</p>\n\n<pre><code>   default progression     manual reseeding\n0       16807 0.000008       16807 0.000008\n1   282475249 0.131538       33614 0.000016\n2  1622650073 0.755605       50421 0.000023\n3   984943658 0.458650       67228 0.000031\n4  1144108930 0.532767       84035 0.000039\n5   470211272 0.218959      100842 0.000047\n6   101027544 0.047045      117649 0.000055\n7  1457850878 0.678865      134456 0.000063\n8  1458777923 0.679296      151263 0.000070\n9  2007237709 0.934693      168070 0.000078\n</code></pre>\n\n<p>The columns are iteration number followed by the underlying integer generated by the LCG and the result when scaled to the range (0,1).  The left set of columns show the natural progression of the LCG when allowed to proceed on its own, while the right set show what happens when you reseed on each iteration.</p>\n", "title": "First random number after setSeed in Java always similar", "tags": ["java", "random", "noise"], "link": "http://stackoverflow.com/questions/27760450/first-random-number-after-setseed-in-java-always-similar/27760541#27760541", "question_id": 27760450, "answer_id": 27760541}, {"body": "<p>This is known issue. Similar seed will generate similar few first values. Random wasn't really designed to be used this way. You are supposed to create instance with a good seed and then generate moderately sized sequence of \"random\" numbers.</p>\n\n<p>Your current solution is ok - as long as it looks good and is fast enough. You can also consider using hashing/mixing functions which were designed to solve your problem (and then, optionally, using the output as seed). For example see: <a href=\"http://stackoverflow.com/questions/7746743/parametric-random-function-for-2d-noise-generation/7746829\">Parametric Random Function For 2D Noise Generation</a></p>\n", "title": "First random number after setSeed in Java always similar", "tags": ["java", "random", "noise"], "link": "http://stackoverflow.com/questions/27760450/first-random-number-after-setseed-in-java-always-similar/27760617#27760617", "question_id": 27760450, "answer_id": 27760617}, {"body": "<p>The <strong><code>Random</code></strong> class is designed to be a low overhead source of pseudo-random numbers.  But the consequence of the \"low overhead\" implementation is that the number stream has properties that are a long way off perfect ... from a statistical perspective.  You have encountered one of the imperfections.  <code>Random</code> is documented as being a Linear Congruential generator, and the properties of such generators are well known.</p>\n\n<p>There are a variety of ways of dealing with this.  For example, if you are careful you can hide some of the most obvious \"poor\" characteristics.  (But you would be advised to run some statistical tests.  You can't see non-randomness in the noise added to your second image, but it could still be there.)</p>\n\n<p>Alternatively, if you want pseudo-random numbers that have guaranteed good statistical properties, then you should be using <strong><code>SecureRandom</code></strong> instead of <strong><code>Random</code></strong>.  It has significantly higher overheads, but you can be assured that many \"smart people\" will have spent a lot of time on the design, testing and analysis of the algorithms.</p>\n\n<p>Finally, it is relatively simple to create a subclass of <code>Random</code> that uses an alternative algorithm for generating the numbers; see <a href=\"http://demesos.blogspot.com.au/2011/09/replacing-java-random-generator.html\" rel=\"nofollow\">link</a>.  The problem is that you have to select (or design) and implement an appropriate algorithm.</p>\n\n<hr>\n\n<p>Calling this an \"<strong>issue</strong>\" is debatable.  It is a well known and understood property of LCGs, and use of LCGs was a concious engineering choice.  People want low overhead PRNGs, but low overhead PRNGs have poor properties.  TANSTAAFL.</p>\n\n<p>Certainly, this is not something that Oracle would contemplate changing in <code>Random</code>.  Indeed, the reasons for not changing are stated clearly in the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/Random.html\" rel=\"nofollow\">javadoc</a> for the <code>Random</code> class.</p>\n\n<blockquote>\n  <p>\"In order to guarantee this property, particular algorithms are specified for the class <code>Random</code>. Java implementations must use all the algorithms shown here for the class <code>Random</code>, for the sake of absolute portability of Java code.\"</p>\n</blockquote>\n", "title": "First random number after setSeed in Java always similar", "tags": ["java", "random", "noise"], "link": "http://stackoverflow.com/questions/27760450/first-random-number-after-setseed-in-java-always-similar/27761175#27761175", "question_id": 27760450, "answer_id": 27761175}], "creation_date": 1420325897, "score": 35, "link": "http://stackoverflow.com/questions/27760450/first-random-number-after-setseed-in-java-always-similar", "question_id": 27760450}, {"body": "<p>What's the difference between these two methods: Optional.flatMap() and Optional.map()?</p>\n\n<p>An example would be appreciated.</p>\n", "tags": ["java", "java-8"], "title": "Java 8 - Difference between Optional.flatmap and Optional.map", "answers": [{"body": "<p>They both take a function from the type of the optional to something.</p>\n\n<p>Map applies the function \"as is\" on the optional you have:</p>\n\n<pre><code>if (optional.isEmpty()) return Optional.empty();\nelse return Optional.of(f(optional.get()));\n</code></pre>\n\n<p>What happens if your function is a function from <code>T -&gt; Optional&lt;U&gt;</code>? Your result is now an <code>Optional&lt;Optional&lt;U&gt;&gt;</code>!</p>\n\n<p>That's what <code>flatMap</code> is about: if your function already returns an <code>Optional</code>, <code>flatMap</code> is a bit smarter and doesn't double wrap it, returning <code>Optional&lt;U&gt;</code>. It's the composition of two functional idioms: <code>map</code> and <code>flatten</code>.</p>\n", "title": "Java 8 - Difference between Optional.flatmap and Optional.map", "tags": ["java", "java-8"], "link": "http://stackoverflow.com/questions/30864583/java-8-difference-between-optional-flatmap-and-optional-map/30864727#30864727", "question_id": 30864583, "answer_id": 30864727}, {"body": "<p>Use <code>map</code> if the function returns the object you need or <code>flatMap</code> if the function returns an <code>Optional</code>. For example:</p>\n\n<pre><code>public static void main(String[] args) {\n  Optional&lt;String&gt; s = Optional.of(\"input\");\n  System.out.println(s.map(Test::getOutput));\n  System.out.println(s.flatMap(Test::getOutputOpt));\n}\n\nstatic Optional&lt;String&gt; getOutputOpt(String input) {\n  return input == null ? Optional.empty() : Optional.of(\"output for \" + input);\n}\n\nstatic String getOutput(String input) {\n  return input == null ? null : \"output for \" + input;\n}\n</code></pre>\n\n<p>Both print statements print the same thing.</p>\n", "title": "Java 8 - Difference between Optional.flatmap and Optional.map", "tags": ["java", "java-8"], "link": "http://stackoverflow.com/questions/30864583/java-8-difference-between-optional-flatmap-and-optional-map/30864741#30864741", "question_id": 30864583, "answer_id": 30864741}], "creation_date": 1434449396, "score": 35, "link": "http://stackoverflow.com/questions/30864583/java-8-difference-between-optional-flatmap-and-optional-map", "question_id": 30864583}, {"body": "<p>I have a Spring-Boot application where the default properties are set in an <code>application.properties</code> file in the classpath (src/main/resources/application.properties).</p>\n\n<p>I would like to override some default settings in my JUnit test with properties declared in a <code>test.properties</code> file (src/test/resources/test.properties)</p>\n\n<p>I usualy have a dedicated Config Class for my Junit Tests, e.g.</p>\n\n<pre><code>package foo.bar.test;\n\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\n\n@Configuration\n@Import(CoreConfig.class)\n@EnableAutoConfiguration\npublic class TestConfig {\n\n}\n</code></pre>\n\n<p>I first thought that using <code>@PropertySource(\"classpath:test.properties\")</code> in  the TestConfig class would do the trick, but these properties will not overwrite the application.properties settings (see Spring-Boot Reference Doc - <a href=\"http://docs.spring.io/spring-boot/docs/1.2.3.RELEASE/reference/htmlsingle/#boot-features-external-config\">23. Externalized Configuration</a>).</p>\n\n<p>Then I tried to use <code>-Dspring.config.location=classpath:test.properties</code> when invoking the test. That was successful - but I don't want to set this system property for each test execution. Thus I put it in the code</p>\n\n<pre><code>@Configuration\n@Import(CoreConfig.class)\n@EnableAutoConfiguration\npublic class TestConfig {\n\n  static {\n    System.setProperty(\"spring.config.location\", \"classpath:test.properties\");\n  }\n\n}\n</code></pre>\n\n<p>which unfortunatly was again not successful.</p>\n\n<p>There must be a simple solution on how to override <code>application.properties</code> settings in JUnit tests with <code>test.properties</code> that I must have overlooked.</p>\n", "tags": ["java", "unit-testing", "spring-boot"], "title": "Override default Spring-Boot application.properties settings in Junit Test", "answers": [{"body": "<p>You can use <code>@TestPropertySource</code> to override values in <code>application.properties</code>. From its javadoc:</p>\n\n<blockquote>\n  <p>test property sources can be used to selectively override properties defined in system and application property sources</p>\n</blockquote>\n\n<p>For example:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>@RunWith(SpringJUnit4ClassRunner.class)\n@SpringApplicationConfiguration(classes = ExampleApplication.class)\n@TestPropertySource(locations=\"classpath:test.properties\")\npublic class ExampleApplicationTests {\n\n}\n</code></pre>\n", "title": "Override default Spring-Boot application.properties settings in Junit Test", "tags": ["java", "unit-testing", "spring-boot"], "link": "http://stackoverflow.com/questions/29669393/override-default-spring-boot-application-properties-settings-in-junit-test/29673732#29673732", "question_id": 29669393, "answer_id": 29673732}, {"body": "<p>You can also use <a href=\"http://docs.spring.io/spring/docs/current/spring-framework-reference/html/integration-testing.html#integration-testing-annotations-meta\">meta-annotations</a> to externalize the configuration. For example:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>@RunWith(SpringJUnit4ClassRunner.class)\n@DefaultTestAnnotations\npublic class ExampleApplicationTests { \n   ...\n}\n\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.TYPE)\n@SpringApplicationConfiguration(classes = ExampleApplication.class)\n@TestPropertySource(locations=\"classpath:test.properties\")\npublic @interface DefaultTestAnnotations { }\n</code></pre>\n", "title": "Override default Spring-Boot application.properties settings in Junit Test", "tags": ["java", "unit-testing", "spring-boot"], "link": "http://stackoverflow.com/questions/29669393/override-default-spring-boot-application-properties-settings-in-junit-test/29682080#29682080", "question_id": 29669393, "answer_id": 29682080}], "creation_date": 1429173172, "score": 34, "link": "http://stackoverflow.com/questions/29669393/override-default-spring-boot-application-properties-settings-in-junit-test", "question_id": 29669393}, {"body": "<p>Environment: Ubuntu x86_64 (14.10), Oracle JDK 1.8u25</p>\n\n<p>I try and use a parallel stream of <a href=\"http://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#lines-java.nio.file.Path-java.nio.charset.Charset-\"><code>Files.lines()</code></a> but I want to <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#skip-long-\"><code>.skip()</code></a> the first line (it's a CSV file with a header). Therefore I try and do this:</p>\n\n<pre><code>try (\n    final Stream&lt;String&gt; stream = Files.lines(thePath, StandardCharsets.UTF_8)\n        .skip(1L).parallel();\n) {\n    // etc\n}\n</code></pre>\n\n<p>But then one column failed to parse to an int...</p>\n\n<p>So I tried some simple code. The file is question is dead simple:</p>\n\n<pre><code>$ cat info.csv \nstartDate;treeDepth;nrMatchers;nrLines;nrChars;nrCodePoints;nrNodes\n1422758875023;34;54;151;4375;4375;27486\n$\n</code></pre>\n\n<p>And the code is equally simple:</p>\n\n<pre><code>public static void main(final String... args)\n{\n    final Path path = Paths.get(\"/home/fge/tmp/dd/info.csv\");\n    Files.lines(path, StandardCharsets.UTF_8).skip(1L).parallel()\n        .forEach(System.out::println);\n}\n</code></pre>\n\n<p>And I <em>systematically</em> get the following result (OK, I have only run it something around 20 times):</p>\n\n<pre><code>startDate;treeDepth;nrMatchers;nrLines;nrChars;nrCodePoints;nrNodes\n</code></pre>\n\n<p>What am I missing here?</p>\n\n<hr>\n\n<p><strong>EDIT</strong> It seems like the problem, or misunderstanding, is much more rooted than that (the two examples below were cooked up by a fellow on FreeNode's ##java):</p>\n\n<pre><code>public static void main(final String... args)\n{\n    new BufferedReader(new StringReader(\"Hello\\nWorld\")).lines()\n        .skip(1L).parallel()\n        .forEach(System.out::println);\n\n    final Iterator&lt;String&gt; iter\n        = Arrays.asList(\"Hello\", \"World\").iterator();\n    final Spliterator&lt;String&gt; spliterator\n        = Spliterators.spliteratorUnknownSize(iter, Spliterator.ORDERED);\n    final Stream&lt;String&gt; s\n        = StreamSupport.stream(spliterator, true);\n\n    s.skip(1L).forEach(System.out::println);\n}\n</code></pre>\n\n<p>This prints:</p>\n\n<pre><code>Hello\nHello\n</code></pre>\n\n<p>Uh.</p>\n\n<p>@Holger suggested that this happens for any stream which is <code>ORDERED</code> and not <code>SIZED</code> with this other sample:</p>\n\n<pre><code>Stream.of(\"Hello\", \"World\")\n    .filter(x -&gt; true)\n    .parallel()\n    .skip(1L)\n    .forEach(System.out::println);\n</code></pre>\n\n<p>Also, it stems from all the discussion which already took place that the problem (if it is one?) is with <code>.forEach()</code> (as <a href=\"http://stackoverflow.com/questions/28259636/is-this-a-bug-in-files-lines-or-am-i-misunderstanding-something-about-paralle#comment44876969_28259636\">@SotiriosDelimanolis first pointed out</a>).</p>\n", "tags": ["java", "parallel-processing", "java-8", "java-stream"], "title": "Is this a bug in Files.lines(), or am I misunderstanding something about parallel streams?", "answers": [{"body": "<p>The problem is that you are using parallel stream together with forEach and you are expecting that skip action relies on the correct elements order which is not the case here. Excerpt from the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#forEach-java.util.function.Consumer-\" rel=\"nofollow\">forEach</a> documentation: </p>\n\n<blockquote>\n  <p>For parallel stream pipelines, this operation does not guarantee to\n  respect the encounter order of the stream, as doing so would sacrifice\n  the benefit of parallelism.</p>\n</blockquote>\n\n<p>I guess basically what happens is that skip operation is firstly performed on the second line, not on the first. If you make stream sequential or use <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#forEachOrdered-java.util.function.Consumer-\" rel=\"nofollow\">forEachOrdered</a> you can see that then it produces the expected result. Another approach would be to use <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html\" rel=\"nofollow\">Collectors</a>.</p>\n", "title": "Is this a bug in Files.lines(), or am I misunderstanding something about parallel streams?", "tags": ["java", "parallel-processing", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/28259636/is-this-a-bug-in-files-lines-or-am-i-misunderstanding-something-about-paralle/28261334#28261334", "question_id": 28259636, "answer_id": 28261334}, {"body": "<p>Let me quote something of relevance&mdash;the Javadoc of <code>skip</code>:</p>\n\n<blockquote>\n  <p>While skip() is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of n, since skip(n) is constrained to skip not just any n elements, but the first n elements in the encounter order.</p>\n</blockquote>\n\n<p>Now, it is quite certain that <code>Files.lines()</code> <em>has</em> a well-defined encounter order and is an <code>ORDERED</code> stream (if it were not, there would be no guarantee even in sequential operation that the encounter order matches file order), therefore it is guaranteed that the resulting stream will deterministically consist of just the second line in your example. </p>\n\n<p>Whether or not there is something else to this, the guarantee is definitely there.</p>\n", "title": "Is this a bug in Files.lines(), or am I misunderstanding something about parallel streams?", "tags": ["java", "parallel-processing", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/28259636/is-this-a-bug-in-files-lines-or-am-i-misunderstanding-something-about-paralle/28265191#28265191", "question_id": 28259636, "answer_id": 28265191}, {"body": "<p><strong>THIS ANSWER IS OUTDATED - READ <a href=\"http://stackoverflow.com/a/32611920/2525313\">THIS ONE</a> INSTEAD!</strong></p>\n\n<hr>\n\n<p>To quickly answer the question: <strong>The observed behavior is intended!</strong> There is no bug and all is happening according to the documentation. But let it be said, that this behavior should be documented and communicated better. It should be made more obvious how <code>forEach</code> ignores ordering.</p>\n\n<p>I'll first cover the <strong>concepts</strong> which allow the observed behavior. This provides the background for dissecting one of the <strong>examples</strong> given in the question. I will do this on a <strong>high level</strong> and then again on a very <strong>low level</strong>.</p>\n\n<p><strong>[TL;DR: Read on its own, the <em>high level</em> explanation will give a rough answer.]</strong></p>\n\n<h2>Concept</h2>\n\n<p>Instead of talking about <code>Stream</code>s, which is the type operated on or returned by stream-related methods, let's talk about <em>stream operations</em> and <em>stream pipelines</em>. The method calls <code>lines</code>, <code>skip</code> and <code>parallel</code> are stream operations which build a stream pipeline[1] and - as others have noted - that pipeline is processed as a whole when the terminal operation <code>forEach</code> is called[2].</p>\n\n<p>A pipeline could be thought of as a series of operations which, one after another, are executed on the whole stream (e.g. filter all elements, map remaining elements to numbers, sum all numbers). <strong>But this is misleading!</strong> A better metaphor is that the terminal operation pulls single elements through each operation[3] (e.g. get the next unfiltered element, map it, add it to sum, request next element). Some intermediate operations may need to traverse several (e.g. <code>skip</code>) or maybe even all (e.g. <code>sort</code>) elements before they can return the requested next element and this is one of the sources for state in an operation.</p>\n\n<p>Each operation signals its characteristics with these <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/StreamOpFlag.java\" rel=\"nofollow\"><code>StreamOpFlag</code></a>s:</p>\n\n<ul>\n<li><code>DISTINCT</code></li>\n<li><code>SORTED</code></li>\n<li><code>ORDERED</code></li>\n<li><code>SIZED</code></li>\n<li><code>SHORT_CIRCUIT</code></li>\n</ul>\n\n<p>They are combined across the stream source, the intermediate operations and the terminal operation and make up the characteristics of the pipeline (as a whole), which are then used for optimizations[4]. Similarly, whether a pipeline is executed in parallel or not is a property of the entire pipeline[5].</p>\n\n<p>So whenever you are making assumptions regarding these characteristics, you have to look carefully at <strong>all operations building the pipeline, regardless of the order in which they are applied</strong>, and what guarantees they make. When doing so keep in mind how the terminal operation pulls each individual element through the pipeline.</p>\n\n<h2>Example</h2>\n\n<p>Let's look at this special case:</p>\n\n<pre><code>BufferedReader fooBarReader = new BufferedReader(new StringReader(\"Foo\\nBar\"));\nfooBarReader.lines()\n        .skip(1L)\n        .parallel()\n        .forEach(System.out::println);\n</code></pre>\n\n<h3>High Level</h3>\n\n<p>Regardless of whether your stream source is ordered or not (it is), by calling <code>forEach</code> (instead of <code>forEachOrdered</code>) you declare that <strong>order doesn't matter to you</strong>[6], which effectively reduces <code>skip</code> from \"skip the first <em>n</em> elements\" to \"skip any <em>n</em> elements\"[7] (because without order the former becomes meaningless).</p>\n\n<p>So you give the pipeline the right to ignore order if that promises a speedup. For parallel execution it apparently thinks so, which is why you get the observed output. Hence <strong>what you observe is the intended behavior</strong> and no bug.</p>\n\n<p>Note that this <strong>does not conflict</strong> with <code>skip</code> being stateful! As described above, being stateful does not imply that it somehow caches the whole stream (minus the skipped elements) and everything that follows is executed on these elements. It just means that the operation has some state - namely the number of skipped elements (well, it's not actually <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/StreamSpliterators.java#609\" rel=\"nofollow\">that easy</a> but with my limited understanding of what's going on, I'd say it's a fair simplification).</p>\n\n<h3>Low Level</h3>\n\n<p>Let's look at it in more detail:</p>\n\n<ol>\n<li><code>BufferedReader.lines</code> creates the <code>Stream</code>, lets call it <code>_lines</code>:\n\n<ul>\n<li><a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/io/BufferedReader.java#590\" rel=\"nofollow\">creates an ordered <code>Spliterator</code></a></li>\n<li>hands it to <code>StreamSupport.stream</code>, which creates a <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/ReferencePipeline.java#ReferencePipeline.Head\" rel=\"nofollow\"><code>ReferencePipeline.Head</code></a> and transforms the spliterator flag to a stream op flag</li>\n</ul></li>\n<li><code>.skip</code> creates a new <code>Stream</code>, let's call it <code>_skip</code>:\n\n<ul>\n<li>calls <code>ReferencePipeline.skip</code></li>\n<li>which constructs a \"slice\" operation (generalization of skip &amp; limit) with <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/SliceOps.java#SliceOps.makeRef%28java.util.stream.AbstractPipeline%2Clong%2Clong%29\" rel=\"nofollow\"><code>SliceOps.makeRef</code></a></li>\n<li>this creates an anonymous instance of <code>ReferencePipeline.StatefulOp</code>, which references <code>_lines</code> as its source</li>\n</ul></li>\n<li><code>.parallel</code> sets the parallel flag for the entire pipeline as described above</li>\n<li><code>.forEach</code> actually starts the execution</li>\n</ol>\n\n<p>So let's see how the pipeline is executed:</p>\n\n<ol>\n<li>Calling <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/ReferencePipeline.java#ReferencePipeline.forEach%28java.util.function.Consumer%29\" rel=\"nofollow\"><code>_skip.forEach</code> </a> creates a <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/ForEachOps.java#ForEachOps.ForEachOp\" rel=\"nofollow\"><code>ForEachOp</code></a> (let's call it <code>_forEach</code>) and hands it to <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/AbstractPipeline.java#AbstractPipeline.evaluate%28java.util.stream.TerminalOp%29\" rel=\"nofollow\"><code>_skip.evaluate</code></a>, which does two things:\n\n<ol>\n<li>calls <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/AbstractPipeline.java#AbstractPipeline.sourceSpliterator%28int%29\" rel=\"nofollow\"><code>sourceSpliterator</code></a> to create a spliterator around the source for this pipeline stage:\n\n<ul>\n<li>calls <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/SliceOps.java#133\" rel=\"nofollow\"><code>opEvaluateParallelLazy</code></a> on itself (as it turns out)</li>\n<li>this determines that the stream is unordered and <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/SliceOps.java#129\" rel=\"nofollow\">creates an <code>UnorderedSliceSpliterator</code></a> (let's call it <code>_sliceSpliterator</code>) with <code>skip = 1</code> and no limit.</li>\n</ul></li>\n<li>calls <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/ForEachOps.java#ForEachOps.ForEachOp.evaluateParallel%28java.util.stream.PipelineHelper%2Cjava.util.Spliterator%29\" rel=\"nofollow\"><code>_forEach.evaluateParallel</code></a> which creates a <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/ForEachOps.java#ForEachOps.ForEachTask\" rel=\"nofollow\"><code>ForEachTask</code></a> (because it is unordered; let's call it <code>_forEachTask</code>) and invokes it</li>\n</ol></li>\n<li>In <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/ForEachOps.java#ForEachOps.ForEachTask.compute%28%29\" rel=\"nofollow\"><code>_forEachTask.compute</code></a> the task splits off the first 1024 lines, creates a new task for it (let's call it <code>_forEachTask2</code>), realizes there are no lines left and finishes.</li>\n<li>Inside the fork join pool, <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/ForEachOps.java#ForEachOps.ForEachTask.compute%28%29\" rel=\"nofollow\"><code>_forEachTask2.compute</code></a> gets called, vainly tries to split again and <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/ForEachOps.java#290\" rel=\"nofollow\">finally starts copying its elements into the sink</a> (a stream-aware wrapper around the <code>System.out.println</code>) by calling <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/AbstractPipeline.java#AbstractPipeline.copyInto%28java.util.stream.Sink%2Cjava.util.Spliterator%29\" rel=\"nofollow\"><code>_skip.copyInto</code></a>.</li>\n<li>This essentially delegates the task to the the specified spliterator. <strong>This is <code>_sliceSpliterator</code> which was created above!</strong> So <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/StreamSpliterators.java#1022\" rel=\"nofollow\"><code>_sliceSpliterator.forEachRemaining</code></a> is responsible for handing the non-skipped elements to the println-sink:\n\n<ol>\n<li>it gets a chunk (in this case all) of the lines into a buffer and counts them</li>\n<li>it tries to request as many permits (I assume due to parallelization) via <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/StreamSpliterators.java#StreamSpliterators.UnorderedSliceSpliterator.acquirePermits%28long%29\" rel=\"nofollow\"><code>acquirePermits</code></a></li>\n<li>with two elements in the source and one to be skipped, there is only one permit which it acquires (in general let's say <em>n</em>)</li>\n<li>it lets the buffer put the first <em>n</em> elements (so in this case only the first) into the sink</li>\n</ol></li>\n</ol>\n\n<p><strong>So <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/StreamSpliterators.java#1038\" rel=\"nofollow\"><code>UnorderedSliceSpliterator.OfRef.forEachRemaining</code></a> is where the order is finally and truly ignored.</strong> I did not compare this to the ordered variant but this are my assumption why it is done this way:</p>\n\n<ul>\n<li>under parallelization shoveling the spliterator's elements into the buffer may interleave with other tasks doing the same</li>\n<li>this will make tracking their order extremely hard</li>\n<li>doing that or preventing interleaving degrades performance and is pointless if order is irrelevant</li>\n<li>if the order is lost, there is little else to do but to process the first <em>n</em> permitted elements</li>\n</ul>\n\n<p>Any questions? ;) Sorry for going on for so long. Maybe I should leave out the details and make a blog post of it....</p>\n\n<h2>Sources</h2>\n\n<p>[1] <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#StreamOps\" rel=\"nofollow\"><code>java.util.stream</code> - Stream operations and pipelines</a>:</p>\n\n<blockquote>\n  <p>Stream operations are divided into <em>intermediate</em> and <em>terminal</em> operations, and are combined to form <em>stream pipelines</em>.</p>\n</blockquote>\n\n<p>[2] <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#StreamOps\" rel=\"nofollow\"><code>java.util.stream</code> - Stream operations and pipelines</a>:</p>\n\n<blockquote>\n  <p>Traversal of the pipeline source does not begin until the terminal operation of the pipeline is executed.</p>\n</blockquote>\n\n<p>[3] This metaphor represents my understanding of streams. The main source, beside the code, is this quote from <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#StreamOps\" rel=\"nofollow\"><code>java.util.stream</code> - Stream operations and pipelines</a> (highlighting mine):</p>\n\n<blockquote>\n  <p>Processing streams lazily allows for significant efficiencies; in a pipeline such as the filter-map-sum example above, filtering, mapping, and summing can be fused into a single pass on the data, with minimal intermediate state. Laziness also allows avoiding examining all the data when it is not necessary; for operations such as \"find the first string longer than 1000 characters\", it is only necessary to examine just enough strings to find one that has the desired characteristics without examining all of the strings available from the source.</p>\n</blockquote>\n\n<p>[4] <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/StreamOpFlag.java\" rel=\"nofollow\"><code>java.util.stream.StreamOpFlag</code></a>:</p>\n\n<blockquote>\n  <p>At each stage of the pipeline, a combined stream and operation flags can be calculated [... <em>jadda, jadda, jadda about how flags are combined across source, intermediate and terminal operations</em> ...] to produce the flags output from the pipeline. Those flags can then be used to apply optimizations.</p>\n</blockquote>\n\n<p>In code you can see this in <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/AbstractPipeline.java#AbstractPipeline.0combinedFlags\" rel=\"nofollow\"><code>AbstractPipeline.combinedFlags</code></a>, which is set during construction (and on a few other occurrences) by combining the flag of the previous and the new operation.</p>\n\n<p>[5] <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#StreamOps\" rel=\"nofollow\"><code>java.util.stream</code> - Parallelism</a> (to which I can not directly link - scroll down a little):</p>\n\n<blockquote>\n  <p>When the terminal operation is initiated, the stream pipeline is executed sequentially or in parallel depending on the orientation of the stream on which it is invoked.</p>\n</blockquote>\n\n<p>In code you can see this is in <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/AbstractPipeline.java#AbstractPipeline.sequential%28%29\" rel=\"nofollow\"><code>AbstractPipeline.sequential</code>, <code>parallel</code></a>, and <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/stream/AbstractPipeline.java#AbstractPipeline.isParallel%28%29\" rel=\"nofollow\"><code>isParallel</code></a>, which set/check a boolean flag on the stream source, making it irrelevant when the setters are called while constructing a stream.</p>\n\n<p>[6] <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#forEach-java.util.function.Consumer-\" rel=\"nofollow\">java.util.stream.Stream.forEach</a>:</p>\n\n<blockquote>\n  <p>Performs an action for each element of this stream. [...] The behavior of this operation is explicitly nondeterministic.</p>\n</blockquote>\n\n<p>Contrast this with <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#forEachOrdered-java.util.function.Consumer-\" rel=\"nofollow\">java.util.stream.Stream.forEachOrdered</a>:</p>\n\n<blockquote>\n  <p>Performs an action for each element of this stream, in the encounter order of the stream if the stream has a defined encounter order. </p>\n</blockquote>\n\n<p>[7] This is also not clearly documented but my interpretation of this comment on <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#skip-long-\" rel=\"nofollow\"><code>Stream.skip</code></a> (heavily shortened by me):</p>\n\n<blockquote>\n  <p>[...] skip() [...] can be quite expensive on ordered parallel pipelines [...] since skip(n) is constrained to skip not just any n elements, but the first n elements in the encounter order. [...] [R]emoving the ordering constraint [...] may result in significant speedups of skip() in parallel pipelines</p>\n</blockquote>\n", "title": "Is this a bug in Files.lines(), or am I misunderstanding something about parallel streams?", "tags": ["java", "parallel-processing", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/28259636/is-this-a-bug-in-files-lines-or-am-i-misunderstanding-something-about-paralle/28418928#28418928", "question_id": 28259636, "answer_id": 28418928}, {"body": "<p>I have an idea how to work-around this problem, which I can't see in the previous discussions. You can recreate the stream splitting the pipeline into two pipelines while keeping the whole thing lazy.</p>\n\n<pre><code>public static &lt;T&gt; Stream&lt;T&gt; recreate(Stream&lt;T&gt; stream) {\n    return StreamSupport.stream(stream.spliterator(), stream.isParallel())\n                        .onClose(stream::close);\n}\n\npublic static void main(String[] args) {\n    recreate(new BufferedReader(new StringReader(\"JUNK\\n1\\n2\\n3\\n4\\n5\")).lines()\n        .skip(1).parallel()).forEach(System.out::println);\n}\n</code></pre>\n\n<p>When you recreate the stream from initial stream spliterator, then you effectively create a new pipeline. In most of the cases <code>recreate</code> will work as <code>no-op</code>, but the thing is that first and second pipelines don't share the <code>parallel</code> and <code>unordered</code> states. So even if you are using the <code>forEach</code> (or any other unordered terminal operation), only the second stream becomes unordered.</p>\n\n<p>Internally pretty similar thing is concatenating your stream with an empty stream:</p>\n\n<pre><code>Stream.concat(Stream.empty(), \n    new BufferedReader(new StringReader(\"JUNK\\n1\\n2\\n3\\n4\\n5\"))\n          .lines().skip(1).parallel()).forEach(System.out::println);\n</code></pre>\n\n<p>Though it has a little more overhead.</p>\n", "title": "Is this a bug in Files.lines(), or am I misunderstanding something about parallel streams?", "tags": ["java", "parallel-processing", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/28259636/is-this-a-bug-in-files-lines-or-am-i-misunderstanding-something-about-paralle/30553973#30553973", "question_id": 28259636, "answer_id": 30553973}, {"body": "<p>Since the current state of the issue is quite the opposite of the earlier statements made here, it should be noted, that there is now an <a href=\"http://stackoverflow.com/a/30916033/2711488\">explicit statement by Brian Goetz</a> about the back-propagation of the unordered characteristic past a <code>skip</code> operation is considered a bug. <a href=\"http://stackoverflow.com/questions/30843279/stream-skip-behavior-with-unordered-terminal-operation?lq=1#comment49971789_30916033\">It\u2019s also stated</a> that it is now considered to have no back-propagation of the ordered-ness of a terminal operation at all.</p>\n\n<p>There is also a <a href=\"https://bugs.openjdk.java.net/browse/JDK-8129120\">related bug report, JDK-8129120</a> whose status is \u201cfixed in Java\u00a09\u201d and it\u2019s <a href=\"https://bugs.openjdk.java.net/browse/JDK-8129945\">backported to Java\u00a08, update 60</a></p>\n\n<p>I did some tests with <code>jdk1.8.0_60</code> and it seems that the implementation now indeed exhibits the more intuitive behavior.</p>\n", "title": "Is this a bug in Files.lines(), or am I misunderstanding something about parallel streams?", "tags": ["java", "parallel-processing", "java-8", "java-stream"], "link": "http://stackoverflow.com/questions/28259636/is-this-a-bug-in-files-lines-or-am-i-misunderstanding-something-about-paralle/32611920#32611920", "question_id": 28259636, "answer_id": 32611920}], "creation_date": 1422766561, "score": 34, "link": "http://stackoverflow.com/questions/28259636/is-this-a-bug-in-files-lines-or-am-i-misunderstanding-something-about-paralle", "question_id": 28259636}, {"body": "<p>I have been trying to use both the Python implementation (opencv 2.4.11) and the Java implementation (opencv 2.4.10) of OpenCV's MSER algorithm. Interestingly, I've noticed that MSER's detect returns different types of output in Python vs Java. In Python, detect returns a list of lists of points, where each list of points represents a blob detected. In Java, a <code>Mat</code> is returned, where each row is a single point with an associated diameter representing a blob detected. I would like to reproduce the Python behavior in Java, where blobs are defined by a set of points, not one point. Anyone know what's going on?</p>\n\n<p>Python:  </p>\n\n<pre><code>frame = cv2.imread('test.jpg')\nmser = cv2.MSER(**dict((k, kw[k]) for k in MSER_KEYS))  \ngray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)  \nregions = mser.detect(gray, None)\nprint(\"REGIONS ARE: \" + str(regions))\n\nwhere the dict given to cv2.MSER is\n{'_delta':7, '_min_area': 2000, '_max_area': 20000, '_max_variation': .25, '_min_diversity': .2, '_max_evolution': 200, '_area_threshold': 1.01, '_min_margin': .003, '_edge_blur_size': 5}\n</code></pre>\n\n<p>Python output:  </p>\n\n<pre><code>REGIONS ARE: [array([[197,  58],\n   [197,  59],\n   [197,  60],\n   ..., \n   [143,  75],\n   [167,  86],\n   [172,  98]], dtype=int32), array([[114,   2],\n   [114,   1],\n   [114,   0],\n   ..., \n   [144,  56],\n   [ 84,  55],\n   [ 83,  55]], dtype=int32)]\n</code></pre>\n\n<p>Java:</p>\n\n<pre><code>Mat mat = new Mat(bitmap.getWidth(), bitmap.getHeight(), CvType.CV_16S, new Scalar(4));\nMat gray = new Mat(bitmap.getWidth(), bitmap.getHeight(), CvType.CV_16S, new Scalar(4));\nImgproc.cvtColor(mat, gray, Imgproc.COLOR_RGB2GRAY, 4);\n\nFeatureDetector fd = FeatureDetector.create(FeatureDetector.MSER);\nMatOfKeyPoint regions = new MatOfKeyPoint();\nfd.detect(gray, regions);\nSystem.out.println(\"REGIONS ARE: \" + regions);\n</code></pre>\n\n<p>Java output:</p>\n\n<pre><code>REGIONS ARE: Mat [ 10*1*CV_32FC(7), isCont=true, isSubmat=false, nativeObj=0x6702c688, dataAddr=0x59add760 ]\n\nwhere each row of the Mat looks like\nKeyPoint [pt={365.3387451171875, 363.75640869140625}, size=10.680443, angle=-1.0, response=0.0, octave=0, class_id=-1]\n</code></pre>\n\n<p><strong>EDIT:</strong></p>\n\n<p>A mod on the answers.opencv.org forum provided a bit more information (<a href=\"http://answers.opencv.org/question/63733/why-does-python-implementation-and-java-implementation-of-mser-create-different-output/\">http://answers.opencv.org/question/63733/why-does-python-implementation-and-java-implementation-of-mser-create-different-output/</a>):</p>\n\n<blockquote>\n  <p>unfortunately, it looks, like the java version is limited to the features2d.FeatureDetector interface, which lets you only access KeyPoints (not the actual Regions)</p>\n  \n  <p>berak (Jun 10 '15)</p>\n  \n  <p>@berak: So if I understand correctly from the docs, both the java version and the python/C++ version have the features2d.FeatureDetector interface, but the python/C++ version has the additional MSER class to find regions, not just key points?\n  In that case, what do people do? Is it possible to add the C++ MSER class to the OpenCV manager, edit something like the javaFeatureDetector here here, and create a java wrapper for it? Thanks for any advice.</p>\n  \n  <p>sloreti (Jun 11 '15)</p>\n  \n  <p>so yes, you can get the rectangles in c++ or python, but not from java. that's a flaw in the design. the javaFeatureDetector is still in use, but to get the rectangles, you'd have to write your own jni interface, i guess. (and distribute your own .so along with your apk)</p>\n  \n  <p>berak (Jun 12 '15)</p>\n</blockquote>\n", "tags": ["java", "python", "opencv"], "title": "Why does Python implementation and Java implementation of OpenCV&#39;s MSER create different output?", "answers": [{"body": "<p>You are using two different interfaces to the MSER implementation. </p>\n\n<p>Python <code>cv2.MSER</code> gives you a wrapped <code>cv::MSER</code>, which exposes its <code>operator()</code> to Python as <code>detect</code>:</p>\n\n<pre><code>//! the operator that extracts the MSERs from the image or the specific part of it\nCV_WRAP_AS(detect) void operator()( const Mat&amp; image, CV_OUT vector&lt;vector&lt;Point&gt; &gt;&amp; msers,\n                                    const Mat&amp; mask=Mat() ) const;\n</code></pre>\n\n<p>This gives you the nice list of contours interface you are looking for.</p>\n\n<p>In contrast Java uses the <code>javaFeatureDetector</code> wrapper which calls <code>FeatureDetector::detect</code> which is backed by <code>MSER::detectImpl</code> and uses the standard FeatureDetector interface: a list of KeyPoints.</p>\n\n<p>If you want to access the <code>operator()</code> in Java (in OpenCV 2.4) you will have to wrap it up in JNI.</p>\n", "title": "Why does Python implementation and Java implementation of OpenCV&#39;s MSER create different output?", "tags": ["java", "python", "opencv"], "link": "http://stackoverflow.com/questions/30489149/why-does-python-implementation-and-java-implementation-of-opencvs-mser-create-d/36300849#36300849", "question_id": 30489149, "answer_id": 36300849}], "creation_date": 1432747076, "score": 34, "link": "http://stackoverflow.com/questions/30489149/why-does-python-implementation-and-java-implementation-of-opencvs-mser-create-d", "question_id": 30489149}, {"body": "<p>I'm looking for all standard Java classes for which <code>compareTo()</code> can return <code>0</code> while <code>equals()</code> returns <code>false</code>:</p>\n\n<pre><code>Comparable comparable1 = ???;\nComparable comparable2 = ???;\n\nassert comparable1.compareTo(comparable2) == 0;\nassert !comparable1.equals(comparable2);\n</code></pre>\n\n<p>I know just one: <code>new BigDecimal(\"1.0\")</code> is equal to <code>new BigDecimal(\"1\")</code> using <code>compareTo()</code> but not equal using <code>equals()</code>. Are there any others?</p>\n\n<p>I'm interested in all such classes, but only from public Java API. I need it to provide thorough documentation for AssertJ's <a href=\"https://github.com/joel-costigliola/assertj-core/blob/master/src/main/java/org/assertj/core/api/UnevenComparableAssert.java\" rel=\"nofollow\"><code>UnevenComparableAssert</code></a> interface.</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>Thanks to @ErikVesteraas, I've managed to reproduce additional example:</p>\n\n<pre><code>Calendar calendar1 = new GregorianCalendar(0, 0, 0);\nCalendar calendar2 = new GregorianCalendar(0, 0, 0);\ncalendar2.setLenient(false);\n\nComparable comparable1 = calendar1;\nComparable comparable2 = calendar2;\n\nassert comparable1.compareTo(comparable2) == 0; // compareTo compares along the timeline\nassert !comparable1.equals(comparable2); // equals compares state, leniency is different\n</code></pre>\n", "tags": ["java"], "title": "Are there any standard Java classes with inconsistent compareTo() and equals()?", "answers": [{"body": "<p>Looking for \"inconsistent with equals\" in the JDK classes, I also found <code>java.time.zone.ZoneOffsetTransition</code></p>\n", "title": "Are there any standard Java classes with inconsistent compareTo() and equals()?", "tags": ["java"], "link": "http://stackoverflow.com/questions/30152202/are-there-any-standard-java-classes-with-inconsistent-compareto-and-equals/30152292#30152292", "question_id": 30152202, "answer_id": 30152292}, {"body": "<p>There actually seems to be a few examples, but some are not well documented in the code or JavaDoc. <a href=\"http://blog.joda.org/2012/11/pitfalls-of-consistent-with-equals.html\">This blog post</a> by Stephen Colebourne gives the details, but in summary the following classes are inconsistent with equals:</p>\n\n<ul>\n<li><a href=\"https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html\">java.math.BigDecimal</a></li>\n<li><a href=\"http://docs.oracle.com/javase/8/docs/api/java/io/ObjectStreamField.html\">java.io.ObjectStreamField</a></li>\n<li><a href=\"https://docs.oracle.com/javase/8/docs/api/javax/management/ObjectName.html\">javax.management.ObjectName</a> (have not been able to reproduce an example though)</li>\n<li><a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html\">java.util.Calendar</a></li>\n<li><a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/GregorianCalendar.html\">java.util.GregorianCalendar</a></li>\n</ul>\n\n<p>For example:</p>\n\n<pre><code>ObjectStreamField a = new ObjectStreamField(\"foo\", String.class);\nObjectStreamField b = new ObjectStreamField(\"foo\", String.class);\na.equals(b); // false, checks object equality\na.compareTo(b); // 0\n</code></pre>\n\n<p>As noted by Olivier, Java 8 also adds <a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/zone/ZoneOffsetTransition.html\">java.time.zone.ZoneOffsetTransition</a></p>\n\n<p>Notably <a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetTime.html\">java.time.OffsetTime</a> has avoided inconsistency by adding extra methods <code>isAfter</code>, <code>isBefore</code> and <code>isEqual</code> for doing time-line comparison/equality-checking.</p>\n", "title": "Are there any standard Java classes with inconsistent compareTo() and equals()?", "tags": ["java"], "link": "http://stackoverflow.com/questions/30152202/are-there-any-standard-java-classes-with-inconsistent-compareto-and-equals/30152667#30152667", "question_id": 30152202, "answer_id": 30152667}], "creation_date": 1431265823, "score": 33, "link": "http://stackoverflow.com/questions/30152202/are-there-any-standard-java-classes-with-inconsistent-compareto-and-equals", "question_id": 30152202}, {"body": "<p>If I create my own thread (i.e. not a threadpool) and somewhere I call <code>sleep</code> or any other interruptible method, is it ok to ignore the InterruptedException <strong>if I know nobody else in the code is doing an interrupt on the thread</strong>. </p>\n\n<p>In other words, if the thread is supposed to live as long as the JVM, meaning the thread is not interruptible, is it safe to assume that InterruptedException will <em>never</em> be called and therefore the exception can be swallowed?</p>\n", "tags": ["java", "multithreading", "exception-handling", "thread-safety", "interrupted-exception"], "title": "Is it OK to ignore InterruptedException if nobody calls interrupt()?", "answers": [{"body": "<p>If your Projekt grows and gets more complex, it's getting harder to say that definitely no one would call the interrupt method. If someone would call this method some day and an InterruptedException occurs it's getting really hard to debug this if you're not at least logging it somewhere.</p>\n", "title": "Is it OK to ignore InterruptedException if nobody calls interrupt()?", "tags": ["java", "multithreading", "exception-handling", "thread-safety", "interrupted-exception"], "link": "http://stackoverflow.com/questions/28544867/is-it-ok-to-ignore-interruptedexception-if-nobody-calls-interrupt/28544983#28544983", "question_id": 28544867, "answer_id": 28544983}, {"body": "<p>It should not be ignored. It should either be thrown back to the caller or you should reassert the thread's interrupted status which is cleared when the exception is thrown:</p>\n\n<pre><code>catch (InterruptedException e) { \n     // Restore the interrupted status\n     Thread.currentThread().interrupt();\n }\n</code></pre>\n\n<p>unless you prompty exit the thread after the catch.</p>\n\n<p><a href=\"http://www.ibm.com/developerworks/java/library/j-jtp05236/index.html\" rel=\"nofollow\">Here</a>'s an article about dealing with <code>InterruptedException</code>s.</p>\n", "title": "Is it OK to ignore InterruptedException if nobody calls interrupt()?", "tags": ["java", "multithreading", "exception-handling", "thread-safety", "interrupted-exception"], "link": "http://stackoverflow.com/questions/28544867/is-it-ok-to-ignore-interruptedexception-if-nobody-calls-interrupt/28544993#28544993", "question_id": 28544867, "answer_id": 28544993}, {"body": "<p><strong>Ignoring a checked exception is never considered to be safe.</strong><br>\nIt may be ok for you at the moment, but if another programmer extends your code, he will expect the standard behaviour: the thread reacting to an interrupt call.<br>\nAlso an empty catch block is dangerous in this case, since the JVM removes the interrupted flag and it should definitely be set again with</p>\n\n<pre><code>Thread.currentThread().interrupt();\n</code></pre>\n\n<p>in the catch block. In my opinion, this is the minimum catch implementation for <code>InterruptedException</code>s. Checking for the <code>isInterrupted</code> flag in a loop doesn't hurt much, either.<br>\nIt is little overhead compared to your future programmer self's hassle searching a day or two for unexpected thread behaviour as you project may have grown a bit.  </p>\n\n<p>If you feel that your code's readability suffers from those catch implementations, you may implement your own <code>safeSleep</code> utility method, which takes care of the <code>Exception</code>s and sets the flag properly.  </p>\n\n<p>On the other hand, <code>InterruptedException</code> is not thrown by the JVM itself in case of a hardware failure, <em>it is a user indicated <code>Exception</code> only</em>. <s>So, if you do not propagate your <code>Thread</code>s reference, there won't be any other <code>Thread</code>s that are able to call <code>Thread.interrupt()</code> on it.</s> That's it <strong>technically</strong>. <em>But you shouldn't underestimate the human factor and your programs evolution.</em><br>\n<strong>Edit:</strong> As <em>ruakh</em> pointed out, there actually is a way to get a <code>Thread</code>s reference and thus to schedule an <code>Thread.interrupt()</code> call. That way the developer in heat may not even have to look at the class, that implements your uninterruptible <code>Thread</code>. In my opinion that's even another reason, to implement proper exception handling.<br>\n<em>Another thing</em>: If you're not throwing an <code>Exception</code>, logging such an event on a level beyond <code>INFO</code> may be a good choice.</p>\n", "title": "Is it OK to ignore InterruptedException if nobody calls interrupt()?", "tags": ["java", "multithreading", "exception-handling", "thread-safety", "interrupted-exception"], "link": "http://stackoverflow.com/questions/28544867/is-it-ok-to-ignore-interruptedexception-if-nobody-calls-interrupt/28545020#28545020", "question_id": 28544867, "answer_id": 28545020}, {"body": "<p>Instead of swallowing it, if you're so sure it will never happen, you can crash instead of ignoring it. For example, throw an <code>Error</code> (or a <code>RuntimeException</code>):</p>\n\n<pre><code>try {\n    Thread.sleep(1000);\n} catch (InterruptedException e) {\n    throw new Error(e);\n}\n</code></pre>\n\n<p>From <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Error.html\">the Javadocs for Error</a>:</p>\n\n<blockquote>\n  <p>An Error is a subclass of Throwable that indicates serious problems that a reasonable application should not try to catch. Most such errors are abnormal conditions.</p>\n</blockquote>\n\n<p>If you think it's worth assuming something will never happen, then if it does happen, that's an \"abnormal condition\" that, who knows, might just be a \"serious problem\".</p>\n\n<p>Another way to look at this is, if someone in the future <em>does</em> interrupt your method, is there any chance that they will want it to continue running as if nothing had happened? I would guess no.</p>\n", "title": "Is it OK to ignore InterruptedException if nobody calls interrupt()?", "tags": ["java", "multithreading", "exception-handling", "thread-safety", "interrupted-exception"], "link": "http://stackoverflow.com/questions/28544867/is-it-ok-to-ignore-interruptedexception-if-nobody-calls-interrupt/28545173#28545173", "question_id": 28544867, "answer_id": 28545173}, {"body": "<p>You should never swallow an exception if you think that it should never occur. It\u2019s ok to decide not to add code handling a condition which never occurs but it shouldn\u2019t happen <em>silently</em>.</p>\n\n<p>The minimum you should do is:</p>\n\n<pre><code>catch(InterruptedException ex) {\n  throw new AssertionError(ex);\n}\n</code></pre>\n\n<p>This ensures that whenever your assertion that this will never occur is wrong, you will notice. This pattern also applies to other unexpected exceptions, e.g. <code>IOException</code> when you know that the target <code>OutputStream</code> is a <code>ByteArrayOutputStream</code> or the <code>Appendable</code> of a <code>Formatter</code> ought to be a <code>StringBuilder</code>, etc.</p>\n\n<hr>\n\n<p>By the way, there is an alternative to <code>Thread.sleep</code> not requiring to deal with <code>InterruptedException</code> at all:</p>\n\n<pre><code>LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(timeInMillis));\n</code></pre>\n\n<p>This method will simply return earlier when the thread has been interrupted and retain the interrupted state of the <code>Thread</code> so it provides already a correct handling for the case that your code is used by someone else who <em>does</em> use interruption (assuming that the caller of your code checks the interrupted state then).</p>\n", "title": "Is it OK to ignore InterruptedException if nobody calls interrupt()?", "tags": ["java", "multithreading", "exception-handling", "thread-safety", "interrupted-exception"], "link": "http://stackoverflow.com/questions/28544867/is-it-ok-to-ignore-interruptedexception-if-nobody-calls-interrupt/28545238#28545238", "question_id": 28544867, "answer_id": 28545238}, {"body": "<p>I think, ignoring InterruptedException is safe or not, depends upon what you are doing in that thread. If there is any scenario when an unwanted interrupt to your thread can leave System or any resource in unwanted state (dirty, locked, not released which can cause leaking resource) then its your responsibility to handle the InterruptedException and you should not ignore it. It's up to you whether you want your to make your thread Interruptible or not.</p>\n\n<p>In other words Interrupt mechanism is mainly used for implementing the cancellation policies and task clean up. Is you don't have anything to clean in task or you dont have any specific task cancellation policies, ignoring IntrruptedException may not sound politically correct but is OK.</p>\n", "title": "Is it OK to ignore InterruptedException if nobody calls interrupt()?", "tags": ["java", "multithreading", "exception-handling", "thread-safety", "interrupted-exception"], "link": "http://stackoverflow.com/questions/28544867/is-it-ok-to-ignore-interruptedexception-if-nobody-calls-interrupt/28545363#28545363", "question_id": 28544867, "answer_id": 28545363}, {"body": "<blockquote>\n  <p>if the thread is supposed to live as long as the JVM, meaning the thread is not interruptible, is it safe to assume that <code>InterruptedException</code> will <em>never</em> be thrown and therefore the exception can be swallowed?</p>\n</blockquote>\n\n<p>I understand your pain, the proliferation of boilerplate try-catch blocks with no business value hurts the code.</p>\n\n<p>If the code where you intend to swallow the exception is entirely under your control, and if it is just <em>client code</em> (it will never be reused in context other than your own), then it is safe to swallow the exception. Note that there are a lot of <em>if</em>s there.</p>\n\n<p>If you happen to work with Java 8, you have another option, described <a href=\"http://stackoverflow.com/a/19757456/1103872\">here</a>: wrap your code inside an <code>uncheckCall(() -&gt; { ... })</code> block. This lets the code block throw the <code>InterruptedException</code> without declaring it. As explained in the linked answer, this should be handled with extreme care, but it has the potential of making your code quite clean.</p>\n", "title": "Is it OK to ignore InterruptedException if nobody calls interrupt()?", "tags": ["java", "multithreading", "exception-handling", "thread-safety", "interrupted-exception"], "link": "http://stackoverflow.com/questions/28544867/is-it-ok-to-ignore-interruptedexception-if-nobody-calls-interrupt/28545366#28545366", "question_id": 28544867, "answer_id": 28545366}, {"body": "<p>The book that I still consider the bible on these matters, Goetz et al. <em>Java Concurrency in Practice</em> says the following important bits in chapter 7 (Pretty much the same material is found in Goetz's <a href=\"http://www.ibm.com/developerworks/java/library/j-jtp05236/\">developerWorks article</a>, which has the advantage of being free, but the book is a bit more clear on some points.)</p>\n\n<blockquote>\n  <p>Interruption is a cooperative mechanism. One thread cannot force another to\n  stop what it is doing and do something else; when thread A interrupts thread B, A is merely requesting that B stop what it is doing when it gets to a convenient stopping point\u2014if it feels like it.</p>\n  \n  <p>[...]</p>\n  \n  <p>Only code that implements a thread\u2019s interruption policy may swallow an\n  interruption request. General-purpose task and library code should never\n  swallow interruption requests.</p>\n</blockquote>\n\n<p>So, yes, you can \"swallow\" <code>InterruptedException</code> under the circumstances you outlined. </p>\n\n<p>Also an important point in the book:</p>\n\n<blockquote>\n  <p>Because each thread has its own interruption policy, you should not interrupt\n  a thread unless you know what interruption means to that thread.</p>\n</blockquote>\n\n<p>So you can choose your own policy like \"crashing\" with a <code>RuntimeException</code>, <code>AssertionError</code>, just logging it as a warning, or ignoring interruption altogether as long as you document this issue for whoever else might need to know. What is best depends on what your thread is really doing and you haven't provided any details on that. For example, if it's running on a rocket [say doing attitude control], you do not want to crash the JVM/rocket just because a fellow programmer [who might not even work for the same company as you, e.g. he wrote some library you call] forgot about a certain contract somewhere in his code and dumps a safely ignorable exception on yours: <a href=\"https://web.archive.org/web/20000815230639/www.esrin.esa.it/htdocs/tidc/Press/Press96/ariane5rep.html\">\"The exception which occurred was not due to random failure but a design error.\"</a></p>\n", "title": "Is it OK to ignore InterruptedException if nobody calls interrupt()?", "tags": ["java", "multithreading", "exception-handling", "thread-safety", "interrupted-exception"], "link": "http://stackoverflow.com/questions/28544867/is-it-ok-to-ignore-interruptedexception-if-nobody-calls-interrupt/28553400#28553400", "question_id": 28544867, "answer_id": 28553400}], "creation_date": 1424100709, "score": 32, "link": "http://stackoverflow.com/questions/28544867/is-it-ok-to-ignore-interruptedexception-if-nobody-calls-interrupt", "question_id": 28544867}, {"body": "<pre><code>public class Main {\n    public static void main(String[] args) {\n\n        ArrayList&lt;Integer&gt; ar = new ArrayList&lt;Integer&gt;();\n        List l = new ArrayList();\n        l.add(\"a\");\n        l.add(\"b\");\n        ar.addAll(l);\n        System.out.println(ar);\n    }\n}\n</code></pre>\n\n<p>Output: <code>[a,b]</code></p>\n\n<p>You can't directly add <code>String</code> to <code>ArrayList&lt;Integer&gt; ar</code>, but by using <code>addAll()</code> it is possible.</p>\n\n<p>How can we add <code>String</code> to <code>ArrayList</code> whose type has already been specified as <code>Integer</code>? Can anyone highlight clear implementation details and the reason behind this?</p>\n", "tags": ["java", "generics", "arraylist", "collections", "raw-types"], "title": "ArrayList&lt;Integer&gt; takes String", "answers": [{"body": "<p>You are using a raw type. If you use <code>List&lt;String&gt; l = new ArrayList&lt;&gt;()</code> you will find that your code will not compile anymore. Raw types exist only for backwards compatibility and should not be used in new code.</p>\n", "title": "ArrayList&lt;Integer&gt; takes String", "tags": ["java", "generics", "arraylist", "collections", "raw-types"], "link": "http://stackoverflow.com/questions/29233225/arraylistinteger-takes-string/29233443#29233443", "question_id": 29233225, "answer_id": 29233443}, {"body": "<blockquote>\n  <p>But how can we add strings to arraylist whose type has already been specified as Integer?</p>\n</blockquote>\n\n<p>Because of the way Java generics was designed for backwards compatibility, with type erasure and raw types, basically.</p>\n\n<p>At execution time, there's no such things as an <code>ArrayList&lt;Integer&gt;</code> - there's just an <code>ArrayList</code>. You're using the raw type <code>List</code>, so the compiler isn't doing any of its normal checks, either at compile-time or adding execution-time casts.</p>\n\n<p>The compiler <em>does</em> warn you that you're doing unsafe things though:</p>\n\n<pre><code>Note: Main.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n</code></pre>\n\n<p>... and when you recompile with the relevant flag, it will warn about everything, including probably the most surprising line:</p>\n\n<pre><code>ar.addAll(l);\n</code></pre>\n\n<p><em>That's</em> the one that surprises me somewhat, in terms of compiling - I believe it's effectively trusting that the <code>List</code> is a <code>Collection&lt;? extends Integer&gt;</code> really, when we know it's not.</p>\n\n<p>If you avoid using raw types, this sort of mess goes away.</p>\n", "title": "ArrayList&lt;Integer&gt; takes String", "tags": ["java", "generics", "arraylist", "collections", "raw-types"], "link": "http://stackoverflow.com/questions/29233225/arraylistinteger-takes-string/29233449#29233449", "question_id": 29233225, "answer_id": 29233449}, {"body": "<p>When it was born, Java did not have generics (that is, classes that are parameterized by another class). When generics were added, to maintain compatibility, it was decided not to change the Java bytecode and class file format. So, generic classes are transformed by the compiler into non-generics ones. This means that an ArrayList is actually storing instances of class Object, and so it can also accept instances of String (that is a subclass of Object). The compiler cannot always detect misuses.</p>\n", "title": "ArrayList&lt;Integer&gt; takes String", "tags": ["java", "generics", "arraylist", "collections", "raw-types"], "link": "http://stackoverflow.com/questions/29233225/arraylistinteger-takes-string/29233456#29233456", "question_id": 29233225, "answer_id": 29233456}, {"body": "<p>You left out the type of your second list. Leaving out the type of the first list you can also do this:</p>\n\n<pre><code>ArrayList ar = new ArrayList();\nar.add(Integer.valueOf(42));\nar.add(\"Hello\");\n</code></pre>\n\n<p>The type is only considered on compile time. That's why you might get a warning in eclipse. In byte code the type is not considered and your application runs without an exception.</p>\n", "title": "ArrayList&lt;Integer&gt; takes String", "tags": ["java", "generics", "arraylist", "collections", "raw-types"], "link": "http://stackoverflow.com/questions/29233225/arraylistinteger-takes-string/29233467#29233467", "question_id": 29233225, "answer_id": 29233467}, {"body": "<p>Type safety we can achieve during compilation only. During run time type eraser will erase all these things and it will be a normal byte code, i.e it is same as if we do without generics.</p>\n", "title": "ArrayList&lt;Integer&gt; takes String", "tags": ["java", "generics", "arraylist", "collections", "raw-types"], "link": "http://stackoverflow.com/questions/29233225/arraylistinteger-takes-string/29233592#29233592", "question_id": 29233225, "answer_id": 29233592}, {"body": "<p>This is more about mixing of raw and generic types in Java's type system than it is about type erasure. Let me augment the code fragment from the question:</p>\n\n<pre><code>    ArrayList&lt;Integer&gt; ar = new ArrayList&lt;Integer&gt;();\n    List l = new ArrayList();      // (1)\n    l.add(\"a\");\n    l.add(\"b\");\n    ar.addAll(l);                  // (2)\n    System.out.println(ar);\n    Integer i = ar.get(0);         // (3)\n</code></pre>\n\n<p>With today's erased generics, line (3) throws <code>ClassCastException</code>. If Java's generics were reified, it is easy to <em>assume</em> that runtime type checking would cause an exception to be thrown at line (2). That would be one possible design of reified generics, but other designs might not do that checking. Why not? Mainly for the same reason we have erased generics today: migration compatibility.</p>\n\n<p>Neal Gafter observed in his article <a href=\"http://gafter.blogspot.com/2006/11/reified-generics-for-java.html\"><em>Reified Generics for Java</em></a> that there are a lot of <em>unsafe</em> uses of generics, with improper casts, and so forth. Today, even more than ten years after generics were introduced, I still see a lot of usage of raw types. (Including, unfortunately, here on Stack Overflow.) Unconditionally performing reified generic type checking would break a <strong>huge</strong> amount of code, which of course would be a big blow to compatibility.</p>\n\n<p>Any realistic generic reification proposal would have to provide reification on an opt-in basis, such as via subtyping (as in Gafter's proposal), or via annotations (Gerakios, Biboudis, Smaragdakis. <a href=\"http://yanniss.github.io/reified-gpce13.pdf\"><em>Reified Type Parameters Using Java Annotations.</em></a> [PDF] GPSE 2013.), and it would have to decide how to deal with raw types. It seems wholly impractical to disallow raw types entirely. In turn, allowing raw types effectively means that there is a way to circumvent the generic type system.</p>\n\n<p>(This sort of decision is not undertaken lightly. I've witnessed shouting matches between type theorists, one of whom was complaining that Java's type system is <strong><em>unsound</em></strong>. For a type theorist, this is the most grievous of insults.)</p>\n\n<p>Essentially, that's what this code does: it bypasses the generic type checking goodness by using raw types. Even if Java's generics were reified, checking might not be done at line (2). Under some of the reified generics designs, the code might behave exactly the same as it does today: throwing an exception at line (3).</p>\n\n<p>In <a href=\"http://stackoverflow.com/a/29233449/1441122\">Jon Skeet's answer</a>, he admits to being somewhat surprised that at line (2) the compiler trusts that list <code>l</code> contains elements of the right type. It's not really about trust -- after all, the compiler does issue a warning here. It's more the compiler saying, \"Ok, you're using raw types, you're on your own. If you get a <code>ClassCastException</code> later, it's not my fault.\" Again, though, this is about allowing raw types for compatibility purposes, not erasure.</p>\n", "title": "ArrayList&lt;Integer&gt; takes String", "tags": ["java", "generics", "arraylist", "collections", "raw-types"], "link": "http://stackoverflow.com/questions/29233225/arraylistinteger-takes-string/29247830#29247830", "question_id": 29233225, "answer_id": 29247830}], "creation_date": 1427201720, "score": 32, "link": "http://stackoverflow.com/questions/29233225/arraylistinteger-takes-string", "question_id": 29233225}, {"body": "<p>I've read the documentation, but I still can't get when I should use one or the other: </p>\n\n<ul>\n<li><a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\"><code>OffsetDateTime</code></a></li>\n<li><a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html\"><code>ZonedDateTime</code></a></li>\n</ul>\n\n<p>According to documentation <code>OffsetDateTime</code> should be used when writing date to database, but I don't get why.</p>\n", "tags": ["java", "java-8", "java-time"], "title": "What&#39;s the difference between java 8 ZonedDateTime and OffsetDateTime?", "answers": [{"body": "<p>The javadocs say this:</p>\n\n<blockquote>\n  <p><em>\"<code>OffsetDateTime</code>, <code>ZonedDateTime</code> and <code>Instant</code> all store an instant on the time-line to nanosecond precision. <code>Instant</code> is the simplest, simply representing the instant. <code>OffsetDateTime</code> adds to the instant the offset from UTC/Greenwich, which allows the local date-time to be obtained. <code>ZonedDateTime</code> adds full time-zone rules.\"</em></p>\n</blockquote>\n\n<p>Source: <a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html</a></p>\n\n<p>Thus the difference between <code>OffsetDateTime</code> and <code>ZonedDateTime</code> is that the latter includes the rules that cover daylight saving time adjustments.</p>\n\n<blockquote>\n  <p>OffsetDateTime should be used when writing date to database, but I don't get why.</p>\n</blockquote>\n\n<p>One reason is that dates with local time offsets always represent the same instants in time, and therefore have a stable ordering.  By contrast, the meaning of dates with full timezone information is unstable in the face of adjustments to the rules for the respective timezones.  (And these do happen...)</p>\n\n<p>Dates whose meaning / ordering is unstable are problematic if (for example) you create a database index on a field the date.</p>\n", "title": "What&#39;s the difference between java 8 ZonedDateTime and OffsetDateTime?", "tags": ["java", "java-8", "java-time"], "link": "http://stackoverflow.com/questions/30234594/whats-the-difference-between-java-8-zoneddatetime-and-offsetdatetime/30234992#30234992", "question_id": 30234594, "answer_id": 30234992}], "creation_date": 1431598120, "score": 32, "link": "http://stackoverflow.com/questions/30234594/whats-the-difference-between-java-8-zoneddatetime-and-offsetdatetime", "question_id": 30234594}, {"body": "<p>I am on UBUNTU. JDK version currently installed is:</p>\n\n<pre><code>java version \"1.7.0_51\"\nJava(TM) SE Runtime Environment (build 1.7.0_51-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 24.51-b03, mixed mode)\n</code></pre>\n\n<p>the configuration being installed is:</p>\n\n<pre><code>sudo update-alternatives --config java\nThere is only one alternative in link group java \n(providing /usr/bin/java):     /usr/lib/jvm/java-7-oracle/jre/bin/java\n</code></pre>\n\n<p>I downloaded the latest tar.gz archive of JDK 1.8.</p>\n\n<p>How can I easily install JDK 1.8 from tar.gz overriding/uninstalling the JDK 1.7 currently installed? Or even without explicitly use the tar.gz. </p>\n", "tags": ["java", "linux", "ubuntu", "java-8"], "title": "Moving from JDK 1.7 to JDK 1.8 on Ubuntu", "answers": [{"body": "<p>Just use thoses command lines :</p>\n\n<pre><code>sudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\nsudo apt-get install oracle-java8-installer\n</code></pre>\n\n<p>If needed, you can also follow this <a href=\"http://www.cyberciti.biz/faq/howto-installing-oracle-java7-on-ubuntu-linux/\">ubuntu tutorial</a>.</p>\n\n<p>Hope it helped !</p>\n", "title": "Moving from JDK 1.7 to JDK 1.8 on Ubuntu", "tags": ["java", "linux", "ubuntu", "java-8"], "link": "http://stackoverflow.com/questions/30177455/moving-from-jdk-1-7-to-jdk-1-8-on-ubuntu/30177616#30177616", "question_id": 30177455, "answer_id": 30177616}, {"body": "<p>You can easily install 1.8 via PPA. Which can be done by:</p>\n\n<pre><code>$ sudo add-apt-repository ppa:webupd8team/java\n$ sudo apt-get update\n$ sudo apt-get install oracle-java8-installer\n</code></pre>\n\n<p>Then check the running version:</p>\n\n<pre><code>$ java -version\n</code></pre>\n\n<p>If you must do it manually there's already an answer for that on AskUbuntu <a href=\"http://askubuntu.com/questions/521145/how-to-install-oracle-java-on-ubuntu-14-04\">here</a>.</p>\n", "title": "Moving from JDK 1.7 to JDK 1.8 on Ubuntu", "tags": ["java", "linux", "ubuntu", "java-8"], "link": "http://stackoverflow.com/questions/30177455/moving-from-jdk-1-7-to-jdk-1-8-on-ubuntu/30177650#30177650", "question_id": 30177455, "answer_id": 30177650}, {"body": "<p>This is what I do on debian - I suspect it should work on ubuntu (amend the version as required + adapt the folder where you want to copy the JDK files as you wish, I'm using <code>/opt/jdk</code>):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>wget --header \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u71-b15/jdk-8u71-linux-x64.tar.gz\nsudo mkdir /opt/jdk\nsudo tar -zxf jdk-8u71-linux-x64.tar.gz -C /opt/jdk/\nrm jdk-8u71-linux-x64.tar.gz\n</code></pre>\n\n<p>Then update-alternatives:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>sudo update-alternatives --install /usr/bin/java java /opt/jdk/jdk1.8.0_71/bin/java 1\nsudo update-alternatives --install /usr/bin/javac javac /opt/jdk/jdk1.8.0_71/bin/javac 1\n</code></pre>\n\n<p>Select the number corresponding to the <code>/opt/jdk/jdk1.8.0_71/bin/java</code> when running the following commands:</p>\n\n<pre><code>sudo update-alternatives --config java\nsudo update-alternatives --config javac\n</code></pre>\n\n<p>Finally, verify that the correct version is selected:</p>\n\n<pre><code>java -version\njavac -version\n</code></pre>\n", "title": "Moving from JDK 1.7 to JDK 1.8 on Ubuntu", "tags": ["java", "linux", "ubuntu", "java-8"], "link": "http://stackoverflow.com/questions/30177455/moving-from-jdk-1-7-to-jdk-1-8-on-ubuntu/30184954#30184954", "question_id": 30177455, "answer_id": 30184954}, {"body": "<p>Add the repository and update apt-get:</p>\n\n<pre><code>sudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\n</code></pre>\n\n<p>Install Java8 and set it as default:</p>\n\n<pre><code>sudo apt-get install oracle-java8-set-default\n</code></pre>\n\n<p>Check version:</p>\n\n<pre><code>java -version\n</code></pre>\n", "title": "Moving from JDK 1.7 to JDK 1.8 on Ubuntu", "tags": ["java", "linux", "ubuntu", "java-8"], "link": "http://stackoverflow.com/questions/30177455/moving-from-jdk-1-7-to-jdk-1-8-on-ubuntu/34964743#34964743", "question_id": 30177455, "answer_id": 34964743}, {"body": "<p>You can do the following to install java 8 on your machine. First get the link of <code>tar</code> that you want to install. You can do this by:</p>\n\n<blockquote>\n  <ol>\n  <li>go to java downloads <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" rel=\"nofollow\">page</a> and find the appropriate download.</li>\n  <li>Accept the license agreement and download it. </li>\n  <li>In the download page in your browser right click and <code>copy link address</code>.</li>\n  </ol>\n</blockquote>\n\n<p>Then in your terminal:</p>\n\n<pre><code>$ cd /tmp\n$ wget http://download.oracle.com/otn-pub/java/jdk/8u74-b02/jdk-8u74-linux-x64.tar.gz\\?AuthParam\\=1458001079_a6c78c74b34d63befd53037da604746c\n$ tar xzf jdk-8u74-linux-x64.tar.gz?AuthParam=1458001079_a6c78c74b34d63befd53037da604746c\n$ sudo mv jdk1.8.0_74 /opt\n$ cd /opt/jdk1.8.0_74/\n$ sudo update-alternatives --install /usr/bin/java java /opt/jdk1.8.0_91/bin/java 2\n$ sudo update-alternatives --config java // select version\n$ sudo update-alternatives --install /usr/bin/jar jar /opt/jdk1.8.0_91/bin/jar 2\n$ sudo update-alternatives --install /usr/bin/javac javac /opt/jdk1.8.0_91/bin/javac 2\n$ sudo update-alternatives --set jar /opt/jdk1.8.0_91/bin/jar\n$ sudo update-alternatives --set javac /opt/jdk1.8.0_74/bin/javac\n$ java -version // you should have the updated java\n</code></pre>\n", "title": "Moving from JDK 1.7 to JDK 1.8 on Ubuntu", "tags": ["java", "linux", "ubuntu", "java-8"], "link": "http://stackoverflow.com/questions/30177455/moving-from-jdk-1-7-to-jdk-1-8-on-ubuntu/36000697#36000697", "question_id": 30177455, "answer_id": 36000697}, {"body": "<p><strong>Installing Java 8 on Ubuntu</strong></p>\n\n<p>First you need to add webupd8team Java PPA repository in your system and install Oracle Java 8 using following set of commands.</p>\n\n<pre><code>$ sudo add-apt-repository ppa:webupd8team/java\n$ sudo apt-get update\n$ sudo apt-get install oracle-java8-installer\n</code></pre>\n\n<p><strong>Verify Installed Java Version</strong></p>\n\n<p>After successfully installing oracle Java using above step verify installed version using following command.</p>\n\n<pre><code>rahul@tecadmin:~$ java -version\n\njava version \"1.8.0_101\"\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\n</code></pre>\n\n<p><strong>Configuring Java Environment</strong></p>\n\n<p>In Webupd8 ppa repository also providing a package to set environment variables, Install this package using following command.</p>\n\n<pre><code>$ sudo apt-get install oracle-java8-set-default\n</code></pre>\n", "title": "Moving from JDK 1.7 to JDK 1.8 on Ubuntu", "tags": ["java", "linux", "ubuntu", "java-8"], "link": "http://stackoverflow.com/questions/30177455/moving-from-jdk-1-7-to-jdk-1-8-on-ubuntu/39244027#39244027", "question_id": 30177455, "answer_id": 39244027}], "creation_date": 1431377585, "score": 31, "link": "http://stackoverflow.com/questions/30177455/moving-from-jdk-1-7-to-jdk-1-8-on-ubuntu", "question_id": 30177455}, {"body": "<p>I recently came across this at work. While I am not sure it is really a good idea, I don't understand how static blocks are handled by the compiler.</p>\n\n<p>Here is an example:</p>\n\n<p>Consider that you have classes <code>A</code> and <code>B</code>:</p>\n\n<pre><code>public class A {\n\n    public final static List&lt;Integer&gt; list;\n    static {\n        list = new ArrayList&lt;&gt;();\n    }\n}\n\npublic class B {\n\n    public final static int dependsOnA;\n    static {\n        dependsOnA = A.list.size();\n    }\n}\n</code></pre>\n\n<p>And a main class that just reads <code>B.dependsOnA</code>.</p>\n\n<p>The static block in <code>B</code> is dependent of the one in <code>A</code>, since it uses the <code>list</code> static variable.</p>\n\n<p>Now, the code executes properly and no <code>NullPointerException</code> is raised at runtime. But what is the mechanism that ensures that <code>list</code> is initialized before it is potentially used elsewhere?</p>\n", "tags": ["java", "jvm", "classloader"], "title": "How are object dependencies between static blocks resolved?", "answers": [{"body": "<p>During execution of the <code>static</code> block of <code>B</code>, the runtime encounters <code>A</code> for the first time, and it will invoke the <code>static</code> block of <code>A</code> before it accesses <code>A.list</code>.</p>\n", "title": "How are object dependencies between static blocks resolved?", "tags": ["java", "jvm", "classloader"], "link": "http://stackoverflow.com/questions/30192250/how-are-object-dependencies-between-static-blocks-resolved/30192349#30192349", "question_id": 30192250, "answer_id": 30192349}, {"body": "<p>No matter how you write the code, a <code>static</code> block is a <code>static</code> block and it will execute as part of the JVM loading a class. </p>\n\n<p>When you say <code>B.dependsOnA</code>, <code>B</code> class starts geting loaded by the JVM and the <code>static</code> block in <code>B</code> gets called somewhere during this process. When you say <code>dependsOnA = A.list.size();</code>, class <code>A</code> starts getting loaded by the JVM and the <code>static</code> block in A will execute somewhere during this process which initializes the <code>list</code>. The statment <code>list.size()</code> will only execute after class <code>A</code> has been loaded completely by the JVM. Subsequently, the JVM can only finish loading class <code>B</code>  after the static block in B completes.</p>\n", "title": "How are object dependencies between static blocks resolved?", "tags": ["java", "jvm", "classloader"], "link": "http://stackoverflow.com/questions/30192250/how-are-object-dependencies-between-static-blocks-resolved/30192352#30192352", "question_id": 30192250, "answer_id": 30192352}, {"body": "<p>The \"mechanism\" is the JVM's classloader, which will ensure that a class' initalization blocks are executed (with a global lock across the whole JVM) before returning control flow to where the class was first referenced. It will first load class <code>A</code> only after referenced, in this case when <code>B</code>'s init block references <code>A.list</code>.</p>\n", "title": "How are object dependencies between static blocks resolved?", "tags": ["java", "jvm", "classloader"], "link": "http://stackoverflow.com/questions/30192250/how-are-object-dependencies-between-static-blocks-resolved/30192384#30192384", "question_id": 30192250, "answer_id": 30192384}, {"body": "<p>Here we have some explaination\n<a href=\"http://stackoverflow.com/questions/2943556/static-block-in-java\">Static Block in Java</a></p>\n\n<p>If you call the A class first, the A static is called and A.list exists and will when B will call it.</p>\n\n<p>If you call the B class first, the B static is called, cascading to the A call, calling its static block, where A.list is created.</p>\n\n<p>We could see is its trickiest way:\nB > B.static > A > A.static > A.list exists</p>\n", "title": "How are object dependencies between static blocks resolved?", "tags": ["java", "jvm", "classloader"], "link": "http://stackoverflow.com/questions/30192250/how-are-object-dependencies-between-static-blocks-resolved/30192446#30192446", "question_id": 30192250, "answer_id": 30192446}, {"body": "<p><b>The working is very simple JVM class loader, which will ensure that a class static blocks are executed when the class is first referenced.</b><br/>\n1.If you have executable statements in the static block, JVM will automatically execute these statements when the class is loaded into JVM.<br/>\n2.If you\u2019re referring some static variables/methods from the static blocks, these statements will be executed after the class is loaded into JVM same as above i.e., now the static variables/methods referred and the static block both will be executed.<br/></p>\n", "title": "How are object dependencies between static blocks resolved?", "tags": ["java", "jvm", "classloader"], "link": "http://stackoverflow.com/questions/30192250/how-are-object-dependencies-between-static-blocks-resolved/30192458#30192458", "question_id": 30192250, "answer_id": 30192458}, {"body": "<p>The mechanism is described in detail <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-12.html#jls-12.4.2\">here</a>, but the five most important points are:</p>\n\n<ol>\n<li>Before a class is referenced, it needs to be initialised.</li>\n<li>If initialisation of a class has already begun (or if it's finished), it isn't attempted again.</li>\n<li>Before a class is initialised, all its superclasses and superinterfaces need to be initialised first.</li>\n<li>Static initialisers within a single class are executed in textual order.</li>\n<li>Implemented interfaces are initialised in the order in which they appear in the <code>implements</code> clause.</li>\n</ol>\n\n<p>These rules completely define the order in which static blocks are executed. </p>\n\n<p>Your case is rather simple: before you access <code>B.dependsOnA</code>, <code>B</code> needs to be initialised (rule 1), the static initialiser is then trying to access <code>A.list</code>, which triggers the initialisation of class <code>A</code> (again rule 1).</p>\n\n<p>Note that there's nothing stopping you from creating circular dependencies this way, which will cause interesting things to happen:</p>\n\n<pre><code>public class Bar {\n    public static int X = Foo.X+1;\n\n    public static void main(String[] args) {\n        System.out.println( Bar.X+\" \"+Foo.X); // \n    }\n\n}\n\nclass Foo {\n    public static int X = Bar.X+1;\n}\n</code></pre>\n\n<p>The result here is <code>2 1</code> because the way the initialisation happens is this:</p>\n\n<ol>\n<li><code>Bar</code>s initialisation begins.</li>\n<li><code>Bar.X</code>s initial value is evaluated, which requires initialising <code>Foo</code> first</li>\n<li><code>Foo</code>s initialisation begins.</li>\n<li><code>Foo.X</code>s initial value is evaluated, but since <code>Bar</code>s initialisation is already in progress, it isn't initialised again, <code>Bar.X</code>s \"current\" value is used, which is 0, thus <code>Foo.X</code> is initialised to 1.</li>\n<li>We're back to evaluating <code>Bar.X</code>s value, <code>Foo.X</code> is 1 so <code>Bar.X</code> becomes 2.</li>\n</ol>\n\n<p>This works even if both fields were declared <code>final</code>.</p>\n\n<p>The moral of the story is to be careful with static initialisers referring to other classes in the same library or application (referring to classes in a third party library or standard class library is safe as they won't be referring back to your class).</p>\n", "title": "How are object dependencies between static blocks resolved?", "tags": ["java", "jvm", "classloader"], "link": "http://stackoverflow.com/questions/30192250/how-are-object-dependencies-between-static-blocks-resolved/30192463#30192463", "question_id": 30192250, "answer_id": 30192463}, {"body": "<p>This is the job of the class loader. The class loading in java starts with the <strong>bootstrap</strong> classloader. This class loader first loads all the classes in the standard java library, the <strong>rt.jar</strong>.</p>\n\n<p>Then the <strong>extension</strong> classloader is invoked. This loads all the classes from the extension jar files installed in a JVM ext directory. Now finally the classpath classloader is invoked.</p>\n\n<p>The classpath classloader starts loading classes from the main class, the class that has the main method defined. Once it is loaded, it executes any <strong>static</strong> initializers in that class. While in the execution of the initializer, if it encounters any class that is not loaded, it will pause the execution of the static block, loads the class first, and finally resumes the execution of that static block.</p>\n\n<p>So, there is no chance that any calls to non-loaded classes to occur. Let's see this with your own example, whose code is like this:</p>\n\n<pre><code>class A\n{\n    public final static List&lt;Integer&gt; list;\n    static\n    {\n        System.out.println(\"Loaded Class A\");\n        list = new ArrayList&lt;&gt;();\n    }\n}\n\nclass B\n{\n    public final static int dependsOnA;\n    static\n    {\n        System.out.println(\"Loaded Class B\");\n        dependsOnA = A.list.size();\n    }\n}\n</code></pre>\n\n<p>Here in this example, there is actually no main method, so these classes won't actually be loaded into the memory. Suppose, let's add the following main class to the above code.</p>\n\n<pre><code>class C\n{\n    static\n    {\n        System.out.println(\"Loaded Class C\");\n    }\n\n    public static void main(String[] args)\n    {\n        System.out.println(B.dependsOnA);\n    }\n}\n</code></pre>\n\n<p>Let's see what this would produce in the output: <a href=\"http://ideone.com/pLg3Uh\" rel=\"nofollow\">http://ideone.com/pLg3Uh</a></p>\n\n<pre><code>Loaded Class C\nLoaded Class B\nLoaded Class A\n0\n</code></pre>\n\n<p>That is, first the class C is loaded, because it had the main method. Once it is loaded, the static initializer of class C is invoked. Notice, however, that the main method is invoked after the static block of class C is loaded.</p>\n\n<p>Now the main method, we printed the value of <code>dependsOnA</code> of class B. Now, the class loader stops executing that statement, and loads the class B, and executes it's static block, which in turn, assigns the <code>dependsOnA</code> variable with the value of the number of elements in the list of class A, which is not loaded.</p>\n\n<p>So the class loader jumps from there, loads the class now, and invokes the static block of the class A, and a list is created. Now since there are no more classes to load, the class loader comes back to the static block of class B, and assignment is complete. Now finally, the control is now with the main method, and the value of <code>dependsOnA</code> is printed to the console.</p>\n\n<p>Hope this helps.</p>\n", "title": "How are object dependencies between static blocks resolved?", "tags": ["java", "jvm", "classloader"], "link": "http://stackoverflow.com/questions/30192250/how-are-object-dependencies-between-static-blocks-resolved/30192710#30192710", "question_id": 30192250, "answer_id": 30192710}], "creation_date": 1431437078, "score": 31, "link": "http://stackoverflow.com/questions/30192250/how-are-object-dependencies-between-static-blocks-resolved", "question_id": 30192250}, {"body": "<p>Having some problem with running a grails application in GGTS (eclipse) due to upgrade to Java 1.8. </p>\n\n<p>The stack starts with: </p>\n\n<pre><code>Mar 05, 2015 3:51:31 PM org.springsource.loaded.jvm.JVM copyMethod\nSEVERE: Problems copying method. Incompatible JVM?\njava.lang.reflect.InvocationTargetException\n    at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at org.springsource.loaded.jvm.JVM.copyMethod(JVM.java:134)\n    at org.springsource.loaded.ri.OriginalClassInvoker.createJavaMethod(OriginalClassInvoker.java:68)\n    at org.springsource.loaded.ri.ReflectiveInterceptor.jlClassGetDeclaredMethods(ReflectiveInterceptor.java:151)\n    at org.codehaus.groovy.reflection.CachedClass$3$1.run(CachedClass.java:84)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at org.codehaus.groovy.reflection.CachedClass$3.initValue(CachedClass.java:81)\n...\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1270)\n    at org.codehaus.groovy.grails.cli.support.GrailsStarter.rootLoader(GrailsStarter.java:236)\n    at org.codehaus.groovy.grails.cli.support.GrailsStarter.main(GrailsStarter.java:264)\nCaused by: java.lang.IllegalArgumentException: Can not copy a non-root Method\n    at java.lang.reflect.Method.copy(Method.java:151)\n    ... 280 more\n</code></pre>\n\n<p>I used to run the same application in Java 1.7. My colleagues upgraded to 1.8 and no longer able to run it. </p>\n\n<p>I tested with SUN JDK and now I am on OpenJDK again and that does not help\nCurrent JDK <strong>openjdk version \"1.8.0_40\"</strong></p>\n\n<p>JAVA_HOME, JAVA_PATH and any other variable seems to point to the correct JDK installation. I have removed all the previous (JDK 1.6 &amp; 1.7 from the OS to be sure that there is no reference to them). </p>\n\n<p>For some reason GGTS still complains for a wrong JVM. I understand the error might be related to a compiler 1.7 trying to compile files in the 1.8, but I am not sure where this reference is comming from in eclipse. </p>\n\n<p>My Eclipse installation information lists the following under Java:</p>\n\n<pre><code>-vm\n/usr/lib64/jvm/jre-1.8.0-openjdk/bin/java\neclipse.home.location=file:/home/arb/dev/applications/ggts-3.6.3.SR1/\neclipse.launcher=/home/arb/dev/applications/ggts-3.6.3.SR1/GGTS\neclipse.launcher.name=GGTS\neclipse.p2.data.area=@config.dir/../p2\neclipse.p2.profile=DefaultProfile\neclipse.product=org.springsource.ggts.ide\neclipse.startTime=1425566898624\neclipse.stateSaveDelayInterval=30000\neclipse.vm=/usr/lib64/jvm/jre-1.8.0-openjdk/bin/java\neclipse.vmargs=-Dgrails.console.enable.interactive=false\n-Dgrails.console.enable.terminal=false\n-Djline.terminal=jline.UnsupportedTerminal\n-Dgrails.console.class=grails.build.logging.GrailsEclipseConsole\n-Dosgi.requiredJavaVersion=1.6\n-Xms60m\n-Xmx1024m\n</code></pre>\n", "tags": ["java", "eclipse", "ggts"], "title": "Incompatible JVM in GGTS (Eclipse) and JAVA 1.8", "answers": [{"body": "<p>Version 1.8.0_40  and 1.8.0_45 has breaking updates with grails.\nSpring can not copy non-Root methods.</p>\n\n<p>Since the initial posting a workaround has been developed.</p>\n\n<blockquote>\n  <p>aclement commented on Mar 5\n  Here is the build:\n  <a href=\"http://repo.spring.io/libs-snapshot-local/org/springframework/springloaded/1.2.2.BUILD-SNAPSHOT/springloaded-1.2.2.BUILD-SNAPSHOT.jar\">http://repo.spring.io/libs-snapshot-local/org/springframework/springloaded/1.2.2.BUILD-SNAPSHOT/springloaded-1.2.2.BUILD-SNAPSHOT.jar</a></p>\n  \n  <p>To test it under grails, what I do is go into the grails folder:\n  grails-2.5.0/lib/org.springframework/springloaded/jars</p>\n  \n  <p>I then rename the spring loaded jar that is there and put in a symlink\n  to the jar above. It used to be that you could just modify the\n  startGrails script to point to the new version, but now due to the\n  forking I find you need to do the symlink thing. Or drop that jar into\n  this folder and rename it to match the expectations of grails (rename\n  it from springloaded-1.2.2.BUILD-SNAPSHOT.jar to\n  springloaded-1.2.0.RELEASE.jar)</p>\n</blockquote>\n\n<p>If you want to rollback instead </p>\n\n<p>Grails is natively supported in 1.8.0_25, 1.8.0_31</p>\n\n<p><a href=\"http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html#jdk-8u25-oth-JPR\">http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html#jdk-8u25-oth-JPR</a></p>\n\n<p>Once you have a compatible java version clean your grails project.\nEnsure that your java path variables are set to point to your expected version.</p>\n\n<pre><code>set JAVA_HOME=C:\\java\\jdk1.8.0_25\nset PATH=%JAVA_HOME%\\bin;%PATH%;\n</code></pre>\n", "title": "Incompatible JVM in GGTS (Eclipse) and JAVA 1.8", "tags": ["java", "eclipse", "ggts"], "link": "http://stackoverflow.com/questions/28880781/incompatible-jvm-in-ggts-eclipse-and-java-1-8/28887858#28887858", "question_id": 28880781, "answer_id": 28887858}, {"body": "<p>It's a problem related to jdk8u40, go back to jdku31. It works in that version.\nI'm running into the same problem both in windows and linux environments.</p>\n", "title": "Incompatible JVM in GGTS (Eclipse) and JAVA 1.8", "tags": ["java", "eclipse", "ggts"], "link": "http://stackoverflow.com/questions/28880781/incompatible-jvm-in-ggts-eclipse-and-java-1-8/28887888#28887888", "question_id": 28880781, "answer_id": 28887888}, {"body": "<p>I am running Grails 2.4.3 and also had problems moving from jdk1.8.0_31 to jdk1.8.0_40 and had to go back to jdk1.8.0_31</p>\n\n<pre><code>Loading Grails 2.4.3\n...\nSEVERE: Problems copying method. Incompatible JVM?\njava.lang.reflect.InvocationTargetException\n...\nCaused by: java.lang.IllegalArgumentException: Can not copy a non-root Method\nat java.lang.reflect.Method.copy(Method.java:151)\n</code></pre>\n", "title": "Incompatible JVM in GGTS (Eclipse) and JAVA 1.8", "tags": ["java", "eclipse", "ggts"], "link": "http://stackoverflow.com/questions/28880781/incompatible-jvm-in-ggts-eclipse-and-java-1-8/28903434#28903434", "question_id": 28880781, "answer_id": 28903434}, {"body": "<p>Root cause, work-arounds and news on fixes here:  <a href=\"https://github.com/spring-projects/spring-loaded/issues/98\">https://github.com/spring-projects/spring-loaded/issues/98</a></p>\n", "title": "Incompatible JVM in GGTS (Eclipse) and JAVA 1.8", "tags": ["java", "eclipse", "ggts"], "link": "http://stackoverflow.com/questions/28880781/incompatible-jvm-in-ggts-eclipse-and-java-1-8/28976532#28976532", "question_id": 28880781, "answer_id": 28976532}, {"body": "<p>I updated my springloaded jar to version 1.2.4.BUILD-SNAPSHOT (from 1.2.1) and that resolved the issue.  (Latest version can be found in the <a href=\"http://repo.spring.io/libs-snapshot-local/org/springframework/springloaded/\">Spring repo</a>)</p>\n\n<ol>\n<li>Go to your local Grails lib directory to find springloaded jar. For me that was <code>/usr/local/Cellar/grails/2.4.4/libexec/lib/org.springframework/springloaded/jars/</code></li>\n<li>remove existing 1.2.1 jars (I removed pom file, too, but not necessary)</li>\n<li>download latest springloaded jar and place into the <code>jars</code> subdir:\n<code>wget http://repo.spring.io/libs-snapshot-local/org/springframework/springloaded/1.2.4.BUILD-SNAPSHOT/springloaded-1.2.4.BUILD-SNAPSHOT.jar</code></li>\n</ol>\n\n<p>After doing that, everything works. (Clues used from previous answer: <a href=\"https://github.com/spring-projects/spring-loaded/issues/98\">https://github.com/spring-projects/spring-loaded/issues/98</a>) </p>\n", "title": "Incompatible JVM in GGTS (Eclipse) and JAVA 1.8", "tags": ["java", "eclipse", "ggts"], "link": "http://stackoverflow.com/questions/28880781/incompatible-jvm-in-ggts-eclipse-and-java-1-8/29351759#29351759", "question_id": 28880781, "answer_id": 29351759}, {"body": "<p>From <a href=\"https://github.com/spring-projects/spring-loaded/issues/98\" rel=\"nofollow\">https://github.com/spring-projects/spring-loaded/issues/98</a> and worked to me </p>\n\n<p><code>\nwget repo.spring.io/libs-snapshot-local/org/springframework/springloaded/1.2.3.BUILD-SNAPSHOT/springloaded-1.2.3.BUILD-SNAPSHOT.jar -O ~/.gvm/grails/2.4.4/lib/org.springframework/springloaded/jars/springloaded-1.2.1.RELEASE.jar\n</code></p>\n", "title": "Incompatible JVM in GGTS (Eclipse) and JAVA 1.8", "tags": ["java", "eclipse", "ggts"], "link": "http://stackoverflow.com/questions/28880781/incompatible-jvm-in-ggts-eclipse-and-java-1-8/30735741#30735741", "question_id": 28880781, "answer_id": 30735741}, {"body": "<p>Step 1 : Download this <a href=\"http://repo.spring.io/libs-snapshot-local/org/springframework/springloaded/1.2.2.BUILD-SNAPSHOT/springloaded-1.2.2.BUILD-SNAPSHOT.jar\">jar</a></p>\n\n<p>step 2 : put it into the grails folder: grails-2.4.1/lib/org.springframework/springloaded/jars</p>\n\n<p>should be enough , restart IDE</p>\n", "title": "Incompatible JVM in GGTS (Eclipse) and JAVA 1.8", "tags": ["java", "eclipse", "ggts"], "link": "http://stackoverflow.com/questions/28880781/incompatible-jvm-in-ggts-eclipse-and-java-1-8/33954114#33954114", "question_id": 28880781, "answer_id": 33954114}, {"body": "<p>I thought I should add my two pence worth on this topic. Recently I hit the same issue trying to upgrade an ancient app to 2.4.4. The reason for my post is because all of the above instructions are a little out of date and whilst in most cases it may appear to work. The moment you introduce mysql drivers all of the above mentioned versions of spring loaded hit a new issue around incompatibility and Non-root when attempting to trigger the database.</p>\n\n<p>I got ggts fully working with JDK 1.8_065. To make it work get hold of <a href=\"http://repo.spring.io/release/org/springframework/springloaded/1.2.5.RELEASE/springloaded-1.2.5.RELEASE.jar\" rel=\"nofollow\">springloaded-1.2.5.RELEASE.jar</a> Put this into <code>grails-2.4.4/lib/org.springframework/springloaded/jars/</code> folder. \nWhen you install ggts inside the ggts-bundle folder is grails-2.4.4. So put the file in the above location within the ggts-bundle folder. Unless you have changed configuration.<br>\nRe-launch GGTS \nI spent ages on it and thought I should update the instructions. </p>\n\n<p>Also the other thing that I hit issues around was forking under grails 2.4.4 with my uprade and ended up setting </p>\n\n<pre><code>grails.project.fork = []\n</code></pre>\n\n<p>In my BuildConfig.groovy</p>\n", "title": "Incompatible JVM in GGTS (Eclipse) and JAVA 1.8", "tags": ["java", "eclipse", "ggts"], "link": "http://stackoverflow.com/questions/28880781/incompatible-jvm-in-ggts-eclipse-and-java-1-8/34402846#34402846", "question_id": 28880781, "answer_id": 34402846}, {"body": "<p>Two Step To Make it Work</p>\n\n<p><strong>1. Download JDK Lower Version:</strong>\nInstall jdk1.8.0_25 from link <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html#jdk-8u25-oth-JPR\" rel=\"nofollow\">http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html#jdk-8u25-oth-JPR</a>. It's the lower version of JDK as grails dont support higher version. Maybe They'll include this in latest version soon. </p>\n\n<p><strong>2. Set Up Environment Variables:</strong>\nDon't forget to change the Enviromental variables for jdk, you have to just edit Path Variables and JavaHome Variable from \"C:\\Program Files\\Java\\jdk1.8.0_'LatestVersion'\" to <strong>\"C:\\Program Files\\Java\\jdk1.8.0_25\"</strong> .</p>\n", "title": "Incompatible JVM in GGTS (Eclipse) and JAVA 1.8", "tags": ["java", "eclipse", "ggts"], "link": "http://stackoverflow.com/questions/28880781/incompatible-jvm-in-ggts-eclipse-and-java-1-8/36580872#36580872", "question_id": 28880781, "answer_id": 36580872}, {"body": "<p>Changing the springloaded version in my pom.xml did the trick. </p>\n\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n    &lt;artifactId&gt;springloaded&lt;/artifactId&gt;\n    &lt;version&gt;1.2.6.RELEASE&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n\n<p>When I was experiencing the issue my springloaded version was 1.2.1.RELEASE</p>\n", "title": "Incompatible JVM in GGTS (Eclipse) and JAVA 1.8", "tags": ["java", "eclipse", "ggts"], "link": "http://stackoverflow.com/questions/28880781/incompatible-jvm-in-ggts-eclipse-and-java-1-8/38057846#38057846", "question_id": 28880781, "answer_id": 38057846}], "creation_date": 1425567213, "score": 31, "link": "http://stackoverflow.com/questions/28880781/incompatible-jvm-in-ggts-eclipse-and-java-1-8", "question_id": 28880781}], "quota_max": 300, "page_size": 100, "quota_remaining": 104, "page": 1}