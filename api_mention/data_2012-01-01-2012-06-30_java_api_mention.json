{"items": [{"body": "<p>In Swing, the password field has a <code>getPassword()</code> (returns <code>char[]</code>) method instead of the usual <code>getText()</code> (returns <code>String</code>) method. Similarly, I have come across a suggestion not to use <code>String</code> to handle passwords.</p>\n\n<p>Why does <code>String</code> pose a threat to security when it comes to passwords?\nIt feels inconvenient to use <code>char[]</code>.</p>\n", "title": "Why is char[] preferred over String for passwords in Java?", "tags": ["java", "string", "security", "passwords", "char"], "link": "http://stackoverflow.com/questions/8881291/why-is-char-preferred-over-string-for-passwords-in-java", "post_type": "question", "question_id": 8881291}, {"body": "<p>Say I have a URL </p>\n\n<pre><code>http://example.com/query?q= \n</code></pre>\n\n<p>and I have a query entered by the user such as:</p>\n\n<blockquote>\n  <p>random word \u00a3500 bank $</p>\n</blockquote>\n\n<p>I want the result to be a properly encoded URL:</p>\n\n<pre><code>http://example.com/query?q=random%20word%20%A3500%20bank%20%24\n</code></pre>\n\n<p>What's the best way to achieve this? I tried <code>URLEncoder</code> and creating URI/URL objects but none of them come out quite right.</p>\n", "title": "Java URL encoding of query string parameters", "tags": ["java", "http", "url", "encoding", "urlencode"], "link": "http://stackoverflow.com/questions/10786042/java-url-encoding-of-query-string-parameters", "post_type": "question", "question_id": 10786042}, {"body": "<p>In Java there are the <code>SortedSet</code> and <code>SortedMap</code> interfaces. Both belong to Java's standard Collections framework and provide a sorted way to access the elements. </p>\n\n<p>However, in my understanding there is no <code>SortedList</code> in Java. You can use <code>java.util.Collections.sort()</code> to sort a list.</p>\n\n<p>Any idea why it is designed like that?</p>\n", "title": "Why is there no SortedList in Java?", "tags": ["java", "sorting", "collections"], "link": "http://stackoverflow.com/questions/8725387/why-is-there-no-sortedlist-in-java", "post_type": "question", "question_id": 8725387}, {"body": "<p>We can determine the length of an <code>ArrayList&lt;E&gt;</code> using its public method <code>size()</code>, like</p>\n\n<pre><code>ArrayList&lt;Integer&gt; arr = new ArrayList(10);\nint size = arr.size();\n</code></pre>\n\n<p>Similarly we can determine the length of an <code>Array</code> object using the <code>length</code> property</p>\n\n<pre><code>String[] str = new String[10];\nint size =  str.length;\n</code></pre>\n\n<p>Whereas the <code>size()</code> method of <code>ArrayList</code> is defined inside the <code>ArrayList</code> class, where is this <code>length</code> property of <code>Array</code> defined?</p>\n", "title": "Where is array&#39;s length property defined?", "tags": ["java", "arrays"], "link": "http://stackoverflow.com/questions/9297899/where-is-arrays-length-property-defined", "post_type": "question", "question_id": 9297899}, {"body": "<p>I looked at the default Zip library that comes with the JDK and the Apache compression libs and I am unhappy with them for 3 reasons:</p>\n\n<ol>\n<li><p>They are bloated and have bad API design. I have to <a href=\"http://www.codejava.net/java-se/file-io/programmatically-extract-a-zip-file-using-java\">write 50 lines of boiler plate byte array output, zip input, file out streams and close relevant streams and catch exceptions and move byte buffers on my own</a>? Why can't I have a simple API that looks like this <code>Zipper.unzip(InputStream zipFile, File targetDirectory, String password = null)</code> and <code>Zipper.zip(File targetDirectory, String password = null)</code> that just works?</p></li>\n<li><p>It seems zipping unzipping destroys file meta-data and password handling is broken.</p></li>\n<li><p>Also, all the libraries I tried were 2-3x slow compared to the command line zip tools I get with UNIX?</p></li>\n</ol>\n\n<p>For me (2) and (3) are minor points but I really want a good tested library with a one-line interface.</p>\n", "title": "What is a good Java library to zip/unzip files?", "tags": ["compression", "zip", "unzip", "java"], "link": "http://stackoverflow.com/questions/9324933/what-is-a-good-java-library-to-zip-unzip-files", "post_type": "question", "question_id": 9324933}, {"body": "<p>I am trying to develop a system where there are different nodes that are run on different system or on different ports on the same system. Now all the nodes create a Socket with a target IP as the IP of a special node known as a bootstrapping node. The nodes then create their own <code>ServerSocket</code> and start listening for connections. The bootstrapping node maintains a list of Nodes and returns them on being quired. Now what I need is the node must register its IP to the bootstrapping node. I tried using <code>cli.getInetAddress()</code> once the client connects to the <code>ServerSocket</code> of bootstrapping node but that didn't work.</p>\n\n<ol>\n<li>I need the client to register its PPP IP if available;</li>\n<li>Otherwise the LAN IP if available; </li>\n<li>Otherwise it must register 127.0.0.1 assuming its the same computer.</li>\n</ol>\n\n<p>Please help me with this.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>using the code:</p>\n\n<pre><code>System.out.println(Inet4Address.getLocalHost().getHostAddress());\n</code></pre>\n\n<p>or</p>\n\n<pre><code>System.out.println(InetAddress.getLocalHost().getHostAddress());\n</code></pre>\n\n<p>My PPP Connection IP address is: 117.204.44.192 but the above returns me 192.168.1.2</p>\n\n<p><strong>EDIT2</strong></p>\n\n<p>I am using the following code:</p>\n\n<pre><code>Enumeration e = NetworkInterface.getNetworkInterfaces();\nwhile(e.hasMoreElements())\n{\n    NetworkInterface n = (NetworkInterface) e.nextElement();\n    Enumeration ee = n.getInetAddresses();\n    while (ee.hasMoreElements())\n    {\n        InetAddress i = (InetAddress) ee.nextElement();\n        System.out.println(i.getHostAddress());\n    }\n}\n</code></pre>\n\n<p>I am able to get all the IP addresses associated all <code>NetworkInterface</code>s, but how do I distinguish them??\nThis is the output I am getting:</p>\n\n<pre><code>127.0.0.1\n192.168.1.2\n192.168.56.1\n117.204.44.19\n</code></pre>\n", "title": "Getting the IP address of the current machine using Java", "tags": ["java", "sockets", "ip"], "link": "http://stackoverflow.com/questions/9481865/getting-the-ip-address-of-the-current-machine-using-java", "post_type": "question", "question_id": 9481865}, {"body": "<p>How do atomic / volatile / synchronized work internally?</p>\n\n<p>What is the difference between the following code blocks?</p>\n\n<p>Code 1</p>\n\n<pre><code>private int counter;\n\npublic int getNextUniqueIndex() {\n    return counter++; \n}\n</code></pre>\n\n<p>Code 2</p>\n\n<pre><code>private AtomicInteger counter;\n\npublic int getNextUniqueIndex() {\n    return counter.getAndIncrement();\n}\n</code></pre>\n\n<p>Code 3</p>\n\n<pre><code>private volatile int counter;\n\npublic int getNextUniqueIndex() {\n    return counter++; \n}\n</code></pre>\n\n<hr>\n\n<p>Does <code>volatile</code> work in the following way? Is</p>\n\n<pre><code>volatile int i = 0;\nvoid incIBy5() {\n    i += 5;\n}\n</code></pre>\n\n<p>equivalent to </p>\n\n<pre><code>void incIBy5() {\n    int temp;\n    synchronized(i) { temp = i }\n    synchronized(i) { i = temp + 5 }\n}\n</code></pre>\n\n<p>I think that two threads cannot enter a synchronized block at the same time... am I right? If this is true then how does <code>atomic.incrementAndGet()</code> work without <code>synchronized</code>? And is it thread-safe?</p>\n\n<p>And what is the difference between internal reading and writing to volatile variables / atomic variables? I read in some article that the thread has a local copy of the variables - what is that?</p>\n", "title": "What is the difference between atomic / volatile / synchronized?", "tags": ["java", "multithreading", "synchronization", "atomic", "volatile"], "link": "http://stackoverflow.com/questions/9749746/what-is-the-difference-between-atomic-volatile-synchronized", "post_type": "question", "question_id": 9749746}, {"body": "<p>In Java, what would the fastest way to iterate over all the chars in a String, this:</p>\n\n<pre><code>String str = \"a really, really long string\";\nfor (int i = 0, n = str.length(); i &lt; n; i++) {\n    char c = str.charAt(i);\n}\n</code></pre>\n\n<p>Or this:</p>\n\n<pre><code>char[] chars = str.toCharArray();\nfor (int i = 0, n = chars.length; i &lt; n; i++) {\n    char c = chars[i];\n}\n</code></pre>\n\n<p><strong>EDIT :</strong></p>\n\n<p>What I'd like to know is if the cost of repeatedly calling the <code>charAt</code> method during a long iteration ends up being either less than or greater than the cost of performing a single call to <code>toCharArray</code> at the beginning and then directly accessing the array during the iteration.</p>\n\n<p>It'd be great if someone could provide a robust benchmark for different string lengths, having in mind JIT warm-up time, JVM start-up time, etc. and not just the difference between two calls to <code>System.currentTimeMillis()</code>.</p>\n", "title": "Fastest way to iterate over all the chars in a String", "tags": ["java", "string", "performance", "char", "iteration"], "link": "http://stackoverflow.com/questions/8894258/fastest-way-to-iterate-over-all-the-chars-in-a-string", "post_type": "question", "question_id": 8894258}, {"body": "<p>What's the difference between java.lang.String 's <code>replace()</code> and <code>replaceAll()</code> methods, \nother than later uses regex? For simple substitutions like, replace <code>.</code> with <code>/</code>  , \nis there any difference?</p>\n", "title": "Difference between String replace() and replaceAll()", "tags": ["java", "string", "replace"], "link": "http://stackoverflow.com/questions/10827872/difference-between-string-replace-and-replaceall", "post_type": "question", "question_id": 10827872}, {"body": "<p>Swing components have multiple methods related to updates of screen layout, in particular:</p>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/8/docs/api/java/awt/Container.html#validate--\"><code>validate()</code></a></li>\n<li><a href=\"http://docs.oracle.com/javase/8/docs/api/java/awt/Container.html#invalidate--\"><code>invalidate()</code></a></li>\n<li><a href=\"http://docs.oracle.com/javase/8/docs/api/javax/swing/JComponent.html#revalidate--\"><code>revalidate()</code></a></li>\n</ul>\n\n<p>The Java documentation defines these somewhat from a technical perspective, but it's not particularly clear how they are meant to be used.</p>\n\n<p>What is the difference between these, and in what circumstances should you use one rather than the others?</p>\n", "title": "Difference between validate(), revalidate() and invalidate() in Swing GUI", "tags": ["java", "swing", "user-interface"], "link": "http://stackoverflow.com/questions/9510125/difference-between-validate-revalidate-and-invalidate-in-swing-gui", "post_type": "question", "question_id": 9510125}, {"body": "<ol>\n<li><strong>Strings are immutable</strong> in Java if you store password as plain text it will be available in memory until Garbage collector clears it and since Strings are used in String pool for re-usability there is pretty high chance that it will be remain in memory for long duration, which pose a security threat. Since any one who has access to memory dump can find the password in clear text </li>\n<li><strong>Java recommendation</strong> using <code>getPassword()</code> method of JPasswordField which returns a char[] and deprecated <code>getText()</code> method which returns password in clear text stating security reason. </li>\n<li><p><strong>toString()</strong> there is always a risk of printing plain text in log file or console but if use Array you won't print contents of array instead its memory location get printed. </p>\n\n<pre><code>String strPwd = \"passwd\";\nchar[] charPwd = new char[]{'p','a','s','s','w','d'};\nSystem.out.println(\"String password: \" + strPwd );\nSystem.out.println(\"Character password: \" + charPwd );\n</code></pre>\n\n<blockquote>\n  <p>String password: passwd</p>\n  \n  <p>Character password: [C@110b2345</p>\n</blockquote></li>\n</ol>\n\n<p><strong>Final thoughts:</strong> Though using char[] is not just enough you need to erase content to be more secure. I also suggest working with hash'd or encrypted password instead of plaintext and clearing it from memory as soon as authentication is completed.</p>\n", "title": "Why is char[] preferred over String for passwords in Java?", "tags": ["java", "string", "security", "passwords", "char"], "link": "http://stackoverflow.com/questions/8881291/why-is-char-preferred-over-string-for-passwords-in-java/14060804#14060804", "post_type": "answer", "question_id": 8881291, "answer_id": 14060804}, {"body": "<p>I've got the same on jdk 1.6 32bit, but on java 7 64bit I've go 0 for 0.49999999999999994 rounded is 0 and the last line is not printed. It seems to be VM issue, however, using floating points, you should expect the results to differ a bit on various environments (CPU, 32- or 64-bit mode)</p>\n\n<p>And, when using <code>round</code> or inverting matrixes or etc., this <em>bits</em> can make a huge difference.</p>\n\n<p>x64 output:</p>\n\n<pre><code>10.5 rounded is 11\n10.499999999999998 rounded is 10\n9.5 rounded is 10\n9.499999999999998 rounded is 9\n8.5 rounded is 9\n8.499999999999998 rounded is 8\n7.5 rounded is 8\n7.499999999999999 rounded is 7\n6.5 rounded is 7\n6.499999999999999 rounded is 6\n5.5 rounded is 6\n5.499999999999999 rounded is 5\n4.5 rounded is 5\n4.499999999999999 rounded is 4\n3.5 rounded is 4\n3.4999999999999996 rounded is 3\n2.5 rounded is 3\n2.4999999999999996 rounded is 2\n1.5 rounded is 2\n1.4999999999999998 rounded is 1\n0.5 rounded is 1\n0.49999999999999994 rounded is 0\n</code></pre>\n", "title": "Why does Math.round(0.49999999999999994) return 1", "tags": ["java", "floating-point", "double", "rounding"], "link": "http://stackoverflow.com/questions/9902968/why-does-math-round0-49999999999999994-return-1/9903125#9903125", "post_type": "answer", "question_id": 9902968, "answer_id": 9903125}, {"body": "<p><a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/URLEncoder.html\"><code>URLEncoder</code></a> should be the way to go. You only need to keep in mind to encode <em>only</em> the individual query string parameter name and/or value, not the entire URL, for sure not the query string parameter separator character <code>&amp;</code> nor the parameter name-value separator character <code>=</code>.</p>\n\n<pre><code>String q = \"random word \u00a3500 bank $\";\nString url = \"http://example.com/query?q=\" + URLEncoder.encode(q, \"UTF-8\");\n</code></pre>\n\n<hr>\n\n<p>Note that spaces in query parameters are represented by <code>+</code>, not <code>%20</code>, which is legitimately valid. The <code>%20</code> is usually to be used to represent spaces in URI itself (the part before the URI-query string separator character <code>?</code>), not in query string (the part after <code>?</code>).</p>\n\n<p>Also note that there are two <code>encode()</code> methods. One without charset argument and another with. The one without charset argument is deprecated. Never use it and always specify the charset argument. The <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/URLEncoder.html\">javadoc</a> even explicitly recommends to use the UTF-8 encoding, as mandated by <a href=\"http://tools.ietf.org/html/rfc3986\">RFC3986</a> and <a href=\"http://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars\">W3C</a>.</p>\n\n<blockquote>\n  <p>All other characters are unsafe and are first converted into one or more bytes using some encoding scheme. Then each byte is represented by the 3-character string \"%xy\", where xy is the two-digit hexadecimal representation of the byte. <strong>The recommended encoding scheme to use is UTF-8</strong>. However, for compatibility reasons, if an encoding is not specified, then the default encoding of the platform is used.</p>\n</blockquote>\n\n<h3>See also:</h3>\n\n<ul>\n<li><a href=\"https://www.talisman.org/~erlkonig/misc/lunatech%5Ewhat-every-webdev-must-know-about-url-encoding/\">What every web developer must know about URL encoding</a></li>\n</ul>\n", "title": "Java URL encoding of query string parameters", "tags": ["java", "http", "url", "encoding", "urlencode"], "link": "http://stackoverflow.com/questions/10786042/java-url-encoding-of-query-string-parameters/10786112#10786112", "post_type": "answer", "question_id": 10786042, "answer_id": 10786112}, {"body": "<p>I would not use <code>URLEncoder</code>. Besides being incorrectly named (<code>URLEncoder</code> has nothing to do with URLs), inefficient (it uses a <code>StringBuffer</code> instead of Builder and does a couple of other things that are slow) Its also way too easy to screw it up.</p>\n\n<p>Instead I would use <a href=\"http://stackoverflow.com/questions/444112/how-do-i-encode-uri-parameter-values\"><code>URIBuilder</code> or Spring's <code>URIUtils</code> or Commons Apache <code>HttpClient</code></a>.\nThe reason being you have to escape the query parameters name (ie BalusC's answer <code>q</code>) differently than the parameter value. </p>\n\n<p>The only downside to the above (that I found out painfully) is that <a href=\"http://adamgent.com/post/25161273526/urls-are-not-a-subset-of-uris\">URL's are not a true subset of URI's</a>. </p>\n\n<p><em>Since I'm just linking to other answers I marked this as a community wiki. Feel free to edit.</em></p>\n", "title": "Java URL encoding of query string parameters", "tags": ["java", "http", "url", "encoding", "urlencode"], "link": "http://stackoverflow.com/questions/10786042/java-url-encoding-of-query-string-parameters/16226168#16226168", "post_type": "answer", "question_id": 10786042, "answer_id": 16226168}, {"body": "<p>This simple oneliner works for me<br>\n    <code>String result = new BigInteger(1, inputBytes).toString(16); </code> <br>\nEDIT - Using this will remove the leading zeros, but hey worked for my use-case. Thanks @Voicu for pointing it out</p>\n", "title": "How to convert a byte array to a hex string in Java?", "tags": ["java", "bytearray", "hex"], "link": "http://stackoverflow.com/questions/9655181/how-to-convert-a-byte-array-to-a-hex-string-in-java/13219952#13219952", "post_type": "answer", "question_id": 9655181, "answer_id": 13219952}, {"body": "<p>Use <code>DatatypeConverter.printHexBinary()</code>. You can read its documentation in <a href=\"http://docs.oracle.com/javase/6/docs/api/javax/xml/bind/DatatypeConverter.html\">http://docs.oracle.com/javase/6/docs/api/javax/xml/bind/DatatypeConverter.html</a></p>\n\n<p>For example:</p>\n\n<pre><code>byte bytes[] = {(byte)0, (byte)0, (byte)134, (byte)0, (byte)61};\nSystem.out.println(javax.xml.bind.DatatypeConverter.printHexBinary(bytes));\n</code></pre>\n\n<p>Will result in:</p>\n\n<pre><code>000086003D\n</code></pre>\n\n<p>As you can see this will retrieve the hexadecimal string representing the array of bytes with leading zeros.</p>\n\n<p>This answer is basically the same as in the question <a href=\"http://stackoverflow.com/questions/332079/in-java-how-do-i-convert-a-byte-array-to-a-string-of-hex-digits-while-keeping-l\">In Java, how do I convert a byte array to a string of hex digits while keeping leading zeros?</a></p>\n", "title": "How to convert a byte array to a hex string in Java?", "tags": ["java", "bytearray", "hex"], "link": "http://stackoverflow.com/questions/9655181/how-to-convert-a-byte-array-to-a-hex-string-in-java/21992128#21992128", "post_type": "answer", "question_id": 9655181, "answer_id": 21992128}, {"body": "<p>Use DataTypeConverter class<code>javax.xml.bind.DataTypeConverter</code></p>\n\n<p><code>String hexString = DatatypeConverter.printHexBinary(bytes[] raw);</code></p>\n", "title": "How to convert a byte array to a hex string in Java?", "tags": ["java", "bytearray", "hex"], "link": "http://stackoverflow.com/questions/9655181/how-to-convert-a-byte-array-to-a-hex-string-in-java/37188787#37188787", "post_type": "answer", "question_id": 9655181, "answer_id": 37188787}, {"body": "<p><code>replace()</code> method doesn't uses regex pattern whereas <code>replaceAll()</code> method uses regex pattern. So <code>replace()</code> performs faster than <code>replaceAll()</code>.</p>\n", "title": "Difference between String replace() and replaceAll()", "tags": ["java", "string", "replace"], "link": "http://stackoverflow.com/questions/10827872/difference-between-string-replace-and-replaceall/30749407#30749407", "post_type": "answer", "question_id": 10827872, "answer_id": 30749407}, {"body": "<p>Since all lists are already \"sorted\" by the order the items were added (FIFO ordering), you can \"resort\" them with another ordering, including the natural ordering of elements, using <code>java.util.Collections.sort()</code>.</p>\n\n<p>EDIT:</p>\n\n<p>Lists as data structures are based in what is interesting is the ordering in which the items where inserted.</p>\n\n<p>Sets do not have that information.</p>\n\n<p>If you want to order by addition time, use <code>List</code>. If you want to order by other criteria, use <code>SortedSet</code>.</p>\n", "title": "Why is there no SortedList in Java?", "tags": ["java", "sorting", "collections"], "link": "http://stackoverflow.com/questions/8725387/why-is-there-no-sortedlist-in-java/8725453#8725453", "post_type": "answer", "question_id": 8725387, "answer_id": 8725453}, {"body": "<p>List iterators guarantee first and foremost that you get the list's elements in the internal order of the list (aka. <em>insertion order</em>). More specifically it is in the order you've inserted the elements or on how you've manipulated the list. Sorting can be seen as a manipulation of the data structure, and there are several ways to sort the list.</p>\n\n<p>I'll order the ways in the order of <em>usefulness</em> as I personally see it:</p>\n\n<h2>1. Consider using <code>Set</code> or <code>Bag</code> collections instead</h2>\n\n<p><strong>NOTE:</strong> I put this option at the top because this is what you normally want to do anyway.</p>\n\n<p>A sorted set <strong>automatically sorts the collection at insertion</strong>, meaning that it does the sorting while you add elements into the collection. It also means you don't need to manually sort it.</p>\n\n<p>Furthermore if you are sure that you don't need to worry about (or have) duplicate elements then you can use the <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/TreeSet.html\"><code>TreeSet&lt;T&gt;</code></a> instead. It implements <code>SortedSet</code> and <code>NavigableSet</code> interfaces and works as you'd probably expect from a list:</p>\n\n<pre><code>TreeSet&lt;String&gt; set = new TreeSet&lt;String&gt;();\nset.add(\"lol\");\nset.add(\"cat\");\n// automatically sorts natural order when adding\n\nfor (String s : set) {\n    System.out.println(s);\n}\n// Prints out \"cat\" and \"lol\"\n</code></pre>\n\n<p>If you don't want the natural ordering you can use the constructor parameter that takes a <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Comparator.html\"><code>Comparator&lt;T&gt;</code></a>.</p>\n\n<p>Alternatively you can use <strong><a href=\"http://guava-libraries.googlecode.com/svn/tags/release02/javadoc/com/google/common/collect/Multiset.html\">Multisets</a> (also known as <em>Bags</em>)</strong>, that is a <code>Set</code> that allows duplicate elements, instead and there are third party implementations of them. Most notably from the <a href=\"http://code.google.com/p/guava-libraries/\">Guava libraries</a> there is a <a href=\"http://guava-libraries.googlecode.com/svn/tags/release02/javadoc/com/google/common/collect/TreeMultiset.html\"><code>TreeMultiset</code></a>, that works a lot like the <code>TreeSet</code>.</p>\n\n<h2>2. Sort your list with <code>Collections.sort()</code></h2>\n\n<p>As mentioned above, sorting of <code>List</code>s is an manipulation of the data structure. So for situations where you need \"one source of truth\" that will be sorted in a variety of ways then sorting it manually is the way to go.</p>\n\n<p>You can sort your list with the <a href=\"http://docs.oracle.com/javase/1.4.2/docs/api/java/util/Collections.html#sort%28java.util.List%29\"><code>java.util.Collections.sort()</code></a> method. Here is a code sample on how:</p>\n\n<pre><code>List&lt;String&gt; strings = new ArrayList&lt;String&gt;()\nstrings.add(\"lol\");\nstrings.add(\"cat\");\n\nCollections.sort(strings);\nfor (String s : strings) {\n    System.out.println(s);\n}\n// Prints out \"cat\" and \"lol\"\n</code></pre>\n\n<h3>Using comparators</h3>\n\n<p>One clear benefit is that you may use <a href=\"https://docs.oracle.com/javase/6/docs/api/java/util/Comparator.html\"><code>Comparator</code></a> in the <code>sort</code> method. Java also provides some implementations for the <code>Comparator</code> such as the <a href=\"https://docs.oracle.com/javase/6/docs/api/java/text/Collator.html\"><code>Collator</code></a> which is useful for locale sensitive sorting strings. Here is one example:</p>\n\n<pre><code>Collator usCollator = Collator.getInstance(Locale.US);\nusCollator.setStrength(Collator.PRIMARY); // ignores casing\n\nCollections.sort(strings, usCollator);\n</code></pre>\n\n<h3>Sorting in concurrent environments</h3>\n\n<p>Do note though that using the <code>sort</code> method is not friendly in concurrent environments, since the collection instance will be manipulated, and you should consider using immutable collections instead. This is something Guava provides in the <a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html\"><code>Ordering</code></a> class and is a simple one-liner:</p>\n\n<pre><code>List&lt;string&gt; sorted = Ordering.natural().sortedCopy(strings);\n</code></pre>\n\n<h2>3. Wrap your list with <code>java.util.PriorityQueue</code></h2>\n\n<p>Though there is no sorted list in Java there is however a sorted queue which would probably work just as well for you. It is the <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/PriorityQueue.html\"><code>java.util.PriorityQueue</code></a> class.</p>\n\n<p>Nico Haase linked in the comments to a <a href=\"http://stackoverflow.com/questions/416266/sorted-collection-in-java\">related question</a> that also answers this.</p>\n\n<p>In a sorted collection <strong>you most likely don't want to manipulate</strong> the internal data structure which is why PriorityQueue doesn't implement the List interface (because that would give you direct access to it's elements). </p>\n\n<h3>Caveat on the <code>PriorityQueue</code> iterator</h3>\n\n<p>The <code>PriorityQueue</code> class implements the <code>Iterable&lt;E&gt;</code> and <code>Collection&lt;E&gt;</code> interfaces so it can be iterated as usual. However the iterator is not guaranteed to return elements in the sorted order. Instead (as Alderath points out in the comments) you need to <code>poll()</code> the queue until empty.</p>\n\n<p>Note that you can convert a list to a priority queue via the <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/PriorityQueue.html#PriorityQueue%28java.util.Collection%29\">constructor that takes any collection</a>:</p>\n\n<pre><code>List&lt;String&gt; strings = new ArrayList&lt;String&gt;()\nstrings.add(\"lol\");\nstrings.add(\"cat\");\n\nPriorityQueue&lt;String&gt; sortedStrings = new PriorityQueue(strings);\nwhile(!sortedStrings.isEmpty()) {\n    System.out.println(sortedStrings.poll());\n}\n// Prints out \"cat\" and \"lol\"\n</code></pre>\n\n<h2>4. Write your own <code>SortedList</code> class</h2>\n\n<p><strong>NOTE:</strong> You shouldn't have to do this.</p>\n\n<p>You can write your own List class that sorts each time you add a new element. This can get rather computation heavy depending on your implementation <strong>and is pointless</strong>, unless you want to do it as an exercise, because of two main reasons: </p>\n\n<ol>\n<li>It breaks the contract that <code>List&lt;E&gt;</code> interface has, because the <code>add</code> methods should ensure that the element will reside in the index that the user specifies.</li>\n<li>Why reinvent the wheel? You should be using the TreeSet or Multisets instead as pointed out in the first point above.</li>\n</ol>\n\n<p>However if you want to do it as an exercise here is a code sample to get you started, it uses the <code>AbstractList</code> abstract class: </p>\n\n<pre><code>public class SortedList&lt;E&gt; extends AbstractList&lt;E&gt; {\n\n    private ArrayList&lt;E&gt; internalList = new ArrayList&lt;E&gt;();\n\n    // Note that add(E e) in AbstractList is calling this one\n    @Override \n    public void add(int position, E e) {\n        internalList.add(e);\n        Collections.sort(internalList, null);\n    }\n\n    @Override\n    public E get(int i) {\n        return internalList.get(i);\n    }\n\n    @Override\n    public int size() {\n        return internalList.size();\n    }\n\n}\n</code></pre>\n\n<p>Note that if you haven't overridden the methods you need, then the default implementations from <code>AbstractList</code> will throw <code>UnsupportedOperationException</code>s.</p>\n", "title": "Why is there no SortedList in Java?", "tags": ["java", "sorting", "collections"], "link": "http://stackoverflow.com/questions/8725387/why-is-there-no-sortedlist-in-java/8725470#8725470", "post_type": "answer", "question_id": 8725387, "answer_id": 8725470}, {"body": "<p>Set and Map are non-linear data structure. List is linear data structure.</p>\n\n<p><a href=\"http://i.stack.imgur.com/rsbMd.gif\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/rsbMd.gif\" alt=\"enter image description here\"></a></p>\n\n<hr>\n\n<p>The tree data structure <code>SortedSet</code> and <code>SortedMap</code> interfaces implements  <code>TreeSet</code> and <code>TreeMap</code> respectively using used <a href=\"https://en.wikipedia.org/wiki/Red%E2%80%93black_tree\" rel=\"nofollow\">Red-Black tree</a> implementation algorithm. So it ensure that there are no duplicated items (or keys in case of <code>Map</code>).  </p>\n\n<ul>\n<li>Tree by definition cannot contain duplicates.</li>\n<li>In <code>List</code> we can have duplicates, so there is no <code>TreeList</code>.  </li>\n</ul>\n\n<p>So if we want to sort the list we have to use <code>java.util.Collections.sort()</code>. </p>\n", "title": "Why is there no SortedList in Java?", "tags": ["java", "sorting", "collections"], "link": "http://stackoverflow.com/questions/8725387/why-is-there-no-sortedlist-in-java/34405789#34405789", "post_type": "answer", "question_id": 8725387, "answer_id": 34405789}, {"body": "<p>You could use this one line change: <code>Arrays.asList(set.toArray(new Object[0]))</code></p>\n\n<pre><code>Map&lt;String, List&gt; mainMap = new HashMap&lt;String, List&gt;();\n\nfor(int i=0; i&lt;something.size(); i++){\n  Set set = getSet(...); \n  mainMap.put(differentKeyName, Arrays.asList(set.toArray(new Object[0])));\n}  \n</code></pre>\n", "title": "Convert Set to List without creating new List", "tags": ["java", "performance", "list", "set"], "link": "http://stackoverflow.com/questions/8892360/convert-set-to-list-without-creating-new-list/34404193#34404193", "post_type": "answer", "question_id": 8892360, "answer_id": 34404193}, {"body": "<p><code>validate()</code> : In Swing when you create Component, it is not <code>valid</code> i.e. it's valid property is <code>false</code>. A component is said to be valid, when it's width, height, location and stuff has been determined. This is usually done by calling their <code>validate()</code> method, directly or indirectly. When we call <code>validate()</code> on containers, it will validate the container (if it is invalid) by calling its <code>doLayout()</code> method, which typically will invoke the <code>LayoutManager</code>. Now each child placed on this container will be validated recursively, so that the entire tree will be laid out and will become valid.</p>\n\n<p><code>revalidate()</code> : <code>revalidate()</code> is to be called when you change an attribute that would affect their width/height and call repaint() when you change an attribute that would affect their appearance.\nFor Example, If your <code>JFrame</code> contains a <code>JPanel</code>, now at certain point of time you removed that <code>JPanel</code> and inserted a new one in it's place, depending on the contents of the newly placed <code>JPanel</code>, the size of the components inside the <code>JPanel</code> as well as <code>The CONTAINER</code> itself (by virtue of the layout manager used by it), changes. Which pushes it to the invalidate state. So in order to validate this change, you have to explicitly call <code>revalidate()</code>.</p>\n\n<p><code>invalidate()</code> : This thing is something, I had never used, so might be not much of the info I can give. But seems like the scenario presented above, can give a bit of hint, as to what happens in <code>invalidate()</code>. </p>\n", "title": "Difference between validate(), revalidate() and invalidate() in Swing GUI", "tags": ["java", "swing", "user-interface"], "link": "http://stackoverflow.com/questions/9510125/difference-between-validate-revalidate-and-invalidate-in-swing-gui/9511880#9511880", "post_type": "answer", "question_id": 9510125, "answer_id": 9511880}, {"body": "<p>Simple answer:\nYou can stop a thread INTERNALLY in one of two common ways:</p>\n\n<ul>\n<li>The run method hits a return subroutine.</li>\n<li>Run method finishes, and returns implicitly.</li>\n</ul>\n\n<p>You can also stop threads EXTERNALLY:</p>\n\n<ul>\n<li>Call <code>system.exit</code> (this kills your entire process)</li>\n<li>Call the thread object's <code>interrupt()</code> method *</li>\n<li>See if the thread has an implemented method that sounds like it would work (like <code>kill()</code> or <code>stop()</code>)</li>\n</ul>\n\n<p>*: The expectation is that this is supposed to stop a thread.  However, what the thread actually does when this happens is entirely up to what the developer wrote when they created the thread implementation.</p>\n\n<p>A common pattern you see with run method implementations is a <code>while(boolean){}</code>, where the boolean is typically something named <code>isRunning</code>, it's a member variable of its thread class, it's volatile, and typically accessible by other threads by a setter method of sorts, e.g. <code>kill() { isRunnable=false; }</code>. These subroutines are nice because they allow the thread to release any resources it holds before terminating.</p>\n", "title": "How to properly stop the Thread in Java?", "tags": ["java", "multithreading", "listener"], "link": "http://stackoverflow.com/questions/10961714/how-to-properly-stop-the-thread-in-java/29809440#29809440", "post_type": "answer", "question_id": 10961714, "answer_id": 29809440}, {"body": "<p>No, there is no better way.</p>\n\n<p>Actually you have an error in your pattern. What you want is:</p>\n\n<pre><code>DecimalFormat df = new DecimalFormat(\"#.00\"); \n</code></pre>\n\n<p>Note the <code>\"00\"</code>, meaning <em>exactly</em> two decimal places.</p>\n\n<p>If you use <code>\"#.##\"</code> (<code>#</code> means \"optional\" digit), it will drop trailing zeroes - ie <code>new DecimalFormat(\"#.##\").format(3.0d);</code> prints just <code>\"3\"</code>, not <code>\"3.00\"</code>.</p>\n", "title": "Best way to Format a Double value to 2 Decimal places", "tags": ["java"], "link": "http://stackoverflow.com/questions/8819842/best-way-to-format-a-double-value-to-2-decimal-places/8819889#8819889", "post_type": "answer", "question_id": 8819842, "answer_id": 8819889}, {"body": "<p>You can use <code>java.net.InetAddress</code> API.\nTry this : </p>\n\n<pre><code>InetAddress.getLocalHost().getHostAddress();\n</code></pre>\n", "title": "Getting the IP address of the current machine using Java", "tags": ["java", "sockets", "ip"], "link": "http://stackoverflow.com/questions/9481865/getting-the-ip-address-of-the-current-machine-using-java/9481939#9481939", "post_type": "answer", "question_id": 9481865, "answer_id": 9481939}, {"body": "<p>This could be a bit tricky in the most general case.  </p>\n\n<p>On the face of it, <code>InetAddress.getLocalHost()</code> should give you the IP address of this host.  The problem is that a host could have lots of network interfaces, and an interface could be bound to more than one IP address.  And to top that, not all IP addresses will be reachable outside of your machine or your LAN.  For example, they could be IP addresses for virtual network devices, private network IP addresses, and so on.</p>\n\n<p>What this means is that the IP address returned by <code>InetAddress.getLocalHost()</code> might not be the right one to use.</p>\n\n<p>How can you deal with this?</p>\n\n<ul>\n<li>One approach is to use <code>NetworkInterface.getNetworkInterfaces()</code> to get all of the known network interfaces on the host, and then iterate over each NI's addresses.</li>\n<li>Another approach is to (somehow) get the externally advertized FQDN for the host, and use <code>InetAddress.getByName()</code> to look up the primary IP address.  (But how do you get it, and how do you deal with a DNS-based load balancer?)</li>\n<li>A variation of the previous is to get the preferred FQDN from a config file or a command line parameter.</li>\n<li>Another variation is to get the preferred IP address from a config file or a command line parameter.</li>\n</ul>\n\n<p>In summary, <code>InetAddress.getLocalHost()</code> will typically work, but you may need to provide an alternative method for the cases where your code is run in an environment with \"complicated\" networking.</p>\n\n<hr>\n\n<blockquote>\n  <p>I am able to get all the IP addresses associated all Network Interfaces, but how do i distinguish them?</p>\n</blockquote>\n\n<ul>\n<li>Any address in the range 127.xxx.xxx.xxx is a \"loopback\" address.  It is only visible to \"this\" host.</li>\n<li>Any address in the range 192.168.xxx.xxx is a private (aka site local) IP address.  These are reserved for use within an organization.  The same applies to 10.xxx.xxx.xxx addresses, and 172.16.xxx.xxx through 172.31.xxx.xxx.</li>\n<li>Addresses in the range 169.254.xxx.xxx are link local IP addresses.  These are reserved for use on a single network segment.</li>\n<li>Addresses in the range 224.xxx.xxx.xxx through 239.xxx.xxx.xxx are multicast addresses.</li>\n<li>The address 255.255.255.255 is the broadcast address.</li>\n<li>Anything else <em>should</em> be a valid public point-to-point IPv4 address.</li>\n</ul>\n\n<p>In fact, the InetAddress API provides methods for testing for loopback, link local, site local, multicast and broadcast addresses.  You can use these to sort out which of the IP addresses you get back is most appropriate.</p>\n", "title": "Getting the IP address of the current machine using Java", "tags": ["java", "sockets", "ip"], "link": "http://stackoverflow.com/questions/9481865/getting-the-ip-address-of-the-current-machine-using-java/9482369#9482369", "post_type": "answer", "question_id": 9481865, "answer_id": 9482369}, {"body": "<p>It's a  famous problem: <code>.equals()</code> for arrays is badly broken, just don't use it, ever.</p>\n\n<p>That said, it's not \"broken\" as in \"someone has done it in a really wrong way\" \u2014 it's just doing what's defined and not what's usually expected. So for purists: it's perfectly fine, and that also means, <em>don't use it, ever.</em></p>\n\n<p>Now the expected behaviour for <code>equals</code> is to compare data. The default behaviour is to compare the identity, as <code>Object</code> does not have any data (for purists: yes it has, but it's not the point); assumption is, if you need <code>equals</code> in subclasses, you'll implement it. In arrays, there's no implementation for you, so you're not supposed to use it.</p>\n\n<p>So the difference is, <code>Arrays.equals(array1, array2)</code> works <em>as you would expect</em> (i.e. compares content), <code>array1.equals(array2)</code> falls back to <code>Object.equals</code> implementation, which in turn compares identity, and thus better replaced by <code>==</code> (for purists: yes I know about <code>null</code>).</p>\n\n<p>Problem is, even <code>Arrays.equals(array1, array2)</code> will bite you hard if elements of array do not implement <code>equals</code> properly. It's a very naive statement, I know, but there's a very important less-than-obvious case: consider a 2D array. </p>\n\n<p>2D array in Java is an array of arrays, and arrays' <code>equals</code> is broken (or useless if you prefer), so <code>Arrays.equals(array1, array2)</code> will not work as you expect on 2D arrays.</p>\n\n<p>Hope that helps.</p>\n", "title": "equals vs Arrays.equals in Java", "tags": ["java", "arrays", "equality"], "link": "http://stackoverflow.com/questions/8777257/equals-vs-arrays-equals-in-java/8777266#8777266", "post_type": "answer", "question_id": 8777257, "answer_id": 8777266}, {"body": "<p>The <code>equals()</code> of arrays is inherited from <code>Object</code>, so it does not look at the contents of the arrrays, it only considers each array equal to itself.</p>\n\n<p>The <code>Arrays.equals()</code> methods <em>do</em> compare the arrays' contents. There's overloads for all primitive types, and the one for objects uses the objects' own <code>equals()</code> methods.</p>\n", "title": "equals vs Arrays.equals in Java", "tags": ["java", "arrays", "equality"], "link": "http://stackoverflow.com/questions/8777257/equals-vs-arrays-equals-in-java/8777292#8777292", "post_type": "answer", "question_id": 8777257, "answer_id": 8777292}, {"body": "<p>The <code>Arrays.equals(array1, array2)</code> : </p>\n\n<p>check if both arrays contain the same number of elements, and all corresponding pairs of elements in the two arrays are equal.</p>\n\n<p>The <code>array1.equals(array2)</code> :</p>\n\n<p>compare the object to another object and return true only if the reference of the two object are equal as in the <code>Object.equals()</code></p>\n", "title": "equals vs Arrays.equals in Java", "tags": ["java", "arrays", "equality"], "link": "http://stackoverflow.com/questions/8777257/equals-vs-arrays-equals-in-java/8777311#8777311", "post_type": "answer", "question_id": 8777257, "answer_id": 8777311}, {"body": "<p>You are specifically asking about how they <em>internally work</em>, so here you are:</p>\n\n<h1>No synchronization</h1>\n\n<pre><code>private int counter;\n\npublic int getNextUniqueIndex() {\n  return counter++; \n}\n</code></pre>\n\n<p>It basically reads value from memory, increments it and puts back to memory. This works in single thread but nowadays, in the era of multi-core, multi-CPU, multi-level caches it won't work correctly. First of all it introduces race condition (several threads can read the value at the same time), but also visibility problems. The value might only be stored in \"<em>local</em>\" CPU memory (some cache) and not be visible for other CPUs/cores (and thus - threads). This is why many refer to <em>local copy</em> of a variable in a thread. It is very unsafe. Consider this popular but broken thread-stopping code:</p>\n\n<pre><code>private boolean stopped;\n\npublic void run() {\n    while(!stopped) {\n        //do some work\n    }\n}\n\npublic void pleaseStop() {\n    stopped = true;\n}\n</code></pre>\n\n<p>Add <code>volatile</code> to <code>stopped</code> variable and it works fine - if any other thread modifies <code>stopped</code> variable via <code>pleaseStop()</code> method, you are guaranteed to see that change immediately in working thread's <code>while(!stopped)</code> loop. BTW this is not a good way to interrupt a thread either, see: <a href=\"http://stackoverflow.com/questions/6410721\">How to stop a thread that is running forever without any use</a> and <a href=\"http://stackoverflow.com/questions/7786305\">Stopping a specific java thread</a>.</p>\n\n<h1><code>AtomicInteger</code></h1>\n\n<pre><code>private AtomicInteger counter = new AtomicInteger();\n\npublic int getNextUniqueIndex() {\n  return counter.getAndIncrement();\n}\n</code></pre>\n\n<p>The <code>AtomicInteger</code> class uses CAS (<a href=\"http://en.wikipedia.org/wiki/Compare-and-swap\">compare-and-swap</a>) low-level CPU operations (no synchronization needed!) They allow you to modify a particular variable only if the present value is equal to something else (and is returned successfully). So when you execute <code>getAndIncrement()</code> it actually runs in a loop (simplified real implementation):</p>\n\n<pre><code>int current;\ndo {\n  current = get();\n} while(!compareAndSet(current, current + 1));\n</code></pre>\n\n<p>So basically: read; try to store incremented value; if not successful (the value is no longer equal to <code>current</code>), read and try again. The <code>compareAndSet()</code> is implemented in native code (assembly).</p>\n\n<h1><code>volatile</code> without synchronization</h1>\n\n<pre><code>private volatile int counter;\n\npublic int getNextUniqueIndex() {\n  return counter++; \n}\n</code></pre>\n\n<p>This code is not correct. It fixes the visibility issue (<code>volatile</code> makes sure other threads can see change made to <code>counter</code>) but still has a race condition. This has been <a href=\"http://stackoverflow.com/questions/25168062/why-is-i-not-atomic\">explained</a> multiple times: pre/post-incrementation is not atomic.</p>\n\n<p>The only side effect of <code>volatile</code> is \"<em>flushing</em>\" caches so that all other parties see the freshest version of the data. This is too strict in most situations; that is why <code>volatile</code> is not default.</p>\n\n<h1><code>volatile</code> without synchronization (2)</h1>\n\n<pre><code>volatile int i = 0;\nvoid incIBy5() {\n  i += 5;\n}\n</code></pre>\n\n<p>The same problem as above, but even worse because <code>i</code> is not <code>private</code>. The race condition is still present. Why is it a problem? If, say, two threads run this code simultaneously, the output might be <code>+ 5</code> or <code>+ 10</code>. However, you are guaranteed to see the change.</p>\n\n<h1>Multiple independent <code>synchronized</code></h1>\n\n<pre><code>void incIBy5() {\n  int temp;\n  synchronized(i) { temp = i }\n  synchronized(i) { i = temp + 5 }\n}\n</code></pre>\n\n<p>Surprise, this code is incorrect as well. In fact, it is completely wrong. First of all you are synchronizing on <code>i</code>, which is about to be changed (moreover, <code>i</code> is a primitive, so I guess you are synchronizing on a temporary <code>Integer</code> created via autoboxing...) Completely flawed. You could also write:</p>\n\n<pre><code>synchronized(new Object()) {\n  //thread-safe, SRSLy?\n}\n</code></pre>\n\n<p>No two threads can enter the same <code>synchronized</code> block <strong>with the same lock</strong>. In this case (and similarly in your code) the lock object changes upon every execution, so <code>synchronized</code> effectively has no effect.</p>\n\n<p>Even if you have used a final variable (or <code>this</code>) for synchronization, the code is still incorrect. Two threads can first read <code>i</code> to <code>temp</code> synchronously (having the same value locally in <code>temp</code>), then the first assigns a new value to <code>i</code> (say, from 1 to 6) and the other one does the same thing (from 1 to 6).</p>\n\n<p>The synchronization must span from reading to assigning a value. Your first synchronization has no effect (reading an <code>int</code> is atomic) and the second as well. In my opinion, these are the correct forms:</p>\n\n<pre><code>void synchronized incIBy5() {\n  i += 5 \n}\n\nvoid incIBy5() {\n  synchronized(this) {\n    i += 5 \n  }\n}\n\nvoid incIBy5() {\n  synchronized(this) {\n    int temp = i;\n    i = temp + 5;\n  }\n}\n</code></pre>\n", "title": "What is the difference between atomic / volatile / synchronized?", "tags": ["java", "multithreading", "synchronization", "atomic", "volatile"], "link": "http://stackoverflow.com/questions/9749746/what-is-the-difference-between-atomic-volatile-synchronized/9749864#9749864", "post_type": "answer", "question_id": 9749746, "answer_id": 9749864}, {"body": "<p>This is just micro-optimisation that you shouldn't worry about.</p>\n\n<pre><code>char[] chars = str.toCharArray();\n</code></pre>\n\n<p>returns you a copy of <code>str</code> character arrays (in JDK, it returns a copy of characters by calling <code>System.arrayCopy</code>).</p>\n\n<p>Other than that, <code>str.charAt()</code> only checks if the index is indeed in bounds and returns a character within the array index.</p>\n\n<p>The first one doesn't create additional memory in JVM.</p>\n", "title": "Fastest way to iterate over all the chars in a String", "tags": ["java", "string", "performance", "char", "iteration"], "link": "http://stackoverflow.com/questions/8894258/fastest-way-to-iterate-over-all-the-chars-in-a-string/8894384#8894384", "post_type": "answer", "question_id": 8894258, "answer_id": 8894384}]}